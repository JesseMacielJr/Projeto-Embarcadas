Version 4.0 HI-TECH Software Intermediate Code
"15 ./lcd.h
[; ;./lcd.h: 15: void lcd_cmd(unsigned char val);
[v _lcd_cmd `(v ~T0 @X0 0 ef1`uc ]
"17
[; ;./lcd.h: 17: void lcd_str(const char* str);
[v _lcd_str `(v ~T0 @X0 0 ef1`*Cuc ]
"8 ./teclado.h
[; ;./teclado.h: 8:     unsigned char tc_tecla(unsigned int timeout);
[v _tc_tecla `(uc ~T0 @X0 0 ef1`ui ]
"16 ./lcd.h
[; ;./lcd.h: 16: void lcd_dat(unsigned char val);
[v _lcd_dat `(v ~T0 @X0 0 ef1`uc ]
"4 ./delay.h
[; ;./delay.h: 4: void atraso_ms(int t);
[v _atraso_ms `(v ~T0 @X0 0 ef1`i ]
"113 D:\Programs\Microship\xc8\v2.20\pic\include\c99\stdio.h
[v _sprintf `(i ~T0 @X0 0 e1v`*uc`*Cuc ]
"26 ./pwm.h
[; ;./pwm.h: 26:  void pwmInit(void);
[v _pwmInit `(v ~T0 @X0 0 ef ]
"23
[; ;./pwm.h: 23:  void pwmSet1(unsigned char porcento);
[v _pwmSet1 `(v ~T0 @X0 0 ef1`uc ]
"9 encher.c
[; ;encher.c: 9: void encher_tanque(double *vol) {
[v _encher_tanque `(v ~T0 @X0 1 ef1`*d ]
{
[e :U _encher_tanque ]
[v _vol `*d ~T0 @X0 1 r1 ]
[f ]
"12
[; ;encher.c: 12:     lcd_cmd(0x01);
[e ( _lcd_cmd (1 -> -> 1 `i `uc ]
"13
[; ;encher.c: 13:     lcd_cmd(0x80);
[e ( _lcd_cmd (1 -> -> 128 `i `uc ]
"14
[; ;encher.c: 14:     lcd_str("Quant(L): ");
[e ( _lcd_str (1 :s 1C ]
"15
[; ;encher.c: 15:     lcd_cmd(0xC0);
[e ( _lcd_cmd (1 -> -> 192 `i `uc ]
"16
[; ;encher.c: 16:     lcd_str("# - Voltar");
[e ( _lcd_str (1 :s 2C ]
"17
[; ;encher.c: 17:     lcd_cmd(0x80 + 10);
[e ( _lcd_cmd (1 -> + -> 128 `i -> 10 `i `uc ]
"19
[; ;encher.c: 19:     unsigned int incremento;
[v _incremento `ui ~T0 @X0 1 a ]
"21
[; ;encher.c: 21:     unsigned int i = 0;
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
"22
[; ;encher.c: 22:     unsigned int num[2];
[v _num `ui ~T0 @X0 -> 2 `i a ]
"23
[; ;encher.c: 23:     unsigned char tmp;
[v _tmp `uc ~T0 @X0 1 a ]
"25
[; ;encher.c: 25:     (*(volatile __near unsigned char*)0xF93) = 0xF8;
[e = *U -> -> 3987 `i `*VNuc -> -> 248 `i `uc ]
"27
[; ;encher.c: 27:     while (i != 2) {
[e $U 4  ]
[e :U 5 ]
{
"28
[; ;encher.c: 28:         (*(volatile __near unsigned char*)0xF95) = 0x0F;
[e = *U -> -> 3989 `i `*VNuc -> -> 15 `i `uc ]
"29
[; ;encher.c: 29:         tmp = tc_tecla(0) + 0x30;
[e = _tmp -> + -> ( _tc_tecla (1 -> -> 0 `i `ui `i -> 48 `i `uc ]
"30
[; ;encher.c: 30:         (*(volatile __near unsigned char*)0xF95) = 0x00;
[e = *U -> -> 3989 `i `*VNuc -> -> 0 `i `uc ]
"31
[; ;encher.c: 31:         lcd_dat(tmp);
[e ( _lcd_dat (1 _tmp ]
"32
[; ;encher.c: 32:         if (tmp >= 0x3C) {
[e $ ! >= -> _tmp `i -> 60 `i 7  ]
{
"33
[; ;encher.c: 33:             return;
[e $UE 3  ]
"34
[; ;encher.c: 34:         } else if (i == 0) {
}
[e $U 8  ]
[e :U 7 ]
[e $ ! == _i -> -> 0 `i `ui 9  ]
{
"35
[; ;encher.c: 35:             num[i] = (tmp - '0')*10;
[e = *U + &U _num * -> _i `ux -> -> # *U &U _num `ui `ux * - -> _tmp `ui -> 48 `ui -> -> 10 `i `ui ]
"36
[; ;encher.c: 36:         } else {
}
[e $U 10  ]
[e :U 9 ]
{
"37
[; ;encher.c: 37:             num[i] = (tmp - '0');
[e = *U + &U _num * -> _i `ux -> -> # *U &U _num `ui `ux - -> _tmp `ui -> 48 `ui ]
"38
[; ;encher.c: 38:         }
}
[e :U 10 ]
[e :U 8 ]
"39
[; ;encher.c: 39:         i++;
[e ++ _i -> -> 1 `i `ui ]
"40
[; ;encher.c: 40:     }
}
[e :U 4 ]
"27
[; ;encher.c: 27:     while (i != 2) {
[e $ != _i -> -> 2 `i `ui 5  ]
[e :U 6 ]
"42
[; ;encher.c: 42:     (*(volatile __near unsigned char*)0xF92) = 0x20;
[e = *U -> -> 3986 `i `*VNuc -> -> 32 `i `uc ]
"43
[; ;encher.c: 43:     (*(volatile __near unsigned char*)0xF93) = 0x3F;
[e = *U -> -> 3987 `i `*VNuc -> -> 63 `i `uc ]
"45
[; ;encher.c: 45:     atraso_ms(500);
[e ( _atraso_ms (1 -> 500 `i ]
"46
[; ;encher.c: 46:     lcd_cmd(0x01);
[e ( _lcd_cmd (1 -> -> 1 `i `uc ]
"48
[; ;encher.c: 48:     incremento = num[0] + num[1];
[e = _incremento + *U + &U _num * -> -> -> 0 `i `ui `ux -> -> # *U &U _num `ui `ux *U + &U _num * -> -> -> 1 `i `ui `ux -> -> # *U &U _num `ui `ux ]
"50
[; ;encher.c: 50:     if (*vol + incremento > 70) {
[e $ ! > + *U _vol -> _incremento `d -> -> 70 `i `d 11  ]
{
"53
[; ;encher.c: 53:         lcd_cmd(0x01);
[e ( _lcd_cmd (1 -> -> 1 `i `uc ]
"54
[; ;encher.c: 54:         lcd_cmd(0x80);
[e ( _lcd_cmd (1 -> -> 128 `i `uc ]
"55
[; ;encher.c: 55:         lcd_str("ERRO: vol > MAX");
[e ( _lcd_str (1 :s 3C ]
"56
[; ;encher.c: 56:         lcd_cmd(0xC0);
[e ( _lcd_cmd (1 -> -> 192 `i `uc ]
"57
[; ;encher.c: 57:         lcd_str("# - Voltar");
[e ( _lcd_str (1 :s 4C ]
"60
[; ;encher.c: 60:         (((*(volatile __near unsigned char*)0xF94)) |= (1<<1));
[e =| *U -> -> 3988 `i `*VNuc -> << -> 1 `i -> 1 `i `uc ]
"63
[; ;encher.c: 63:     } else {
}
[e $U 12  ]
[e :U 11 ]
{
"65
[; ;encher.c: 65:         *vol += incremento;
[e =+ *U _vol -> _incremento `d ]
"66
[; ;encher.c: 66:         char y[8];
[v _y `uc ~T0 @X0 -> 8 `i a ]
"67
[; ;encher.c: 67:         sprintf(y, "%.1f", *vol);
[e ( _sprintf (1 , (. , &U _y :s 5C *U _vol ]
"68
[; ;encher.c: 68:         lcd_str(y);
[e ( _lcd_str (1 -> &U _y `*Cuc ]
"69
[; ;encher.c: 69:         lcd_str(" L");
[e ( _lcd_str (1 :s 6C ]
"70
[; ;encher.c: 70:         atraso_ms(500);
[e ( _atraso_ms (1 -> 500 `i ]
"73
[; ;encher.c: 73:         unsigned int i = 0, potencia = 100, t1, t2, tempo = incremento / 2;
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[v _potencia `ui ~T0 @X0 1 a ]
[e = _potencia -> -> 100 `i `ui ]
[v _t1 `ui ~T0 @X0 1 a ]
[v _t2 `ui ~T0 @X0 1 a ]
[v _tempo `ui ~T0 @X0 1 a ]
[e = _tempo / _incremento -> -> 2 `i `ui ]
"74
[; ;encher.c: 74:         float porcento;
[v _porcento `f ~T0 @X0 1 a ]
[v F356 `i ~T0 @X0 -> 10 `i s ]
[i F356
:U ..
"75
[; ;encher.c: 75:         int numeros[10] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D,
-> 63 `i
-> 6 `i
-> 91 `i
-> 79 `i
-> 102 `i
-> 109 `i
-> 125 `i
-> 7 `i
-> 127 `i
-> 111 `i
..
]
[v _numeros `i ~T0 @X0 -> 10 `i a ]
[e = _numeros F356 ]
"78
[; ;encher.c: 78:         (*(volatile __near unsigned char*)0xF92) = 0x00;
[e = *U -> -> 3986 `i `*VNuc -> -> 0 `i `uc ]
"80
[; ;encher.c: 80:         lcd_cmd(0x01);
[e ( _lcd_cmd (1 -> -> 1 `i `uc ]
"81
[; ;encher.c: 81:         lcd_cmd(0x80);
[e ( _lcd_cmd (1 -> -> 128 `i `uc ]
"82
[; ;encher.c: 82:         lcd_str("Enchendo...");
[e ( _lcd_str (1 :s 7C ]
"83
[; ;encher.c: 83:         lcd_cmd(0xC0);
[e ( _lcd_cmd (1 -> -> 192 `i `uc ]
"84
[; ;encher.c: 84:         lcd_str("Aguarde!");
[e ( _lcd_str (1 :s 8C ]
"86
[; ;encher.c: 86:         pwmInit();
[e ( _pwmInit ..  ]
"89
[; ;encher.c: 89:         t1 = tempo / 10;
[e = _t1 / _tempo -> -> 10 `i `ui ]
"90
[; ;encher.c: 90:         t2 = tempo % 10;
[e = _t2 % _tempo -> -> 10 `i `ui ]
"91
[; ;encher.c: 91:         while ((t1 != 0) || (t2 != 0)) {
[e $U 13  ]
[e :U 14 ]
{
"96
[; ;encher.c: 96:             porcento = ((((float) t1 * 10.0) + (float) t2) / (float) tempo);
[e = _porcento -> / + * -> -> _t1 `f `d .10.0 -> -> _t2 `f `d -> -> _tempo `f `d `f ]
"97
[; ;encher.c: 97:             potencia = 100 * porcento;
[e = _potencia -> * -> -> 100 `i `f _porcento `ui ]
"98
[; ;encher.c: 98:             if (potencia == 100) {
[e $ ! == _potencia -> -> 100 `i `ui 16  ]
{
"99
[; ;encher.c: 99:                 potencia = 99;
[e = _potencia -> -> 99 `i `ui ]
"100
[; ;encher.c: 100:             }
}
[e :U 16 ]
"101
[; ;encher.c: 101:             pwmSet1(potencia);
[e ( _pwmSet1 (1 -> _potencia `uc ]
"104
[; ;encher.c: 104:             (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
[e =& *U -> -> 3968 `i `*VNuc -> ~ << -> 1 `i -> 5 `i `uc ]
"105
[; ;encher.c: 105:             (((*(volatile __near unsigned char*)0xF80)) |= (1<<4));
[e =| *U -> -> 3968 `i `*VNuc -> << -> 1 `i -> 4 `i `uc ]
"106
[; ;encher.c: 106:             (*(volatile __near unsigned char*)0xF83) = numeros[t1];
[e = *U -> -> 3971 `i `*VNuc -> *U + &U _numeros * -> _t1 `ux -> -> # *U &U _numeros `ui `ux `uc ]
"107
[; ;encher.c: 107:             atraso_ms(5);
[e ( _atraso_ms (1 -> 5 `i ]
"108
[; ;encher.c: 108:             (((*(volatile __near unsigned char*)0xF80)) |= (1<<5));
[e =| *U -> -> 3968 `i `*VNuc -> << -> 1 `i -> 5 `i `uc ]
"109
[; ;encher.c: 109:             (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<4));
[e =& *U -> -> 3968 `i `*VNuc -> ~ << -> 1 `i -> 4 `i `uc ]
"110
[; ;encher.c: 110:             (*(volatile __near unsigned char*)0xF83) = numeros[t2];
[e = *U -> -> 3971 `i `*VNuc -> *U + &U _numeros * -> _t2 `ux -> -> # *U &U _numeros `ui `ux `uc ]
"111
[; ;encher.c: 111:             atraso_ms(5);
[e ( _atraso_ms (1 -> 5 `i ]
"113
[; ;encher.c: 113:             if (i == 40) {
[e $ ! == _i -> -> 40 `i `ui 17  ]
{
"114
[; ;encher.c: 114:                 i = 0;
[e = _i -> -> 0 `i `ui ]
"115
[; ;encher.c: 115:                 if (t2 == 0) {
[e $ ! == _t2 -> -> 0 `i `ui 18  ]
{
"116
[; ;encher.c: 116:                     t1--;
[e -- _t1 -> -> 1 `i `ui ]
"117
[; ;encher.c: 117:                     t2 = 9;
[e = _t2 -> -> 9 `i `ui ]
"118
[; ;encher.c: 118:                 } else {
}
[e $U 19  ]
[e :U 18 ]
{
"119
[; ;encher.c: 119:                     t2--;
[e -- _t2 -> -> 1 `i `ui ]
"120
[; ;encher.c: 120:                 }
}
[e :U 19 ]
"121
[; ;encher.c: 121:             } else {
}
[e $U 20  ]
[e :U 17 ]
{
"122
[; ;encher.c: 122:                 i++;
[e ++ _i -> -> 1 `i `ui ]
"123
[; ;encher.c: 123:             }
}
[e :U 20 ]
"124
[; ;encher.c: 124:         }
}
[e :U 13 ]
"91
[; ;encher.c: 91:         while ((t1 != 0) || (t2 != 0)) {
[e $ || != _t1 -> -> 0 `i `ui != _t2 -> -> 0 `i `ui 14  ]
[e :U 15 ]
"125
[; ;encher.c: 125:         pwmSet1(0);
[e ( _pwmSet1 (1 -> -> 0 `i `uc ]
"128
[; ;encher.c: 128:         (((*(volatile __near unsigned char*)0xF94)) |= (1<<1));
[e =| *U -> -> 3988 `i `*VNuc -> << -> 1 `i -> 1 `i `uc ]
"131
[; ;encher.c: 131:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
[e =& *U -> -> 3968 `i `*VNuc -> ~ << -> 1 `i -> 5 `i `uc ]
"132
[; ;encher.c: 132:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<4));
[e =& *U -> -> 3968 `i `*VNuc -> ~ << -> 1 `i -> 4 `i `uc ]
"135
[; ;encher.c: 135:         lcd_cmd(0x01);
[e ( _lcd_cmd (1 -> -> 1 `i `uc ]
"136
[; ;encher.c: 136:         lcd_cmd(0x80);
[e ( _lcd_cmd (1 -> -> 128 `i `uc ]
"137
[; ;encher.c: 137:         lcd_str("    SUCESSO!");
[e ( _lcd_str (1 :s 9C ]
"138
[; ;encher.c: 138:         lcd_cmd(0xC0);
[e ( _lcd_cmd (1 -> -> 192 `i `uc ]
"139
[; ;encher.c: 139:         lcd_str("   # - Voltar");
[e ( _lcd_str (1 :s 10C ]
"140
[; ;encher.c: 140:     }
}
[e :U 12 ]
"147
[; ;encher.c: 147:     (*(volatile __near unsigned char*)0xF93) = 0xF8;
[e = *U -> -> 3987 `i `*VNuc -> -> 248 `i `uc ]
"149
[; ;encher.c: 149:     while (1) {
[e :U 22 ]
{
"150
[; ;encher.c: 150:         (*(volatile __near unsigned char*)0xF95) = 0x0F;
[e = *U -> -> 3989 `i `*VNuc -> -> 15 `i `uc ]
"151
[; ;encher.c: 151:         tmp = tc_tecla(0) + 0x30;
[e = _tmp -> + -> ( _tc_tecla (1 -> -> 0 `i `ui `i -> 48 `i `uc ]
"152
[; ;encher.c: 152:         (*(volatile __near unsigned char*)0xF95) = 0x00;
[e = *U -> -> 3989 `i `*VNuc -> -> 0 `i `uc ]
"153
[; ;encher.c: 153:         if (tmp >= 0x3C) {
[e $ ! >= -> _tmp `i -> 60 `i 24  ]
{
"154
[; ;encher.c: 154:             (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<1));
[e =& *U -> -> 3988 `i `*VNuc -> ~ << -> 1 `i -> 1 `i `uc ]
"155
[; ;encher.c: 155:             break;
[e $U 23  ]
"156
[; ;encher.c: 156:         }
}
[e :U 24 ]
"157
[; ;encher.c: 157:     }
}
[e :U 21 ]
[e $U 22  ]
[e :U 23 ]
"159
[; ;encher.c: 159: }
[e :UE 3 ]
}
[p f _sprintf 8462336 ]
[a 10C 32 32 32 35 32 45 32 86 111 108 116 97 114 0 ]
[a 2C 35 32 45 32 86 111 108 116 97 114 0 ]
[a 4C 35 32 45 32 86 111 108 116 97 114 0 ]
[a 5C 37 46 49 102 0 ]
[a 3C 69 82 82 79 58 32 118 111 108 32 62 32 77 65 88 0 ]
[a 6C 32 76 0 ]
[a 7C 69 110 99 104 101 110 100 111 46 46 46 0 ]
[a 8C 65 103 117 97 114 100 101 33 0 ]
[a 9C 32 32 32 32 83 85 67 69 83 83 79 33 0 ]
[a 1C 81 117 97 110 116 40 76 41 58 32 0 ]

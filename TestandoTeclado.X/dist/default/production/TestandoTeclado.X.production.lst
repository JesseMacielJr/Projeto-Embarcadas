

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Jul 04 20:17:18 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    60  0000                     
    61                           ; Version 2.20
    62                           ; Generated 12/02/2020 GMT
    63                           ; 
    64                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F4520 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     
    96                           	psect	idataBANK0
    97  004036                     __pidataBANK0:
    98                           	callstack 0
    99                           
   100                           ;initializer for _atrasoMax
   101  004036  03E8               	dw	1000
   102                           
   103                           ;initializer for _atrasoMed
   104  004038  01F4               	dw	500
   105                           
   106                           ;initializer for _atrasoMin
   107  00403A  0014               	dw	20
   108                           
   109                           ;initializer for _atraso
   110  00403C  000F               	dw	15
   111                           
   112                           ;initializer for _atraso_min
   113  00403E  0005               	dw	5
   114                           
   115                           	psect	idataBANK1
   116  003FE8                     __pidataBANK1:
   117                           	callstack 0
   118                           
   119                           ;initializer for esvaziar_tanque@F342
   120  003FE8  003F               	dw	63
   121  003FEA  0006               	dw	6
   122  003FEC  005B               	dw	91
   123  003FEE  004F               	dw	79
   124  003FF0  0066               	dw	102
   125  003FF2  006D               	dw	109
   126  003FF4  007D               	dw	125
   127  003FF6  0007               	dw	7
   128  003FF8  007F               	dw	127
   129  003FFA  006F               	dw	111
   130                           
   131                           ;initializer for encher_tanque@F347
   132  003FFC  003F               	dw	63
   133  003FFE  0006               	dw	6
   134  004000  005B               	dw	91
   135  004002  004F               	dw	79
   136  004004  0066               	dw	102
   137  004006  006D               	dw	109
   138  004008  007D               	dw	125
   139  00400A  0007               	dw	7
   140  00400C  007F               	dw	127
   141  00400E  006F               	dw	111
   142                           
   143                           	psect	smallconst
   144  000600                     __psmallconst:
   145                           	callstack 0
   146  000600  00                 	db	0
   147  000601                     _linha:
   148                           	callstack 0
   149  000601  01                 	db	1
   150  000602  02                 	db	2
   151  000603  04                 	db	4
   152  000604  00                 	db	0
   153  000605                     __end_of_linha:
   154                           	callstack 0
   155  000605                     STR_5:
   156  000605  52                 	db	82	;'R'
   157  000606  42                 	db	66	;'B'
   158  000607  33                 	db	51	;'3'
   159  000608  2D                 	db	45
   160  000609  56                 	db	86	;'V'
   161  00060A  65                 	db	101	;'e'
   162  00060B  72                 	db	114	;'r'
   163  00060C  20                 	db	32
   164  00060D  52                 	db	82	;'R'
   165  00060E  42                 	db	66	;'B'
   166  00060F  34                 	db	52	;'4'
   167  000610  2D                 	db	45
   168  000611  45                 	db	69	;'E'
   169  000612  6E                 	db	110	;'n'
   170  000613  63                 	db	99	;'c'
   171  000614  68                 	db	104	;'h'
   172  000615  65                 	db	101	;'e'
   173  000616  72                 	db	114	;'r'
   174  000617  00                 	db	0
   175  000618                     STR_1:
   176  000618  41                 	db	65	;'A'
   177  000619  62                 	db	98	;'b'
   178  00061A  61                 	db	97	;'a'
   179  00061B  73                 	db	115	;'s'
   180  00061C  74                 	db	116	;'t'
   181  00061D  65                 	db	101	;'e'
   182  00061E  63                 	db	99	;'c'
   183  00061F  69                 	db	105	;'i'
   184  000620  6D                 	db	109	;'m'
   185  000621  65                 	db	101	;'e'
   186  000622  6E                 	db	110	;'n'
   187  000623  74                 	db	116	;'t'
   188  000624  6F                 	db	111	;'o'
   189  000625  20                 	db	32
   190  000626  64                 	db	100	;'d'
   191  000627  65                 	db	101	;'e'
   192  000628  00                 	db	0
   193  000629                     STR_9:
   194  000629  45                 	db	69	;'E'
   195  00062A  52                 	db	82	;'R'
   196  00062B  52                 	db	82	;'R'
   197  00062C  4F                 	db	79	;'O'
   198  00062D  3A                 	db	58	;':'
   199  00062E  20                 	db	32
   200  00062F  76                 	db	118	;'v'
   201  000630  6F                 	db	111	;'o'
   202  000631  6C                 	db	108	;'l'
   203  000632  20                 	db	32
   204  000633  3E                 	db	62	;'>'
   205  000634  20                 	db	32
   206  000635  4D                 	db	77	;'M'
   207  000636  41                 	db	65	;'A'
   208  000637  58                 	db	88	;'X'
   209  000638  00                 	db	0
   210  000639                     STR_4:
   211  000639  56                 	db	86	;'V'
   212  00063A  61                 	db	97	;'a'
   213  00063B  7A                 	db	122	;'z'
   214  00063C  61                 	db	97	;'a'
   215  00063D  6F                 	db	111	;'o'
   216  00063E  3A                 	db	58	;':'
   217  00063F  20                 	db	32
   218  000640  31                 	db	49	;'1'
   219  000641  2E                 	db	46
   220  000642  35                 	db	53	;'5'
   221  000643  20                 	db	32
   222  000644  4C                 	db	76	;'L'
   223  000645  2F                 	db	47
   224  000646  73                 	db	115	;'s'
   225  000647  00                 	db	0
   226  000648                     STR_27:
   227  000648  45                 	db	69	;'E'
   228  000649  73                 	db	115	;'s'
   229  00064A  76                 	db	118	;'v'
   230  00064B  61                 	db	97	;'a'
   231  00064C  7A                 	db	122	;'z'
   232  00064D  69                 	db	105	;'i'
   233  00064E  61                 	db	97	;'a'
   234  00064F  6E                 	db	110	;'n'
   235  000650  64                 	db	100	;'d'
   236  000651  6F                 	db	111	;'o'
   237  000652  2E                 	db	46
   238  000653  2E                 	db	46
   239  000654  2E                 	db	46
   240  000655  00                 	db	0
   241  000656                     STR_23:
   242  000656  45                 	db	69	;'E'
   243  000657  52                 	db	82	;'R'
   244  000658  52                 	db	82	;'R'
   245  000659  4F                 	db	79	;'O'
   246  00065A  3A                 	db	58	;':'
   247  00065B  20                 	db	32
   248  00065C  76                 	db	118	;'v'
   249  00065D  6F                 	db	111	;'o'
   250  00065E  6C                 	db	108	;'l'
   251  00065F  20                 	db	32
   252  000660  3C                 	db	60	;'<'
   253  000661  20                 	db	32
   254  000662  30                 	db	48	;'0'
   255  000663  00                 	db	0
   256  000664                     STR_16:
   257  000664  20                 	db	32
   258  000665  20                 	db	32
   259  000666  20                 	db	32
   260  000667  52                 	db	82	;'R'
   261  000668  42                 	db	66	;'B'
   262  000669  31                 	db	49	;'1'
   263  00066A  2D                 	db	45
   264  00066B  56                 	db	86	;'V'
   265  00066C  6F                 	db	111	;'o'
   266  00066D  6C                 	db	108	;'l'
   267  00066E  74                 	db	116	;'t'
   268  00066F  61                 	db	97	;'a'
   269  000670  72                 	db	114	;'r'
   270  000671  00                 	db	0
   271  000672                     STR_3:
   272  000672  56                 	db	86	;'V'
   273  000673  6F                 	db	111	;'o'
   274  000674  6C                 	db	108	;'l'
   275  000675  20                 	db	32
   276  000676  6D                 	db	109	;'m'
   277  000677  61                 	db	97	;'a'
   278  000678  78                 	db	120	;'x'
   279  000679  20                 	db	32
   280  00067A  3D                 	db	61	;'='
   281  00067B  20                 	db	32
   282  00067C  37                 	db	55	;'7'
   283  00067D  30                 	db	48	;'0'
   284  00067E  4C                 	db	76	;'L'
   285  00067F  00                 	db	0
   286  000680                     STR_15:
   287  000680  20                 	db	32
   288  000681  20                 	db	32
   289  000682  20                 	db	32
   290  000683  20                 	db	32
   291  000684  53                 	db	83	;'S'
   292  000685  55                 	db	85	;'U'
   293  000686  43                 	db	67	;'C'
   294  000687  45                 	db	69	;'E'
   295  000688  53                 	db	83	;'S'
   296  000689  53                 	db	83	;'S'
   297  00068A  4F                 	db	79	;'O'
   298  00068B  21                 	db	33
   299  00068C  00                 	db	0
   300  00068D                     STR_13:
   301  00068D  45                 	db	69	;'E'
   302  00068E  6E                 	db	110	;'n'
   303  00068F  63                 	db	99	;'c'
   304  000690  68                 	db	104	;'h'
   305  000691  65                 	db	101	;'e'
   306  000692  6E                 	db	110	;'n'
   307  000693  64                 	db	100	;'d'
   308  000694  6F                 	db	111	;'o'
   309  000695  2E                 	db	46
   310  000696  2E                 	db	46
   311  000697  2E                 	db	46
   312  000698  00                 	db	0
   313  000699                     STR_6:
   314  000699  52                 	db	82	;'R'
   315  00069A  42                 	db	66	;'B'
   316  00069B  35                 	db	53	;'5'
   317  00069C  2D                 	db	45
   318  00069D  52                 	db	82	;'R'
   319  00069E  65                 	db	101	;'e'
   320  00069F  74                 	db	116	;'t'
   321  0006A0  69                 	db	105	;'i'
   322  0006A1  72                 	db	114	;'r'
   323  0006A2  61                 	db	97	;'a'
   324  0006A3  72                 	db	114	;'r'
   325  0006A4  00                 	db	0
   326  0006A5                     STR_7:
   327  0006A5  51                 	db	81	;'Q'
   328  0006A6  75                 	db	117	;'u'
   329  0006A7  61                 	db	97	;'a'
   330  0006A8  6E                 	db	110	;'n'
   331  0006A9  74                 	db	116	;'t'
   332  0006AA  28                 	db	40
   333  0006AB  4C                 	db	76	;'L'
   334  0006AC  29                 	db	41
   335  0006AD  3A                 	db	58	;':'
   336  0006AE  20                 	db	32
   337  0006AF  00                 	db	0
   338  0006B0                     STR_8:
   339  0006B0  52                 	db	82	;'R'
   340  0006B1  42                 	db	66	;'B'
   341  0006B2  31                 	db	49	;'1'
   342  0006B3  2D                 	db	45
   343  0006B4  76                 	db	118	;'v'
   344  0006B5  6F                 	db	111	;'o'
   345  0006B6  6C                 	db	108	;'l'
   346  0006B7  74                 	db	116	;'t'
   347  0006B8  61                 	db	97	;'a'
   348  0006B9  72                 	db	114	;'r'
   349  0006BA  00                 	db	0
   350  0006BB                     STR_2:
   351  0006BB  20                 	db	32
   352  0006BC  20                 	db	32
   353  0006BD  20                 	db	32
   354  0006BE  20                 	db	32
   355  0006BF  20                 	db	32
   356  0006C0  20                 	db	32
   357  0006C1  61                 	db	97	;'a'
   358  0006C2  67                 	db	103	;'g'
   359  0006C3  75                 	db	117	;'u'
   360  0006C4  61                 	db	97	;'a'
   361  0006C5  00                 	db	0
   362  0006C6                     STR_14:
   363  0006C6  41                 	db	65	;'A'
   364  0006C7  67                 	db	103	;'g'
   365  0006C8  75                 	db	117	;'u'
   366  0006C9  61                 	db	97	;'a'
   367  0006CA  72                 	db	114	;'r'
   368  0006CB  64                 	db	100	;'d'
   369  0006CC  65                 	db	101	;'e'
   370  0006CD  21                 	db	33
   371  0006CE  00                 	db	0
   372  0006CF                     STR_18:
   373  0006CF  41                 	db	65	;'A'
   374  0006D0  74                 	db	116	;'t'
   375  0006D1  75                 	db	117	;'u'
   376  0006D2  61                 	db	97	;'a'
   377  0006D3  6C                 	db	108	;'l'
   378  0006D4  3A                 	db	58	;':'
   379  0006D5  20                 	db	32
   380  0006D6  00                 	db	0
   381  0006D7                     STR_11:
   382  0006D7  25                 	db	37
   383  0006D8  2E                 	db	46
   384  0006D9  31                 	db	49	;'1'
   385  0006DA  66                 	db	102	;'f'
   386  0006DB  00                 	db	0
   387  0006DC                     STR_31:
   388  0006DC  49                 	db	73	;'I'
   389  0006DD  4E                 	db	78	;'N'
   390  0006DE  46                 	db	70	;'F'
   391  0006DF  00                 	db	0
   392  0006E0                     STR_35:
   393  0006E0  4E                 	db	78	;'N'
   394  0006E1  41                 	db	65	;'A'
   395  0006E2  4E                 	db	78	;'N'
   396  0006E3  00                 	db	0
   397  0006E4                     STR_32:
   398  0006E4  69                 	db	105	;'i'
   399  0006E5  6E                 	db	110	;'n'
   400  0006E6  66                 	db	102	;'f'
   401  0006E7  00                 	db	0
   402  0006E8                     STR_36:
   403  0006E8  6E                 	db	110	;'n'
   404  0006E9  61                 	db	97	;'a'
   405  0006EA  6E                 	db	110	;'n'
   406  0006EB  00                 	db	0
   407  0006EC                     STR_39:
   408  0006EC  6C                 	db	108	;'l'
   409  0006ED  66                 	db	102	;'f'
   410  0006EE  00                 	db	0
   411  0006EF                     STR_12:
   412  0006EF  20                 	db	32
   413  0006F0  4C                 	db	76	;'L'
   414  0006F1  00                 	db	0
   415  0006F2  00                 	db	0	; dummy byte at the end
   416  0000                     
   417                           ; #config settings
   418                           
   419                           	psect	cinit
   420  003BAC                     __pcinit:
   421                           	callstack 0
   422  003BAC                     start_initialization:
   423                           	callstack 0
   424  003BAC                     __initialization:
   425                           	callstack 0
   426                           
   427                           ; Initialize objects allocated to BANK1 (40 bytes)
   428                           ; load TBLPTR registers with __pidataBANK1
   429  003BAC  0EE8               	movlw	low __pidataBANK1
   430  003BAE  6EF6               	movwf	tblptrl,c
   431  003BB0  0E3F               	movlw	high __pidataBANK1
   432  003BB2  6EF7               	movwf	tblptrh,c
   433  003BB4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   434  003BB6  6EF8               	movwf	tblptru,c
   435  003BB8  EE01  F050         	lfsr	0,__pdataBANK1
   436  003BBC  EE10 F028          	lfsr	1,40
   437  003BC0                     copy_data0:
   438  003BC0  0009               	tblrd		*+
   439  003BC2  CFF5 FFEE          	movff	tablat,postinc0
   440  003BC6  50E5               	movf	postdec1,w,c
   441  003BC8  50E1               	movf	fsr1l,w,c
   442  003BCA  E1FA               	bnz	copy_data0
   443                           
   444                           ; Initialize objects allocated to BANK0 (10 bytes)
   445                           ; load TBLPTR registers with __pidataBANK0
   446  003BCC  0E36               	movlw	low __pidataBANK0
   447  003BCE  6EF6               	movwf	tblptrl,c
   448  003BD0  0E40               	movlw	high __pidataBANK0
   449  003BD2  6EF7               	movwf	tblptrh,c
   450  003BD4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   451  003BD6  6EF8               	movwf	tblptru,c
   452  003BD8  EE00  F0EB         	lfsr	0,__pdataBANK0
   453  003BDC  EE10 F00A          	lfsr	1,10
   454  003BE0                     copy_data1:
   455  003BE0  0009               	tblrd		*+
   456  003BE2  CFF5 FFEE          	movff	tablat,postinc0
   457  003BE6  50E5               	movf	postdec1,w,c
   458  003BE8  50E1               	movf	fsr1l,w,c
   459  003BEA  E1FA               	bnz	copy_data1
   460                           
   461                           ; Clear objects allocated to BANK1 (80 bytes)
   462  003BEC  EE01  F000         	lfsr	0,__pbssBANK1
   463  003BF0  0E50               	movlw	80
   464  003BF2                     clear_0:
   465  003BF2  6AEE               	clrf	postinc0,c
   466  003BF4  06E8               	decf	wreg,f,c
   467  003BF6  E1FD               	bnz	clear_0
   468                           
   469                           ; Clear objects allocated to BANK0 (22 bytes)
   470  003BF8  EE00  F0D5         	lfsr	0,__pbssBANK0
   471  003BFC  0E16               	movlw	22
   472  003BFE                     clear_1:
   473  003BFE  6AEE               	clrf	postinc0,c
   474  003C00  06E8               	decf	wreg,f,c
   475  003C02  E1FD               	bnz	clear_1
   476  003C04                     end_of_initialization:
   477                           	callstack 0
   478  003C04                     __end_of__initialization:
   479                           	callstack 0
   480  003C04  0E00               	movlw	low (__Lmediumconst shr (0+16))
   481  003C06  6EF8               	movwf	tblptru,c
   482  003C08  0100               	movlb	0
   483  003C0A  EFC9  F016         	goto	_main	;jump to C main() function
   484                           
   485                           	psect	bssBANK0
   486  0000D5                     __pbssBANK0:
   487                           	callstack 0
   488  0000D5                     floorf@F524:
   489                           	callstack 0
   490  0000D5                     	ds	4
   491  0000D9                     ___fpclassifyf@F463:
   492                           	callstack 0
   493  0000D9                     	ds	4
   494  0000DD                     _nout:
   495                           	callstack 0
   496  0000DD                     	ds	2
   497  0000DF                     _width:
   498                           	callstack 0
   499  0000DF                     	ds	2
   500  0000E1                     _prec:
   501                           	callstack 0
   502  0000E1                     	ds	2
   503  0000E3                     _flags:
   504                           	callstack 0
   505  0000E3                     	ds	2
   506  0000E5                     _i:
   507                           	callstack 0
   508  0000E5                     	ds	2
   509  0000E7                     _volume:
   510                           	callstack 0
   511  0000E7                     	ds	4
   512                           
   513                           	psect	dataBANK0
   514  0000EB                     __pdataBANK0:
   515                           	callstack 0
   516  0000EB                     _atrasoMax:
   517                           	callstack 0
   518  0000EB                     	ds	2
   519  0000ED                     _atrasoMed:
   520                           	callstack 0
   521  0000ED                     	ds	2
   522  0000EF                     _atrasoMin:
   523                           	callstack 0
   524  0000EF                     	ds	2
   525  0000F1                     _atraso:
   526                           	callstack 0
   527  0000F1                     	ds	2
   528  0000F3                     _atraso_min:
   529                           	callstack 0
   530  0000F3                     	ds	2
   531                           
   532                           	psect	bssBANK1
   533  000100                     __pbssBANK1:
   534                           	callstack 0
   535  000100                     _dbuf:
   536                           	callstack 0
   537  000100                     	ds	80
   538                           
   539                           	psect	dataBANK1
   540  000150                     __pdataBANK1:
   541                           	callstack 0
   542  000150                     esvaziar_tanque@F342:
   543                           	callstack 0
   544  000150                     	ds	20
   545  000164                     encher_tanque@F347:
   546                           	callstack 0
   547  000164                     	ds	20
   548                           
   549                           	psect	cstackBANK0
   550  000080                     __pcstackBANK0:
   551                           	callstack 0
   552  000080                     _vfpfcnvrt$758:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x0
   556  000080                     	ds	2
   557  000082                     _vfpfcnvrt$762:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x2
   561  000082                     	ds	2
   562  000084                     vfpfcnvrt@f:
   563                           	callstack 0
   564                           
   565                           ; 4 bytes @ 0x4
   566  000084                     	ds	4
   567  000088                     vfpfcnvrt@ct:
   568                           	callstack 0
   569                           
   570                           ; 3 bytes @ 0x8
   571  000088                     	ds	3
   572  00008B                     vfpfcnvrt@c:
   573                           	callstack 0
   574                           
   575                           ; 1 bytes @ 0xB
   576  00008B                     	ds	1
   577  00008C                     ?_vfprintf:
   578                           	callstack 0
   579  00008C                     vfprintf@fp:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0xC
   583  00008C                     	ds	2
   584  00008E                     vfprintf@fmt:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0xE
   588  00008E                     	ds	2
   589  000090                     vfprintf@ap:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x10
   593  000090                     	ds	2
   594  000092                     ?_sprintf:
   595                           	callstack 0
   596  000092                     sprintf@s:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x12
   600  000092                     	ds	2
   601  000094                     sprintf@fmt:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x14
   605  000094                     	ds	8
   606  00009C                     sprintf@ap:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x1C
   610  00009C                     	ds	2
   611  00009E                     sprintf@f:
   612                           	callstack 0
   613                           
   614                           ; 6 bytes @ 0x1E
   615  00009E                     	ds	6
   616  0000A4                     ??_encher_tanque:
   617  0000A4                     ver_quantidade@y:
   618                           	callstack 0
   619  0000A4                     esvaziar_tanque@numeros:
   620                           	callstack 0
   621                           
   622                           ; 20 bytes @ 0x24
   623  0000A4                     	ds	4
   624  0000A8                     encher_tanque@numeros:
   625                           	callstack 0
   626                           
   627                           ; 20 bytes @ 0x28
   628  0000A8                     	ds	4
   629  0000AC                     ver_quantidade@i:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x2C
   633  0000AC                     	ds	12
   634  0000B8                     esvaziar_tanque@y:
   635                           	callstack 0
   636                           
   637                           ; 8 bytes @ 0x38
   638  0000B8                     	ds	4
   639  0000BC                     encher_tanque@y:
   640                           	callstack 0
   641                           
   642                           ; 8 bytes @ 0x3C
   643  0000BC                     	ds	4
   644  0000C0                     esvaziar_tanque@tempo:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x40
   648  0000C0                     	ds	2
   649  0000C2                     esvaziar_tanque@decremento:
   650                           	callstack 0
   651                           
   652                           ; 4 bytes @ 0x42
   653  0000C2                     	ds	2
   654  0000C4                     encher_tanque@i_130:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x44
   658  0000C4                     	ds	2
   659  0000C6                     encher_tanque@tempo:
   660                           	callstack 0
   661  0000C6                     esvaziar_tanque@i:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x46
   665  0000C6                     	ds	2
   666  0000C8                     encher_tanque@num:
   667                           	callstack 0
   668                           
   669                           ; 4 bytes @ 0x48
   670  0000C8                     	ds	4
   671  0000CC                     encher_tanque@t1:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x4C
   675  0000CC                     	ds	2
   676  0000CE                     encher_tanque@incremento:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x4E
   680  0000CE                     	ds	2
   681  0000D0                     encher_tanque@tmp:
   682                           	callstack 0
   683                           
   684                           ; 1 bytes @ 0x50
   685  0000D0                     	ds	1
   686  0000D1                     encher_tanque@t2:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x51
   690  0000D1                     	ds	2
   691  0000D3                     encher_tanque@i:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x53
   695  0000D3                     	ds	2
   696                           
   697                           	psect	cstackCOMRAM
   698  000001                     __pcstackCOMRAM:
   699                           	callstack 0
   700  000001                     ?_strlen:
   701                           	callstack 0
   702  000001                     ?___fpclassifyf:
   703                           	callstack 0
   704  000001                     ?_isupper:
   705                           	callstack 0
   706  000001                     ?_isdigit:
   707                           	callstack 0
   708  000001                     ?_strncmp:
   709                           	callstack 0
   710  000001                     ?_isspace:
   711                           	callstack 0
   712  000001                     ?___wmul:
   713                           	callstack 0
   714  000001                     ?___awdiv:
   715                           	callstack 0
   716  000001                     ?___awmod:
   717                           	callstack 0
   718  000001                     ?___fldiv:
   719                           	callstack 0
   720  000001                     ?___flmul:
   721                           	callstack 0
   722  000001                     ?___flneg:
   723                           	callstack 0
   724  000001                     ?___xxtofl:
   725                           	callstack 0
   726  000001                     lcd_wr@val:
   727                           	callstack 0
   728  000001                     atraso_ms@t:
   729                           	callstack 0
   730  000001                     ___wmul@multiplier:
   731                           	callstack 0
   732  000001                     ___awdiv@dividend:
   733                           	callstack 0
   734  000001                     ___awmod@dividend:
   735                           	callstack 0
   736  000001                     isdigit@c:
   737                           	callstack 0
   738  000001                     isspace@c:
   739                           	callstack 0
   740  000001                     isupper@c:
   741                           	callstack 0
   742  000001                     fputc@c:
   743                           	callstack 0
   744  000001                     strcpy@dest:
   745                           	callstack 0
   746  000001                     strlen@s:
   747                           	callstack 0
   748  000001                     strncmp@_l:
   749                           	callstack 0
   750  000001                     ___fleq@ff1:
   751                           	callstack 0
   752  000001                     ___flneg@f1:
   753                           	callstack 0
   754  000001                     ___fldiv@b:
   755                           	callstack 0
   756  000001                     ___flmul@b:
   757                           	callstack 0
   758  000001                     ___xxtofl@val:
   759                           	callstack 0
   760  000001                     ___fpclassifyf@x:
   761                           	callstack 0
   762                           
   763                           ; 4 bytes @ 0x0
   764  000001                     	ds	2
   765  000003                     ??_isupper:
   766  000003                     ??_isdigit:
   767  000003                     ??_isspace:
   768  000003                     atraso_ms@i:
   769                           	callstack 0
   770  000003                     ___wmul@multiplicand:
   771                           	callstack 0
   772  000003                     ___awdiv@divisor:
   773                           	callstack 0
   774  000003                     ___awmod@divisor:
   775                           	callstack 0
   776  000003                     fputc@fp:
   777                           	callstack 0
   778  000003                     strcpy@src:
   779                           	callstack 0
   780  000003                     strlen@a:
   781                           	callstack 0
   782  000003                     strncmp@_r:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x2
   786  000003                     	ds	2
   787  000005                     ??_fputc:
   788  000005                     ??___fpclassifyf:
   789  000005                     ??_strcpy:
   790  000005                     ??___xxtofl:
   791  000005                     atraso_ms@j:
   792                           	callstack 0
   793  000005                     ___awdiv@counter:
   794                           	callstack 0
   795  000005                     ___awmod@counter:
   796                           	callstack 0
   797  000005                     ___wmul@product:
   798                           	callstack 0
   799  000005                     strncmp@n:
   800                           	callstack 0
   801  000005                     ___fleq@ff2:
   802                           	callstack 0
   803  000005                     ___fldiv@a:
   804                           	callstack 0
   805  000005                     ___flmul@a:
   806                           	callstack 0
   807                           
   808                           ; 4 bytes @ 0x4
   809  000005                     	ds	1
   810  000006                     atraso_ms@k:
   811                           	callstack 0
   812  000006                     ___awdiv@sign:
   813                           	callstack 0
   814  000006                     ___awmod@sign:
   815                           	callstack 0
   816                           
   817                           ; 1 bytes @ 0x5
   818  000006                     	ds	1
   819  000007                     ??_strncmp:
   820  000007                     ?_tolower:
   821                           	callstack 0
   822  000007                     lcd_cmd@val:
   823                           	callstack 0
   824  000007                     lcd_dat@val:
   825                           	callstack 0
   826  000007                     _isspace$827:
   827                           	callstack 0
   828  000007                     tc_tecla@timeout:
   829                           	callstack 0
   830  000007                     ___awdiv@quotient:
   831                           	callstack 0
   832  000007                     strcpy@s:
   833                           	callstack 0
   834  000007                     tolower@c:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0x6
   838  000007                     	ds	1
   839  000008                     ?_atoi:
   840                           	callstack 0
   841  000008                     lcd_str@str:
   842                           	callstack 0
   843  000008                     atoi@s:
   844                           	callstack 0
   845  000008                     strncmp@l:
   846                           	callstack 0
   847                           
   848                           ; 2 bytes @ 0x7
   849  000008                     	ds	1
   850  000009                     ??___fldiv:
   851  000009                     ??___flmul:
   852  000009                     ??_tolower:
   853  000009                     ??___fleq:
   854  000009                     ___xxtofl@sign:
   855                           	callstack 0
   856  000009                     tc_tecla@to:
   857                           	callstack 0
   858  000009                     ___fpclassifyf@e:
   859                           	callstack 0
   860  000009                     strcpy@d:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0x8
   864  000009                     	ds	1
   865  00000A                     ??_atoi:
   866  00000A                     ??_lcd_str:
   867  00000A                     ___xxtofl@exp:
   868                           	callstack 0
   869  00000A                     fputs@s:
   870                           	callstack 0
   871  00000A                     strncmp@r:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0x9
   875  00000A                     	ds	1
   876  00000B                     tc_tecla@tmp:
   877                           	callstack 0
   878  00000B                     ___xxtofl@arg:
   879                           	callstack 0
   880  00000B                     ___fpclassifyf@u:
   881                           	callstack 0
   882                           
   883                           ; 4 bytes @ 0xA
   884  00000B                     	ds	1
   885  00000C                     lcd_str@i:
   886                           	callstack 0
   887  00000C                     tc_tecla@ret:
   888                           	callstack 0
   889  00000C                     fputs@fp:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0xB
   893  00000C                     	ds	1
   894  00000D                     tc_tecla@i:
   895                           	callstack 0
   896  00000D                     ___flmul@sign:
   897                           	callstack 0
   898  00000D                     _tolower$891:
   899                           	callstack 0
   900  00000D                     ___fldiv@rem:
   901                           	callstack 0
   902                           
   903                           ; 4 bytes @ 0xC
   904  00000D                     	ds	1
   905  00000E                     fputs@c:
   906                           	callstack 0
   907  00000E                     atoi@neg:
   908                           	callstack 0
   909  00000E                     ___flmul@grs:
   910                           	callstack 0
   911                           
   912                           ; 4 bytes @ 0xD
   913  00000E                     	ds	1
   914  00000F                     ?___fladd:
   915                           	callstack 0
   916  00000F                     fputs@i:
   917                           	callstack 0
   918  00000F                     ___fladd@b:
   919                           	callstack 0
   920                           
   921                           ; 4 bytes @ 0xE
   922  00000F                     	ds	1
   923  000010                     _atoi$796:
   924                           	callstack 0
   925                           
   926                           ; 2 bytes @ 0xF
   927  000010                     	ds	1
   928  000011                     ?_pad:
   929                           	callstack 0
   930  000011                     ___fldiv@sign:
   931                           	callstack 0
   932  000011                     pad@fp:
   933                           	callstack 0
   934                           
   935                           ; 2 bytes @ 0x10
   936  000011                     	ds	1
   937  000012                     ___flmul@aexp:
   938                           	callstack 0
   939  000012                     ___fldiv@new_exp:
   940                           	callstack 0
   941  000012                     _atoi$798:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0x11
   945  000012                     	ds	1
   946  000013                     ___flmul@bexp:
   947                           	callstack 0
   948  000013                     pad@buf:
   949                           	callstack 0
   950  000013                     ___fladd@a:
   951                           	callstack 0
   952                           
   953                           ; 4 bytes @ 0x12
   954  000013                     	ds	1
   955  000014                     _atoi$797:
   956                           	callstack 0
   957  000014                     ___fldiv@grs:
   958                           	callstack 0
   959  000014                     ___flmul@prod:
   960                           	callstack 0
   961                           
   962                           ; 4 bytes @ 0x13
   963  000014                     	ds	1
   964  000015                     pad@p:
   965                           	callstack 0
   966  000015                     atoi@n:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0x14
   970  000015                     	ds	2
   971  000017                     ??___fladd:
   972  000017                     ??_pad:
   973                           
   974                           ; 1 bytes @ 0x16
   975  000017                     	ds	1
   976  000018                     ___fldiv@bexp:
   977                           	callstack 0
   978  000018                     ___flmul@temp:
   979                           	callstack 0
   980  000018                     pad@i:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0x17
   984  000018                     	ds	1
   985  000019                     ___fldiv@aexp:
   986                           	callstack 0
   987                           
   988                           ; 1 bytes @ 0x18
   989  000019                     	ds	1
   990  00001A                     ?_floorf:
   991                           	callstack 0
   992  00001A                     ?___fltol:
   993                           	callstack 0
   994  00001A                     pad@w:
   995                           	callstack 0
   996  00001A                     ___fltol@f1:
   997                           	callstack 0
   998  00001A                     floorf@x:
   999                           	callstack 0
  1000                           
  1001                           ; 4 bytes @ 0x19
  1002  00001A                     	ds	1
  1003  00001B                     ___fladd@signs:
  1004                           	callstack 0
  1005                           
  1006                           ; 1 bytes @ 0x1A
  1007  00001B                     	ds	1
  1008  00001C                     ___fladd@aexp:
  1009                           	callstack 0
  1010                           
  1011                           ; 1 bytes @ 0x1B
  1012  00001C                     	ds	1
  1013  00001D                     ___fladd@bexp:
  1014                           	callstack 0
  1015                           
  1016                           ; 1 bytes @ 0x1C
  1017  00001D                     	ds	1
  1018  00001E                     ??_floorf:
  1019  00001E                     ??___fltol:
  1020  00001E                     ___fladd@grs:
  1021                           	callstack 0
  1022                           
  1023                           ; 1 bytes @ 0x1D
  1024  00001E                     	ds	1
  1025  00001F                     ?___flsub:
  1026                           	callstack 0
  1027  00001F                     ___flge@ff1:
  1028                           	callstack 0
  1029  00001F                     ___flsub@b:
  1030                           	callstack 0
  1031                           
  1032                           ; 4 bytes @ 0x1E
  1033  00001F                     	ds	3
  1034  000022                     ___fltol@sign1:
  1035                           	callstack 0
  1036                           
  1037                           ; 1 bytes @ 0x21
  1038  000022                     	ds	1
  1039  000023                     ___fltol@exp1:
  1040                           	callstack 0
  1041  000023                     ___flge@ff2:
  1042                           	callstack 0
  1043  000023                     ___flsub@a:
  1044                           	callstack 0
  1045                           
  1046                           ; 4 bytes @ 0x22
  1047  000023                     	ds	1
  1048  000024                     floorf@m:
  1049                           	callstack 0
  1050                           
  1051                           ; 4 bytes @ 0x23
  1052  000024                     	ds	3
  1053  000027                     ??___flge:
  1054                           
  1055                           ; 1 bytes @ 0x26
  1056  000027                     	ds	1
  1057  000028                     floorf@e:
  1058                           	callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x27
  1061  000028                     	ds	2
  1062  00002A                     floorf@u:
  1063                           	callstack 0
  1064                           
  1065                           ; 4 bytes @ 0x29
  1066  00002A                     	ds	4
  1067  00002E                     ?_efgtoa:
  1068                           	callstack 0
  1069  00002E                     efgtoa@fp:
  1070                           	callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x2D
  1073  00002E                     	ds	2
  1074  000030                     efgtoa@f:
  1075                           	callstack 0
  1076                           
  1077                           ; 4 bytes @ 0x2F
  1078  000030                     	ds	4
  1079  000034                     efgtoa@c:
  1080                           	callstack 0
  1081                           
  1082                           ; 1 bytes @ 0x33
  1083  000034                     	ds	1
  1084  000035                     ??_efgtoa:
  1085                           
  1086                           ; 1 bytes @ 0x34
  1087  000035                     	ds	5
  1088  00003A                     efgtoa@ou:
  1089                           	callstack 0
  1090                           
  1091                           ; 4 bytes @ 0x39
  1092  00003A                     	ds	4
  1093  00003E                     _efgtoa$732:
  1094                           	callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x3D
  1097  00003E                     	ds	2
  1098  000040                     _efgtoa$733:
  1099                           	callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x3F
  1102  000040                     	ds	2
  1103  000042                     _efgtoa$738:
  1104                           	callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x41
  1107  000042                     	ds	2
  1108  000044                     _efgtoa$742:
  1109                           	callstack 0
  1110                           
  1111                           ; 2 bytes @ 0x43
  1112  000044                     	ds	2
  1113  000046                     _efgtoa$743:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x45
  1117  000046                     	ds	2
  1118  000048                     _efgtoa$744:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x47
  1122  000048                     	ds	2
  1123  00004A                     efgtoa@t:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x49
  1127  00004A                     	ds	2
  1128  00004C                     efgtoa@pp:
  1129                           	callstack 0
  1130                           
  1131                           ; 2 bytes @ 0x4B
  1132  00004C                     	ds	2
  1133  00004E                     efgtoa@m:
  1134                           	callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x4D
  1137  00004E                     	ds	2
  1138  000050                     efgtoa@ne:
  1139                           	callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x4F
  1142  000050                     	ds	2
  1143  000052                     efgtoa@d:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x51
  1147  000052                     	ds	2
  1148  000054                     efgtoa@sign:
  1149                           	callstack 0
  1150                           
  1151                           ; 2 bytes @ 0x53
  1152  000054                     	ds	2
  1153  000056                     efgtoa@p:
  1154                           	callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x55
  1157  000056                     	ds	2
  1158  000058                     efgtoa@nmode:
  1159                           	callstack 0
  1160                           
  1161                           ; 1 bytes @ 0x57
  1162  000058                     	ds	1
  1163  000059                     efgtoa@w:
  1164                           	callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x58
  1167  000059                     	ds	2
  1168  00005B                     efgtoa@mode:
  1169                           	callstack 0
  1170                           
  1171                           ; 1 bytes @ 0x5A
  1172  00005B                     	ds	1
  1173  00005C                     efgtoa@h:
  1174                           	callstack 0
  1175                           
  1176                           ; 4 bytes @ 0x5B
  1177  00005C                     	ds	4
  1178  000060                     efgtoa@l:
  1179                           	callstack 0
  1180                           
  1181                           ; 4 bytes @ 0x5F
  1182  000060                     	ds	4
  1183  000064                     efgtoa@i:
  1184                           	callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x63
  1187  000064                     	ds	2
  1188  000066                     efgtoa@g:
  1189                           	callstack 0
  1190                           
  1191                           ; 4 bytes @ 0x65
  1192  000066                     	ds	4
  1193  00006A                     efgtoa@e:
  1194                           	callstack 0
  1195                           
  1196                           ; 2 bytes @ 0x69
  1197  00006A                     	ds	2
  1198  00006C                     efgtoa@n:
  1199                           	callstack 0
  1200                           
  1201                           ; 2 bytes @ 0x6B
  1202  00006C                     	ds	2
  1203  00006E                     efgtoa@u:
  1204                           	callstack 0
  1205                           
  1206                           ; 4 bytes @ 0x6D
  1207  00006E                     	ds	4
  1208  000072                     ?_vfpfcnvrt:
  1209                           	callstack 0
  1210  000072                     vfpfcnvrt@fp:
  1211                           	callstack 0
  1212                           
  1213                           ; 2 bytes @ 0x71
  1214  000072                     	ds	2
  1215  000074                     vfpfcnvrt@fmt:
  1216                           	callstack 0
  1217                           
  1218                           ; 2 bytes @ 0x73
  1219  000074                     	ds	2
  1220  000076                     vfpfcnvrt@ap:
  1221                           	callstack 0
  1222                           
  1223                           ; 2 bytes @ 0x75
  1224  000076                     	ds	2
  1225  000078                     ??_vfpfcnvrt:
  1226                           
  1227                           ; 1 bytes @ 0x77
  1228  000078                     	ds	4
  1229  00007C                     vfprintf@cfmt:
  1230                           	callstack 0
  1231                           
  1232                           ; 2 bytes @ 0x7B
  1233  00007C                     	ds	2
  1234  00007E                     encher_tanque@vol:
  1235                           	callstack 0
  1236  00007E                     ver_quantidade@vol:
  1237                           	callstack 0
  1238  00007E                     esvaziar_tanque@vol:
  1239                           	callstack 0
  1240                           
  1241                           ; 2 bytes @ 0x7D
  1242  00007E                     	ds	2
  1243  000080                     
  1244                           ; 1 bytes @ 0x7F
  1245 ;;
  1246 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1247 ;;
  1248 ;; *************** function _main *****************
  1249 ;; Defined at:
  1250 ;;		line 16 in file "main.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;		None
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;  flag            2    0        int 
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  1    wreg      void 
  1257 ;; Registers used:
  1258 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1264 ;;      Params:         0       0       0       0       0       0       0
  1265 ;;      Locals:         0       2       0       0       0       0       0
  1266 ;;      Temps:          0       0       0       0       0       0       0
  1267 ;;      Totals:         0       2       0       0       0       0       0
  1268 ;;Total ram usage:        2 bytes
  1269 ;; Hardware stack levels required when called:    9
  1270 ;; This function calls:
  1271 ;;		_atraso_ms
  1272 ;;		_encher_tanque
  1273 ;;		_esvaziar_tanque
  1274 ;;		_lcd_cmd
  1275 ;;		_lcd_init
  1276 ;;		_lcd_str
  1277 ;;		_ver_quantidade
  1278 ;; This function is called by:
  1279 ;;		Startup code after reset
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           	psect	text0
  1284  002D92                     __ptext0:
  1285                           	callstack 0
  1286  002D92                     _main:
  1287                           	callstack 22
  1288  002D92                     
  1289                           ;main.c: 18:     (*(volatile __near unsigned char*)0xFC1) = 0x06;
  1290  002D92  0E06               	movlw	6
  1291  002D94  6EC1               	movwf	193,c	;volatile
  1292                           
  1293                           ;main.c: 19:     (*(volatile __near unsigned char*)0xF93) = 0x01;
  1294  002D96  0E01               	movlw	1
  1295  002D98  6E93               	movwf	147,c	;volatile
  1296                           
  1297                           ;main.c: 20:     (*(volatile __near unsigned char*)0xF95) = 0x00;
  1298  002D9A  0E00               	movlw	0
  1299  002D9C  6E95               	movwf	149,c	;volatile
  1300                           
  1301                           ;main.c: 21:     (*(volatile __near unsigned char*)0xF96) = 0x00;
  1302  002D9E  0E00               	movlw	0
  1303  002DA0  6E96               	movwf	150,c	;volatile
  1304  002DA2                     
  1305                           ;main.c: 23:     lcd_init();
  1306  002DA2  EC68  F01E         	call	_lcd_init	;wreg free
  1307  002DA6                     
  1308                           ;main.c: 26:     lcd_cmd(0x01);
  1309  002DA6  0E01               	movlw	1
  1310  002DA8  ECDF  F01F         	call	_lcd_cmd
  1311  002DAC                     
  1312                           ;main.c: 27:     lcd_cmd(0x80);
  1313  002DAC  0E80               	movlw	128
  1314  002DAE  ECDF  F01F         	call	_lcd_cmd
  1315  002DB2                     
  1316                           ;main.c: 28:     lcd_str("Abastecimento de");
  1317  002DB2  0E18               	movlw	low STR_1
  1318  002DB4  6E08               	movwf	lcd_str@str^0,c
  1319  002DB6  0E06               	movlw	high STR_1
  1320  002DB8  6E09               	movwf	(lcd_str@str+1)^0,c
  1321  002DBA  EC68  F01D         	call	_lcd_str	;wreg free
  1322  002DBE                     
  1323                           ;main.c: 29:     lcd_cmd(0xC0);
  1324  002DBE  0EC0               	movlw	192
  1325  002DC0  ECDF  F01F         	call	_lcd_cmd
  1326  002DC4                     
  1327                           ;main.c: 30:     lcd_str("      agua");
  1328  002DC4  0EBB               	movlw	low STR_2
  1329  002DC6  6E08               	movwf	lcd_str@str^0,c
  1330  002DC8  0E06               	movlw	high STR_2
  1331  002DCA  6E09               	movwf	(lcd_str@str+1)^0,c
  1332  002DCC  EC68  F01D         	call	_lcd_str	;wreg free
  1333  002DD0                     
  1334                           ;main.c: 31:     atraso_ms(atrasoMin);
  1335  002DD0  0E00               	movlw	0
  1336  002DD2  6E02               	movwf	(atraso_ms@t+1)^0,c
  1337  002DD4  0E14               	movlw	20
  1338  002DD6  6E01               	movwf	atraso_ms@t^0,c
  1339  002DD8  ECA4  F01D         	call	_atraso_ms	;wreg free
  1340  002DDC                     
  1341                           ;main.c: 32:     lcd_cmd(0x01);
  1342  002DDC  0E01               	movlw	1
  1343  002DDE  ECDF  F01F         	call	_lcd_cmd
  1344  002DE2                     
  1345                           ;main.c: 35:     lcd_cmd(0x80);
  1346  002DE2  0E80               	movlw	128
  1347  002DE4  ECDF  F01F         	call	_lcd_cmd
  1348  002DE8                     
  1349                           ;main.c: 36:     lcd_str("Vol max = 70L");
  1350  002DE8  0E72               	movlw	low STR_3
  1351  002DEA  6E08               	movwf	lcd_str@str^0,c
  1352  002DEC  0E06               	movlw	high STR_3
  1353  002DEE  6E09               	movwf	(lcd_str@str+1)^0,c
  1354  002DF0  EC68  F01D         	call	_lcd_str	;wreg free
  1355  002DF4                     
  1356                           ;main.c: 37:     lcd_cmd(0xC0);
  1357  002DF4  0EC0               	movlw	192
  1358  002DF6  ECDF  F01F         	call	_lcd_cmd
  1359  002DFA                     
  1360                           ;main.c: 38:     lcd_str("Vazao: 1.5 L/s");
  1361  002DFA  0E39               	movlw	low STR_4
  1362  002DFC  6E08               	movwf	lcd_str@str^0,c
  1363  002DFE  0E06               	movlw	high STR_4
  1364  002E00  6E09               	movwf	(lcd_str@str+1)^0,c
  1365  002E02  EC68  F01D         	call	_lcd_str	;wreg free
  1366  002E06                     
  1367                           ;main.c: 39:     atraso_ms(atrasoMin);
  1368  002E06  0E00               	movlw	0
  1369  002E08  6E02               	movwf	(atraso_ms@t+1)^0,c
  1370  002E0A  0E14               	movlw	20
  1371  002E0C  6E01               	movwf	atraso_ms@t^0,c
  1372  002E0E  ECA4  F01D         	call	_atraso_ms	;wreg free
  1373  002E12                     
  1374                           ;main.c: 40:     lcd_cmd(0x01);
  1375  002E12  0E01               	movlw	1
  1376  002E14  ECDF  F01F         	call	_lcd_cmd
  1377  002E18                     l113:
  1378  002E18                     
  1379                           ;main.c: 47:         lcd_cmd(0x01);
  1380  002E18  0E01               	movlw	1
  1381  002E1A  ECDF  F01F         	call	_lcd_cmd
  1382  002E1E                     
  1383                           ;main.c: 48:         lcd_cmd(0x80);
  1384  002E1E  0E80               	movlw	128
  1385  002E20  ECDF  F01F         	call	_lcd_cmd
  1386  002E24                     
  1387                           ;main.c: 49:         lcd_str("RB3-Ver RB4-Encher");
  1388  002E24  0E05               	movlw	low STR_5
  1389  002E26  6E08               	movwf	lcd_str@str^0,c
  1390  002E28  0E06               	movlw	high STR_5
  1391  002E2A  6E09               	movwf	(lcd_str@str+1)^0,c
  1392  002E2C  EC68  F01D         	call	_lcd_str	;wreg free
  1393  002E30                     
  1394                           ;main.c: 50:         lcd_cmd(0xC0);
  1395  002E30  0EC0               	movlw	192
  1396  002E32  ECDF  F01F         	call	_lcd_cmd
  1397  002E36                     
  1398                           ;main.c: 51:         lcd_str("RB5-Retirar");
  1399  002E36  0E99               	movlw	low STR_6
  1400  002E38  6E08               	movwf	lcd_str@str^0,c
  1401  002E3A  0E06               	movlw	high STR_6
  1402  002E3C  6E09               	movwf	(lcd_str@str+1)^0,c
  1403  002E3E  EC68  F01D         	call	_lcd_str	;wreg free
  1404  002E42                     
  1405                           ;main.c: 52:         for (i = 0; i < 2; i++) {
  1406  002E42  0E00               	movlw	0
  1407  002E44  0100               	movlb	0	; () banked
  1408  002E46  6FE6               	movwf	(_i+1)& (0+255),b
  1409  002E48  0E00               	movlw	0
  1410  002E4A  6FE5               	movwf	_i& (0+255),b
  1411  002E4C                     l4717:
  1412                           
  1413                           ; BSR set to: 0
  1414                           ;main.c: 53:             atraso_ms(350);
  1415  002E4C  0E01               	movlw	1
  1416  002E4E  6E02               	movwf	(atraso_ms@t+1)^0,c
  1417  002E50  0E5E               	movlw	94
  1418  002E52  6E01               	movwf	atraso_ms@t^0,c
  1419  002E54  ECA4  F01D         	call	_atraso_ms	;wreg free
  1420                           
  1421                           ;main.c: 54:             lcd_cmd(0x18);
  1422  002E58  0E18               	movlw	24
  1423  002E5A  ECDF  F01F         	call	_lcd_cmd
  1424  002E5E                     
  1425                           ;main.c: 55:         }
  1426  002E5E  0100               	movlb	0	; () banked
  1427  002E60  4BE5               	infsnz	_i& (0+255),f,b
  1428  002E62  2BE6               	incf	(_i+1)& (0+255),f,b
  1429  002E64                     
  1430                           ; BSR set to: 0
  1431  002E64  BFE6               	btfsc	(_i+1)& (0+255),7,b
  1432  002E66  EF3E  F017         	goto	u5571
  1433  002E6A  51E6               	movf	(_i+1)& (0+255),w,b
  1434  002E6C  E109               	bnz	u5570
  1435  002E6E  0E02               	movlw	2
  1436  002E70  5DE5               	subwf	_i& (0+255),w,b
  1437  002E72  A0D8               	btfss	status,0,c
  1438  002E74  EF3E  F017         	goto	u5571
  1439  002E78  EF40  F017         	goto	u5570
  1440  002E7C                     u5571:
  1441  002E7C  EF26  F017         	goto	l4717
  1442  002E80                     u5570:
  1443  002E80                     
  1444                           ; BSR set to: 0
  1445                           ;main.c: 56:         for (i = 0; i < 2; i++) {
  1446  002E80  0E00               	movlw	0
  1447  002E82  6FE6               	movwf	(_i+1)& (0+255),b
  1448  002E84  0E00               	movlw	0
  1449  002E86  6FE5               	movwf	_i& (0+255),b
  1450  002E88                     l4729:
  1451                           
  1452                           ; BSR set to: 0
  1453                           ;main.c: 57:             atraso_ms(350);
  1454  002E88  0E01               	movlw	1
  1455  002E8A  6E02               	movwf	(atraso_ms@t+1)^0,c
  1456  002E8C  0E5E               	movlw	94
  1457  002E8E  6E01               	movwf	atraso_ms@t^0,c
  1458  002E90  ECA4  F01D         	call	_atraso_ms	;wreg free
  1459                           
  1460                           ;main.c: 58:             lcd_cmd(0x1C);
  1461  002E94  0E1C               	movlw	28
  1462  002E96  ECDF  F01F         	call	_lcd_cmd
  1463  002E9A                     
  1464                           ;main.c: 59:         }
  1465  002E9A  0100               	movlb	0	; () banked
  1466  002E9C  4BE5               	infsnz	_i& (0+255),f,b
  1467  002E9E  2BE6               	incf	(_i+1)& (0+255),f,b
  1468  002EA0                     
  1469                           ; BSR set to: 0
  1470  002EA0  BFE6               	btfsc	(_i+1)& (0+255),7,b
  1471  002EA2  EF5C  F017         	goto	u5581
  1472  002EA6  51E6               	movf	(_i+1)& (0+255),w,b
  1473  002EA8  E109               	bnz	u5580
  1474  002EAA  0E02               	movlw	2
  1475  002EAC  5DE5               	subwf	_i& (0+255),w,b
  1476  002EAE  A0D8               	btfss	status,0,c
  1477  002EB0  EF5C  F017         	goto	u5581
  1478  002EB4  EF5E  F017         	goto	u5580
  1479  002EB8                     u5581:
  1480  002EB8  EF44  F017         	goto	l4729
  1481  002EBC                     u5580:
  1482  002EBC                     
  1483                           ; BSR set to: 0
  1484                           ;main.c: 62:         (*(volatile __near unsigned char*)0xF93) = 0xF8;
  1485  002EBC  0EF8               	movlw	248
  1486  002EBE  6E93               	movwf	147,c	;volatile
  1487                           
  1488                           ;main.c: 63:         (*(volatile __near unsigned char*)0xF92) = 0x20;
  1489  002EC0  0E20               	movlw	32
  1490  002EC2  6E92               	movwf	146,c	;volatile
  1491                           
  1492                           ;main.c: 64:         (*(volatile __near unsigned char*)0xF93) = 0x3F;
  1493  002EC4  0E3F               	movlw	63
  1494  002EC6  6E93               	movwf	147,c	;volatile
  1495                           
  1496                           ;main.c: 65:         (*(volatile __near unsigned char*)0xF92) = 0x20;
  1497  002EC8  0E20               	movlw	32
  1498  002ECA  6E92               	movwf	146,c	;volatile
  1499                           
  1500                           ;main.c: 66:         (*(volatile __near unsigned char*)0xF93) = 0x3F;
  1501  002ECC  0E3F               	movlw	63
  1502  002ECE  6E93               	movwf	147,c	;volatile
  1503                           
  1504                           ;main.c: 67:         (*(volatile __near unsigned char*)0xF96) = 0x00;
  1505  002ED0  0E00               	movlw	0
  1506  002ED2  6E96               	movwf	150,c	;volatile
  1507  002ED4                     l4737:
  1508                           
  1509                           ;main.c: 79:             if (!((((*(volatile __near unsigned char*)0xF81)) & (1<<1)))) {
  1510  002ED4  B281               	btfsc	129,1,c	;volatile
  1511  002ED6  EF6F  F017         	goto	u5591
  1512  002EDA  EF71  F017         	goto	u5590
  1513  002EDE                     u5591:
  1514  002EDE  EF73  F017         	goto	l119
  1515  002EE2                     u5590:
  1516  002EE2  EF0C  F017         	goto	l113
  1517  002EE6                     l119:
  1518  002EE6  B681               	btfsc	129,3,c	;volatile
  1519  002EE8  EF78  F017         	goto	u5601
  1520  002EEC  EF7A  F017         	goto	u5600
  1521  002EF0                     u5601:
  1522  002EF0  EF82  F017         	goto	l122
  1523  002EF4                     u5600:
  1524  002EF4                     
  1525                           ;main.c: 83:                 ver_quantidade(&volume);
  1526  002EF4  0EE7               	movlw	low _volume
  1527  002EF6  6E7E               	movwf	ver_quantidade@vol^0,c
  1528  002EF8  0E00               	movlw	high _volume
  1529  002EFA  6E7F               	movwf	(ver_quantidade@vol+1)^0,c
  1530  002EFC  EC5F  F01C         	call	_ver_quantidade	;wreg free
  1531                           
  1532                           ;main.c: 84:             }
  1533  002F00  EF6A  F017         	goto	l4737
  1534  002F04                     l122:
  1535  002F04  B881               	btfsc	129,4,c	;volatile
  1536  002F06  EF87  F017         	goto	u5611
  1537  002F0A  EF89  F017         	goto	u5610
  1538  002F0E                     u5611:
  1539  002F0E  EF91  F017         	goto	l124
  1540  002F12                     u5610:
  1541  002F12                     
  1542                           ;main.c: 86:                 encher_tanque(&volume);
  1543  002F12  0EE7               	movlw	low _volume
  1544  002F14  6E7E               	movwf	encher_tanque@vol^0,c
  1545  002F16  0E00               	movlw	high _volume
  1546  002F18  6E7F               	movwf	(encher_tanque@vol+1)^0,c
  1547  002F1A  ECF1  F00F         	call	_encher_tanque	;wreg free
  1548                           
  1549                           ;main.c: 87:             }
  1550  002F1E  EF6A  F017         	goto	l4737
  1551  002F22                     l124:
  1552  002F22  BA81               	btfsc	129,5,c	;volatile
  1553  002F24  EF96  F017         	goto	u5621
  1554  002F28  EF98  F017         	goto	u5620
  1555  002F2C                     u5621:
  1556  002F2C  EFA0  F017         	goto	l121
  1557  002F30                     u5620:
  1558  002F30                     
  1559                           ;main.c: 89:                 esvaziar_tanque(&volume);
  1560  002F30  0EE7               	movlw	low _volume
  1561  002F32  6E7E               	movwf	esvaziar_tanque@vol^0,c
  1562  002F34  0E00               	movlw	high _volume
  1563  002F36  6E7F               	movwf	(esvaziar_tanque@vol+1)^0,c
  1564  002F38  ECB7  F013         	call	_esvaziar_tanque	;wreg free
  1565  002F3C  EF6A  F017         	goto	l4737
  1566  002F40                     l121:
  1567  002F40  EF6A  F017         	goto	l4737
  1568  002F44  EF00  F000         	goto	start
  1569  002F48                     __end_of_main:
  1570                           	callstack 0
  1571                           
  1572 ;; *************** function _ver_quantidade *****************
  1573 ;; Defined at:
  1574 ;;		line 7 in file "ver.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;  vol             2  125[COMRAM] PTR 
  1577 ;;		 -> volume(4), 
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;  y               8   36[BANK0 ] unsigned char [8]
  1580 ;;  i               2   44[BANK0 ] int 
  1581 ;; Return value:  Size  Location     Type
  1582 ;;                  1    wreg      void 
  1583 ;; Registers used:
  1584 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1590 ;;      Params:         2       0       0       0       0       0       0
  1591 ;;      Locals:         0      10       0       0       0       0       0
  1592 ;;      Temps:          0       0       0       0       0       0       0
  1593 ;;      Totals:         2      10       0       0       0       0       0
  1594 ;;Total ram usage:       12 bytes
  1595 ;; Hardware stack levels used:    1
  1596 ;; Hardware stack levels required when called:    8
  1597 ;; This function calls:
  1598 ;;		_lcd_cmd
  1599 ;;		_lcd_str
  1600 ;;		_sprintf
  1601 ;; This function is called by:
  1602 ;;		_main
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           	psect	text1
  1607  0038BE                     __ptext1:
  1608                           	callstack 0
  1609  0038BE                     _ver_quantidade:
  1610                           	callstack 22
  1611  0038BE                     
  1612                           ;ver.c: 9:     int i;;ver.c: 10:     char y[8];;ver.c: 11:     sprintf(y, "%.1f", *vol);
  1613  0038BE  0EA4               	movlw	low ver_quantidade@y
  1614  0038C0  0100               	movlb	0	; () banked
  1615  0038C2  6F92               	movwf	sprintf@s& (0+255),b
  1616  0038C4  0E00               	movlw	high ver_quantidade@y
  1617  0038C6  6F93               	movwf	(sprintf@s+1)& (0+255),b
  1618  0038C8  0ED7               	movlw	low STR_11
  1619  0038CA  6F94               	movwf	sprintf@fmt& (0+255),b
  1620  0038CC  0E06               	movlw	high STR_11
  1621  0038CE  6F95               	movwf	(sprintf@fmt+1)& (0+255),b
  1622  0038D0  C07E  FFD9         	movff	ver_quantidade@vol,fsr2l
  1623  0038D4  C07F  FFDA         	movff	ver_quantidade@vol+1,fsr2h
  1624  0038D8  CFDE F096          	movff	postinc2,?_sprintf+4
  1625  0038DC  CFDE F097          	movff	postinc2,?_sprintf+5
  1626  0038E0  CFDE F098          	movff	postinc2,?_sprintf+6
  1627  0038E4  CFDE F099          	movff	postinc2,?_sprintf+7
  1628  0038E8  ECC4  F01E         	call	_sprintf	;wreg free
  1629  0038EC                     
  1630                           ;ver.c: 13:     lcd_cmd(0x01);
  1631  0038EC  0E01               	movlw	1
  1632  0038EE  ECDF  F01F         	call	_lcd_cmd
  1633  0038F2                     
  1634                           ;ver.c: 14:     lcd_cmd(0x80);
  1635  0038F2  0E80               	movlw	128
  1636  0038F4  ECDF  F01F         	call	_lcd_cmd
  1637  0038F8                     
  1638                           ;ver.c: 15:     lcd_str("Atual: ");
  1639  0038F8  0ECF               	movlw	low STR_18
  1640  0038FA  6E08               	movwf	lcd_str@str^0,c
  1641  0038FC  0E06               	movlw	high STR_18
  1642  0038FE  6E09               	movwf	(lcd_str@str+1)^0,c
  1643  003900  EC68  F01D         	call	_lcd_str	;wreg free
  1644  003904                     
  1645                           ;ver.c: 16:     lcd_str(y);
  1646  003904  0EA4               	movlw	low ver_quantidade@y
  1647  003906  6E08               	movwf	lcd_str@str^0,c
  1648  003908  0E00               	movlw	high ver_quantidade@y
  1649  00390A  6E09               	movwf	(lcd_str@str+1)^0,c
  1650  00390C  EC68  F01D         	call	_lcd_str	;wreg free
  1651  003910                     
  1652                           ;ver.c: 17:     lcd_str(" L");
  1653  003910  0EEF               	movlw	low STR_12
  1654  003912  6E08               	movwf	lcd_str@str^0,c
  1655  003914  0E06               	movlw	high STR_12
  1656  003916  6E09               	movwf	(lcd_str@str+1)^0,c
  1657  003918  EC68  F01D         	call	_lcd_str	;wreg free
  1658  00391C                     
  1659                           ;ver.c: 18:     lcd_cmd(0xC0);
  1660  00391C  0EC0               	movlw	192
  1661  00391E  ECDF  F01F         	call	_lcd_cmd
  1662  003922                     
  1663                           ;ver.c: 19:     lcd_str("RB1-Voltar");
  1664  003922  0E67               	movlw	low (STR_16+3)
  1665  003924  6E08               	movwf	lcd_str@str^0,c
  1666  003926  0E06               	movlw	high (STR_16+3)
  1667  003928  6E09               	movwf	(lcd_str@str+1)^0,c
  1668  00392A  EC68  F01D         	call	_lcd_str	;wreg free
  1669  00392E                     
  1670                           ;ver.c: 20:     lcd_cmd(0xC0);
  1671  00392E  0EC0               	movlw	192
  1672  003930  ECDF  F01F         	call	_lcd_cmd
  1673  003934                     
  1674                           ;ver.c: 22:     for (i = 0; i < 7; i++) {
  1675  003934  0E00               	movlw	0
  1676  003936  0100               	movlb	0	; () banked
  1677  003938  6FAD               	movwf	(ver_quantidade@i+1)& (0+255),b
  1678  00393A  0E00               	movlw	0
  1679  00393C  6FAC               	movwf	ver_quantidade@i& (0+255),b
  1680  00393E                     l4453:
  1681                           
  1682                           ; BSR set to: 0
  1683                           ;ver.c: 23:         lcd_cmd(0x10);
  1684  00393E  0E10               	movlw	16
  1685  003940  ECDF  F01F         	call	_lcd_cmd
  1686  003944                     
  1687                           ;ver.c: 24:     }
  1688  003944  0100               	movlb	0	; () banked
  1689  003946  4BAC               	infsnz	ver_quantidade@i& (0+255),f,b
  1690  003948  2BAD               	incf	(ver_quantidade@i+1)& (0+255),f,b
  1691  00394A                     
  1692                           ; BSR set to: 0
  1693  00394A  BFAD               	btfsc	(ver_quantidade@i+1)& (0+255),7,b
  1694  00394C  EFB1  F01C         	goto	u5421
  1695  003950  51AD               	movf	(ver_quantidade@i+1)& (0+255),w,b
  1696  003952  E109               	bnz	u5420
  1697  003954  0E07               	movlw	7
  1698  003956  5DAC               	subwf	ver_quantidade@i& (0+255),w,b
  1699  003958  A0D8               	btfss	status,0,c
  1700  00395A  EFB1  F01C         	goto	u5421
  1701  00395E  EFB3  F01C         	goto	u5420
  1702  003962                     u5421:
  1703  003962  EF9F  F01C         	goto	l4453
  1704  003966                     u5420:
  1705  003966                     l175:
  1706                           
  1707                           ;ver.c: 31:     while(((((*(volatile __near unsigned char*)0xF81)) & (1<<1)))){
  1708  003966  B281               	btfsc	129,1,c	;volatile
  1709  003968  EFB8  F01C         	goto	u5431
  1710  00396C  EFBA  F01C         	goto	u5430
  1711  003970                     u5431:
  1712  003970  EFB3  F01C         	goto	l175
  1713  003974                     u5430:
  1714  003974  0012               	return		;funcret
  1715  003976                     __end_of_ver_quantidade:
  1716                           	callstack 0
  1717                           
  1718 ;; *************** function _lcd_init *****************
  1719 ;; Defined at:
  1720 ;;		line 29 in file "lcd.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;		None
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;		None
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      void 
  1727 ;; Registers used:
  1728 ;;		wreg, status,2, status,0, cstack
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1734 ;;      Params:         0       0       0       0       0       0       0
  1735 ;;      Locals:         0       0       0       0       0       0       0
  1736 ;;      Temps:          0       0       0       0       0       0       0
  1737 ;;      Totals:         0       0       0       0       0       0       0
  1738 ;;Total ram usage:        0 bytes
  1739 ;; Hardware stack levels used:    1
  1740 ;; Hardware stack levels required when called:    2
  1741 ;; This function calls:
  1742 ;;		_atraso_ms
  1743 ;;		_lcd_cmd
  1744 ;; This function is called by:
  1745 ;;		_main
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749                           	psect	text2
  1750  003CD0                     __ptext2:
  1751                           	callstack 0
  1752  003CD0                     _lcd_init:
  1753                           	callstack 28
  1754  003CD0                     
  1755                           ;lcd.c: 30:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  1756  003CD0  9284               	bcf	132,1,c	;volatile
  1757                           
  1758                           ;lcd.c: 31:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<2));
  1759  003CD2  9484               	bcf	132,2,c	;volatile
  1760  003CD4                     
  1761                           ;lcd.c: 32:     atraso_ms(20);
  1762  003CD4  0E00               	movlw	0
  1763  003CD6  6E02               	movwf	(atraso_ms@t+1)^0,c
  1764  003CD8  0E14               	movlw	20
  1765  003CDA  6E01               	movwf	atraso_ms@t^0,c
  1766  003CDC  ECA4  F01D         	call	_atraso_ms	;wreg free
  1767  003CE0                     
  1768                           ;lcd.c: 33:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  1769  003CE0  8284               	bsf	132,1,c	;volatile
  1770                           
  1771                           ;lcd.c: 35:     lcd_cmd(0x38);
  1772  003CE2  0E38               	movlw	56
  1773  003CE4  ECDF  F01F         	call	_lcd_cmd
  1774                           
  1775                           ;lcd.c: 36:     atraso_ms(5);
  1776  003CE8  0E00               	movlw	0
  1777  003CEA  6E02               	movwf	(atraso_ms@t+1)^0,c
  1778  003CEC  0E05               	movlw	5
  1779  003CEE  6E01               	movwf	atraso_ms@t^0,c
  1780  003CF0  ECA4  F01D         	call	_atraso_ms	;wreg free
  1781                           
  1782                           ;lcd.c: 37:     lcd_cmd(0x38);
  1783  003CF4  0E38               	movlw	56
  1784  003CF6  ECDF  F01F         	call	_lcd_cmd
  1785                           
  1786                           ;lcd.c: 38:     atraso_ms(1);
  1787  003CFA  0E00               	movlw	0
  1788  003CFC  6E02               	movwf	(atraso_ms@t+1)^0,c
  1789  003CFE  0E01               	movlw	1
  1790  003D00  6E01               	movwf	atraso_ms@t^0,c
  1791  003D02  ECA4  F01D         	call	_atraso_ms	;wreg free
  1792                           
  1793                           ;lcd.c: 39:     lcd_cmd(0x38);
  1794  003D06  0E38               	movlw	56
  1795  003D08  ECDF  F01F         	call	_lcd_cmd
  1796                           
  1797                           ;lcd.c: 40:     lcd_cmd(0x08);
  1798  003D0C  0E08               	movlw	8
  1799  003D0E  ECDF  F01F         	call	_lcd_cmd
  1800                           
  1801                           ;lcd.c: 41:     lcd_cmd(0x0F);
  1802  003D12  0E0F               	movlw	15
  1803  003D14  ECDF  F01F         	call	_lcd_cmd
  1804                           
  1805                           ;lcd.c: 42:     lcd_cmd(0x01);
  1806  003D18  0E01               	movlw	1
  1807  003D1A  ECDF  F01F         	call	_lcd_cmd
  1808                           
  1809                           ;lcd.c: 43:     lcd_cmd(0x38);
  1810  003D1E  0E38               	movlw	56
  1811  003D20  ECDF  F01F         	call	_lcd_cmd
  1812                           
  1813                           ;lcd.c: 44:     lcd_cmd(0x80);
  1814  003D24  0E80               	movlw	128
  1815  003D26  ECDF  F01F         	call	_lcd_cmd
  1816  003D2A  0012               	return		;funcret
  1817  003D2C                     __end_of_lcd_init:
  1818                           	callstack 0
  1819                           
  1820 ;; *************** function _esvaziar_tanque *****************
  1821 ;; Defined at:
  1822 ;;		line 8 in file "esvaziar.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;  vol             2  125[COMRAM] PTR 
  1825 ;;		 -> volume(4), 
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;  numeros        20   36[BANK0 ] int [10]
  1828 ;;  y               8   56[BANK0 ] unsigned char [8]
  1829 ;;  i               2   70[BANK0 ] int 
  1830 ;;  tempo           2   64[BANK0 ] int 
  1831 ;;  decremento      4   66[BANK0 ] int 
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  1    wreg      void 
  1834 ;; Registers used:
  1835 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1841 ;;      Params:         2       0       0       0       0       0       0
  1842 ;;      Locals:         0      36       0       0       0       0       0
  1843 ;;      Temps:          0       0       0       0       0       0       0
  1844 ;;      Totals:         2      36       0       0       0       0       0
  1845 ;;Total ram usage:       38 bytes
  1846 ;; Hardware stack levels used:    1
  1847 ;; Hardware stack levels required when called:    8
  1848 ;; This function calls:
  1849 ;;		___fldiv
  1850 ;;		___flsub
  1851 ;;		___fltol
  1852 ;;		_atraso_ms
  1853 ;;		_lcd_cmd
  1854 ;;		_lcd_str
  1855 ;;		_sprintf
  1856 ;; This function is called by:
  1857 ;;		_main
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861                           	psect	text3
  1862  00276E                     __ptext3:
  1863                           	callstack 0
  1864  00276E                     _esvaziar_tanque:
  1865                           	callstack 22
  1866  00276E                     
  1867                           ;esvaziar.c: 11:     lcd_cmd(0x01);
  1868  00276E  0E01               	movlw	1
  1869  002770  ECDF  F01F         	call	_lcd_cmd
  1870                           
  1871                           ;esvaziar.c: 12:     lcd_cmd(0x80);
  1872  002774  0E80               	movlw	128
  1873  002776  ECDF  F01F         	call	_lcd_cmd
  1874  00277A                     
  1875                           ;esvaziar.c: 13:     lcd_str("Quant(L): ");
  1876  00277A  0EA5               	movlw	low STR_7
  1877  00277C  6E08               	movwf	lcd_str@str^0,c
  1878  00277E  0E06               	movlw	high STR_7
  1879  002780  6E09               	movwf	(lcd_str@str+1)^0,c
  1880  002782  EC68  F01D         	call	_lcd_str	;wreg free
  1881  002786                     
  1882                           ;esvaziar.c: 14:     lcd_cmd(0xC0);
  1883  002786  0EC0               	movlw	192
  1884  002788  ECDF  F01F         	call	_lcd_cmd
  1885                           
  1886                           ;esvaziar.c: 15:     lcd_str("RB1-voltar");
  1887  00278C  0EB0               	movlw	low STR_8
  1888  00278E  6E08               	movwf	lcd_str@str^0,c
  1889  002790  0E06               	movlw	high STR_8
  1890  002792  6E09               	movwf	(lcd_str@str+1)^0,c
  1891  002794  EC68  F01D         	call	_lcd_str	;wreg free
  1892  002798                     
  1893                           ;esvaziar.c: 16:     lcd_cmd(0x80 +10);
  1894  002798  0E8A               	movlw	138
  1895  00279A  ECDF  F01F         	call	_lcd_cmd
  1896  00279E                     
  1897                           ;esvaziar.c: 17:     atraso_ms(1000);
  1898  00279E  0E03               	movlw	3
  1899  0027A0  6E02               	movwf	(atraso_ms@t+1)^0,c
  1900  0027A2  0EE8               	movlw	232
  1901  0027A4  6E01               	movwf	atraso_ms@t^0,c
  1902  0027A6  ECA4  F01D         	call	_atraso_ms	;wreg free
  1903  0027AA                     
  1904                           ;esvaziar.c: 19:     double decremento = 5;
  1905  0027AA  0E00               	movlw	0
  1906  0027AC  0100               	movlb	0	; () banked
  1907  0027AE  6FC2               	movwf	esvaziar_tanque@decremento& (0+255),b
  1908  0027B0  0E00               	movlw	0
  1909  0027B2  6FC3               	movwf	(esvaziar_tanque@decremento+1)& (0+255),b
  1910  0027B4  0EA0               	movlw	160
  1911  0027B6  6FC4               	movwf	(esvaziar_tanque@decremento+2)& (0+255),b
  1912  0027B8  0E40               	movlw	64
  1913  0027BA  6FC5               	movwf	(esvaziar_tanque@decremento+3)& (0+255),b
  1914  0027BC                     
  1915                           ; BSR set to: 0
  1916                           ;esvaziar.c: 21:     if (*vol - decremento < 0) {
  1917  0027BC  C07E  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  1918  0027C0  C07F  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  1919  0027C4  CFDE F01F          	movff	postinc2,___flsub@b
  1920  0027C8  CFDE F020          	movff	postinc2,___flsub@b+1
  1921  0027CC  CFDE F021          	movff	postinc2,___flsub@b+2
  1922  0027D0  CFDE F022          	movff	postinc2,___flsub@b+3
  1923  0027D4  C0C2  F023         	movff	esvaziar_tanque@decremento,___flsub@a
  1924  0027D8  C0C3  F024         	movff	esvaziar_tanque@decremento+1,___flsub@a+1
  1925  0027DC  C0C4  F025         	movff	esvaziar_tanque@decremento+2,___flsub@a+2
  1926  0027E0  C0C5  F026         	movff	esvaziar_tanque@decremento+3,___flsub@a+3
  1927  0027E4  EC16  F01F         	call	___flsub	;wreg free
  1928  0027E8  BE22               	btfsc	(?___flsub+3)^0,7,c
  1929  0027EA  EFFB  F013         	goto	u5530
  1930  0027EE  EFF9  F013         	goto	u5531
  1931  0027F2                     u5531:
  1932  0027F2  EF12  F014         	goto	l4599
  1933  0027F6                     u5530:
  1934  0027F6                     
  1935                           ;esvaziar.c: 24:         lcd_cmd(0x01);
  1936  0027F6  0E01               	movlw	1
  1937  0027F8  ECDF  F01F         	call	_lcd_cmd
  1938                           
  1939                           ;esvaziar.c: 25:         lcd_cmd(0x80);
  1940  0027FC  0E80               	movlw	128
  1941  0027FE  ECDF  F01F         	call	_lcd_cmd
  1942  002802                     
  1943                           ;esvaziar.c: 26:         lcd_str("ERRO: vol < 0");
  1944  002802  0E56               	movlw	low STR_23
  1945  002804  6E08               	movwf	lcd_str@str^0,c
  1946  002806  0E06               	movlw	high STR_23
  1947  002808  6E09               	movwf	(lcd_str@str+1)^0,c
  1948  00280A  EC68  F01D         	call	_lcd_str	;wreg free
  1949  00280E                     
  1950                           ;esvaziar.c: 27:         lcd_cmd(0xC0);
  1951  00280E  0EC0               	movlw	192
  1952  002810  ECDF  F01F         	call	_lcd_cmd
  1953                           
  1954                           ;esvaziar.c: 28:         lcd_str("RB1-Voltar");
  1955  002814  0E67               	movlw	low (STR_16+3)
  1956  002816  6E08               	movwf	lcd_str@str^0,c
  1957  002818  0E06               	movlw	high (STR_16+3)
  1958  00281A  6E09               	movwf	(lcd_str@str+1)^0,c
  1959  00281C  EC68  F01D         	call	_lcd_str	;wreg free
  1960                           
  1961                           ;esvaziar.c: 34:     } else {
  1962  002820  EFD3  F014         	goto	l195
  1963  002824                     l4599:
  1964                           
  1965                           ;esvaziar.c: 36:         *vol -= decremento;
  1966  002824  C07E  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  1967  002828  C07F  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  1968  00282C  CFDE F01F          	movff	postinc2,___flsub@b
  1969  002830  CFDE F020          	movff	postinc2,___flsub@b+1
  1970  002834  CFDE F021          	movff	postinc2,___flsub@b+2
  1971  002838  CFDE F022          	movff	postinc2,___flsub@b+3
  1972  00283C  C0C2  F023         	movff	esvaziar_tanque@decremento,___flsub@a
  1973  002840  C0C3  F024         	movff	esvaziar_tanque@decremento+1,___flsub@a+1
  1974  002844  C0C4  F025         	movff	esvaziar_tanque@decremento+2,___flsub@a+2
  1975  002848  C0C5  F026         	movff	esvaziar_tanque@decremento+3,___flsub@a+3
  1976  00284C  EC16  F01F         	call	___flsub	;wreg free
  1977  002850  C07E  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  1978  002854  C07F  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  1979  002858  C01F  FFDE         	movff	?___flsub,postinc2
  1980  00285C  C020  FFDE         	movff	?___flsub+1,postinc2
  1981  002860  C021  FFDE         	movff	?___flsub+2,postinc2
  1982  002864  C022  FFDE         	movff	?___flsub+3,postinc2
  1983  002868                     
  1984                           ;esvaziar.c: 37:         char y[8];;esvaziar.c: 38:         sprintf(y, "%.1f", *vol);
  1985  002868  0EB8               	movlw	low esvaziar_tanque@y
  1986  00286A  0100               	movlb	0	; () banked
  1987  00286C  6F92               	movwf	sprintf@s& (0+255),b
  1988  00286E  0E00               	movlw	high esvaziar_tanque@y
  1989  002870  6F93               	movwf	(sprintf@s+1)& (0+255),b
  1990  002872  0ED7               	movlw	low STR_11
  1991  002874  6F94               	movwf	sprintf@fmt& (0+255),b
  1992  002876  0E06               	movlw	high STR_11
  1993  002878  6F95               	movwf	(sprintf@fmt+1)& (0+255),b
  1994  00287A  C07E  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  1995  00287E  C07F  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  1996  002882  CFDE F096          	movff	postinc2,?_sprintf+4
  1997  002886  CFDE F097          	movff	postinc2,?_sprintf+5
  1998  00288A  CFDE F098          	movff	postinc2,?_sprintf+6
  1999  00288E  CFDE F099          	movff	postinc2,?_sprintf+7
  2000  002892  ECC4  F01E         	call	_sprintf	;wreg free
  2001  002896                     
  2002                           ;esvaziar.c: 39:         lcd_str(y);
  2003  002896  0EB8               	movlw	low esvaziar_tanque@y
  2004  002898  6E08               	movwf	lcd_str@str^0,c
  2005  00289A  0E00               	movlw	high esvaziar_tanque@y
  2006  00289C  6E09               	movwf	(lcd_str@str+1)^0,c
  2007  00289E  EC68  F01D         	call	_lcd_str	;wreg free
  2008  0028A2                     
  2009                           ;esvaziar.c: 40:         lcd_str(" L");
  2010  0028A2  0EEF               	movlw	low STR_12
  2011  0028A4  6E08               	movwf	lcd_str@str^0,c
  2012  0028A6  0E06               	movlw	high STR_12
  2013  0028A8  6E09               	movwf	(lcd_str@str+1)^0,c
  2014  0028AA  EC68  F01D         	call	_lcd_str	;wreg free
  2015  0028AE                     
  2016                           ;esvaziar.c: 43:         int tempo = decremento / 2;
  2017  0028AE  0E00               	movlw	0
  2018  0028B0  6E05               	movwf	___fldiv@a^0,c
  2019  0028B2  0E00               	movlw	0
  2020  0028B4  6E06               	movwf	(___fldiv@a+1)^0,c
  2021  0028B6  0E00               	movlw	0
  2022  0028B8  6E07               	movwf	(___fldiv@a+2)^0,c
  2023  0028BA  0E40               	movlw	64
  2024  0028BC  6E08               	movwf	(___fldiv@a+3)^0,c
  2025  0028BE  C0C2  F001         	movff	esvaziar_tanque@decremento,___fldiv@b
  2026  0028C2  C0C3  F002         	movff	esvaziar_tanque@decremento+1,___fldiv@b+1
  2027  0028C6  C0C4  F003         	movff	esvaziar_tanque@decremento+2,___fldiv@b+2
  2028  0028CA  C0C5  F004         	movff	esvaziar_tanque@decremento+3,___fldiv@b+3
  2029  0028CE  ECEA  F011         	call	___fldiv	;wreg free
  2030  0028D2  C001  F01A         	movff	?___fldiv,___fltol@f1
  2031  0028D6  C002  F01B         	movff	?___fldiv+1,___fltol@f1+1
  2032  0028DA  C003  F01C         	movff	?___fldiv+2,___fltol@f1+2
  2033  0028DE  C004  F01D         	movff	?___fldiv+3,___fltol@f1+3
  2034  0028E2  EC46  F019         	call	___fltol	;wreg free
  2035  0028E6  C01A  F0C0         	movff	?___fltol,esvaziar_tanque@tempo
  2036  0028EA  C01B  F0C1         	movff	?___fltol+1,esvaziar_tanque@tempo+1
  2037  0028EE                     
  2038                           ;esvaziar.c: 44:         int i;;esvaziar.c: 45:         int numeros[10] = {0x3F, 0x06, 0
      +                          x5B, 0x4F, 0x66, 0x6D, 0x7D,
  2039  0028EE  EE21  F050         	lfsr	2,esvaziar_tanque@F342
  2040  0028F2  EE10  F0A4         	lfsr	1,esvaziar_tanque@numeros
  2041  0028F6  0E13               	movlw	19
  2042  0028F8                     u5541:
  2043  0028F8  CFDB FFE3          	movff	plusw2,plusw1
  2044  0028FC  06E8               	decf	wreg,f,c
  2045  0028FE  E2FC               	bc	u5541
  2046  002900                     
  2047                           ;esvaziar.c: 48:         (*(volatile __near unsigned char*)0xF92) = 0x00;
  2048  002900  0E00               	movlw	0
  2049  002902  6E92               	movwf	146,c	;volatile
  2050  002904                     
  2051                           ;esvaziar.c: 49:         (((*(volatile __near unsigned char*)0xF80)) |= (1<<5));
  2052  002904  8A80               	bsf	128,5,c	;volatile
  2053  002906                     
  2054                           ;esvaziar.c: 54:         lcd_cmd(0x01);
  2055  002906  0E01               	movlw	1
  2056  002908  ECDF  F01F         	call	_lcd_cmd
  2057  00290C                     
  2058                           ;esvaziar.c: 55:         lcd_cmd(0x80);
  2059  00290C  0E80               	movlw	128
  2060  00290E  ECDF  F01F         	call	_lcd_cmd
  2061  002912                     
  2062                           ;esvaziar.c: 56:         lcd_str("Esvaziando...");
  2063  002912  0E48               	movlw	low STR_27
  2064  002914  6E08               	movwf	lcd_str@str^0,c
  2065  002916  0E06               	movlw	high STR_27
  2066  002918  6E09               	movwf	(lcd_str@str+1)^0,c
  2067  00291A  EC68  F01D         	call	_lcd_str	;wreg free
  2068  00291E                     
  2069                           ;esvaziar.c: 57:         lcd_cmd(0xC0);
  2070  00291E  0EC0               	movlw	192
  2071  002920  ECDF  F01F         	call	_lcd_cmd
  2072  002924                     
  2073                           ;esvaziar.c: 58:         lcd_str("Aguarde!");
  2074  002924  0EC6               	movlw	low STR_14
  2075  002926  6E08               	movwf	lcd_str@str^0,c
  2076  002928  0E06               	movlw	high STR_14
  2077  00292A  6E09               	movwf	(lcd_str@str+1)^0,c
  2078  00292C  EC68  F01D         	call	_lcd_str	;wreg free
  2079  002930                     
  2080                           ;esvaziar.c: 65:         for (i = tempo; i >= 0; i--) {
  2081  002930  C0C0  F0C6         	movff	esvaziar_tanque@tempo,esvaziar_tanque@i
  2082  002934  C0C1  F0C7         	movff	esvaziar_tanque@tempo+1,esvaziar_tanque@i+1
  2083  002938                     l4627:
  2084  002938  0100               	movlb	0	; () banked
  2085  00293A  BFC7               	btfsc	(esvaziar_tanque@i+1)& (0+255),7,b
  2086  00293C  EFA4  F014         	goto	u5550
  2087  002940  EFA2  F014         	goto	u5551
  2088  002944                     u5551:
  2089  002944  EFA6  F014         	goto	l4631
  2090  002948                     u5550:
  2091  002948  EFBD  F014         	goto	l4639
  2092  00294C                     l4631:
  2093                           
  2094                           ; BSR set to: 0
  2095                           ;esvaziar.c: 66:             (*(volatile __near unsigned char*)0xF83) = numeros[i];
  2096  00294C  90D8               	bcf	status,0,c
  2097  00294E  35C6               	rlcf	esvaziar_tanque@i& (0+255),w,b
  2098  002950  6ED9               	movwf	fsr2l,c
  2099  002952  35C7               	rlcf	(esvaziar_tanque@i+1)& (0+255),w,b
  2100  002954  6EDA               	movwf	fsr2h,c
  2101  002956  0EA4               	movlw	low esvaziar_tanque@numeros
  2102  002958  26D9               	addwf	fsr2l,f,c
  2103  00295A  0E00               	movlw	high esvaziar_tanque@numeros
  2104  00295C  22DA               	addwfc	fsr2h,f,c
  2105  00295E  50DF               	movf	indf2,w,c
  2106  002960  6E83               	movwf	131,c	;volatile
  2107  002962                     
  2108                           ; BSR set to: 0
  2109                           ;esvaziar.c: 67:             atraso_ms(1000);
  2110  002962  0E03               	movlw	3
  2111  002964  6E02               	movwf	(atraso_ms@t+1)^0,c
  2112  002966  0EE8               	movlw	232
  2113  002968  6E01               	movwf	atraso_ms@t^0,c
  2114  00296A  ECA4  F01D         	call	_atraso_ms	;wreg free
  2115  00296E                     
  2116                           ;esvaziar.c: 68:         }
  2117  00296E  0100               	movlb	0	; () banked
  2118  002970  07C6               	decf	esvaziar_tanque@i& (0+255),f,b
  2119  002972  A0D8               	btfss	status,0,c
  2120  002974  07C7               	decf	(esvaziar_tanque@i+1)& (0+255),f,b
  2121  002976  EF9C  F014         	goto	l4627
  2122  00297A                     l4639:
  2123                           
  2124                           ; BSR set to: 0
  2125                           ;esvaziar.c: 69:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  2126  00297A  9A80               	bcf	128,5,c	;volatile
  2127  00297C                     
  2128                           ; BSR set to: 0
  2129                           ;esvaziar.c: 72:         lcd_cmd(0x01);
  2130  00297C  0E01               	movlw	1
  2131  00297E  ECDF  F01F         	call	_lcd_cmd
  2132  002982                     
  2133                           ;esvaziar.c: 73:         lcd_cmd(0x80);
  2134  002982  0E80               	movlw	128
  2135  002984  ECDF  F01F         	call	_lcd_cmd
  2136  002988                     
  2137                           ;esvaziar.c: 74:         lcd_str("    SUCESSO!");
  2138  002988  0E80               	movlw	low STR_15
  2139  00298A  6E08               	movwf	lcd_str@str^0,c
  2140  00298C  0E06               	movlw	high STR_15
  2141  00298E  6E09               	movwf	(lcd_str@str+1)^0,c
  2142  002990  EC68  F01D         	call	_lcd_str	;wreg free
  2143  002994                     
  2144                           ;esvaziar.c: 75:         lcd_cmd(0xC0);
  2145  002994  0EC0               	movlw	192
  2146  002996  ECDF  F01F         	call	_lcd_cmd
  2147  00299A                     
  2148                           ;esvaziar.c: 76:         lcd_str("   RB1-Voltar");
  2149  00299A  0E64               	movlw	low STR_16
  2150  00299C  6E08               	movwf	lcd_str@str^0,c
  2151  00299E  0E06               	movlw	high STR_16
  2152  0029A0  6E09               	movwf	(lcd_str@str+1)^0,c
  2153  0029A2  EC68  F01D         	call	_lcd_str	;wreg free
  2154  0029A6                     l195:
  2155                           
  2156                           ;esvaziar.c: 94:     while(((((*(volatile __near unsigned char*)0xF81)) & (1<<1)))){
  2157  0029A6  B281               	btfsc	129,1,c	;volatile
  2158  0029A8  EFD8  F014         	goto	u5561
  2159  0029AC  EFDA  F014         	goto	u5560
  2160  0029B0                     u5561:
  2161  0029B0  EFD3  F014         	goto	l195
  2162  0029B4                     u5560:
  2163  0029B4  0012               	return		;funcret
  2164  0029B6                     __end_of_esvaziar_tanque:
  2165                           	callstack 0
  2166                           
  2167 ;; *************** function _encher_tanque *****************
  2168 ;; Defined at:
  2169 ;;		line 8 in file "encher.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;  vol             2  125[COMRAM] PTR 
  2172 ;;		 -> volume(4), 
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;  numeros        20   40[BANK0 ] int [10]
  2175 ;;  y               8   60[BANK0 ] unsigned char [8]
  2176 ;;  t2              2   81[BANK0 ] int 
  2177 ;;  t1              2   76[BANK0 ] int 
  2178 ;;  tempo           2   70[BANK0 ] int 
  2179 ;;  i               2   68[BANK0 ] int 
  2180 ;;  num             4   72[BANK0 ] unsigned int [2]
  2181 ;;  i               2   83[BANK0 ] unsigned int 
  2182 ;;  incremento      2   78[BANK0 ] unsigned int 
  2183 ;;  tmp             1   80[BANK0 ] unsigned char 
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      void 
  2186 ;; Registers used:
  2187 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2193 ;;      Params:         2       0       0       0       0       0       0
  2194 ;;      Locals:         0      45       0       0       0       0       0
  2195 ;;      Temps:          0       4       0       0       0       0       0
  2196 ;;      Totals:         2      49       0       0       0       0       0
  2197 ;;Total ram usage:       51 bytes
  2198 ;; Hardware stack levels used:    1
  2199 ;; Hardware stack levels required when called:    8
  2200 ;; This function calls:
  2201 ;;		___awdiv
  2202 ;;		___awmod
  2203 ;;		___fladd
  2204 ;;		___flge
  2205 ;;		___wmul
  2206 ;;		___xxtofl
  2207 ;;		_atraso_ms
  2208 ;;		_lcd_cmd
  2209 ;;		_lcd_dat
  2210 ;;		_lcd_str
  2211 ;;		_sprintf
  2212 ;;		_tc_tecla
  2213 ;; This function is called by:
  2214 ;;		_main
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218                           	psect	text4
  2219  001FE2                     __ptext4:
  2220                           	callstack 0
  2221  001FE2                     _encher_tanque:
  2222                           	callstack 22
  2223  001FE2                     
  2224                           ;encher.c: 11:     lcd_cmd(0x01);
  2225  001FE2  0E01               	movlw	1
  2226  001FE4  ECDF  F01F         	call	_lcd_cmd
  2227                           
  2228                           ;encher.c: 12:     lcd_cmd(0x80);
  2229  001FE8  0E80               	movlw	128
  2230  001FEA  ECDF  F01F         	call	_lcd_cmd
  2231  001FEE                     
  2232                           ;encher.c: 13:     lcd_str("Quant(L): ");
  2233  001FEE  0EA5               	movlw	low STR_7
  2234  001FF0  6E08               	movwf	lcd_str@str^0,c
  2235  001FF2  0E06               	movlw	high STR_7
  2236  001FF4  6E09               	movwf	(lcd_str@str+1)^0,c
  2237  001FF6  EC68  F01D         	call	_lcd_str	;wreg free
  2238  001FFA                     
  2239                           ;encher.c: 14:     lcd_cmd(0xC0);
  2240  001FFA  0EC0               	movlw	192
  2241  001FFC  ECDF  F01F         	call	_lcd_cmd
  2242                           
  2243                           ;encher.c: 15:     lcd_str("RB1-voltar");
  2244  002000  0EB0               	movlw	low STR_8
  2245  002002  6E08               	movwf	lcd_str@str^0,c
  2246  002004  0E06               	movlw	high STR_8
  2247  002006  6E09               	movwf	(lcd_str@str+1)^0,c
  2248  002008  EC68  F01D         	call	_lcd_str	;wreg free
  2249  00200C                     
  2250                           ;encher.c: 16:     lcd_cmd(0x80 +10);
  2251  00200C  0E8A               	movlw	138
  2252  00200E  ECDF  F01F         	call	_lcd_cmd
  2253  002012                     
  2254                           ;encher.c: 21:     unsigned int incremento;;encher.c: 23:     unsigned int i = 0;
  2255  002012  0E00               	movlw	0
  2256  002014  0100               	movlb	0	; () banked
  2257  002016  6FD4               	movwf	(encher_tanque@i+1)& (0+255),b
  2258  002018  0E00               	movlw	0
  2259  00201A  6FD3               	movwf	encher_tanque@i& (0+255),b
  2260  00201C                     
  2261                           ; BSR set to: 0
  2262                           ;encher.c: 24:     unsigned int num[2];;encher.c: 25:     unsigned char tmp;;encher.c: 2
      +                          7:     (*(volatile __near unsigned char*)0xF93) = 0xF8;
  2263  00201C  0EF8               	movlw	248
  2264  00201E  6E93               	movwf	147,c	;volatile
  2265                           
  2266                           ;encher.c: 29:     while (i!=2) {
  2267  002020  EF62  F010         	goto	l4487
  2268  002024                     l4471:
  2269                           
  2270                           ; BSR set to: 0
  2271                           ;encher.c: 30:         (*(volatile __near unsigned char*)0xF95) = 0x0F;
  2272  002024  0E0F               	movlw	15
  2273  002026  6E95               	movwf	149,c	;volatile
  2274  002028                     
  2275                           ; BSR set to: 0
  2276                           ;encher.c: 31:         tmp = tc_tecla(0) + 0x30;
  2277  002028  0E00               	movlw	0
  2278  00202A  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  2279  00202C  0E00               	movlw	0
  2280  00202E  6E07               	movwf	tc_tecla@timeout^0,c
  2281  002030  ECE4  F015         	call	_tc_tecla	;wreg free
  2282  002034  0F30               	addlw	48
  2283  002036  0100               	movlb	0	; () banked
  2284  002038  6FD0               	movwf	encher_tanque@tmp& (0+255),b
  2285  00203A                     
  2286                           ; BSR set to: 0
  2287                           ;encher.c: 32:         (*(volatile __near unsigned char*)0xF95) = 0x00;
  2288  00203A  0E00               	movlw	0
  2289  00203C  6E95               	movwf	149,c	;volatile
  2290  00203E                     
  2291                           ; BSR set to: 0
  2292                           ;encher.c: 33:         lcd_dat(tmp);
  2293  00203E  51D0               	movf	encher_tanque@tmp& (0+255),w,b
  2294  002040  ECCA  F01F         	call	_lcd_dat
  2295  002044                     
  2296                           ;encher.c: 34:         if (i == 0) {
  2297  002044  0100               	movlb	0	; () banked
  2298  002046  51D3               	movf	encher_tanque@i& (0+255),w,b
  2299  002048  11D4               	iorwf	(encher_tanque@i+1)& (0+255),w,b
  2300  00204A  A4D8               	btfss	status,2,c
  2301  00204C  EF2A  F010         	goto	u5441
  2302  002050  EF2C  F010         	goto	u5440
  2303  002054                     u5441:
  2304  002054  EF48  F010         	goto	l4483
  2305  002058                     u5440:
  2306  002058                     
  2307                           ; BSR set to: 0
  2308                           ;encher.c: 35:             num[i] = (tmp - '0')*10;
  2309  002058  0ED0               	movlw	208
  2310  00205A  25D0               	addwf	encher_tanque@tmp& (0+255),w,b
  2311  00205C  6E01               	movwf	___wmul@multiplier^0,c
  2312  00205E  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2313  002060  0EFF               	movlw	255
  2314  002062  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  2315  002064  0E00               	movlw	0
  2316  002066  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2317  002068  0E0A               	movlw	10
  2318  00206A  6E03               	movwf	___wmul@multiplicand^0,c
  2319  00206C  EC08  F020         	call	___wmul	;wreg free
  2320  002070  90D8               	bcf	status,0,c
  2321  002072  0100               	movlb	0	; () banked
  2322  002074  35D3               	rlcf	encher_tanque@i& (0+255),w,b
  2323  002076  6ED9               	movwf	fsr2l,c
  2324  002078  35D4               	rlcf	(encher_tanque@i+1)& (0+255),w,b
  2325  00207A  6EDA               	movwf	fsr2h,c
  2326  00207C  0EC8               	movlw	low encher_tanque@num
  2327  00207E  26D9               	addwf	fsr2l,f,c
  2328  002080  0E00               	movlw	high encher_tanque@num
  2329  002082  22DA               	addwfc	fsr2h,f,c
  2330  002084  C001  FFDE         	movff	?___wmul,postinc2
  2331  002088  C002  FFDD         	movff	?___wmul+1,postdec2
  2332                           
  2333                           ;encher.c: 36:         } else {
  2334  00208C  EF60  F010         	goto	l4485
  2335  002090                     l4483:
  2336                           
  2337                           ; BSR set to: 0
  2338                           ;encher.c: 37:             num[i] = (tmp - '0');
  2339  002090  0ED0               	movlw	208
  2340  002092  6FA4               	movwf	??_encher_tanque& (0+255),b
  2341  002094  0EFF               	movlw	255
  2342  002096  6FA5               	movwf	(??_encher_tanque+1)& (0+255),b
  2343  002098  51D0               	movf	encher_tanque@tmp& (0+255),w,b
  2344  00209A  6FA6               	movwf	(??_encher_tanque+2)& (0+255),b
  2345  00209C  6BA7               	clrf	(??_encher_tanque+3)& (0+255),b
  2346  00209E  51A4               	movf	??_encher_tanque& (0+255),w,b
  2347  0020A0  27A6               	addwf	(??_encher_tanque+2)& (0+255),f,b
  2348  0020A2  51A5               	movf	(??_encher_tanque+1)& (0+255),w,b
  2349  0020A4  23A7               	addwfc	(??_encher_tanque+3)& (0+255),f,b
  2350  0020A6  90D8               	bcf	status,0,c
  2351  0020A8  35D3               	rlcf	encher_tanque@i& (0+255),w,b
  2352  0020AA  6ED9               	movwf	fsr2l,c
  2353  0020AC  35D4               	rlcf	(encher_tanque@i+1)& (0+255),w,b
  2354  0020AE  6EDA               	movwf	fsr2h,c
  2355  0020B0  0EC8               	movlw	low encher_tanque@num
  2356  0020B2  26D9               	addwf	fsr2l,f,c
  2357  0020B4  0E00               	movlw	high encher_tanque@num
  2358  0020B6  22DA               	addwfc	fsr2h,f,c
  2359  0020B8  C0A6  FFDE         	movff	??_encher_tanque+2,postinc2
  2360  0020BC  C0A7  FFDD         	movff	??_encher_tanque+3,postdec2
  2361  0020C0                     l4485:
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;encher.c: 39:         i++;
  2365  0020C0  4BD3               	infsnz	encher_tanque@i& (0+255),f,b
  2366  0020C2  2BD4               	incf	(encher_tanque@i+1)& (0+255),f,b
  2367  0020C4                     l4487:
  2368                           
  2369                           ; BSR set to: 0
  2370                           ;encher.c: 29:     while (i!=2) {
  2371  0020C4  0E02               	movlw	2
  2372  0020C6  19D3               	xorwf	encher_tanque@i& (0+255),w,b
  2373  0020C8  11D4               	iorwf	(encher_tanque@i+1)& (0+255),w,b
  2374  0020CA  A4D8               	btfss	status,2,c
  2375  0020CC  EF6A  F010         	goto	u5451
  2376  0020D0  EF6C  F010         	goto	u5450
  2377  0020D4                     u5451:
  2378  0020D4  EF12  F010         	goto	l4471
  2379  0020D8                     u5450:
  2380  0020D8                     
  2381                           ; BSR set to: 0
  2382                           ;encher.c: 42:     atraso_ms(500);
  2383  0020D8  0E01               	movlw	1
  2384  0020DA  6E02               	movwf	(atraso_ms@t+1)^0,c
  2385  0020DC  0EF4               	movlw	244
  2386  0020DE  6E01               	movwf	atraso_ms@t^0,c
  2387  0020E0  ECA4  F01D         	call	_atraso_ms	;wreg free
  2388                           
  2389                           ;encher.c: 43:     lcd_cmd(0x01);
  2390  0020E4  0E01               	movlw	1
  2391  0020E6  ECDF  F01F         	call	_lcd_cmd
  2392  0020EA                     
  2393                           ;encher.c: 45:     incremento = num[0]+num[1];
  2394  0020EA  0100               	movlb	0	; () banked
  2395  0020EC  51C8               	movf	encher_tanque@num& (0+255),w,b
  2396  0020EE  25CA               	addwf	(encher_tanque@num+2)& (0+255),w,b
  2397  0020F0  6FCE               	movwf	encher_tanque@incremento& (0+255),b
  2398  0020F2  51C9               	movf	(encher_tanque@num+1)& (0+255),w,b
  2399  0020F4  21CB               	addwfc	(encher_tanque@num+3)& (0+255),w,b
  2400  0020F6  6FCF               	movwf	(encher_tanque@incremento+1)& (0+255),b
  2401  0020F8                     
  2402                           ; BSR set to: 0
  2403                           ;encher.c: 47:     if (*vol + incremento > 70) {
  2404  0020F8  0E00               	movlw	0
  2405  0020FA  6E1F               	movwf	___flge@ff1^0,c
  2406  0020FC  0E00               	movlw	0
  2407  0020FE  6E20               	movwf	(___flge@ff1+1)^0,c
  2408  002100  0E8C               	movlw	140
  2409  002102  6E21               	movwf	(___flge@ff1+2)^0,c
  2410  002104  0E42               	movlw	66
  2411  002106  6E22               	movwf	(___flge@ff1+3)^0,c
  2412  002108  C07E  FFD9         	movff	encher_tanque@vol,fsr2l
  2413  00210C  C07F  FFDA         	movff	encher_tanque@vol+1,fsr2h
  2414  002110  CFDE F013          	movff	postinc2,___fladd@a
  2415  002114  CFDE F014          	movff	postinc2,___fladd@a+1
  2416  002118  CFDE F015          	movff	postinc2,___fladd@a+2
  2417  00211C  CFDE F016          	movff	postinc2,___fladd@a+3
  2418  002120  C0CE  F001         	movff	encher_tanque@incremento,___xxtofl@val
  2419  002124  C0CF  F002         	movff	encher_tanque@incremento+1,___xxtofl@val+1
  2420  002128  6A03               	clrf	(___xxtofl@val+2)^0,c
  2421  00212A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2422  00212C  0E00               	movlw	0
  2423  00212E  ECA4  F017         	call	___xxtofl
  2424  002132  C001  F00F         	movff	?___xxtofl,___fladd@b
  2425  002136  C002  F010         	movff	?___xxtofl+1,___fladd@b+1
  2426  00213A  C003  F011         	movff	?___xxtofl+2,___fladd@b+2
  2427  00213E  C004  F012         	movff	?___xxtofl+3,___fladd@b+3
  2428  002142  EC47  F009         	call	___fladd	;wreg free
  2429  002146  C00F  F023         	movff	?___fladd,___flge@ff2
  2430  00214A  C010  F024         	movff	?___fladd+1,___flge@ff2+1
  2431  00214E  C011  F025         	movff	?___fladd+2,___flge@ff2+2
  2432  002152  C012  F026         	movff	?___fladd+3,___flge@ff2+3
  2433  002156  ECC9  F019         	call	___flge	;wreg free
  2434  00215A  B0D8               	btfsc	status,0,c
  2435  00215C  EFB2  F010         	goto	u5461
  2436  002160  EFB4  F010         	goto	u5460
  2437  002164                     u5461:
  2438  002164  EFCB  F010         	goto	l4501
  2439  002168                     u5460:
  2440  002168                     
  2441                           ;encher.c: 50:         lcd_cmd(0x01);
  2442  002168  0E01               	movlw	1
  2443  00216A  ECDF  F01F         	call	_lcd_cmd
  2444                           
  2445                           ;encher.c: 51:         lcd_cmd(0x80);
  2446  00216E  0E80               	movlw	128
  2447  002170  ECDF  F01F         	call	_lcd_cmd
  2448  002174                     
  2449                           ;encher.c: 52:         lcd_str("ERRO: vol > MAX");
  2450  002174  0E29               	movlw	low STR_9
  2451  002176  6E08               	movwf	lcd_str@str^0,c
  2452  002178  0E06               	movlw	high STR_9
  2453  00217A  6E09               	movwf	(lcd_str@str+1)^0,c
  2454  00217C  EC68  F01D         	call	_lcd_str	;wreg free
  2455  002180                     
  2456                           ;encher.c: 53:         lcd_cmd(0xC0);
  2457  002180  0EC0               	movlw	192
  2458  002182  ECDF  F01F         	call	_lcd_cmd
  2459                           
  2460                           ;encher.c: 54:         lcd_str("RB1-Voltar");
  2461  002186  0E67               	movlw	low (STR_16+3)
  2462  002188  6E08               	movwf	lcd_str@str^0,c
  2463  00218A  0E06               	movlw	high (STR_16+3)
  2464  00218C  6E09               	movwf	(lcd_str@str+1)^0,c
  2465  00218E  EC68  F01D         	call	_lcd_str	;wreg free
  2466                           
  2467                           ;encher.c: 60:     } else {
  2468  002192  EFE2  F011         	goto	l161
  2469  002196                     l4501:
  2470                           
  2471                           ;encher.c: 62:         *vol += incremento;
  2472  002196  C07E  FFD9         	movff	encher_tanque@vol,fsr2l
  2473  00219A  C07F  FFDA         	movff	encher_tanque@vol+1,fsr2h
  2474  00219E  CFDE F00F          	movff	postinc2,___fladd@b
  2475  0021A2  CFDE F010          	movff	postinc2,___fladd@b+1
  2476  0021A6  CFDE F011          	movff	postinc2,___fladd@b+2
  2477  0021AA  CFDE F012          	movff	postinc2,___fladd@b+3
  2478  0021AE  C0CE  F001         	movff	encher_tanque@incremento,___xxtofl@val
  2479  0021B2  C0CF  F002         	movff	encher_tanque@incremento+1,___xxtofl@val+1
  2480  0021B6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2481  0021B8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2482  0021BA  0E00               	movlw	0
  2483  0021BC  ECA4  F017         	call	___xxtofl
  2484  0021C0  C001  F013         	movff	?___xxtofl,___fladd@a
  2485  0021C4  C002  F014         	movff	?___xxtofl+1,___fladd@a+1
  2486  0021C8  C003  F015         	movff	?___xxtofl+2,___fladd@a+2
  2487  0021CC  C004  F016         	movff	?___xxtofl+3,___fladd@a+3
  2488  0021D0  EC47  F009         	call	___fladd	;wreg free
  2489  0021D4  C07E  FFD9         	movff	encher_tanque@vol,fsr2l
  2490  0021D8  C07F  FFDA         	movff	encher_tanque@vol+1,fsr2h
  2491  0021DC  C00F  FFDE         	movff	?___fladd,postinc2
  2492  0021E0  C010  FFDE         	movff	?___fladd+1,postinc2
  2493  0021E4  C011  FFDE         	movff	?___fladd+2,postinc2
  2494  0021E8  C012  FFDE         	movff	?___fladd+3,postinc2
  2495  0021EC                     
  2496                           ;encher.c: 63:         char y[8];;encher.c: 64:         sprintf(y, "%.1f", *vol);
  2497  0021EC  0EBC               	movlw	low encher_tanque@y
  2498  0021EE  0100               	movlb	0	; () banked
  2499  0021F0  6F92               	movwf	sprintf@s& (0+255),b
  2500  0021F2  0E00               	movlw	high encher_tanque@y
  2501  0021F4  6F93               	movwf	(sprintf@s+1)& (0+255),b
  2502  0021F6  0ED7               	movlw	low STR_11
  2503  0021F8  6F94               	movwf	sprintf@fmt& (0+255),b
  2504  0021FA  0E06               	movlw	high STR_11
  2505  0021FC  6F95               	movwf	(sprintf@fmt+1)& (0+255),b
  2506  0021FE  C07E  FFD9         	movff	encher_tanque@vol,fsr2l
  2507  002202  C07F  FFDA         	movff	encher_tanque@vol+1,fsr2h
  2508  002206  CFDE F096          	movff	postinc2,?_sprintf+4
  2509  00220A  CFDE F097          	movff	postinc2,?_sprintf+5
  2510  00220E  CFDE F098          	movff	postinc2,?_sprintf+6
  2511  002212  CFDE F099          	movff	postinc2,?_sprintf+7
  2512  002216  ECC4  F01E         	call	_sprintf	;wreg free
  2513  00221A                     
  2514                           ;encher.c: 65:         lcd_str(y);
  2515  00221A  0EBC               	movlw	low encher_tanque@y
  2516  00221C  6E08               	movwf	lcd_str@str^0,c
  2517  00221E  0E00               	movlw	high encher_tanque@y
  2518  002220  6E09               	movwf	(lcd_str@str+1)^0,c
  2519  002222  EC68  F01D         	call	_lcd_str	;wreg free
  2520  002226                     
  2521                           ;encher.c: 66:         lcd_str(" L");
  2522  002226  0EEF               	movlw	low STR_12
  2523  002228  6E08               	movwf	lcd_str@str^0,c
  2524  00222A  0E06               	movlw	high STR_12
  2525  00222C  6E09               	movwf	(lcd_str@str+1)^0,c
  2526  00222E  EC68  F01D         	call	_lcd_str	;wreg free
  2527  002232                     
  2528                           ;encher.c: 67:         atraso_ms(500);
  2529  002232  0E01               	movlw	1
  2530  002234  6E02               	movwf	(atraso_ms@t+1)^0,c
  2531  002236  0EF4               	movlw	244
  2532  002238  6E01               	movwf	atraso_ms@t^0,c
  2533  00223A  ECA4  F01D         	call	_atraso_ms	;wreg free
  2534  00223E                     
  2535                           ;encher.c: 70:         int tempo = incremento / 2;
  2536  00223E  90D8               	bcf	status,0,c
  2537  002240  0100               	movlb	0	; () banked
  2538  002242  31CF               	rrcf	(encher_tanque@incremento+1)& (0+255),w,b
  2539  002244  6FA4               	movwf	??_encher_tanque& (0+255),b
  2540  002246  31CE               	rrcf	encher_tanque@incremento& (0+255),w,b
  2541  002248  6FC6               	movwf	encher_tanque@tempo& (0+255),b
  2542  00224A  C0A4  F0C7         	movff	??_encher_tanque,encher_tanque@tempo+1
  2543  00224E                     
  2544                           ; BSR set to: 0
  2545                           ;encher.c: 71:         int t1, t2;;encher.c: 72:         int i = 0;
  2546  00224E  0E00               	movlw	0
  2547  002250  6FC5               	movwf	(encher_tanque@i_130+1)& (0+255),b
  2548  002252  0E00               	movlw	0
  2549  002254  6FC4               	movwf	encher_tanque@i_130& (0+255),b
  2550  002256                     
  2551                           ; BSR set to: 0
  2552                           ;encher.c: 73:         int numeros[10] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D,
  2553  002256  EE21  F064         	lfsr	2,encher_tanque@F347
  2554  00225A  EE10  F0A8         	lfsr	1,encher_tanque@numeros
  2555  00225E  0E13               	movlw	19
  2556  002260                     u5471:
  2557  002260  CFDB FFE3          	movff	plusw2,plusw1
  2558  002264  06E8               	decf	wreg,f,c
  2559  002266  E2FC               	bc	u5471
  2560  002268                     
  2561                           ; BSR set to: 0
  2562                           ;encher.c: 76:         (*(volatile __near unsigned char*)0xF92) = 0x00;
  2563  002268  0E00               	movlw	0
  2564  00226A  6E92               	movwf	146,c	;volatile
  2565  00226C                     
  2566                           ; BSR set to: 0
  2567                           ;encher.c: 78:         (((*(volatile __near unsigned char*)0xF80)) |= (1<<4));
  2568  00226C  8880               	bsf	128,4,c	;volatile
  2569  00226E                     
  2570                           ; BSR set to: 0
  2571                           ;encher.c: 82:         lcd_cmd(0x01);
  2572  00226E  0E01               	movlw	1
  2573  002270  ECDF  F01F         	call	_lcd_cmd
  2574  002274                     
  2575                           ;encher.c: 83:         lcd_cmd(0x80);
  2576  002274  0E80               	movlw	128
  2577  002276  ECDF  F01F         	call	_lcd_cmd
  2578  00227A                     
  2579                           ;encher.c: 84:         lcd_str("Enchendo...");
  2580  00227A  0E8D               	movlw	low STR_13
  2581  00227C  6E08               	movwf	lcd_str@str^0,c
  2582  00227E  0E06               	movlw	high STR_13
  2583  002280  6E09               	movwf	(lcd_str@str+1)^0,c
  2584  002282  EC68  F01D         	call	_lcd_str	;wreg free
  2585  002286                     
  2586                           ;encher.c: 85:         lcd_cmd(0xC0);
  2587  002286  0EC0               	movlw	192
  2588  002288  ECDF  F01F         	call	_lcd_cmd
  2589  00228C                     
  2590                           ;encher.c: 86:         lcd_str("Aguarde!");
  2591  00228C  0EC6               	movlw	low STR_14
  2592  00228E  6E08               	movwf	lcd_str@str^0,c
  2593  002290  0E06               	movlw	high STR_14
  2594  002292  6E09               	movwf	(lcd_str@str+1)^0,c
  2595  002294  EC68  F01D         	call	_lcd_str	;wreg free
  2596  002298                     
  2597                           ;encher.c: 94:         t1 = tempo / 10;
  2598  002298  C0C6  F001         	movff	encher_tanque@tempo,___awdiv@dividend
  2599  00229C  C0C7  F002         	movff	encher_tanque@tempo+1,___awdiv@dividend+1
  2600  0022A0  0E00               	movlw	0
  2601  0022A2  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2602  0022A4  0E0A               	movlw	10
  2603  0022A6  6E03               	movwf	___awdiv@divisor^0,c
  2604  0022A8  ECFD  F01B         	call	___awdiv	;wreg free
  2605  0022AC  C001  F0CC         	movff	?___awdiv,encher_tanque@t1
  2606  0022B0  C002  F0CD         	movff	?___awdiv+1,encher_tanque@t1+1
  2607  0022B4                     
  2608                           ;encher.c: 95:         t2 = tempo % 10;
  2609  0022B4  C0C6  F001         	movff	encher_tanque@tempo,___awmod@dividend
  2610  0022B8  C0C7  F002         	movff	encher_tanque@tempo+1,___awmod@dividend+1
  2611  0022BC  0E00               	movlw	0
  2612  0022BE  6E04               	movwf	(___awmod@divisor+1)^0,c
  2613  0022C0  0E0A               	movlw	10
  2614  0022C2  6E03               	movwf	___awmod@divisor^0,c
  2615  0022C4  ECBB  F01C         	call	___awmod	;wreg free
  2616  0022C8  C001  F0D1         	movff	?___awmod,encher_tanque@t2
  2617  0022CC  C002  F0D2         	movff	?___awmod+1,encher_tanque@t2+1
  2618                           
  2619                           ;encher.c: 96:         while ((t1 != 0) || (t2 != 0)) {
  2620  0022D0  EFB9  F011         	goto	l4563
  2621  0022D4                     l4535:
  2622                           
  2623                           ; BSR set to: 0
  2624                           ;encher.c: 97:             (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  2625  0022D4  9A80               	bcf	128,5,c	;volatile
  2626                           
  2627                           ;encher.c: 98:             (((*(volatile __near unsigned char*)0xF80)) |= (1<<4));
  2628  0022D6  8880               	bsf	128,4,c	;volatile
  2629  0022D8                     
  2630                           ; BSR set to: 0
  2631                           ;encher.c: 99:             (*(volatile __near unsigned char*)0xF83) = numeros[t1];
  2632  0022D8  90D8               	bcf	status,0,c
  2633  0022DA  35CC               	rlcf	encher_tanque@t1& (0+255),w,b
  2634  0022DC  6ED9               	movwf	fsr2l,c
  2635  0022DE  35CD               	rlcf	(encher_tanque@t1+1)& (0+255),w,b
  2636  0022E0  6EDA               	movwf	fsr2h,c
  2637  0022E2  0EA8               	movlw	low encher_tanque@numeros
  2638  0022E4  26D9               	addwf	fsr2l,f,c
  2639  0022E6  0E00               	movlw	high encher_tanque@numeros
  2640  0022E8  22DA               	addwfc	fsr2h,f,c
  2641  0022EA  50DF               	movf	indf2,w,c
  2642  0022EC  6E83               	movwf	131,c	;volatile
  2643  0022EE                     
  2644                           ; BSR set to: 0
  2645                           ;encher.c: 100:             atraso_ms(5);
  2646  0022EE  0E00               	movlw	0
  2647  0022F0  6E02               	movwf	(atraso_ms@t+1)^0,c
  2648  0022F2  0E05               	movlw	5
  2649  0022F4  6E01               	movwf	atraso_ms@t^0,c
  2650  0022F6  ECA4  F01D         	call	_atraso_ms	;wreg free
  2651  0022FA                     
  2652                           ;encher.c: 101:             (((*(volatile __near unsigned char*)0xF80)) |= (1<<5));
  2653  0022FA  8A80               	bsf	128,5,c	;volatile
  2654  0022FC                     
  2655                           ;encher.c: 102:             (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<4));
  2656  0022FC  9880               	bcf	128,4,c	;volatile
  2657  0022FE                     
  2658                           ;encher.c: 103:             (*(volatile __near unsigned char*)0xF83) = numeros[t2];
  2659  0022FE  90D8               	bcf	status,0,c
  2660  002300  0100               	movlb	0	; () banked
  2661  002302  35D1               	rlcf	encher_tanque@t2& (0+255),w,b
  2662  002304  6ED9               	movwf	fsr2l,c
  2663  002306  35D2               	rlcf	(encher_tanque@t2+1)& (0+255),w,b
  2664  002308  6EDA               	movwf	fsr2h,c
  2665  00230A  0EA8               	movlw	low encher_tanque@numeros
  2666  00230C  26D9               	addwf	fsr2l,f,c
  2667  00230E  0E00               	movlw	high encher_tanque@numeros
  2668  002310  22DA               	addwfc	fsr2h,f,c
  2669  002312  50DF               	movf	indf2,w,c
  2670  002314  6E83               	movwf	131,c	;volatile
  2671  002316                     
  2672                           ; BSR set to: 0
  2673                           ;encher.c: 104:             atraso_ms(5);
  2674  002316  0E00               	movlw	0
  2675  002318  6E02               	movwf	(atraso_ms@t+1)^0,c
  2676  00231A  0E05               	movlw	5
  2677  00231C  6E01               	movwf	atraso_ms@t^0,c
  2678  00231E  ECA4  F01D         	call	_atraso_ms	;wreg free
  2679  002322                     
  2680                           ;encher.c: 106:             if(i == 40) {
  2681  002322  0E28               	movlw	40
  2682  002324  0100               	movlb	0	; () banked
  2683  002326  19C4               	xorwf	encher_tanque@i_130& (0+255),w,b
  2684  002328  11C5               	iorwf	(encher_tanque@i_130+1)& (0+255),w,b
  2685  00232A  A4D8               	btfss	status,2,c
  2686  00232C  EF9A  F011         	goto	u5481
  2687  002330  EF9C  F011         	goto	u5480
  2688  002334                     u5481:
  2689  002334  EFB7  F011         	goto	l4561
  2690  002338                     u5480:
  2691  002338                     
  2692                           ; BSR set to: 0
  2693                           ;encher.c: 107:                 i = 0;
  2694  002338  0E00               	movlw	0
  2695  00233A  6FC5               	movwf	(encher_tanque@i_130+1)& (0+255),b
  2696  00233C  0E00               	movlw	0
  2697  00233E  6FC4               	movwf	encher_tanque@i_130& (0+255),b
  2698  002340                     
  2699                           ; BSR set to: 0
  2700                           ;encher.c: 108:                 if (t2 == 0) {
  2701  002340  51D1               	movf	encher_tanque@t2& (0+255),w,b
  2702  002342  11D2               	iorwf	(encher_tanque@t2+1)& (0+255),w,b
  2703  002344  A4D8               	btfss	status,2,c
  2704  002346  EFA7  F011         	goto	u5491
  2705  00234A  EFA9  F011         	goto	u5490
  2706  00234E                     u5491:
  2707  00234E  EFB2  F011         	goto	l4559
  2708  002352                     u5490:
  2709  002352                     
  2710                           ; BSR set to: 0
  2711                           ;encher.c: 109:                     t1--;
  2712  002352  07CC               	decf	encher_tanque@t1& (0+255),f,b
  2713  002354  A0D8               	btfss	status,0,c
  2714  002356  07CD               	decf	(encher_tanque@t1+1)& (0+255),f,b
  2715  002358                     
  2716                           ; BSR set to: 0
  2717                           ;encher.c: 110:                     t2 = 9;
  2718  002358  0E00               	movlw	0
  2719  00235A  6FD2               	movwf	(encher_tanque@t2+1)& (0+255),b
  2720  00235C  0E09               	movlw	9
  2721  00235E  6FD1               	movwf	encher_tanque@t2& (0+255),b
  2722                           
  2723                           ;encher.c: 111:                 } else {
  2724  002360  EFB9  F011         	goto	l4563
  2725  002364                     l4559:
  2726                           
  2727                           ; BSR set to: 0
  2728                           ;encher.c: 112:                     t2--;
  2729  002364  07D1               	decf	encher_tanque@t2& (0+255),f,b
  2730  002366  A0D8               	btfss	status,0,c
  2731  002368  07D2               	decf	(encher_tanque@t2+1)& (0+255),f,b
  2732  00236A  EFB9  F011         	goto	l4563
  2733  00236E                     l4561:
  2734                           
  2735                           ; BSR set to: 0
  2736                           ;encher.c: 115:                 i++;
  2737  00236E  4BC4               	infsnz	encher_tanque@i_130& (0+255),f,b
  2738  002370  2BC5               	incf	(encher_tanque@i_130+1)& (0+255),f,b
  2739  002372                     l4563:
  2740                           
  2741                           ;encher.c: 96:         while ((t1 != 0) || (t2 != 0)) {
  2742  002372  0100               	movlb	0	; () banked
  2743  002374  51CC               	movf	encher_tanque@t1& (0+255),w,b
  2744  002376  11CD               	iorwf	(encher_tanque@t1+1)& (0+255),w,b
  2745  002378  A4D8               	btfss	status,2,c
  2746  00237A  EFC1  F011         	goto	u5501
  2747  00237E  EFC3  F011         	goto	u5500
  2748  002382                     u5501:
  2749  002382  EF6A  F011         	goto	l4535
  2750  002386                     u5500:
  2751  002386                     
  2752                           ; BSR set to: 0
  2753  002386  51D1               	movf	encher_tanque@t2& (0+255),w,b
  2754  002388  11D2               	iorwf	(encher_tanque@t2+1)& (0+255),w,b
  2755  00238A  A4D8               	btfss	status,2,c
  2756  00238C  EFCA  F011         	goto	u5511
  2757  002390  EFCC  F011         	goto	u5510
  2758  002394                     u5511:
  2759  002394  EF6A  F011         	goto	l4535
  2760  002398                     u5510:
  2761  002398                     
  2762                           ; BSR set to: 0
  2763                           ;encher.c: 119:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  2764  002398  9A80               	bcf	128,5,c	;volatile
  2765  00239A                     
  2766                           ; BSR set to: 0
  2767                           ;encher.c: 122:         lcd_cmd(0x01);
  2768  00239A  0E01               	movlw	1
  2769  00239C  ECDF  F01F         	call	_lcd_cmd
  2770  0023A0                     
  2771                           ;encher.c: 123:         lcd_cmd(0x80);
  2772  0023A0  0E80               	movlw	128
  2773  0023A2  ECDF  F01F         	call	_lcd_cmd
  2774  0023A6                     
  2775                           ;encher.c: 124:         lcd_str("    SUCESSO!");
  2776  0023A6  0E80               	movlw	low STR_15
  2777  0023A8  6E08               	movwf	lcd_str@str^0,c
  2778  0023AA  0E06               	movlw	high STR_15
  2779  0023AC  6E09               	movwf	(lcd_str@str+1)^0,c
  2780  0023AE  EC68  F01D         	call	_lcd_str	;wreg free
  2781  0023B2                     
  2782                           ;encher.c: 125:         lcd_cmd(0xC0);
  2783  0023B2  0EC0               	movlw	192
  2784  0023B4  ECDF  F01F         	call	_lcd_cmd
  2785  0023B8                     
  2786                           ;encher.c: 126:         lcd_str("   RB1-Voltar");
  2787  0023B8  0E64               	movlw	low STR_16
  2788  0023BA  6E08               	movwf	lcd_str@str^0,c
  2789  0023BC  0E06               	movlw	high STR_16
  2790  0023BE  6E09               	movwf	(lcd_str@str+1)^0,c
  2791  0023C0  EC68  F01D         	call	_lcd_str	;wreg free
  2792  0023C4                     l161:
  2793                           
  2794                           ;encher.c: 143:     while(((((*(volatile __near unsigned char*)0xF81)) & (1<<1)))){
  2795  0023C4  B281               	btfsc	129,1,c	;volatile
  2796  0023C6  EFE7  F011         	goto	u5521
  2797  0023CA  EFE9  F011         	goto	u5520
  2798  0023CE                     u5521:
  2799  0023CE  EFE2  F011         	goto	l161
  2800  0023D2                     u5520:
  2801  0023D2  0012               	return		;funcret
  2802  0023D4                     __end_of_encher_tanque:
  2803                           	callstack 0
  2804                           
  2805 ;; *************** function _tc_tecla *****************
  2806 ;; Defined at:
  2807 ;;		line 14 in file "teclado.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;  timeout         2    6[COMRAM] unsigned int 
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;  to              2    8[COMRAM] unsigned int 
  2812 ;;  i               1   12[COMRAM] unsigned char 
  2813 ;;  ret             1   11[COMRAM] unsigned char 
  2814 ;;  tmp             1   10[COMRAM] unsigned char 
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  1    wreg      unsigned char 
  2817 ;; Registers used:
  2818 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2824 ;;      Params:         2       0       0       0       0       0       0
  2825 ;;      Locals:         5       0       0       0       0       0       0
  2826 ;;      Temps:          0       0       0       0       0       0       0
  2827 ;;      Totals:         7       0       0       0       0       0       0
  2828 ;;Total ram usage:        7 bytes
  2829 ;; Hardware stack levels used:    1
  2830 ;; Hardware stack levels required when called:    1
  2831 ;; This function calls:
  2832 ;;		_atraso_ms
  2833 ;; This function is called by:
  2834 ;;		_encher_tanque
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           	psect	text5
  2839  002BC8                     __ptext5:
  2840                           	callstack 0
  2841  002BC8                     _tc_tecla:
  2842                           	callstack 28
  2843  002BC8                     
  2844                           ;teclado.c: 15:     unsigned int to = 0;
  2845  002BC8  0E00               	movlw	0
  2846  002BCA  6E0A               	movwf	(tc_tecla@to+1)^0,c
  2847  002BCC  0E00               	movlw	0
  2848  002BCE  6E09               	movwf	tc_tecla@to^0,c
  2849                           
  2850                           ;teclado.c: 16:     unsigned char i;;teclado.c: 17:     unsigned char ret = 0;
  2851  002BD0  0E00               	movlw	0
  2852  002BD2  6E0C               	movwf	tc_tecla@ret^0,c
  2853  002BD4                     
  2854                           ;teclado.c: 18:     unsigned char tmp = (*(volatile __near unsigned char*)0xF81);
  2855  002BD4  CF81 F00B          	movff	3969,tc_tecla@tmp	;volatile
  2856                           
  2857                           ;teclado.c: 21:     while (((to < timeout) || (!timeout))&&(!ret)) {
  2858  002BD8  EF95  F016         	goto	l4347
  2859  002BDC                     l4295:
  2860                           
  2861                           ;teclado.c: 22:         for (i = 0; i < 3; i++) {
  2862  002BDC  0E00               	movlw	0
  2863  002BDE  6E0D               	movwf	tc_tecla@i^0,c
  2864  002BE0                     l4301:
  2865                           
  2866                           ;teclado.c: 23:             (*(volatile __near unsigned char*)0xF81) |= ~linha[i];
  2867  002BE0  0E01               	movlw	low _linha
  2868  002BE2  240D               	addwf	tc_tecla@i^0,w,c
  2869  002BE4  6EF6               	movwf	tblptrl,c
  2870  002BE6  6AF7               	clrf	tblptrh,c
  2871  002BE8  0E06               	movlw	high _linha
  2872  002BEA  22F7               	addwfc	tblptrh,f,c
  2873  002BEC                     	if	0	;There are less than 3 active tblptr bytes
  2874  002BEC                     	endif
  2875  002BEC  0008               	tblrd		*
  2876  002BEE  50F5               	movf	tablat,w,c
  2877  002BF0  0AFF               	xorlw	255
  2878  002BF2  1281               	iorwf	129,f,c	;volatile
  2879  002BF4                     
  2880                           ;teclado.c: 24:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<3))) 
      +                          {
  2881  002BF4  B683               	btfsc	131,3,c	;volatile
  2882  002BF6  EFFF  F015         	goto	u5141
  2883  002BFA  EF01  F016         	goto	u5140
  2884  002BFE                     u5141:
  2885  002BFE  EF19  F016         	goto	l45
  2886  002C02                     u5140:
  2887  002C02                     
  2888                           ;teclado.c: 25:                 atraso_ms(atraso);
  2889  002C02  0E00               	movlw	0
  2890  002C04  6E02               	movwf	(atraso_ms@t+1)^0,c
  2891  002C06  0E0F               	movlw	15
  2892  002C08  6E01               	movwf	atraso_ms@t^0,c
  2893  002C0A  ECA4  F01D         	call	_atraso_ms	;wreg free
  2894  002C0E                     
  2895                           ;teclado.c: 26:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<3
      +                          ))) {
  2896  002C0E  B683               	btfsc	131,3,c	;volatile
  2897  002C10  EF0C  F016         	goto	u5151
  2898  002C14  EF0E  F016         	goto	u5150
  2899  002C18                     u5151:
  2900  002C18  EF19  F016         	goto	l45
  2901  002C1C                     u5150:
  2902  002C1C                     l47:
  2903  002C1C  A683               	btfss	131,3,c	;volatile
  2904  002C1E  EF13  F016         	goto	u5161
  2905  002C22  EF15  F016         	goto	u5160
  2906  002C26                     u5161:
  2907  002C26  EF0E  F016         	goto	l47
  2908  002C2A                     u5160:
  2909  002C2A                     
  2910                           ;teclado.c: 28:                     ret = 1 + i;
  2911  002C2A  280D               	incf	tc_tecla@i^0,w,c
  2912  002C2C  6E0C               	movwf	tc_tecla@ret^0,c
  2913                           
  2914                           ;teclado.c: 29:                     break;
  2915  002C2E  EF8B  F016         	goto	l4343
  2916  002C32                     l45:
  2917                           
  2918                           ;teclado.c: 32:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<2))) 
      +                          {
  2919  002C32  B483               	btfsc	131,2,c	;volatile
  2920  002C34  EF1E  F016         	goto	u5171
  2921  002C38  EF20  F016         	goto	u5170
  2922  002C3C                     u5171:
  2923  002C3C  EF39  F016         	goto	l50
  2924  002C40                     u5170:
  2925  002C40                     
  2926                           ;teclado.c: 33:                 atraso_ms(atraso);
  2927  002C40  0E00               	movlw	0
  2928  002C42  6E02               	movwf	(atraso_ms@t+1)^0,c
  2929  002C44  0E0F               	movlw	15
  2930  002C46  6E01               	movwf	atraso_ms@t^0,c
  2931  002C48  ECA4  F01D         	call	_atraso_ms	;wreg free
  2932  002C4C                     
  2933                           ;teclado.c: 34:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<2
      +                          ))) {
  2934  002C4C  B483               	btfsc	131,2,c	;volatile
  2935  002C4E  EF2B  F016         	goto	u5181
  2936  002C52  EF2D  F016         	goto	u5180
  2937  002C56                     u5181:
  2938  002C56  EF39  F016         	goto	l50
  2939  002C5A                     u5180:
  2940  002C5A                     l52:
  2941  002C5A  A483               	btfss	131,2,c	;volatile
  2942  002C5C  EF32  F016         	goto	u5191
  2943  002C60  EF34  F016         	goto	u5190
  2944  002C64                     u5191:
  2945  002C64  EF2D  F016         	goto	l52
  2946  002C68                     u5190:
  2947  002C68                     
  2948                           ;teclado.c: 36:                     ret = 4 + i;
  2949  002C68  500D               	movf	tc_tecla@i^0,w,c
  2950  002C6A  0F04               	addlw	4
  2951  002C6C  6E0C               	movwf	tc_tecla@ret^0,c
  2952                           
  2953                           ;teclado.c: 37:                     break;
  2954  002C6E  EF8B  F016         	goto	l4343
  2955  002C72                     l50:
  2956                           
  2957                           ;teclado.c: 40:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<1))) 
      +                          {
  2958  002C72  B283               	btfsc	131,1,c	;volatile
  2959  002C74  EF3E  F016         	goto	u5201
  2960  002C78  EF40  F016         	goto	u5200
  2961  002C7C                     u5201:
  2962  002C7C  EF59  F016         	goto	l55
  2963  002C80                     u5200:
  2964  002C80                     
  2965                           ;teclado.c: 41:                 atraso_ms(atraso);
  2966  002C80  0E00               	movlw	0
  2967  002C82  6E02               	movwf	(atraso_ms@t+1)^0,c
  2968  002C84  0E0F               	movlw	15
  2969  002C86  6E01               	movwf	atraso_ms@t^0,c
  2970  002C88  ECA4  F01D         	call	_atraso_ms	;wreg free
  2971  002C8C                     
  2972                           ;teclado.c: 42:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<1
      +                          ))) {
  2973  002C8C  B283               	btfsc	131,1,c	;volatile
  2974  002C8E  EF4B  F016         	goto	u5211
  2975  002C92  EF4D  F016         	goto	u5210
  2976  002C96                     u5211:
  2977  002C96  EF59  F016         	goto	l55
  2978  002C9A                     u5210:
  2979  002C9A                     l57:
  2980  002C9A  A283               	btfss	131,1,c	;volatile
  2981  002C9C  EF52  F016         	goto	u5221
  2982  002CA0  EF54  F016         	goto	u5220
  2983  002CA4                     u5221:
  2984  002CA4  EF4D  F016         	goto	l57
  2985  002CA8                     u5220:
  2986  002CA8                     
  2987                           ;teclado.c: 44:                     ret = 7 + i;
  2988  002CA8  500D               	movf	tc_tecla@i^0,w,c
  2989  002CAA  0F07               	addlw	7
  2990  002CAC  6E0C               	movwf	tc_tecla@ret^0,c
  2991                           
  2992                           ;teclado.c: 45:                     break;
  2993  002CAE  EF8B  F016         	goto	l4343
  2994  002CB2                     l55:
  2995                           
  2996                           ;teclado.c: 48:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<0))) 
      +                          {
  2997  002CB2  B083               	btfsc	131,0,c	;volatile
  2998  002CB4  EF5E  F016         	goto	u5231
  2999  002CB8  EF60  F016         	goto	u5230
  3000  002CBC                     u5231:
  3001  002CBC  EF79  F016         	goto	l4337
  3002  002CC0                     u5230:
  3003  002CC0                     
  3004                           ;teclado.c: 49:                 atraso_ms(atraso);
  3005  002CC0  0E00               	movlw	0
  3006  002CC2  6E02               	movwf	(atraso_ms@t+1)^0,c
  3007  002CC4  0E0F               	movlw	15
  3008  002CC6  6E01               	movwf	atraso_ms@t^0,c
  3009  002CC8  ECA4  F01D         	call	_atraso_ms	;wreg free
  3010  002CCC                     
  3011                           ;teclado.c: 50:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<0
      +                          ))) {
  3012  002CCC  B083               	btfsc	131,0,c	;volatile
  3013  002CCE  EF6B  F016         	goto	u5241
  3014  002CD2  EF6D  F016         	goto	u5240
  3015  002CD6                     u5241:
  3016  002CD6  EF79  F016         	goto	l4337
  3017  002CDA                     u5240:
  3018  002CDA                     l62:
  3019  002CDA  A083               	btfss	131,0,c	;volatile
  3020  002CDC  EF72  F016         	goto	u5251
  3021  002CE0  EF74  F016         	goto	u5250
  3022  002CE4                     u5251:
  3023  002CE4  EF6D  F016         	goto	l62
  3024  002CE8                     u5250:
  3025  002CE8                     
  3026                           ;teclado.c: 52:                     ret = 10 + i;
  3027  002CE8  500D               	movf	tc_tecla@i^0,w,c
  3028  002CEA  0F0A               	addlw	10
  3029  002CEC  6E0C               	movwf	tc_tecla@ret^0,c
  3030                           
  3031                           ;teclado.c: 53:                     break;
  3032  002CEE  EF8B  F016         	goto	l4343
  3033  002CF2                     l4337:
  3034                           
  3035                           ;teclado.c: 56:             (*(volatile __near unsigned char*)0xF81) &= linha[i];
  3036  002CF2  0E01               	movlw	low _linha
  3037  002CF4  240D               	addwf	tc_tecla@i^0,w,c
  3038  002CF6  6EF6               	movwf	tblptrl,c
  3039  002CF8  6AF7               	clrf	tblptrh,c
  3040  002CFA  0E06               	movlw	high _linha
  3041  002CFC  22F7               	addwfc	tblptrh,f,c
  3042  002CFE                     	if	0	;There are less than 3 active tblptr bytes
  3043  002CFE                     	endif
  3044  002CFE  0008               	tblrd		*
  3045  002D00  50F5               	movf	tablat,w,c
  3046  002D02  1681               	andwf	129,f,c	;volatile
  3047  002D04                     
  3048                           ;teclado.c: 57:         };
  3049  002D04  2A0D               	incf	tc_tecla@i^0,f,c
  3050  002D06  0E02               	movlw	2
  3051  002D08  640D               	cpfsgt	tc_tecla@i^0,c
  3052  002D0A  EF89  F016         	goto	u5261
  3053  002D0E  EF8B  F016         	goto	u5260
  3054  002D12                     u5261:
  3055  002D12  EFF0  F015         	goto	l4301
  3056  002D16                     u5260:
  3057  002D16                     l4343:
  3058                           
  3059                           ;teclado.c: 58:         atraso_ms(atraso_min);
  3060  002D16  0E00               	movlw	0
  3061  002D18  6E02               	movwf	(atraso_ms@t+1)^0,c
  3062  002D1A  0E05               	movlw	5
  3063  002D1C  6E01               	movwf	atraso_ms@t^0,c
  3064  002D1E  ECA4  F01D         	call	_atraso_ms	;wreg free
  3065  002D22                     
  3066                           ;teclado.c: 59:         to += 5;
  3067  002D22  0E05               	movlw	5
  3068  002D24  2609               	addwf	tc_tecla@to^0,f,c
  3069  002D26  0E00               	movlw	0
  3070  002D28  220A               	addwfc	(tc_tecla@to+1)^0,f,c
  3071  002D2A                     l4347:
  3072                           
  3073                           ;teclado.c: 21:     while (((to < timeout) || (!timeout))&&(!ret)) {
  3074  002D2A  5007               	movf	tc_tecla@timeout^0,w,c
  3075  002D2C  5C09               	subwf	tc_tecla@to^0,w,c
  3076  002D2E  5008               	movf	(tc_tecla@timeout+1)^0,w,c
  3077  002D30  580A               	subwfb	(tc_tecla@to+1)^0,w,c
  3078  002D32  A0D8               	btfss	status,0,c
  3079  002D34  EF9E  F016         	goto	u5271
  3080  002D38  EFA0  F016         	goto	u5270
  3081  002D3C                     u5271:
  3082  002D3C  EFA9  F016         	goto	l4351
  3083  002D40                     u5270:
  3084  002D40  5007               	movf	tc_tecla@timeout^0,w,c
  3085  002D42  1008               	iorwf	(tc_tecla@timeout+1)^0,w,c
  3086  002D44  A4D8               	btfss	status,2,c
  3087  002D46  EFA7  F016         	goto	u5281
  3088  002D4A  EFA9  F016         	goto	u5280
  3089  002D4E                     u5281:
  3090  002D4E  EFB1  F016         	goto	l4353
  3091  002D52                     u5280:
  3092  002D52                     l4351:
  3093  002D52  500C               	movf	tc_tecla@ret^0,w,c
  3094  002D54  B4D8               	btfsc	status,2,c
  3095  002D56  EFAF  F016         	goto	u5291
  3096  002D5A  EFB1  F016         	goto	u5290
  3097  002D5E                     u5291:
  3098  002D5E  EFEE  F015         	goto	l4295
  3099  002D62                     u5290:
  3100  002D62                     l4353:
  3101                           
  3102                           ;teclado.c: 62:     if (!ret)ret = 255;
  3103  002D62  500C               	movf	tc_tecla@ret^0,w,c
  3104  002D64  A4D8               	btfss	status,2,c
  3105  002D66  EFB7  F016         	goto	u5301
  3106  002D6A  EFB9  F016         	goto	u5300
  3107  002D6E                     u5301:
  3108  002D6E  EFBA  F016         	goto	l4357
  3109  002D72                     u5300:
  3110  002D72  680C               	setf	tc_tecla@ret^0,c
  3111  002D74                     l4357:
  3112                           
  3113                           ;teclado.c: 63:     if (ret == 11)ret = 0;
  3114  002D74  0E0B               	movlw	11
  3115  002D76  180C               	xorwf	tc_tecla@ret^0,w,c
  3116  002D78  A4D8               	btfss	status,2,c
  3117  002D7A  EFC1  F016         	goto	u5311
  3118  002D7E  EFC3  F016         	goto	u5310
  3119  002D82                     u5311:
  3120  002D82  EFC5  F016         	goto	l4361
  3121  002D86                     u5310:
  3122  002D86  0E00               	movlw	0
  3123  002D88  6E0C               	movwf	tc_tecla@ret^0,c
  3124  002D8A                     l4361:
  3125                           
  3126                           ;teclado.c: 64:     (*(volatile __near unsigned char*)0xF81) = tmp;
  3127  002D8A  C00B  FF81         	movff	tc_tecla@tmp,3969	;volatile
  3128                           
  3129                           ;teclado.c: 65:     return ret;
  3130  002D8E  500C               	movf	tc_tecla@ret^0,w,c
  3131  002D90  0012               	return		;funcret
  3132  002D92                     __end_of_tc_tecla:
  3133                           	callstack 0
  3134                           
  3135 ;; *************** function _sprintf *****************
  3136 ;; Defined at:
  3137 ;;		line 9 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;  s               2   18[BANK0 ] PTR unsigned char 
  3140 ;;		 -> esvaziar_tanque@y(8), ver_quantidade@y(8), encher_tanque@y(8), 
  3141 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
  3142 ;;		 -> STR_25(5), STR_17(5), STR_11(5), 
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;  f               6   30[BANK0 ] struct _IO_FILE
  3145 ;;  ap              2   28[BANK0 ] PTR void [1]
  3146 ;;		 -> ?_sprintf(2), 
  3147 ;;  ret             2    0        int 
  3148 ;; Return value:  Size  Location     Type
  3149 ;;                  2   18[BANK0 ] int 
  3150 ;; Registers used:
  3151 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3152 ;; Tracked objects:
  3153 ;;		On entry : 0/0
  3154 ;;		On exit  : 0/0
  3155 ;;		Unchanged: 0/0
  3156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3157 ;;      Params:         0       8       0       0       0       0       0
  3158 ;;      Locals:         0      10       0       0       0       0       0
  3159 ;;      Temps:          0       0       0       0       0       0       0
  3160 ;;      Totals:         0      18       0       0       0       0       0
  3161 ;;Total ram usage:       18 bytes
  3162 ;; Hardware stack levels used:    1
  3163 ;; Hardware stack levels required when called:    7
  3164 ;; This function calls:
  3165 ;;		_vfprintf
  3166 ;; This function is called by:
  3167 ;;		_encher_tanque
  3168 ;;		_ver_quantidade
  3169 ;;		_esvaziar_tanque
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           	psect	text6
  3174  003D88                     __ptext6:
  3175                           	callstack 0
  3176  003D88                     _sprintf:
  3177                           	callstack 22
  3178  003D88  0E96               	movlw	low (?_sprintf+4)
  3179  003D8A  0100               	movlb	0	; () banked
  3180  003D8C  6F9C               	movwf	sprintf@ap& (0+255),b
  3181  003D8E  0E00               	movlw	high (?_sprintf+4)
  3182  003D90  6F9D               	movwf	(sprintf@ap+1)& (0+255),b
  3183  003D92  C092  F09E         	movff	sprintf@s,sprintf@f
  3184  003D96  C093  F09F         	movff	sprintf@s+1,sprintf@f+1
  3185  003D9A                     
  3186                           ; BSR set to: 0
  3187  003D9A  0E00               	movlw	0
  3188  003D9C  6FA1               	movwf	(sprintf@f+3)& (0+255),b
  3189  003D9E  0E00               	movlw	0
  3190  003DA0  6FA0               	movwf	(sprintf@f+2)& (0+255),b
  3191  003DA2                     
  3192                           ; BSR set to: 0
  3193  003DA2  0E00               	movlw	0
  3194  003DA4  6FA3               	movwf	(sprintf@f+5)& (0+255),b
  3195  003DA6  0E00               	movlw	0
  3196  003DA8  6FA2               	movwf	(sprintf@f+4)& (0+255),b
  3197  003DAA                     
  3198                           ; BSR set to: 0
  3199  003DAA  0E9E               	movlw	low sprintf@f
  3200  003DAC  6F8C               	movwf	vfprintf@fp& (0+255),b
  3201  003DAE  0E00               	movlw	high sprintf@f
  3202  003DB0  6F8D               	movwf	(vfprintf@fp+1)& (0+255),b
  3203  003DB2  C094  F08E         	movff	sprintf@fmt,vfprintf@fmt
  3204  003DB6  C095  F08F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3205  003DBA  0E9C               	movlw	low sprintf@ap
  3206  003DBC  6F90               	movwf	vfprintf@ap& (0+255),b
  3207  003DBE  0E00               	movlw	high sprintf@ap
  3208  003DC0  6F91               	movwf	(vfprintf@ap+1)& (0+255),b
  3209  003DC2  EC07  F01E         	call	_vfprintf	;wreg free
  3210  003DC6  0100               	movlb	0	; () banked
  3211  003DC8  51A0               	movf	(sprintf@f+2)& (0+255),w,b
  3212  003DCA  2592               	addwf	sprintf@s& (0+255),w,b
  3213  003DCC  6ED9               	movwf	fsr2l,c
  3214  003DCE  51A1               	movf	(sprintf@f+3)& (0+255),w,b
  3215  003DD0  2193               	addwfc	(sprintf@s+1)& (0+255),w,b
  3216  003DD2  6EDA               	movwf	fsr2h,c
  3217  003DD4  0E00               	movlw	0
  3218  003DD6  6EDF               	movwf	indf2,c
  3219  003DD8                     
  3220                           ; BSR set to: 0
  3221  003DD8  0012               	return		;funcret
  3222  003DDA                     __end_of_sprintf:
  3223                           	callstack 0
  3224                           
  3225 ;; *************** function _vfprintf *****************
  3226 ;; Defined at:
  3227 ;;		line 1368 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3228 ;; Parameters:    Size  Location     Type
  3229 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  3230 ;;		 -> sprintf@f(6), 
  3231 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  3232 ;;		 -> STR_25(5), STR_17(5), STR_11(5), 
  3233 ;;  ap              2   16[BANK0 ] PTR PTR void 
  3234 ;;		 -> sprintf@ap(2), 
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;  cfmt            2  123[COMRAM] PTR unsigned char 
  3237 ;;		 -> STR_25(5), STR_17(5), STR_11(5), 
  3238 ;; Return value:  Size  Location     Type
  3239 ;;                  2   12[BANK0 ] int 
  3240 ;; Registers used:
  3241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3242 ;; Tracked objects:
  3243 ;;		On entry : 0/0
  3244 ;;		On exit  : 0/0
  3245 ;;		Unchanged: 0/0
  3246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3247 ;;      Params:         0       6       0       0       0       0       0
  3248 ;;      Locals:         2       0       0       0       0       0       0
  3249 ;;      Temps:          0       0       0       0       0       0       0
  3250 ;;      Totals:         2       6       0       0       0       0       0
  3251 ;;Total ram usage:        8 bytes
  3252 ;; Hardware stack levels used:    1
  3253 ;; Hardware stack levels required when called:    6
  3254 ;; This function calls:
  3255 ;;		_vfpfcnvrt
  3256 ;; This function is called by:
  3257 ;;		_sprintf
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261                           	psect	text7
  3262  003C0E                     __ptext7:
  3263                           	callstack 0
  3264  003C0E                     _vfprintf:
  3265                           	callstack 22
  3266  003C0E                     
  3267                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprintf(FIL
      +                          E *fp, const char *fmt, va_list ap);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1369: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 13
      +                          71:     char *cfmt;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 137
      +                          3:     cfmt = (char *)fmt;
  3268  003C0E  C08E  F07C         	movff	vfprintf@fmt,vfprintf@cfmt
  3269  003C12  C08F  F07D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3270  003C16                     
  3271                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 0;
  3272  003C16  0E00               	movlw	0
  3273  003C18  0100               	movlb	0	; () banked
  3274  003C1A  6FDE               	movwf	(_nout+1)& (0+255),b
  3275  003C1C  0E00               	movlw	0
  3276  003C1E  6FDD               	movwf	_nout& (0+255),b
  3277                           
  3278                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt
      +                          ) {
  3279  003C20  EF25  F01E         	goto	l4267
  3280  003C24                     l4265:
  3281                           
  3282                           ; BSR set to: 0
  3283                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nout += 
      +                          vfpfcnvrt(fp, &cfmt, ap);
  3284  003C24  C08C  F072         	movff	vfprintf@fp,vfpfcnvrt@fp
  3285  003C28  C08D  F073         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3286  003C2C  0E7C               	movlw	low vfprintf@cfmt
  3287  003C2E  6E74               	movwf	vfpfcnvrt@fmt^0,c
  3288  003C30  0E00               	movlw	high vfprintf@cfmt
  3289  003C32  6E75               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3290  003C34  C090  F076         	movff	vfprintf@ap,vfpfcnvrt@ap
  3291  003C38  C091  F077         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3292  003C3C  ECA7  F00B         	call	_vfpfcnvrt	;wreg free
  3293  003C40  5072               	movf	?_vfpfcnvrt^0,w,c
  3294  003C42  0100               	movlb	0	; () banked
  3295  003C44  27DD               	addwf	_nout& (0+255),f,b
  3296  003C46  5073               	movf	(?_vfpfcnvrt+1)^0,w,c
  3297  003C48  23DE               	addwfc	(_nout+1)& (0+255),f,b
  3298  003C4A                     l4267:
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt
      +                          ) {
  3302  003C4A  C07C  FFF6         	movff	vfprintf@cfmt,tblptrl
  3303  003C4E  C07D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3304  003C52                     	if	0	;tblptru may be non-zero
  3305  003C52                     	endif
  3306  003C52                     	if	0	;tblptru may be non-zero
  3307  003C52                     	endif
  3308  003C52  0008               	tblrd		*
  3309  003C54  50F5               	movf	tablat,w,c
  3310  003C56  0900               	iorlw	0
  3311  003C58  A4D8               	btfss	status,2,c
  3312  003C5A  EF31  F01E         	goto	u5101
  3313  003C5E  EF33  F01E         	goto	u5100
  3314  003C62                     u5101:
  3315  003C62  EF12  F01E         	goto	l4265
  3316  003C66                     u5100:
  3317  003C66                     
  3318                           ; BSR set to: 0
  3319                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return nout;
  3320  003C66  C0DD  F08C         	movff	_nout,?_vfprintf
  3321  003C6A  C0DE  F08D         	movff	_nout+1,?_vfprintf+1
  3322  003C6E                     
  3323                           ; BSR set to: 0
  3324  003C6E  0012               	return		;funcret
  3325  003C70                     __end_of_vfprintf:
  3326                           	callstack 0
  3327                           
  3328 ;; *************** function _vfpfcnvrt *****************
  3329 ;; Defined at:
  3330 ;;		line 670 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;  fp              2  113[COMRAM] PTR struct _IO_FILE
  3333 ;;		 -> sprintf@f(6), 
  3334 ;;  fmt             2  115[COMRAM] PTR PTR unsigned char 
  3335 ;;		 -> vfprintf@cfmt(2), 
  3336 ;;  ap              2  117[COMRAM] PTR PTR void 
  3337 ;;		 -> sprintf@ap(2), 
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;  llu             8    0        unsigned long long 
  3340 ;;  ll              8    0        long long 
  3341 ;;  f               4    4[BANK0 ] long long 
  3342 ;;  ct              3    8[BANK0 ] unsigned char [3]
  3343 ;;  vp              3    0        PTR void 
  3344 ;;  cp              3    0        PTR unsigned char 
  3345 ;;  i               2    0        int 
  3346 ;;  done            2    0        int 
  3347 ;;  c               1   11[BANK0 ] unsigned char 
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  2  113[COMRAM] int 
  3350 ;; Registers used:
  3351 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3357 ;;      Params:         6       0       0       0       0       0       0
  3358 ;;      Locals:         0      12       0       0       0       0       0
  3359 ;;      Temps:          4       0       0       0       0       0       0
  3360 ;;      Totals:        10      12       0       0       0       0       0
  3361 ;;Total ram usage:       22 bytes
  3362 ;; Hardware stack levels used:    1
  3363 ;; Hardware stack levels required when called:    5
  3364 ;; This function calls:
  3365 ;;		_atoi
  3366 ;;		_efgtoa
  3367 ;;		_fputc
  3368 ;;		_isdigit
  3369 ;;		_isupper
  3370 ;;		_strncmp
  3371 ;;		_tolower
  3372 ;; This function is called by:
  3373 ;;		_vfprintf
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377                           	psect	text8
  3378  00174E                     __ptext8:
  3379                           	callstack 0
  3380  00174E                     _vfpfcnvrt:
  3381                           	callstack 22
  3382  00174E                     
  3383                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int vfpfcn
      +                          vrt(FILE *fp, char *fmt[], va_list ap);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\c
      +                          ommon\doprnt.c: 671: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          672:     char c, *cp, ct[3];;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\dopr
      +                          nt.c: 673:     int done, i;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 674:     long long ll;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 675:     unsigned long long llu;
  3384  00174E  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3385  001752  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3386  001756  CFDE FFF6          	movff	postinc2,tblptrl
  3387  00175A  CFDD FFF7          	movff	postdec2,tblptrh
  3388  00175E                     	if	0	;tblptru may be non-zero
  3389  00175E                     	endif
  3390  00175E                     	if	0	;tblptru may be non-zero
  3391  00175E                     	endif
  3392  00175E  0008               	tblrd		*
  3393  001760  50F5               	movf	tablat,w,c
  3394  001762  0A25               	xorlw	37
  3395  001764  A4D8               	btfss	status,2,c
  3396  001766  EFB7  F00B         	goto	u4961
  3397  00176A  EFB9  F00B         	goto	u4960
  3398  00176E                     u4961:
  3399  00176E  EFC0  F00D         	goto	l4239
  3400  001772                     u4960:
  3401  001772                     
  3402                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*fmt;
  3403  001772  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3404  001776  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3405  00177A  2ADE               	incf	postinc2,f,c
  3406  00177C  0E00               	movlw	0
  3407  00177E  22DD               	addwfc	postdec2,f,c
  3408  001780                     
  3409                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flags = w
      +                          idth = 0;
  3410  001780  0E00               	movlw	0
  3411  001782  0100               	movlb	0	; () banked
  3412  001784  6FE0               	movwf	(_width+1)& (0+255),b
  3413  001786  0E00               	movlw	0
  3414  001788  6FDF               	movwf	_width& (0+255),b
  3415  00178A  C0DF  F0E3         	movff	_width,_flags
  3416  00178E  C0E0  F0E4         	movff	_width+1,_flags+1
  3417  001792                     
  3418                           ; BSR set to: 0
  3419                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec = -1
      +                          ;
  3420  001792  69E1               	setf	_prec& (0+255),b
  3421  001794  69E2               	setf	(_prec+1)& (0+255),b
  3422  001796                     
  3423                           ; BSR set to: 0
  3424                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if ((*fmt
      +                          )[0] == '.') {
  3425  001796  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3426  00179A  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3427  00179E  CFDE FFF6          	movff	postinc2,tblptrl
  3428  0017A2  CFDD FFF7          	movff	postdec2,tblptrh
  3429  0017A6                     	if	0	;tblptru may be non-zero
  3430  0017A6                     	endif
  3431  0017A6                     	if	0	;tblptru may be non-zero
  3432  0017A6                     	endif
  3433  0017A6  0008               	tblrd		*
  3434  0017A8  50F5               	movf	tablat,w,c
  3435  0017AA  0A2E               	xorlw	46
  3436  0017AC  A4D8               	btfss	status,2,c
  3437  0017AE  EFDB  F00B         	goto	u4971
  3438  0017B2  EFDD  F00B         	goto	u4970
  3439  0017B6                     u4971:
  3440  0017B6  EF5B  F00C         	goto	l4185
  3441  0017BA                     u4970:
  3442  0017BA                     
  3443                           ; BSR set to: 0
  3444                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             prec 
      +                          = 0;
  3445  0017BA  0E00               	movlw	0
  3446  0017BC  6FE2               	movwf	(_prec+1)& (0+255),b
  3447  0017BE  0E00               	movlw	0
  3448  0017C0  6FE1               	movwf	_prec& (0+255),b
  3449  0017C2                     
  3450                           ; BSR set to: 0
  3451                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             ++*fm
      +                          t;
  3452  0017C2  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3453  0017C6  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3454  0017CA  2ADE               	incf	postinc2,f,c
  3455  0017CC  0E00               	movlw	0
  3456  0017CE  22DD               	addwfc	postdec2,f,c
  3457  0017D0                     
  3458                           ; BSR set to: 0
  3459                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             if ((
      +                          *fmt)[0] == '*') {
  3460  0017D0  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3461  0017D4  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3462  0017D8  CFDE FFF6          	movff	postinc2,tblptrl
  3463  0017DC  CFDD FFF7          	movff	postdec2,tblptrh
  3464  0017E0                     	if	0	;tblptru may be non-zero
  3465  0017E0                     	endif
  3466  0017E0                     	if	0	;tblptru may be non-zero
  3467  0017E0                     	endif
  3468  0017E0  0008               	tblrd		*
  3469  0017E2  50F5               	movf	tablat,w,c
  3470  0017E4  0A2A               	xorlw	42
  3471  0017E6  A4D8               	btfss	status,2,c
  3472  0017E8  EFF8  F00B         	goto	u4981
  3473  0017EC  EFFA  F00B         	goto	u4980
  3474  0017F0                     u4981:
  3475  0017F0  EF17  F00C         	goto	l4175
  3476  0017F4                     u4980:
  3477  0017F4                     
  3478                           ; BSR set to: 0
  3479                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:                 +
      +                          +*fmt;
  3480  0017F4  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3481  0017F8  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3482  0017FC  2ADE               	incf	postinc2,f,c
  3483  0017FE  0E00               	movlw	0
  3484  001800  22DD               	addwfc	postdec2,f,c
  3485                           
  3486                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:                 p
      +                          rec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3487  001802  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3488  001806  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3489  00180A  CFDF F078          	movff	indf2,??_vfpfcnvrt
  3490  00180E  0E02               	movlw	2
  3491  001810  26DE               	addwf	postinc2,f,c
  3492  001812  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  3493  001816  0E00               	movlw	0
  3494  001818  22DD               	addwfc	postdec2,f,c
  3495  00181A  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3496  00181E  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3497  001822  CFDE F0E1          	movff	postinc2,_prec
  3498  001826  CFDD F0E2          	movff	postdec2,_prec+1
  3499                           
  3500                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             } els
      +                          e {
  3501  00182A  EF5B  F00C         	goto	l4185
  3502  00182E                     l4175:
  3503                           
  3504                           ; BSR set to: 0
  3505                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:                 p
      +                          rec = atoi(*fmt);
  3506  00182E  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3507  001832  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3508  001836  CFDE F008          	movff	postinc2,atoi@s
  3509  00183A  CFDD F009          	movff	postdec2,atoi@s+1
  3510  00183E  EC7E  F018         	call	_atoi	;wreg free
  3511  001842  C008  F0E1         	movff	?_atoi,_prec
  3512  001846  C009  F0E2         	movff	?_atoi+1,_prec+1
  3513                           
  3514                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:                 w
      +                          hile ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3515  00184A  EF2E  F00C         	goto	l4179
  3516  00184E                     l4177:
  3517                           
  3518                           ; BSR set to: 0
  3519                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:                  
      +                             ++*fmt;
  3520  00184E  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3521  001852  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3522  001856  2ADE               	incf	postinc2,f,c
  3523  001858  0E00               	movlw	0
  3524  00185A  22DD               	addwfc	postdec2,f,c
  3525  00185C                     l4179:
  3526  00185C  0ED0               	movlw	208
  3527  00185E  6E78               	movwf	??_vfpfcnvrt^0,c
  3528  001860  0EFF               	movlw	255
  3529  001862  6E79               	movwf	(??_vfpfcnvrt+1)^0,c
  3530  001864  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3531  001868  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3532  00186C  CFDE FFF6          	movff	postinc2,tblptrl
  3533  001870  CFDD FFF7          	movff	postdec2,tblptrh
  3534  001874                     	if	0	;tblptru may be non-zero
  3535  001874                     	endif
  3536  001874                     	if	0	;tblptru may be non-zero
  3537  001874                     	endif
  3538  001874  0008               	tblrd		*
  3539  001876  50F5               	movf	tablat,w,c
  3540  001878  6E7A               	movwf	(??_vfpfcnvrt+2)^0,c
  3541  00187A  6A7B               	clrf	(??_vfpfcnvrt+3)^0,c
  3542  00187C  5078               	movf	??_vfpfcnvrt^0,w,c
  3543  00187E  267A               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3544  001880  5079               	movf	(??_vfpfcnvrt+1)^0,w,c
  3545  001882  227B               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3546  001884  507B               	movf	(??_vfpfcnvrt+3)^0,w,c
  3547  001886  E10A               	bnz	u4990
  3548  001888  0E0A               	movlw	10
  3549  00188A  5C7A               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3550  00188C  A0D8               	btfss	status,0,c
  3551  00188E  EF4B  F00C         	goto	u4991
  3552  001892  EF4E  F00C         	goto	u4990
  3553  001896                     u4991:
  3554  001896  0E01               	movlw	1
  3555  001898  EF4F  F00C         	goto	u5000
  3556  00189C                     u4990:
  3557  00189C  0E00               	movlw	0
  3558  00189E                     u5000:
  3559  00189E  0100               	movlb	0	; () banked
  3560  0018A0  6F80               	movwf	_vfpfcnvrt$758& (0+255),b
  3561  0018A2  6B81               	clrf	(_vfpfcnvrt$758+1)& (0+255),b
  3562  0018A4                     
  3563                           ; BSR set to: 0
  3564  0018A4  5180               	movf	_vfpfcnvrt$758& (0+255),w,b
  3565  0018A6  1181               	iorwf	(_vfpfcnvrt$758+1)& (0+255),w,b
  3566  0018A8  A4D8               	btfss	status,2,c
  3567  0018AA  EF59  F00C         	goto	u5011
  3568  0018AE  EF5B  F00C         	goto	u5010
  3569  0018B2                     u5011:
  3570  0018B2  EF27  F00C         	goto	l4177
  3571  0018B6                     u5010:
  3572  0018B6                     l4185:
  3573                           
  3574                           ; BSR set to: 0
  3575                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0] = t
      +                          olower((int)(*fmt)[0]);
  3576  0018B6  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3577  0018BA  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3578  0018BE  CFDE FFF6          	movff	postinc2,tblptrl
  3579  0018C2  CFDD FFF7          	movff	postdec2,tblptrh
  3580  0018C6                     	if	0	;tblptru may be non-zero
  3581  0018C6                     	endif
  3582  0018C6                     	if	0	;tblptru may be non-zero
  3583  0018C6                     	endif
  3584  0018C6  0008               	tblrd		*
  3585  0018C8  50F5               	movf	tablat,w,c
  3586  0018CA  6E07               	movwf	tolower@c^0,c
  3587  0018CC  6A08               	clrf	(tolower@c+1)^0,c
  3588  0018CE  EC38  F01E         	call	_tolower	;wreg free
  3589  0018D2  5007               	movf	?_tolower^0,w,c
  3590  0018D4  0100               	movlb	0	; () banked
  3591  0018D6  6F88               	movwf	vfpfcnvrt@ct& (0+255),b
  3592  0018D8                     
  3593                           ; BSR set to: 0
  3594                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (ct[0]
      +                          ) {
  3595  0018D8  5188               	movf	vfpfcnvrt@ct& (0+255),w,b
  3596  0018DA  B4D8               	btfsc	status,2,c
  3597  0018DC  EF72  F00C         	goto	u5021
  3598  0018E0  EF74  F00C         	goto	u5020
  3599  0018E4                     u5021:
  3600  0018E4  EFAE  F00C         	goto	l4195
  3601  0018E8                     u5020:
  3602  0018E8                     
  3603                           ; BSR set to: 0
  3604                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             ct[1]
      +                           = tolower((int)(*fmt)[1]);
  3605  0018E8  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3606  0018EC  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3607  0018F0  CFDE F078          	movff	postinc2,??_vfpfcnvrt
  3608  0018F4  CFDD F079          	movff	postdec2,??_vfpfcnvrt+1
  3609  0018F8  0E01               	movlw	1
  3610  0018FA  2678               	addwf	??_vfpfcnvrt^0,f,c
  3611  0018FC  0E00               	movlw	0
  3612  0018FE  2279               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3613  001900  C078  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3614  001904  C079  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3615  001908                     	if	0	;tblptru may be non-zero
  3616  001908                     	endif
  3617  001908                     	if	0	;tblptru may be non-zero
  3618  001908                     	endif
  3619  001908  0008               	tblrd		*
  3620  00190A  50F5               	movf	tablat,w,c
  3621  00190C  6E07               	movwf	tolower@c^0,c
  3622  00190E  6A08               	clrf	(tolower@c+1)^0,c
  3623  001910  EC38  F01E         	call	_tolower	;wreg free
  3624  001914  5007               	movf	?_tolower^0,w,c
  3625  001916  0100               	movlb	0	; () banked
  3626  001918  6F89               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3627  00191A                     
  3628                           ; BSR set to: 0
  3629                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             if (c
      +                          t[1]) {
  3630  00191A  5189               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3631  00191C  B4D8               	btfsc	status,2,c
  3632  00191E  EF93  F00C         	goto	u5031
  3633  001922  EF95  F00C         	goto	u5030
  3634  001926                     u5031:
  3635  001926  EFAE  F00C         	goto	l4195
  3636  00192A                     u5030:
  3637  00192A                     
  3638                           ; BSR set to: 0
  3639                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:                 c
      +                          t[2] = tolower((int)(*fmt)[2]);
  3640  00192A  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3641  00192E  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3642  001932  CFDE F078          	movff	postinc2,??_vfpfcnvrt
  3643  001936  CFDD F079          	movff	postdec2,??_vfpfcnvrt+1
  3644  00193A  0E02               	movlw	2
  3645  00193C  2678               	addwf	??_vfpfcnvrt^0,f,c
  3646  00193E  0E00               	movlw	0
  3647  001940  2279               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3648  001942  C078  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3649  001946  C079  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3650  00194A                     	if	0	;tblptru may be non-zero
  3651  00194A                     	endif
  3652  00194A                     	if	0	;tblptru may be non-zero
  3653  00194A                     	endif
  3654  00194A  0008               	tblrd		*
  3655  00194C  50F5               	movf	tablat,w,c
  3656  00194E  6E07               	movwf	tolower@c^0,c
  3657  001950  6A08               	clrf	(tolower@c+1)^0,c
  3658  001952  EC38  F01E         	call	_tolower	;wreg free
  3659  001956  5007               	movf	?_tolower^0,w,c
  3660  001958  0100               	movlb	0	; () banked
  3661  00195A  6F8A               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3662  00195C                     l4195:
  3663                           
  3664                           ; BSR set to: 0
  3665                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (ct[0]
      +                           == 'f') {
  3666  00195C  0E66               	movlw	102
  3667  00195E  1988               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3668  001960  A4D8               	btfss	status,2,c
  3669  001962  EFB5  F00C         	goto	u5041
  3670  001966  EFB7  F00C         	goto	u5040
  3671  00196A                     u5041:
  3672  00196A  EFF7  F00C         	goto	l4207
  3673  00196E                     u5040:
  3674  00196E                     
  3675                           ; BSR set to: 0
  3676                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             c = (
      +                          *fmt)[0];
  3677  00196E  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3678  001972  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3679  001976  CFDE FFF6          	movff	postinc2,tblptrl
  3680  00197A  CFDD FFF7          	movff	postdec2,tblptrh
  3681  00197E                     	if	0	;tblptru may be non-zero
  3682  00197E                     	endif
  3683  00197E                     	if	0	;tblptru may be non-zero
  3684  00197E                     	endif
  3685  00197E  0008               	tblrd		*
  3686  001980  CFF5 F08B          	movff	tablat,vfpfcnvrt@c
  3687  001984                     
  3688                           ; BSR set to: 0
  3689                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             ++*fm
      +                          t;
  3690  001984  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3691  001988  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3692  00198C  2ADE               	incf	postinc2,f,c
  3693  00198E  0E00               	movlw	0
  3694  001990  22DD               	addwfc	postdec2,f,c
  3695  001992                     
  3696                           ; BSR set to: 0
  3697                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             f = (
      +                          long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3698  001992  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3699  001996  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3700  00199A  CFDF F078          	movff	indf2,??_vfpfcnvrt
  3701  00199E  0E04               	movlw	4
  3702  0019A0  26DE               	addwf	postinc2,f,c
  3703  0019A2  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  3704  0019A6  0E00               	movlw	0
  3705  0019A8  22DD               	addwfc	postdec2,f,c
  3706  0019AA  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3707  0019AE  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3708  0019B2  CFDE F084          	movff	postinc2,vfpfcnvrt@f
  3709  0019B6  CFDE F085          	movff	postinc2,vfpfcnvrt@f+1
  3710  0019BA  CFDE F086          	movff	postinc2,vfpfcnvrt@f+2
  3711  0019BE  CFDE F087          	movff	postinc2,vfpfcnvrt@f+3
  3712  0019C2                     l4203:
  3713                           
  3714                           ; BSR set to: 0
  3715                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             retur
      +                          n efgtoa(fp, f, c);
  3716  0019C2  C072  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  3717  0019C6  C073  F02F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3718  0019CA  C084  F030         	movff	vfpfcnvrt@f,efgtoa@f
  3719  0019CE  C085  F031         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3720  0019D2  C086  F032         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3721  0019D6  C087  F033         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3722  0019DA  C08B  F034         	movff	vfpfcnvrt@c,efgtoa@c
  3723  0019DE  EC7A  F003         	call	_efgtoa	;wreg free
  3724  0019E2  C02E  F072         	movff	?_efgtoa,?_vfpfcnvrt
  3725  0019E6  C02F  F073         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3726  0019EA  EFDB  F00D         	goto	l1033
  3727  0019EE                     l4207:
  3728                           
  3729                           ; BSR set to: 0
  3730                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (!strn
      +                          cmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3731  0019EE  0E88               	movlw	low vfpfcnvrt@ct
  3732  0019F0  6E01               	movwf	strncmp@_l^0,c
  3733  0019F2  0E00               	movlw	high vfpfcnvrt@ct
  3734  0019F4  6E02               	movwf	(strncmp@_l+1)^0,c
  3735  0019F6  0EEC               	movlw	low STR_39
  3736  0019F8  6E03               	movwf	strncmp@_r^0,c
  3737  0019FA  0E06               	movlw	high STR_39
  3738  0019FC  6E04               	movwf	(strncmp@_r+1)^0,c
  3739  0019FE  0E00               	movlw	0
  3740  001A00  6E06               	movwf	(strncmp@n+1)^0,c
  3741  001A02  0E02               	movlw	2
  3742  001A04  6E05               	movwf	strncmp@n^0,c
  3743  001A06  ECCA  F01A         	call	_strncmp	;wreg free
  3744  001A0A  5001               	movf	?_strncmp^0,w,c
  3745  001A0C  1002               	iorwf	(?_strncmp+1)^0,w,c
  3746  001A0E  A4D8               	btfss	status,2,c
  3747  001A10  EF0C  F00D         	goto	u5051
  3748  001A14  EF0E  F00D         	goto	u5050
  3749  001A18                     u5051:
  3750  001A18  EF8A  F00D         	goto	l4223
  3751  001A1C                     u5050:
  3752  001A1C                     
  3753                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             if ((
      +                          0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3754  001A1C  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3755  001A20  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3756  001A24  CFDE F078          	movff	postinc2,??_vfpfcnvrt
  3757  001A28  CFDD F079          	movff	postdec2,??_vfpfcnvrt+1
  3758  001A2C  0E01               	movlw	1
  3759  001A2E  2678               	addwf	??_vfpfcnvrt^0,f,c
  3760  001A30  0E00               	movlw	0
  3761  001A32  2279               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3762  001A34  C078  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3763  001A38  C079  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3764  001A3C                     	if	0	;tblptru may be non-zero
  3765  001A3C                     	endif
  3766  001A3C                     	if	0	;tblptru may be non-zero
  3767  001A3C                     	endif
  3768  001A3C  0008               	tblrd		*
  3769  001A3E  CFF5 F08B          	movff	tablat,vfpfcnvrt@c
  3770  001A42  0EBF               	movlw	191
  3771  001A44  6E78               	movwf	??_vfpfcnvrt^0,c
  3772  001A46  0EFF               	movlw	255
  3773  001A48  6E79               	movwf	(??_vfpfcnvrt+1)^0,c
  3774  001A4A  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3775  001A4E  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3776  001A52  CFDE FFF6          	movff	postinc2,tblptrl
  3777  001A56  CFDD FFF7          	movff	postdec2,tblptrh
  3778  001A5A                     	if	0	;tblptru may be non-zero
  3779  001A5A                     	endif
  3780  001A5A                     	if	0	;tblptru may be non-zero
  3781  001A5A                     	endif
  3782  001A5A  0008               	tblrd		*
  3783  001A5C  50F5               	movf	tablat,w,c
  3784  001A5E  6E7A               	movwf	(??_vfpfcnvrt+2)^0,c
  3785  001A60  6A7B               	clrf	(??_vfpfcnvrt+3)^0,c
  3786  001A62  5078               	movf	??_vfpfcnvrt^0,w,c
  3787  001A64  267A               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3788  001A66  5079               	movf	(??_vfpfcnvrt+1)^0,w,c
  3789  001A68  227B               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3790  001A6A  507B               	movf	(??_vfpfcnvrt+3)^0,w,c
  3791  001A6C  E10A               	bnz	u5060
  3792  001A6E  0E1A               	movlw	26
  3793  001A70  5C7A               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3794  001A72  A0D8               	btfss	status,0,c
  3795  001A74  EF3E  F00D         	goto	u5061
  3796  001A78  EF41  F00D         	goto	u5060
  3797  001A7C                     u5061:
  3798  001A7C  0E01               	movlw	1
  3799  001A7E  EF42  F00D         	goto	u5070
  3800  001A82                     u5060:
  3801  001A82  0E00               	movlw	0
  3802  001A84                     u5070:
  3803  001A84  0100               	movlb	0	; () banked
  3804  001A86  6F82               	movwf	_vfpfcnvrt$762& (0+255),b
  3805  001A88  6B83               	clrf	(_vfpfcnvrt$762+1)& (0+255),b
  3806  001A8A                     
  3807                           ; BSR set to: 0
  3808  001A8A  5182               	movf	_vfpfcnvrt$762& (0+255),w,b
  3809  001A8C  1183               	iorwf	(_vfpfcnvrt$762+1)& (0+255),w,b
  3810  001A8E  B4D8               	btfsc	status,2,c
  3811  001A90  EF4C  F00D         	goto	u5081
  3812  001A94  EF4E  F00D         	goto	u5080
  3813  001A98                     u5081:
  3814  001A98  EF68  F00D         	goto	l4217
  3815  001A9C                     u5080:
  3816  001A9C                     
  3817                           ; BSR set to: 0
  3818                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:                 f
      +                           = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3819  001A9C  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3820  001AA0  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3821  001AA4  CFDF F078          	movff	indf2,??_vfpfcnvrt
  3822  001AA8  0E04               	movlw	4
  3823  001AAA  26DE               	addwf	postinc2,f,c
  3824  001AAC  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  3825  001AB0  0E00               	movlw	0
  3826  001AB2  22DD               	addwfc	postdec2,f,c
  3827  001AB4  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3828  001AB8  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3829  001ABC  CFDE F084          	movff	postinc2,vfpfcnvrt@f
  3830  001AC0  CFDE F085          	movff	postinc2,vfpfcnvrt@f+1
  3831  001AC4  CFDE F086          	movff	postinc2,vfpfcnvrt@f+2
  3832  001AC8  CFDE F087          	movff	postinc2,vfpfcnvrt@f+3
  3833                           
  3834                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             } els
      +                          e {
  3835  001ACC  EF80  F00D         	goto	l1040
  3836  001AD0                     l4217:
  3837                           
  3838                           ; BSR set to: 0
  3839                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:                 f
      +                           = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3840  001AD0  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3841  001AD4  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3842  001AD8  CFDF F078          	movff	indf2,??_vfpfcnvrt
  3843  001ADC  0E04               	movlw	4
  3844  001ADE  26DE               	addwf	postinc2,f,c
  3845  001AE0  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  3846  001AE4  0E00               	movlw	0
  3847  001AE6  22DD               	addwfc	postdec2,f,c
  3848  001AE8  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3849  001AEC  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3850  001AF0  CFDE F084          	movff	postinc2,vfpfcnvrt@f
  3851  001AF4  CFDE F085          	movff	postinc2,vfpfcnvrt@f+1
  3852  001AF8  CFDE F086          	movff	postinc2,vfpfcnvrt@f+2
  3853  001AFC  CFDE F087          	movff	postinc2,vfpfcnvrt@f+3
  3854  001B00                     l1040:
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             *fmt 
      +                          += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3858  001B00  0E02               	movlw	2
  3859  001B02  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3860  001B06  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3861  001B0A  26DE               	addwf	postinc2,f,c
  3862  001B0C  0E00               	movlw	0
  3863  001B0E  22DD               	addwfc	postdec2,f,c
  3864  001B10  EFE1  F00C         	goto	l4203
  3865  001B14                     l4223:
  3866                           
  3867                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if ((*fm
      +                          t)[0] == '%') {
  3868  001B14  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3869  001B18  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3870  001B1C  CFDE FFF6          	movff	postinc2,tblptrl
  3871  001B20  CFDD FFF7          	movff	postdec2,tblptrh
  3872  001B24                     	if	0	;tblptru may be non-zero
  3873  001B24                     	endif
  3874  001B24                     	if	0	;tblptru may be non-zero
  3875  001B24                     	endif
  3876  001B24  0008               	tblrd		*
  3877  001B26  50F5               	movf	tablat,w,c
  3878  001B28  0A25               	xorlw	37
  3879  001B2A  A4D8               	btfss	status,2,c
  3880  001B2C  EF9A  F00D         	goto	u5091
  3881  001B30  EF9C  F00D         	goto	u5090
  3882  001B34                     u5091:
  3883  001B34  EFB3  F00D         	goto	l4233
  3884  001B38                     u5090:
  3885  001B38                     
  3886                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:             ++*f
      +                          mt;
  3887  001B38  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3888  001B3C  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3889  001B40  2ADE               	incf	postinc2,f,c
  3890  001B42  0E00               	movlw	0
  3891  001B44  22DD               	addwfc	postdec2,f,c
  3892  001B46                     
  3893                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:             fput
      +                          c((int)'%', fp);
  3894  001B46  0E00               	movlw	0
  3895  001B48  6E02               	movwf	(fputc@c+1)^0,c
  3896  001B4A  0E25               	movlw	37
  3897  001B4C  6E01               	movwf	fputc@c^0,c
  3898  001B4E  C072  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3899  001B52  C073  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3900  001B56  EC35  F01B         	call	_fputc	;wreg free
  3901  001B5A                     l4229:
  3902                           
  3903                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:             retu
      +                          rn 1;
  3904  001B5A  0E00               	movlw	0
  3905  001B5C  6E73               	movwf	(?_vfpfcnvrt+1)^0,c
  3906  001B5E  0E01               	movlw	1
  3907  001B60  6E72               	movwf	?_vfpfcnvrt^0,c
  3908  001B62  EFDB  F00D         	goto	l1033
  3909  001B66                     l4233:
  3910                           
  3911                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*fmt;
  3912  001B66  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3913  001B6A  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3914  001B6E  2ADE               	incf	postinc2,f,c
  3915  001B70  0E00               	movlw	0
  3916  001B72  22DD               	addwfc	postdec2,f,c
  3917  001B74                     
  3918                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         return 0
      +                          ;
  3919  001B74  0E00               	movlw	0
  3920  001B76  6E73               	movwf	(?_vfpfcnvrt+1)^0,c
  3921  001B78  0E00               	movlw	0
  3922  001B7A  6E72               	movwf	?_vfpfcnvrt^0,c
  3923  001B7C  EFDB  F00D         	goto	l1033
  3924  001B80                     l4239:
  3925                           
  3926                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((int)(
      +                          *fmt)[0], fp);
  3927  001B80  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3928  001B84  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3929  001B88  CFDE FFF6          	movff	postinc2,tblptrl
  3930  001B8C  CFDD FFF7          	movff	postdec2,tblptrh
  3931  001B90                     	if	0	;tblptru may be non-zero
  3932  001B90                     	endif
  3933  001B90                     	if	0	;tblptru may be non-zero
  3934  001B90                     	endif
  3935  001B90  0008               	tblrd		*
  3936  001B92  50F5               	movf	tablat,w,c
  3937  001B94  6E01               	movwf	fputc@c^0,c
  3938  001B96  6A02               	clrf	(fputc@c+1)^0,c
  3939  001B98  C072  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3940  001B9C  C073  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3941  001BA0  EC35  F01B         	call	_fputc	;wreg free
  3942  001BA4                     
  3943                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  3944  001BA4  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3945  001BA8  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3946  001BAC  2ADE               	incf	postinc2,f,c
  3947  001BAE  0E00               	movlw	0
  3948  001BB0  22DD               	addwfc	postdec2,f,c
  3949  001BB2  EFAD  F00D         	goto	l4229
  3950  001BB6                     l1033:
  3951  001BB6  0012               	return		;funcret
  3952  001BB8                     __end_of_vfpfcnvrt:
  3953                           	callstack 0
  3954                           
  3955 ;; *************** function _strncmp *****************
  3956 ;; Defined at:
  3957 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  3960 ;;		 -> vfpfcnvrt@ct(3), 
  3961 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  3962 ;;		 -> STR_41(3), 
  3963 ;;  n               2    4[COMRAM] unsigned int 
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;  r               2    9[COMRAM] PTR const unsigned char 
  3966 ;;		 -> STR_41(3), 
  3967 ;;  l               2    7[COMRAM] PTR const unsigned char 
  3968 ;;		 -> vfpfcnvrt@ct(3), 
  3969 ;; Return value:  Size  Location     Type
  3970 ;;                  2    0[COMRAM] int 
  3971 ;; Registers used:
  3972 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3973 ;; Tracked objects:
  3974 ;;		On entry : 0/0
  3975 ;;		On exit  : 0/0
  3976 ;;		Unchanged: 0/0
  3977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3978 ;;      Params:         6       0       0       0       0       0       0
  3979 ;;      Locals:         4       0       0       0       0       0       0
  3980 ;;      Temps:          1       0       0       0       0       0       0
  3981 ;;      Totals:        11       0       0       0       0       0       0
  3982 ;;Total ram usage:       11 bytes
  3983 ;; Hardware stack levels used:    1
  3984 ;; This function calls:
  3985 ;;		Nothing
  3986 ;; This function is called by:
  3987 ;;		_vfpfcnvrt
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           	psect	text9
  3992  003594                     __ptext9:
  3993                           	callstack 0
  3994  003594                     _strncmp:
  3995                           	callstack 26
  3996  003594  C001  F008         	movff	strncmp@_l,strncmp@l
  3997  003598  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  3998  00359C  C003  F00A         	movff	strncmp@_r,strncmp@r
  3999  0035A0  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  4000  0035A4  0605               	decf	strncmp@n^0,f,c
  4001  0035A6  A0D8               	btfss	status,0,c
  4002  0035A8  0606               	decf	(strncmp@n+1)^0,f,c
  4003  0035AA  2805               	incf	strncmp@n^0,w,c
  4004  0035AC  E106               	bnz	u4881
  4005  0035AE  2806               	incf	(strncmp@n+1)^0,w,c
  4006  0035B0  A4D8               	btfss	status,2,c
  4007  0035B2  EFDD  F01A         	goto	u4881
  4008  0035B6  EFDF  F01A         	goto	u4880
  4009  0035BA                     u4881:
  4010  0035BA  EFEC  F01A         	goto	l4117
  4011  0035BE                     u4880:
  4012  0035BE  0E00               	movlw	0
  4013  0035C0  6E02               	movwf	(?_strncmp+1)^0,c
  4014  0035C2  0E00               	movlw	0
  4015  0035C4  6E01               	movwf	?_strncmp^0,c
  4016  0035C6  EF34  F01B         	goto	l1161
  4017  0035CA                     l4115:
  4018  0035CA  4A08               	infsnz	strncmp@l^0,f,c
  4019  0035CC  2A09               	incf	(strncmp@l+1)^0,f,c
  4020  0035CE  4A0A               	infsnz	strncmp@r^0,f,c
  4021  0035D0  2A0B               	incf	(strncmp@r+1)^0,f,c
  4022  0035D2  0605               	decf	strncmp@n^0,f,c
  4023  0035D4  A0D8               	btfss	status,0,c
  4024  0035D6  0606               	decf	(strncmp@n+1)^0,f,c
  4025  0035D8                     l4117:
  4026  0035D8  C008  FFD9         	movff	strncmp@l,fsr2l
  4027  0035DC  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4028  0035E0  50DF               	movf	indf2,w,c
  4029  0035E2  B4D8               	btfsc	status,2,c
  4030  0035E4  EFF6  F01A         	goto	u4891
  4031  0035E8  EFF8  F01A         	goto	u4890
  4032  0035EC                     u4891:
  4033  0035EC  EF23  F01B         	goto	l4125
  4034  0035F0                     u4890:
  4035  0035F0  C00A  FFF6         	movff	strncmp@r,tblptrl
  4036  0035F4  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4037  0035F8                     	if	0	;tblptru may be non-zero
  4038  0035F8                     	endif
  4039  0035F8                     	if	0	;tblptru may be non-zero
  4040  0035F8                     	endif
  4041  0035F8  0008               	tblrd		*
  4042  0035FA  50F5               	movf	tablat,w,c
  4043  0035FC  0900               	iorlw	0
  4044  0035FE  B4D8               	btfsc	status,2,c
  4045  003600  EF04  F01B         	goto	u4901
  4046  003604  EF06  F01B         	goto	u4900
  4047  003608                     u4901:
  4048  003608  EF23  F01B         	goto	l4125
  4049  00360C                     u4900:
  4050  00360C  5005               	movf	strncmp@n^0,w,c
  4051  00360E  1006               	iorwf	(strncmp@n+1)^0,w,c
  4052  003610  B4D8               	btfsc	status,2,c
  4053  003612  EF0D  F01B         	goto	u4911
  4054  003616  EF0F  F01B         	goto	u4910
  4055  00361A                     u4911:
  4056  00361A  EF23  F01B         	goto	l4125
  4057  00361E                     u4910:
  4058  00361E  C008  FFD9         	movff	strncmp@l,fsr2l
  4059  003622  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4060  003626  50DF               	movf	indf2,w,c
  4061  003628  6E07               	movwf	??_strncmp^0,c
  4062  00362A  C00A  FFF6         	movff	strncmp@r,tblptrl
  4063  00362E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4064  003632                     	if	0	;tblptru may be non-zero
  4065  003632                     	endif
  4066  003632                     	if	0	;tblptru may be non-zero
  4067  003632                     	endif
  4068  003632  0008               	tblrd		*
  4069  003634  50F5               	movf	tablat,w,c
  4070  003636  1807               	xorwf	??_strncmp^0,w,c
  4071  003638  B4D8               	btfsc	status,2,c
  4072  00363A  EF21  F01B         	goto	u4921
  4073  00363E  EF23  F01B         	goto	u4920
  4074  003642                     u4921:
  4075  003642  EFE5  F01A         	goto	l4115
  4076  003646                     u4920:
  4077  003646                     l4125:
  4078  003646  C008  FFD9         	movff	strncmp@l,fsr2l
  4079  00364A  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4080  00364E  50DF               	movf	indf2,w,c
  4081  003650  6E07               	movwf	??_strncmp^0,c
  4082  003652  C00A  FFF6         	movff	strncmp@r,tblptrl
  4083  003656  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4084  00365A                     	if	0	;tblptru may be non-zero
  4085  00365A                     	endif
  4086  00365A                     	if	0	;tblptru may be non-zero
  4087  00365A                     	endif
  4088  00365A  0008               	tblrd		*
  4089  00365C  50F5               	movf	tablat,w,c
  4090  00365E  5C07               	subwf	??_strncmp^0,w,c
  4091  003660  6E01               	movwf	?_strncmp^0,c
  4092  003662  6A02               	clrf	(?_strncmp+1)^0,c
  4093  003664  A0D8               	btfss	status,0,c
  4094  003666  0602               	decf	(?_strncmp+1)^0,f,c
  4095  003668                     l1161:
  4096  003668  0012               	return		;funcret
  4097  00366A                     __end_of_strncmp:
  4098                           	callstack 0
  4099                           
  4100 ;; *************** function _efgtoa *****************
  4101 ;; Defined at:
  4102 ;;		line 319 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4103 ;; Parameters:    Size  Location     Type
  4104 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  4105 ;;		 -> sprintf@f(6), 
  4106 ;;  f               4   47[COMRAM] PTR struct _IO_FILE
  4107 ;;  c               1   51[COMRAM] unsigned char 
  4108 ;; Auto vars:     Size  Location     Type
  4109 ;;  u               4  109[COMRAM] unsigned char 
  4110 ;;  g               4  101[COMRAM] unsigned char 
  4111 ;;  l               4   95[COMRAM] unsigned char 
  4112 ;;  h               4   91[COMRAM] unsigned char 
  4113 ;;  ou              4   57[COMRAM] unsigned char 
  4114 ;;  n               2  107[COMRAM] int 
  4115 ;;  e               2  105[COMRAM] int 
  4116 ;;  i               2   99[COMRAM] int 
  4117 ;;  w               2   88[COMRAM] int 
  4118 ;;  p               2   85[COMRAM] int 
  4119 ;;  sign            2   83[COMRAM] int 
  4120 ;;  d               2   81[COMRAM] int 
  4121 ;;  ne              2   79[COMRAM] int 
  4122 ;;  m               2   77[COMRAM] int 
  4123 ;;  pp              2   75[COMRAM] int 
  4124 ;;  t               2   73[COMRAM] int 
  4125 ;;  mode            1   90[COMRAM] unsigned char 
  4126 ;;  nmode           1   87[COMRAM] unsigned char 
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  2   45[COMRAM] int 
  4129 ;; Registers used:
  4130 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4136 ;;      Params:         7       0       0       0       0       0       0
  4137 ;;      Locals:        56       0       0       0       0       0       0
  4138 ;;      Temps:          5       0       0       0       0       0       0
  4139 ;;      Totals:        68       0       0       0       0       0       0
  4140 ;;Total ram usage:       68 bytes
  4141 ;; Hardware stack levels used:    1
  4142 ;; Hardware stack levels required when called:    4
  4143 ;; This function calls:
  4144 ;;		___awdiv
  4145 ;;		___awmod
  4146 ;;		___fladd
  4147 ;;		___fldiv
  4148 ;;		___fleq
  4149 ;;		___flge
  4150 ;;		___flmul
  4151 ;;		___flneg
  4152 ;;		___flsub
  4153 ;;		___fltol
  4154 ;;		___fpclassifyf
  4155 ;;		_floorf
  4156 ;;		_isupper
  4157 ;;		_pad
  4158 ;;		_strcpy
  4159 ;;		_tolower
  4160 ;; This function is called by:
  4161 ;;		_vfpfcnvrt
  4162 ;; This function uses a non-reentrant model
  4163 ;;
  4164                           
  4165                           	psect	text10
  4166  0006F4                     __ptext10:
  4167                           	callstack 0
  4168  0006F4                     _efgtoa:
  4169                           	callstack 22
  4170  0006F4                     
  4171                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int efgtoa
      +                          (FILE *fp, long double f, char c);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common
      +                          \doprnt.c: 320: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 321: 
      +                              char mode, nmode;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 3
      +                          22:     int d, e, i, m, n, ne, p, pp, sign, t, w;;D:\Programs\Microship\xc8\v2.20\pic\so
      +                          urces\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;;D:\Programs\Microship\xc
      +                          8\v2.20\pic\sources\c99\common\doprnt.c: 326:     sign = 0;
  4172  0006F4  0E00               	movlw	0
  4173  0006F6  6E55               	movwf	(efgtoa@sign+1)^0,c
  4174  0006F8  0E00               	movlw	0
  4175  0006FA  6E54               	movwf	efgtoa@sign^0,c
  4176  0006FC                     
  4177                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  4178  0006FC  C030  F066         	movff	efgtoa@f,efgtoa@g
  4179  000700  C031  F067         	movff	efgtoa@f+1,efgtoa@g+1
  4180  000704  C032  F068         	movff	efgtoa@f+2,efgtoa@g+2
  4181  000708  C033  F069         	movff	efgtoa@f+3,efgtoa@g+3
  4182  00070C                     
  4183                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 0.0) 
      +                          {
  4184  00070C  BE69               	btfsc	(efgtoa@g+3)^0,7,c
  4185  00070E  EF8D  F003         	goto	u4290
  4186  000712  EF8B  F003         	goto	u4291
  4187  000716                     u4291:
  4188  000716  EFA3  F003         	goto	l3779
  4189  00071A                     u4290:
  4190  00071A                     
  4191                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign = 1;
  4192  00071A  0E00               	movlw	0
  4193  00071C  6E55               	movwf	(efgtoa@sign+1)^0,c
  4194  00071E  0E01               	movlw	1
  4195  000720  6E54               	movwf	efgtoa@sign^0,c
  4196  000722                     
  4197                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = -g;
  4198  000722  C066  F001         	movff	efgtoa@g,___flneg@f1
  4199  000726  C067  F002         	movff	efgtoa@g+1,___flneg@f1+1
  4200  00072A  C068  F003         	movff	efgtoa@g+2,___flneg@f1+2
  4201  00072E  C069  F004         	movff	efgtoa@g+3,___flneg@f1+3
  4202  000732  EC77  F01F         	call	___flneg	;wreg free
  4203  000736  C001  F066         	movff	?___flneg,efgtoa@g
  4204  00073A  C002  F067         	movff	?___flneg+1,efgtoa@g+1
  4205  00073E  C003  F068         	movff	?___flneg+2,efgtoa@g+2
  4206  000742  C004  F069         	movff	?___flneg+3,efgtoa@g+3
  4207  000746                     l3779:
  4208                           
  4209                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  4210  000746  0E00               	movlw	0
  4211  000748  6E6D               	movwf	(efgtoa@n+1)^0,c
  4212  00074A  0E00               	movlw	0
  4213  00074C  6E6C               	movwf	efgtoa@n^0,c
  4214  00074E                     
  4215                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = width;
  4216  00074E  C0DF  F059         	movff	_width,efgtoa@w
  4217  000752  C0E0  F05A         	movff	_width+1,efgtoa@w+1
  4218  000756                     
  4219                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign || (
      +                          flags & (1 << 2))) {
  4220  000756  5054               	movf	efgtoa@sign^0,w,c
  4221  000758  1055               	iorwf	(efgtoa@sign+1)^0,w,c
  4222  00075A  A4D8               	btfss	status,2,c
  4223  00075C  EFB2  F003         	goto	u4301
  4224  000760  EFB4  F003         	goto	u4300
  4225  000764                     u4301:
  4226  000764  EFBC  F003         	goto	l3787
  4227  000768                     u4300:
  4228  000768  0100               	movlb	0	; () banked
  4229  00076A  A5E3               	btfss	_flags& (0+255),2,b
  4230  00076C  EFBA  F003         	goto	u4311
  4231  000770  EFBC  F003         	goto	u4310
  4232  000774                     u4311:
  4233  000774  EFD6  F003         	goto	l3799
  4234  000778                     u4310:
  4235  000778                     l3787:
  4236                           
  4237                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf[n] =
      +                           sign ? '-' : '+';
  4238  000778  5054               	movf	efgtoa@sign^0,w,c
  4239  00077A  1055               	iorwf	(efgtoa@sign+1)^0,w,c
  4240  00077C  A4D8               	btfss	status,2,c
  4241  00077E  EFC3  F003         	goto	u4321
  4242  000782  EFC5  F003         	goto	u4320
  4243  000786                     u4321:
  4244  000786  EFCB  F003         	goto	l3791
  4245  00078A                     u4320:
  4246  00078A  0E00               	movlw	0
  4247  00078C  6E3F               	movwf	(_efgtoa$732+1)^0,c
  4248  00078E  0E2B               	movlw	43
  4249  000790  6E3E               	movwf	_efgtoa$732^0,c
  4250  000792  EFCF  F003         	goto	l3793
  4251  000796                     l3791:
  4252  000796  0E00               	movlw	0
  4253  000798  6E3F               	movwf	(_efgtoa$732+1)^0,c
  4254  00079A  0E2D               	movlw	45
  4255  00079C  6E3E               	movwf	_efgtoa$732^0,c
  4256  00079E                     l3793:
  4257  00079E  C03E  F100         	movff	_efgtoa$732,_dbuf
  4258  0007A2                     
  4259                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  4260  0007A2  4A6C               	infsnz	efgtoa@n^0,f,c
  4261  0007A4  2A6D               	incf	(efgtoa@n+1)^0,f,c
  4262  0007A6                     
  4263                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  4264  0007A6  0659               	decf	efgtoa@w^0,f,c
  4265  0007A8  A0D8               	btfss	status,0,c
  4266  0007AA  065A               	decf	(efgtoa@w+1)^0,f,c
  4267  0007AC                     l3799:
  4268                           
  4269                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if ((0 ? 
      +                          isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4270  0007AC  C066  F001         	movff	efgtoa@g,___fpclassifyf@x
  4271  0007B0  C067  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4272  0007B4  C068  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4273  0007B8  C069  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4274  0007BC  EC4B  F01A         	call	___fpclassifyf	;wreg free
  4275  0007C0  0401               	decf	?___fpclassifyf^0,w,c
  4276  0007C2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4277  0007C4  A4D8               	btfss	status,2,c
  4278  0007C6  EFE7  F003         	goto	u4331
  4279  0007CA  EFE9  F003         	goto	u4330
  4280  0007CE                     u4331:
  4281  0007CE  EF3E  F004         	goto	l3817
  4282  0007D2                     u4330:
  4283  0007D2  0EBF               	movlw	191
  4284  0007D4  6E35               	movwf	??_efgtoa^0,c
  4285  0007D6  0EFF               	movlw	255
  4286  0007D8  6E36               	movwf	(??_efgtoa+1)^0,c
  4287  0007DA  5034               	movf	efgtoa@c^0,w,c
  4288  0007DC  6E37               	movwf	(??_efgtoa+2)^0,c
  4289  0007DE  6A38               	clrf	(??_efgtoa+3)^0,c
  4290  0007E0  5035               	movf	??_efgtoa^0,w,c
  4291  0007E2  2637               	addwf	(??_efgtoa+2)^0,f,c
  4292  0007E4  5036               	movf	(??_efgtoa+1)^0,w,c
  4293  0007E6  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4294  0007E8  5038               	movf	(??_efgtoa+3)^0,w,c
  4295  0007EA  E10A               	bnz	u4340
  4296  0007EC  0E1A               	movlw	26
  4297  0007EE  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4298  0007F0  A0D8               	btfss	status,0,c
  4299  0007F2  EFFD  F003         	goto	u4341
  4300  0007F6  EF00  F004         	goto	u4340
  4301  0007FA                     u4341:
  4302  0007FA  0E01               	movlw	1
  4303  0007FC  EF01  F004         	goto	u4350
  4304  000800                     u4340:
  4305  000800  0E00               	movlw	0
  4306  000802                     u4350:
  4307  000802  6E40               	movwf	_efgtoa$733^0,c
  4308  000804  6A41               	clrf	(_efgtoa$733+1)^0,c
  4309  000806  5040               	movf	_efgtoa$733^0,w,c
  4310  000808  1041               	iorwf	(_efgtoa$733+1)^0,w,c
  4311  00080A  B4D8               	btfsc	status,2,c
  4312  00080C  EF0A  F004         	goto	u4361
  4313  000810  EF0C  F004         	goto	u4360
  4314  000814                     u4361:
  4315  000814  EF1A  F004         	goto	l3809
  4316  000818                     u4360:
  4317  000818                     
  4318                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             strcp
      +                          y(&dbuf[n], "INF");
  4319  000818  0E00               	movlw	low _dbuf
  4320  00081A  246C               	addwf	efgtoa@n^0,w,c
  4321  00081C  6E01               	movwf	strcpy@dest^0,c
  4322  00081E  0E01               	movlw	high _dbuf
  4323  000820  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4324  000822  6E02               	movwf	(strcpy@dest+1)^0,c
  4325  000824  0EDC               	movlw	low STR_31
  4326  000826  6E03               	movwf	strcpy@src^0,c
  4327  000828  0E06               	movlw	high STR_31
  4328  00082A  6E04               	movwf	(strcpy@src+1)^0,c
  4329  00082C  EC96  F01E         	call	_strcpy	;wreg free
  4330                           
  4331                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } else {
  4332  000830  EF26  F004         	goto	l3811
  4333  000834                     l3809:
  4334                           
  4335                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             strcp
      +                          y(&dbuf[n], "inf");
  4336  000834  0E00               	movlw	low _dbuf
  4337  000836  246C               	addwf	efgtoa@n^0,w,c
  4338  000838  6E01               	movwf	strcpy@dest^0,c
  4339  00083A  0E01               	movlw	high _dbuf
  4340  00083C  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4341  00083E  6E02               	movwf	(strcpy@dest+1)^0,c
  4342  000840  0EE4               	movlw	low STR_32
  4343  000842  6E03               	movwf	strcpy@src^0,c
  4344  000844  0E06               	movlw	high STR_32
  4345  000846  6E04               	movwf	(strcpy@src+1)^0,c
  4346  000848  EC96  F01E         	call	_strcpy	;wreg free
  4347  00084C                     l3811:
  4348                           
  4349                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -= ((si
      +                          zeof("inf")/sizeof("inf"[0]))-1);
  4350  00084C  0EFD               	movlw	253
  4351  00084E  2659               	addwf	efgtoa@w^0,f,c
  4352  000850  0EFF               	movlw	255
  4353  000852  225A               	addwfc	(efgtoa@w+1)^0,f,c
  4354  000854                     l3813:
  4355                           
  4356                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         return pa
      +                          d(fp, &dbuf[0], w);
  4357  000854  C02E  F011         	movff	efgtoa@fp,pad@fp
  4358  000858  C02F  F012         	movff	efgtoa@fp+1,pad@fp+1
  4359  00085C  0E00               	movlw	low _dbuf
  4360  00085E  6E13               	movwf	pad@buf^0,c
  4361  000860  0E01               	movlw	high _dbuf
  4362  000862  6E14               	movwf	(pad@buf+1)^0,c
  4363  000864  C059  F015         	movff	efgtoa@w,pad@p
  4364  000868  C05A  F016         	movff	efgtoa@w+1,pad@p+1
  4365  00086C  EC9A  F01B         	call	_pad	;wreg free
  4366  000870  C011  F02E         	movff	?_pad,?_efgtoa
  4367  000874  C012  F02F         	movff	?_pad+1,?_efgtoa+1
  4368  000878  EF46  F009         	goto	l943
  4369  00087C                     l3817:
  4370                           
  4371                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if ((0 ? 
      +                          isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4372  00087C  C066  F001         	movff	efgtoa@g,___fpclassifyf@x
  4373  000880  C067  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4374  000884  C068  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4375  000888  C069  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4376  00088C  EC4B  F01A         	call	___fpclassifyf	;wreg free
  4377  000890  5001               	movf	?___fpclassifyf^0,w,c
  4378  000892  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4379  000894  A4D8               	btfss	status,2,c
  4380  000896  EF4F  F004         	goto	u4371
  4381  00089A  EF51  F004         	goto	u4370
  4382  00089E                     u4371:
  4383  00089E  EF90  F004         	goto	l3835
  4384  0008A2                     u4370:
  4385  0008A2  0EBF               	movlw	191
  4386  0008A4  6E35               	movwf	??_efgtoa^0,c
  4387  0008A6  0EFF               	movlw	255
  4388  0008A8  6E36               	movwf	(??_efgtoa+1)^0,c
  4389  0008AA  5034               	movf	efgtoa@c^0,w,c
  4390  0008AC  6E37               	movwf	(??_efgtoa+2)^0,c
  4391  0008AE  6A38               	clrf	(??_efgtoa+3)^0,c
  4392  0008B0  5035               	movf	??_efgtoa^0,w,c
  4393  0008B2  2637               	addwf	(??_efgtoa+2)^0,f,c
  4394  0008B4  5036               	movf	(??_efgtoa+1)^0,w,c
  4395  0008B6  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4396  0008B8  5038               	movf	(??_efgtoa+3)^0,w,c
  4397  0008BA  E10A               	bnz	u4380
  4398  0008BC  0E1A               	movlw	26
  4399  0008BE  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4400  0008C0  A0D8               	btfss	status,0,c
  4401  0008C2  EF65  F004         	goto	u4381
  4402  0008C6  EF68  F004         	goto	u4380
  4403  0008CA                     u4381:
  4404  0008CA  0E01               	movlw	1
  4405  0008CC  EF69  F004         	goto	u4390
  4406  0008D0                     u4380:
  4407  0008D0  0E00               	movlw	0
  4408  0008D2                     u4390:
  4409  0008D2  6E42               	movwf	_efgtoa$738^0,c
  4410  0008D4  6A43               	clrf	(_efgtoa$738+1)^0,c
  4411  0008D6  5042               	movf	_efgtoa$738^0,w,c
  4412  0008D8  1043               	iorwf	(_efgtoa$738+1)^0,w,c
  4413  0008DA  B4D8               	btfsc	status,2,c
  4414  0008DC  EF72  F004         	goto	u4401
  4415  0008E0  EF74  F004         	goto	u4400
  4416  0008E4                     u4401:
  4417  0008E4  EF82  F004         	goto	l3827
  4418  0008E8                     u4400:
  4419  0008E8                     
  4420                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             strcp
      +                          y(&dbuf[n], "NAN");
  4421  0008E8  0E00               	movlw	low _dbuf
  4422  0008EA  246C               	addwf	efgtoa@n^0,w,c
  4423  0008EC  6E01               	movwf	strcpy@dest^0,c
  4424  0008EE  0E01               	movlw	high _dbuf
  4425  0008F0  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4426  0008F2  6E02               	movwf	(strcpy@dest+1)^0,c
  4427  0008F4  0EE0               	movlw	low STR_35
  4428  0008F6  6E03               	movwf	strcpy@src^0,c
  4429  0008F8  0E06               	movlw	high STR_35
  4430  0008FA  6E04               	movwf	(strcpy@src+1)^0,c
  4431  0008FC  EC96  F01E         	call	_strcpy	;wreg free
  4432                           
  4433                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } else {
  4434  000900  EF26  F004         	goto	l3811
  4435  000904                     l3827:
  4436                           
  4437                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             strcp
      +                          y(&dbuf[n], "nan");
  4438  000904  0E00               	movlw	low _dbuf
  4439  000906  246C               	addwf	efgtoa@n^0,w,c
  4440  000908  6E01               	movwf	strcpy@dest^0,c
  4441  00090A  0E01               	movlw	high _dbuf
  4442  00090C  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4443  00090E  6E02               	movwf	(strcpy@dest+1)^0,c
  4444  000910  0EE8               	movlw	low STR_36
  4445  000912  6E03               	movwf	strcpy@src^0,c
  4446  000914  0E06               	movlw	high STR_36
  4447  000916  6E04               	movwf	(strcpy@src+1)^0,c
  4448  000918  EC96  F01E         	call	_strcpy	;wreg free
  4449  00091C  EF26  F004         	goto	l3811
  4450  000920                     l3835:
  4451                           
  4452                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  4453  000920  0E00               	movlw	0
  4454  000922  6E6E               	movwf	efgtoa@u^0,c
  4455  000924  0E00               	movlw	0
  4456  000926  6E6F               	movwf	(efgtoa@u+1)^0,c
  4457  000928  0E80               	movlw	128
  4458  00092A  6E70               	movwf	(efgtoa@u+2)^0,c
  4459  00092C  0E3F               	movlw	63
  4460  00092E  6E71               	movwf	(efgtoa@u+3)^0,c
  4461                           
  4462                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  4463  000930  0E00               	movlw	0
  4464  000932  6E6B               	movwf	(efgtoa@e+1)^0,c
  4465  000934  0E00               	movlw	0
  4466  000936  6E6A               	movwf	efgtoa@e^0,c
  4467  000938                     
  4468                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g == 0.
      +                          0)) {
  4469  000938  C066  F001         	movff	efgtoa@g,___fleq@ff1
  4470  00093C  C067  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  4471  000940  C068  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  4472  000944  C069  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  4473  000948  0E00               	movlw	0
  4474  00094A  6E05               	movwf	___fleq@ff2^0,c
  4475  00094C  0E00               	movlw	0
  4476  00094E  6E06               	movwf	(___fleq@ff2+1)^0,c
  4477  000950  0E00               	movlw	0
  4478  000952  6E07               	movwf	(___fleq@ff2+2)^0,c
  4479  000954  0E00               	movlw	0
  4480  000956  6E08               	movwf	(___fleq@ff2+3)^0,c
  4481  000958  EC13  F01D         	call	___fleq	;wreg free
  4482  00095C  B0D8               	btfsc	status,0,c
  4483  00095E  EFB3  F004         	goto	u4411
  4484  000962  EFB5  F004         	goto	u4410
  4485  000966                     u4411:
  4486  000966  EF36  F005         	goto	l3853
  4487  00096A                     u4410:
  4488  00096A  EFD3  F004         	goto	l3845
  4489  00096E                     l3841:
  4490                           
  4491                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             u = u
      +                          *10.0;
  4492  00096E  C06E  F001         	movff	efgtoa@u,___flmul@b
  4493  000972  C06F  F002         	movff	efgtoa@u+1,___flmul@b+1
  4494  000976  C070  F003         	movff	efgtoa@u+2,___flmul@b+2
  4495  00097A  C071  F004         	movff	efgtoa@u+3,___flmul@b+3
  4496  00097E  0E00               	movlw	0
  4497  000980  6E05               	movwf	___flmul@a^0,c
  4498  000982  0E00               	movlw	0
  4499  000984  6E06               	movwf	(___flmul@a+1)^0,c
  4500  000986  0E20               	movlw	32
  4501  000988  6E07               	movwf	(___flmul@a+2)^0,c
  4502  00098A  0E41               	movlw	65
  4503  00098C  6E08               	movwf	(___flmul@a+3)^0,c
  4504  00098E  ECDC  F00D         	call	___flmul	;wreg free
  4505  000992  C001  F06E         	movff	?___flmul,efgtoa@u
  4506  000996  C002  F06F         	movff	?___flmul+1,efgtoa@u+1
  4507  00099A  C003  F070         	movff	?___flmul+2,efgtoa@u+2
  4508  00099E  C004  F071         	movff	?___flmul+3,efgtoa@u+3
  4509  0009A2                     
  4510                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             ++e;
  4511  0009A2  4A6A               	infsnz	efgtoa@e^0,f,c
  4512  0009A4  2A6B               	incf	(efgtoa@e+1)^0,f,c
  4513  0009A6                     l3845:
  4514                           
  4515                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         while (!(
      +                          g < (u*10.0))) {
  4516  0009A6  C066  F01F         	movff	efgtoa@g,___flge@ff1
  4517  0009AA  C067  F020         	movff	efgtoa@g+1,___flge@ff1+1
  4518  0009AE  C068  F021         	movff	efgtoa@g+2,___flge@ff1+2
  4519  0009B2  C069  F022         	movff	efgtoa@g+3,___flge@ff1+3
  4520  0009B6  0E00               	movlw	0
  4521  0009B8  6E05               	movwf	___flmul@a^0,c
  4522  0009BA  0E00               	movlw	0
  4523  0009BC  6E06               	movwf	(___flmul@a+1)^0,c
  4524  0009BE  0E20               	movlw	32
  4525  0009C0  6E07               	movwf	(___flmul@a+2)^0,c
  4526  0009C2  0E41               	movlw	65
  4527  0009C4  6E08               	movwf	(___flmul@a+3)^0,c
  4528  0009C6  C06E  F001         	movff	efgtoa@u,___flmul@b
  4529  0009CA  C06F  F002         	movff	efgtoa@u+1,___flmul@b+1
  4530  0009CE  C070  F003         	movff	efgtoa@u+2,___flmul@b+2
  4531  0009D2  C071  F004         	movff	efgtoa@u+3,___flmul@b+3
  4532  0009D6  ECDC  F00D         	call	___flmul	;wreg free
  4533  0009DA  C001  F023         	movff	?___flmul,___flge@ff2
  4534  0009DE  C002  F024         	movff	?___flmul+1,___flge@ff2+1
  4535  0009E2  C003  F025         	movff	?___flmul+2,___flge@ff2+2
  4536  0009E6  C004  F026         	movff	?___flmul+3,___flge@ff2+3
  4537  0009EA  ECC9  F019         	call	___flge	;wreg free
  4538  0009EE  B0D8               	btfsc	status,0,c
  4539  0009F0  EFFC  F004         	goto	u4421
  4540  0009F4  EFFE  F004         	goto	u4420
  4541  0009F8                     u4421:
  4542  0009F8  EFB7  F004         	goto	l3841
  4543  0009FC                     u4420:
  4544  0009FC  EF1D  F005         	goto	l3851
  4545  000A00                     l3847:
  4546                           
  4547                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             u = u
      +                          /10.0;
  4548  000A00  C06E  F001         	movff	efgtoa@u,___fldiv@b
  4549  000A04  C06F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4550  000A08  C070  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4551  000A0C  C071  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4552  000A10  0E00               	movlw	0
  4553  000A12  6E05               	movwf	___fldiv@a^0,c
  4554  000A14  0E00               	movlw	0
  4555  000A16  6E06               	movwf	(___fldiv@a+1)^0,c
  4556  000A18  0E20               	movlw	32
  4557  000A1A  6E07               	movwf	(___fldiv@a+2)^0,c
  4558  000A1C  0E41               	movlw	65
  4559  000A1E  6E08               	movwf	(___fldiv@a+3)^0,c
  4560  000A20  ECEA  F011         	call	___fldiv	;wreg free
  4561  000A24  C001  F06E         	movff	?___fldiv,efgtoa@u
  4562  000A28  C002  F06F         	movff	?___fldiv+1,efgtoa@u+1
  4563  000A2C  C003  F070         	movff	?___fldiv+2,efgtoa@u+2
  4564  000A30  C004  F071         	movff	?___fldiv+3,efgtoa@u+3
  4565  000A34                     
  4566                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             --e;
  4567  000A34  066A               	decf	efgtoa@e^0,f,c
  4568  000A36  A0D8               	btfss	status,0,c
  4569  000A38  066B               	decf	(efgtoa@e+1)^0,f,c
  4570  000A3A                     l3851:
  4571                           
  4572                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         while (g 
      +                          < u) {
  4573  000A3A  C066  F01F         	movff	efgtoa@g,___flge@ff1
  4574  000A3E  C067  F020         	movff	efgtoa@g+1,___flge@ff1+1
  4575  000A42  C068  F021         	movff	efgtoa@g+2,___flge@ff1+2
  4576  000A46  C069  F022         	movff	efgtoa@g+3,___flge@ff1+3
  4577  000A4A  C06E  F023         	movff	efgtoa@u,___flge@ff2
  4578  000A4E  C06F  F024         	movff	efgtoa@u+1,___flge@ff2+1
  4579  000A52  C070  F025         	movff	efgtoa@u+2,___flge@ff2+2
  4580  000A56  C071  F026         	movff	efgtoa@u+3,___flge@ff2+3
  4581  000A5A  ECC9  F019         	call	___flge	;wreg free
  4582  000A5E  A0D8               	btfss	status,0,c
  4583  000A60  EF34  F005         	goto	u4431
  4584  000A64  EF36  F005         	goto	u4430
  4585  000A68                     u4431:
  4586  000A68  EF00  F005         	goto	l3847
  4587  000A6C                     u4430:
  4588  000A6C                     l3853:
  4589                           
  4590                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = tolowe
      +                          r((int)c);
  4591  000A6C  C034  F007         	movff	efgtoa@c,tolower@c
  4592  000A70  6A08               	clrf	(tolower@c+1)^0,c
  4593  000A72  EC38  F01E         	call	_tolower	;wreg free
  4594  000A76  5007               	movf	?_tolower^0,w,c
  4595  000A78  6E5B               	movwf	efgtoa@mode^0,c
  4596  000A7A                     
  4597                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = mode;
  4598  000A7A  C05B  F058         	movff	efgtoa@mode,efgtoa@nmode
  4599  000A7E                     
  4600                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode == '
      +                          g') {
  4601  000A7E  0E67               	movlw	103
  4602  000A80  185B               	xorwf	efgtoa@mode^0,w,c
  4603  000A82  A4D8               	btfss	status,2,c
  4604  000A84  EF46  F005         	goto	u4441
  4605  000A88  EF48  F005         	goto	u4440
  4606  000A8C                     u4441:
  4607  000A8C  EF6F  F005         	goto	l3867
  4608  000A90                     u4440:
  4609  000A90                     
  4610                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec == 0) 
      +                          {
  4611  000A90  0100               	movlb	0	; () banked
  4612  000A92  51E1               	movf	_prec& (0+255),w,b
  4613  000A94  11E2               	iorwf	(_prec+1)& (0+255),w,b
  4614  000A96  A4D8               	btfss	status,2,c
  4615  000A98  EF50  F005         	goto	u4451
  4616  000A9C  EF52  F005         	goto	u4450
  4617  000AA0                     u4451:
  4618  000AA0  EF56  F005         	goto	l3863
  4619  000AA4                     u4450:
  4620  000AA4                     
  4621                           ; BSR set to: 0
  4622                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  4623  000AA4  0E00               	movlw	0
  4624  000AA6  6FE2               	movwf	(_prec+1)& (0+255),b
  4625  000AA8  0E01               	movlw	1
  4626  000AAA  6FE1               	movwf	_prec& (0+255),b
  4627  000AAC                     l3863:
  4628                           
  4629                           ; BSR set to: 0
  4630                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = (0 < 
      +                          prec) ? prec : 6;
  4631  000AAC  BFE2               	btfsc	(_prec+1)& (0+255),7,b
  4632  000AAE  EF63  F005         	goto	u4460
  4633  000AB2  51E2               	movf	(_prec+1)& (0+255),w,b
  4634  000AB4  E106               	bnz	u4461
  4635  000AB6  05E1               	decf	_prec& (0+255),w,b
  4636  000AB8  B0D8               	btfsc	status,0,c
  4637  000ABA  EF61  F005         	goto	u4461
  4638  000ABE  EF63  F005         	goto	u4460
  4639  000AC2                     u4461:
  4640  000AC2  EF69  F005         	goto	l961
  4641  000AC6                     u4460:
  4642  000AC6                     l3865:
  4643                           
  4644                           ; BSR set to: 0
  4645  000AC6  0E00               	movlw	0
  4646  000AC8  6E57               	movwf	(efgtoa@p+1)^0,c
  4647  000ACA  0E06               	movlw	6
  4648  000ACC  6E56               	movwf	efgtoa@p^0,c
  4649  000ACE  EF79  F005         	goto	l3873
  4650  000AD2                     l961:
  4651                           
  4652                           ; BSR set to: 0
  4653  000AD2  C0E1  F056         	movff	_prec,efgtoa@p
  4654  000AD6  C0E2  F057         	movff	_prec+1,efgtoa@p+1
  4655  000ADA  EF79  F005         	goto	l3873
  4656  000ADE                     l3867:
  4657                           
  4658                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = (prec
      +                           < 0) ? 6 : prec;
  4659  000ADE  0100               	movlb	0	; () banked
  4660  000AE0  BFE2               	btfsc	(_prec+1)& (0+255),7,b
  4661  000AE2  EF75  F005         	goto	u4471
  4662  000AE6  EF77  F005         	goto	u4470
  4663  000AEA                     u4471:
  4664  000AEA  EF63  F005         	goto	l3865
  4665  000AEE                     u4470:
  4666  000AEE  EF69  F005         	goto	l961
  4667  000AF2                     l3873:
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode == '
      +                          g') {
  4671  000AF2  0E67               	movlw	103
  4672  000AF4  185B               	xorwf	efgtoa@mode^0,w,c
  4673  000AF6  A4D8               	btfss	status,2,c
  4674  000AF8  EF80  F005         	goto	u4481
  4675  000AFC  EF82  F005         	goto	u4480
  4676  000B00                     u4481:
  4677  000B00  EFB1  F005         	goto	l3883
  4678  000B04                     u4480:
  4679  000B04                     
  4680                           ; BSR set to: 0
  4681                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (!(e <
      +                           -4) && !((p - 1) < e)) {
  4682  000B04  AE6B               	btfss	(efgtoa@e+1)^0,7,c
  4683  000B06  EF90  F005         	goto	u4490
  4684  000B0A  0EFC               	movlw	252
  4685  000B0C  5C6A               	subwf	efgtoa@e^0,w,c
  4686  000B0E  0EFF               	movlw	255
  4687  000B10  586B               	subwfb	(efgtoa@e+1)^0,w,c
  4688  000B12  A0D8               	btfss	status,0,c
  4689  000B14  EF8E  F005         	goto	u4491
  4690  000B18  EF90  F005         	goto	u4490
  4691  000B1C                     u4491:
  4692  000B1C  EFAF  F005         	goto	l3881
  4693  000B20                     u4490:
  4694  000B20                     
  4695                           ; BSR set to: 0
  4696  000B20  0EFF               	movlw	255
  4697  000B22  6E35               	movwf	??_efgtoa^0,c
  4698  000B24  0EFF               	movlw	255
  4699  000B26  6E36               	movwf	(??_efgtoa+1)^0,c
  4700  000B28  C056  F037         	movff	efgtoa@p,??_efgtoa+2
  4701  000B2C  C057  F038         	movff	efgtoa@p+1,??_efgtoa+3
  4702  000B30  5035               	movf	??_efgtoa^0,w,c
  4703  000B32  2637               	addwf	(??_efgtoa+2)^0,f,c
  4704  000B34  5036               	movf	(??_efgtoa+1)^0,w,c
  4705  000B36  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4706  000B38  506A               	movf	efgtoa@e^0,w,c
  4707  000B3A  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4708  000B3C  5038               	movf	(??_efgtoa+3)^0,w,c
  4709  000B3E  0A80               	xorlw	128
  4710  000B40  6E39               	movwf	(??_efgtoa+4)^0,c
  4711  000B42  506B               	movf	(efgtoa@e+1)^0,w,c
  4712  000B44  0A80               	xorlw	128
  4713  000B46  5839               	subwfb	(??_efgtoa+4)^0,w,c
  4714  000B48  A0D8               	btfss	status,0,c
  4715  000B4A  EFA9  F005         	goto	u4501
  4716  000B4E  EFAB  F005         	goto	u4500
  4717  000B52                     u4501:
  4718  000B52  EFAF  F005         	goto	l3881
  4719  000B56                     u4500:
  4720  000B56                     
  4721                           ; BSR set to: 0
  4722                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             nmode
      +                           = 'f';
  4723  000B56  0E66               	movlw	102
  4724  000B58  6E58               	movwf	efgtoa@nmode^0,c
  4725                           
  4726                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } else {
  4727  000B5A  EFB1  F005         	goto	l3883
  4728  000B5E                     l3881:
  4729                           
  4730                           ; BSR set to: 0
  4731                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             nmode
      +                           = 'e';
  4732  000B5E  0E65               	movlw	101
  4733  000B60  6E58               	movwf	efgtoa@nmode^0,c
  4734  000B62                     l3883:
  4735                           
  4736                           ; BSR set to: 0
  4737                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  4738  000B62  C056  F04E         	movff	efgtoa@p,efgtoa@m
  4739  000B66  C057  F04F         	movff	efgtoa@p+1,efgtoa@m+1
  4740  000B6A                     
  4741                           ; BSR set to: 0
  4742                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mode ==
      +                           'g') || ((nmode == 'f') && (e < 0))) {
  4743  000B6A  0E67               	movlw	103
  4744  000B6C  185B               	xorwf	efgtoa@mode^0,w,c
  4745  000B6E  A4D8               	btfss	status,2,c
  4746  000B70  EFBC  F005         	goto	u4511
  4747  000B74  EFBE  F005         	goto	u4510
  4748  000B78                     u4511:
  4749  000B78  EFCE  F005         	goto	l3891
  4750  000B7C                     u4510:
  4751  000B7C                     
  4752                           ; BSR set to: 0
  4753  000B7C  0E66               	movlw	102
  4754  000B7E  1858               	xorwf	efgtoa@nmode^0,w,c
  4755  000B80  A4D8               	btfss	status,2,c
  4756  000B82  EFC5  F005         	goto	u4521
  4757  000B86  EFC7  F005         	goto	u4520
  4758  000B8A                     u4521:
  4759  000B8A  EFD0  F005         	goto	l3893
  4760  000B8E                     u4520:
  4761  000B8E                     
  4762                           ; BSR set to: 0
  4763  000B8E  BE6B               	btfsc	(efgtoa@e+1)^0,7,c
  4764  000B90  EFCE  F005         	goto	u4530
  4765  000B94  EFCC  F005         	goto	u4531
  4766  000B98                     u4531:
  4767  000B98  EFD0  F005         	goto	l3893
  4768  000B9C                     u4530:
  4769  000B9C                     l3891:
  4770                           
  4771                           ; BSR set to: 0
  4772                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  4773  000B9C  4A4E               	infsnz	efgtoa@m^0,f,c
  4774  000B9E  2A4F               	incf	(efgtoa@m+1)^0,f,c
  4775  000BA0                     l3893:
  4776                           
  4777                           ; BSR set to: 0
  4778                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmode == 
      +                          'f') {
  4779  000BA0  0E66               	movlw	102
  4780  000BA2  1858               	xorwf	efgtoa@nmode^0,w,c
  4781  000BA4  A4D8               	btfss	status,2,c
  4782  000BA6  EFD7  F005         	goto	u4541
  4783  000BAA  EFD9  F005         	goto	u4540
  4784  000BAE                     u4541:
  4785  000BAE  EFF9  F005         	goto	l3903
  4786  000BB2                     u4540:
  4787  000BB2                     
  4788                           ; BSR set to: 0
  4789                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (e < 0
      +                          ) {
  4790  000BB2  BE6B               	btfsc	(efgtoa@e+1)^0,7,c
  4791  000BB4  EFE0  F005         	goto	u4550
  4792  000BB8  EFDE  F005         	goto	u4551
  4793  000BBC                     u4551:
  4794  000BBC  EFEC  F005         	goto	l3899
  4795  000BC0                     u4550:
  4796  000BC0                     
  4797                           ; BSR set to: 0
  4798                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             u = 1
      +                          .0;
  4799  000BC0  0E00               	movlw	0
  4800  000BC2  6E6E               	movwf	efgtoa@u^0,c
  4801  000BC4  0E00               	movlw	0
  4802  000BC6  6E6F               	movwf	(efgtoa@u+1)^0,c
  4803  000BC8  0E80               	movlw	128
  4804  000BCA  6E70               	movwf	(efgtoa@u+2)^0,c
  4805  000BCC  0E3F               	movlw	63
  4806  000BCE  6E71               	movwf	(efgtoa@u+3)^0,c
  4807                           
  4808                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             e = 0
      +                          ;
  4809  000BD0  0E00               	movlw	0
  4810  000BD2  6E6B               	movwf	(efgtoa@e+1)^0,c
  4811  000BD4  0E00               	movlw	0
  4812  000BD6  6E6A               	movwf	efgtoa@e^0,c
  4813  000BD8                     l3899:
  4814                           
  4815                           ; BSR set to: 0
  4816                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (!(mod
      +                          e == 'g')) {
  4817  000BD8  0E67               	movlw	103
  4818  000BDA  185B               	xorwf	efgtoa@mode^0,w,c
  4819  000BDC  B4D8               	btfsc	status,2,c
  4820  000BDE  EFF3  F005         	goto	u4561
  4821  000BE2  EFF5  F005         	goto	u4560
  4822  000BE6                     u4561:
  4823  000BE6  EFF9  F005         	goto	l3903
  4824  000BEA                     u4560:
  4825  000BEA                     
  4826                           ; BSR set to: 0
  4827                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             m += 
      +                          e;
  4828  000BEA  506A               	movf	efgtoa@e^0,w,c
  4829  000BEC  264E               	addwf	efgtoa@m^0,f,c
  4830  000BEE  506B               	movf	(efgtoa@e+1)^0,w,c
  4831  000BF0  224F               	addwfc	(efgtoa@m+1)^0,f,c
  4832  000BF2                     l3903:
  4833                           
  4834                           ; BSR set to: 0
  4835                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  4836  000BF2  0E00               	movlw	0
  4837  000BF4  6E65               	movwf	(efgtoa@i+1)^0,c
  4838  000BF6  0E00               	movlw	0
  4839  000BF8  6E64               	movwf	efgtoa@i^0,c
  4840  000BFA                     
  4841                           ; BSR set to: 0
  4842                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  4843  000BFA  C066  F05C         	movff	efgtoa@g,efgtoa@h
  4844  000BFE  C067  F05D         	movff	efgtoa@g+1,efgtoa@h+1
  4845  000C02  C068  F05E         	movff	efgtoa@g+2,efgtoa@h+2
  4846  000C06  C069  F05F         	movff	efgtoa@g+3,efgtoa@h+3
  4847  000C0A                     
  4848                           ; BSR set to: 0
  4849                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  4850  000C0A  C06E  F03A         	movff	efgtoa@u,efgtoa@ou
  4851  000C0E  C06F  F03B         	movff	efgtoa@u+1,efgtoa@ou+1
  4852  000C12  C070  F03C         	movff	efgtoa@u+2,efgtoa@ou+2
  4853  000C16  C071  F03D         	movff	efgtoa@u+3,efgtoa@ou+3
  4854                           
  4855                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i < m)
      +                           {
  4856  000C1A  EF89  F006         	goto	l3917
  4857  000C1E                     l3909:
  4858                           
  4859                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = floor
      +                          f(h/u);
  4860  000C1E  C05C  F001         	movff	efgtoa@h,___fldiv@b
  4861  000C22  C05D  F002         	movff	efgtoa@h+1,___fldiv@b+1
  4862  000C26  C05E  F003         	movff	efgtoa@h+2,___fldiv@b+2
  4863  000C2A  C05F  F004         	movff	efgtoa@h+3,___fldiv@b+3
  4864  000C2E  C06E  F005         	movff	efgtoa@u,___fldiv@a
  4865  000C32  C06F  F006         	movff	efgtoa@u+1,___fldiv@a+1
  4866  000C36  C070  F007         	movff	efgtoa@u+2,___fldiv@a+2
  4867  000C3A  C071  F008         	movff	efgtoa@u+3,___fldiv@a+3
  4868  000C3E  ECEA  F011         	call	___fldiv	;wreg free
  4869  000C42  C001  F01A         	movff	?___fldiv,floorf@x
  4870  000C46  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  4871  000C4A  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  4872  000C4E  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  4873  000C52  ECDB  F014         	call	_floorf	;wreg free
  4874  000C56  C01A  F060         	movff	?_floorf,efgtoa@l
  4875  000C5A  C01B  F061         	movff	?_floorf+1,efgtoa@l+1
  4876  000C5E  C01C  F062         	movff	?_floorf+2,efgtoa@l+2
  4877  000C62  C01D  F063         	movff	?_floorf+3,efgtoa@l+3
  4878                           
  4879                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = (int)
      +                          l;
  4880  000C66  C060  F01A         	movff	efgtoa@l,___fltol@f1
  4881  000C6A  C061  F01B         	movff	efgtoa@l+1,___fltol@f1+1
  4882  000C6E  C062  F01C         	movff	efgtoa@l+2,___fltol@f1+2
  4883  000C72  C063  F01D         	movff	efgtoa@l+3,___fltol@f1+3
  4884  000C76  EC46  F019         	call	___fltol	;wreg free
  4885  000C7A  C01A  F052         	movff	?___fltol,efgtoa@d
  4886  000C7E  C01B  F053         	movff	?___fltol+1,efgtoa@d+1
  4887  000C82                     
  4888                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -= l*u;
  4889  000C82  C05C  F01F         	movff	efgtoa@h,___flsub@b
  4890  000C86  C05D  F020         	movff	efgtoa@h+1,___flsub@b+1
  4891  000C8A  C05E  F021         	movff	efgtoa@h+2,___flsub@b+2
  4892  000C8E  C05F  F022         	movff	efgtoa@h+3,___flsub@b+3
  4893  000C92  C06E  F005         	movff	efgtoa@u,___flmul@a
  4894  000C96  C06F  F006         	movff	efgtoa@u+1,___flmul@a+1
  4895  000C9A  C070  F007         	movff	efgtoa@u+2,___flmul@a+2
  4896  000C9E  C071  F008         	movff	efgtoa@u+3,___flmul@a+3
  4897  000CA2  C060  F001         	movff	efgtoa@l,___flmul@b
  4898  000CA6  C061  F002         	movff	efgtoa@l+1,___flmul@b+1
  4899  000CAA  C062  F003         	movff	efgtoa@l+2,___flmul@b+2
  4900  000CAE  C063  F004         	movff	efgtoa@l+3,___flmul@b+3
  4901  000CB2  ECDC  F00D         	call	___flmul	;wreg free
  4902  000CB6  C001  F023         	movff	?___flmul,___flsub@a
  4903  000CBA  C002  F024         	movff	?___flmul+1,___flsub@a+1
  4904  000CBE  C003  F025         	movff	?___flmul+2,___flsub@a+2
  4905  000CC2  C004  F026         	movff	?___flmul+3,___flsub@a+3
  4906  000CC6  EC16  F01F         	call	___flsub	;wreg free
  4907  000CCA  C01F  F05C         	movff	?___flsub,efgtoa@h
  4908  000CCE  C020  F05D         	movff	?___flsub+1,efgtoa@h+1
  4909  000CD2  C021  F05E         	movff	?___flsub+2,efgtoa@h+2
  4910  000CD6  C022  F05F         	movff	?___flsub+3,efgtoa@h+3
  4911  000CDA                     
  4912                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = u/10.
      +                          0;
  4913  000CDA  C06E  F001         	movff	efgtoa@u,___fldiv@b
  4914  000CDE  C06F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4915  000CE2  C070  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4916  000CE6  C071  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4917  000CEA  0E00               	movlw	0
  4918  000CEC  6E05               	movwf	___fldiv@a^0,c
  4919  000CEE  0E00               	movlw	0
  4920  000CF0  6E06               	movwf	(___fldiv@a+1)^0,c
  4921  000CF2  0E20               	movlw	32
  4922  000CF4  6E07               	movwf	(___fldiv@a+2)^0,c
  4923  000CF6  0E41               	movlw	65
  4924  000CF8  6E08               	movwf	(___fldiv@a+3)^0,c
  4925  000CFA  ECEA  F011         	call	___fldiv	;wreg free
  4926  000CFE  C001  F06E         	movff	?___fldiv,efgtoa@u
  4927  000D02  C002  F06F         	movff	?___fldiv+1,efgtoa@u+1
  4928  000D06  C003  F070         	movff	?___fldiv+2,efgtoa@u+2
  4929  000D0A  C004  F071         	movff	?___fldiv+3,efgtoa@u+3
  4930  000D0E                     
  4931                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  4932  000D0E  4A64               	infsnz	efgtoa@i^0,f,c
  4933  000D10  2A65               	incf	(efgtoa@i+1)^0,f,c
  4934  000D12                     l3917:
  4935                           
  4936                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i < m)
      +                           {
  4937  000D12  504E               	movf	efgtoa@m^0,w,c
  4938  000D14  5C64               	subwf	efgtoa@i^0,w,c
  4939  000D16  5065               	movf	(efgtoa@i+1)^0,w,c
  4940  000D18  0A80               	xorlw	128
  4941  000D1A  6E35               	movwf	??_efgtoa^0,c
  4942  000D1C  504F               	movf	(efgtoa@m+1)^0,w,c
  4943  000D1E  0A80               	xorlw	128
  4944  000D20  5835               	subwfb	??_efgtoa^0,w,c
  4945  000D22  A0D8               	btfss	status,0,c
  4946  000D24  EF96  F006         	goto	u4571
  4947  000D28  EF98  F006         	goto	u4570
  4948  000D2C                     u4571:
  4949  000D2C  EF0F  F006         	goto	l3909
  4950  000D30                     u4570:
  4951  000D30                     
  4952                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.0;
  4953  000D30  C06E  F001         	movff	efgtoa@u,___flmul@b
  4954  000D34  C06F  F002         	movff	efgtoa@u+1,___flmul@b+1
  4955  000D38  C070  F003         	movff	efgtoa@u+2,___flmul@b+2
  4956  000D3C  C071  F004         	movff	efgtoa@u+3,___flmul@b+3
  4957  000D40  0E00               	movlw	0
  4958  000D42  6E05               	movwf	___flmul@a^0,c
  4959  000D44  0E00               	movlw	0
  4960  000D46  6E06               	movwf	(___flmul@a+1)^0,c
  4961  000D48  0EA0               	movlw	160
  4962  000D4A  6E07               	movwf	(___flmul@a+2)^0,c
  4963  000D4C  0E40               	movlw	64
  4964  000D4E  6E08               	movwf	(___flmul@a+3)^0,c
  4965  000D50  ECDC  F00D         	call	___flmul	;wreg free
  4966  000D54  C001  F060         	movff	?___flmul,efgtoa@l
  4967  000D58  C002  F061         	movff	?___flmul+1,efgtoa@l+1
  4968  000D5C  C003  F062         	movff	?___flmul+2,efgtoa@l+2
  4969  000D60  C004  F063         	movff	?___flmul+3,efgtoa@l+3
  4970  000D64                     
  4971                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < l) {
  4972  000D64  C05C  F01F         	movff	efgtoa@h,___flge@ff1
  4973  000D68  C05D  F020         	movff	efgtoa@h+1,___flge@ff1+1
  4974  000D6C  C05E  F021         	movff	efgtoa@h+2,___flge@ff1+2
  4975  000D70  C05F  F022         	movff	efgtoa@h+3,___flge@ff1+3
  4976  000D74  C060  F023         	movff	efgtoa@l,___flge@ff2
  4977  000D78  C061  F024         	movff	efgtoa@l+1,___flge@ff2+1
  4978  000D7C  C062  F025         	movff	efgtoa@l+2,___flge@ff2+2
  4979  000D80  C063  F026         	movff	efgtoa@l+3,___flge@ff2+3
  4980  000D84  ECC9  F019         	call	___flge	;wreg free
  4981  000D88  B0D8               	btfsc	status,0,c
  4982  000D8A  EFC9  F006         	goto	u4581
  4983  000D8E  EFCB  F006         	goto	u4580
  4984  000D92                     u4581:
  4985  000D92  EFD5  F006         	goto	l3925
  4986  000D96                     u4580:
  4987  000D96                     
  4988                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 0.0;
  4989  000D96  0E00               	movlw	0
  4990  000D98  6E60               	movwf	efgtoa@l^0,c
  4991  000D9A  0E00               	movlw	0
  4992  000D9C  6E61               	movwf	(efgtoa@l+1)^0,c
  4993  000D9E  0E00               	movlw	0
  4994  000DA0  6E62               	movwf	(efgtoa@l+2)^0,c
  4995  000DA2  0E00               	movlw	0
  4996  000DA4  6E63               	movwf	(efgtoa@l+3)^0,c
  4997                           
  4998                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  4999  000DA6  EFFD  F006         	goto	l3931
  5000  000DAA                     l3925:
  5001                           
  5002                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if ((h ==
      +                           l) && !(d % 2)) {
  5003  000DAA  C05C  F001         	movff	efgtoa@h,___fleq@ff1
  5004  000DAE  C05D  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  5005  000DB2  C05E  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  5006  000DB6  C05F  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  5007  000DBA  C060  F005         	movff	efgtoa@l,___fleq@ff2
  5008  000DBE  C061  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  5009  000DC2  C062  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  5010  000DC6  C063  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  5011  000DCA  EC13  F01D         	call	___fleq	;wreg free
  5012  000DCE  A0D8               	btfss	status,0,c
  5013  000DD0  EFEC  F006         	goto	u4591
  5014  000DD4  EFEE  F006         	goto	u4590
  5015  000DD8                     u4591:
  5016  000DD8  EFFD  F006         	goto	l3931
  5017  000DDC                     u4590:
  5018  000DDC  B052               	btfsc	efgtoa@d^0,0,c
  5019  000DDE  EFF3  F006         	goto	u4601
  5020  000DE2  EFF5  F006         	goto	u4600
  5021  000DE6                     u4601:
  5022  000DE6  EFFD  F006         	goto	l3931
  5023  000DEA                     u4600:
  5024  000DEA                     
  5025                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             l = 0
      +                          .0;
  5026  000DEA  0E00               	movlw	0
  5027  000DEC  6E60               	movwf	efgtoa@l^0,c
  5028  000DEE  0E00               	movlw	0
  5029  000DF0  6E61               	movwf	(efgtoa@l+1)^0,c
  5030  000DF2  0E00               	movlw	0
  5031  000DF4  6E62               	movwf	(efgtoa@l+2)^0,c
  5032  000DF6  0E00               	movlw	0
  5033  000DF8  6E63               	movwf	(efgtoa@l+3)^0,c
  5034  000DFA                     l3931:
  5035                           
  5036                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + l;
  5037  000DFA  C066  F00F         	movff	efgtoa@g,___fladd@b
  5038  000DFE  C067  F010         	movff	efgtoa@g+1,___fladd@b+1
  5039  000E02  C068  F011         	movff	efgtoa@g+2,___fladd@b+2
  5040  000E06  C069  F012         	movff	efgtoa@g+3,___fladd@b+3
  5041  000E0A  C060  F013         	movff	efgtoa@l,___fladd@a
  5042  000E0E  C061  F014         	movff	efgtoa@l+1,___fladd@a+1
  5043  000E12  C062  F015         	movff	efgtoa@l+2,___fladd@a+2
  5044  000E16  C063  F016         	movff	efgtoa@l+3,___fladd@a+3
  5045  000E1A  EC47  F009         	call	___fladd	;wreg free
  5046  000E1E  C00F  F05C         	movff	?___fladd,efgtoa@h
  5047  000E22  C010  F05D         	movff	?___fladd+1,efgtoa@h+1
  5048  000E26  C011  F05E         	movff	?___fladd+2,efgtoa@h+2
  5049  000E2A  C012  F05F         	movff	?___fladd+3,efgtoa@h+3
  5050  000E2E                     
  5051                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  5052  000E2E  C03A  F06E         	movff	efgtoa@ou,efgtoa@u
  5053  000E32  C03B  F06F         	movff	efgtoa@ou+1,efgtoa@u+1
  5054  000E36  C03C  F070         	movff	efgtoa@ou+2,efgtoa@u+2
  5055  000E3A  C03D  F071         	movff	efgtoa@ou+3,efgtoa@u+3
  5056  000E3E                     
  5057                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nmode =
      +                          = 'e') ? 0 : e;
  5058  000E3E  0E65               	movlw	101
  5059  000E40  1858               	xorwf	efgtoa@nmode^0,w,c
  5060  000E42  B4D8               	btfsc	status,2,c
  5061  000E44  EF26  F007         	goto	u4611
  5062  000E48  EF28  F007         	goto	u4610
  5063  000E4C                     u4611:
  5064  000E4C  EF2E  F007         	goto	l3939
  5065  000E50                     u4610:
  5066  000E50  C06A  F050         	movff	efgtoa@e,efgtoa@ne
  5067  000E54  C06B  F051         	movff	efgtoa@e+1,efgtoa@ne+1
  5068  000E58  EF32  F007         	goto	l987
  5069  000E5C                     l3939:
  5070  000E5C  0E00               	movlw	0
  5071  000E5E  6E51               	movwf	(efgtoa@ne+1)^0,c
  5072  000E60  0E00               	movlw	0
  5073  000E62  6E50               	movwf	efgtoa@ne^0,c
  5074  000E64                     l987:
  5075                           
  5076                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  5077  000E64  0E00               	movlw	0
  5078  000E66  6E4D               	movwf	(efgtoa@pp+1)^0,c
  5079  000E68  0E00               	movlw	0
  5080  000E6A  6E4C               	movwf	efgtoa@pp^0,c
  5081                           
  5082                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  5083  000E6C  0E00               	movlw	0
  5084  000E6E  6E4B               	movwf	(efgtoa@t+1)^0,c
  5085  000E70  0E00               	movlw	0
  5086  000E72  6E4A               	movwf	efgtoa@t^0,c
  5087                           
  5088                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  5089  000E74  0E00               	movlw	0
  5090  000E76  6E65               	movwf	(efgtoa@i+1)^0,c
  5091  000E78  0E00               	movlw	0
  5092  000E7A  6E64               	movwf	efgtoa@i^0,c
  5093                           
  5094                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((i < m
      +                          ) && (n < (80 - 5))) {
  5095  000E7C  EF2C  F008         	goto	l3989
  5096  000E80                     l3941:
  5097                           
  5098                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = floor
      +                          f(h/u);
  5099  000E80  C05C  F001         	movff	efgtoa@h,___fldiv@b
  5100  000E84  C05D  F002         	movff	efgtoa@h+1,___fldiv@b+1
  5101  000E88  C05E  F003         	movff	efgtoa@h+2,___fldiv@b+2
  5102  000E8C  C05F  F004         	movff	efgtoa@h+3,___fldiv@b+3
  5103  000E90  C06E  F005         	movff	efgtoa@u,___fldiv@a
  5104  000E94  C06F  F006         	movff	efgtoa@u+1,___fldiv@a+1
  5105  000E98  C070  F007         	movff	efgtoa@u+2,___fldiv@a+2
  5106  000E9C  C071  F008         	movff	efgtoa@u+3,___fldiv@a+3
  5107  000EA0  ECEA  F011         	call	___fldiv	;wreg free
  5108  000EA4  C001  F01A         	movff	?___fldiv,floorf@x
  5109  000EA8  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  5110  000EAC  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  5111  000EB0  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  5112  000EB4  ECDB  F014         	call	_floorf	;wreg free
  5113  000EB8  C01A  F060         	movff	?_floorf,efgtoa@l
  5114  000EBC  C01B  F061         	movff	?_floorf+1,efgtoa@l+1
  5115  000EC0  C01C  F062         	movff	?_floorf+2,efgtoa@l+2
  5116  000EC4  C01D  F063         	movff	?_floorf+3,efgtoa@l+3
  5117                           
  5118                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = (int)
      +                          l;
  5119  000EC8  C060  F01A         	movff	efgtoa@l,___fltol@f1
  5120  000ECC  C061  F01B         	movff	efgtoa@l+1,___fltol@f1+1
  5121  000ED0  C062  F01C         	movff	efgtoa@l+2,___fltol@f1+2
  5122  000ED4  C063  F01D         	movff	efgtoa@l+3,___fltol@f1+3
  5123  000ED8  EC46  F019         	call	___fltol	;wreg free
  5124  000EDC  C01A  F052         	movff	?___fltol,efgtoa@d
  5125  000EE0  C01B  F053         	movff	?___fltol+1,efgtoa@d+1
  5126  000EE4                     
  5127                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (!(fla
      +                          gs & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5128  000EE4  0100               	movlb	0	; () banked
  5129  000EE6  B9E3               	btfsc	_flags& (0+255),4,b
  5130  000EE8  EF78  F007         	goto	u4621
  5131  000EEC  EF7A  F007         	goto	u4620
  5132  000EF0                     u4621:
  5133  000EF0  EF97  F007         	goto	l3953
  5134  000EF4                     u4620:
  5135  000EF4                     
  5136                           ; BSR set to: 0
  5137  000EF4  5052               	movf	efgtoa@d^0,w,c
  5138  000EF6  1053               	iorwf	(efgtoa@d+1)^0,w,c
  5139  000EF8  A4D8               	btfss	status,2,c
  5140  000EFA  EF81  F007         	goto	u4631
  5141  000EFE  EF83  F007         	goto	u4630
  5142  000F02                     u4631:
  5143  000F02  EF97  F007         	goto	l3953
  5144  000F06                     u4630:
  5145  000F06                     
  5146                           ; BSR set to: 0
  5147  000F06  0E67               	movlw	103
  5148  000F08  185B               	xorwf	efgtoa@mode^0,w,c
  5149  000F0A  A4D8               	btfss	status,2,c
  5150  000F0C  EF8A  F007         	goto	u4641
  5151  000F10  EF8C  F007         	goto	u4640
  5152  000F14                     u4641:
  5153  000F14  EF97  F007         	goto	l3953
  5154  000F18                     u4640:
  5155  000F18                     
  5156                           ; BSR set to: 0
  5157  000F18  BE51               	btfsc	(efgtoa@ne+1)^0,7,c
  5158  000F1A  EF93  F007         	goto	u4650
  5159  000F1E  EF91  F007         	goto	u4651
  5160  000F22                     u4651:
  5161  000F22  EF97  F007         	goto	l3953
  5162  000F26                     u4650:
  5163  000F26                     
  5164                           ; BSR set to: 0
  5165                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             ++t;
  5166  000F26  4A4A               	infsnz	efgtoa@t^0,f,c
  5167  000F28  2A4B               	incf	(efgtoa@t+1)^0,f,c
  5168                           
  5169                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } else {
  5170  000F2A  EFE1  F007         	goto	l3981
  5171  000F2E                     l3953:
  5172                           
  5173                           ; BSR set to: 0
  5174                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             if (!
      +                          pp && (ne < 0)) {
  5175  000F2E  504C               	movf	efgtoa@pp^0,w,c
  5176  000F30  104D               	iorwf	(efgtoa@pp+1)^0,w,c
  5177  000F32  A4D8               	btfss	status,2,c
  5178  000F34  EF9E  F007         	goto	u4661
  5179  000F38  EFA0  F007         	goto	u4660
  5180  000F3C                     u4661:
  5181  000F3C  EFCA  F007         	goto	l3973
  5182  000F40                     u4660:
  5183  000F40                     
  5184                           ; BSR set to: 0
  5185  000F40  BE51               	btfsc	(efgtoa@ne+1)^0,7,c
  5186  000F42  EFA7  F007         	goto	u4670
  5187  000F46  EFA5  F007         	goto	u4671
  5188  000F4A                     u4671:
  5189  000F4A  EFCA  F007         	goto	l3973
  5190  000F4E                     u4670:
  5191  000F4E                     
  5192                           ; BSR set to: 0
  5193                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:                 d
      +                          buf[n++] = '.';
  5194  000F4E  0E00               	movlw	low _dbuf
  5195  000F50  246C               	addwf	efgtoa@n^0,w,c
  5196  000F52  6ED9               	movwf	fsr2l,c
  5197  000F54  0E01               	movlw	high _dbuf
  5198  000F56  206D               	addwfc	(efgtoa@n+1)^0,w,c
  5199  000F58  6EDA               	movwf	fsr2h,c
  5200  000F5A  0E2E               	movlw	46
  5201  000F5C  6EDF               	movwf	indf2,c
  5202  000F5E                     
  5203                           ; BSR set to: 0
  5204  000F5E  4A6C               	infsnz	efgtoa@n^0,f,c
  5205  000F60  2A6D               	incf	(efgtoa@n+1)^0,f,c
  5206  000F62                     
  5207                           ; BSR set to: 0
  5208                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:                 -
      +                          -w;
  5209  000F62  0659               	decf	efgtoa@w^0,f,c
  5210  000F64  A0D8               	btfss	status,0,c
  5211  000F66  065A               	decf	(efgtoa@w+1)^0,f,c
  5212  000F68                     
  5213                           ; BSR set to: 0
  5214                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:                 p
      +                          p = 1;
  5215  000F68  0E00               	movlw	0
  5216  000F6A  6E4D               	movwf	(efgtoa@pp+1)^0,c
  5217  000F6C  0E01               	movlw	1
  5218  000F6E  6E4C               	movwf	efgtoa@pp^0,c
  5219  000F70  EFCA  F007         	goto	l3973
  5220  000F74                     l3965:
  5221                           
  5222                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:                 d
      +                          buf[n++] = '0';
  5223  000F74  0E00               	movlw	low _dbuf
  5224  000F76  246C               	addwf	efgtoa@n^0,w,c
  5225  000F78  6ED9               	movwf	fsr2l,c
  5226  000F7A  0E01               	movlw	high _dbuf
  5227  000F7C  206D               	addwfc	(efgtoa@n+1)^0,w,c
  5228  000F7E  6EDA               	movwf	fsr2h,c
  5229  000F80  0E30               	movlw	48
  5230  000F82  6EDF               	movwf	indf2,c
  5231  000F84  4A6C               	infsnz	efgtoa@n^0,f,c
  5232  000F86  2A6D               	incf	(efgtoa@n+1)^0,f,c
  5233  000F88                     
  5234                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:                 -
      +                          -w;
  5235  000F88  0659               	decf	efgtoa@w^0,f,c
  5236  000F8A  A0D8               	btfss	status,0,c
  5237  000F8C  065A               	decf	(efgtoa@w+1)^0,f,c
  5238  000F8E                     
  5239                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:                 -
      +                          -t;
  5240  000F8E  064A               	decf	efgtoa@t^0,f,c
  5241  000F90  A0D8               	btfss	status,0,c
  5242  000F92  064B               	decf	(efgtoa@t+1)^0,f,c
  5243  000F94                     l3973:
  5244                           
  5245                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             while
      +                           (t) {
  5246  000F94  504A               	movf	efgtoa@t^0,w,c
  5247  000F96  104B               	iorwf	(efgtoa@t+1)^0,w,c
  5248  000F98  A4D8               	btfss	status,2,c
  5249  000F9A  EFD1  F007         	goto	u4681
  5250  000F9E  EFD3  F007         	goto	u4680
  5251  000FA2                     u4681:
  5252  000FA2  EFBA  F007         	goto	l3965
  5253  000FA6                     u4680:
  5254  000FA6                     
  5255                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             dbuf[
      +                          n++] = '0' + d;
  5256  000FA6  0E00               	movlw	low _dbuf
  5257  000FA8  246C               	addwf	efgtoa@n^0,w,c
  5258  000FAA  6ED9               	movwf	fsr2l,c
  5259  000FAC  0E01               	movlw	high _dbuf
  5260  000FAE  206D               	addwfc	(efgtoa@n+1)^0,w,c
  5261  000FB0  6EDA               	movwf	fsr2h,c
  5262  000FB2  5052               	movf	efgtoa@d^0,w,c
  5263  000FB4  0F30               	addlw	48
  5264  000FB6  6EDF               	movwf	indf2,c
  5265  000FB8  4A6C               	infsnz	efgtoa@n^0,f,c
  5266  000FBA  2A6D               	incf	(efgtoa@n+1)^0,f,c
  5267  000FBC                     
  5268                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             --w;
  5269  000FBC  0659               	decf	efgtoa@w^0,f,c
  5270  000FBE  A0D8               	btfss	status,0,c
  5271  000FC0  065A               	decf	(efgtoa@w+1)^0,f,c
  5272  000FC2                     l3981:
  5273                           
  5274                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -= l*u;
  5275  000FC2  C05C  F01F         	movff	efgtoa@h,___flsub@b
  5276  000FC6  C05D  F020         	movff	efgtoa@h+1,___flsub@b+1
  5277  000FCA  C05E  F021         	movff	efgtoa@h+2,___flsub@b+2
  5278  000FCE  C05F  F022         	movff	efgtoa@h+3,___flsub@b+3
  5279  000FD2  C06E  F005         	movff	efgtoa@u,___flmul@a
  5280  000FD6  C06F  F006         	movff	efgtoa@u+1,___flmul@a+1
  5281  000FDA  C070  F007         	movff	efgtoa@u+2,___flmul@a+2
  5282  000FDE  C071  F008         	movff	efgtoa@u+3,___flmul@a+3
  5283  000FE2  C060  F001         	movff	efgtoa@l,___flmul@b
  5284  000FE6  C061  F002         	movff	efgtoa@l+1,___flmul@b+1
  5285  000FEA  C062  F003         	movff	efgtoa@l+2,___flmul@b+2
  5286  000FEE  C063  F004         	movff	efgtoa@l+3,___flmul@b+3
  5287  000FF2  ECDC  F00D         	call	___flmul	;wreg free
  5288  000FF6  C001  F023         	movff	?___flmul,___flsub@a
  5289  000FFA  C002  F024         	movff	?___flmul+1,___flsub@a+1
  5290  000FFE  C003  F025         	movff	?___flmul+2,___flsub@a+2
  5291  001002  C004  F026         	movff	?___flmul+3,___flsub@a+3
  5292  001006  EC16  F01F         	call	___flsub	;wreg free
  5293  00100A  C01F  F05C         	movff	?___flsub,efgtoa@h
  5294  00100E  C020  F05D         	movff	?___flsub+1,efgtoa@h+1
  5295  001012  C021  F05E         	movff	?___flsub+2,efgtoa@h+2
  5296  001016  C022  F05F         	movff	?___flsub+3,efgtoa@h+3
  5297  00101A                     
  5298                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = u/10.
      +                          0;
  5299  00101A  C06E  F001         	movff	efgtoa@u,___fldiv@b
  5300  00101E  C06F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  5301  001022  C070  F003         	movff	efgtoa@u+2,___fldiv@b+2
  5302  001026  C071  F004         	movff	efgtoa@u+3,___fldiv@b+3
  5303  00102A  0E00               	movlw	0
  5304  00102C  6E05               	movwf	___fldiv@a^0,c
  5305  00102E  0E00               	movlw	0
  5306  001030  6E06               	movwf	(___fldiv@a+1)^0,c
  5307  001032  0E20               	movlw	32
  5308  001034  6E07               	movwf	(___fldiv@a+2)^0,c
  5309  001036  0E41               	movlw	65
  5310  001038  6E08               	movwf	(___fldiv@a+3)^0,c
  5311  00103A  ECEA  F011         	call	___fldiv	;wreg free
  5312  00103E  C001  F06E         	movff	?___fldiv,efgtoa@u
  5313  001042  C002  F06F         	movff	?___fldiv+1,efgtoa@u+1
  5314  001046  C003  F070         	movff	?___fldiv+2,efgtoa@u+2
  5315  00104A  C004  F071         	movff	?___fldiv+3,efgtoa@u+3
  5316  00104E                     
  5317                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne;
  5318  00104E  0650               	decf	efgtoa@ne^0,f,c
  5319  001050  A0D8               	btfss	status,0,c
  5320  001052  0651               	decf	(efgtoa@ne+1)^0,f,c
  5321  001054                     
  5322                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  5323  001054  4A64               	infsnz	efgtoa@i^0,f,c
  5324  001056  2A65               	incf	(efgtoa@i+1)^0,f,c
  5325  001058                     l3989:
  5326                           
  5327                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((i < m
      +                          ) && (n < (80 - 5))) {
  5328  001058  504E               	movf	efgtoa@m^0,w,c
  5329  00105A  5C64               	subwf	efgtoa@i^0,w,c
  5330  00105C  5065               	movf	(efgtoa@i+1)^0,w,c
  5331  00105E  0A80               	xorlw	128
  5332  001060  6E35               	movwf	??_efgtoa^0,c
  5333  001062  504F               	movf	(efgtoa@m+1)^0,w,c
  5334  001064  0A80               	xorlw	128
  5335  001066  5835               	subwfb	??_efgtoa^0,w,c
  5336  001068  B0D8               	btfsc	status,0,c
  5337  00106A  EF39  F008         	goto	u4691
  5338  00106E  EF3B  F008         	goto	u4690
  5339  001072                     u4691:
  5340  001072  EF49  F008         	goto	l3993
  5341  001076                     u4690:
  5342  001076  BE6D               	btfsc	(efgtoa@n+1)^0,7,c
  5343  001078  EF47  F008         	goto	u4701
  5344  00107C  506D               	movf	(efgtoa@n+1)^0,w,c
  5345  00107E  E109               	bnz	u4700
  5346  001080  0E4B               	movlw	75
  5347  001082  5C6C               	subwf	efgtoa@n^0,w,c
  5348  001084  A0D8               	btfss	status,0,c
  5349  001086  EF47  F008         	goto	u4701
  5350  00108A  EF49  F008         	goto	u4700
  5351  00108E                     u4701:
  5352  00108E  EF40  F007         	goto	l3941
  5353  001092                     u4700:
  5354  001092                     l3993:
  5355                           
  5356                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp && (f
      +                          lags & (1 << 4))) {
  5357  001092  504C               	movf	efgtoa@pp^0,w,c
  5358  001094  104D               	iorwf	(efgtoa@pp+1)^0,w,c
  5359  001096  A4D8               	btfss	status,2,c
  5360  001098  EF50  F008         	goto	u4711
  5361  00109C  EF52  F008         	goto	u4710
  5362  0010A0                     u4711:
  5363  0010A0  EF64  F008         	goto	l4001
  5364  0010A4                     u4710:
  5365  0010A4  0100               	movlb	0	; () banked
  5366  0010A6  A9E3               	btfss	_flags& (0+255),4,b
  5367  0010A8  EF58  F008         	goto	u4721
  5368  0010AC  EF5A  F008         	goto	u4720
  5369  0010B0                     u4721:
  5370  0010B0  EF64  F008         	goto	l4001
  5371  0010B4                     u4720:
  5372  0010B4                     
  5373                           ; BSR set to: 0
  5374                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf[n++]
      +                           = '.';
  5375  0010B4  0E00               	movlw	low _dbuf
  5376  0010B6  246C               	addwf	efgtoa@n^0,w,c
  5377  0010B8  6ED9               	movwf	fsr2l,c
  5378  0010BA  0E01               	movlw	high _dbuf
  5379  0010BC  206D               	addwfc	(efgtoa@n+1)^0,w,c
  5380  0010BE  6EDA               	movwf	fsr2h,c
  5381  0010C0  0E2E               	movlw	46
  5382  0010C2  6EDF               	movwf	indf2,c
  5383  0010C4                     
  5384                           ; BSR set to: 0
  5385  0010C4  4A6C               	infsnz	efgtoa@n^0,f,c
  5386  0010C6  2A6D               	incf	(efgtoa@n+1)^0,f,c
  5387  0010C8                     l4001:
  5388                           
  5389                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] = '\0
      +                          ';
  5390  0010C8  0E00               	movlw	low _dbuf
  5391  0010CA  246C               	addwf	efgtoa@n^0,w,c
  5392  0010CC  6ED9               	movwf	fsr2l,c
  5393  0010CE  0E01               	movlw	high _dbuf
  5394  0010D0  206D               	addwfc	(efgtoa@n+1)^0,w,c
  5395  0010D2  6EDA               	movwf	fsr2h,c
  5396  0010D4  0E00               	movlw	0
  5397  0010D6  6EDF               	movwf	indf2,c
  5398  0010D8                     
  5399                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmode == 
      +                          'e') {
  5400  0010D8  0E65               	movlw	101
  5401  0010DA  1858               	xorwf	efgtoa@nmode^0,w,c
  5402  0010DC  A4D8               	btfss	status,2,c
  5403  0010DE  EF73  F008         	goto	u4731
  5404  0010E2  EF75  F008         	goto	u4730
  5405  0010E6                     u4731:
  5406  0010E6  EF2A  F004         	goto	l3813
  5407  0010EA                     u4730:
  5408  0010EA                     
  5409                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = sizeo
      +                          f(dbuf) - 1;
  5410  0010EA  0E00               	movlw	0
  5411  0010EC  6E65               	movwf	(efgtoa@i+1)^0,c
  5412  0010EE  0E4F               	movlw	79
  5413  0010F0  6E64               	movwf	efgtoa@i^0,c
  5414  0010F2                     
  5415                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf[i] =
      +                           '\0';
  5416  0010F2  0E00               	movlw	low _dbuf
  5417  0010F4  2464               	addwf	efgtoa@i^0,w,c
  5418  0010F6  6ED9               	movwf	fsr2l,c
  5419  0010F8  0E01               	movlw	high _dbuf
  5420  0010FA  2065               	addwfc	(efgtoa@i+1)^0,w,c
  5421  0010FC  6EDA               	movwf	fsr2h,c
  5422  0010FE  0E00               	movlw	0
  5423  001100  6EDF               	movwf	indf2,c
  5424  001102                     
  5425                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign = 0;
  5426  001102  0E00               	movlw	0
  5427  001104  6E55               	movwf	(efgtoa@sign+1)^0,c
  5428  001106  0E00               	movlw	0
  5429  001108  6E54               	movwf	efgtoa@sign^0,c
  5430  00110A                     
  5431                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (e < 0
      +                          ) {
  5432  00110A  BE6B               	btfsc	(efgtoa@e+1)^0,7,c
  5433  00110C  EF8C  F008         	goto	u4740
  5434  001110  EF8A  F008         	goto	u4741
  5435  001114                     u4741:
  5436  001114  EF94  F008         	goto	l4017
  5437  001118                     u4740:
  5438  001118                     
  5439                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             sign 
      +                          = 1;
  5440  001118  0E00               	movlw	0
  5441  00111A  6E55               	movwf	(efgtoa@sign+1)^0,c
  5442  00111C  0E01               	movlw	1
  5443  00111E  6E54               	movwf	efgtoa@sign^0,c
  5444  001120                     
  5445                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             e = -
      +                          e;
  5446  001120  6C6A               	negf	efgtoa@e^0,c
  5447  001122  1E6B               	comf	(efgtoa@e+1)^0,f,c
  5448  001124  B0D8               	btfsc	status,0,c
  5449  001126  2A6B               	incf	(efgtoa@e+1)^0,f,c
  5450  001128                     l4017:
  5451                           
  5452                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 2;
  5453  001128  0E00               	movlw	0
  5454  00112A  6E57               	movwf	(efgtoa@p+1)^0,c
  5455  00112C  0E02               	movlw	2
  5456  00112E  6E56               	movwf	efgtoa@p^0,c
  5457                           
  5458                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         while (e 
      +                          || (0 < p)) {
  5459  001130  EFC4  F008         	goto	l4029
  5460  001134                     l4019:
  5461                           
  5462                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             --i;
  5463  001134  0664               	decf	efgtoa@i^0,f,c
  5464  001136  A0D8               	btfss	status,0,c
  5465  001138  0665               	decf	(efgtoa@i+1)^0,f,c
  5466  00113A                     
  5467                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             dbuf[
      +                          i] = '0' + (e % 10);
  5468  00113A  0E00               	movlw	low _dbuf
  5469  00113C  2464               	addwf	efgtoa@i^0,w,c
  5470  00113E  6ED9               	movwf	fsr2l,c
  5471  001140  0E01               	movlw	high _dbuf
  5472  001142  2065               	addwfc	(efgtoa@i+1)^0,w,c
  5473  001144  6EDA               	movwf	fsr2h,c
  5474  001146  C06A  F001         	movff	efgtoa@e,___awmod@dividend
  5475  00114A  C06B  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  5476  00114E  0E00               	movlw	0
  5477  001150  6E04               	movwf	(___awmod@divisor+1)^0,c
  5478  001152  0E0A               	movlw	10
  5479  001154  6E03               	movwf	___awmod@divisor^0,c
  5480  001156  ECBB  F01C         	call	___awmod	;wreg free
  5481  00115A  5001               	movf	?___awmod^0,w,c
  5482  00115C  0F30               	addlw	48
  5483  00115E  6EDF               	movwf	indf2,c
  5484  001160                     
  5485                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             e = e
      +                           / 10;
  5486  001160  C06A  F001         	movff	efgtoa@e,___awdiv@dividend
  5487  001164  C06B  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  5488  001168  0E00               	movlw	0
  5489  00116A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5490  00116C  0E0A               	movlw	10
  5491  00116E  6E03               	movwf	___awdiv@divisor^0,c
  5492  001170  ECFD  F01B         	call	___awdiv	;wreg free
  5493  001174  C001  F06A         	movff	?___awdiv,efgtoa@e
  5494  001178  C002  F06B         	movff	?___awdiv+1,efgtoa@e+1
  5495  00117C                     
  5496                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             --p;
  5497  00117C  0656               	decf	efgtoa@p^0,f,c
  5498  00117E  A0D8               	btfss	status,0,c
  5499  001180  0657               	decf	(efgtoa@p+1)^0,f,c
  5500  001182                     
  5501                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             --w;
  5502  001182  0659               	decf	efgtoa@w^0,f,c
  5503  001184  A0D8               	btfss	status,0,c
  5504  001186  065A               	decf	(efgtoa@w+1)^0,f,c
  5505  001188                     l4029:
  5506                           
  5507                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         while (e 
      +                          || (0 < p)) {
  5508  001188  506A               	movf	efgtoa@e^0,w,c
  5509  00118A  106B               	iorwf	(efgtoa@e+1)^0,w,c
  5510  00118C  A4D8               	btfss	status,2,c
  5511  00118E  EFCB  F008         	goto	u4751
  5512  001192  EFCD  F008         	goto	u4750
  5513  001196                     u4751:
  5514  001196  EF9A  F008         	goto	l4019
  5515  00119A                     u4750:
  5516  00119A  BE57               	btfsc	(efgtoa@p+1)^0,7,c
  5517  00119C  EFDA  F008         	goto	u4760
  5518  0011A0  5057               	movf	(efgtoa@p+1)^0,w,c
  5519  0011A2  E106               	bnz	u4761
  5520  0011A4  0456               	decf	efgtoa@p^0,w,c
  5521  0011A6  B0D8               	btfsc	status,0,c
  5522  0011A8  EFD8  F008         	goto	u4761
  5523  0011AC  EFDA  F008         	goto	u4760
  5524  0011B0                     u4761:
  5525  0011B0  EF9A  F008         	goto	l4019
  5526  0011B4                     u4760:
  5527  0011B4                     
  5528                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  5529  0011B4  0664               	decf	efgtoa@i^0,f,c
  5530  0011B6  A0D8               	btfss	status,0,c
  5531  0011B8  0665               	decf	(efgtoa@i+1)^0,f,c
  5532  0011BA                     
  5533                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf[i] =
      +                           sign ? '-' : '+';
  5534  0011BA  5054               	movf	efgtoa@sign^0,w,c
  5535  0011BC  1055               	iorwf	(efgtoa@sign+1)^0,w,c
  5536  0011BE  A4D8               	btfss	status,2,c
  5537  0011C0  EFE4  F008         	goto	u4771
  5538  0011C4  EFE6  F008         	goto	u4770
  5539  0011C8                     u4771:
  5540  0011C8  EFEC  F008         	goto	l4039
  5541  0011CC                     u4770:
  5542  0011CC  0E00               	movlw	0
  5543  0011CE  6E45               	movwf	(_efgtoa$742+1)^0,c
  5544  0011D0  0E2B               	movlw	43
  5545  0011D2  6E44               	movwf	_efgtoa$742^0,c
  5546  0011D4  EFF0  F008         	goto	l4041
  5547  0011D8                     l4039:
  5548  0011D8  0E00               	movlw	0
  5549  0011DA  6E45               	movwf	(_efgtoa$742+1)^0,c
  5550  0011DC  0E2D               	movlw	45
  5551  0011DE  6E44               	movwf	_efgtoa$742^0,c
  5552  0011E0                     l4041:
  5553  0011E0  0E00               	movlw	low _dbuf
  5554  0011E2  2464               	addwf	efgtoa@i^0,w,c
  5555  0011E4  6ED9               	movwf	fsr2l,c
  5556  0011E6  0E01               	movlw	high _dbuf
  5557  0011E8  2065               	addwfc	(efgtoa@i+1)^0,w,c
  5558  0011EA  6EDA               	movwf	fsr2h,c
  5559  0011EC  C044  FFDF         	movff	_efgtoa$742,indf2
  5560  0011F0                     
  5561                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  5562  0011F0  0659               	decf	efgtoa@w^0,f,c
  5563  0011F2  A0D8               	btfss	status,0,c
  5564  0011F4  065A               	decf	(efgtoa@w+1)^0,f,c
  5565  0011F6                     
  5566                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf[i] =
      +                           (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5567  0011F6  0664               	decf	efgtoa@i^0,f,c
  5568  0011F8  A0D8               	btfss	status,0,c
  5569  0011FA  0665               	decf	(efgtoa@i+1)^0,f,c
  5570  0011FC  0EBF               	movlw	191
  5571  0011FE  6E35               	movwf	??_efgtoa^0,c
  5572  001200  0EFF               	movlw	255
  5573  001202  6E36               	movwf	(??_efgtoa+1)^0,c
  5574  001204  5034               	movf	efgtoa@c^0,w,c
  5575  001206  6E37               	movwf	(??_efgtoa+2)^0,c
  5576  001208  6A38               	clrf	(??_efgtoa+3)^0,c
  5577  00120A  5035               	movf	??_efgtoa^0,w,c
  5578  00120C  2637               	addwf	(??_efgtoa+2)^0,f,c
  5579  00120E  5036               	movf	(??_efgtoa+1)^0,w,c
  5580  001210  2238               	addwfc	(??_efgtoa+3)^0,f,c
  5581  001212  5038               	movf	(??_efgtoa+3)^0,w,c
  5582  001214  E10A               	bnz	u4780
  5583  001216  0E1A               	movlw	26
  5584  001218  5C37               	subwf	(??_efgtoa+2)^0,w,c
  5585  00121A  A0D8               	btfss	status,0,c
  5586  00121C  EF12  F009         	goto	u4781
  5587  001220  EF15  F009         	goto	u4780
  5588  001224                     u4781:
  5589  001224  0E01               	movlw	1
  5590  001226  EF16  F009         	goto	u4790
  5591  00122A                     u4780:
  5592  00122A  0E00               	movlw	0
  5593  00122C                     u4790:
  5594  00122C  6E48               	movwf	_efgtoa$744^0,c
  5595  00122E  6A49               	clrf	(_efgtoa$744+1)^0,c
  5596  001230  5048               	movf	_efgtoa$744^0,w,c
  5597  001232  1049               	iorwf	(_efgtoa$744+1)^0,w,c
  5598  001234  A4D8               	btfss	status,2,c
  5599  001236  EF1F  F009         	goto	u4801
  5600  00123A  EF21  F009         	goto	u4800
  5601  00123E                     u4801:
  5602  00123E  EF27  F009         	goto	l4055
  5603  001242                     u4800:
  5604  001242  0E00               	movlw	0
  5605  001244  6E47               	movwf	(_efgtoa$743+1)^0,c
  5606  001246  0E65               	movlw	101
  5607  001248  6E46               	movwf	_efgtoa$743^0,c
  5608  00124A  EF2B  F009         	goto	l4057
  5609  00124E                     l4055:
  5610  00124E  0E00               	movlw	0
  5611  001250  6E47               	movwf	(_efgtoa$743+1)^0,c
  5612  001252  0E45               	movlw	69
  5613  001254  6E46               	movwf	_efgtoa$743^0,c
  5614  001256                     l4057:
  5615  001256  0E00               	movlw	low _dbuf
  5616  001258  2464               	addwf	efgtoa@i^0,w,c
  5617  00125A  6ED9               	movwf	fsr2l,c
  5618  00125C  0E01               	movlw	high _dbuf
  5619  00125E  2065               	addwfc	(efgtoa@i+1)^0,w,c
  5620  001260  6EDA               	movwf	fsr2h,c
  5621  001262  C046  FFDF         	movff	_efgtoa$743,indf2
  5622  001266                     
  5623                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  5624  001266  0659               	decf	efgtoa@w^0,f,c
  5625  001268  A0D8               	btfss	status,0,c
  5626  00126A  065A               	decf	(efgtoa@w+1)^0,f,c
  5627  00126C                     
  5628                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strcpy(&d
      +                          buf[n], &dbuf[i]);
  5629  00126C  0E00               	movlw	low _dbuf
  5630  00126E  246C               	addwf	efgtoa@n^0,w,c
  5631  001270  6E01               	movwf	strcpy@dest^0,c
  5632  001272  0E01               	movlw	high _dbuf
  5633  001274  206D               	addwfc	(efgtoa@n+1)^0,w,c
  5634  001276  6E02               	movwf	(strcpy@dest+1)^0,c
  5635  001278  0E00               	movlw	low _dbuf
  5636  00127A  2464               	addwf	efgtoa@i^0,w,c
  5637  00127C  6E03               	movwf	strcpy@src^0,c
  5638  00127E  0E01               	movlw	high _dbuf
  5639  001280  2065               	addwfc	(efgtoa@i+1)^0,w,c
  5640  001282  6E04               	movwf	(strcpy@src+1)^0,c
  5641  001284  EC96  F01E         	call	_strcpy	;wreg free
  5642  001288  EF2A  F004         	goto	l3813
  5643  00128C                     l943:
  5644  00128C  0012               	return		;funcret
  5645  00128E                     __end_of_efgtoa:
  5646                           	callstack 0
  5647                           
  5648 ;; *************** function _tolower *****************
  5649 ;; Defined at:
  5650 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\tolower.c"
  5651 ;; Parameters:    Size  Location     Type
  5652 ;;  c               2    6[COMRAM] int 
  5653 ;; Auto vars:     Size  Location     Type
  5654 ;;		None
  5655 ;; Return value:  Size  Location     Type
  5656 ;;                  2    6[COMRAM] int 
  5657 ;; Registers used:
  5658 ;;		wreg, status,2, status,0
  5659 ;; Tracked objects:
  5660 ;;		On entry : 0/0
  5661 ;;		On exit  : 0/0
  5662 ;;		Unchanged: 0/0
  5663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5664 ;;      Params:         2       0       0       0       0       0       0
  5665 ;;      Locals:         2       0       0       0       0       0       0
  5666 ;;      Temps:          4       0       0       0       0       0       0
  5667 ;;      Totals:         8       0       0       0       0       0       0
  5668 ;;Total ram usage:        8 bytes
  5669 ;; Hardware stack levels used:    1
  5670 ;; Hardware stack levels required when called:    1
  5671 ;; This function calls:
  5672 ;;		_isupper
  5673 ;; This function is called by:
  5674 ;;		_efgtoa
  5675 ;;		_vfpfcnvrt
  5676 ;; This function uses a non-reentrant model
  5677 ;;
  5678                           
  5679                           	psect	text11
  5680  003C70                     __ptext11:
  5681                           	callstack 0
  5682  003C70                     _tolower:
  5683                           	callstack 25
  5684  003C70  0EBF               	movlw	191
  5685  003C72  6E09               	movwf	??_tolower^0,c
  5686  003C74  0EFF               	movlw	255
  5687  003C76  6E0A               	movwf	(??_tolower+1)^0,c
  5688  003C78  C007  F00B         	movff	tolower@c,??_tolower+2
  5689  003C7C  C008  F00C         	movff	tolower@c+1,??_tolower+3
  5690  003C80  5009               	movf	??_tolower^0,w,c
  5691  003C82  260B               	addwf	(??_tolower+2)^0,f,c
  5692  003C84  500A               	movf	(??_tolower+1)^0,w,c
  5693  003C86  220C               	addwfc	(??_tolower+3)^0,f,c
  5694  003C88  500C               	movf	(??_tolower+3)^0,w,c
  5695  003C8A  E10A               	bnz	u4120
  5696  003C8C  0E1A               	movlw	26
  5697  003C8E  5C0B               	subwf	(??_tolower+2)^0,w,c
  5698  003C90  A0D8               	btfss	status,0,c
  5699  003C92  EF4D  F01E         	goto	u4121
  5700  003C96  EF50  F01E         	goto	u4120
  5701  003C9A                     u4121:
  5702  003C9A  0E01               	movlw	1
  5703  003C9C  EF51  F01E         	goto	u4130
  5704  003CA0                     u4120:
  5705  003CA0  0E00               	movlw	0
  5706  003CA2                     u4130:
  5707  003CA2  6E0D               	movwf	_tolower$891^0,c
  5708  003CA4  6A0E               	clrf	(_tolower$891+1)^0,c
  5709  003CA6  500D               	movf	_tolower$891^0,w,c
  5710  003CA8  100E               	iorwf	(_tolower$891+1)^0,w,c
  5711  003CAA  B4D8               	btfsc	status,2,c
  5712  003CAC  EF5A  F01E         	goto	u4141
  5713  003CB0  EF5C  F01E         	goto	u4140
  5714  003CB4                     u4141:
  5715  003CB4  EF63  F01E         	goto	l1171
  5716  003CB8                     u4140:
  5717  003CB8  0E20               	movlw	32
  5718  003CBA  1007               	iorwf	tolower@c^0,w,c
  5719  003CBC  6E07               	movwf	?_tolower^0,c
  5720  003CBE  5008               	movf	(tolower@c+1)^0,w,c
  5721  003CC0  6E08               	movwf	(?_tolower+1)^0,c
  5722  003CC2  EF67  F01E         	goto	l1176
  5723  003CC6                     l1171:
  5724  003CC6  C007  F007         	movff	tolower@c,?_tolower
  5725  003CCA  C008  F008         	movff	tolower@c+1,?_tolower+1
  5726  003CCE                     l1176:
  5727  003CCE  0012               	return		;funcret
  5728  003CD0                     __end_of_tolower:
  5729                           	callstack 0
  5730                           
  5731 ;; *************** function _isupper *****************
  5732 ;; Defined at:
  5733 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\isupper.c"
  5734 ;; Parameters:    Size  Location     Type
  5735 ;;  c               2    0[COMRAM] int 
  5736 ;; Auto vars:     Size  Location     Type
  5737 ;;		None
  5738 ;; Return value:  Size  Location     Type
  5739 ;;                  2    0[COMRAM] int 
  5740 ;; Registers used:
  5741 ;;		wreg, status,2, status,0
  5742 ;; Tracked objects:
  5743 ;;		On entry : 0/0
  5744 ;;		On exit  : 0/0
  5745 ;;		Unchanged: 0/0
  5746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5747 ;;      Params:         2       0       0       0       0       0       0
  5748 ;;      Locals:         0       0       0       0       0       0       0
  5749 ;;      Temps:          4       0       0       0       0       0       0
  5750 ;;      Totals:         6       0       0       0       0       0       0
  5751 ;;Total ram usage:        6 bytes
  5752 ;; Hardware stack levels used:    1
  5753 ;; This function calls:
  5754 ;;		Nothing
  5755 ;; This function is called by:
  5756 ;;		_efgtoa
  5757 ;;		_vfpfcnvrt
  5758 ;;		_tolower
  5759 ;; This function uses a non-reentrant model
  5760 ;;
  5761                           
  5762                           	psect	text12
  5763  003EB6                     __ptext12:
  5764                           	callstack 0
  5765  003EB6                     _isupper:
  5766                           	callstack 25
  5767  003EB6  0EBF               	movlw	191
  5768  003EB8  6E03               	movwf	??_isupper^0,c
  5769  003EBA  0EFF               	movlw	255
  5770  003EBC  6E04               	movwf	(??_isupper+1)^0,c
  5771  003EBE  C001  F005         	movff	isupper@c,??_isupper+2
  5772  003EC2  C002  F006         	movff	isupper@c+1,??_isupper+3
  5773  003EC6  5003               	movf	??_isupper^0,w,c
  5774  003EC8  2605               	addwf	(??_isupper+2)^0,f,c
  5775  003ECA  5004               	movf	(??_isupper+1)^0,w,c
  5776  003ECC  2206               	addwfc	(??_isupper+3)^0,f,c
  5777  003ECE  5006               	movf	(??_isupper+3)^0,w,c
  5778  003ED0  E10A               	bnz	u3270
  5779  003ED2  0E1A               	movlw	26
  5780  003ED4  5C05               	subwf	(??_isupper+2)^0,w,c
  5781  003ED6  A0D8               	btfss	status,0,c
  5782  003ED8  EF70  F01F         	goto	u3271
  5783  003EDC  EF73  F01F         	goto	u3270
  5784  003EE0                     u3271:
  5785  003EE0  0E01               	movlw	1
  5786  003EE2  EF74  F01F         	goto	u3280
  5787  003EE6                     u3270:
  5788  003EE6  0E00               	movlw	0
  5789  003EE8                     u3280:
  5790  003EE8  6E01               	movwf	?_isupper^0,c
  5791  003EEA  6A02               	clrf	(?_isupper+1)^0,c
  5792  003EEC  0012               	return		;funcret
  5793  003EEE                     __end_of_isupper:
  5794                           	callstack 0
  5795                           
  5796 ;; *************** function _strcpy *****************
  5797 ;; Defined at:
  5798 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  5799 ;; Parameters:    Size  Location     Type
  5800 ;;  dest            2    0[COMRAM] PTR unsigned char 
  5801 ;;		 -> dbuf(80), 
  5802 ;;  src             2    2[COMRAM] PTR const unsigned char 
  5803 ;;		 -> STR_36(4), STR_35(4), STR_32(4), STR_31(4), 
  5804 ;;		 -> dbuf(80), 
  5805 ;; Auto vars:     Size  Location     Type
  5806 ;;  d               2    8[COMRAM] PTR unsigned char 
  5807 ;;		 -> dbuf(80), 
  5808 ;;  s               2    6[COMRAM] PTR const unsigned char 
  5809 ;;		 -> STR_36(4), STR_35(4), STR_32(4), STR_31(4), 
  5810 ;;		 -> dbuf(80), 
  5811 ;; Return value:  Size  Location     Type
  5812 ;;                  2    0[COMRAM] PTR unsigned char 
  5813 ;; Registers used:
  5814 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5815 ;; Tracked objects:
  5816 ;;		On entry : 0/0
  5817 ;;		On exit  : 0/0
  5818 ;;		Unchanged: 0/0
  5819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5820 ;;      Params:         4       0       0       0       0       0       0
  5821 ;;      Locals:         4       0       0       0       0       0       0
  5822 ;;      Temps:          2       0       0       0       0       0       0
  5823 ;;      Totals:        10       0       0       0       0       0       0
  5824 ;;Total ram usage:       10 bytes
  5825 ;; Hardware stack levels used:    1
  5826 ;; This function calls:
  5827 ;;		Nothing
  5828 ;; This function is called by:
  5829 ;;		_efgtoa
  5830 ;; This function uses a non-reentrant model
  5831 ;;
  5832                           
  5833                           	psect	text13
  5834  003D2C                     __ptext13:
  5835                           	callstack 0
  5836  003D2C                     _strcpy:
  5837                           	callstack 25
  5838  003D2C  C003  F007         	movff	strcpy@src,strcpy@s
  5839  003D30  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  5840  003D34  C001  F009         	movff	strcpy@dest,strcpy@d
  5841  003D38  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  5842  003D3C                     l3713:
  5843  003D3C  5007               	movf	strcpy@s^0,w,c
  5844  003D3E  6E05               	movwf	??_strcpy^0,c
  5845  003D40  5008               	movf	(strcpy@s+1)^0,w,c
  5846  003D42  6E06               	movwf	(??_strcpy+1)^0,c
  5847  003D44  4A07               	infsnz	strcpy@s^0,f,c
  5848  003D46  2A08               	incf	(strcpy@s+1)^0,f,c
  5849  003D48  C005  FFF6         	movff	??_strcpy,tblptrl
  5850  003D4C  C006  FFF7         	movff	??_strcpy+1,tblptrh
  5851  003D50  6AF8               	clrf	tblptru,c
  5852  003D52  C009  FFD9         	movff	strcpy@d,fsr2l
  5853  003D56  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  5854  003D5A  4A09               	infsnz	strcpy@d^0,f,c
  5855  003D5C  2A0A               	incf	(strcpy@d+1)^0,f,c
  5856  003D5E  0E05               	movlw	(high __ramtop+-1)
  5857  003D60  64F7               	cpfsgt	tblptrh,c
  5858  003D62  D003               	bra	u4107
  5859  003D64  0008               	tblrd		*
  5860  003D66  50F5               	movf	tablat,w,c
  5861  003D68  D005               	bra	u4100
  5862  003D6A                     u4107:
  5863  003D6A  CFF6 FFE9          	movff	tblptrl,fsr0l
  5864  003D6E  CFF7 FFEA          	movff	tblptrh,fsr0h
  5865  003D72  50EF               	movf	indf0,w,c
  5866  003D74                     u4100:
  5867  003D74  6EDF               	movwf	indf2,c
  5868  003D76  50DF               	movf	indf2,w,c
  5869  003D78  A4D8               	btfss	status,2,c
  5870  003D7A  EFC1  F01E         	goto	u4111
  5871  003D7E  EFC3  F01E         	goto	u4110
  5872  003D82                     u4111:
  5873  003D82  EF9E  F01E         	goto	l3713
  5874  003D86                     u4110:
  5875  003D86  0012               	return		;funcret
  5876  003D88                     __end_of_strcpy:
  5877                           	callstack 0
  5878                           
  5879 ;; *************** function _pad *****************
  5880 ;; Defined at:
  5881 ;;		line 72 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5882 ;; Parameters:    Size  Location     Type
  5883 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5884 ;;		 -> sprintf@f(6), 
  5885 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5886 ;;		 -> dbuf(80), 
  5887 ;;  p               2   20[COMRAM] int 
  5888 ;; Auto vars:     Size  Location     Type
  5889 ;;  w               2   25[COMRAM] int 
  5890 ;;  i               2   23[COMRAM] int 
  5891 ;; Return value:  Size  Location     Type
  5892 ;;                  2   16[COMRAM] int 
  5893 ;; Registers used:
  5894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5895 ;; Tracked objects:
  5896 ;;		On entry : 0/0
  5897 ;;		On exit  : 0/0
  5898 ;;		Unchanged: 0/0
  5899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5900 ;;      Params:         6       0       0       0       0       0       0
  5901 ;;      Locals:         4       0       0       0       0       0       0
  5902 ;;      Temps:          1       0       0       0       0       0       0
  5903 ;;      Totals:        11       0       0       0       0       0       0
  5904 ;;Total ram usage:       11 bytes
  5905 ;; Hardware stack levels used:    1
  5906 ;; Hardware stack levels required when called:    3
  5907 ;; This function calls:
  5908 ;;		_fputc
  5909 ;;		_fputs
  5910 ;;		_strlen
  5911 ;; This function is called by:
  5912 ;;		_efgtoa
  5913 ;; This function uses a non-reentrant model
  5914 ;;
  5915                           
  5916                           	psect	text14
  5917  003734                     __ptext14:
  5918                           	callstack 0
  5919  003734                     _pad:
  5920                           	callstack 22
  5921  003734                     
  5922                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pad(FIL
      +                          E *fp, char *buf, int p);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c
      +                          : 73: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 74:     int i, 
      +                          w;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 77:     if (flags & 
      +                          (1 << 0)) {
  5923  003734  0100               	movlb	0	; () banked
  5924  003736  A1E3               	btfss	_flags& (0+255),0,b
  5925  003738  EFA0  F01B         	goto	u3991
  5926  00373C  EFA2  F01B         	goto	u3990
  5927  003740                     u3991:
  5928  003740  EFAC  F01B         	goto	l3671
  5929  003744                     u3990:
  5930  003744                     
  5931                           ; BSR set to: 0
  5932                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs((con
      +                          st char *)buf, fp);
  5933  003744  C013  F00A         	movff	pad@buf,fputs@s
  5934  003748  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5935  00374C  C011  F00C         	movff	pad@fp,fputs@fp
  5936  003750  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5937  003754  EC39  F01F         	call	_fputs	;wreg free
  5938  003758                     l3671:
  5939                           
  5940                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ? 
      +                          0 : p;
  5941  003758  BE16               	btfsc	(pad@p+1)^0,7,c
  5942  00375A  EFB1  F01B         	goto	u4001
  5943  00375E  EFB3  F01B         	goto	u4000
  5944  003762                     u4001:
  5945  003762  EFB9  F01B         	goto	l3675
  5946  003766                     u4000:
  5947  003766  C015  F01A         	movff	pad@p,pad@w
  5948  00376A  C016  F01B         	movff	pad@p+1,pad@w+1
  5949  00376E  EFBD  F01B         	goto	l920
  5950  003772                     l3675:
  5951  003772  0E00               	movlw	0
  5952  003774  6E1B               	movwf	(pad@w+1)^0,c
  5953  003776  0E00               	movlw	0
  5954  003778  6E1A               	movwf	pad@w^0,c
  5955  00377A                     l920:
  5956                           
  5957                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5958  00377A  0E00               	movlw	0
  5959  00377C  6E19               	movwf	(pad@i+1)^0,c
  5960  00377E  0E00               	movlw	0
  5961  003780  6E18               	movwf	pad@i^0,c
  5962                           
  5963                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  5964  003782  EFCF  F01B         	goto	l3681
  5965  003786                     l3677:
  5966                           
  5967                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc(' ',
      +                           fp);
  5968  003786  0E00               	movlw	0
  5969  003788  6E02               	movwf	(fputc@c+1)^0,c
  5970  00378A  0E20               	movlw	32
  5971  00378C  6E01               	movwf	fputc@c^0,c
  5972  00378E  C011  F003         	movff	pad@fp,fputc@fp
  5973  003792  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5974  003796  EC35  F01B         	call	_fputc	;wreg free
  5975  00379A                     
  5976                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5977  00379A  4A18               	infsnz	pad@i^0,f,c
  5978  00379C  2A19               	incf	(pad@i+1)^0,f,c
  5979  00379E                     l3681:
  5980                           
  5981                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  5982  00379E  501A               	movf	pad@w^0,w,c
  5983  0037A0  5C18               	subwf	pad@i^0,w,c
  5984  0037A2  5019               	movf	(pad@i+1)^0,w,c
  5985  0037A4  0A80               	xorlw	128
  5986  0037A6  6E17               	movwf	??_pad^0,c
  5987  0037A8  501B               	movf	(pad@w+1)^0,w,c
  5988  0037AA  0A80               	xorlw	128
  5989  0037AC  5817               	subwfb	??_pad^0,w,c
  5990  0037AE  A0D8               	btfss	status,0,c
  5991  0037B0  EFDC  F01B         	goto	u4011
  5992  0037B4  EFDE  F01B         	goto	u4010
  5993  0037B8                     u4011:
  5994  0037B8  EFC3  F01B         	goto	l3677
  5995  0037BC                     u4010:
  5996  0037BC                     
  5997                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(flags & 
      +                          (1 << 0))) {
  5998  0037BC  0100               	movlb	0	; () banked
  5999  0037BE  B1E3               	btfsc	_flags& (0+255),0,b
  6000  0037C0  EFE4  F01B         	goto	u4021
  6001  0037C4  EFE6  F01B         	goto	u4020
  6002  0037C8                     u4021:
  6003  0037C8  EFF0  F01B         	goto	l3685
  6004  0037CC                     u4020:
  6005  0037CC                     
  6006                           ; BSR set to: 0
  6007                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs((con
      +                          st char *)buf, fp);
  6008  0037CC  C013  F00A         	movff	pad@buf,fputs@s
  6009  0037D0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6010  0037D4  C011  F00C         	movff	pad@fp,fputs@fp
  6011  0037D8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6012  0037DC  EC39  F01F         	call	_fputs	;wreg free
  6013  0037E0                     l3685:
  6014                           
  6015                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return strlen(
      +                          buf) + w;
  6016  0037E0  C013  F001         	movff	pad@buf,strlen@s
  6017  0037E4  C014  F002         	movff	pad@buf+1,strlen@s+1
  6018  0037E8  ECAF  F01F         	call	_strlen	;wreg free
  6019  0037EC  501A               	movf	pad@w^0,w,c
  6020  0037EE  2401               	addwf	?_strlen^0,w,c
  6021  0037F0  6E11               	movwf	?_pad^0,c
  6022  0037F2  501B               	movf	(pad@w+1)^0,w,c
  6023  0037F4  2002               	addwfc	(?_strlen+1)^0,w,c
  6024  0037F6  6E12               	movwf	(?_pad+1)^0,c
  6025  0037F8  0012               	return		;funcret
  6026  0037FA                     __end_of_pad:
  6027                           	callstack 0
  6028                           
  6029 ;; *************** function _strlen *****************
  6030 ;; Defined at:
  6031 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strlen.c"
  6032 ;; Parameters:    Size  Location     Type
  6033 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6034 ;;		 -> dbuf(80), 
  6035 ;; Auto vars:     Size  Location     Type
  6036 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6037 ;;		 -> dbuf(80), 
  6038 ;; Return value:  Size  Location     Type
  6039 ;;                  2    0[COMRAM] unsigned int 
  6040 ;; Registers used:
  6041 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6042 ;; Tracked objects:
  6043 ;;		On entry : 0/0
  6044 ;;		On exit  : 0/0
  6045 ;;		Unchanged: 0/0
  6046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6047 ;;      Params:         2       0       0       0       0       0       0
  6048 ;;      Locals:         2       0       0       0       0       0       0
  6049 ;;      Temps:          0       0       0       0       0       0       0
  6050 ;;      Totals:         4       0       0       0       0       0       0
  6051 ;;Total ram usage:        4 bytes
  6052 ;; Hardware stack levels used:    1
  6053 ;; This function calls:
  6054 ;;		Nothing
  6055 ;; This function is called by:
  6056 ;;		_pad
  6057 ;; This function uses a non-reentrant model
  6058 ;;
  6059                           
  6060                           	psect	text15
  6061  003F5E                     __ptext15:
  6062                           	callstack 0
  6063  003F5E                     _strlen:
  6064                           	callstack 24
  6065  003F5E  C001  F003         	movff	strlen@s,strlen@a
  6066  003F62  C002  F004         	movff	strlen@s+1,strlen@a+1
  6067  003F66  EFB7  F01F         	goto	l3207
  6068  003F6A                     l3205:
  6069  003F6A  4A01               	infsnz	strlen@s^0,f,c
  6070  003F6C  2A02               	incf	(strlen@s+1)^0,f,c
  6071  003F6E                     l3207:
  6072  003F6E  C001  FFD9         	movff	strlen@s,fsr2l
  6073  003F72  C002  FFDA         	movff	strlen@s+1,fsr2h
  6074  003F76  50DF               	movf	indf2,w,c
  6075  003F78  A4D8               	btfss	status,2,c
  6076  003F7A  EFC1  F01F         	goto	u3261
  6077  003F7E  EFC3  F01F         	goto	u3260
  6078  003F82                     u3261:
  6079  003F82  EFB5  F01F         	goto	l3205
  6080  003F86                     u3260:
  6081  003F86  5003               	movf	strlen@a^0,w,c
  6082  003F88  5C01               	subwf	strlen@s^0,w,c
  6083  003F8A  6E01               	movwf	?_strlen^0,c
  6084  003F8C  5004               	movf	(strlen@a+1)^0,w,c
  6085  003F8E  5802               	subwfb	(strlen@s+1)^0,w,c
  6086  003F90  6E02               	movwf	(?_strlen+1)^0,c
  6087  003F92  0012               	return		;funcret
  6088  003F94                     __end_of_strlen:
  6089                           	callstack 0
  6090                           
  6091 ;; *************** function _fputs *****************
  6092 ;; Defined at:
  6093 ;;		line 8 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  6094 ;; Parameters:    Size  Location     Type
  6095 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6096 ;;		 -> dbuf(80), 
  6097 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6098 ;;		 -> sprintf@f(6), 
  6099 ;; Auto vars:     Size  Location     Type
  6100 ;;  i               2   14[COMRAM] int 
  6101 ;;  c               1   13[COMRAM] unsigned char 
  6102 ;; Return value:  Size  Location     Type
  6103 ;;                  2    9[COMRAM] int 
  6104 ;; Registers used:
  6105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6106 ;; Tracked objects:
  6107 ;;		On entry : 0/0
  6108 ;;		On exit  : 0/0
  6109 ;;		Unchanged: 0/0
  6110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6111 ;;      Params:         4       0       0       0       0       0       0
  6112 ;;      Locals:         3       0       0       0       0       0       0
  6113 ;;      Temps:          0       0       0       0       0       0       0
  6114 ;;      Totals:         7       0       0       0       0       0       0
  6115 ;;Total ram usage:        7 bytes
  6116 ;; Hardware stack levels used:    1
  6117 ;; Hardware stack levels required when called:    2
  6118 ;; This function calls:
  6119 ;;		_fputc
  6120 ;; This function is called by:
  6121 ;;		_pad
  6122 ;; This function uses a non-reentrant model
  6123 ;;
  6124                           
  6125                           	psect	text16
  6126  003E72                     __ptext16:
  6127                           	callstack 0
  6128  003E72                     _fputs:
  6129                           	callstack 22
  6130  003E72  0E00               	movlw	0
  6131  003E74  6E10               	movwf	(fputs@i+1)^0,c
  6132  003E76  0E00               	movlw	0
  6133  003E78  6E0F               	movwf	fputs@i^0,c
  6134  003E7A  EF4A  F01F         	goto	l3201
  6135  003E7E                     l3197:
  6136  003E7E  C00E  F001         	movff	fputs@c,fputc@c
  6137  003E82  6A02               	clrf	(fputc@c+1)^0,c
  6138  003E84  C00C  F003         	movff	fputs@fp,fputc@fp
  6139  003E88  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6140  003E8C  EC35  F01B         	call	_fputc	;wreg free
  6141  003E90  4A0F               	infsnz	fputs@i^0,f,c
  6142  003E92  2A10               	incf	(fputs@i+1)^0,f,c
  6143  003E94                     l3201:
  6144  003E94  500F               	movf	fputs@i^0,w,c
  6145  003E96  240A               	addwf	fputs@s^0,w,c
  6146  003E98  6ED9               	movwf	fsr2l,c
  6147  003E9A  5010               	movf	(fputs@i+1)^0,w,c
  6148  003E9C  200B               	addwfc	(fputs@s+1)^0,w,c
  6149  003E9E  6EDA               	movwf	fsr2h,c
  6150  003EA0  50DF               	movf	indf2,w,c
  6151  003EA2  6E0E               	movwf	fputs@c^0,c
  6152  003EA4  500E               	movf	fputs@c^0,w,c
  6153  003EA6  A4D8               	btfss	status,2,c
  6154  003EA8  EF58  F01F         	goto	u3251
  6155  003EAC  EF5A  F01F         	goto	u3250
  6156  003EB0                     u3251:
  6157  003EB0  EF3F  F01F         	goto	l3197
  6158  003EB4                     u3250:
  6159  003EB4  0012               	return		;funcret
  6160  003EB6                     __end_of_fputs:
  6161                           	callstack 0
  6162                           
  6163 ;; *************** function _fputc *****************
  6164 ;; Defined at:
  6165 ;;		line 8 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  6166 ;; Parameters:    Size  Location     Type
  6167 ;;  c               2    0[COMRAM] int 
  6168 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6169 ;;		 -> sprintf@f(6), 
  6170 ;; Auto vars:     Size  Location     Type
  6171 ;;		None
  6172 ;; Return value:  Size  Location     Type
  6173 ;;                  2    0[COMRAM] int 
  6174 ;; Registers used:
  6175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6176 ;; Tracked objects:
  6177 ;;		On entry : 0/0
  6178 ;;		On exit  : 0/0
  6179 ;;		Unchanged: 0/0
  6180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6181 ;;      Params:         4       0       0       0       0       0       0
  6182 ;;      Locals:         0       0       0       0       0       0       0
  6183 ;;      Temps:          5       0       0       0       0       0       0
  6184 ;;      Totals:         9       0       0       0       0       0       0
  6185 ;;Total ram usage:        9 bytes
  6186 ;; Hardware stack levels used:    1
  6187 ;; Hardware stack levels required when called:    1
  6188 ;; This function calls:
  6189 ;;		_putch
  6190 ;; This function is called by:
  6191 ;;		_pad
  6192 ;;		_vfpfcnvrt
  6193 ;;		_fputs
  6194 ;; This function uses a non-reentrant model
  6195 ;;
  6196                           
  6197                           	psect	text17
  6198  00366A                     __ptext17:
  6199                           	callstack 0
  6200  00366A                     _fputc:
  6201                           	callstack 25
  6202  00366A  5003               	movf	fputc@fp^0,w,c
  6203  00366C  1004               	iorwf	(fputc@fp+1)^0,w,c
  6204  00366E  B4D8               	btfsc	status,2,c
  6205  003670  EF3C  F01B         	goto	u2821
  6206  003674  EF3E  F01B         	goto	u2820
  6207  003678                     u2821:
  6208  003678  EF47  F01B         	goto	l2983
  6209  00367C                     u2820:
  6210  00367C  5003               	movf	fputc@fp^0,w,c
  6211  00367E  1004               	iorwf	(fputc@fp+1)^0,w,c
  6212  003680  A4D8               	btfss	status,2,c
  6213  003682  EF45  F01B         	goto	u2831
  6214  003686  EF47  F01B         	goto	u2830
  6215  00368A                     u2831:
  6216  00368A  EF4C  F01B         	goto	l2985
  6217  00368E                     u2830:
  6218  00368E                     l2983:
  6219  00368E  5001               	movf	fputc@c^0,w,c
  6220  003690  EC24  F020         	call	_putch
  6221  003694  EF99  F01B         	goto	l1134
  6222  003698                     l2985:
  6223  003698  EE20 F004          	lfsr	2,4
  6224  00369C  5003               	movf	fputc@fp^0,w,c
  6225  00369E  26D9               	addwf	fsr2l,f,c
  6226  0036A0  5004               	movf	(fputc@fp+1)^0,w,c
  6227  0036A2  22DA               	addwfc	fsr2h,f,c
  6228  0036A4  50DE               	movf	postinc2,w,c
  6229  0036A6  10DE               	iorwf	postinc2,w,c
  6230  0036A8  B4D8               	btfsc	status,2,c
  6231  0036AA  EF59  F01B         	goto	u2841
  6232  0036AE  EF5B  F01B         	goto	u2840
  6233  0036B2                     u2841:
  6234  0036B2  EF76  F01B         	goto	l2989
  6235  0036B6                     u2840:
  6236  0036B6  EE20 F004          	lfsr	2,4
  6237  0036BA  5003               	movf	fputc@fp^0,w,c
  6238  0036BC  26D9               	addwf	fsr2l,f,c
  6239  0036BE  5004               	movf	(fputc@fp+1)^0,w,c
  6240  0036C0  22DA               	addwfc	fsr2h,f,c
  6241  0036C2  EE10 F002          	lfsr	1,2
  6242  0036C6  5003               	movf	fputc@fp^0,w,c
  6243  0036C8  26E1               	addwf	fsr1l,f,c
  6244  0036CA  5004               	movf	(fputc@fp+1)^0,w,c
  6245  0036CC  22E2               	addwfc	fsr1h,f,c
  6246  0036CE  50DE               	movf	postinc2,w,c
  6247  0036D0  5CE6               	subwf	postinc1,w,c
  6248  0036D2  50E6               	movf	postinc1,w,c
  6249  0036D4  0A80               	xorlw	128
  6250  0036D6  6E09               	movwf	(??_fputc+4)^0,c
  6251  0036D8  50DE               	movf	postinc2,w,c
  6252  0036DA  0A80               	xorlw	128
  6253  0036DC  5809               	subwfb	(??_fputc+4)^0,w,c
  6254  0036DE  B0D8               	btfsc	status,0,c
  6255  0036E0  EF74  F01B         	goto	u2851
  6256  0036E4  EF76  F01B         	goto	u2850
  6257  0036E8                     u2851:
  6258  0036E8  EF99  F01B         	goto	l1134
  6259  0036EC                     u2850:
  6260  0036EC                     l2989:
  6261  0036EC  EE20 F002          	lfsr	2,2
  6262  0036F0  5003               	movf	fputc@fp^0,w,c
  6263  0036F2  26D9               	addwf	fsr2l,f,c
  6264  0036F4  5004               	movf	(fputc@fp+1)^0,w,c
  6265  0036F6  22DA               	addwfc	fsr2h,f,c
  6266  0036F8  CFDE F005          	movff	postinc2,??_fputc
  6267  0036FC  CFDD F006          	movff	postdec2,??_fputc+1
  6268  003700  C003  FFD9         	movff	fputc@fp,fsr2l
  6269  003704  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6270  003708  CFDE F007          	movff	postinc2,??_fputc+2
  6271  00370C  CFDD F008          	movff	postdec2,??_fputc+3
  6272  003710  5005               	movf	??_fputc^0,w,c
  6273  003712  2407               	addwf	(??_fputc+2)^0,w,c
  6274  003714  6ED9               	movwf	fsr2l,c
  6275  003716  5006               	movf	(??_fputc+1)^0,w,c
  6276  003718  2008               	addwfc	(??_fputc+3)^0,w,c
  6277  00371A  6EDA               	movwf	fsr2h,c
  6278  00371C  C001  FFDF         	movff	fputc@c,indf2
  6279  003720  EE20 F002          	lfsr	2,2
  6280  003724  5003               	movf	fputc@fp^0,w,c
  6281  003726  26D9               	addwf	fsr2l,f,c
  6282  003728  5004               	movf	(fputc@fp+1)^0,w,c
  6283  00372A  22DA               	addwfc	fsr2h,f,c
  6284  00372C  2ADE               	incf	postinc2,f,c
  6285  00372E  0E00               	movlw	0
  6286  003730  22DD               	addwfc	postdec2,f,c
  6287  003732                     l1134:
  6288  003732  0012               	return		;funcret
  6289  003734                     __end_of_fputc:
  6290                           	callstack 0
  6291                           
  6292 ;; *************** function _putch *****************
  6293 ;; Defined at:
  6294 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\putch.c"
  6295 ;; Parameters:    Size  Location     Type
  6296 ;;  c               1    wreg     unsigned char 
  6297 ;; Auto vars:     Size  Location     Type
  6298 ;;  c               1    0[COMRAM] unsigned char 
  6299 ;; Return value:  Size  Location     Type
  6300 ;;                  1    wreg      void 
  6301 ;; Registers used:
  6302 ;;		wreg
  6303 ;; Tracked objects:
  6304 ;;		On entry : 0/0
  6305 ;;		On exit  : 0/0
  6306 ;;		Unchanged: 0/0
  6307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6308 ;;      Params:         0       0       0       0       0       0       0
  6309 ;;      Locals:         0       0       0       0       0       0       0
  6310 ;;      Temps:          0       0       0       0       0       0       0
  6311 ;;      Totals:         0       0       0       0       0       0       0
  6312 ;;Total ram usage:        0 bytes
  6313 ;; Hardware stack levels used:    1
  6314 ;; This function calls:
  6315 ;;		Nothing
  6316 ;; This function is called by:
  6317 ;;		_fputc
  6318 ;; This function uses a non-reentrant model
  6319 ;;
  6320                           
  6321                           	psect	text18
  6322  004048                     __ptext18:
  6323                           	callstack 0
  6324  004048                     _putch:
  6325                           	callstack 25
  6326  004048  0012               	return		;funcret
  6327  00404A                     __end_of_putch:
  6328                           	callstack 0
  6329                           
  6330 ;; *************** function _floorf *****************
  6331 ;; Defined at:
  6332 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\floorf.c"
  6333 ;; Parameters:    Size  Location     Type
  6334 ;;  x               4   25[COMRAM] float 
  6335 ;; Auto vars:     Size  Location     Type
  6336 ;;  u               4   41[COMRAM] struct .
  6337 ;;  m               4   35[COMRAM] unsigned long 
  6338 ;;  e               2   39[COMRAM] int 
  6339 ;; Return value:  Size  Location     Type
  6340 ;;                  4   25[COMRAM] float 
  6341 ;; Registers used:
  6342 ;;		wreg, status,2, status,0
  6343 ;; Tracked objects:
  6344 ;;		On entry : 0/0
  6345 ;;		On exit  : 0/0
  6346 ;;		Unchanged: 0/0
  6347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6348 ;;      Params:         4       0       0       0       0       0       0
  6349 ;;      Locals:        10       0       0       0       0       0       0
  6350 ;;      Temps:          6       0       0       0       0       0       0
  6351 ;;      Totals:        20       0       0       0       0       0       0
  6352 ;;Total ram usage:       20 bytes
  6353 ;; Hardware stack levels used:    1
  6354 ;; This function calls:
  6355 ;;		Nothing
  6356 ;; This function is called by:
  6357 ;;		_efgtoa
  6358 ;; This function uses a non-reentrant model
  6359 ;;
  6360                           
  6361                           	psect	text19
  6362  0029B6                     __ptext19:
  6363                           	callstack 0
  6364  0029B6                     _floorf:
  6365                           	callstack 25
  6366  0029B6  C0D5  F02A         	movff	floorf@F524,floorf@u
  6367  0029BA  C0D6  F02B         	movff	floorf@F524+1,floorf@u+1
  6368  0029BE  C0D7  F02C         	movff	floorf@F524+2,floorf@u+2
  6369  0029C2  C0D8  F02D         	movff	floorf@F524+3,floorf@u+3
  6370  0029C6  C01A  F02A         	movff	floorf@x,floorf@u
  6371  0029CA  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  6372  0029CE  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  6373  0029D2  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  6374  0029D6  0E81               	movlw	129
  6375  0029D8  6E1E               	movwf	??_floorf^0,c
  6376  0029DA  0EFF               	movlw	255
  6377  0029DC  6E1F               	movwf	(??_floorf+1)^0,c
  6378  0029DE  C02A  F020         	movff	floorf@u,??_floorf+2
  6379  0029E2  C02B  F021         	movff	floorf@u+1,??_floorf+3
  6380  0029E6  C02C  F022         	movff	floorf@u+2,??_floorf+4
  6381  0029EA  C02D  F023         	movff	floorf@u+3,??_floorf+5
  6382  0029EE  0E18               	movlw	24
  6383  0029F0  EFFF  F014         	goto	u4150
  6384  0029F4                     u4155:
  6385  0029F4  90D8               	bcf	status,0,c
  6386  0029F6  3223               	rrcf	(??_floorf+5)^0,f,c
  6387  0029F8  3222               	rrcf	(??_floorf+4)^0,f,c
  6388  0029FA  3221               	rrcf	(??_floorf+3)^0,f,c
  6389  0029FC  3220               	rrcf	(??_floorf+2)^0,f,c
  6390  0029FE                     u4150:
  6391  0029FE  2EE8               	decfsz	wreg,f,c
  6392  002A00  EFFA  F014         	goto	u4155
  6393  002A04  5020               	movf	(??_floorf+2)^0,w,c
  6394  002A06  241E               	addwf	??_floorf^0,w,c
  6395  002A08  6E28               	movwf	floorf@e^0,c
  6396  002A0A  0E00               	movlw	0
  6397  002A0C  201F               	addwfc	(??_floorf+1)^0,w,c
  6398  002A0E  6E29               	movwf	(floorf@e+1)^0,c
  6399  002A10  BE29               	btfsc	(floorf@e+1)^0,7,c
  6400  002A12  EF14  F015         	goto	u4161
  6401  002A16  5029               	movf	(floorf@e+1)^0,w,c
  6402  002A18  E109               	bnz	u4160
  6403  002A1A  0E17               	movlw	23
  6404  002A1C  5C28               	subwf	floorf@e^0,w,c
  6405  002A1E  A0D8               	btfss	status,0,c
  6406  002A20  EF14  F015         	goto	u4161
  6407  002A24  EF16  F015         	goto	u4160
  6408  002A28                     u4161:
  6409  002A28  EF20  F015         	goto	l3731
  6410  002A2C                     u4160:
  6411  002A2C                     l3729:
  6412  002A2C  C01A  F01A         	movff	floorf@x,?_floorf
  6413  002A30  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  6414  002A34  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  6415  002A38  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  6416  002A3C  EFE3  F015         	goto	l1095
  6417  002A40                     l3731:
  6418  002A40  BE29               	btfsc	(floorf@e+1)^0,7,c
  6419  002A42  EF25  F015         	goto	u4171
  6420  002A46  EF27  F015         	goto	u4170
  6421  002A4A                     u4171:
  6422  002A4A  EF97  F015         	goto	l3741
  6423  002A4E                     u4170:
  6424  002A4E  C028  F01E         	movff	floorf@e,??_floorf
  6425  002A52  0EFF               	movlw	255
  6426  002A54  6E1F               	movwf	(??_floorf+1)^0,c
  6427  002A56  0EFF               	movlw	255
  6428  002A58  6E20               	movwf	(??_floorf+2)^0,c
  6429  002A5A  0E7F               	movlw	127
  6430  002A5C  6E21               	movwf	(??_floorf+3)^0,c
  6431  002A5E  0E00               	movlw	0
  6432  002A60  6E22               	movwf	(??_floorf+4)^0,c
  6433  002A62                     u4185:
  6434  002A62  661E               	tstfsz	??_floorf^0,c
  6435  002A64  EF36  F015         	goto	u4186
  6436  002A68  EF3E  F015         	goto	u4187
  6437  002A6C                     u4186:
  6438  002A6C  3422               	rlcf	(??_floorf+4)^0,w,c
  6439  002A6E  3222               	rrcf	(??_floorf+4)^0,f,c
  6440  002A70  3221               	rrcf	(??_floorf+3)^0,f,c
  6441  002A72  3220               	rrcf	(??_floorf+2)^0,f,c
  6442  002A74  321F               	rrcf	(??_floorf+1)^0,f,c
  6443  002A76  2E1E               	decfsz	??_floorf^0,f,c
  6444  002A78  EF31  F015         	goto	u4185
  6445  002A7C                     u4187:
  6446  002A7C  C01F  F024         	movff	??_floorf+1,floorf@m
  6447  002A80  C020  F025         	movff	??_floorf+2,floorf@m+1
  6448  002A84  C021  F026         	movff	??_floorf+3,floorf@m+2
  6449  002A88  C022  F027         	movff	??_floorf+4,floorf@m+3
  6450  002A8C  5024               	movf	floorf@m^0,w,c
  6451  002A8E  142A               	andwf	floorf@u^0,w,c
  6452  002A90  6E1E               	movwf	??_floorf^0,c
  6453  002A92  5025               	movf	(floorf@m+1)^0,w,c
  6454  002A94  142B               	andwf	(floorf@u+1)^0,w,c
  6455  002A96  6E1F               	movwf	(??_floorf+1)^0,c
  6456  002A98  5026               	movf	(floorf@m+2)^0,w,c
  6457  002A9A  142C               	andwf	(floorf@u+2)^0,w,c
  6458  002A9C  6E20               	movwf	(??_floorf+2)^0,c
  6459  002A9E  5027               	movf	(floorf@m+3)^0,w,c
  6460  002AA0  142D               	andwf	(floorf@u+3)^0,w,c
  6461  002AA2  6E21               	movwf	(??_floorf+3)^0,c
  6462  002AA4  501E               	movf	??_floorf^0,w,c
  6463  002AA6  101F               	iorwf	(??_floorf+1)^0,w,c
  6464  002AA8  1020               	iorwf	(??_floorf+2)^0,w,c
  6465  002AAA  1021               	iorwf	(??_floorf+3)^0,w,c
  6466  002AAC  A4D8               	btfss	status,2,c
  6467  002AAE  EF5B  F015         	goto	u4191
  6468  002AB2  EF5D  F015         	goto	u4190
  6469  002AB6                     u4191:
  6470  002AB6  EF5F  F015         	goto	l3737
  6471  002ABA                     u4190:
  6472  002ABA  EF16  F015         	goto	l3729
  6473  002ABE                     l3737:
  6474  002ABE  C02A  F01E         	movff	floorf@u,??_floorf
  6475  002AC2  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  6476  002AC6  C02C  F020         	movff	floorf@u+2,??_floorf+2
  6477  002ACA  C02D  F021         	movff	floorf@u+3,??_floorf+3
  6478  002ACE  0E20               	movlw	32
  6479  002AD0  EF6F  F015         	goto	u4200
  6480  002AD4                     u4205:
  6481  002AD4  90D8               	bcf	status,0,c
  6482  002AD6  3221               	rrcf	(??_floorf+3)^0,f,c
  6483  002AD8  3220               	rrcf	(??_floorf+2)^0,f,c
  6484  002ADA  321F               	rrcf	(??_floorf+1)^0,f,c
  6485  002ADC  321E               	rrcf	??_floorf^0,f,c
  6486  002ADE                     u4200:
  6487  002ADE  2EE8               	decfsz	wreg,f,c
  6488  002AE0  EF6A  F015         	goto	u4205
  6489  002AE4  501E               	movf	??_floorf^0,w,c
  6490  002AE6  101F               	iorwf	(??_floorf+1)^0,w,c
  6491  002AE8  1020               	iorwf	(??_floorf+2)^0,w,c
  6492  002AEA  1021               	iorwf	(??_floorf+3)^0,w,c
  6493  002AEC  B4D8               	btfsc	status,2,c
  6494  002AEE  EF7B  F015         	goto	u4211
  6495  002AF2  EF7D  F015         	goto	u4210
  6496  002AF6                     u4211:
  6497  002AF6  EF85  F015         	goto	l1098
  6498  002AFA                     u4210:
  6499  002AFA  5024               	movf	floorf@m^0,w,c
  6500  002AFC  262A               	addwf	floorf@u^0,f,c
  6501  002AFE  5025               	movf	(floorf@m+1)^0,w,c
  6502  002B00  222B               	addwfc	(floorf@u+1)^0,f,c
  6503  002B02  5026               	movf	(floorf@m+2)^0,w,c
  6504  002B04  222C               	addwfc	(floorf@u+2)^0,f,c
  6505  002B06  5027               	movf	(floorf@m+3)^0,w,c
  6506  002B08  222D               	addwfc	(floorf@u+3)^0,f,c
  6507  002B0A                     l1098:
  6508  002B0A  1C24               	comf	floorf@m^0,w,c
  6509  002B0C  6E1E               	movwf	??_floorf^0,c
  6510  002B0E  1C25               	comf	(floorf@m+1)^0,w,c
  6511  002B10  6E1F               	movwf	(??_floorf+1)^0,c
  6512  002B12  1C26               	comf	(floorf@m+2)^0,w,c
  6513  002B14  6E20               	movwf	(??_floorf+2)^0,c
  6514  002B16  1C27               	comf	(floorf@m+3)^0,w,c
  6515  002B18  6E21               	movwf	(??_floorf+3)^0,c
  6516  002B1A  501E               	movf	??_floorf^0,w,c
  6517  002B1C  162A               	andwf	floorf@u^0,f,c
  6518  002B1E  501F               	movf	(??_floorf+1)^0,w,c
  6519  002B20  162B               	andwf	(floorf@u+1)^0,f,c
  6520  002B22  5020               	movf	(??_floorf+2)^0,w,c
  6521  002B24  162C               	andwf	(floorf@u+2)^0,f,c
  6522  002B26  5021               	movf	(??_floorf+3)^0,w,c
  6523  002B28  162D               	andwf	(floorf@u+3)^0,f,c
  6524  002B2A  EFDB  F015         	goto	l3749
  6525  002B2E                     l3741:
  6526  002B2E  C02A  F01E         	movff	floorf@u,??_floorf
  6527  002B32  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  6528  002B36  C02C  F020         	movff	floorf@u+2,??_floorf+2
  6529  002B3A  C02D  F021         	movff	floorf@u+3,??_floorf+3
  6530  002B3E  0E20               	movlw	32
  6531  002B40  EFA7  F015         	goto	u4220
  6532  002B44                     u4225:
  6533  002B44  90D8               	bcf	status,0,c
  6534  002B46  3221               	rrcf	(??_floorf+3)^0,f,c
  6535  002B48  3220               	rrcf	(??_floorf+2)^0,f,c
  6536  002B4A  321F               	rrcf	(??_floorf+1)^0,f,c
  6537  002B4C  321E               	rrcf	??_floorf^0,f,c
  6538  002B4E                     u4220:
  6539  002B4E  2EE8               	decfsz	wreg,f,c
  6540  002B50  EFA2  F015         	goto	u4225
  6541  002B54  501E               	movf	??_floorf^0,w,c
  6542  002B56  101F               	iorwf	(??_floorf+1)^0,w,c
  6543  002B58  1020               	iorwf	(??_floorf+2)^0,w,c
  6544  002B5A  1021               	iorwf	(??_floorf+3)^0,w,c
  6545  002B5C  A4D8               	btfss	status,2,c
  6546  002B5E  EFB3  F015         	goto	u4231
  6547  002B62  EFB5  F015         	goto	u4230
  6548  002B66                     u4231:
  6549  002B66  EFBF  F015         	goto	l3745
  6550  002B6A                     u4230:
  6551  002B6A  0E00               	movlw	0
  6552  002B6C  6E2A               	movwf	floorf@u^0,c
  6553  002B6E  0E00               	movlw	0
  6554  002B70  6E2B               	movwf	(floorf@u+1)^0,c
  6555  002B72  0E00               	movlw	0
  6556  002B74  6E2C               	movwf	(floorf@u+2)^0,c
  6557  002B76  0E00               	movlw	0
  6558  002B78  6E2D               	movwf	(floorf@u+3)^0,c
  6559  002B7A  EFDB  F015         	goto	l3749
  6560  002B7E                     l3745:
  6561  002B7E  90D8               	bcf	status,0,c
  6562  002B80  342A               	rlcf	floorf@u^0,w,c
  6563  002B82  6E1E               	movwf	??_floorf^0,c
  6564  002B84  342B               	rlcf	(floorf@u+1)^0,w,c
  6565  002B86  6E1F               	movwf	(??_floorf+1)^0,c
  6566  002B88  342C               	rlcf	(floorf@u+2)^0,w,c
  6567  002B8A  6E20               	movwf	(??_floorf+2)^0,c
  6568  002B8C  342D               	rlcf	(floorf@u+3)^0,w,c
  6569  002B8E  6E21               	movwf	(??_floorf+3)^0,c
  6570  002B90  501E               	movf	??_floorf^0,w,c
  6571  002B92  101F               	iorwf	(??_floorf+1)^0,w,c
  6572  002B94  1020               	iorwf	(??_floorf+2)^0,w,c
  6573  002B96  1021               	iorwf	(??_floorf+3)^0,w,c
  6574  002B98  B4D8               	btfsc	status,2,c
  6575  002B9A  EFD1  F015         	goto	u4241
  6576  002B9E  EFD3  F015         	goto	u4240
  6577  002BA2                     u4241:
  6578  002BA2  EFDB  F015         	goto	l3749
  6579  002BA6                     u4240:
  6580  002BA6  0E00               	movlw	0
  6581  002BA8  6E2A               	movwf	floorf@u^0,c
  6582  002BAA  0E00               	movlw	0
  6583  002BAC  6E2B               	movwf	(floorf@u+1)^0,c
  6584  002BAE  0E80               	movlw	128
  6585  002BB0  6E2C               	movwf	(floorf@u+2)^0,c
  6586  002BB2  0EBF               	movlw	191
  6587  002BB4  6E2D               	movwf	(floorf@u+3)^0,c
  6588  002BB6                     l3749:
  6589  002BB6  C02A  F01A         	movff	floorf@u,?_floorf
  6590  002BBA  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  6591  002BBE  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  6592  002BC2  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  6593  002BC6                     l1095:
  6594  002BC6  0012               	return		;funcret
  6595  002BC8                     __end_of_floorf:
  6596                           	callstack 0
  6597                           
  6598 ;; *************** function ___fpclassifyf *****************
  6599 ;; Defined at:
  6600 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  6601 ;; Parameters:    Size  Location     Type
  6602 ;;  x               4    0[COMRAM] float 
  6603 ;; Auto vars:     Size  Location     Type
  6604 ;;  u               4   10[COMRAM] struct .
  6605 ;;  e               2    8[COMRAM] int 
  6606 ;; Return value:  Size  Location     Type
  6607 ;;                  2    0[COMRAM] int 
  6608 ;; Registers used:
  6609 ;;		wreg, status,2, status,0
  6610 ;; Tracked objects:
  6611 ;;		On entry : 0/0
  6612 ;;		On exit  : 0/0
  6613 ;;		Unchanged: 0/0
  6614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6615 ;;      Params:         4       0       0       0       0       0       0
  6616 ;;      Locals:         6       0       0       0       0       0       0
  6617 ;;      Temps:          4       0       0       0       0       0       0
  6618 ;;      Totals:        14       0       0       0       0       0       0
  6619 ;;Total ram usage:       14 bytes
  6620 ;; Hardware stack levels used:    1
  6621 ;; This function calls:
  6622 ;;		Nothing
  6623 ;; This function is called by:
  6624 ;;		_efgtoa
  6625 ;; This function uses a non-reentrant model
  6626 ;;
  6627                           
  6628                           	psect	text20
  6629  003496                     __ptext20:
  6630                           	callstack 0
  6631  003496                     ___fpclassifyf:
  6632                           	callstack 25
  6633  003496  C0D9  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  6634  00349A  C0DA  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  6635  00349E  C0DB  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  6636  0034A2  C0DC  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  6637  0034A6  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  6638  0034AA  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6639  0034AE  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6640  0034B2  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6641  0034B6  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6642  0034BA  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6643  0034BE  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6644  0034C2  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6645  0034C6  0E18               	movlw	24
  6646  0034C8  EF6B  F01A         	goto	u4030
  6647  0034CC                     u4035:
  6648  0034CC  90D8               	bcf	status,0,c
  6649  0034CE  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  6650  0034D0  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  6651  0034D2  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  6652  0034D4  3205               	rrcf	??___fpclassifyf^0,f,c
  6653  0034D6                     u4030:
  6654  0034D6  2EE8               	decfsz	wreg,f,c
  6655  0034D8  EF66  F01A         	goto	u4035
  6656  0034DC  5005               	movf	??___fpclassifyf^0,w,c
  6657  0034DE  6E09               	movwf	___fpclassifyf@e^0,c
  6658  0034E0  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  6659  0034E2  5009               	movf	___fpclassifyf@e^0,w,c
  6660  0034E4  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6661  0034E6  A4D8               	btfss	status,2,c
  6662  0034E8  EF78  F01A         	goto	u4041
  6663  0034EC  EF7A  F01A         	goto	u4040
  6664  0034F0                     u4041:
  6665  0034F0  EF9A  F01A         	goto	l3701
  6666  0034F4                     u4040:
  6667  0034F4  90D8               	bcf	status,0,c
  6668  0034F6  340B               	rlcf	___fpclassifyf@u^0,w,c
  6669  0034F8  6E05               	movwf	??___fpclassifyf^0,c
  6670  0034FA  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6671  0034FC  6E06               	movwf	(??___fpclassifyf+1)^0,c
  6672  0034FE  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6673  003500  6E07               	movwf	(??___fpclassifyf+2)^0,c
  6674  003502  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6675  003504  6E08               	movwf	(??___fpclassifyf+3)^0,c
  6676  003506  5005               	movf	??___fpclassifyf^0,w,c
  6677  003508  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6678  00350A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6679  00350C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6680  00350E  A4D8               	btfss	status,2,c
  6681  003510  EF8C  F01A         	goto	u4051
  6682  003514  EF8E  F01A         	goto	u4050
  6683  003518                     u4051:
  6684  003518  EF94  F01A         	goto	l3697
  6685  00351C                     u4050:
  6686  00351C  0E00               	movlw	0
  6687  00351E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6688  003520  0E02               	movlw	2
  6689  003522  6E01               	movwf	?___fpclassifyf^0,c
  6690  003524  EFC9  F01A         	goto	l1057
  6691  003528                     l3697:
  6692  003528  0E00               	movlw	0
  6693  00352A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6694  00352C  0E03               	movlw	3
  6695  00352E  6E01               	movwf	?___fpclassifyf^0,c
  6696  003530  EFC9  F01A         	goto	l1057
  6697  003534                     l3701:
  6698  003534  2809               	incf	___fpclassifyf@e^0,w,c
  6699  003536  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6700  003538  A4D8               	btfss	status,2,c
  6701  00353A  EFA1  F01A         	goto	u4061
  6702  00353E  EFA3  F01A         	goto	u4060
  6703  003542                     u4061:
  6704  003542  EFC5  F01A         	goto	l3707
  6705  003546                     u4060:
  6706  003546  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6707  00354A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6708  00354E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6709  003552  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6710  003556  0E09               	movlw	9
  6711  003558                     u4075:
  6712  003558  90D8               	bcf	status,0,c
  6713  00355A  3605               	rlcf	??___fpclassifyf^0,f,c
  6714  00355C  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  6715  00355E  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  6716  003560  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  6717  003562  2EE8               	decfsz	wreg,f,c
  6718  003564  EFAC  F01A         	goto	u4075
  6719  003568  5005               	movf	??___fpclassifyf^0,w,c
  6720  00356A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6721  00356C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6722  00356E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6723  003570  B4D8               	btfsc	status,2,c
  6724  003572  EFBD  F01A         	goto	u4081
  6725  003576  EFC0  F01A         	goto	u4080
  6726  00357A                     u4081:
  6727  00357A  0E01               	movlw	1
  6728  00357C  EFC1  F01A         	goto	u4090
  6729  003580                     u4080:
  6730  003580  0E00               	movlw	0
  6731  003582                     u4090:
  6732  003582  6E01               	movwf	?___fpclassifyf^0,c
  6733  003584  6A02               	clrf	(?___fpclassifyf+1)^0,c
  6734  003586  EFC9  F01A         	goto	l1057
  6735  00358A                     l3707:
  6736  00358A  0E00               	movlw	0
  6737  00358C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6738  00358E  0E04               	movlw	4
  6739  003590  6E01               	movwf	?___fpclassifyf^0,c
  6740  003592                     l1057:
  6741  003592  0012               	return		;funcret
  6742  003594                     __end_of___fpclassifyf:
  6743                           	callstack 0
  6744                           
  6745 ;; *************** function ___fltol *****************
  6746 ;; Defined at:
  6747 ;;		line 43 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\fltol.c"
  6748 ;; Parameters:    Size  Location     Type
  6749 ;;  f1              4   25[COMRAM] int 
  6750 ;; Auto vars:     Size  Location     Type
  6751 ;;  exp1            1   34[COMRAM] unsigned char 
  6752 ;;  sign1           1   33[COMRAM] unsigned char 
  6753 ;; Return value:  Size  Location     Type
  6754 ;;                  4   25[COMRAM] long 
  6755 ;; Registers used:
  6756 ;;		wreg, status,2, status,0
  6757 ;; Tracked objects:
  6758 ;;		On entry : 0/0
  6759 ;;		On exit  : 0/0
  6760 ;;		Unchanged: 0/0
  6761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6762 ;;      Params:         4       0       0       0       0       0       0
  6763 ;;      Locals:         2       0       0       0       0       0       0
  6764 ;;      Temps:          4       0       0       0       0       0       0
  6765 ;;      Totals:        10       0       0       0       0       0       0
  6766 ;;Total ram usage:       10 bytes
  6767 ;; Hardware stack levels used:    1
  6768 ;; This function calls:
  6769 ;;		Nothing
  6770 ;; This function is called by:
  6771 ;;		_esvaziar_tanque
  6772 ;;		_efgtoa
  6773 ;; This function uses a non-reentrant model
  6774 ;;
  6775                           
  6776                           	psect	text21
  6777  00328C                     __ptext21:
  6778                           	callstack 0
  6779  00328C                     ___fltol:
  6780                           	callstack 25
  6781  00328C  341C               	rlcf	(___fltol@f1+2)^0,w,c
  6782  00328E  341D               	rlcf	(___fltol@f1+3)^0,w,c
  6783  003290  6E23               	movwf	___fltol@exp1^0,c
  6784  003292  5023               	movf	___fltol@exp1^0,w,c
  6785  003294  A4D8               	btfss	status,2,c
  6786  003296  EF4F  F019         	goto	u3921
  6787  00329A  EF51  F019         	goto	u3920
  6788  00329E                     u3921:
  6789  00329E  EF5B  F019         	goto	l3629
  6790  0032A2                     u3920:
  6791  0032A2                     l3625:
  6792  0032A2  0E00               	movlw	0
  6793  0032A4  6E1A               	movwf	?___fltol^0,c
  6794  0032A6  0E00               	movlw	0
  6795  0032A8  6E1B               	movwf	(?___fltol+1)^0,c
  6796  0032AA  0E00               	movlw	0
  6797  0032AC  6E1C               	movwf	(?___fltol+2)^0,c
  6798  0032AE  0E00               	movlw	0
  6799  0032B0  6E1D               	movwf	(?___fltol+3)^0,c
  6800  0032B2  EFC8  F019         	goto	l498
  6801  0032B6                     l3629:
  6802  0032B6  C01A  F01E         	movff	___fltol@f1,??___fltol
  6803  0032BA  C01B  F01F         	movff	___fltol@f1+1,??___fltol+1
  6804  0032BE  C01C  F020         	movff	___fltol@f1+2,??___fltol+2
  6805  0032C2  C01D  F021         	movff	___fltol@f1+3,??___fltol+3
  6806  0032C6  0E20               	movlw	32
  6807  0032C8  EF6B  F019         	goto	u3930
  6808  0032CC                     u3935:
  6809  0032CC  90D8               	bcf	status,0,c
  6810  0032CE  3221               	rrcf	(??___fltol+3)^0,f,c
  6811  0032D0  3220               	rrcf	(??___fltol+2)^0,f,c
  6812  0032D2  321F               	rrcf	(??___fltol+1)^0,f,c
  6813  0032D4  321E               	rrcf	??___fltol^0,f,c
  6814  0032D6                     u3930:
  6815  0032D6  2EE8               	decfsz	wreg,f,c
  6816  0032D8  EF66  F019         	goto	u3935
  6817  0032DC  501E               	movf	??___fltol^0,w,c
  6818  0032DE  6E22               	movwf	___fltol@sign1^0,c
  6819  0032E0  8E1C               	bsf	(___fltol@f1+2)^0,7,c
  6820  0032E2  0EFF               	movlw	255
  6821  0032E4  161A               	andwf	___fltol@f1^0,f,c
  6822  0032E6  0EFF               	movlw	255
  6823  0032E8  161B               	andwf	(___fltol@f1+1)^0,f,c
  6824  0032EA  0EFF               	movlw	255
  6825  0032EC  161C               	andwf	(___fltol@f1+2)^0,f,c
  6826  0032EE  0E00               	movlw	0
  6827  0032F0  161D               	andwf	(___fltol@f1+3)^0,f,c
  6828  0032F2  0E96               	movlw	150
  6829  0032F4  5E23               	subwf	___fltol@exp1^0,f,c
  6830  0032F6  BE23               	btfsc	___fltol@exp1^0,7,c
  6831  0032F8  EF82  F019         	goto	u3940
  6832  0032FC  EF80  F019         	goto	u3941
  6833  003300                     u3941:
  6834  003300  EF98  F019         	goto	l3649
  6835  003304                     u3940:
  6836  003304  5023               	movf	___fltol@exp1^0,w,c
  6837  003306  0A80               	xorlw	128
  6838  003308  0F97               	addlw	151
  6839  00330A  B0D8               	btfsc	status,0,c
  6840  00330C  EF8A  F019         	goto	u3951
  6841  003310  EF8C  F019         	goto	u3950
  6842  003314                     u3951:
  6843  003314  EF8E  F019         	goto	l3645
  6844  003318                     u3950:
  6845  003318  EF51  F019         	goto	l3625
  6846  00331C                     l3645:
  6847  00331C  90D8               	bcf	status,0,c
  6848  00331E  321D               	rrcf	(___fltol@f1+3)^0,f,c
  6849  003320  321C               	rrcf	(___fltol@f1+2)^0,f,c
  6850  003322  321B               	rrcf	(___fltol@f1+1)^0,f,c
  6851  003324  321A               	rrcf	___fltol@f1^0,f,c
  6852  003326  3E23               	incfsz	___fltol@exp1^0,f,c
  6853  003328  EF8E  F019         	goto	l3645
  6854  00332C  EFB0  F019         	goto	l3659
  6855  003330                     l3649:
  6856  003330  0E1F               	movlw	31
  6857  003332  6423               	cpfsgt	___fltol@exp1^0,c
  6858  003334  EF9E  F019         	goto	u3961
  6859  003338  EFA0  F019         	goto	u3960
  6860  00333C                     u3961:
  6861  00333C  EFA8  F019         	goto	l3657
  6862  003340                     u3960:
  6863  003340  EF51  F019         	goto	l3625
  6864  003344                     l3655:
  6865  003344  90D8               	bcf	status,0,c
  6866  003346  361A               	rlcf	___fltol@f1^0,f,c
  6867  003348  361B               	rlcf	(___fltol@f1+1)^0,f,c
  6868  00334A  361C               	rlcf	(___fltol@f1+2)^0,f,c
  6869  00334C  361D               	rlcf	(___fltol@f1+3)^0,f,c
  6870  00334E  0623               	decf	___fltol@exp1^0,f,c
  6871  003350                     l3657:
  6872  003350  5023               	movf	___fltol@exp1^0,w,c
  6873  003352  A4D8               	btfss	status,2,c
  6874  003354  EFAE  F019         	goto	u3971
  6875  003358  EFB0  F019         	goto	u3970
  6876  00335C                     u3971:
  6877  00335C  EFA2  F019         	goto	l3655
  6878  003360                     u3970:
  6879  003360                     l3659:
  6880  003360  5022               	movf	___fltol@sign1^0,w,c
  6881  003362  B4D8               	btfsc	status,2,c
  6882  003364  EFB6  F019         	goto	u3981
  6883  003368  EFB8  F019         	goto	u3980
  6884  00336C                     u3981:
  6885  00336C  EFC0  F019         	goto	l3663
  6886  003370                     u3980:
  6887  003370  1E1D               	comf	(___fltol@f1+3)^0,f,c
  6888  003372  1E1C               	comf	(___fltol@f1+2)^0,f,c
  6889  003374  1E1B               	comf	(___fltol@f1+1)^0,f,c
  6890  003376  6C1A               	negf	___fltol@f1^0,c
  6891  003378  0E00               	movlw	0
  6892  00337A  221B               	addwfc	(___fltol@f1+1)^0,f,c
  6893  00337C  221C               	addwfc	(___fltol@f1+2)^0,f,c
  6894  00337E  221D               	addwfc	(___fltol@f1+3)^0,f,c
  6895  003380                     l3663:
  6896  003380  C01A  F01A         	movff	___fltol@f1,?___fltol
  6897  003384  C01B  F01B         	movff	___fltol@f1+1,?___fltol+1
  6898  003388  C01C  F01C         	movff	___fltol@f1+2,?___fltol+2
  6899  00338C  C01D  F01D         	movff	___fltol@f1+3,?___fltol+3
  6900  003390                     l498:
  6901  003390  0012               	return		;funcret
  6902  003392                     __end_of___fltol:
  6903                           	callstack 0
  6904                           
  6905 ;; *************** function ___flsub *****************
  6906 ;; Defined at:
  6907 ;;		line 245 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  6908 ;; Parameters:    Size  Location     Type
  6909 ;;  b               4   30[COMRAM] long 
  6910 ;;  a               4   34[COMRAM] long 
  6911 ;; Auto vars:     Size  Location     Type
  6912 ;;		None
  6913 ;; Return value:  Size  Location     Type
  6914 ;;                  4   30[COMRAM] long 
  6915 ;; Registers used:
  6916 ;;		wreg, status,2, status,0, cstack
  6917 ;; Tracked objects:
  6918 ;;		On entry : 0/0
  6919 ;;		On exit  : 0/0
  6920 ;;		Unchanged: 0/0
  6921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6922 ;;      Params:         8       0       0       0       0       0       0
  6923 ;;      Locals:         0       0       0       0       0       0       0
  6924 ;;      Temps:          0       0       0       0       0       0       0
  6925 ;;      Totals:         8       0       0       0       0       0       0
  6926 ;;Total ram usage:        8 bytes
  6927 ;; Hardware stack levels used:    1
  6928 ;; Hardware stack levels required when called:    1
  6929 ;; This function calls:
  6930 ;;		___fladd
  6931 ;; This function is called by:
  6932 ;;		_esvaziar_tanque
  6933 ;;		_efgtoa
  6934 ;; This function uses a non-reentrant model
  6935 ;;
  6936                           
  6937                           	psect	text22
  6938  003E2C                     __ptext22:
  6939                           	callstack 0
  6940  003E2C                     ___flsub:
  6941                           	callstack 24
  6942  003E2C  0E00               	movlw	0
  6943  003E2E  1A23               	xorwf	___flsub@a^0,f,c
  6944  003E30  0E00               	movlw	0
  6945  003E32  1A24               	xorwf	(___flsub@a+1)^0,f,c
  6946  003E34  0E00               	movlw	0
  6947  003E36  1A25               	xorwf	(___flsub@a+2)^0,f,c
  6948  003E38  0E80               	movlw	128
  6949  003E3A  1A26               	xorwf	(___flsub@a+3)^0,f,c
  6950  003E3C  C01F  F00F         	movff	___flsub@b,___fladd@b
  6951  003E40  C020  F010         	movff	___flsub@b+1,___fladd@b+1
  6952  003E44  C021  F011         	movff	___flsub@b+2,___fladd@b+2
  6953  003E48  C022  F012         	movff	___flsub@b+3,___fladd@b+3
  6954  003E4C  C023  F013         	movff	___flsub@a,___fladd@a
  6955  003E50  C024  F014         	movff	___flsub@a+1,___fladd@a+1
  6956  003E54  C025  F015         	movff	___flsub@a+2,___fladd@a+2
  6957  003E58  C026  F016         	movff	___flsub@a+3,___fladd@a+3
  6958  003E5C  EC47  F009         	call	___fladd	;wreg free
  6959  003E60  C00F  F01F         	movff	?___fladd,?___flsub
  6960  003E64  C010  F020         	movff	?___fladd+1,?___flsub+1
  6961  003E68  C011  F021         	movff	?___fladd+2,?___flsub+2
  6962  003E6C  C012  F022         	movff	?___fladd+3,?___flsub+3
  6963  003E70  0012               	return		;funcret
  6964  003E72                     __end_of___flsub:
  6965                           	callstack 0
  6966                           
  6967 ;; *************** function ___fladd *****************
  6968 ;; Defined at:
  6969 ;;		line 10 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  6970 ;; Parameters:    Size  Location     Type
  6971 ;;  b               4   14[COMRAM] long 
  6972 ;;  a               4   18[COMRAM] long 
  6973 ;; Auto vars:     Size  Location     Type
  6974 ;;  grs             1   29[COMRAM] unsigned char 
  6975 ;;  bexp            1   28[COMRAM] unsigned char 
  6976 ;;  aexp            1   27[COMRAM] unsigned char 
  6977 ;;  signs           1   26[COMRAM] unsigned char 
  6978 ;; Return value:  Size  Location     Type
  6979 ;;                  4   14[COMRAM] unsigned char 
  6980 ;; Registers used:
  6981 ;;		wreg, status,2, status,0
  6982 ;; Tracked objects:
  6983 ;;		On entry : 0/0
  6984 ;;		On exit  : 0/0
  6985 ;;		Unchanged: 0/0
  6986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6987 ;;      Params:         8       0       0       0       0       0       0
  6988 ;;      Locals:         4       0       0       0       0       0       0
  6989 ;;      Temps:          4       0       0       0       0       0       0
  6990 ;;      Totals:        16       0       0       0       0       0       0
  6991 ;;Total ram usage:       16 bytes
  6992 ;; Hardware stack levels used:    1
  6993 ;; This function calls:
  6994 ;;		Nothing
  6995 ;; This function is called by:
  6996 ;;		_encher_tanque
  6997 ;;		___flsub
  6998 ;;		_efgtoa
  6999 ;; This function uses a non-reentrant model
  7000 ;;
  7001                           
  7002                           	psect	text23
  7003  00128E                     __ptext23:
  7004                           	callstack 0
  7005  00128E                     ___fladd:
  7006                           	callstack 24
  7007  00128E  5012               	movf	(___fladd@b+3)^0,w,c
  7008  001290  0B80               	andlw	128
  7009  001292  6E1B               	movwf	___fladd@signs^0,c
  7010  001294  5012               	movf	(___fladd@b+3)^0,w,c
  7011  001296  2412               	addwf	(___fladd@b+3)^0,w,c
  7012  001298  6E1D               	movwf	___fladd@bexp^0,c
  7013  00129A  AE11               	btfss	(___fladd@b+2)^0,7,c
  7014  00129C  EF52  F009         	goto	u2861
  7015  0012A0  EF54  F009         	goto	u2860
  7016  0012A4                     u2861:
  7017  0012A4  EF55  F009         	goto	l2999
  7018  0012A8                     u2860:
  7019  0012A8  801D               	bsf	___fladd@bexp^0,0,c
  7020  0012AA                     l2999:
  7021  0012AA  501D               	movf	___fladd@bexp^0,w,c
  7022  0012AC  B4D8               	btfsc	status,2,c
  7023  0012AE  EF5B  F009         	goto	u2871
  7024  0012B2  EF5D  F009         	goto	u2870
  7025  0012B6                     u2871:
  7026  0012B6  EF72  F009         	goto	l3009
  7027  0012BA                     u2870:
  7028  0012BA  281D               	incf	___fladd@bexp^0,w,c
  7029  0012BC  A4D8               	btfss	status,2,c
  7030  0012BE  EF63  F009         	goto	u2881
  7031  0012C2  EF65  F009         	goto	u2880
  7032  0012C6                     u2881:
  7033  0012C6  EF6D  F009         	goto	l3005
  7034  0012CA                     u2880:
  7035  0012CA  0E00               	movlw	0
  7036  0012CC  6E0F               	movwf	___fladd@b^0,c
  7037  0012CE  0E00               	movlw	0
  7038  0012D0  6E10               	movwf	(___fladd@b+1)^0,c
  7039  0012D2  0E00               	movlw	0
  7040  0012D4  6E11               	movwf	(___fladd@b+2)^0,c
  7041  0012D6  0E00               	movlw	0
  7042  0012D8  6E12               	movwf	(___fladd@b+3)^0,c
  7043  0012DA                     l3005:
  7044  0012DA  8E11               	bsf	(___fladd@b+2)^0,7,c
  7045  0012DC  0E00               	movlw	0
  7046  0012DE  6E12               	movwf	(___fladd@b+3)^0,c
  7047  0012E0  EF7A  F009         	goto	l3011
  7048  0012E4                     l3009:
  7049  0012E4  0E00               	movlw	0
  7050  0012E6  6E0F               	movwf	___fladd@b^0,c
  7051  0012E8  0E00               	movlw	0
  7052  0012EA  6E10               	movwf	(___fladd@b+1)^0,c
  7053  0012EC  0E00               	movlw	0
  7054  0012EE  6E11               	movwf	(___fladd@b+2)^0,c
  7055  0012F0  0E00               	movlw	0
  7056  0012F2  6E12               	movwf	(___fladd@b+3)^0,c
  7057  0012F4                     l3011:
  7058  0012F4  5016               	movf	(___fladd@a+3)^0,w,c
  7059  0012F6  0B80               	andlw	128
  7060  0012F8  6E1C               	movwf	___fladd@aexp^0,c
  7061  0012FA  501B               	movf	___fladd@signs^0,w,c
  7062  0012FC  181C               	xorwf	___fladd@aexp^0,w,c
  7063  0012FE  B4D8               	btfsc	status,2,c
  7064  001300  EF84  F009         	goto	u2891
  7065  001304  EF86  F009         	goto	u2890
  7066  001308                     u2891:
  7067  001308  EF87  F009         	goto	l3017
  7068  00130C                     u2890:
  7069  00130C  8C1B               	bsf	___fladd@signs^0,6,c
  7070  00130E                     l3017:
  7071  00130E  5016               	movf	(___fladd@a+3)^0,w,c
  7072  001310  2416               	addwf	(___fladd@a+3)^0,w,c
  7073  001312  6E1C               	movwf	___fladd@aexp^0,c
  7074  001314  AE15               	btfss	(___fladd@a+2)^0,7,c
  7075  001316  EF8F  F009         	goto	u2901
  7076  00131A  EF91  F009         	goto	u2900
  7077  00131E                     u2901:
  7078  00131E  EF92  F009         	goto	l3023
  7079  001322                     u2900:
  7080  001322  801C               	bsf	___fladd@aexp^0,0,c
  7081  001324                     l3023:
  7082  001324  501C               	movf	___fladd@aexp^0,w,c
  7083  001326  B4D8               	btfsc	status,2,c
  7084  001328  EF98  F009         	goto	u2911
  7085  00132C  EF9A  F009         	goto	u2910
  7086  001330                     u2911:
  7087  001330  EFAF  F009         	goto	l3033
  7088  001334                     u2910:
  7089  001334  281C               	incf	___fladd@aexp^0,w,c
  7090  001336  A4D8               	btfss	status,2,c
  7091  001338  EFA0  F009         	goto	u2921
  7092  00133C  EFA2  F009         	goto	u2920
  7093  001340                     u2921:
  7094  001340  EFAA  F009         	goto	l3029
  7095  001344                     u2920:
  7096  001344  0E00               	movlw	0
  7097  001346  6E13               	movwf	___fladd@a^0,c
  7098  001348  0E00               	movlw	0
  7099  00134A  6E14               	movwf	(___fladd@a+1)^0,c
  7100  00134C  0E00               	movlw	0
  7101  00134E  6E15               	movwf	(___fladd@a+2)^0,c
  7102  001350  0E00               	movlw	0
  7103  001352  6E16               	movwf	(___fladd@a+3)^0,c
  7104  001354                     l3029:
  7105  001354  8E15               	bsf	(___fladd@a+2)^0,7,c
  7106  001356  0E00               	movlw	0
  7107  001358  6E16               	movwf	(___fladd@a+3)^0,c
  7108  00135A  EFB7  F009         	goto	l3035
  7109  00135E                     l3033:
  7110  00135E  0E00               	movlw	0
  7111  001360  6E13               	movwf	___fladd@a^0,c
  7112  001362  0E00               	movlw	0
  7113  001364  6E14               	movwf	(___fladd@a+1)^0,c
  7114  001366  0E00               	movlw	0
  7115  001368  6E15               	movwf	(___fladd@a+2)^0,c
  7116  00136A  0E00               	movlw	0
  7117  00136C  6E16               	movwf	(___fladd@a+3)^0,c
  7118  00136E                     l3035:
  7119  00136E  501D               	movf	___fladd@bexp^0,w,c
  7120  001370  5C1C               	subwf	___fladd@aexp^0,w,c
  7121  001372  B0D8               	btfsc	status,0,c
  7122  001374  EFBE  F009         	goto	u2931
  7123  001378  EFC0  F009         	goto	u2930
  7124  00137C                     u2931:
  7125  00137C  EFE7  F009         	goto	l3071
  7126  001380                     u2930:
  7127  001380  AC1B               	btfss	___fladd@signs^0,6,c
  7128  001382  EFC5  F009         	goto	u2941
  7129  001386  EFC7  F009         	goto	u2940
  7130  00138A                     u2941:
  7131  00138A  EFC9  F009         	goto	l3041
  7132  00138E                     u2940:
  7133  00138E  0E80               	movlw	128
  7134  001390  1A1B               	xorwf	___fladd@signs^0,f,c
  7135  001392                     l3041:
  7136  001392  C01D  F01E         	movff	___fladd@bexp,___fladd@grs
  7137  001396  C01C  F01D         	movff	___fladd@aexp,___fladd@bexp
  7138  00139A  C01E  F01C         	movff	___fladd@grs,___fladd@aexp
  7139  00139E  C00F  F01E         	movff	___fladd@b,___fladd@grs
  7140  0013A2  C013  F00F         	movff	___fladd@a,___fladd@b
  7141  0013A6  C01E  F013         	movff	___fladd@grs,___fladd@a
  7142  0013AA  C010  F01E         	movff	___fladd@b+1,___fladd@grs
  7143  0013AE  C014  F010         	movff	___fladd@a+1,___fladd@b+1
  7144  0013B2  C01E  F014         	movff	___fladd@grs,___fladd@a+1
  7145  0013B6  C011  F01E         	movff	___fladd@b+2,___fladd@grs
  7146  0013BA  C015  F011         	movff	___fladd@a+2,___fladd@b+2
  7147  0013BE  C01E  F015         	movff	___fladd@grs,___fladd@a+2
  7148  0013C2  C012  F01E         	movff	___fladd@b+3,___fladd@grs
  7149  0013C6  C016  F012         	movff	___fladd@a+3,___fladd@b+3
  7150  0013CA  C01E  F016         	movff	___fladd@grs,___fladd@a+3
  7151  0013CE                     l3071:
  7152  0013CE  0E00               	movlw	0
  7153  0013D0  6E1E               	movwf	___fladd@grs^0,c
  7154  0013D2  501D               	movf	___fladd@bexp^0,w,c
  7155  0013D4  C01C  F017         	movff	___fladd@aexp,??___fladd
  7156  0013D8  6A18               	clrf	(??___fladd+1)^0,c
  7157  0013DA  5E17               	subwf	??___fladd^0,f,c
  7158  0013DC  0E00               	movlw	0
  7159  0013DE  5A18               	subwfb	(??___fladd+1)^0,f,c
  7160  0013E0  BE18               	btfsc	(??___fladd+1)^0,7,c
  7161  0013E2  EFFC  F009         	goto	u2951
  7162  0013E6  5018               	movf	(??___fladd+1)^0,w,c
  7163  0013E8  E109               	bnz	u2950
  7164  0013EA  0E1A               	movlw	26
  7165  0013EC  5C17               	subwf	??___fladd^0,w,c
  7166  0013EE  A0D8               	btfss	status,0,c
  7167  0013F0  EFFC  F009         	goto	u2951
  7168  0013F4  EFFE  F009         	goto	u2950
  7169  0013F8                     u2951:
  7170  0013F8  EF35  F00A         	goto	l730
  7171  0013FC                     u2950:
  7172  0013FC  500F               	movf	___fladd@b^0,w,c
  7173  0013FE  1010               	iorwf	(___fladd@b+1)^0,w,c
  7174  001400  1011               	iorwf	(___fladd@b+2)^0,w,c
  7175  001402  1012               	iorwf	(___fladd@b+3)^0,w,c
  7176  001404  A4D8               	btfss	status,2,c
  7177  001406  EF07  F00A         	goto	u2961
  7178  00140A  EF0A  F00A         	goto	u2960
  7179  00140E                     u2961:
  7180  00140E  0E01               	movlw	1
  7181  001410  EF0B  F00A         	goto	u2970
  7182  001414                     u2960:
  7183  001414  0E00               	movlw	0
  7184  001416                     u2970:
  7185  001416  6E1E               	movwf	___fladd@grs^0,c
  7186  001418  0E00               	movlw	0
  7187  00141A  6E0F               	movwf	___fladd@b^0,c
  7188  00141C  0E00               	movlw	0
  7189  00141E  6E10               	movwf	(___fladd@b+1)^0,c
  7190  001420  0E00               	movlw	0
  7191  001422  6E11               	movwf	(___fladd@b+2)^0,c
  7192  001424  0E00               	movlw	0
  7193  001426  6E12               	movwf	(___fladd@b+3)^0,c
  7194  001428  C01C  F01D         	movff	___fladd@aexp,___fladd@bexp
  7195  00142C  EF3E  F00A         	goto	l729
  7196  001430                     l731:
  7197  001430  A01E               	btfss	___fladd@grs^0,0,c
  7198  001432  EF1D  F00A         	goto	u2981
  7199  001436  EF1F  F00A         	goto	u2980
  7200  00143A                     u2981:
  7201  00143A  EF25  F00A         	goto	l3083
  7202  00143E                     u2980:
  7203  00143E  90D8               	bcf	status,0,c
  7204  001440  301E               	rrcf	___fladd@grs^0,w,c
  7205  001442  0901               	iorlw	1
  7206  001444  6E1E               	movwf	___fladd@grs^0,c
  7207  001446  EF27  F00A         	goto	l3085
  7208  00144A                     l3083:
  7209  00144A  90D8               	bcf	status,0,c
  7210  00144C  321E               	rrcf	___fladd@grs^0,f,c
  7211  00144E                     l3085:
  7212  00144E  A00F               	btfss	___fladd@b^0,0,c
  7213  001450  EF2C  F00A         	goto	u2991
  7214  001454  EF2E  F00A         	goto	u2990
  7215  001458                     u2991:
  7216  001458  EF2F  F00A         	goto	l3089
  7217  00145C                     u2990:
  7218  00145C  8E1E               	bsf	___fladd@grs^0,7,c
  7219  00145E                     l3089:
  7220  00145E  3412               	rlcf	(___fladd@b+3)^0,w,c
  7221  001460  3212               	rrcf	(___fladd@b+3)^0,f,c
  7222  001462  3211               	rrcf	(___fladd@b+2)^0,f,c
  7223  001464  3210               	rrcf	(___fladd@b+1)^0,f,c
  7224  001466  320F               	rrcf	___fladd@b^0,f,c
  7225  001468  2A1D               	incf	___fladd@bexp^0,f,c
  7226  00146A                     l730:
  7227  00146A  501C               	movf	___fladd@aexp^0,w,c
  7228  00146C  5C1D               	subwf	___fladd@bexp^0,w,c
  7229  00146E  A0D8               	btfss	status,0,c
  7230  001470  EF3C  F00A         	goto	u3001
  7231  001474  EF3E  F00A         	goto	u3000
  7232  001478                     u3001:
  7233  001478  EF18  F00A         	goto	l731
  7234  00147C                     u3000:
  7235  00147C                     l729:
  7236  00147C  BC1B               	btfsc	___fladd@signs^0,6,c
  7237  00147E  EF43  F00A         	goto	u3011
  7238  001482  EF45  F00A         	goto	u3010
  7239  001486                     u3011:
  7240  001486  EF85  F00A         	goto	l3117
  7241  00148A                     u3010:
  7242  00148A  501D               	movf	___fladd@bexp^0,w,c
  7243  00148C  A4D8               	btfss	status,2,c
  7244  00148E  EF4B  F00A         	goto	u3021
  7245  001492  EF4D  F00A         	goto	u3020
  7246  001496                     u3021:
  7247  001496  EF57  F00A         	goto	l3099
  7248  00149A                     u3020:
  7249  00149A  0E00               	movlw	0
  7250  00149C  6E0F               	movwf	?___fladd^0,c
  7251  00149E  0E00               	movlw	0
  7252  0014A0  6E10               	movwf	(?___fladd+1)^0,c
  7253  0014A2  0E00               	movlw	0
  7254  0014A4  6E11               	movwf	(?___fladd+2)^0,c
  7255  0014A6  0E00               	movlw	0
  7256  0014A8  6E12               	movwf	(?___fladd+3)^0,c
  7257  0014AA  EFA6  F00B         	goto	l738
  7258  0014AE                     l3099:
  7259  0014AE  5013               	movf	___fladd@a^0,w,c
  7260  0014B0  260F               	addwf	___fladd@b^0,f,c
  7261  0014B2  5014               	movf	(___fladd@a+1)^0,w,c
  7262  0014B4  2210               	addwfc	(___fladd@b+1)^0,f,c
  7263  0014B6  5015               	movf	(___fladd@a+2)^0,w,c
  7264  0014B8  2211               	addwfc	(___fladd@b+2)^0,f,c
  7265  0014BA  5016               	movf	(___fladd@a+3)^0,w,c
  7266  0014BC  2212               	addwfc	(___fladd@b+3)^0,f,c
  7267  0014BE  A012               	btfss	(___fladd@b+3)^0,0,c
  7268  0014C0  EF64  F00A         	goto	u3031
  7269  0014C4  EF66  F00A         	goto	u3030
  7270  0014C8                     u3031:
  7271  0014C8  EF12  F00B         	goto	l3153
  7272  0014CC                     u3030:
  7273  0014CC  A01E               	btfss	___fladd@grs^0,0,c
  7274  0014CE  EF6B  F00A         	goto	u3041
  7275  0014D2  EF6D  F00A         	goto	u3040
  7276  0014D6                     u3041:
  7277  0014D6  EF73  F00A         	goto	l3107
  7278  0014DA                     u3040:
  7279  0014DA  90D8               	bcf	status,0,c
  7280  0014DC  301E               	rrcf	___fladd@grs^0,w,c
  7281  0014DE  0901               	iorlw	1
  7282  0014E0  6E1E               	movwf	___fladd@grs^0,c
  7283  0014E2  EF75  F00A         	goto	l3109
  7284  0014E6                     l3107:
  7285  0014E6  90D8               	bcf	status,0,c
  7286  0014E8  321E               	rrcf	___fladd@grs^0,f,c
  7287  0014EA                     l3109:
  7288  0014EA  A00F               	btfss	___fladd@b^0,0,c
  7289  0014EC  EF7A  F00A         	goto	u3051
  7290  0014F0  EF7C  F00A         	goto	u3050
  7291  0014F4                     u3051:
  7292  0014F4  EF7D  F00A         	goto	l3113
  7293  0014F8                     u3050:
  7294  0014F8  8E1E               	bsf	___fladd@grs^0,7,c
  7295  0014FA                     l3113:
  7296  0014FA  3412               	rlcf	(___fladd@b+3)^0,w,c
  7297  0014FC  3212               	rrcf	(___fladd@b+3)^0,f,c
  7298  0014FE  3211               	rrcf	(___fladd@b+2)^0,f,c
  7299  001500  3210               	rrcf	(___fladd@b+1)^0,f,c
  7300  001502  320F               	rrcf	___fladd@b^0,f,c
  7301  001504  2A1D               	incf	___fladd@bexp^0,f,c
  7302  001506  EF12  F00B         	goto	l3153
  7303  00150A                     l3117:
  7304  00150A  5013               	movf	___fladd@a^0,w,c
  7305  00150C  5C0F               	subwf	___fladd@b^0,w,c
  7306  00150E  5014               	movf	(___fladd@a+1)^0,w,c
  7307  001510  5810               	subwfb	(___fladd@b+1)^0,w,c
  7308  001512  5015               	movf	(___fladd@a+2)^0,w,c
  7309  001514  5811               	subwfb	(___fladd@b+2)^0,w,c
  7310  001516  5012               	movf	(___fladd@b+3)^0,w,c
  7311  001518  0A80               	xorlw	128
  7312  00151A  6E17               	movwf	??___fladd^0,c
  7313  00151C  5016               	movf	(___fladd@a+3)^0,w,c
  7314  00151E  0A80               	xorlw	128
  7315  001520  5817               	subwfb	??___fladd^0,w,c
  7316  001522  B0D8               	btfsc	status,0,c
  7317  001524  EF96  F00A         	goto	u3061
  7318  001528  EF98  F00A         	goto	u3060
  7319  00152C                     u3061:
  7320  00152C  EFC3  F00A         	goto	l3127
  7321  001530                     u3060:
  7322  001530  500F               	movf	___fladd@b^0,w,c
  7323  001532  5C13               	subwf	___fladd@a^0,w,c
  7324  001534  6E17               	movwf	??___fladd^0,c
  7325  001536  5010               	movf	(___fladd@b+1)^0,w,c
  7326  001538  5814               	subwfb	(___fladd@a+1)^0,w,c
  7327  00153A  6E18               	movwf	(??___fladd+1)^0,c
  7328  00153C  5011               	movf	(___fladd@b+2)^0,w,c
  7329  00153E  5815               	subwfb	(___fladd@a+2)^0,w,c
  7330  001540  6E19               	movwf	(??___fladd+2)^0,c
  7331  001542  5012               	movf	(___fladd@b+3)^0,w,c
  7332  001544  5816               	subwfb	(___fladd@a+3)^0,w,c
  7333  001546  6E1A               	movwf	(??___fladd+3)^0,c
  7334  001548  0EFF               	movlw	255
  7335  00154A  2417               	addwf	??___fladd^0,w,c
  7336  00154C  6E0F               	movwf	___fladd@b^0,c
  7337  00154E  0EFF               	movlw	255
  7338  001550  2018               	addwfc	(??___fladd+1)^0,w,c
  7339  001552  6E10               	movwf	(___fladd@b+1)^0,c
  7340  001554  0EFF               	movlw	255
  7341  001556  2019               	addwfc	(??___fladd+2)^0,w,c
  7342  001558  6E11               	movwf	(___fladd@b+2)^0,c
  7343  00155A  0EFF               	movlw	255
  7344  00155C  201A               	addwfc	(??___fladd+3)^0,w,c
  7345  00155E  6E12               	movwf	(___fladd@b+3)^0,c
  7346  001560  0E80               	movlw	128
  7347  001562  1A1B               	xorwf	___fladd@signs^0,f,c
  7348  001564  6C1E               	negf	___fladd@grs^0,c
  7349  001566  501E               	movf	___fladd@grs^0,w,c
  7350  001568  A4D8               	btfss	status,2,c
  7351  00156A  EFB9  F00A         	goto	u3071
  7352  00156E  EFBB  F00A         	goto	u3070
  7353  001572                     u3071:
  7354  001572  EFCB  F00A         	goto	l746
  7355  001576                     u3070:
  7356  001576  0E01               	movlw	1
  7357  001578  260F               	addwf	___fladd@b^0,f,c
  7358  00157A  0E00               	movlw	0
  7359  00157C  2210               	addwfc	(___fladd@b+1)^0,f,c
  7360  00157E  2211               	addwfc	(___fladd@b+2)^0,f,c
  7361  001580  2212               	addwfc	(___fladd@b+3)^0,f,c
  7362  001582  EFCB  F00A         	goto	l746
  7363  001586                     l3127:
  7364  001586  5013               	movf	___fladd@a^0,w,c
  7365  001588  5E0F               	subwf	___fladd@b^0,f,c
  7366  00158A  5014               	movf	(___fladd@a+1)^0,w,c
  7367  00158C  5A10               	subwfb	(___fladd@b+1)^0,f,c
  7368  00158E  5015               	movf	(___fladd@a+2)^0,w,c
  7369  001590  5A11               	subwfb	(___fladd@b+2)^0,f,c
  7370  001592  5016               	movf	(___fladd@a+3)^0,w,c
  7371  001594  5A12               	subwfb	(___fladd@b+3)^0,f,c
  7372  001596                     l746:
  7373  001596  500F               	movf	___fladd@b^0,w,c
  7374  001598  1010               	iorwf	(___fladd@b+1)^0,w,c
  7375  00159A  1011               	iorwf	(___fladd@b+2)^0,w,c
  7376  00159C  1012               	iorwf	(___fladd@b+3)^0,w,c
  7377  00159E  A4D8               	btfss	status,2,c
  7378  0015A0  EFD4  F00A         	goto	u3081
  7379  0015A4  EFD6  F00A         	goto	u3080
  7380  0015A8                     u3081:
  7381  0015A8  EF0B  F00B         	goto	l3151
  7382  0015AC                     u3080:
  7383  0015AC  501E               	movf	___fladd@grs^0,w,c
  7384  0015AE  A4D8               	btfss	status,2,c
  7385  0015B0  EFDC  F00A         	goto	u3091
  7386  0015B4  EFDE  F00A         	goto	u3090
  7387  0015B8                     u3091:
  7388  0015B8  EF0B  F00B         	goto	l3151
  7389  0015BC                     u3090:
  7390  0015BC  0E00               	movlw	0
  7391  0015BE  6E0F               	movwf	?___fladd^0,c
  7392  0015C0  0E00               	movlw	0
  7393  0015C2  6E10               	movwf	(?___fladd+1)^0,c
  7394  0015C4  0E00               	movlw	0
  7395  0015C6  6E11               	movwf	(?___fladd+2)^0,c
  7396  0015C8  0E00               	movlw	0
  7397  0015CA  6E12               	movwf	(?___fladd+3)^0,c
  7398  0015CC  EFA6  F00B         	goto	l738
  7399  0015D0                     l3135:
  7400  0015D0  90D8               	bcf	status,0,c
  7401  0015D2  360F               	rlcf	___fladd@b^0,f,c
  7402  0015D4  3610               	rlcf	(___fladd@b+1)^0,f,c
  7403  0015D6  3611               	rlcf	(___fladd@b+2)^0,f,c
  7404  0015D8  3612               	rlcf	(___fladd@b+3)^0,f,c
  7405  0015DA  AE1E               	btfss	___fladd@grs^0,7,c
  7406  0015DC  EFF2  F00A         	goto	u3101
  7407  0015E0  EFF4  F00A         	goto	u3100
  7408  0015E4                     u3101:
  7409  0015E4  EFF5  F00A         	goto	l3141
  7410  0015E8                     u3100:
  7411  0015E8  800F               	bsf	___fladd@b^0,0,c
  7412  0015EA                     l3141:
  7413  0015EA  A01E               	btfss	___fladd@grs^0,0,c
  7414  0015EC  EFFA  F00A         	goto	u3111
  7415  0015F0  EFFC  F00A         	goto	u3110
  7416  0015F4                     u3111:
  7417  0015F4  EF00  F00B         	goto	l3145
  7418  0015F8                     u3110:
  7419  0015F8  80D8               	bsf	status,0,c
  7420  0015FA  361E               	rlcf	___fladd@grs^0,f,c
  7421  0015FC  EF02  F00B         	goto	l3147
  7422  001600                     l3145:
  7423  001600  90D8               	bcf	status,0,c
  7424  001602  361E               	rlcf	___fladd@grs^0,f,c
  7425  001604                     l3147:
  7426  001604  501D               	movf	___fladd@bexp^0,w,c
  7427  001606  B4D8               	btfsc	status,2,c
  7428  001608  EF08  F00B         	goto	u3121
  7429  00160C  EF0A  F00B         	goto	u3120
  7430  001610                     u3121:
  7431  001610  EF0B  F00B         	goto	l3151
  7432  001614                     u3120:
  7433  001614  061D               	decf	___fladd@bexp^0,f,c
  7434  001616                     l3151:
  7435  001616  AE11               	btfss	(___fladd@b+2)^0,7,c
  7436  001618  EF10  F00B         	goto	u3131
  7437  00161C  EF12  F00B         	goto	u3130
  7438  001620                     u3131:
  7439  001620  EFE8  F00A         	goto	l3135
  7440  001624                     u3130:
  7441  001624                     l3153:
  7442  001624  0E00               	movlw	0
  7443  001626  6E1C               	movwf	___fladd@aexp^0,c
  7444  001628  AE1E               	btfss	___fladd@grs^0,7,c
  7445  00162A  EF19  F00B         	goto	u3141
  7446  00162E  EF1B  F00B         	goto	u3140
  7447  001632                     u3141:
  7448  001632  EF33  F00B         	goto	l755
  7449  001636                     u3140:
  7450  001636  C01E  F017         	movff	___fladd@grs,??___fladd
  7451  00163A  0E7F               	movlw	127
  7452  00163C  1617               	andwf	??___fladd^0,f,c
  7453  00163E  B4D8               	btfsc	status,2,c
  7454  001640  EF24  F00B         	goto	u3151
  7455  001644  EF26  F00B         	goto	u3150
  7456  001648                     u3151:
  7457  001648  EF2A  F00B         	goto	l756
  7458  00164C                     u3150:
  7459  00164C                     l3159:
  7460  00164C  0E01               	movlw	1
  7461  00164E  6E1C               	movwf	___fladd@aexp^0,c
  7462  001650  EF33  F00B         	goto	l755
  7463  001654                     l756:
  7464  001654  A00F               	btfss	___fladd@b^0,0,c
  7465  001656  EF2F  F00B         	goto	u3161
  7466  00165A  EF31  F00B         	goto	u3160
  7467  00165E                     u3161:
  7468  00165E  EF33  F00B         	goto	l755
  7469  001662                     u3160:
  7470  001662  EF26  F00B         	goto	l3159
  7471  001666                     l755:
  7472  001666  501C               	movf	___fladd@aexp^0,w,c
  7473  001668  B4D8               	btfsc	status,2,c
  7474  00166A  EF39  F00B         	goto	u3171
  7475  00166E  EF3B  F00B         	goto	u3170
  7476  001672                     u3171:
  7477  001672  EF66  F00B         	goto	l3171
  7478  001676                     u3170:
  7479  001676  0E01               	movlw	1
  7480  001678  260F               	addwf	___fladd@b^0,f,c
  7481  00167A  0E00               	movlw	0
  7482  00167C  2210               	addwfc	(___fladd@b+1)^0,f,c
  7483  00167E  2211               	addwfc	(___fladd@b+2)^0,f,c
  7484  001680  2212               	addwfc	(___fladd@b+3)^0,f,c
  7485  001682  A012               	btfss	(___fladd@b+3)^0,0,c
  7486  001684  EF46  F00B         	goto	u3181
  7487  001688  EF48  F00B         	goto	u3180
  7488  00168C                     u3181:
  7489  00168C  EF66  F00B         	goto	l3171
  7490  001690                     u3180:
  7491  001690  C00F  F017         	movff	___fladd@b,??___fladd
  7492  001694  C010  F018         	movff	___fladd@b+1,??___fladd+1
  7493  001698  C011  F019         	movff	___fladd@b+2,??___fladd+2
  7494  00169C  C012  F01A         	movff	___fladd@b+3,??___fladd+3
  7495  0016A0  341A               	rlcf	(??___fladd+3)^0,w,c
  7496  0016A2  321A               	rrcf	(??___fladd+3)^0,f,c
  7497  0016A4  3219               	rrcf	(??___fladd+2)^0,f,c
  7498  0016A6  3218               	rrcf	(??___fladd+1)^0,f,c
  7499  0016A8  3217               	rrcf	??___fladd^0,f,c
  7500  0016AA  C017  F00F         	movff	??___fladd,___fladd@b
  7501  0016AE  C018  F010         	movff	??___fladd+1,___fladd@b+1
  7502  0016B2  C019  F011         	movff	??___fladd+2,___fladd@b+2
  7503  0016B6  C01A  F012         	movff	??___fladd+3,___fladd@b+3
  7504  0016BA  281D               	incf	___fladd@bexp^0,w,c
  7505  0016BC  B4D8               	btfsc	status,2,c
  7506  0016BE  EF63  F00B         	goto	u3191
  7507  0016C2  EF65  F00B         	goto	u3190
  7508  0016C6                     u3191:
  7509  0016C6  EF66  F00B         	goto	l3171
  7510  0016CA                     u3190:
  7511  0016CA  2A1D               	incf	___fladd@bexp^0,f,c
  7512  0016CC                     l3171:
  7513  0016CC  281D               	incf	___fladd@bexp^0,w,c
  7514  0016CE  B4D8               	btfsc	status,2,c
  7515  0016D0  EF6C  F00B         	goto	u3201
  7516  0016D4  EF6E  F00B         	goto	u3200
  7517  0016D8                     u3201:
  7518  0016D8  EF76  F00B         	goto	l3175
  7519  0016DC                     u3200:
  7520  0016DC  501D               	movf	___fladd@bexp^0,w,c
  7521  0016DE  A4D8               	btfss	status,2,c
  7522  0016E0  EF74  F00B         	goto	u3211
  7523  0016E4  EF76  F00B         	goto	u3210
  7524  0016E8                     u3211:
  7525  0016E8  EF88  F00B         	goto	l3179
  7526  0016EC                     u3210:
  7527  0016EC                     l3175:
  7528  0016EC  0E00               	movlw	0
  7529  0016EE  6E0F               	movwf	___fladd@b^0,c
  7530  0016F0  0E00               	movlw	0
  7531  0016F2  6E10               	movwf	(___fladd@b+1)^0,c
  7532  0016F4  0E00               	movlw	0
  7533  0016F6  6E11               	movwf	(___fladd@b+2)^0,c
  7534  0016F8  0E00               	movlw	0
  7535  0016FA  6E12               	movwf	(___fladd@b+3)^0,c
  7536  0016FC  501D               	movf	___fladd@bexp^0,w,c
  7537  0016FE  A4D8               	btfss	status,2,c
  7538  001700  EF84  F00B         	goto	u3221
  7539  001704  EF86  F00B         	goto	u3220
  7540  001708                     u3221:
  7541  001708  EF88  F00B         	goto	l3179
  7542  00170C                     u3220:
  7543  00170C  0E00               	movlw	0
  7544  00170E  6E1B               	movwf	___fladd@signs^0,c
  7545  001710                     l3179:
  7546  001710  A01D               	btfss	___fladd@bexp^0,0,c
  7547  001712  EF8D  F00B         	goto	u3231
  7548  001716  EF8F  F00B         	goto	u3230
  7549  00171A                     u3231:
  7550  00171A  EF92  F00B         	goto	l3183
  7551  00171E                     u3230:
  7552  00171E  8E11               	bsf	(___fladd@b+2)^0,7,c
  7553  001720  EF93  F00B         	goto	l3185
  7554  001724                     l3183:
  7555  001724  9E11               	bcf	(___fladd@b+2)^0,7,c
  7556  001726                     l3185:
  7557  001726  90D8               	bcf	status,0,c
  7558  001728  301D               	rrcf	___fladd@bexp^0,w,c
  7559  00172A  6E12               	movwf	(___fladd@b+3)^0,c
  7560  00172C  AE1B               	btfss	___fladd@signs^0,7,c
  7561  00172E  EF9B  F00B         	goto	u3241
  7562  001732  EF9D  F00B         	goto	u3240
  7563  001736                     u3241:
  7564  001736  EF9E  F00B         	goto	l3191
  7565  00173A                     u3240:
  7566  00173A  8E12               	bsf	(___fladd@b+3)^0,7,c
  7567  00173C                     l3191:
  7568  00173C  C00F  F00F         	movff	___fladd@b,?___fladd
  7569  001740  C010  F010         	movff	___fladd@b+1,?___fladd+1
  7570  001744  C011  F011         	movff	___fladd@b+2,?___fladd+2
  7571  001748  C012  F012         	movff	___fladd@b+3,?___fladd+3
  7572  00174C                     l738:
  7573  00174C  0012               	return		;funcret
  7574  00174E                     __end_of___fladd:
  7575                           	callstack 0
  7576                           
  7577 ;; *************** function ___flneg *****************
  7578 ;; Defined at:
  7579 ;;		line 15 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\flneg.c"
  7580 ;; Parameters:    Size  Location     Type
  7581 ;;  f1              4    0[COMRAM] unsigned char 
  7582 ;; Auto vars:     Size  Location     Type
  7583 ;;		None
  7584 ;; Return value:  Size  Location     Type
  7585 ;;                  4    0[COMRAM] unsigned char 
  7586 ;; Registers used:
  7587 ;;		wreg, status,2, status,0
  7588 ;; Tracked objects:
  7589 ;;		On entry : 0/0
  7590 ;;		On exit  : 0/0
  7591 ;;		Unchanged: 0/0
  7592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7593 ;;      Params:         4       0       0       0       0       0       0
  7594 ;;      Locals:         0       0       0       0       0       0       0
  7595 ;;      Temps:          0       0       0       0       0       0       0
  7596 ;;      Totals:         4       0       0       0       0       0       0
  7597 ;;Total ram usage:        4 bytes
  7598 ;; Hardware stack levels used:    1
  7599 ;; This function calls:
  7600 ;;		Nothing
  7601 ;; This function is called by:
  7602 ;;		_efgtoa
  7603 ;; This function uses a non-reentrant model
  7604 ;;
  7605                           
  7606                           	psect	text24
  7607  003EEE                     __ptext24:
  7608                           	callstack 0
  7609  003EEE                     ___flneg:
  7610                           	callstack 25
  7611  003EEE  5001               	movf	___flneg@f1^0,w,c
  7612  003EF0  1002               	iorwf	(___flneg@f1+1)^0,w,c
  7613  003EF2  1003               	iorwf	(___flneg@f1+2)^0,w,c
  7614  003EF4  1004               	iorwf	(___flneg@f1+3)^0,w,c
  7615  003EF6  B4D8               	btfsc	status,2,c
  7616  003EF8  EF80  F01F         	goto	u3911
  7617  003EFC  EF82  F01F         	goto	u3910
  7618  003F00                     u3911:
  7619  003F00  EF8A  F01F         	goto	l3619
  7620  003F04                     u3910:
  7621  003F04  0E00               	movlw	0
  7622  003F06  1A01               	xorwf	___flneg@f1^0,f,c
  7623  003F08  0E00               	movlw	0
  7624  003F0A  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  7625  003F0C  0E00               	movlw	0
  7626  003F0E  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  7627  003F10  0E80               	movlw	128
  7628  003F12  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  7629  003F14                     l3619:
  7630  003F14  C001  F001         	movff	___flneg@f1,?___flneg
  7631  003F18  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  7632  003F1C  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  7633  003F20  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  7634  003F24  0012               	return		;funcret
  7635  003F26                     __end_of___flneg:
  7636                           	callstack 0
  7637                           
  7638 ;; *************** function ___flmul *****************
  7639 ;; Defined at:
  7640 ;;		line 8 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
  7641 ;; Parameters:    Size  Location     Type
  7642 ;;  b               4    0[COMRAM] unsigned char 
  7643 ;;  a               4    4[COMRAM] unsigned char 
  7644 ;; Auto vars:     Size  Location     Type
  7645 ;;  prod            4   19[COMRAM] struct .
  7646 ;;  grs             4   13[COMRAM] unsigned long 
  7647 ;;  temp            2   23[COMRAM] struct .
  7648 ;;  bexp            1   18[COMRAM] unsigned char 
  7649 ;;  aexp            1   17[COMRAM] unsigned char 
  7650 ;;  sign            1   12[COMRAM] unsigned char 
  7651 ;; Return value:  Size  Location     Type
  7652 ;;                  4    0[COMRAM] unsigned char 
  7653 ;; Registers used:
  7654 ;;		wreg, status,2, status,0, prodl, prodh
  7655 ;; Tracked objects:
  7656 ;;		On entry : 0/0
  7657 ;;		On exit  : 0/0
  7658 ;;		Unchanged: 0/0
  7659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7660 ;;      Params:         8       0       0       0       0       0       0
  7661 ;;      Locals:        13       0       0       0       0       0       0
  7662 ;;      Temps:          4       0       0       0       0       0       0
  7663 ;;      Totals:        25       0       0       0       0       0       0
  7664 ;;Total ram usage:       25 bytes
  7665 ;; Hardware stack levels used:    1
  7666 ;; This function calls:
  7667 ;;		Nothing
  7668 ;; This function is called by:
  7669 ;;		_efgtoa
  7670 ;; This function uses a non-reentrant model
  7671 ;;
  7672                           
  7673                           	psect	text25
  7674  001BB8                     __ptext25:
  7675                           	callstack 0
  7676  001BB8                     ___flmul:
  7677                           	callstack 25
  7678  001BB8  5004               	movf	(___flmul@b+3)^0,w,c
  7679  001BBA  0B80               	andlw	128
  7680  001BBC  6E0D               	movwf	___flmul@sign^0,c
  7681  001BBE  5004               	movf	(___flmul@b+3)^0,w,c
  7682  001BC0  2404               	addwf	(___flmul@b+3)^0,w,c
  7683  001BC2  6E13               	movwf	___flmul@bexp^0,c
  7684  001BC4  AE03               	btfss	(___flmul@b+2)^0,7,c
  7685  001BC6  EFE7  F00D         	goto	u3521
  7686  001BCA  EFE9  F00D         	goto	u3520
  7687  001BCE                     u3521:
  7688  001BCE  EFEA  F00D         	goto	l3367
  7689  001BD2                     u3520:
  7690  001BD2  8013               	bsf	___flmul@bexp^0,0,c
  7691  001BD4                     l3367:
  7692  001BD4  5013               	movf	___flmul@bexp^0,w,c
  7693  001BD6  B4D8               	btfsc	status,2,c
  7694  001BD8  EFF0  F00D         	goto	u3531
  7695  001BDC  EFF2  F00D         	goto	u3530
  7696  001BE0                     u3531:
  7697  001BE0  EF05  F00E         	goto	l3375
  7698  001BE4                     u3530:
  7699  001BE4  2813               	incf	___flmul@bexp^0,w,c
  7700  001BE6  A4D8               	btfss	status,2,c
  7701  001BE8  EFF8  F00D         	goto	u3541
  7702  001BEC  EFFA  F00D         	goto	u3540
  7703  001BF0                     u3541:
  7704  001BF0  EF02  F00E         	goto	l3373
  7705  001BF4                     u3540:
  7706  001BF4  0E00               	movlw	0
  7707  001BF6  6E01               	movwf	___flmul@b^0,c
  7708  001BF8  0E00               	movlw	0
  7709  001BFA  6E02               	movwf	(___flmul@b+1)^0,c
  7710  001BFC  0E00               	movlw	0
  7711  001BFE  6E03               	movwf	(___flmul@b+2)^0,c
  7712  001C00  0E00               	movlw	0
  7713  001C02  6E04               	movwf	(___flmul@b+3)^0,c
  7714  001C04                     l3373:
  7715  001C04  8E03               	bsf	(___flmul@b+2)^0,7,c
  7716  001C06  EF0D  F00E         	goto	l3377
  7717  001C0A                     l3375:
  7718  001C0A  0E00               	movlw	0
  7719  001C0C  6E01               	movwf	___flmul@b^0,c
  7720  001C0E  0E00               	movlw	0
  7721  001C10  6E02               	movwf	(___flmul@b+1)^0,c
  7722  001C12  0E00               	movlw	0
  7723  001C14  6E03               	movwf	(___flmul@b+2)^0,c
  7724  001C16  0E00               	movlw	0
  7725  001C18  6E04               	movwf	(___flmul@b+3)^0,c
  7726  001C1A                     l3377:
  7727  001C1A  5008               	movf	(___flmul@a+3)^0,w,c
  7728  001C1C  0B80               	andlw	128
  7729  001C1E  1A0D               	xorwf	___flmul@sign^0,f,c
  7730  001C20  5008               	movf	(___flmul@a+3)^0,w,c
  7731  001C22  2408               	addwf	(___flmul@a+3)^0,w,c
  7732  001C24  6E12               	movwf	___flmul@aexp^0,c
  7733  001C26  AE07               	btfss	(___flmul@a+2)^0,7,c
  7734  001C28  EF18  F00E         	goto	u3551
  7735  001C2C  EF1A  F00E         	goto	u3550
  7736  001C30                     u3551:
  7737  001C30  EF1B  F00E         	goto	l3385
  7738  001C34                     u3550:
  7739  001C34  8012               	bsf	___flmul@aexp^0,0,c
  7740  001C36                     l3385:
  7741  001C36  5012               	movf	___flmul@aexp^0,w,c
  7742  001C38  B4D8               	btfsc	status,2,c
  7743  001C3A  EF21  F00E         	goto	u3561
  7744  001C3E  EF23  F00E         	goto	u3560
  7745  001C42                     u3561:
  7746  001C42  EF36  F00E         	goto	l3393
  7747  001C46                     u3560:
  7748  001C46  2812               	incf	___flmul@aexp^0,w,c
  7749  001C48  A4D8               	btfss	status,2,c
  7750  001C4A  EF29  F00E         	goto	u3571
  7751  001C4E  EF2B  F00E         	goto	u3570
  7752  001C52                     u3571:
  7753  001C52  EF33  F00E         	goto	l3391
  7754  001C56                     u3570:
  7755  001C56  0E00               	movlw	0
  7756  001C58  6E05               	movwf	___flmul@a^0,c
  7757  001C5A  0E00               	movlw	0
  7758  001C5C  6E06               	movwf	(___flmul@a+1)^0,c
  7759  001C5E  0E00               	movlw	0
  7760  001C60  6E07               	movwf	(___flmul@a+2)^0,c
  7761  001C62  0E00               	movlw	0
  7762  001C64  6E08               	movwf	(___flmul@a+3)^0,c
  7763  001C66                     l3391:
  7764  001C66  8E07               	bsf	(___flmul@a+2)^0,7,c
  7765  001C68  EF3E  F00E         	goto	l815
  7766  001C6C                     l3393:
  7767  001C6C  0E00               	movlw	0
  7768  001C6E  6E05               	movwf	___flmul@a^0,c
  7769  001C70  0E00               	movlw	0
  7770  001C72  6E06               	movwf	(___flmul@a+1)^0,c
  7771  001C74  0E00               	movlw	0
  7772  001C76  6E07               	movwf	(___flmul@a+2)^0,c
  7773  001C78  0E00               	movlw	0
  7774  001C7A  6E08               	movwf	(___flmul@a+3)^0,c
  7775  001C7C                     l815:
  7776  001C7C  5012               	movf	___flmul@aexp^0,w,c
  7777  001C7E  B4D8               	btfsc	status,2,c
  7778  001C80  EF44  F00E         	goto	u3581
  7779  001C84  EF46  F00E         	goto	u3580
  7780  001C88                     u3581:
  7781  001C88  EF4E  F00E         	goto	l3397
  7782  001C8C                     u3580:
  7783  001C8C  5013               	movf	___flmul@bexp^0,w,c
  7784  001C8E  A4D8               	btfss	status,2,c
  7785  001C90  EF4C  F00E         	goto	u3591
  7786  001C94  EF4E  F00E         	goto	u3590
  7787  001C98                     u3591:
  7788  001C98  EF58  F00E         	goto	l3401
  7789  001C9C                     u3590:
  7790  001C9C                     l3397:
  7791  001C9C  0E00               	movlw	0
  7792  001C9E  6E01               	movwf	?___flmul^0,c
  7793  001CA0  0E00               	movlw	0
  7794  001CA2  6E02               	movwf	(?___flmul+1)^0,c
  7795  001CA4  0E00               	movlw	0
  7796  001CA6  6E03               	movwf	(?___flmul+2)^0,c
  7797  001CA8  0E00               	movlw	0
  7798  001CAA  6E04               	movwf	(?___flmul+3)^0,c
  7799  001CAC  EFF0  F00F         	goto	l819
  7800  001CB0                     l3401:
  7801  001CB0  5007               	movf	(___flmul@a+2)^0,w,c
  7802  001CB2  0201               	mulwf	___flmul@b^0,c
  7803  001CB4  CFF3 F018          	movff	prodl,___flmul@temp
  7804  001CB8  CFF4 F019          	movff	prodh,___flmul@temp+1
  7805  001CBC  5018               	movf	___flmul@temp^0,w,c
  7806  001CBE  6E0E               	movwf	___flmul@grs^0,c
  7807  001CC0  6A0F               	clrf	(___flmul@grs+1)^0,c
  7808  001CC2  6A10               	clrf	(___flmul@grs+2)^0,c
  7809  001CC4  6A11               	clrf	(___flmul@grs+3)^0,c
  7810  001CC6  5019               	movf	(___flmul@temp+1)^0,w,c
  7811  001CC8  6E14               	movwf	___flmul@prod^0,c
  7812  001CCA  6A15               	clrf	(___flmul@prod+1)^0,c
  7813  001CCC  6A16               	clrf	(___flmul@prod+2)^0,c
  7814  001CCE  6A17               	clrf	(___flmul@prod+3)^0,c
  7815  001CD0  5006               	movf	(___flmul@a+1)^0,w,c
  7816  001CD2  0202               	mulwf	(___flmul@b+1)^0,c
  7817  001CD4  CFF3 F018          	movff	prodl,___flmul@temp
  7818  001CD8  CFF4 F019          	movff	prodh,___flmul@temp+1
  7819  001CDC  5018               	movf	___flmul@temp^0,w,c
  7820  001CDE  260E               	addwf	___flmul@grs^0,f,c
  7821  001CE0  0E00               	movlw	0
  7822  001CE2  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7823  001CE4  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7824  001CE6  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7825  001CE8  5019               	movf	(___flmul@temp+1)^0,w,c
  7826  001CEA  2614               	addwf	___flmul@prod^0,f,c
  7827  001CEC  0E00               	movlw	0
  7828  001CEE  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7829  001CF0  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7830  001CF2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7831  001CF4  5005               	movf	___flmul@a^0,w,c
  7832  001CF6  0203               	mulwf	(___flmul@b+2)^0,c
  7833  001CF8  CFF3 F018          	movff	prodl,___flmul@temp
  7834  001CFC  CFF4 F019          	movff	prodh,___flmul@temp+1
  7835  001D00  5018               	movf	___flmul@temp^0,w,c
  7836  001D02  260E               	addwf	___flmul@grs^0,f,c
  7837  001D04  0E00               	movlw	0
  7838  001D06  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7839  001D08  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7840  001D0A  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7841  001D0C  5019               	movf	(___flmul@temp+1)^0,w,c
  7842  001D0E  2614               	addwf	___flmul@prod^0,f,c
  7843  001D10  0E00               	movlw	0
  7844  001D12  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7845  001D14  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7846  001D16  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7847  001D18  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7848  001D1C  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7849  001D20  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7850  001D24  6A0E               	clrf	___flmul@grs^0,c
  7851  001D26  5005               	movf	___flmul@a^0,w,c
  7852  001D28  0202               	mulwf	(___flmul@b+1)^0,c
  7853  001D2A  CFF3 F018          	movff	prodl,___flmul@temp
  7854  001D2E  CFF4 F019          	movff	prodh,___flmul@temp+1
  7855  001D32  5018               	movf	___flmul@temp^0,w,c
  7856  001D34  260E               	addwf	___flmul@grs^0,f,c
  7857  001D36  5019               	movf	(___flmul@temp+1)^0,w,c
  7858  001D38  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7859  001D3A  0E00               	movlw	0
  7860  001D3C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7861  001D3E  0E00               	movlw	0
  7862  001D40  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7863  001D42  5006               	movf	(___flmul@a+1)^0,w,c
  7864  001D44  0201               	mulwf	___flmul@b^0,c
  7865  001D46  CFF3 F018          	movff	prodl,___flmul@temp
  7866  001D4A  CFF4 F019          	movff	prodh,___flmul@temp+1
  7867  001D4E  5018               	movf	___flmul@temp^0,w,c
  7868  001D50  260E               	addwf	___flmul@grs^0,f,c
  7869  001D52  5019               	movf	(___flmul@temp+1)^0,w,c
  7870  001D54  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7871  001D56  0E00               	movlw	0
  7872  001D58  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7873  001D5A  0E00               	movlw	0
  7874  001D5C  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7875  001D5E  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7876  001D62  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7877  001D66  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7878  001D6A  6A0E               	clrf	___flmul@grs^0,c
  7879  001D6C  5005               	movf	___flmul@a^0,w,c
  7880  001D6E  0201               	mulwf	___flmul@b^0,c
  7881  001D70  CFF3 F018          	movff	prodl,___flmul@temp
  7882  001D74  CFF4 F019          	movff	prodh,___flmul@temp+1
  7883  001D78  5018               	movf	___flmul@temp^0,w,c
  7884  001D7A  260E               	addwf	___flmul@grs^0,f,c
  7885  001D7C  5019               	movf	(___flmul@temp+1)^0,w,c
  7886  001D7E  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7887  001D80  0E00               	movlw	0
  7888  001D82  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7889  001D84  0E00               	movlw	0
  7890  001D86  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7891  001D88  5007               	movf	(___flmul@a+2)^0,w,c
  7892  001D8A  0202               	mulwf	(___flmul@b+1)^0,c
  7893  001D8C  CFF3 F018          	movff	prodl,___flmul@temp
  7894  001D90  CFF4 F019          	movff	prodh,___flmul@temp+1
  7895  001D94  5018               	movf	___flmul@temp^0,w,c
  7896  001D96  2614               	addwf	___flmul@prod^0,f,c
  7897  001D98  5019               	movf	(___flmul@temp+1)^0,w,c
  7898  001D9A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7899  001D9C  0E00               	movlw	0
  7900  001D9E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7901  001DA0  0E00               	movlw	0
  7902  001DA2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7903  001DA4  5006               	movf	(___flmul@a+1)^0,w,c
  7904  001DA6  0203               	mulwf	(___flmul@b+2)^0,c
  7905  001DA8  CFF3 F018          	movff	prodl,___flmul@temp
  7906  001DAC  CFF4 F019          	movff	prodh,___flmul@temp+1
  7907  001DB0  5018               	movf	___flmul@temp^0,w,c
  7908  001DB2  2614               	addwf	___flmul@prod^0,f,c
  7909  001DB4  5019               	movf	(___flmul@temp+1)^0,w,c
  7910  001DB6  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7911  001DB8  0E00               	movlw	0
  7912  001DBA  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7913  001DBC  0E00               	movlw	0
  7914  001DBE  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7915  001DC0  5007               	movf	(___flmul@a+2)^0,w,c
  7916  001DC2  0203               	mulwf	(___flmul@b+2)^0,c
  7917  001DC4  CFF3 F018          	movff	prodl,___flmul@temp
  7918  001DC8  CFF4 F019          	movff	prodh,___flmul@temp+1
  7919  001DCC  5018               	movf	___flmul@temp^0,w,c
  7920  001DCE  6E09               	movwf	??___flmul^0,c
  7921  001DD0  5019               	movf	(___flmul@temp+1)^0,w,c
  7922  001DD2  6E0A               	movwf	(??___flmul+1)^0,c
  7923  001DD4  6A0B               	clrf	(??___flmul+2)^0,c
  7924  001DD6  6A0C               	clrf	(??___flmul+3)^0,c
  7925  001DD8  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  7926  001DDC  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  7927  001DE0  C009  F00A         	movff	??___flmul,??___flmul+1
  7928  001DE4  6A09               	clrf	??___flmul^0,c
  7929  001DE6  5009               	movf	??___flmul^0,w,c
  7930  001DE8  2614               	addwf	___flmul@prod^0,f,c
  7931  001DEA  500A               	movf	(??___flmul+1)^0,w,c
  7932  001DEC  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7933  001DEE  500B               	movf	(??___flmul+2)^0,w,c
  7934  001DF0  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7935  001DF2  500C               	movf	(??___flmul+3)^0,w,c
  7936  001DF4  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7937  001DF6  C00E  F009         	movff	___flmul@grs,??___flmul
  7938  001DFA  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  7939  001DFE  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  7940  001E02  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  7941  001E06  0E19               	movlw	25
  7942  001E08  EF0B  F00F         	goto	u3600
  7943  001E0C                     u3605:
  7944  001E0C  90D8               	bcf	status,0,c
  7945  001E0E  320C               	rrcf	(??___flmul+3)^0,f,c
  7946  001E10  320B               	rrcf	(??___flmul+2)^0,f,c
  7947  001E12  320A               	rrcf	(??___flmul+1)^0,f,c
  7948  001E14  3209               	rrcf	??___flmul^0,f,c
  7949  001E16                     u3600:
  7950  001E16  2EE8               	decfsz	wreg,f,c
  7951  001E18  EF06  F00F         	goto	u3605
  7952  001E1C  5009               	movf	??___flmul^0,w,c
  7953  001E1E  2614               	addwf	___flmul@prod^0,f,c
  7954  001E20  500A               	movf	(??___flmul+1)^0,w,c
  7955  001E22  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7956  001E24  500B               	movf	(??___flmul+2)^0,w,c
  7957  001E26  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7958  001E28  500C               	movf	(??___flmul+3)^0,w,c
  7959  001E2A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7960  001E2C  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7961  001E30  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7962  001E34  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7963  001E38  6A0E               	clrf	___flmul@grs^0,c
  7964  001E3A  5012               	movf	___flmul@aexp^0,w,c
  7965  001E3C  C013  F009         	movff	___flmul@bexp,??___flmul
  7966  001E40  6A0A               	clrf	(??___flmul+1)^0,c
  7967  001E42  2609               	addwf	??___flmul^0,f,c
  7968  001E44  0E00               	movlw	0
  7969  001E46  220A               	addwfc	(??___flmul+1)^0,f,c
  7970  001E48  0E82               	movlw	130
  7971  001E4A  2409               	addwf	??___flmul^0,w,c
  7972  001E4C  6E18               	movwf	___flmul@temp^0,c
  7973  001E4E  0EFF               	movlw	255
  7974  001E50  200A               	addwfc	(??___flmul+1)^0,w,c
  7975  001E52  6E19               	movwf	(___flmul@temp+1)^0,c
  7976  001E54  EF41  F00F         	goto	l3449
  7977  001E58                     l3443:
  7978  001E58  90D8               	bcf	status,0,c
  7979  001E5A  3614               	rlcf	___flmul@prod^0,f,c
  7980  001E5C  3615               	rlcf	(___flmul@prod+1)^0,f,c
  7981  001E5E  3616               	rlcf	(___flmul@prod+2)^0,f,c
  7982  001E60  3617               	rlcf	(___flmul@prod+3)^0,f,c
  7983  001E62  AE11               	btfss	(___flmul@grs+3)^0,7,c
  7984  001E64  EF36  F00F         	goto	u3611
  7985  001E68  EF38  F00F         	goto	u3610
  7986  001E6C                     u3611:
  7987  001E6C  EF39  F00F         	goto	l822
  7988  001E70                     u3610:
  7989  001E70  8014               	bsf	___flmul@prod^0,0,c
  7990  001E72                     l822:
  7991  001E72  90D8               	bcf	status,0,c
  7992  001E74  360E               	rlcf	___flmul@grs^0,f,c
  7993  001E76  360F               	rlcf	(___flmul@grs+1)^0,f,c
  7994  001E78  3610               	rlcf	(___flmul@grs+2)^0,f,c
  7995  001E7A  3611               	rlcf	(___flmul@grs+3)^0,f,c
  7996  001E7C  0618               	decf	___flmul@temp^0,f,c
  7997  001E7E  A0D8               	btfss	status,0,c
  7998  001E80  0619               	decf	(___flmul@temp+1)^0,f,c
  7999  001E82                     l3449:
  8000  001E82  AE16               	btfss	(___flmul@prod+2)^0,7,c
  8001  001E84  EF46  F00F         	goto	u3621
  8002  001E88  EF48  F00F         	goto	u3620
  8003  001E8C                     u3621:
  8004  001E8C  EF2C  F00F         	goto	l3443
  8005  001E90                     u3620:
  8006  001E90  0E00               	movlw	0
  8007  001E92  6E12               	movwf	___flmul@aexp^0,c
  8008  001E94  AE11               	btfss	(___flmul@grs+3)^0,7,c
  8009  001E96  EF4F  F00F         	goto	u3631
  8010  001E9A  EF51  F00F         	goto	u3630
  8011  001E9E                     u3631:
  8012  001E9E  EF75  F00F         	goto	l824
  8013  001EA2                     u3630:
  8014  001EA2  0EFF               	movlw	255
  8015  001EA4  140E               	andwf	___flmul@grs^0,w,c
  8016  001EA6  6E09               	movwf	??___flmul^0,c
  8017  001EA8  0EFF               	movlw	255
  8018  001EAA  140F               	andwf	(___flmul@grs+1)^0,w,c
  8019  001EAC  6E0A               	movwf	(??___flmul+1)^0,c
  8020  001EAE  0EFF               	movlw	255
  8021  001EB0  1410               	andwf	(___flmul@grs+2)^0,w,c
  8022  001EB2  6E0B               	movwf	(??___flmul+2)^0,c
  8023  001EB4  0E7F               	movlw	127
  8024  001EB6  1411               	andwf	(___flmul@grs+3)^0,w,c
  8025  001EB8  6E0C               	movwf	(??___flmul+3)^0,c
  8026  001EBA  5009               	movf	??___flmul^0,w,c
  8027  001EBC  100A               	iorwf	(??___flmul+1)^0,w,c
  8028  001EBE  100B               	iorwf	(??___flmul+2)^0,w,c
  8029  001EC0  100C               	iorwf	(??___flmul+3)^0,w,c
  8030  001EC2  B4D8               	btfsc	status,2,c
  8031  001EC4  EF66  F00F         	goto	u3641
  8032  001EC8  EF68  F00F         	goto	u3640
  8033  001ECC                     u3641:
  8034  001ECC  EF6C  F00F         	goto	l825
  8035  001ED0                     u3640:
  8036  001ED0                     l3457:
  8037  001ED0  0E01               	movlw	1
  8038  001ED2  6E12               	movwf	___flmul@aexp^0,c
  8039  001ED4  EF75  F00F         	goto	l824
  8040  001ED8                     l825:
  8041  001ED8  A014               	btfss	___flmul@prod^0,0,c
  8042  001EDA  EF71  F00F         	goto	u3651
  8043  001EDE  EF73  F00F         	goto	u3650
  8044  001EE2                     u3651:
  8045  001EE2  EF75  F00F         	goto	l824
  8046  001EE6                     u3650:
  8047  001EE6  EF68  F00F         	goto	l3457
  8048  001EEA                     l824:
  8049  001EEA  5012               	movf	___flmul@aexp^0,w,c
  8050  001EEC  B4D8               	btfsc	status,2,c
  8051  001EEE  EF7B  F00F         	goto	u3661
  8052  001EF2  EF7D  F00F         	goto	u3660
  8053  001EF6                     u3661:
  8054  001EF6  EFA1  F00F         	goto	l3469
  8055  001EFA                     u3660:
  8056  001EFA  0E01               	movlw	1
  8057  001EFC  2614               	addwf	___flmul@prod^0,f,c
  8058  001EFE  0E00               	movlw	0
  8059  001F00  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8060  001F02  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8061  001F04  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8062  001F06  A017               	btfss	(___flmul@prod+3)^0,0,c
  8063  001F08  EF88  F00F         	goto	u3671
  8064  001F0C  EF8A  F00F         	goto	u3670
  8065  001F10                     u3671:
  8066  001F10  EFA1  F00F         	goto	l3469
  8067  001F14                     u3670:
  8068  001F14  C014  F009         	movff	___flmul@prod,??___flmul
  8069  001F18  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  8070  001F1C  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  8071  001F20  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  8072  001F24  340C               	rlcf	(??___flmul+3)^0,w,c
  8073  001F26  320C               	rrcf	(??___flmul+3)^0,f,c
  8074  001F28  320B               	rrcf	(??___flmul+2)^0,f,c
  8075  001F2A  320A               	rrcf	(??___flmul+1)^0,f,c
  8076  001F2C  3209               	rrcf	??___flmul^0,f,c
  8077  001F2E  C009  F014         	movff	??___flmul,___flmul@prod
  8078  001F32  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  8079  001F36  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  8080  001F3A  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  8081  001F3E  4A18               	infsnz	___flmul@temp^0,f,c
  8082  001F40  2A19               	incf	(___flmul@temp+1)^0,f,c
  8083  001F42                     l3469:
  8084  001F42  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  8085  001F44  EFAC  F00F         	goto	u3681
  8086  001F48  5019               	movf	(___flmul@temp+1)^0,w,c
  8087  001F4A  E108               	bnz	u3680
  8088  001F4C  2818               	incf	___flmul@temp^0,w,c
  8089  001F4E  A0D8               	btfss	status,0,c
  8090  001F50  EFAC  F00F         	goto	u3681
  8091  001F54  EFAE  F00F         	goto	u3680
  8092  001F58                     u3681:
  8093  001F58  EFB8  F00F         	goto	l3473
  8094  001F5C                     u3680:
  8095  001F5C  0E00               	movlw	0
  8096  001F5E  6E14               	movwf	___flmul@prod^0,c
  8097  001F60  0E00               	movlw	0
  8098  001F62  6E15               	movwf	(___flmul@prod+1)^0,c
  8099  001F64  0E80               	movlw	128
  8100  001F66  6E16               	movwf	(___flmul@prod+2)^0,c
  8101  001F68  0E7F               	movlw	127
  8102  001F6A  6E17               	movwf	(___flmul@prod+3)^0,c
  8103  001F6C  EFE6  F00F         	goto	l3485
  8104  001F70                     l3473:
  8105  001F70  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  8106  001F72  EFC5  F00F         	goto	u3690
  8107  001F76  5019               	movf	(___flmul@temp+1)^0,w,c
  8108  001F78  E106               	bnz	u3691
  8109  001F7A  0418               	decf	___flmul@temp^0,w,c
  8110  001F7C  B0D8               	btfsc	status,0,c
  8111  001F7E  EFC3  F00F         	goto	u3691
  8112  001F82  EFC5  F00F         	goto	u3690
  8113  001F86                     u3691:
  8114  001F86  EFD1  F00F         	goto	l832
  8115  001F8A                     u3690:
  8116  001F8A  0E00               	movlw	0
  8117  001F8C  6E14               	movwf	___flmul@prod^0,c
  8118  001F8E  0E00               	movlw	0
  8119  001F90  6E15               	movwf	(___flmul@prod+1)^0,c
  8120  001F92  0E00               	movlw	0
  8121  001F94  6E16               	movwf	(___flmul@prod+2)^0,c
  8122  001F96  0E00               	movlw	0
  8123  001F98  6E17               	movwf	(___flmul@prod+3)^0,c
  8124  001F9A  0E00               	movlw	0
  8125  001F9C  6E0D               	movwf	___flmul@sign^0,c
  8126  001F9E  EFE6  F00F         	goto	l3485
  8127  001FA2                     l832:
  8128  001FA2  C018  F013         	movff	___flmul@temp,___flmul@bexp
  8129  001FA6  0EFF               	movlw	255
  8130  001FA8  1614               	andwf	___flmul@prod^0,f,c
  8131  001FAA  0EFF               	movlw	255
  8132  001FAC  1615               	andwf	(___flmul@prod+1)^0,f,c
  8133  001FAE  0E7F               	movlw	127
  8134  001FB0  1616               	andwf	(___flmul@prod+2)^0,f,c
  8135  001FB2  0E00               	movlw	0
  8136  001FB4  1617               	andwf	(___flmul@prod+3)^0,f,c
  8137  001FB6  A013               	btfss	___flmul@bexp^0,0,c
  8138  001FB8  EFE0  F00F         	goto	u3701
  8139  001FBC  EFE2  F00F         	goto	u3700
  8140  001FC0                     u3701:
  8141  001FC0  EFE3  F00F         	goto	l3483
  8142  001FC4                     u3700:
  8143  001FC4  8E16               	bsf	(___flmul@prod+2)^0,7,c
  8144  001FC6                     l3483:
  8145  001FC6  90D8               	bcf	status,0,c
  8146  001FC8  3013               	rrcf	___flmul@bexp^0,w,c
  8147  001FCA  6E17               	movwf	(___flmul@prod+3)^0,c
  8148  001FCC                     l3485:
  8149  001FCC  500D               	movf	___flmul@sign^0,w,c
  8150  001FCE  1217               	iorwf	(___flmul@prod+3)^0,f,c
  8151  001FD0  C014  F001         	movff	___flmul@prod,?___flmul
  8152  001FD4  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  8153  001FD8  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  8154  001FDC  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  8155  001FE0                     l819:
  8156  001FE0  0012               	return		;funcret
  8157  001FE2                     __end_of___flmul:
  8158                           	callstack 0
  8159                           
  8160 ;; *************** function ___flge *****************
  8161 ;; Defined at:
  8162 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\flge.c"
  8163 ;; Parameters:    Size  Location     Type
  8164 ;;  ff1             4   30[COMRAM] unsigned char 
  8165 ;;  ff2             4   34[COMRAM] unsigned char 
  8166 ;; Auto vars:     Size  Location     Type
  8167 ;;		None
  8168 ;; Return value:  Size  Location     Type
  8169 ;;		None               void
  8170 ;; Registers used:
  8171 ;;		wreg, status,2, status,0
  8172 ;; Tracked objects:
  8173 ;;		On entry : 0/0
  8174 ;;		On exit  : 0/0
  8175 ;;		Unchanged: 0/0
  8176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8177 ;;      Params:         8       0       0       0       0       0       0
  8178 ;;      Locals:         0       0       0       0       0       0       0
  8179 ;;      Temps:          4       0       0       0       0       0       0
  8180 ;;      Totals:        12       0       0       0       0       0       0
  8181 ;;Total ram usage:       12 bytes
  8182 ;; Hardware stack levels used:    1
  8183 ;; This function calls:
  8184 ;;		Nothing
  8185 ;; This function is called by:
  8186 ;;		_encher_tanque
  8187 ;;		_efgtoa
  8188 ;; This function uses a non-reentrant model
  8189 ;;
  8190                           
  8191                           	psect	text26
  8192  003392                     __ptext26:
  8193                           	callstack 0
  8194  003392                     ___flge:
  8195                           	callstack 25
  8196  003392  0E00               	movlw	0
  8197  003394  141F               	andwf	___flge@ff1^0,w,c
  8198  003396  6E27               	movwf	??___flge^0,c
  8199  003398  0E00               	movlw	0
  8200  00339A  1420               	andwf	(___flge@ff1+1)^0,w,c
  8201  00339C  6E28               	movwf	(??___flge+1)^0,c
  8202  00339E  0E80               	movlw	128
  8203  0033A0  1421               	andwf	(___flge@ff1+2)^0,w,c
  8204  0033A2  6E29               	movwf	(??___flge+2)^0,c
  8205  0033A4  0E7F               	movlw	127
  8206  0033A6  1422               	andwf	(___flge@ff1+3)^0,w,c
  8207  0033A8  6E2A               	movwf	(??___flge+3)^0,c
  8208  0033AA  5027               	movf	??___flge^0,w,c
  8209  0033AC  1028               	iorwf	(??___flge+1)^0,w,c
  8210  0033AE  1029               	iorwf	(??___flge+2)^0,w,c
  8211  0033B0  102A               	iorwf	(??___flge+3)^0,w,c
  8212  0033B2  A4D8               	btfss	status,2,c
  8213  0033B4  EFDE  F019         	goto	u3861
  8214  0033B8  EFE0  F019         	goto	u3860
  8215  0033BC                     u3861:
  8216  0033BC  EFE8  F019         	goto	l3597
  8217  0033C0                     u3860:
  8218  0033C0  0E00               	movlw	0
  8219  0033C2  6E1F               	movwf	___flge@ff1^0,c
  8220  0033C4  0E00               	movlw	0
  8221  0033C6  6E20               	movwf	(___flge@ff1+1)^0,c
  8222  0033C8  0E00               	movlw	0
  8223  0033CA  6E21               	movwf	(___flge@ff1+2)^0,c
  8224  0033CC  0E00               	movlw	0
  8225  0033CE  6E22               	movwf	(___flge@ff1+3)^0,c
  8226  0033D0                     l3597:
  8227  0033D0  0E00               	movlw	0
  8228  0033D2  1423               	andwf	___flge@ff2^0,w,c
  8229  0033D4  6E27               	movwf	??___flge^0,c
  8230  0033D6  0E00               	movlw	0
  8231  0033D8  1424               	andwf	(___flge@ff2+1)^0,w,c
  8232  0033DA  6E28               	movwf	(??___flge+1)^0,c
  8233  0033DC  0E80               	movlw	128
  8234  0033DE  1425               	andwf	(___flge@ff2+2)^0,w,c
  8235  0033E0  6E29               	movwf	(??___flge+2)^0,c
  8236  0033E2  0E7F               	movlw	127
  8237  0033E4  1426               	andwf	(___flge@ff2+3)^0,w,c
  8238  0033E6  6E2A               	movwf	(??___flge+3)^0,c
  8239  0033E8  5027               	movf	??___flge^0,w,c
  8240  0033EA  1028               	iorwf	(??___flge+1)^0,w,c
  8241  0033EC  1029               	iorwf	(??___flge+2)^0,w,c
  8242  0033EE  102A               	iorwf	(??___flge+3)^0,w,c
  8243  0033F0  A4D8               	btfss	status,2,c
  8244  0033F2  EFFD  F019         	goto	u3871
  8245  0033F6  EFFF  F019         	goto	u3870
  8246  0033FA                     u3871:
  8247  0033FA  EF07  F01A         	goto	l3601
  8248  0033FE                     u3870:
  8249  0033FE  0E00               	movlw	0
  8250  003400  6E23               	movwf	___flge@ff2^0,c
  8251  003402  0E00               	movlw	0
  8252  003404  6E24               	movwf	(___flge@ff2+1)^0,c
  8253  003406  0E00               	movlw	0
  8254  003408  6E25               	movwf	(___flge@ff2+2)^0,c
  8255  00340A  0E00               	movlw	0
  8256  00340C  6E26               	movwf	(___flge@ff2+3)^0,c
  8257  00340E                     l3601:
  8258  00340E  AE22               	btfss	(___flge@ff1+3)^0,7,c
  8259  003410  EF0C  F01A         	goto	u3881
  8260  003414  EF0E  F01A         	goto	u3880
  8261  003418                     u3881:
  8262  003418  EF17  F01A         	goto	l3605
  8263  00341C                     u3880:
  8264  00341C  6C1F               	negf	___flge@ff1^0,c
  8265  00341E  1E20               	comf	(___flge@ff1+1)^0,f,c
  8266  003420  B0D8               	btfsc	status,0,c
  8267  003422  2A20               	incf	(___flge@ff1+1)^0,f,c
  8268  003424  1E21               	comf	(___flge@ff1+2)^0,f,c
  8269  003426  B0D8               	btfsc	status,0,c
  8270  003428  2A21               	incf	(___flge@ff1+2)^0,f,c
  8271  00342A  0E80               	movlw	128
  8272  00342C  5622               	subfwb	(___flge@ff1+3)^0,f,c
  8273  00342E                     l3605:
  8274  00342E  AE26               	btfss	(___flge@ff2+3)^0,7,c
  8275  003430  EF1C  F01A         	goto	u3891
  8276  003434  EF1E  F01A         	goto	u3890
  8277  003438                     u3891:
  8278  003438  EF27  F01A         	goto	l466
  8279  00343C                     u3890:
  8280  00343C  6C23               	negf	___flge@ff2^0,c
  8281  00343E  1E24               	comf	(___flge@ff2+1)^0,f,c
  8282  003440  B0D8               	btfsc	status,0,c
  8283  003442  2A24               	incf	(___flge@ff2+1)^0,f,c
  8284  003444  1E25               	comf	(___flge@ff2+2)^0,f,c
  8285  003446  B0D8               	btfsc	status,0,c
  8286  003448  2A25               	incf	(___flge@ff2+2)^0,f,c
  8287  00344A  0E80               	movlw	128
  8288  00344C  5626               	subfwb	(___flge@ff2+3)^0,f,c
  8289  00344E                     l466:
  8290  00344E  0E00               	movlw	0
  8291  003450  1A1F               	xorwf	___flge@ff1^0,f,c
  8292  003452  0E00               	movlw	0
  8293  003454  1A20               	xorwf	(___flge@ff1+1)^0,f,c
  8294  003456  0E00               	movlw	0
  8295  003458  1A21               	xorwf	(___flge@ff1+2)^0,f,c
  8296  00345A  0E80               	movlw	128
  8297  00345C  1A22               	xorwf	(___flge@ff1+3)^0,f,c
  8298  00345E  0E00               	movlw	0
  8299  003460  1A23               	xorwf	___flge@ff2^0,f,c
  8300  003462  0E00               	movlw	0
  8301  003464  1A24               	xorwf	(___flge@ff2+1)^0,f,c
  8302  003466  0E00               	movlw	0
  8303  003468  1A25               	xorwf	(___flge@ff2+2)^0,f,c
  8304  00346A  0E80               	movlw	128
  8305  00346C  1A26               	xorwf	(___flge@ff2+3)^0,f,c
  8306  00346E  5023               	movf	___flge@ff2^0,w,c
  8307  003470  5C1F               	subwf	___flge@ff1^0,w,c
  8308  003472  5024               	movf	(___flge@ff2+1)^0,w,c
  8309  003474  5820               	subwfb	(___flge@ff1+1)^0,w,c
  8310  003476  5025               	movf	(___flge@ff2+2)^0,w,c
  8311  003478  5821               	subwfb	(___flge@ff1+2)^0,w,c
  8312  00347A  5026               	movf	(___flge@ff2+3)^0,w,c
  8313  00347C  5822               	subwfb	(___flge@ff1+3)^0,w,c
  8314  00347E  B0D8               	btfsc	status,0,c
  8315  003480  EF44  F01A         	goto	u3901
  8316  003484  EF46  F01A         	goto	u3900
  8317  003488                     u3901:
  8318  003488  EF49  F01A         	goto	l3611
  8319  00348C                     u3900:
  8320  00348C  90D8               	bcf	status,0,c
  8321  00348E  EF4A  F01A         	goto	l471
  8322  003492                     l3611:
  8323  003492  80D8               	bsf	status,0,c
  8324  003494                     l471:
  8325  003494  0012               	return		;funcret
  8326  003496                     __end_of___flge:
  8327                           	callstack 0
  8328                           
  8329 ;; *************** function ___fleq *****************
  8330 ;; Defined at:
  8331 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\fleq.c"
  8332 ;; Parameters:    Size  Location     Type
  8333 ;;  ff1             4    0[COMRAM] unsigned char 
  8334 ;;  ff2             4    4[COMRAM] unsigned char 
  8335 ;; Auto vars:     Size  Location     Type
  8336 ;;		None
  8337 ;; Return value:  Size  Location     Type
  8338 ;;		None               void
  8339 ;; Registers used:
  8340 ;;		wreg, status,2, status,0
  8341 ;; Tracked objects:
  8342 ;;		On entry : 0/0
  8343 ;;		On exit  : 0/0
  8344 ;;		Unchanged: 0/0
  8345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8346 ;;      Params:         8       0       0       0       0       0       0
  8347 ;;      Locals:         0       0       0       0       0       0       0
  8348 ;;      Temps:          4       0       0       0       0       0       0
  8349 ;;      Totals:        12       0       0       0       0       0       0
  8350 ;;Total ram usage:       12 bytes
  8351 ;; Hardware stack levels used:    1
  8352 ;; This function calls:
  8353 ;;		Nothing
  8354 ;; This function is called by:
  8355 ;;		_efgtoa
  8356 ;; This function uses a non-reentrant model
  8357 ;;
  8358                           
  8359                           	psect	text27
  8360  003A26                     __ptext27:
  8361                           	callstack 0
  8362  003A26                     ___fleq:
  8363                           	callstack 25
  8364  003A26  0E00               	movlw	0
  8365  003A28  1401               	andwf	___fleq@ff1^0,w,c
  8366  003A2A  6E09               	movwf	??___fleq^0,c
  8367  003A2C  0E00               	movlw	0
  8368  003A2E  1402               	andwf	(___fleq@ff1+1)^0,w,c
  8369  003A30  6E0A               	movwf	(??___fleq+1)^0,c
  8370  003A32  0E80               	movlw	128
  8371  003A34  1403               	andwf	(___fleq@ff1+2)^0,w,c
  8372  003A36  6E0B               	movwf	(??___fleq+2)^0,c
  8373  003A38  0E7F               	movlw	127
  8374  003A3A  1404               	andwf	(___fleq@ff1+3)^0,w,c
  8375  003A3C  6E0C               	movwf	(??___fleq+3)^0,c
  8376  003A3E  5009               	movf	??___fleq^0,w,c
  8377  003A40  100A               	iorwf	(??___fleq+1)^0,w,c
  8378  003A42  100B               	iorwf	(??___fleq+2)^0,w,c
  8379  003A44  100C               	iorwf	(??___fleq+3)^0,w,c
  8380  003A46  A4D8               	btfss	status,2,c
  8381  003A48  EF28  F01D         	goto	u3831
  8382  003A4C  EF2A  F01D         	goto	u3830
  8383  003A50                     u3831:
  8384  003A50  EF32  F01D         	goto	l3581
  8385  003A54                     u3830:
  8386  003A54  0E00               	movlw	0
  8387  003A56  6E01               	movwf	___fleq@ff1^0,c
  8388  003A58  0E00               	movlw	0
  8389  003A5A  6E02               	movwf	(___fleq@ff1+1)^0,c
  8390  003A5C  0E00               	movlw	0
  8391  003A5E  6E03               	movwf	(___fleq@ff1+2)^0,c
  8392  003A60  0E00               	movlw	0
  8393  003A62  6E04               	movwf	(___fleq@ff1+3)^0,c
  8394  003A64                     l3581:
  8395  003A64  0E00               	movlw	0
  8396  003A66  1405               	andwf	___fleq@ff2^0,w,c
  8397  003A68  6E09               	movwf	??___fleq^0,c
  8398  003A6A  0E00               	movlw	0
  8399  003A6C  1406               	andwf	(___fleq@ff2+1)^0,w,c
  8400  003A6E  6E0A               	movwf	(??___fleq+1)^0,c
  8401  003A70  0E80               	movlw	128
  8402  003A72  1407               	andwf	(___fleq@ff2+2)^0,w,c
  8403  003A74  6E0B               	movwf	(??___fleq+2)^0,c
  8404  003A76  0E7F               	movlw	127
  8405  003A78  1408               	andwf	(___fleq@ff2+3)^0,w,c
  8406  003A7A  6E0C               	movwf	(??___fleq+3)^0,c
  8407  003A7C  5009               	movf	??___fleq^0,w,c
  8408  003A7E  100A               	iorwf	(??___fleq+1)^0,w,c
  8409  003A80  100B               	iorwf	(??___fleq+2)^0,w,c
  8410  003A82  100C               	iorwf	(??___fleq+3)^0,w,c
  8411  003A84  A4D8               	btfss	status,2,c
  8412  003A86  EF47  F01D         	goto	u3841
  8413  003A8A  EF49  F01D         	goto	u3840
  8414  003A8E                     u3841:
  8415  003A8E  EF51  F01D         	goto	l3585
  8416  003A92                     u3840:
  8417  003A92  0E00               	movlw	0
  8418  003A94  6E05               	movwf	___fleq@ff2^0,c
  8419  003A96  0E00               	movlw	0
  8420  003A98  6E06               	movwf	(___fleq@ff2+1)^0,c
  8421  003A9A  0E00               	movlw	0
  8422  003A9C  6E07               	movwf	(___fleq@ff2+2)^0,c
  8423  003A9E  0E00               	movlw	0
  8424  003AA0  6E08               	movwf	(___fleq@ff2+3)^0,c
  8425  003AA2                     l3585:
  8426  003AA2  5005               	movf	___fleq@ff2^0,w,c
  8427  003AA4  1801               	xorwf	___fleq@ff1^0,w,c
  8428  003AA6  E10F               	bnz	u3850
  8429  003AA8  5006               	movf	(___fleq@ff2+1)^0,w,c
  8430  003AAA  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  8431  003AAC  E10C               	bnz	u3850
  8432  003AAE  5007               	movf	(___fleq@ff2+2)^0,w,c
  8433  003AB0  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  8434  003AB2  E109               	bnz	u3850
  8435  003AB4  5008               	movf	(___fleq@ff2+3)^0,w,c
  8436  003AB6  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  8437  003AB8  B4D8               	btfsc	status,2,c
  8438  003ABA  EF61  F01D         	goto	u3851
  8439  003ABE  EF63  F01D         	goto	u3850
  8440  003AC2                     u3851:
  8441  003AC2  EF66  F01D         	goto	l3589
  8442  003AC6                     u3850:
  8443  003AC6  90D8               	bcf	status,0,c
  8444  003AC8  EF67  F01D         	goto	l460
  8445  003ACC                     l3589:
  8446  003ACC  80D8               	bsf	status,0,c
  8447  003ACE                     l460:
  8448  003ACE  0012               	return		;funcret
  8449  003AD0                     __end_of___fleq:
  8450                           	callstack 0
  8451                           
  8452 ;; *************** function ___fldiv *****************
  8453 ;; Defined at:
  8454 ;;		line 11 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
  8455 ;; Parameters:    Size  Location     Type
  8456 ;;  b               4    0[COMRAM] unsigned char 
  8457 ;;  a               4    4[COMRAM] unsigned char 
  8458 ;; Auto vars:     Size  Location     Type
  8459 ;;  grs             4   19[COMRAM] unsigned long 
  8460 ;;  rem             4   12[COMRAM] unsigned long 
  8461 ;;  new_exp         2   17[COMRAM] short 
  8462 ;;  aexp            1   24[COMRAM] unsigned char 
  8463 ;;  bexp            1   23[COMRAM] unsigned char 
  8464 ;;  sign            1   16[COMRAM] unsigned char 
  8465 ;; Return value:  Size  Location     Type
  8466 ;;                  4    0[COMRAM] unsigned char 
  8467 ;; Registers used:
  8468 ;;		wreg, status,2, status,0
  8469 ;; Tracked objects:
  8470 ;;		On entry : 0/0
  8471 ;;		On exit  : 0/0
  8472 ;;		Unchanged: 0/0
  8473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8474 ;;      Params:         8       0       0       0       0       0       0
  8475 ;;      Locals:        13       0       0       0       0       0       0
  8476 ;;      Temps:          4       0       0       0       0       0       0
  8477 ;;      Totals:        25       0       0       0       0       0       0
  8478 ;;Total ram usage:       25 bytes
  8479 ;; Hardware stack levels used:    1
  8480 ;; This function calls:
  8481 ;;		Nothing
  8482 ;; This function is called by:
  8483 ;;		_esvaziar_tanque
  8484 ;;		_efgtoa
  8485 ;; This function uses a non-reentrant model
  8486 ;;
  8487                           
  8488                           	psect	text28
  8489  0023D4                     __ptext28:
  8490                           	callstack 0
  8491  0023D4                     ___fldiv:
  8492                           	callstack 25
  8493  0023D4  5004               	movf	(___fldiv@b+3)^0,w,c
  8494  0023D6  0B80               	andlw	128
  8495  0023D8  6E11               	movwf	___fldiv@sign^0,c
  8496  0023DA  5004               	movf	(___fldiv@b+3)^0,w,c
  8497  0023DC  2404               	addwf	(___fldiv@b+3)^0,w,c
  8498  0023DE  6E18               	movwf	___fldiv@bexp^0,c
  8499  0023E0  AE03               	btfss	(___fldiv@b+2)^0,7,c
  8500  0023E2  EFF5  F011         	goto	u3291
  8501  0023E6  EFF7  F011         	goto	u3290
  8502  0023EA                     u3291:
  8503  0023EA  EFF8  F011         	goto	l3229
  8504  0023EE                     u3290:
  8505  0023EE  8018               	bsf	___fldiv@bexp^0,0,c
  8506  0023F0                     l3229:
  8507  0023F0  5018               	movf	___fldiv@bexp^0,w,c
  8508  0023F2  B4D8               	btfsc	status,2,c
  8509  0023F4  EFFE  F011         	goto	u3301
  8510  0023F8  EF00  F012         	goto	u3300
  8511  0023FC                     u3301:
  8512  0023FC  EF15  F012         	goto	l3239
  8513  002400                     u3300:
  8514  002400  2818               	incf	___fldiv@bexp^0,w,c
  8515  002402  A4D8               	btfss	status,2,c
  8516  002404  EF06  F012         	goto	u3311
  8517  002408  EF08  F012         	goto	u3310
  8518  00240C                     u3311:
  8519  00240C  EF10  F012         	goto	l3235
  8520  002410                     u3310:
  8521  002410  0E00               	movlw	0
  8522  002412  6E01               	movwf	___fldiv@b^0,c
  8523  002414  0E00               	movlw	0
  8524  002416  6E02               	movwf	(___fldiv@b+1)^0,c
  8525  002418  0E00               	movlw	0
  8526  00241A  6E03               	movwf	(___fldiv@b+2)^0,c
  8527  00241C  0E00               	movlw	0
  8528  00241E  6E04               	movwf	(___fldiv@b+3)^0,c
  8529  002420                     l3235:
  8530  002420  8E03               	bsf	(___fldiv@b+2)^0,7,c
  8531  002422  0E00               	movlw	0
  8532  002424  6E04               	movwf	(___fldiv@b+3)^0,c
  8533  002426  EF1D  F012         	goto	l3241
  8534  00242A                     l3239:
  8535  00242A  0E00               	movlw	0
  8536  00242C  6E01               	movwf	___fldiv@b^0,c
  8537  00242E  0E00               	movlw	0
  8538  002430  6E02               	movwf	(___fldiv@b+1)^0,c
  8539  002432  0E00               	movlw	0
  8540  002434  6E03               	movwf	(___fldiv@b+2)^0,c
  8541  002436  0E00               	movlw	0
  8542  002438  6E04               	movwf	(___fldiv@b+3)^0,c
  8543  00243A                     l3241:
  8544  00243A  5008               	movf	(___fldiv@a+3)^0,w,c
  8545  00243C  0B80               	andlw	128
  8546  00243E  1A11               	xorwf	___fldiv@sign^0,f,c
  8547  002440  5008               	movf	(___fldiv@a+3)^0,w,c
  8548  002442  2408               	addwf	(___fldiv@a+3)^0,w,c
  8549  002444  6E19               	movwf	___fldiv@aexp^0,c
  8550  002446  AE07               	btfss	(___fldiv@a+2)^0,7,c
  8551  002448  EF28  F012         	goto	u3321
  8552  00244C  EF2A  F012         	goto	u3320
  8553  002450                     u3321:
  8554  002450  EF2B  F012         	goto	l3249
  8555  002454                     u3320:
  8556  002454  8019               	bsf	___fldiv@aexp^0,0,c
  8557  002456                     l3249:
  8558  002456  5019               	movf	___fldiv@aexp^0,w,c
  8559  002458  B4D8               	btfsc	status,2,c
  8560  00245A  EF31  F012         	goto	u3331
  8561  00245E  EF33  F012         	goto	u3330
  8562  002462                     u3331:
  8563  002462  EF48  F012         	goto	l3259
  8564  002466                     u3330:
  8565  002466  2819               	incf	___fldiv@aexp^0,w,c
  8566  002468  A4D8               	btfss	status,2,c
  8567  00246A  EF39  F012         	goto	u3341
  8568  00246E  EF3B  F012         	goto	u3340
  8569  002472                     u3341:
  8570  002472  EF43  F012         	goto	l3255
  8571  002476                     u3340:
  8572  002476  0E00               	movlw	0
  8573  002478  6E05               	movwf	___fldiv@a^0,c
  8574  00247A  0E00               	movlw	0
  8575  00247C  6E06               	movwf	(___fldiv@a+1)^0,c
  8576  00247E  0E00               	movlw	0
  8577  002480  6E07               	movwf	(___fldiv@a+2)^0,c
  8578  002482  0E00               	movlw	0
  8579  002484  6E08               	movwf	(___fldiv@a+3)^0,c
  8580  002486                     l3255:
  8581  002486  8E07               	bsf	(___fldiv@a+2)^0,7,c
  8582  002488  0E00               	movlw	0
  8583  00248A  6E08               	movwf	(___fldiv@a+3)^0,c
  8584  00248C  EF50  F012         	goto	l3261
  8585  002490                     l3259:
  8586  002490  0E00               	movlw	0
  8587  002492  6E05               	movwf	___fldiv@a^0,c
  8588  002494  0E00               	movlw	0
  8589  002496  6E06               	movwf	(___fldiv@a+1)^0,c
  8590  002498  0E00               	movlw	0
  8591  00249A  6E07               	movwf	(___fldiv@a+2)^0,c
  8592  00249C  0E00               	movlw	0
  8593  00249E  6E08               	movwf	(___fldiv@a+3)^0,c
  8594  0024A0                     l3261:
  8595  0024A0  5005               	movf	___fldiv@a^0,w,c
  8596  0024A2  1006               	iorwf	(___fldiv@a+1)^0,w,c
  8597  0024A4  1007               	iorwf	(___fldiv@a+2)^0,w,c
  8598  0024A6  1008               	iorwf	(___fldiv@a+3)^0,w,c
  8599  0024A8  A4D8               	btfss	status,2,c
  8600  0024AA  EF59  F012         	goto	u3351
  8601  0024AE  EF5B  F012         	goto	u3350
  8602  0024B2                     u3351:
  8603  0024B2  EF73  F012         	goto	l3273
  8604  0024B6                     u3350:
  8605  0024B6  0E00               	movlw	0
  8606  0024B8  6E01               	movwf	___fldiv@b^0,c
  8607  0024BA  0E00               	movlw	0
  8608  0024BC  6E02               	movwf	(___fldiv@b+1)^0,c
  8609  0024BE  0E00               	movlw	0
  8610  0024C0  6E03               	movwf	(___fldiv@b+2)^0,c
  8611  0024C2  0E00               	movlw	0
  8612  0024C4  6E04               	movwf	(___fldiv@b+3)^0,c
  8613  0024C6  0E80               	movlw	128
  8614  0024C8  1203               	iorwf	(___fldiv@b+2)^0,f,c
  8615  0024CA  0E7F               	movlw	127
  8616  0024CC  1204               	iorwf	(___fldiv@b+3)^0,f,c
  8617  0024CE                     l3267:
  8618  0024CE  5011               	movf	___fldiv@sign^0,w,c
  8619  0024D0  1204               	iorwf	(___fldiv@b+3)^0,f,c
  8620  0024D2  C001  F001         	movff	___fldiv@b,?___fldiv
  8621  0024D6  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  8622  0024DA  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  8623  0024DE  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  8624  0024E2  EFB6  F013         	goto	l783
  8625  0024E6                     l3273:
  8626  0024E6  5018               	movf	___fldiv@bexp^0,w,c
  8627  0024E8  A4D8               	btfss	status,2,c
  8628  0024EA  EF79  F012         	goto	u3361
  8629  0024EE  EF7B  F012         	goto	u3360
  8630  0024F2                     u3361:
  8631  0024F2  EF85  F012         	goto	l3281
  8632  0024F6                     u3360:
  8633  0024F6  0E00               	movlw	0
  8634  0024F8  6E01               	movwf	?___fldiv^0,c
  8635  0024FA  0E00               	movlw	0
  8636  0024FC  6E02               	movwf	(?___fldiv+1)^0,c
  8637  0024FE  0E00               	movlw	0
  8638  002500  6E03               	movwf	(?___fldiv+2)^0,c
  8639  002502  0E00               	movlw	0
  8640  002504  6E04               	movwf	(?___fldiv+3)^0,c
  8641  002506  EFB6  F013         	goto	l783
  8642  00250A                     l3281:
  8643  00250A  5019               	movf	___fldiv@aexp^0,w,c
  8644  00250C  C018  F009         	movff	___fldiv@bexp,??___fldiv
  8645  002510  6A0A               	clrf	(??___fldiv+1)^0,c
  8646  002512  5E09               	subwf	??___fldiv^0,f,c
  8647  002514  0E00               	movlw	0
  8648  002516  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  8649  002518  0E7F               	movlw	127
  8650  00251A  2409               	addwf	??___fldiv^0,w,c
  8651  00251C  6E12               	movwf	___fldiv@new_exp^0,c
  8652  00251E  0E00               	movlw	0
  8653  002520  200A               	addwfc	(??___fldiv+1)^0,w,c
  8654  002522  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8655  002524  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  8656  002528  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  8657  00252C  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  8658  002530  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  8659  002534  0E00               	movlw	0
  8660  002536  6E01               	movwf	___fldiv@b^0,c
  8661  002538  0E00               	movlw	0
  8662  00253A  6E02               	movwf	(___fldiv@b+1)^0,c
  8663  00253C  0E00               	movlw	0
  8664  00253E  6E03               	movwf	(___fldiv@b+2)^0,c
  8665  002540  0E00               	movlw	0
  8666  002542  6E04               	movwf	(___fldiv@b+3)^0,c
  8667  002544  0E00               	movlw	0
  8668  002546  6E14               	movwf	___fldiv@grs^0,c
  8669  002548  0E00               	movlw	0
  8670  00254A  6E15               	movwf	(___fldiv@grs+1)^0,c
  8671  00254C  0E00               	movlw	0
  8672  00254E  6E16               	movwf	(___fldiv@grs+2)^0,c
  8673  002550  0E00               	movlw	0
  8674  002552  6E17               	movwf	(___fldiv@grs+3)^0,c
  8675  002554  0E00               	movlw	0
  8676  002556  6E19               	movwf	___fldiv@aexp^0,c
  8677  002558  EFE6  F012         	goto	l785
  8678  00255C                     l3291:
  8679  00255C  5019               	movf	___fldiv@aexp^0,w,c
  8680  00255E  B4D8               	btfsc	status,2,c
  8681  002560  EFB4  F012         	goto	u3371
  8682  002564  EFB6  F012         	goto	u3370
  8683  002568                     u3371:
  8684  002568  EFCD  F012         	goto	l3299
  8685  00256C                     u3370:
  8686  00256C  90D8               	bcf	status,0,c
  8687  00256E  360D               	rlcf	___fldiv@rem^0,f,c
  8688  002570  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  8689  002572  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  8690  002574  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  8691  002576  90D8               	bcf	status,0,c
  8692  002578  3601               	rlcf	___fldiv@b^0,f,c
  8693  00257A  3602               	rlcf	(___fldiv@b+1)^0,f,c
  8694  00257C  3603               	rlcf	(___fldiv@b+2)^0,f,c
  8695  00257E  3604               	rlcf	(___fldiv@b+3)^0,f,c
  8696  002580  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8697  002582  EFC5  F012         	goto	u3381
  8698  002586  EFC7  F012         	goto	u3380
  8699  00258A                     u3381:
  8700  00258A  EFC8  F012         	goto	l788
  8701  00258E                     u3380:
  8702  00258E  8001               	bsf	___fldiv@b^0,0,c
  8703  002590                     l788:
  8704  002590  90D8               	bcf	status,0,c
  8705  002592  3614               	rlcf	___fldiv@grs^0,f,c
  8706  002594  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  8707  002596  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  8708  002598  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  8709  00259A                     l3299:
  8710  00259A  5005               	movf	___fldiv@a^0,w,c
  8711  00259C  5C0D               	subwf	___fldiv@rem^0,w,c
  8712  00259E  5006               	movf	(___fldiv@a+1)^0,w,c
  8713  0025A0  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  8714  0025A2  5007               	movf	(___fldiv@a+2)^0,w,c
  8715  0025A4  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  8716  0025A6  5008               	movf	(___fldiv@a+3)^0,w,c
  8717  0025A8  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  8718  0025AA  A0D8               	btfss	status,0,c
  8719  0025AC  EFDA  F012         	goto	u3391
  8720  0025B0  EFDC  F012         	goto	u3390
  8721  0025B4                     u3391:
  8722  0025B4  EFE5  F012         	goto	l3305
  8723  0025B8                     u3390:
  8724  0025B8  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  8725  0025BA  5005               	movf	___fldiv@a^0,w,c
  8726  0025BC  5E0D               	subwf	___fldiv@rem^0,f,c
  8727  0025BE  5006               	movf	(___fldiv@a+1)^0,w,c
  8728  0025C0  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  8729  0025C2  5007               	movf	(___fldiv@a+2)^0,w,c
  8730  0025C4  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  8731  0025C6  5008               	movf	(___fldiv@a+3)^0,w,c
  8732  0025C8  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  8733  0025CA                     l3305:
  8734  0025CA  2A19               	incf	___fldiv@aexp^0,f,c
  8735  0025CC                     l785:
  8736  0025CC  0E19               	movlw	25
  8737  0025CE  6419               	cpfsgt	___fldiv@aexp^0,c
  8738  0025D0  EFEC  F012         	goto	u3401
  8739  0025D4  EFEE  F012         	goto	u3400
  8740  0025D8                     u3401:
  8741  0025D8  EFAE  F012         	goto	l3291
  8742  0025DC                     u3400:
  8743  0025DC  500D               	movf	___fldiv@rem^0,w,c
  8744  0025DE  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  8745  0025E0  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  8746  0025E2  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  8747  0025E4  B4D8               	btfsc	status,2,c
  8748  0025E6  EFF7  F012         	goto	u3411
  8749  0025EA  EFF9  F012         	goto	u3410
  8750  0025EE                     u3411:
  8751  0025EE  EF11  F013         	goto	l3317
  8752  0025F2                     u3410:
  8753  0025F2  8014               	bsf	___fldiv@grs^0,0,c
  8754  0025F4  EF11  F013         	goto	l3317
  8755  0025F8                     l3311:
  8756  0025F8  90D8               	bcf	status,0,c
  8757  0025FA  3601               	rlcf	___fldiv@b^0,f,c
  8758  0025FC  3602               	rlcf	(___fldiv@b+1)^0,f,c
  8759  0025FE  3603               	rlcf	(___fldiv@b+2)^0,f,c
  8760  002600  3604               	rlcf	(___fldiv@b+3)^0,f,c
  8761  002602  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8762  002604  EF06  F013         	goto	u3421
  8763  002608  EF08  F013         	goto	u3420
  8764  00260C                     u3421:
  8765  00260C  EF09  F013         	goto	l794
  8766  002610                     u3420:
  8767  002610  8001               	bsf	___fldiv@b^0,0,c
  8768  002612                     l794:
  8769  002612  90D8               	bcf	status,0,c
  8770  002614  3614               	rlcf	___fldiv@grs^0,f,c
  8771  002616  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  8772  002618  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  8773  00261A  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  8774  00261C  0612               	decf	___fldiv@new_exp^0,f,c
  8775  00261E  A0D8               	btfss	status,0,c
  8776  002620  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  8777  002622                     l3317:
  8778  002622  AE03               	btfss	(___fldiv@b+2)^0,7,c
  8779  002624  EF16  F013         	goto	u3431
  8780  002628  EF18  F013         	goto	u3430
  8781  00262C                     u3431:
  8782  00262C  EFFC  F012         	goto	l3311
  8783  002630                     u3430:
  8784  002630  0E00               	movlw	0
  8785  002632  6E19               	movwf	___fldiv@aexp^0,c
  8786  002634  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8787  002636  EF1F  F013         	goto	u3441
  8788  00263A  EF21  F013         	goto	u3440
  8789  00263E                     u3441:
  8790  00263E  EF45  F013         	goto	l796
  8791  002642                     u3440:
  8792  002642  0EFF               	movlw	255
  8793  002644  1414               	andwf	___fldiv@grs^0,w,c
  8794  002646  6E09               	movwf	??___fldiv^0,c
  8795  002648  0EFF               	movlw	255
  8796  00264A  1415               	andwf	(___fldiv@grs+1)^0,w,c
  8797  00264C  6E0A               	movwf	(??___fldiv+1)^0,c
  8798  00264E  0EFF               	movlw	255
  8799  002650  1416               	andwf	(___fldiv@grs+2)^0,w,c
  8800  002652  6E0B               	movwf	(??___fldiv+2)^0,c
  8801  002654  0E7F               	movlw	127
  8802  002656  1417               	andwf	(___fldiv@grs+3)^0,w,c
  8803  002658  6E0C               	movwf	(??___fldiv+3)^0,c
  8804  00265A  5009               	movf	??___fldiv^0,w,c
  8805  00265C  100A               	iorwf	(??___fldiv+1)^0,w,c
  8806  00265E  100B               	iorwf	(??___fldiv+2)^0,w,c
  8807  002660  100C               	iorwf	(??___fldiv+3)^0,w,c
  8808  002662  B4D8               	btfsc	status,2,c
  8809  002664  EF36  F013         	goto	u3451
  8810  002668  EF38  F013         	goto	u3450
  8811  00266C                     u3451:
  8812  00266C  EF3C  F013         	goto	l797
  8813  002670                     u3450:
  8814  002670                     l3325:
  8815  002670  0E01               	movlw	1
  8816  002672  6E19               	movwf	___fldiv@aexp^0,c
  8817  002674  EF45  F013         	goto	l796
  8818  002678                     l797:
  8819  002678  A001               	btfss	___fldiv@b^0,0,c
  8820  00267A  EF41  F013         	goto	u3461
  8821  00267E  EF43  F013         	goto	u3460
  8822  002682                     u3461:
  8823  002682  EF45  F013         	goto	l796
  8824  002686                     u3460:
  8825  002686  EF38  F013         	goto	l3325
  8826  00268A                     l796:
  8827  00268A  5019               	movf	___fldiv@aexp^0,w,c
  8828  00268C  B4D8               	btfsc	status,2,c
  8829  00268E  EF4B  F013         	goto	u3471
  8830  002692  EF4D  F013         	goto	u3470
  8831  002696                     u3471:
  8832  002696  EF71  F013         	goto	l3337
  8833  00269A                     u3470:
  8834  00269A  0E01               	movlw	1
  8835  00269C  2601               	addwf	___fldiv@b^0,f,c
  8836  00269E  0E00               	movlw	0
  8837  0026A0  2202               	addwfc	(___fldiv@b+1)^0,f,c
  8838  0026A2  2203               	addwfc	(___fldiv@b+2)^0,f,c
  8839  0026A4  2204               	addwfc	(___fldiv@b+3)^0,f,c
  8840  0026A6  A004               	btfss	(___fldiv@b+3)^0,0,c
  8841  0026A8  EF58  F013         	goto	u3481
  8842  0026AC  EF5A  F013         	goto	u3480
  8843  0026B0                     u3481:
  8844  0026B0  EF71  F013         	goto	l3337
  8845  0026B4                     u3480:
  8846  0026B4  C001  F009         	movff	___fldiv@b,??___fldiv
  8847  0026B8  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  8848  0026BC  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  8849  0026C0  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  8850  0026C4  340C               	rlcf	(??___fldiv+3)^0,w,c
  8851  0026C6  320C               	rrcf	(??___fldiv+3)^0,f,c
  8852  0026C8  320B               	rrcf	(??___fldiv+2)^0,f,c
  8853  0026CA  320A               	rrcf	(??___fldiv+1)^0,f,c
  8854  0026CC  3209               	rrcf	??___fldiv^0,f,c
  8855  0026CE  C009  F001         	movff	??___fldiv,___fldiv@b
  8856  0026D2  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  8857  0026D6  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  8858  0026DA  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  8859  0026DE  4A12               	infsnz	___fldiv@new_exp^0,f,c
  8860  0026E0  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  8861  0026E2                     l3337:
  8862  0026E2  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8863  0026E4  EF7C  F013         	goto	u3491
  8864  0026E8  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  8865  0026EA  E108               	bnz	u3490
  8866  0026EC  2812               	incf	___fldiv@new_exp^0,w,c
  8867  0026EE  A0D8               	btfss	status,0,c
  8868  0026F0  EF7C  F013         	goto	u3491
  8869  0026F4  EF7E  F013         	goto	u3490
  8870  0026F8                     u3491:
  8871  0026F8  EF89  F013         	goto	l3341
  8872  0026FC                     u3490:
  8873  0026FC  0E00               	movlw	0
  8874  0026FE  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8875  002700  6812               	setf	___fldiv@new_exp^0,c
  8876  002702  0E00               	movlw	0
  8877  002704  6E01               	movwf	___fldiv@b^0,c
  8878  002706  0E00               	movlw	0
  8879  002708  6E02               	movwf	(___fldiv@b+1)^0,c
  8880  00270A  0E00               	movlw	0
  8881  00270C  6E03               	movwf	(___fldiv@b+2)^0,c
  8882  00270E  0E00               	movlw	0
  8883  002710  6E04               	movwf	(___fldiv@b+3)^0,c
  8884  002712                     l3341:
  8885  002712  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8886  002714  EF96  F013         	goto	u3500
  8887  002718  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  8888  00271A  E106               	bnz	u3501
  8889  00271C  0412               	decf	___fldiv@new_exp^0,w,c
  8890  00271E  B0D8               	btfsc	status,0,c
  8891  002720  EF94  F013         	goto	u3501
  8892  002724  EF96  F013         	goto	u3500
  8893  002728                     u3501:
  8894  002728  EFA4  F013         	goto	l3345
  8895  00272C                     u3500:
  8896  00272C  0E00               	movlw	0
  8897  00272E  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8898  002730  0E00               	movlw	0
  8899  002732  6E12               	movwf	___fldiv@new_exp^0,c
  8900  002734  0E00               	movlw	0
  8901  002736  6E01               	movwf	___fldiv@b^0,c
  8902  002738  0E00               	movlw	0
  8903  00273A  6E02               	movwf	(___fldiv@b+1)^0,c
  8904  00273C  0E00               	movlw	0
  8905  00273E  6E03               	movwf	(___fldiv@b+2)^0,c
  8906  002740  0E00               	movlw	0
  8907  002742  6E04               	movwf	(___fldiv@b+3)^0,c
  8908  002744  0E00               	movlw	0
  8909  002746  6E11               	movwf	___fldiv@sign^0,c
  8910  002748                     l3345:
  8911  002748  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  8912  00274C  A018               	btfss	___fldiv@bexp^0,0,c
  8913  00274E  EFAB  F013         	goto	u3511
  8914  002752  EFAD  F013         	goto	u3510
  8915  002756                     u3511:
  8916  002756  EFB0  F013         	goto	l3351
  8917  00275A                     u3510:
  8918  00275A  8E03               	bsf	(___fldiv@b+2)^0,7,c
  8919  00275C  EFB1  F013         	goto	l3353
  8920  002760                     l3351:
  8921  002760  9E03               	bcf	(___fldiv@b+2)^0,7,c
  8922  002762                     l3353:
  8923  002762  90D8               	bcf	status,0,c
  8924  002764  3018               	rrcf	___fldiv@bexp^0,w,c
  8925  002766  6E04               	movwf	(___fldiv@b+3)^0,c
  8926  002768  EF67  F012         	goto	l3267
  8927  00276C                     l783:
  8928  00276C  0012               	return		;funcret
  8929  00276E                     __end_of___fldiv:
  8930                           	callstack 0
  8931                           
  8932 ;; *************** function ___awmod *****************
  8933 ;; Defined at:
  8934 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\awmod.c"
  8935 ;; Parameters:    Size  Location     Type
  8936 ;;  dividend        2    0[COMRAM] int 
  8937 ;;  divisor         2    2[COMRAM] int 
  8938 ;; Auto vars:     Size  Location     Type
  8939 ;;  sign            1    5[COMRAM] unsigned char 
  8940 ;;  counter         1    4[COMRAM] unsigned char 
  8941 ;; Return value:  Size  Location     Type
  8942 ;;                  2    0[COMRAM] int 
  8943 ;; Registers used:
  8944 ;;		wreg, status,2, status,0
  8945 ;; Tracked objects:
  8946 ;;		On entry : 0/0
  8947 ;;		On exit  : 0/0
  8948 ;;		Unchanged: 0/0
  8949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8950 ;;      Params:         4       0       0       0       0       0       0
  8951 ;;      Locals:         2       0       0       0       0       0       0
  8952 ;;      Temps:          0       0       0       0       0       0       0
  8953 ;;      Totals:         6       0       0       0       0       0       0
  8954 ;;Total ram usage:        6 bytes
  8955 ;; Hardware stack levels used:    1
  8956 ;; This function calls:
  8957 ;;		Nothing
  8958 ;; This function is called by:
  8959 ;;		_encher_tanque
  8960 ;;		_efgtoa
  8961 ;; This function uses a non-reentrant model
  8962 ;;
  8963                           
  8964                           	psect	text29
  8965  003976                     __ptext29:
  8966                           	callstack 0
  8967  003976                     ___awmod:
  8968                           	callstack 25
  8969  003976  0E00               	movlw	0
  8970  003978  6E06               	movwf	___awmod@sign^0,c
  8971  00397A  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  8972  00397C  EFC4  F01C         	goto	u3770
  8973  003980  EFC2  F01C         	goto	u3771
  8974  003984                     u3771:
  8975  003984  EFCA  F01C         	goto	l3549
  8976  003988                     u3770:
  8977  003988  6C01               	negf	___awmod@dividend^0,c
  8978  00398A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  8979  00398C  B0D8               	btfsc	status,0,c
  8980  00398E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  8981  003990  0E01               	movlw	1
  8982  003992  6E06               	movwf	___awmod@sign^0,c
  8983  003994                     l3549:
  8984  003994  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  8985  003996  EFD1  F01C         	goto	u3780
  8986  00399A  EFCF  F01C         	goto	u3781
  8987  00399E                     u3781:
  8988  00399E  EFD5  F01C         	goto	l3553
  8989  0039A2                     u3780:
  8990  0039A2  6C03               	negf	___awmod@divisor^0,c
  8991  0039A4  1E04               	comf	(___awmod@divisor+1)^0,f,c
  8992  0039A6  B0D8               	btfsc	status,0,c
  8993  0039A8  2A04               	incf	(___awmod@divisor+1)^0,f,c
  8994  0039AA                     l3553:
  8995  0039AA  5003               	movf	___awmod@divisor^0,w,c
  8996  0039AC  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  8997  0039AE  B4D8               	btfsc	status,2,c
  8998  0039B0  EFDC  F01C         	goto	u3791
  8999  0039B4  EFDE  F01C         	goto	u3790
  9000  0039B8                     u3791:
  9001  0039B8  EF02  F01D         	goto	l3569
  9002  0039BC                     u3790:
  9003  0039BC  0E01               	movlw	1
  9004  0039BE  6E05               	movwf	___awmod@counter^0,c
  9005  0039C0  EFE6  F01C         	goto	l3559
  9006  0039C4                     l3557:
  9007  0039C4  90D8               	bcf	status,0,c
  9008  0039C6  3603               	rlcf	___awmod@divisor^0,f,c
  9009  0039C8  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  9010  0039CA  2A05               	incf	___awmod@counter^0,f,c
  9011  0039CC                     l3559:
  9012  0039CC  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  9013  0039CE  EFEB  F01C         	goto	u3801
  9014  0039D2  EFED  F01C         	goto	u3800
  9015  0039D6                     u3801:
  9016  0039D6  EFE2  F01C         	goto	l3557
  9017  0039DA                     u3800:
  9018  0039DA                     l3561:
  9019  0039DA  5003               	movf	___awmod@divisor^0,w,c
  9020  0039DC  5C01               	subwf	___awmod@dividend^0,w,c
  9021  0039DE  5004               	movf	(___awmod@divisor+1)^0,w,c
  9022  0039E0  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  9023  0039E2  A0D8               	btfss	status,0,c
  9024  0039E4  EFF6  F01C         	goto	u3811
  9025  0039E8  EFF8  F01C         	goto	u3810
  9026  0039EC                     u3811:
  9027  0039EC  EFFC  F01C         	goto	l3565
  9028  0039F0                     u3810:
  9029  0039F0  5003               	movf	___awmod@divisor^0,w,c
  9030  0039F2  5E01               	subwf	___awmod@dividend^0,f,c
  9031  0039F4  5004               	movf	(___awmod@divisor+1)^0,w,c
  9032  0039F6  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  9033  0039F8                     l3565:
  9034  0039F8  90D8               	bcf	status,0,c
  9035  0039FA  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  9036  0039FC  3203               	rrcf	___awmod@divisor^0,f,c
  9037  0039FE  2E05               	decfsz	___awmod@counter^0,f,c
  9038  003A00  EFED  F01C         	goto	l3561
  9039  003A04                     l3569:
  9040  003A04  5006               	movf	___awmod@sign^0,w,c
  9041  003A06  B4D8               	btfsc	status,2,c
  9042  003A08  EF08  F01D         	goto	u3821
  9043  003A0C  EF0A  F01D         	goto	u3820
  9044  003A10                     u3821:
  9045  003A10  EF0E  F01D         	goto	l3573
  9046  003A14                     u3820:
  9047  003A14  6C01               	negf	___awmod@dividend^0,c
  9048  003A16  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9049  003A18  B0D8               	btfsc	status,0,c
  9050  003A1A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9051  003A1C                     l3573:
  9052  003A1C  C001  F001         	movff	___awmod@dividend,?___awmod
  9053  003A20  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  9054  003A24  0012               	return		;funcret
  9055  003A26                     __end_of___awmod:
  9056                           	callstack 0
  9057                           
  9058 ;; *************** function ___awdiv *****************
  9059 ;; Defined at:
  9060 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  9061 ;; Parameters:    Size  Location     Type
  9062 ;;  dividend        2    0[COMRAM] int 
  9063 ;;  divisor         2    2[COMRAM] int 
  9064 ;; Auto vars:     Size  Location     Type
  9065 ;;  quotient        2    6[COMRAM] int 
  9066 ;;  sign            1    5[COMRAM] unsigned char 
  9067 ;;  counter         1    4[COMRAM] unsigned char 
  9068 ;; Return value:  Size  Location     Type
  9069 ;;                  2    0[COMRAM] int 
  9070 ;; Registers used:
  9071 ;;		wreg, status,2, status,0
  9072 ;; Tracked objects:
  9073 ;;		On entry : 0/0
  9074 ;;		On exit  : 0/0
  9075 ;;		Unchanged: 0/0
  9076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9077 ;;      Params:         4       0       0       0       0       0       0
  9078 ;;      Locals:         4       0       0       0       0       0       0
  9079 ;;      Temps:          0       0       0       0       0       0       0
  9080 ;;      Totals:         8       0       0       0       0       0       0
  9081 ;;Total ram usage:        8 bytes
  9082 ;; Hardware stack levels used:    1
  9083 ;; This function calls:
  9084 ;;		Nothing
  9085 ;; This function is called by:
  9086 ;;		_encher_tanque
  9087 ;;		_efgtoa
  9088 ;; This function uses a non-reentrant model
  9089 ;;
  9090                           
  9091                           	psect	text30
  9092  0037FA                     __ptext30:
  9093                           	callstack 0
  9094  0037FA                     ___awdiv:
  9095                           	callstack 25
  9096  0037FA  0E00               	movlw	0
  9097  0037FC  6E06               	movwf	___awdiv@sign^0,c
  9098  0037FE  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  9099  003800  EF06  F01C         	goto	u3710
  9100  003804  EF04  F01C         	goto	u3711
  9101  003808                     u3711:
  9102  003808  EF0C  F01C         	goto	l3505
  9103  00380C                     u3710:
  9104  00380C  6C03               	negf	___awdiv@divisor^0,c
  9105  00380E  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  9106  003810  B0D8               	btfsc	status,0,c
  9107  003812  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  9108  003814  0E01               	movlw	1
  9109  003816  6E06               	movwf	___awdiv@sign^0,c
  9110  003818                     l3505:
  9111  003818  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  9112  00381A  EF13  F01C         	goto	u3720
  9113  00381E  EF11  F01C         	goto	u3721
  9114  003822                     u3721:
  9115  003822  EF19  F01C         	goto	l3511
  9116  003826                     u3720:
  9117  003826  6C01               	negf	___awdiv@dividend^0,c
  9118  003828  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  9119  00382A  B0D8               	btfsc	status,0,c
  9120  00382C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  9121  00382E  0E01               	movlw	1
  9122  003830  1A06               	xorwf	___awdiv@sign^0,f,c
  9123  003832                     l3511:
  9124  003832  0E00               	movlw	0
  9125  003834  6E08               	movwf	(___awdiv@quotient+1)^0,c
  9126  003836  0E00               	movlw	0
  9127  003838  6E07               	movwf	___awdiv@quotient^0,c
  9128  00383A  5003               	movf	___awdiv@divisor^0,w,c
  9129  00383C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  9130  00383E  B4D8               	btfsc	status,2,c
  9131  003840  EF24  F01C         	goto	u3731
  9132  003844  EF26  F01C         	goto	u3730
  9133  003848                     u3731:
  9134  003848  EF4E  F01C         	goto	l3533
  9135  00384C                     u3730:
  9136  00384C  0E01               	movlw	1
  9137  00384E  6E05               	movwf	___awdiv@counter^0,c
  9138  003850  EF2E  F01C         	goto	l3519
  9139  003854                     l3517:
  9140  003854  90D8               	bcf	status,0,c
  9141  003856  3603               	rlcf	___awdiv@divisor^0,f,c
  9142  003858  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  9143  00385A  2A05               	incf	___awdiv@counter^0,f,c
  9144  00385C                     l3519:
  9145  00385C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  9146  00385E  EF33  F01C         	goto	u3741
  9147  003862  EF35  F01C         	goto	u3740
  9148  003866                     u3741:
  9149  003866  EF2A  F01C         	goto	l3517
  9150  00386A                     u3740:
  9151  00386A                     l3521:
  9152  00386A  90D8               	bcf	status,0,c
  9153  00386C  3607               	rlcf	___awdiv@quotient^0,f,c
  9154  00386E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  9155  003870  5003               	movf	___awdiv@divisor^0,w,c
  9156  003872  5C01               	subwf	___awdiv@dividend^0,w,c
  9157  003874  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9158  003876  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  9159  003878  A0D8               	btfss	status,0,c
  9160  00387A  EF41  F01C         	goto	u3751
  9161  00387E  EF43  F01C         	goto	u3750
  9162  003882                     u3751:
  9163  003882  EF48  F01C         	goto	l3529
  9164  003886                     u3750:
  9165  003886  5003               	movf	___awdiv@divisor^0,w,c
  9166  003888  5E01               	subwf	___awdiv@dividend^0,f,c
  9167  00388A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9168  00388C  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  9169  00388E  8007               	bsf	___awdiv@quotient^0,0,c
  9170  003890                     l3529:
  9171  003890  90D8               	bcf	status,0,c
  9172  003892  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  9173  003894  3203               	rrcf	___awdiv@divisor^0,f,c
  9174  003896  2E05               	decfsz	___awdiv@counter^0,f,c
  9175  003898  EF35  F01C         	goto	l3521
  9176  00389C                     l3533:
  9177  00389C  5006               	movf	___awdiv@sign^0,w,c
  9178  00389E  B4D8               	btfsc	status,2,c
  9179  0038A0  EF54  F01C         	goto	u3761
  9180  0038A4  EF56  F01C         	goto	u3760
  9181  0038A8                     u3761:
  9182  0038A8  EF5A  F01C         	goto	l3537
  9183  0038AC                     u3760:
  9184  0038AC  6C07               	negf	___awdiv@quotient^0,c
  9185  0038AE  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  9186  0038B0  B0D8               	btfsc	status,0,c
  9187  0038B2  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  9188  0038B4                     l3537:
  9189  0038B4  C007  F001         	movff	___awdiv@quotient,?___awdiv
  9190  0038B8  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  9191  0038BC  0012               	return		;funcret
  9192  0038BE                     __end_of___awdiv:
  9193                           	callstack 0
  9194                           
  9195 ;; *************** function _atoi *****************
  9196 ;; Defined at:
  9197 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\atoi.c"
  9198 ;; Parameters:    Size  Location     Type
  9199 ;;  s               2    7[COMRAM] PTR const unsigned char 
  9200 ;;		 -> STR_25(5), STR_17(5), STR_11(5), 
  9201 ;; Auto vars:     Size  Location     Type
  9202 ;;  n               2   20[COMRAM] int 
  9203 ;;  neg             2   13[COMRAM] int 
  9204 ;; Return value:  Size  Location     Type
  9205 ;;                  2    7[COMRAM] int 
  9206 ;; Registers used:
  9207 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9208 ;; Tracked objects:
  9209 ;;		On entry : 0/0
  9210 ;;		On exit  : 0/0
  9211 ;;		Unchanged: 0/0
  9212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9213 ;;      Params:         2       0       0       0       0       0       0
  9214 ;;      Locals:         9       0       0       0       0       0       0
  9215 ;;      Temps:          4       0       0       0       0       0       0
  9216 ;;      Totals:        15       0       0       0       0       0       0
  9217 ;;Total ram usage:       15 bytes
  9218 ;; Hardware stack levels used:    1
  9219 ;; Hardware stack levels required when called:    1
  9220 ;; This function calls:
  9221 ;;		___wmul
  9222 ;;		_isdigit
  9223 ;;		_isspace
  9224 ;; This function is called by:
  9225 ;;		_vfpfcnvrt
  9226 ;; This function uses a non-reentrant model
  9227 ;;
  9228                           
  9229                           	psect	text31
  9230  0030FC                     __ptext31:
  9231                           	callstack 0
  9232  0030FC                     _atoi:
  9233                           	callstack 25
  9234  0030FC  0E00               	movlw	0
  9235  0030FE  6E16               	movwf	(atoi@n+1)^0,c
  9236  003100  0E00               	movlw	0
  9237  003102  6E15               	movwf	atoi@n^0,c
  9238  003104  0E00               	movlw	0
  9239  003106  6E0F               	movwf	(atoi@neg+1)^0,c
  9240  003108  0E00               	movlw	0
  9241  00310A  6E0E               	movwf	atoi@neg^0,c
  9242  00310C  EF8A  F018         	goto	l4071
  9243  003110                     l4069:
  9244  003110  4A08               	infsnz	atoi@s^0,f,c
  9245  003112  2A09               	incf	(atoi@s+1)^0,f,c
  9246  003114                     l4071:
  9247  003114  0E01               	movlw	1
  9248  003116  6E14               	movwf	_atoi$797^0,c
  9249  003118  C008  FFF6         	movff	atoi@s,tblptrl
  9250  00311C  C009  FFF7         	movff	atoi@s+1,tblptrh
  9251  003120                     	if	0	;tblptru may be non-zero
  9252  003120                     	endif
  9253  003120                     	if	0	;tblptru may be non-zero
  9254  003120                     	endif
  9255  003120  0008               	tblrd		*
  9256  003122  50F5               	movf	tablat,w,c
  9257  003124  0A20               	xorlw	32
  9258  003126  B4D8               	btfsc	status,2,c
  9259  003128  EF98  F018         	goto	u4811
  9260  00312C  EF9A  F018         	goto	u4810
  9261  003130                     u4811:
  9262  003130  EFB7  F018         	goto	l4079
  9263  003134                     u4810:
  9264  003134  0EF7               	movlw	247
  9265  003136  6E0A               	movwf	??_atoi^0,c
  9266  003138  0EFF               	movlw	255
  9267  00313A  6E0B               	movwf	(??_atoi+1)^0,c
  9268  00313C  C008  FFF6         	movff	atoi@s,tblptrl
  9269  003140  C009  FFF7         	movff	atoi@s+1,tblptrh
  9270  003144                     	if	0	;tblptru may be non-zero
  9271  003144                     	endif
  9272  003144                     	if	0	;tblptru may be non-zero
  9273  003144                     	endif
  9274  003144  0008               	tblrd		*
  9275  003146  50F5               	movf	tablat,w,c
  9276  003148  6E0C               	movwf	(??_atoi+2)^0,c
  9277  00314A  6A0D               	clrf	(??_atoi+3)^0,c
  9278  00314C  500A               	movf	??_atoi^0,w,c
  9279  00314E  260C               	addwf	(??_atoi+2)^0,f,c
  9280  003150  500B               	movf	(??_atoi+1)^0,w,c
  9281  003152  220D               	addwfc	(??_atoi+3)^0,f,c
  9282  003154  500D               	movf	(??_atoi+3)^0,w,c
  9283  003156  E109               	bnz	u4820
  9284  003158  0E05               	movlw	5
  9285  00315A  5C0C               	subwf	(??_atoi+2)^0,w,c
  9286  00315C  A0D8               	btfss	status,0,c
  9287  00315E  EFB3  F018         	goto	u4821
  9288  003162  EFB5  F018         	goto	u4820
  9289  003166                     u4821:
  9290  003166  EFB7  F018         	goto	l4079
  9291  00316A                     u4820:
  9292  00316A  0E00               	movlw	0
  9293  00316C  6E14               	movwf	_atoi$797^0,c
  9294  00316E                     l4079:
  9295  00316E  C014  F010         	movff	_atoi$797,_atoi$796
  9296  003172  6A11               	clrf	(_atoi$796+1)^0,c
  9297  003174  5010               	movf	_atoi$796^0,w,c
  9298  003176  1011               	iorwf	(_atoi$796+1)^0,w,c
  9299  003178  A4D8               	btfss	status,2,c
  9300  00317A  EFC1  F018         	goto	u4831
  9301  00317E  EFC3  F018         	goto	u4830
  9302  003182                     u4831:
  9303  003182  EF88  F018         	goto	l4069
  9304  003186                     u4830:
  9305  003186  EFCD  F018         	goto	l4089
  9306  00318A                     l4085:
  9307  00318A  0E00               	movlw	0
  9308  00318C  6E0F               	movwf	(atoi@neg+1)^0,c
  9309  00318E  0E01               	movlw	1
  9310  003190  6E0E               	movwf	atoi@neg^0,c
  9311  003192                     l4087:
  9312  003192  4A08               	infsnz	atoi@s^0,f,c
  9313  003194  2A09               	incf	(atoi@s+1)^0,f,c
  9314  003196  EF02  F019         	goto	l4095
  9315  00319A                     l4089:
  9316  00319A  C008  FFF6         	movff	atoi@s,tblptrl
  9317  00319E  C009  FFF7         	movff	atoi@s+1,tblptrh
  9318  0031A2                     	if	0	;tblptru may be non-zero
  9319  0031A2                     	endif
  9320  0031A2                     	if	0	;tblptru may be non-zero
  9321  0031A2                     	endif
  9322  0031A2  0008               	tblrd		*
  9323  0031A4  50F5               	movf	tablat,w,c
  9324  0031A6  6E0A               	movwf	??_atoi^0,c
  9325  0031A8  6A0B               	clrf	(??_atoi+1)^0,c
  9326                           
  9327                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9328                           ; Switch size 1, requested type "simple"
  9329                           ; Number of cases is 1, Range of values is 0 to 0
  9330                           ; switch strategies available:
  9331                           ; Name         Instructions Cycles
  9332                           ; simple_byte            4     3 (average)
  9333                           ;	Chosen strategy is simple_byte
  9334  0031AA  500B               	movf	(??_atoi+1)^0,w,c
  9335  0031AC  0A00               	xorlw	0	; case 0
  9336  0031AE  B4D8               	btfsc	status,2,c
  9337  0031B0  EFDC  F018         	goto	l4769
  9338  0031B4  EF02  F019         	goto	l4095
  9339  0031B8                     l4769:
  9340                           
  9341                           ; Switch size 1, requested type "simple"
  9342                           ; Number of cases is 2, Range of values is 43 to 45
  9343                           ; switch strategies available:
  9344                           ; Name         Instructions Cycles
  9345                           ; simple_byte            7     4 (average)
  9346                           ;	Chosen strategy is simple_byte
  9347  0031B8  500A               	movf	??_atoi^0,w,c
  9348  0031BA  0A2B               	xorlw	43	; case 43
  9349  0031BC  B4D8               	btfsc	status,2,c
  9350  0031BE  EFC9  F018         	goto	l4087
  9351  0031C2  0A06               	xorlw	6	; case 45
  9352  0031C4  B4D8               	btfsc	status,2,c
  9353  0031C6  EFC5  F018         	goto	l4085
  9354  0031CA  EF02  F019         	goto	l4095
  9355  0031CE                     l4091:
  9356  0031CE  C015  F001         	movff	atoi@n,___wmul@multiplier
  9357  0031D2  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  9358  0031D6  0E00               	movlw	0
  9359  0031D8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9360  0031DA  0E0A               	movlw	10
  9361  0031DC  6E03               	movwf	___wmul@multiplicand^0,c
  9362  0031DE  EC08  F020         	call	___wmul	;wreg free
  9363  0031E2  C008  FFF6         	movff	atoi@s,tblptrl
  9364  0031E6  C009  FFF7         	movff	atoi@s+1,tblptrh
  9365  0031EA                     	if	0	;tblptru may be non-zero
  9366  0031EA                     	endif
  9367  0031EA                     	if	0	;tblptru may be non-zero
  9368  0031EA                     	endif
  9369  0031EA  0008               	tblrd		*
  9370  0031EC  50F5               	movf	tablat,w,c
  9371  0031EE  5E01               	subwf	?___wmul^0,f,c
  9372  0031F0  0E00               	movlw	0
  9373  0031F2  5A02               	subwfb	(?___wmul+1)^0,f,c
  9374  0031F4  0E30               	movlw	48
  9375  0031F6  2401               	addwf	?___wmul^0,w,c
  9376  0031F8  6E15               	movwf	atoi@n^0,c
  9377  0031FA  0E00               	movlw	0
  9378  0031FC  2002               	addwfc	(?___wmul+1)^0,w,c
  9379  0031FE  6E16               	movwf	(atoi@n+1)^0,c
  9380  003200  EFC9  F018         	goto	l4087
  9381  003204                     l4095:
  9382  003204  0ED0               	movlw	208
  9383  003206  6E0A               	movwf	??_atoi^0,c
  9384  003208  0EFF               	movlw	255
  9385  00320A  6E0B               	movwf	(??_atoi+1)^0,c
  9386  00320C  C008  FFF6         	movff	atoi@s,tblptrl
  9387  003210  C009  FFF7         	movff	atoi@s+1,tblptrh
  9388  003214                     	if	0	;tblptru may be non-zero
  9389  003214                     	endif
  9390  003214                     	if	0	;tblptru may be non-zero
  9391  003214                     	endif
  9392  003214  0008               	tblrd		*
  9393  003216  50F5               	movf	tablat,w,c
  9394  003218  6E0C               	movwf	(??_atoi+2)^0,c
  9395  00321A  6A0D               	clrf	(??_atoi+3)^0,c
  9396  00321C  500A               	movf	??_atoi^0,w,c
  9397  00321E  260C               	addwf	(??_atoi+2)^0,f,c
  9398  003220  500B               	movf	(??_atoi+1)^0,w,c
  9399  003222  220D               	addwfc	(??_atoi+3)^0,f,c
  9400  003224  500D               	movf	(??_atoi+3)^0,w,c
  9401  003226  E10A               	bnz	u4840
  9402  003228  0E0A               	movlw	10
  9403  00322A  5C0C               	subwf	(??_atoi+2)^0,w,c
  9404  00322C  A0D8               	btfss	status,0,c
  9405  00322E  EF1B  F019         	goto	u4841
  9406  003232  EF1E  F019         	goto	u4840
  9407  003236                     u4841:
  9408  003236  0E01               	movlw	1
  9409  003238  EF1F  F019         	goto	u4850
  9410  00323C                     u4840:
  9411  00323C  0E00               	movlw	0
  9412  00323E                     u4850:
  9413  00323E  6E12               	movwf	_atoi$798^0,c
  9414  003240  6A13               	clrf	(_atoi$798+1)^0,c
  9415  003242  5012               	movf	_atoi$798^0,w,c
  9416  003244  1013               	iorwf	(_atoi$798+1)^0,w,c
  9417  003246  A4D8               	btfss	status,2,c
  9418  003248  EF28  F019         	goto	u4861
  9419  00324C  EF2A  F019         	goto	u4860
  9420  003250                     u4861:
  9421  003250  EFE7  F018         	goto	l4091
  9422  003254                     u4860:
  9423  003254  500E               	movf	atoi@neg^0,w,c
  9424  003256  100F               	iorwf	(atoi@neg+1)^0,w,c
  9425  003258  A4D8               	btfss	status,2,c
  9426  00325A  EF31  F019         	goto	u4871
  9427  00325E  EF33  F019         	goto	u4870
  9428  003262                     u4871:
  9429  003262  EF41  F019         	goto	l1086
  9430  003266                     u4870:
  9431  003266  C015  F00A         	movff	atoi@n,??_atoi
  9432  00326A  C016  F00B         	movff	atoi@n+1,??_atoi+1
  9433  00326E  1E0A               	comf	??_atoi^0,f,c
  9434  003270  1E0B               	comf	(??_atoi+1)^0,f,c
  9435  003272  4A0A               	infsnz	??_atoi^0,f,c
  9436  003274  2A0B               	incf	(??_atoi+1)^0,f,c
  9437  003276  C00A  F008         	movff	??_atoi,?_atoi
  9438  00327A  C00B  F009         	movff	??_atoi+1,?_atoi+1
  9439  00327E  EF45  F019         	goto	l1089
  9440  003282                     l1086:
  9441  003282  C015  F008         	movff	atoi@n,?_atoi
  9442  003286  C016  F009         	movff	atoi@n+1,?_atoi+1
  9443  00328A                     l1089:
  9444  00328A  0012               	return		;funcret
  9445  00328C                     __end_of_atoi:
  9446                           	callstack 0
  9447                           
  9448 ;; *************** function _isspace *****************
  9449 ;; Defined at:
  9450 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\isspace.c"
  9451 ;; Parameters:    Size  Location     Type
  9452 ;;  c               2    0[COMRAM] int 
  9453 ;; Auto vars:     Size  Location     Type
  9454 ;;		None
  9455 ;; Return value:  Size  Location     Type
  9456 ;;                  2    0[COMRAM] int 
  9457 ;; Registers used:
  9458 ;;		wreg, status,2, status,0
  9459 ;; Tracked objects:
  9460 ;;		On entry : 0/0
  9461 ;;		On exit  : 0/0
  9462 ;;		Unchanged: 0/0
  9463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9464 ;;      Params:         2       0       0       0       0       0       0
  9465 ;;      Locals:         1       0       0       0       0       0       0
  9466 ;;      Temps:          4       0       0       0       0       0       0
  9467 ;;      Totals:         7       0       0       0       0       0       0
  9468 ;;Total ram usage:        7 bytes
  9469 ;; Hardware stack levels used:    1
  9470 ;; This function calls:
  9471 ;;		Nothing
  9472 ;; This function is called by:
  9473 ;;		_atoi
  9474 ;; This function uses a non-reentrant model
  9475 ;;
  9476                           
  9477                           	psect	text32
  9478  003DDA                     __ptext32:
  9479                           	callstack 0
  9480  003DDA                     _isspace:
  9481                           	callstack 25
  9482  003DDA  0E01               	movlw	1
  9483  003DDC  6E07               	movwf	_isspace$827^0,c
  9484  003DDE  0E20               	movlw	32
  9485  003DE0  1801               	xorwf	isspace@c^0,w,c
  9486  003DE2  1002               	iorwf	(isspace@c+1)^0,w,c
  9487  003DE4  B4D8               	btfsc	status,2,c
  9488  003DE6  EFF7  F01E         	goto	u4271
  9489  003DEA  EFF9  F01E         	goto	u4270
  9490  003DEE                     u4271:
  9491  003DEE  EF12  F01F         	goto	l3765
  9492  003DF2                     u4270:
  9493  003DF2  0EF7               	movlw	247
  9494  003DF4  6E03               	movwf	??_isspace^0,c
  9495  003DF6  0EFF               	movlw	255
  9496  003DF8  6E04               	movwf	(??_isspace+1)^0,c
  9497  003DFA  C001  F005         	movff	isspace@c,??_isspace+2
  9498  003DFE  C002  F006         	movff	isspace@c+1,??_isspace+3
  9499  003E02  5003               	movf	??_isspace^0,w,c
  9500  003E04  2605               	addwf	(??_isspace+2)^0,f,c
  9501  003E06  5004               	movf	(??_isspace+1)^0,w,c
  9502  003E08  2206               	addwfc	(??_isspace+3)^0,f,c
  9503  003E0A  5006               	movf	(??_isspace+3)^0,w,c
  9504  003E0C  E109               	bnz	u4280
  9505  003E0E  0E05               	movlw	5
  9506  003E10  5C05               	subwf	(??_isspace+2)^0,w,c
  9507  003E12  A0D8               	btfss	status,0,c
  9508  003E14  EF0E  F01F         	goto	u4281
  9509  003E18  EF10  F01F         	goto	u4280
  9510  003E1C                     u4281:
  9511  003E1C  EF12  F01F         	goto	l3765
  9512  003E20                     u4280:
  9513  003E20  0E00               	movlw	0
  9514  003E22  6E07               	movwf	_isspace$827^0,c
  9515  003E24                     l3765:
  9516  003E24  C007  F001         	movff	_isspace$827,?_isspace
  9517  003E28  6A02               	clrf	(?_isspace+1)^0,c
  9518  003E2A  0012               	return		;funcret
  9519  003E2C                     __end_of_isspace:
  9520                           	callstack 0
  9521                           
  9522 ;; *************** function _isdigit *****************
  9523 ;; Defined at:
  9524 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\isdigit.c"
  9525 ;; Parameters:    Size  Location     Type
  9526 ;;  c               2    0[COMRAM] int 
  9527 ;; Auto vars:     Size  Location     Type
  9528 ;;		None
  9529 ;; Return value:  Size  Location     Type
  9530 ;;                  2    0[COMRAM] int 
  9531 ;; Registers used:
  9532 ;;		wreg, status,2, status,0
  9533 ;; Tracked objects:
  9534 ;;		On entry : 0/0
  9535 ;;		On exit  : 0/0
  9536 ;;		Unchanged: 0/0
  9537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9538 ;;      Params:         2       0       0       0       0       0       0
  9539 ;;      Locals:         0       0       0       0       0       0       0
  9540 ;;      Temps:          4       0       0       0       0       0       0
  9541 ;;      Totals:         6       0       0       0       0       0       0
  9542 ;;Total ram usage:        6 bytes
  9543 ;; Hardware stack levels used:    1
  9544 ;; This function calls:
  9545 ;;		Nothing
  9546 ;; This function is called by:
  9547 ;;		_vfpfcnvrt
  9548 ;;		_atoi
  9549 ;; This function uses a non-reentrant model
  9550 ;;
  9551                           
  9552                           	psect	text33
  9553  003F26                     __ptext33:
  9554                           	callstack 0
  9555  003F26                     _isdigit:
  9556                           	callstack 26
  9557  003F26  0ED0               	movlw	208
  9558  003F28  6E03               	movwf	??_isdigit^0,c
  9559  003F2A  0EFF               	movlw	255
  9560  003F2C  6E04               	movwf	(??_isdigit+1)^0,c
  9561  003F2E  C001  F005         	movff	isdigit@c,??_isdigit+2
  9562  003F32  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  9563  003F36  5003               	movf	??_isdigit^0,w,c
  9564  003F38  2605               	addwf	(??_isdigit+2)^0,f,c
  9565  003F3A  5004               	movf	(??_isdigit+1)^0,w,c
  9566  003F3C  2206               	addwfc	(??_isdigit+3)^0,f,c
  9567  003F3E  5006               	movf	(??_isdigit+3)^0,w,c
  9568  003F40  E10A               	bnz	u4250
  9569  003F42  0E0A               	movlw	10
  9570  003F44  5C05               	subwf	(??_isdigit+2)^0,w,c
  9571  003F46  A0D8               	btfss	status,0,c
  9572  003F48  EFA8  F01F         	goto	u4251
  9573  003F4C  EFAB  F01F         	goto	u4250
  9574  003F50                     u4251:
  9575  003F50  0E01               	movlw	1
  9576  003F52  EFAC  F01F         	goto	u4260
  9577  003F56                     u4250:
  9578  003F56  0E00               	movlw	0
  9579  003F58                     u4260:
  9580  003F58  6E01               	movwf	?_isdigit^0,c
  9581  003F5A  6A02               	clrf	(?_isdigit+1)^0,c
  9582  003F5C  0012               	return		;funcret
  9583  003F5E                     __end_of_isdigit:
  9584                           	callstack 0
  9585                           
  9586 ;; *************** function ___wmul *****************
  9587 ;; Defined at:
  9588 ;;		line 15 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  9589 ;; Parameters:    Size  Location     Type
  9590 ;;  multiplier      2    0[COMRAM] unsigned int 
  9591 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9592 ;; Auto vars:     Size  Location     Type
  9593 ;;  product         2    4[COMRAM] unsigned int 
  9594 ;; Return value:  Size  Location     Type
  9595 ;;                  2    0[COMRAM] unsigned int 
  9596 ;; Registers used:
  9597 ;;		wreg, status,2, status,0, prodl, prodh
  9598 ;; Tracked objects:
  9599 ;;		On entry : 0/0
  9600 ;;		On exit  : 0/0
  9601 ;;		Unchanged: 0/0
  9602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9603 ;;      Params:         4       0       0       0       0       0       0
  9604 ;;      Locals:         2       0       0       0       0       0       0
  9605 ;;      Temps:          0       0       0       0       0       0       0
  9606 ;;      Totals:         6       0       0       0       0       0       0
  9607 ;;Total ram usage:        6 bytes
  9608 ;; Hardware stack levels used:    1
  9609 ;; This function calls:
  9610 ;;		Nothing
  9611 ;; This function is called by:
  9612 ;;		_encher_tanque
  9613 ;;		_atoi
  9614 ;;		_pwmSet1
  9615 ;;		_pwmSet2
  9616 ;; This function uses a non-reentrant model
  9617 ;;
  9618                           
  9619                           	psect	text34
  9620  004010                     __ptext34:
  9621                           	callstack 0
  9622  004010                     ___wmul:
  9623                           	callstack 25
  9624  004010  5001               	movf	___wmul@multiplier^0,w,c
  9625  004012  0203               	mulwf	___wmul@multiplicand^0,c
  9626  004014  CFF3 F005          	movff	prodl,___wmul@product
  9627  004018  CFF4 F006          	movff	prodh,___wmul@product+1
  9628  00401C  5001               	movf	___wmul@multiplier^0,w,c
  9629  00401E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9630  004020  50F3               	movf	243,w,c
  9631  004022  2606               	addwf	(___wmul@product+1)^0,f,c
  9632  004024  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9633  004026  0203               	mulwf	___wmul@multiplicand^0,c
  9634  004028  50F3               	movf	243,w,c
  9635  00402A  2606               	addwf	(___wmul@product+1)^0,f,c
  9636  00402C  C005  F001         	movff	___wmul@product,?___wmul
  9637  004030  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9638  004034  0012               	return		;funcret
  9639  004036                     __end_of___wmul:
  9640                           	callstack 0
  9641                           
  9642 ;; *************** function _lcd_str *****************
  9643 ;; Defined at:
  9644 ;;		line 47 in file "lcd.c"
  9645 ;; Parameters:    Size  Location     Type
  9646 ;;  str             2    7[COMRAM] PTR const unsigned char 
  9647 ;;		 -> STR_30(14), STR_29(13), STR_28(9), STR_27(14), 
  9648 ;;		 -> STR_26(3), esvaziar_tanque@y(8), STR_24(11), STR_23(14), 
  9649 ;;		 -> STR_22(11), STR_21(11), STR_20(11), STR_19(3), 
  9650 ;;		 -> STR_18(8), ver_quantidade@y(8), STR_16(14), STR_15(13), 
  9651 ;;		 -> STR_14(9), STR_13(12), STR_12(3), encher_tanque@y(8), 
  9652 ;;		 -> STR_10(11), STR_9(16), STR_8(11), STR_7(11), 
  9653 ;;		 -> STR_6(12), STR_5(19), STR_4(15), STR_3(14), 
  9654 ;;		 -> STR_2(11), STR_1(17), 
  9655 ;; Auto vars:     Size  Location     Type
  9656 ;;  i               1   11[COMRAM] unsigned char 
  9657 ;; Return value:  Size  Location     Type
  9658 ;;                  1    wreg      void 
  9659 ;; Registers used:
  9660 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9661 ;; Tracked objects:
  9662 ;;		On entry : 0/0
  9663 ;;		On exit  : 0/0
  9664 ;;		Unchanged: 0/0
  9665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9666 ;;      Params:         2       0       0       0       0       0       0
  9667 ;;      Locals:         1       0       0       0       0       0       0
  9668 ;;      Temps:          2       0       0       0       0       0       0
  9669 ;;      Totals:         5       0       0       0       0       0       0
  9670 ;;Total ram usage:        5 bytes
  9671 ;; Hardware stack levels used:    1
  9672 ;; Hardware stack levels required when called:    2
  9673 ;; This function calls:
  9674 ;;		_lcd_dat
  9675 ;; This function is called by:
  9676 ;;		_main
  9677 ;;		_encher_tanque
  9678 ;;		_ver_quantidade
  9679 ;;		_esvaziar_tanque
  9680 ;; This function uses a non-reentrant model
  9681 ;;
  9682                           
  9683                           	psect	text35
  9684  003AD0                     __ptext35:
  9685                           	callstack 0
  9686  003AD0                     _lcd_str:
  9687                           	callstack 27
  9688  003AD0                     
  9689                           ;lcd.c: 48:     unsigned char i = 0;
  9690  003AD0  0E00               	movlw	0
  9691  003AD2  6E0C               	movwf	lcd_str@i^0,c
  9692                           
  9693                           ;lcd.c: 50:     while (str[i] != 0) {
  9694  003AD4  EF85  F01D         	goto	l4289
  9695  003AD8                     l4285:
  9696                           
  9697                           ;lcd.c: 51:         lcd_dat(str[i]);
  9698  003AD8  500C               	movf	lcd_str@i^0,w,c
  9699  003ADA  2408               	addwf	lcd_str@str^0,w,c
  9700  003ADC  6E0A               	movwf	??_lcd_str^0,c
  9701  003ADE  0E00               	movlw	0
  9702  003AE0  2009               	addwfc	(lcd_str@str+1)^0,w,c
  9703  003AE2  6E0B               	movwf	(??_lcd_str+1)^0,c
  9704  003AE4  C00A  FFF6         	movff	??_lcd_str,tblptrl
  9705  003AE8  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
  9706  003AEC  6AF8               	clrf	tblptru,c
  9707  003AEE  0E05               	movlw	(high __ramtop+-1)
  9708  003AF0  64F7               	cpfsgt	tblptrh,c
  9709  003AF2  D003               	bra	u5117
  9710  003AF4  0008               	tblrd		*
  9711  003AF6  50F5               	movf	tablat,w,c
  9712  003AF8  D005               	bra	u5110
  9713  003AFA                     u5117:
  9714  003AFA  CFF6 FFE9          	movff	tblptrl,fsr0l
  9715  003AFE  CFF7 FFEA          	movff	tblptrh,fsr0h
  9716  003B02  50EF               	movf	indf0,w,c
  9717  003B04                     u5110:
  9718  003B04  ECCA  F01F         	call	_lcd_dat
  9719  003B08                     
  9720                           ;lcd.c: 52:         i++;
  9721  003B08  2A0C               	incf	lcd_str@i^0,f,c
  9722  003B0A                     l4289:
  9723                           
  9724                           ;lcd.c: 50:     while (str[i] != 0) {
  9725  003B0A  500C               	movf	lcd_str@i^0,w,c
  9726  003B0C  2408               	addwf	lcd_str@str^0,w,c
  9727  003B0E  6E0A               	movwf	??_lcd_str^0,c
  9728  003B10  0E00               	movlw	0
  9729  003B12  2009               	addwfc	(lcd_str@str+1)^0,w,c
  9730  003B14  6E0B               	movwf	(??_lcd_str+1)^0,c
  9731  003B16  C00A  FFF6         	movff	??_lcd_str,tblptrl
  9732  003B1A  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
  9733  003B1E  6AF8               	clrf	tblptru,c
  9734  003B20  0E05               	movlw	(high __ramtop+-1)
  9735  003B22  64F7               	cpfsgt	tblptrh,c
  9736  003B24  D003               	bra	u5127
  9737  003B26  0008               	tblrd		*
  9738  003B28  50F5               	movf	tablat,w,c
  9739  003B2A  D005               	bra	u5120
  9740  003B2C                     u5127:
  9741  003B2C  CFF6 FFE9          	movff	tblptrl,fsr0l
  9742  003B30  CFF7 FFEA          	movff	tblptrh,fsr0h
  9743  003B34  50EF               	movf	indf0,w,c
  9744  003B36                     u5120:
  9745  003B36  0900               	iorlw	0
  9746  003B38  A4D8               	btfss	status,2,c
  9747  003B3A  EFA1  F01D         	goto	u5131
  9748  003B3E  EFA3  F01D         	goto	u5130
  9749  003B42                     u5131:
  9750  003B42  EF6C  F01D         	goto	l4285
  9751  003B46                     u5130:
  9752  003B46  0012               	return		;funcret
  9753  003B48                     __end_of_lcd_str:
  9754                           	callstack 0
  9755                           
  9756 ;; *************** function _lcd_dat *****************
  9757 ;; Defined at:
  9758 ;;		line 19 in file "lcd.c"
  9759 ;; Parameters:    Size  Location     Type
  9760 ;;  val             1    wreg     unsigned char 
  9761 ;; Auto vars:     Size  Location     Type
  9762 ;;  val             1    6[COMRAM] unsigned char 
  9763 ;; Return value:  Size  Location     Type
  9764 ;;                  1    wreg      void 
  9765 ;; Registers used:
  9766 ;;		wreg, status,2, status,0, cstack
  9767 ;; Tracked objects:
  9768 ;;		On entry : 0/0
  9769 ;;		On exit  : 0/0
  9770 ;;		Unchanged: 0/0
  9771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9772 ;;      Params:         0       0       0       0       0       0       0
  9773 ;;      Locals:         1       0       0       0       0       0       0
  9774 ;;      Temps:          0       0       0       0       0       0       0
  9775 ;;      Totals:         1       0       0       0       0       0       0
  9776 ;;Total ram usage:        1 bytes
  9777 ;; Hardware stack levels used:    1
  9778 ;; Hardware stack levels required when called:    1
  9779 ;; This function calls:
  9780 ;;		_atraso_ms
  9781 ;;		_lcd_wr
  9782 ;; This function is called by:
  9783 ;;		_lcd_str
  9784 ;;		_encher_tanque
  9785 ;; This function uses a non-reentrant model
  9786 ;;
  9787                           
  9788                           	psect	text36
  9789  003F94                     __ptext36:
  9790                           	callstack 0
  9791  003F94                     _lcd_dat:
  9792                           	callstack 27
  9793                           
  9794                           ;incstack = 0
  9795                           ;lcd_dat@val stored from wreg
  9796  003F94  6E07               	movwf	lcd_dat@val^0,c
  9797  003F96                     
  9798                           ;lcd.c: 20:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  9799  003F96  8284               	bsf	132,1,c	;volatile
  9800  003F98                     
  9801                           ;lcd.c: 21:     lcd_wr(val);
  9802  003F98  5007               	movf	lcd_dat@val^0,w,c
  9803  003F9A  EC20  F020         	call	_lcd_wr
  9804  003F9E                     
  9805                           ;lcd.c: 22:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<2));
  9806  003F9E  8484               	bsf	132,2,c	;volatile
  9807  003FA0                     
  9808                           ;lcd.c: 23:     atraso_ms(3);
  9809  003FA0  0E00               	movlw	0
  9810  003FA2  6E02               	movwf	(atraso_ms@t+1)^0,c
  9811  003FA4  0E03               	movlw	3
  9812  003FA6  6E01               	movwf	atraso_ms@t^0,c
  9813  003FA8  ECA4  F01D         	call	_atraso_ms	;wreg free
  9814  003FAC                     
  9815                           ;lcd.c: 24:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  9816  003FAC  9284               	bcf	132,1,c	;volatile
  9817  003FAE                     
  9818                           ;lcd.c: 25:     atraso_ms(3);
  9819  003FAE  0E00               	movlw	0
  9820  003FB0  6E02               	movwf	(atraso_ms@t+1)^0,c
  9821  003FB2  0E03               	movlw	3
  9822  003FB4  6E01               	movwf	atraso_ms@t^0,c
  9823  003FB6  ECA4  F01D         	call	_atraso_ms	;wreg free
  9824  003FBA                     
  9825                           ;lcd.c: 26:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  9826  003FBA  8284               	bsf	132,1,c	;volatile
  9827  003FBC  0012               	return		;funcret
  9828  003FBE                     __end_of_lcd_dat:
  9829                           	callstack 0
  9830                           
  9831 ;; *************** function _lcd_cmd *****************
  9832 ;; Defined at:
  9833 ;;		line 9 in file "lcd.c"
  9834 ;; Parameters:    Size  Location     Type
  9835 ;;  val             1    wreg     unsigned char 
  9836 ;; Auto vars:     Size  Location     Type
  9837 ;;  val             1    6[COMRAM] unsigned char 
  9838 ;; Return value:  Size  Location     Type
  9839 ;;                  1    wreg      void 
  9840 ;; Registers used:
  9841 ;;		wreg, status,2, status,0, cstack
  9842 ;; Tracked objects:
  9843 ;;		On entry : 0/0
  9844 ;;		On exit  : 0/0
  9845 ;;		Unchanged: 0/0
  9846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9847 ;;      Params:         0       0       0       0       0       0       0
  9848 ;;      Locals:         1       0       0       0       0       0       0
  9849 ;;      Temps:          0       0       0       0       0       0       0
  9850 ;;      Totals:         1       0       0       0       0       0       0
  9851 ;;Total ram usage:        1 bytes
  9852 ;; Hardware stack levels used:    1
  9853 ;; Hardware stack levels required when called:    1
  9854 ;; This function calls:
  9855 ;;		_atraso_ms
  9856 ;;		_lcd_wr
  9857 ;; This function is called by:
  9858 ;;		_lcd_init
  9859 ;;		_main
  9860 ;;		_encher_tanque
  9861 ;;		_ver_quantidade
  9862 ;;		_esvaziar_tanque
  9863 ;; This function uses a non-reentrant model
  9864 ;;
  9865                           
  9866                           	psect	text37
  9867  003FBE                     __ptext37:
  9868                           	callstack 0
  9869  003FBE                     _lcd_cmd:
  9870                           	callstack 28
  9871                           
  9872                           ;incstack = 0
  9873                           ;lcd_cmd@val stored from wreg
  9874  003FBE  6E07               	movwf	lcd_cmd@val^0,c
  9875  003FC0                     
  9876                           ;lcd.c: 10:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  9877  003FC0  8284               	bsf	132,1,c	;volatile
  9878  003FC2                     
  9879                           ;lcd.c: 11:     lcd_wr(val);
  9880  003FC2  5007               	movf	lcd_cmd@val^0,w,c
  9881  003FC4  EC20  F020         	call	_lcd_wr
  9882  003FC8                     
  9883                           ;lcd.c: 12:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<2));
  9884  003FC8  9484               	bcf	132,2,c	;volatile
  9885  003FCA                     
  9886                           ;lcd.c: 13:     atraso_ms(3);
  9887  003FCA  0E00               	movlw	0
  9888  003FCC  6E02               	movwf	(atraso_ms@t+1)^0,c
  9889  003FCE  0E03               	movlw	3
  9890  003FD0  6E01               	movwf	atraso_ms@t^0,c
  9891  003FD2  ECA4  F01D         	call	_atraso_ms	;wreg free
  9892  003FD6                     
  9893                           ;lcd.c: 14:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  9894  003FD6  9284               	bcf	132,1,c	;volatile
  9895  003FD8                     
  9896                           ;lcd.c: 15:     atraso_ms(3);
  9897  003FD8  0E00               	movlw	0
  9898  003FDA  6E02               	movwf	(atraso_ms@t+1)^0,c
  9899  003FDC  0E03               	movlw	3
  9900  003FDE  6E01               	movwf	atraso_ms@t^0,c
  9901  003FE0  ECA4  F01D         	call	_atraso_ms	;wreg free
  9902  003FE4                     
  9903                           ;lcd.c: 16:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  9904  003FE4  8284               	bsf	132,1,c	;volatile
  9905  003FE6  0012               	return		;funcret
  9906  003FE8                     __end_of_lcd_cmd:
  9907                           	callstack 0
  9908                           
  9909 ;; *************** function _lcd_wr *****************
  9910 ;; Defined at:
  9911 ;;		line 5 in file "lcd.c"
  9912 ;; Parameters:    Size  Location     Type
  9913 ;;  val             1    wreg     unsigned char 
  9914 ;; Auto vars:     Size  Location     Type
  9915 ;;  val             1    0[COMRAM] unsigned char 
  9916 ;; Return value:  Size  Location     Type
  9917 ;;                  1    wreg      void 
  9918 ;; Registers used:
  9919 ;;		wreg
  9920 ;; Tracked objects:
  9921 ;;		On entry : 0/0
  9922 ;;		On exit  : 0/0
  9923 ;;		Unchanged: 0/0
  9924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9925 ;;      Params:         0       0       0       0       0       0       0
  9926 ;;      Locals:         1       0       0       0       0       0       0
  9927 ;;      Temps:          0       0       0       0       0       0       0
  9928 ;;      Totals:         1       0       0       0       0       0       0
  9929 ;;Total ram usage:        1 bytes
  9930 ;; Hardware stack levels used:    1
  9931 ;; This function calls:
  9932 ;;		Nothing
  9933 ;; This function is called by:
  9934 ;;		_lcd_cmd
  9935 ;;		_lcd_dat
  9936 ;; This function uses a non-reentrant model
  9937 ;;
  9938                           
  9939                           	psect	text38
  9940  004040                     __ptext38:
  9941                           	callstack 0
  9942  004040                     _lcd_wr:
  9943                           	callstack 27
  9944                           
  9945                           ;incstack = 0
  9946                           ;lcd_wr@val stored from wreg
  9947  004040  6E01               	movwf	lcd_wr@val^0,c
  9948  004042                     
  9949                           ;lcd.c: 6:     (*(volatile __near unsigned char*)0xF83) = val;
  9950  004042  C001  FF83         	movff	lcd_wr@val,3971	;volatile
  9951  004046  0012               	return		;funcret
  9952  004048                     __end_of_lcd_wr:
  9953                           	callstack 0
  9954                           
  9955 ;; *************** function _atraso_ms *****************
  9956 ;; Defined at:
  9957 ;;		line 3 in file "delay.c"
  9958 ;; Parameters:    Size  Location     Type
  9959 ;;  t               2    0[COMRAM] int 
  9960 ;; Auto vars:     Size  Location     Type
  9961 ;;  i               2    2[COMRAM] volatile unsigned int 
  9962 ;;  k               1    5[COMRAM] volatile unsigned char 
  9963 ;;  j               1    4[COMRAM] volatile unsigned char 
  9964 ;; Return value:  Size  Location     Type
  9965 ;;                  1    wreg      void 
  9966 ;; Registers used:
  9967 ;;		wreg, status,2, status,0
  9968 ;; Tracked objects:
  9969 ;;		On entry : 0/0
  9970 ;;		On exit  : 0/0
  9971 ;;		Unchanged: 0/0
  9972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9973 ;;      Params:         2       0       0       0       0       0       0
  9974 ;;      Locals:         4       0       0       0       0       0       0
  9975 ;;      Temps:          0       0       0       0       0       0       0
  9976 ;;      Totals:         6       0       0       0       0       0       0
  9977 ;;Total ram usage:        6 bytes
  9978 ;; Hardware stack levels used:    1
  9979 ;; This function calls:
  9980 ;;		Nothing
  9981 ;; This function is called by:
  9982 ;;		_lcd_cmd
  9983 ;;		_lcd_dat
  9984 ;;		_lcd_init
  9985 ;;		_tc_tecla
  9986 ;;		_main
  9987 ;;		_encher_tanque
  9988 ;;		_esvaziar_tanque
  9989 ;; This function uses a non-reentrant model
  9990 ;;
  9991                           
  9992                           	psect	text39
  9993  003B48                     __ptext39:
  9994                           	callstack 0
  9995  003B48                     _atraso_ms:
  9996                           	callstack 27
  9997  003B48                     
  9998                           ;delay.c: 4:     volatile unsigned char j, k;;delay.c: 5:     volatile unsigned int i;;d
      +                          elay.c: 7:     for (i = 0; i < (t); i++) {
  9999  003B48  0E00               	movlw	0
 10000  003B4A  6E04               	movwf	(atraso_ms@i+1)^0,c	;volatile
 10001  003B4C  0E00               	movlw	0
 10002  003B4E  6E03               	movwf	atraso_ms@i^0,c	;volatile
 10003  003B50  EFCA  F01D         	goto	l4153
 10004  003B54                     l4131:
 10005                           
 10006                           ;delay.c: 8:         for (j = 0; j < 41; j++) {
 10007  003B54  0E00               	movlw	0
 10008  003B56  6E05               	movwf	atraso_ms@j^0,c	;volatile
 10009  003B58                     l4133:
 10010  003B58  0E28               	movlw	40
 10011  003B5A  6405               	cpfsgt	atraso_ms@j^0,c	;volatile
 10012  003B5C  EFB2  F01D         	goto	u4931
 10013  003B60  EFB4  F01D         	goto	u4930
 10014  003B64                     u4931:
 10015  003B64  EFB6  F01D         	goto	l4137
 10016  003B68                     u4930:
 10017  003B68  EFC8  F01D         	goto	l4151
 10018  003B6C                     l4137:
 10019                           
 10020                           ;delay.c: 9:             for (k = 0; k < 3; k++);
 10021  003B6C  0E00               	movlw	0
 10022  003B6E  6E06               	movwf	atraso_ms@k^0,c	;volatile
 10023  003B70                     l4139:
 10024  003B70  0E02               	movlw	2
 10025  003B72  6406               	cpfsgt	atraso_ms@k^0,c	;volatile
 10026  003B74  EFBE  F01D         	goto	u4941
 10027  003B78  EFC0  F01D         	goto	u4940
 10028  003B7C                     u4941:
 10029  003B7C  EFC2  F01D         	goto	l4143
 10030  003B80                     u4940:
 10031  003B80  EFC5  F01D         	goto	l4147
 10032  003B84                     l4143:
 10033  003B84  2A06               	incf	atraso_ms@k^0,f,c	;volatile
 10034  003B86  EFB8  F01D         	goto	l4139
 10035  003B8A                     l4147:
 10036                           
 10037                           ;delay.c: 10:         }
 10038  003B8A  2A05               	incf	atraso_ms@j^0,f,c	;volatile
 10039  003B8C  EFAC  F01D         	goto	l4133
 10040  003B90                     l4151:
 10041                           
 10042                           ;delay.c: 11:     }
 10043  003B90  4A03               	infsnz	atraso_ms@i^0,f,c	;volatile
 10044  003B92  2A04               	incf	(atraso_ms@i+1)^0,f,c	;volatile
 10045  003B94                     l4153:
 10046  003B94  5001               	movf	atraso_ms@t^0,w,c
 10047  003B96  5C03               	subwf	atraso_ms@i^0,w,c	;volatile
 10048  003B98  5002               	movf	(atraso_ms@t+1)^0,w,c
 10049  003B9A  5804               	subwfb	(atraso_ms@i+1)^0,w,c	;volatile
 10050  003B9C  A0D8               	btfss	status,0,c
 10051  003B9E  EFD3  F01D         	goto	u4951
 10052  003BA2  EFD5  F01D         	goto	u4950
 10053  003BA6                     u4951:
 10054  003BA6  EFAA  F01D         	goto	l4131
 10055  003BAA                     u4950:
 10056  003BAA  0012               	return		;funcret
 10057  003BAC                     __end_of_atraso_ms:
 10058                           	callstack 0
 10059                           
 10060 ;; *************** function ___xxtofl *****************
 10061 ;; Defined at:
 10062 ;;		line 10 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
 10063 ;; Parameters:    Size  Location     Type
 10064 ;;  sign            1    wreg     unsigned char 
 10065 ;;  val             4    0[COMRAM] long 
 10066 ;; Auto vars:     Size  Location     Type
 10067 ;;  sign            1    8[COMRAM] unsigned char 
 10068 ;;  arg             4   10[COMRAM] unsigned long 
 10069 ;;  exp             1    9[COMRAM] unsigned char 
 10070 ;; Return value:  Size  Location     Type
 10071 ;;                  4    0[COMRAM] unsigned char 
 10072 ;; Registers used:
 10073 ;;		wreg, status,2, status,0
 10074 ;; Tracked objects:
 10075 ;;		On entry : 0/0
 10076 ;;		On exit  : 0/0
 10077 ;;		Unchanged: 0/0
 10078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10079 ;;      Params:         4       0       0       0       0       0       0
 10080 ;;      Locals:         6       0       0       0       0       0       0
 10081 ;;      Temps:          4       0       0       0       0       0       0
 10082 ;;      Totals:        14       0       0       0       0       0       0
 10083 ;;Total ram usage:       14 bytes
 10084 ;; Hardware stack levels used:    1
 10085 ;; This function calls:
 10086 ;;		Nothing
 10087 ;; This function is called by:
 10088 ;;		_encher_tanque
 10089 ;; This function uses a non-reentrant model
 10090 ;;
 10091                           
 10092                           	psect	text40
 10093  002F48                     __ptext40:
 10094                           	callstack 0
 10095  002F48                     ___xxtofl:
 10096                           	callstack 29
 10097                           
 10098                           ;incstack = 0
 10099                           ;___xxtofl@sign stored from wreg
 10100  002F48  6E09               	movwf	___xxtofl@sign^0,c
 10101  002F4A  5009               	movf	___xxtofl@sign^0,w,c
 10102  002F4C  B4D8               	btfsc	status,2,c
 10103  002F4E  EFAB  F017         	goto	u5321
 10104  002F52  EFAD  F017         	goto	u5320
 10105  002F56                     u5321:
 10106  002F56  EFCF  F017         	goto	l856
 10107  002F5A                     u5320:
 10108  002F5A  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 10109  002F5C  EFB4  F017         	goto	u5330
 10110  002F60  EFB2  F017         	goto	u5331
 10111  002F64                     u5331:
 10112  002F64  EFCF  F017         	goto	l856
 10113  002F68                     u5330:
 10114  002F68  C001  F005         	movff	___xxtofl@val,??___xxtofl
 10115  002F6C  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 10116  002F70  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 10117  002F74  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 10118  002F78  1E05               	comf	??___xxtofl^0,f,c
 10119  002F7A  1E06               	comf	(??___xxtofl+1)^0,f,c
 10120  002F7C  1E07               	comf	(??___xxtofl+2)^0,f,c
 10121  002F7E  1E08               	comf	(??___xxtofl+3)^0,f,c
 10122  002F80  2A05               	incf	??___xxtofl^0,f,c
 10123  002F82  0E00               	movlw	0
 10124  002F84  2206               	addwfc	(??___xxtofl+1)^0,f,c
 10125  002F86  2207               	addwfc	(??___xxtofl+2)^0,f,c
 10126  002F88  2208               	addwfc	(??___xxtofl+3)^0,f,c
 10127  002F8A  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 10128  002F8E  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 10129  002F92  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 10130  002F96  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 10131  002F9A  EFD7  F017         	goto	l4383
 10132  002F9E                     l856:
 10133  002F9E  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 10134  002FA2  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10135  002FA6  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10136  002FAA  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10137  002FAE                     l4383:
 10138  002FAE  5001               	movf	___xxtofl@val^0,w,c
 10139  002FB0  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 10140  002FB2  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 10141  002FB4  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 10142  002FB6  A4D8               	btfss	status,2,c
 10143  002FB8  EFE0  F017         	goto	u5341
 10144  002FBC  EFE2  F017         	goto	u5340
 10145  002FC0                     u5341:
 10146  002FC0  EFEC  F017         	goto	l4389
 10147  002FC4                     u5340:
 10148  002FC4  0E00               	movlw	0
 10149  002FC6  6E01               	movwf	?___xxtofl^0,c
 10150  002FC8  0E00               	movlw	0
 10151  002FCA  6E02               	movwf	(?___xxtofl+1)^0,c
 10152  002FCC  0E00               	movlw	0
 10153  002FCE  6E03               	movwf	(?___xxtofl+2)^0,c
 10154  002FD0  0E00               	movlw	0
 10155  002FD2  6E04               	movwf	(?___xxtofl+3)^0,c
 10156  002FD4  EF7D  F018         	goto	l859
 10157  002FD8                     l4389:
 10158  002FD8  0E96               	movlw	150
 10159  002FDA  6E0A               	movwf	___xxtofl@exp^0,c
 10160  002FDC  EFF6  F017         	goto	l4393
 10161  002FE0                     l4391:
 10162  002FE0  2A0A               	incf	___xxtofl@exp^0,f,c
 10163  002FE2  90D8               	bcf	status,0,c
 10164  002FE4  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 10165  002FE6  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 10166  002FE8  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 10167  002FEA  320B               	rrcf	___xxtofl@arg^0,f,c
 10168  002FEC                     l4393:
 10169  002FEC  0E00               	movlw	0
 10170  002FEE  140B               	andwf	___xxtofl@arg^0,w,c
 10171  002FF0  6E05               	movwf	??___xxtofl^0,c
 10172  002FF2  0E00               	movlw	0
 10173  002FF4  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 10174  002FF6  6E06               	movwf	(??___xxtofl+1)^0,c
 10175  002FF8  0E00               	movlw	0
 10176  002FFA  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 10177  002FFC  6E07               	movwf	(??___xxtofl+2)^0,c
 10178  002FFE  0EFE               	movlw	254
 10179  003000  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 10180  003002  6E08               	movwf	(??___xxtofl+3)^0,c
 10181  003004  5005               	movf	??___xxtofl^0,w,c
 10182  003006  1006               	iorwf	(??___xxtofl+1)^0,w,c
 10183  003008  1007               	iorwf	(??___xxtofl+2)^0,w,c
 10184  00300A  1008               	iorwf	(??___xxtofl+3)^0,w,c
 10185  00300C  A4D8               	btfss	status,2,c
 10186  00300E  EF0B  F018         	goto	u5351
 10187  003012  EF0D  F018         	goto	u5350
 10188  003016                     u5351:
 10189  003016  EFF0  F017         	goto	l4391
 10190  00301A                     u5350:
 10191  00301A  EF1B  F018         	goto	l863
 10192  00301E                     l4395:
 10193  00301E  2A0A               	incf	___xxtofl@exp^0,f,c
 10194  003020  0E01               	movlw	1
 10195  003022  260B               	addwf	___xxtofl@arg^0,f,c
 10196  003024  0E00               	movlw	0
 10197  003026  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 10198  003028  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 10199  00302A  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 10200  00302C  90D8               	bcf	status,0,c
 10201  00302E  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 10202  003030  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 10203  003032  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 10204  003034  320B               	rrcf	___xxtofl@arg^0,f,c
 10205  003036                     l863:
 10206  003036  0E00               	movlw	0
 10207  003038  140B               	andwf	___xxtofl@arg^0,w,c
 10208  00303A  6E05               	movwf	??___xxtofl^0,c
 10209  00303C  0E00               	movlw	0
 10210  00303E  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 10211  003040  6E06               	movwf	(??___xxtofl+1)^0,c
 10212  003042  0E00               	movlw	0
 10213  003044  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 10214  003046  6E07               	movwf	(??___xxtofl+2)^0,c
 10215  003048  0EFF               	movlw	255
 10216  00304A  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 10217  00304C  6E08               	movwf	(??___xxtofl+3)^0,c
 10218  00304E  5005               	movf	??___xxtofl^0,w,c
 10219  003050  1006               	iorwf	(??___xxtofl+1)^0,w,c
 10220  003052  1007               	iorwf	(??___xxtofl+2)^0,w,c
 10221  003054  1008               	iorwf	(??___xxtofl+3)^0,w,c
 10222  003056  A4D8               	btfss	status,2,c
 10223  003058  EF30  F018         	goto	u5361
 10224  00305C  EF32  F018         	goto	u5360
 10225  003060                     u5361:
 10226  003060  EF0F  F018         	goto	l4395
 10227  003064                     u5360:
 10228  003064  EF3A  F018         	goto	l4403
 10229  003068                     l4401:
 10230  003068  060A               	decf	___xxtofl@exp^0,f,c
 10231  00306A  90D8               	bcf	status,0,c
 10232  00306C  360B               	rlcf	___xxtofl@arg^0,f,c
 10233  00306E  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 10234  003070  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 10235  003072  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 10236  003074                     l4403:
 10237  003074  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 10238  003076  EF3F  F018         	goto	u5371
 10239  00307A  EF41  F018         	goto	u5370
 10240  00307E                     u5371:
 10241  00307E  EF49  F018         	goto	l870
 10242  003082                     u5370:
 10243  003082  0E02               	movlw	2
 10244  003084  600A               	cpfslt	___xxtofl@exp^0,c
 10245  003086  EF47  F018         	goto	u5381
 10246  00308A  EF49  F018         	goto	u5380
 10247  00308E                     u5381:
 10248  00308E  EF34  F018         	goto	l4401
 10249  003092                     u5380:
 10250  003092                     l870:
 10251  003092  B00A               	btfsc	___xxtofl@exp^0,0,c
 10252  003094  EF4E  F018         	goto	u5391
 10253  003098  EF50  F018         	goto	u5390
 10254  00309C                     u5391:
 10255  00309C  EF51  F018         	goto	l4409
 10256  0030A0                     u5390:
 10257  0030A0  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 10258  0030A2                     l4409:
 10259  0030A2  90D8               	bcf	status,0,c
 10260  0030A4  320A               	rrcf	___xxtofl@exp^0,f,c
 10261  0030A6  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 10262  0030AA  6A06               	clrf	(??___xxtofl+1)^0,c
 10263  0030AC  6A07               	clrf	(??___xxtofl+2)^0,c
 10264  0030AE  6A08               	clrf	(??___xxtofl+3)^0,c
 10265  0030B0  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 10266  0030B4  6A07               	clrf	(??___xxtofl+2)^0,c
 10267  0030B6  6A06               	clrf	(??___xxtofl+1)^0,c
 10268  0030B8  6A05               	clrf	??___xxtofl^0,c
 10269  0030BA  5005               	movf	??___xxtofl^0,w,c
 10270  0030BC  120B               	iorwf	___xxtofl@arg^0,f,c
 10271  0030BE  5006               	movf	(??___xxtofl+1)^0,w,c
 10272  0030C0  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 10273  0030C2  5007               	movf	(??___xxtofl+2)^0,w,c
 10274  0030C4  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 10275  0030C6  5008               	movf	(??___xxtofl+3)^0,w,c
 10276  0030C8  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 10277  0030CA  5009               	movf	___xxtofl@sign^0,w,c
 10278  0030CC  B4D8               	btfsc	status,2,c
 10279  0030CE  EF6B  F018         	goto	u5401
 10280  0030D2  EF6D  F018         	goto	u5400
 10281  0030D6                     u5401:
 10282  0030D6  EF75  F018         	goto	l4419
 10283  0030DA                     u5400:
 10284  0030DA  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 10285  0030DC  EF74  F018         	goto	u5410
 10286  0030E0  EF72  F018         	goto	u5411
 10287  0030E4                     u5411:
 10288  0030E4  EF75  F018         	goto	l4419
 10289  0030E8                     u5410:
 10290  0030E8  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 10291  0030EA                     l4419:
 10292  0030EA  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 10293  0030EE  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 10294  0030F2  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 10295  0030F6  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 10296  0030FA                     l859:
 10297  0030FA  0012               	return		;funcret
 10298  0030FC                     __end_of___xxtofl:
 10299                           	callstack 0
 10300                           
 10301                           	psect	rparam
 10302  0000                     
 10303                           	psect	idloc
 10304                           
 10305                           ;Config register IDLOC0 @ 0x200000
 10306                           ;	unspecified, using default values
 10307  200000                     	org	2097152
 10308  200000  FF                 	db	255
 10309                           
 10310                           ;Config register IDLOC1 @ 0x200001
 10311                           ;	unspecified, using default values
 10312  200001                     	org	2097153
 10313  200001  FF                 	db	255
 10314                           
 10315                           ;Config register IDLOC2 @ 0x200002
 10316                           ;	unspecified, using default values
 10317  200002                     	org	2097154
 10318  200002  FF                 	db	255
 10319                           
 10320                           ;Config register IDLOC3 @ 0x200003
 10321                           ;	unspecified, using default values
 10322  200003                     	org	2097155
 10323  200003  FF                 	db	255
 10324                           
 10325                           ;Config register IDLOC4 @ 0x200004
 10326                           ;	unspecified, using default values
 10327  200004                     	org	2097156
 10328  200004  FF                 	db	255
 10329                           
 10330                           ;Config register IDLOC5 @ 0x200005
 10331                           ;	unspecified, using default values
 10332  200005                     	org	2097157
 10333  200005  FF                 	db	255
 10334                           
 10335                           ;Config register IDLOC6 @ 0x200006
 10336                           ;	unspecified, using default values
 10337  200006                     	org	2097158
 10338  200006  FF                 	db	255
 10339                           
 10340                           ;Config register IDLOC7 @ 0x200007
 10341                           ;	unspecified, using default values
 10342  200007                     	org	2097159
 10343  200007  FF                 	db	255
 10344                           
 10345                           	psect	config
 10346                           
 10347                           ; Padding undefined space
 10348  300000                     	org	3145728
 10349  300000  FF                 	db	255
 10350                           
 10351                           ;Config register CONFIG1H @ 0x300001
 10352                           ;	Oscillator Selection bits
 10353                           ;	OSC = HS, HS oscillator
 10354                           ;	Fail-Safe Clock Monitor Enable bit
 10355                           ;	FCMEN = 0x0, unprogrammed default
 10356                           ;	Internal/External Oscillator Switchover bit
 10357                           ;	IESO = 0x0, unprogrammed default
 10358  300001                     	org	3145729
 10359  300001  02                 	db	2
 10360                           
 10361                           ;Config register CONFIG2L @ 0x300002
 10362                           ;	unspecified, using default values
 10363                           ;	Power-up Timer Enable bit
 10364                           ;	PWRT = 0x1, unprogrammed default
 10365                           ;	Brown-out Reset Enable bits
 10366                           ;	BOREN = 0x3, unprogrammed default
 10367                           ;	Brown Out Reset Voltage bits
 10368                           ;	BORV = 0x3, unprogrammed default
 10369  300002                     	org	3145730
 10370  300002  1F                 	db	31
 10371                           
 10372                           ;Config register CONFIG2H @ 0x300003
 10373                           ;	Watchdog Timer Enable bit
 10374                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10375                           ;	Watchdog Timer Postscale Select bits
 10376                           ;	WDTPS = 1, 1:1
 10377  300003                     	org	3145731
 10378  300003  00                 	db	0
 10379                           
 10380                           ; Padding undefined space
 10381  300004                     	org	3145732
 10382  300004  FF                 	db	255
 10383                           
 10384                           ;Config register CONFIG3H @ 0x300005
 10385                           ;	unspecified, using default values
 10386                           ;	CCP2 MUX bit
 10387                           ;	CCP2MX = 0x1, unprogrammed default
 10388                           ;	PORTB A/D Enable bit
 10389                           ;	PBADEN = 0x1, unprogrammed default
 10390                           ;	Low-Power Timer1 Oscillator Enable bit
 10391                           ;	LPT1OSC = 0x0, unprogrammed default
 10392                           ;	MCLR Pin Enable bit
 10393                           ;	MCLRE = 0x1, unprogrammed default
 10394  300005                     	org	3145733
 10395  300005  83                 	db	131
 10396                           
 10397                           ;Config register CONFIG4L @ 0x300006
 10398                           ;	Stack Full/Underflow Reset Enable bit
 10399                           ;	STVREN = 0x1, unprogrammed default
 10400                           ;	Single-Supply ICSP Enable bit
 10401                           ;	LVP = OFF, Single-Supply ICSP disabled
 10402                           ;	Extended Instruction Set Enable bit
 10403                           ;	XINST = 0x0, unprogrammed default
 10404                           ;	Background Debugger Enable bit
 10405                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 10406  300006                     	org	3145734
 10407  300006  81                 	db	129
 10408                           
 10409                           ; Padding undefined space
 10410  300007                     	org	3145735
 10411  300007  FF                 	db	255
 10412                           
 10413                           ;Config register CONFIG5L @ 0x300008
 10414                           ;	unspecified, using default values
 10415                           ;	Code Protection bit
 10416                           ;	CP0 = 0x1, unprogrammed default
 10417                           ;	Code Protection bit
 10418                           ;	CP1 = 0x1, unprogrammed default
 10419                           ;	Code Protection bit
 10420                           ;	CP2 = 0x1, unprogrammed default
 10421                           ;	Code Protection bit
 10422                           ;	CP3 = 0x1, unprogrammed default
 10423  300008                     	org	3145736
 10424  300008  0F                 	db	15
 10425                           
 10426                           ;Config register CONFIG5H @ 0x300009
 10427                           ;	unspecified, using default values
 10428                           ;	Boot Block Code Protection bit
 10429                           ;	CPB = 0x1, unprogrammed default
 10430                           ;	Data EEPROM Code Protection bit
 10431                           ;	CPD = 0x1, unprogrammed default
 10432  300009                     	org	3145737
 10433  300009  C0                 	db	192
 10434                           
 10435                           ;Config register CONFIG6L @ 0x30000A
 10436                           ;	unspecified, using default values
 10437                           ;	Write Protection bit
 10438                           ;	WRT0 = 0x1, unprogrammed default
 10439                           ;	Write Protection bit
 10440                           ;	WRT1 = 0x1, unprogrammed default
 10441                           ;	Write Protection bit
 10442                           ;	WRT2 = 0x1, unprogrammed default
 10443                           ;	Write Protection bit
 10444                           ;	WRT3 = 0x1, unprogrammed default
 10445  30000A                     	org	3145738
 10446  30000A  0F                 	db	15
 10447                           
 10448                           ;Config register CONFIG6H @ 0x30000B
 10449                           ;	unspecified, using default values
 10450                           ;	Configuration Register Write Protection bit
 10451                           ;	WRTC = 0x1, unprogrammed default
 10452                           ;	Boot Block Write Protection bit
 10453                           ;	WRTB = 0x1, unprogrammed default
 10454                           ;	Data EEPROM Write Protection bit
 10455                           ;	WRTD = 0x1, unprogrammed default
 10456  30000B                     	org	3145739
 10457  30000B  E0                 	db	224
 10458                           
 10459                           ;Config register CONFIG7L @ 0x30000C
 10460                           ;	unspecified, using default values
 10461                           ;	Table Read Protection bit
 10462                           ;	EBTR0 = 0x1, unprogrammed default
 10463                           ;	Table Read Protection bit
 10464                           ;	EBTR1 = 0x1, unprogrammed default
 10465                           ;	Table Read Protection bit
 10466                           ;	EBTR2 = 0x1, unprogrammed default
 10467                           ;	Table Read Protection bit
 10468                           ;	EBTR3 = 0x1, unprogrammed default
 10469  30000C                     	org	3145740
 10470  30000C  0F                 	db	15
 10471                           
 10472                           ;Config register CONFIG7H @ 0x30000D
 10473                           ;	unspecified, using default values
 10474                           ;	Boot Block Table Read Protection bit
 10475                           ;	EBTRB = 0x1, unprogrammed default
 10476  30000D                     	org	3145741
 10477  30000D  40                 	db	64
 10478                           tosu	equ	0xFFF
 10479                           tosh	equ	0xFFE
 10480                           tosl	equ	0xFFD
 10481                           stkptr	equ	0xFFC
 10482                           pclatu	equ	0xFFB
 10483                           pclath	equ	0xFFA
 10484                           pcl	equ	0xFF9
 10485                           tblptru	equ	0xFF8
 10486                           tblptrh	equ	0xFF7
 10487                           tblptrl	equ	0xFF6
 10488                           tablat	equ	0xFF5
 10489                           prodh	equ	0xFF4
 10490                           prodl	equ	0xFF3
 10491                           indf0	equ	0xFEF
 10492                           postinc0	equ	0xFEE
 10493                           postdec0	equ	0xFED
 10494                           preinc0	equ	0xFEC
 10495                           plusw0	equ	0xFEB
 10496                           fsr0h	equ	0xFEA
 10497                           fsr0l	equ	0xFE9
 10498                           wreg	equ	0xFE8
 10499                           indf1	equ	0xFE7
 10500                           postinc1	equ	0xFE6
 10501                           postdec1	equ	0xFE5
 10502                           preinc1	equ	0xFE4
 10503                           plusw1	equ	0xFE3
 10504                           fsr1h	equ	0xFE2
 10505                           fsr1l	equ	0xFE1
 10506                           bsr	equ	0xFE0
 10507                           indf2	equ	0xFDF
 10508                           postinc2	equ	0xFDE
 10509                           postdec2	equ	0xFDD
 10510                           preinc2	equ	0xFDC
 10511                           plusw2	equ	0xFDB
 10512                           fsr2h	equ	0xFDA
 10513                           fsr2l	equ	0xFD9
 10514                           status	equ	0xFD8

Data Sizes:
    Strings     237
    Constant    4
    Data        50
    BSS         102
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    127     127
    BANK0           128     87     119
    BANK1           256      0     120
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_41(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_41(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_36(CODE[4]), STR_35(CODE[4]), STR_32(CODE[4]), STR_31(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_36(CODE[4]), STR_35(CODE[4]), STR_32(CODE[4]), STR_31(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> esvaziar_tanque@y(BANK0[8]), ver_quantidade@y(BANK0[8]), encher_tanque@y(BANK0[8]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_25(CODE[5]), STR_17(CODE[5]), STR_11(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_25(CODE[5]), STR_17(CODE[5]), STR_11(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_25(CODE[5]), STR_17(CODE[5]), STR_11(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_25(CODE[5]), STR_17(CODE[5]), STR_11(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 8
		 -> esvaziar_tanque@y(BANK0[8]), ver_quantidade@y(BANK0[8]), encher_tanque@y(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S607_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 8
		 -> esvaziar_tanque@y(BANK0[8]), ver_quantidade@y(BANK0[8]), encher_tanque@y(BANK0[8]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> esvaziar_tanque@y(BANK0[8]), ver_quantidade@y(BANK0[8]), encher_tanque@y(BANK0[8]), 

    esvaziar_tanque@vol	PTR  size(2) Largest target is 4
		 -> volume(BANK0[4]), 

    ver_quantidade@vol	PTR  size(2) Largest target is 4
		 -> volume(BANK0[4]), 

    encher_tanque@vol	PTR  size(2) Largest target is 4
		 -> volume(BANK0[4]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_30(CODE[14]), STR_29(CODE[13]), STR_28(CODE[9]), STR_27(CODE[14]), 
		 -> STR_26(CODE[3]), esvaziar_tanque@y(BANK0[8]), STR_24(CODE[11]), STR_23(CODE[14]), 
		 -> STR_22(CODE[11]), STR_21(CODE[11]), STR_20(CODE[11]), STR_19(CODE[3]), 
		 -> STR_18(CODE[8]), ver_quantidade@y(BANK0[8]), STR_16(CODE[14]), STR_15(CODE[13]), 
		 -> STR_14(CODE[9]), STR_13(CODE[12]), STR_12(CODE[3]), encher_tanque@y(BANK0[8]), 
		 -> STR_10(CODE[11]), STR_9(CODE[16]), STR_8(CODE[11]), STR_7(CODE[11]), 
		 -> STR_6(CODE[12]), STR_5(CODE[19]), STR_4(CODE[15]), STR_3(CODE[14]), 
		 -> STR_2(CODE[11]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_encher_tanque
    _main->_esvaziar_tanque
    _main->_ver_quantidade
    _lcd_init->_lcd_cmd
    _tc_tecla->_atraso_ms
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___fltol->___fldiv
    ___flsub->___fladd
    ___fladd->___xxtofl
    ___flge->___fladd
    _atoi->_isspace
    _lcd_str->_lcd_dat
    _lcd_dat->_atraso_ms
    _lcd_cmd->_atraso_ms

Critical Paths under _main in BANK0

    _main->_encher_tanque
    _ver_quantidade->_sprintf
    _esvaziar_tanque->_sprintf
    _encher_tanque->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  140706
                                             85 BANK0      2     2      0
                          _atraso_ms
                      _encher_tanque
                    _esvaziar_tanque
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                     _ver_quantidade
 ---------------------------------------------------------------------------------
 (1) _ver_quantidade                                      12    10      2   36197
                                            125 COMRAM     2     0      2
                                             36 BANK0     10    10      0
                            _lcd_cmd
                            _lcd_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    3664
                          _atraso_ms
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _esvaziar_tanque                                     38    36      2   44322
                                            125 COMRAM     2     0      2
                                             36 BANK0     36    36      0
                            ___fldiv
                            ___flsub
                            ___fltol
                          _atraso_ms
                            _lcd_cmd
                            _lcd_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _encher_tanque                                       51    49      2   48633
                                            125 COMRAM     2     0      2
                                             36 BANK0     49    49      0
                            ___awdiv
                            ___awmod
                            ___fladd
                             ___flge
                             ___wmul
                           ___xxtofl
                          _atraso_ms
                            _lcd_cmd
                            _lcd_dat
                            _lcd_str
                            _sprintf
                           _tc_tecla
 ---------------------------------------------------------------------------------
 (2) _tc_tecla                                             7     5      2    2250
                                              6 COMRAM     7     5      2
                          _atraso_ms
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   29925
                                             18 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   29264
                                            123 COMRAM     2     2      0
                                             12 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   28892
                                            113 COMRAM    10     4      6
                                              0 BANK0     12    12      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   23137
                                             45 COMRAM    68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     457
                                             25 COMRAM    10     6      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    3497
                                             30 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2718
                                             14 COMRAM    16     8      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2352
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     790
                                             30 COMRAM    12     4      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2159
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1608
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     767
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcd_str                                              5     3      2    4224
                                              7 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (3) _lcd_dat                                              1     1      0    1854
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0    1854
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (4) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _atraso_ms                                            6     4      2    1810
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atraso_ms
   _encher_tanque
     ___awdiv
     ___awmod
     ___fladd
       ___xxtofl (ARG)
     ___flge
       ___fladd (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___wmul
     ___xxtofl
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_dat
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
                 ___xxtofl (ARG)
               ___flmul (ARG)
             ___fltol
               ___fldiv (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
     _tc_tecla
       _atraso_ms
   _esvaziar_tanque
     ___fldiv
     ___flsub
       ___fladd
         ___xxtofl (ARG)
       ___flmul (ARG)
     ___fltol
       ___fldiv (ARG)
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
                 ___xxtofl (ARG)
               ___flmul (ARG)
             ___fltol
               ___fldiv (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
   _lcd_cmd
     _atraso_ms
     _lcd_wr
   _lcd_init
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
   _lcd_str
     _lcd_dat
       _atraso_ms
       _lcd_wr
   _ver_quantidade
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
                 ___xxtofl (ARG)
               ___flmul (ARG)
             ___fltol
               ___fldiv (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      78       7       46.9%
BITBANK0            80      0       0       4        0.0%
BANK0               80     57      77       5       93.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7F      7F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     16E      15        0.0%
DATA                 0      0     16E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Jul 04 20:17:18 2020

             ___fldiv@aexp 0019  esvaziar_tanque@decremento 00C2               ___fldiv@bexp 0018  
                        _i 00E5               ___fldiv@sign 0011                         l10 3BAA  
                       l21 3FBC                         l30 3B46                         l15 4046  
                       l24 3D2A                         l18 3FE6                         l50 2C72  
                       l52 2C5A                         l45 2C32                         l62 2CDA  
                       l55 2CB2                         l47 2C1C                         l72 2D90  
                       l57 2C9A               ___awdiv@sign 0006        ___wmul@multiplicand 0003  
           encher_tanque@i 00D3             encher_tanque@y 00BC                        l201 4034  
                      l121 2F40                        l113 2E18                        l122 2F04  
                      l124 2F22                        l119 2EE6                        l161 23C4  
                      l164 23D2                        l175 3966                        l432 38BC  
                      l178 3974                        l195 29A6                        l460 3ACE  
                      l445 3A24                        l198 29B4                        l471 3494  
                      l466 344E                        l730 146A                        l475 3F24  
                      l731 1430                        l822 1E72                        l815 1C7C  
                      l832 1FA2                        l824 1EEA                        l920 377A  
                      l825 1ED8                        l729 147C                        l746 1596  
                      l738 174C                        l498 3390                        l819 1FE0  
                      l755 1666                        l771 3E70                        l923 37BC  
                      l756 1654                        l925 37F8                        l870 3092  
                      l863 3036                        l783 276C                        l943 128C  
                      l856 2F9E                        l785 25CC                        l961 0AD2  
                      l794 2612                        l859 30FA                        l796 268A  
                      l788 2590                        l797 2678                        l879 3DD8  
                      l987 0E64                        _pad 3734               ___awmod@sign 0006  
                      wreg 000FE8            ?_ver_quantidade 007E            encher_tanque@t1 00CC  
          encher_tanque@t2 00D1               ___flmul@aexp 0012               ___flmul@bexp 0013  
              _tolower$891 000D               ___flmul@sign 000D               ___flmul@temp 0018  
             ___flmul@prod 0014       encher_tanque@numeros 00A8               ___fltol@exp1 0023  
                     l1040 1B00                       l1105 3F5C                       l1113 3E2A  
                     l1033 1BB6                       l1134 3732                       l1142 3EB4  
                     l1046 3C66                       l1151 3D86                       l1119 3EEC  
                     l1047 3C6E                       l3001 12BA                       l1057 3592  
                     l1145 4048                       l1161 3668                       l3011 12F4  
                     l3003 12CA                       l1171 3CC6                       l3101 14BE  
                     l3021 1322                       l3013 12FA                       l3005 12DA  
                     l1157 3F92                       l1086 3282                       l3111 14F8  
                     l3103 14CC                       l3031 1356                       l3023 1324  
                     l3015 130C                       l3007 12DC                       l1095 2BC6  
                     l1176 3CCE                       l1089 328A                       l3121 1564  
                     l3113 14FA                       l3105 14DA                       l3041 1392  
                     l3025 1334                       l3033 135E                       l3017 130E  
                     l3009 12E4                       l3201 3E94                       l4001 10C8  
                     l1098 2B0A                       l3131 15BC                       l3123 1566  
                     l3115 1504                       l3107 14E6                       l3051 13A6  
                     l3043 1396                       l3035 136E                       l3027 1344  
                     l3019 1314                       l3203 3F5E                       l4011 110A  
                     l4003 10D8                       l4101 3254                       l3301 25B8  
                     l3141 15EA                       l3125 1576                       l3109 14EA  
                     l3117 150A                       l3061 13BA                       l3053 13AA  
                     l3045 139A                       l3037 1380                       l3029 1354  
                     l3205 3F6A                       l3213 3EB6                       l4021 113A  
                     l4013 1118                       l4005 10EA                       l4103 3266  
                     l3311 25F8                       l3303 25BA                       l3231 2400  
                     l3223 23D4                       l3143 15F8                       l3135 15D0  
                     l3151 1616                       l3119 1530                       l3127 1586  
                     l3063 13BE                       l3055 13AE                       l3047 139E  
                     l3039 138E                       l3071 13CE                       l3207 3F6E  
                     l4031 119A                       l4023 1160                       l4015 1120  
                     l4007 10F2                       l4111 35BE                       l3217 4010  
                     l3321 2634                       l3313 2602                       l3305 25CA  
                     l3241 243A                       l3233 2410                       l3225 23E0  
                     l3401 1CB0                       l3145 1600                       l3137 15DA  
                     l3129 15AC                       l3153 1624                       l3081 143E  
                     l3073 13D2                       l3065 13C2                       l3057 13B2  
                     l3049 13A2                       l3209 3F86                       l4041 11E0  
                     l4033 11B4                       l4025 117C                       l4017 1128  
                     l4009 1102                       l4121 360C                       l4201 1992  
                     l4131 3B54                       l3219 402C                       l3331 26A6  
                     l3323 2642                       l3315 2610                       l3307 25DC  
                     l3251 2466                       l3243 2440                       l3235 2420  
                     l3227 23EE                       l3411 1D00                       l3403 1CBC  
                     l3163 1676                       l3171 16CC                       l3155 1628  
                     l3147 1604                       l3139 15E8                       l3091 1468  
                     l3083 144A                       l3075 13FC                       l3067 13C6  
                     l3059 13B6                       l4051 1230                       l4043 11F0  
                     l4035 11BA                       l4027 1182                       l4019 1134  
                     l4123 361E                       l4115 35CA                       l4203 19C2  
                     l4133 3B58                       l3501 380C                       l3341 2712  
                     l3333 26B4                       l3325 2670                       l3309 25F2  
                     l3317 2622                       l3261 24A0                       l3253 2476  
                     l3245 2446                       l3237 2422                       l3229 23F0  
                     l3421 1D42                       l3413 1D0C                       l3405 1CC6  
                     l3181 171E                       l3173 16DC                       l3165 1682  
                     l3157 1636                       l3149 1614                       l3093 148A  
                     l3085 144E                       l3077 1418                       l3069 13CA  
                     l4061 126C                       l4053 1242                       l4045 11F6  
                     l4037 11CC                       l4029 1188                       l4125 3646  
                     l4117 35D8                       l4109 3594                       l4213 1A8A  
                     l4301 2BE0                       l4143 3B84                       l4151 3B90  
                     l4071 3114                       l3511 3832                       l3503 3814  
                     l3351 2760                       l3343 272C                       l3335 26DE  
                     l3319 2630                       l3263 24B6                       l3255 2486  
                     l3247 2454                       l3239 242A                       l3431 1DA4  
                     l3423 1D4E                       l3415 1D18                       l3407 1CDC  
                     l3191 173C                       l3183 1724                       l3175 16EC  
                     l3167 1690                       l3159 164C                       l3095 149A  
                     l3087 145C                       l3079 1428                       l4055 124E  
                     l4047 11FC                       l4039 11D8                       l4119 35F0  
                     l4215 1A9C                       l4223 1B14                       l4207 19EE  
                     l4311 2C2A                       l4303 2BF4                       l4401 3068  
                     l4137 3B6C                       l4153 3B94                       l4129 3B48  
                     l4073 3118                       l3521 386A                       l3513 383A  
                     l3505 3818                       l3353 2762                       l3345 2748  
                     l3329 269A                       l3337 26E2                       l3281 250A  
                     l3265 24C6                       l3273 24E6                       l3257 2488  
                     l3249 2456                       l3601 340E                       l3441 1E3A  
                     l3433 1DB0                       l3425 1D5E                       l3417 1D26  
                     l3409 1CE8                       l3361 1BB8                       l3185 1726  
                     l3177 170C                       l3169 16CA                       l3089 145E  
                     l4057 1256                       l4241 1BA4                       l4225 1B38  
                     l4233 1B66                       l4217 1AD0                       l4209 1A1C  
                     l4161 1780                       l4321 2C80                       l4313 2C40  
                     l4305 2C02                       l4411 30A6                       l4403 3074  
                     l4147 3B8A                       l4139 3B70                       l4155 4042  
                     l4251 3F9E                       l4091 31CE                       l4083 3174  
                     l4075 3134                       l4067 30FC                       l3531 3896  
                     l3523 3870                       l3515 384C                       l3507 3826  
                     l3347 274C                       l3339 26FC                       l3291 255C  
                     l3283 2524                       l3275 24F6                       l3267 24CE  
                     l3259 2490                       l3611 3492                       l3603 341C  
                     l3451 1E90                       l3443 1E58                       l3435 1DCC  
                     l3427 1D78                       l3419 1D32                       l3371 1BF4  
                     l3363 1BC4                       l3187 172C                       l3179 1710  
                     l3099 14AE                       l3195 3E72                       l4059 1266  
                     l4235 1B74                       l4227 1B46                       l4171 17D0  
                     l4163 1792                       l4331 2CCC                       l4323 2C8C  
                     l4315 2C4C                       l4307 2C0E                       l4413 30CA  
                     l4405 3082                       l4253 3FA0                       l4085 318A  
                     l4077 316A                       l4069 3110                       l3525 3886  
                     l3517 3854                       l3533 389C                       l3509 382E  
                     l3541 3976                       l3349 275A                       l3293 256C  
                     l3285 2534                       l3277 24F6                       l3269 24D2  
                     l3605 342E                       l3461 1EFA                       l3453 1E94  
                     l3445 1E62                       l3437 1DF6                       l3429 1D88  
                     l3381 1C26                       l3373 1C04                       l3365 1BD2  
                     l3189 173A                       l3701 3534                       l3197 3E7E  
                     l4229 1B5A                       l4173 17F4                       l4165 1796  
                     l4157 174E                       l4261 3C0E                       l4341 2D06  
                     l4501 2196                       l4415 30DA                       l4407 30A0  
                     l4271 3FC2                       l4255 3FAC                       l4247 3F96  
                     l4095 3204                       l4087 3192                       l4079 316E  
                     l3535 38AC                       l3527 388E                       l3519 385C  
                     l3551 39A2                       l3543 397A                       l3295 2580  
                     l3287 2544                       l3607 343C                       l3471 1F5C  
                     l3463 1F06                       l3455 1EA2                       l3447 1E70  
                     l3439 1E2C                       l3391 1C66                       l3383 1C34  
                     l3375 1C0A                       l3367 1BD4                       l3615 3EEE  
                     l3631 32E0                       l3623 328C                       l3703 3546  
                     l3199 3E90                       l3711 3D2C                       l4191 191A  
                     l4183 18A4                       l4175 182E                       l4167 17BA  
                     l4159 1772                       l4239 1B80                       l4263 3C16  
                     l4351 2D52                       l4335 2CE8                       l4327 2CA8  
                     l4319 2C68                       l4343 2D16                       l4511 223E  
                     l4503 21EC                       l4423 3CD0                       l4431 38EC  
                     l4417 30E8                       l4409 30A2                       l4281 3FE4  
                     l4273 3FC8                       l4257 3FAE                       l4249 3F98  
                     l4089 319A                       l3537 38B4                       l3529 3890  
                     l3561 39DA                       l3553 39AA                       l3545 3988  
                     l3297 258E                       l3289 2554                       l3609 348C  
                     l3481 1FC4                       l3473 1F70                       l3465 1F14  
                     l3457 1ED0                       l3449 1E82                       l3393 1C6C  
                     l3385 1C36                       l3377 1C1A                       l3369 1BE4  
                     l3617 3F04                       l3633 32E2                       l3625 32A2  
                     l3713 3D3C                       l3721 3CB8                       l3801 07D2  
                     l4193 192A                       l4177 184E                       l4169 17C2  
                     l4185 18B6                       l4265 3C24                       l4361 2D8A  
                     l4353 2D62                       l4345 2D22                       l4329 2CC0  
                     l4337 2CF2                       l4521 226E                       l4513 224E  
                     l4505 221A                       l4601 2868                       l4425 3CD4  
                     l4441 391C                       l4433 38F2                       l4419 30EA  
                     l4275 3FCA                       l4259 3FBA                       l4283 3AD0  
                     l4099 3242                       l3571 3A14                       l3563 39F0  
                     l3555 39BC                       l3547 3990                       l3299 259A  
                     l3483 1FC6                       l3475 1F8A                       l3467 1F3E  
                     l3395 1C8C                       l3387 1C46                       l3379 1C20  
                     l3619 3F14                       l3491 3E2C                       l3635 32F2  
                     l3707 358A                       l3731 2A40                       l3715 3C70  
                     l3811 084C                       l4195 195C                       l4187 18D8  
                     l4179 185C                       l4267 3C4A                       l4371 3DAA  
                     l4355 2D72                       l4339 2D04                       l4347 2D2A  
                     l4291 2BC8                       l4531 2298                       l4523 2274  
                     l4515 2256                       l4507 2226                       l4611 2900  
                     l4603 2896                       l4427 3CE0                       l4443 3922  
                     l4435 38F8                       l4381 2F68                       l4277 3FD6  
                     l4269 3FC0                       l4285 3AD8                       l3573 3A1C  
                     l3565 39F8                       l3557 39C4                       l3549 3994  
                     l3581 3A64                       l3477 1FA6                       l3485 1FCC  
                     l3469 1F42                       l3397 1C9C                       l3389 1C56  
                     l3493 3E3C                       l3661 3370                       l3645 331C  
                     l3637 32F6                       l3629 32B6                       l3733 2A4E  
                     l3741 2B2E                       l3725 29B6                       l3901 0BEA  
                     l3813 0854                       l3805 0806                       l4197 196E  
                     l4189 18E8                       l4373 3DC6                       l4365 3D88  
                     l4357 2D74                       l4349 2D40                       l4293 2BD4  
                     l4541 22FA                       l4533 22B4                       l4525 227A  
                     l4517 2268                       l4509 2232                       l4461 1FEE  
                     l4621 291E                       l4613 2904                       l4605 28A2  
                     l4453 393E                       l4445 392E                       l4437 3904  
                     l4429 38BE                       l4701 2E18                       ?_pad 0011  
                     l4391 2FE0                       l4383 2FAE                       l4279 3FD8  
                     l4287 3B08                       l3567 39FE                       l3559 39CC  
                     l3583 3A92                       l3487 1FD0                       l3479 1FB6  
                     l3663 3380                       l3655 3344                       l3647 3326  
                     l3639 3304                       l3743 2B6A                       l3727 29D6  
                     l3671 3758                       l3719 3CA6                       l3911 0C82  
                     l3903 0BF2                       l3823 08D6                       l3807 0818  
                     l4199 1984                       l4367 3D9A                       l4359 2D86  
                     l4295 2BDC                       l4551 2338                       l4543 22FC  
                     l4535 22D4                       l4527 2286                       l4519 226C  
                     l4471 2024                       l4463 1FFA                       l4631 294C  
                     l4623 2924                       l4615 2906                       l4607 28AE  
                     l4455 3944                       l4447 3934                       l4439 3910  
                     l4711 2E42                       l4703 2E1E                       l4393 2FEC  
                     l4385 2FC4                       l4377 2F4A                       l4289 3B0A  
                     l3753 3F26                       l3761 3DF2                       l3497 37FA  
                     l3569 3A04                       l3585 3AA2                       l3577 3A26  
                     l3593 3392                       l3657 3350                       l3649 3330  
                     l3745 2B7E                       l3737 2ABE                       l3729 2A2C  
                     l3681 379E                       l3673 3766                       l3921 0D64  
                     l3913 0CDA                       l3905 0BFA                       l3841 096E  
                     l3825 08E8                       l3809 0834                       l3817 087C  
                     l4369 3DA2                       l4553 2340                       l4561 236E  
                     l4545 22FE                       l4537 22D8                       l4529 228C  
                     l4481 2058                       l4473 2028                       l4465 200C  
                     l4641 297C                       l4633 2962                       l4625 2930  
                     l4617 290C                       l4609 28EE                       l4457 394A  
                     l4721 2E64                       l4705 2E24                       l4395 301E  
                     l4379 2F5A                       l3763 3E20                       l3499 37FE  
                     l3587 3AC6                       l3579 3A54                       l3595 33C0  
                     l3659 3360                       l3691 34B6                       l3747 2BA6  
                     l3739 2AFA                       l3683 37CC                       l3675 3772  
                     l3667 3734                       l3931 0DFA                       l3923 0D96  
                     l3915 0D0E                       l3907 0C0A                       l3851 0A3A  
                     l3843 09A2                       l3827 0904                       l3819 08A2  
                     l3835 0920                       l3771 06FC                       l4571 23A0  
                     l4555 2352                       l4547 2316                       l4539 22EE  
                     l4563 2372                       l4491 20EA                       l4483 2090  
                     l4475 203A                       l4467 2012                       l4459 1FE2  
                     l4643 2982                       l4635 296E                       l4627 2938  
                     l4619 2912                       l4731 2E9A                       l4723 2E80  
                     l4707 2E30                       l4397 3020                       l4389 2FD8  
                     l3765 3E24                       l3757 3DDA                       l3589 3ACC  
                     l3597 33D0                       l3693 34F4                       l3749 2BB6  
                     l2981 367C                       l3685 37E0                       l3677 3786  
                     l3669 3744                       l3941 0E80                       l3933 0E2E  
                     l3925 0DAA                       l3909 0C1E                       l3917 0D12  
                     l3861 0AA4                       l3845 09A6                       l3853 0A6C  
                     l3837 0938                       l3781 074E                       l3773 070C  
                     l4573 23A6                       l4565 2386                       l4557 2358  
                     l4549 2322                       l4493 20F8                       l4485 20C0  
                     l4477 203E                       l4469 201C                       l4645 2988  
                     l4581 277A                       l4733 2EA0                       l4717 2E4C  
                     l4709 2E36                       l4399 302C                       l3759 3DDE  
                     l3599 33FE                       l3695 351C                       l2983 368E  
                     l3679 379A                       l3951 0F26                       l3943 0EE4  
                     l3935 0E3E                       l3927 0DDC                       l3919 0D30  
                     l3863 0AAC                       l3855 0A7A                       l3847 0A00  
                     l3791 0796                       l3783 0756                       l3775 071A  
                     l4575 23B2                       l4567 2398                       l4559 2364  
                     l4495 2168                       l4479 2044                       l4487 20C4  
                     l4647 2994                       l4639 297A                       l4591 27BC  
                     l4583 2786                       l4743 2EF4                       l4735 2EBC  
                     l4719 2E5E                       l4671 2D92                       l2993 128E  
                     l3697 3528                       l3689 3496                       l2985 3698  
                     l3961 0F62                       l3945 0EF4                       l3953 0F2E  
                     l3937 0E50                       l3929 0DEA                       l3881 0B5E  
                     l3873 0AF2                       l3865 0AC6                       l3857 0A7E  
                     l3849 0A34                       l3793 079E                       l3785 0768  
                     l3777 0722                       l3769 06F4                       l4577 23B8  
                     l4569 239A                       l4497 2174                       l4489 20D8  
                     l4649 299A                       l4593 27F6                       l4585 2798  
                     l4745 2F12                       l4737 2ED4                       l4729 2E88  
                     l4681 2DBE                       l4673 2DA2                       l2995 129A  
                     l2987 36B6                       l2979 366A                       l3971 0F8E  
                     l3963 0F68                       l3955 0F40                       l3947 0F06  
                     l3939 0E5C                       l3891 0B9C                       l3875 0B04  
                     l3883 0B62                       l3859 0A90                       l3867 0ADE  
                     l3795 07A2                       l3787 0778                       l3779 0746  
                     l4499 2180                       l4595 2802                       l4587 279E  
                     l4579 276E                       l4747 2F30                       l4691 2DE8  
                     l4683 2DC4                       l4675 2DA6                       l2997 12A8  
                     l2989 36EC                       l3965 0F74                       l3957 0F4E  
                     l3973 0F94                       l3981 0FC2                       l3949 0F18  
                     l3893 0BA0                       l3885 0B6A                       l3877 0B20  
                     l3797 07A6                       l3789 078A                       l4597 280E  
                     l4589 27AA                       l4693 2DF4                       l4685 2DD0  
                     l4677 2DAC                       l2999 12AA                       l3991 1076  
                     l3983 101A                       l3975 0FA6                       l3967 0F84  
                     l3959 0F5E                       l3895 0BB2                       l3887 0B7C  
                     l3879 0B56                       l3799 07AC                       l4599 2824  
                     l4695 2DFA                       l4687 2DDC                       l4679 2DB2  
                     l4769 31B8                       l3993 1092                       l3985 104E  
                     l3977 0FB8                       l3969 0F88                       l3897 0BC0  
                     l3889 0B8E                       l4697 2E06                       l4689 2DE2  
                     l3995 10A4                       l3987 1054                       l3979 0FBC  
                     l3899 0BD8                       l4699 2E12                       l3997 10B4  
                     l3989 1058                       l3999 10C4                       STR_1 0618  
                     STR_2 06BB                       STR_3 0672                       STR_4 0639  
                     STR_5 0605                       STR_6 0699                       STR_7 06A5  
                     STR_8 06B0                       STR_9 0629                       u3000 147C  
                     u3001 1478                       u3010 148A                       u3011 1486  
                     u3100 15E8                       u3020 149A                       u3101 15E4  
                     u3021 1496                       u3110 15F8                       u3030 14CC  
                     u3111 15F4                       u3031 14C8                       u3200 16DC  
                     u3120 1614                       u3040 14DA                       u4000 3766  
                     u3201 16D8                       u3121 1610                       u3041 14D6  
                     u4001 3762                       u3210 16EC                       u3130 1624  
                     u3050 14F8                       u4010 37BC                       u3211 16E8  
                     u3131 1620                       u3051 14F4                       u4011 37B8  
                     u3300 2400                       u3220 170C                       u3140 1636  
                     u3060 1530                       u4020 37CC                       u4100 3D74  
                     u3301 23FC                       u3221 1708                       u3141 1632  
                     u3061 152C                       u4021 37C8                       u3310 2410  
                     u3230 171E                       u3150 164C                       u3070 1576  
                     u4030 34D6                       u4110 3D86                       u3311 240C  
                     u3231 171A                       u3151 1648                       u3071 1572  
                     u4111 3D82                       u3400 25DC                       u3320 2454  
                     u3240 173A                       u3160 1662                       u3080 15AC  
                     u4040 34F4                       u4200 2ADE                       u4120 3CA0  
                     u5000 189E                       u3401 25D8                       u3321 2450  
                     u3241 1736                       u3161 165E                       u3081 15A8  
                     u4041 34F0                       u4121 3C9A                       u3410 25F2  
                     u3330 2466                       u3170 1676                       u3090 15BC  
                     u4050 351C                       u4210 2AFA                       u3250 3EB4  
                     u4130 3CA2                       u5010 18B6                       u3411 25EE  
                     u3331 2462                       u3171 1672                       u3091 15B8  
                     u4051 3518                       u4035 34CC                       u4211 2AF6  
                     u3251 3EB0                       u4107 3D6A                       u5011 18B2  
                     u3500 272C                       u3420 2610                       u3340 2476  
                     u3180 1690                       u4060 3546                       u4220 2B4E  
                     u3260 3F86                       u4140 3CB8                       u4300 0768  
                     u5020 18E8                       u5100 3C66                       u3501 2728  
                     u3421 260C                       u3341 2472                       u3181 168C  
                     u4061 3542                       u4205 2AD4                       u3261 3F82  
                     u4141 3CB4                       u4301 0764                       u5021 18E4  
                     u5101 3C62                       u5110 3B04                       u3510 275A  
                     u3430 2630                       u3350 24B6                       u3190 16CA  
                     u4230 2B6A                       u4150 29FE                       u3270 3EE6  
                     u4310 0778                       u5030 192A                       u3511 2756  
                     u3431 262C                       u3351 24B2                       u3191 16C6  
                     u4231 2B66                       u3271 3EE0                       u4311 0774  
                     u5031 1926                       u5120 3B36                       u3440 2642  
                     u3360 24F6                       u3600 1E16                       u3520 1BD2  
                     u4080 3580                       u4240 2BA6                       u4160 2A2C  
                     u3280 3EE8                       u4400 08E8                       u4320 078A  
                     u5040 196E                       u5200 2C80                       u3441 263E  
                     u3361 24F2                       u3521 1BCE                       u4081 357A  
                     u4241 2BA2                       u4225 2B44                       u4161 2A28  
                     u4401 08E4                       u4321 0786                       u5041 196A  
                     u5201 2C7C                       u5130 3B46                       u4250 3F56  
                     u3450 2670                       u3370 256C                       u3290 23EE  
                     u3610 1E70                       u3530 1BE4                       u4090 3582  
                     u4170 2A4E                       u4410 096A                       u4330 07D2  
                     u5050 1A1C                       u5210 2C9A                       u5131 3B42  
                     u4251 3F50                       u3451 266C                       u3371 2568  
                     u3291 23EA                       u3611 1E6C                       u3531 1BE0  
                     u4075 3558                       u4171 2A4A                       u4155 29F4  
                     u4411 0966                       u4331 07CE                       u5051 1A18  
                     u5211 2C96                       u4260 3F58                       u3460 2686  
                     u3380 258E                       u3700 1FC4                       u3620 1E90  
                     u3540 1BF4                       u2900 1322                       u2820 367C  
                     u4500 0B56                       u4420 09FC                       u4340 0800  
                     u5060 1A82                       u5300 2D72                       u5220 2CA8  
                     u5140 2C02                       u5117 3AFA                       u3461 2682  
                     u3381 258A                       u3701 1FC0                       u3621 1E8C  
                     u3605 1E0C                       u3541 1BF0                       u2901 131E  
                     u2821 3678                       u4501 0B52                       u4421 09F8  
                     u4341 07FA                       u5061 1A7C                       u5301 2D6E  
                     u5221 2CA4                       u5141 2BFE                       u4270 3DF2  
                     u3710 380C                       u3470 269A                       u3390 25B8  
                     u3630 1EA2                       u3550 1C34                       u2910 1334  
                     u4190 2ABA                       u2830 368E                       u4510 0B7C  
                     u4430 0A6C                       u4350 0802                       u5070 1A84  
                     u5310 2D86                       u5230 2CC0                       u5150 2C1C  
                     u5127 3B2C                       u4271 3DEE                       u3711 3808  
                     u3471 2696                       u3391 25B4                       u3631 1E9E  
                     u3551 1C30                       u2911 1330                       u4191 2AB6  
                     u2831 368A                       u4511 0B78                       u4431 0A68  
                     u5311 2D82                       u5231 2CBC                       u5151 2C18  
                     u5400 30DA                       u5320 2F5A                       u4280 3E20  
                     u3720 3826                       u3800 39DA                       u3480 26B4  
                     u3640 1ED0                       u3560 1C46                       u2920 1344  
                     u2840 36B6                       u4600 0DEA                       u4520 0B8E  
                     u4440 0A90                       u4360 0818                       u5080 1A9C  
                     u5240 2CDA                       u5160 2C2A                       u5401 30D6  
                     u5321 2F56                       u4281 3E1C                       u3721 3822  
                     u3801 39D6                       u3481 26B0                       u3641 1ECC  
                     u3561 1C42                       u2921 1340                       u4185 2A62  
                     u2841 36B2                       u4601 0DE6                       u4521 0B8A  
                     u4441 0A8C                       u4361 0814                       u5081 1A98  
                     u5241 2CD6                       u5161 2C26                       u5410 30E8  
                     u5330 2F68                       u3730 384C                       u3810 39F0  
                     u3490 26FC                       u3650 1EE6                       u3570 1C56  
                     u2930 1380                       u4186 2A6C                       u2850 36EC  
                     u4610 0E50                       u4530 0B9C                       u4450 0AA4  
                     u4370 08A2                       u4290 071A                       u5090 1B38  
                     u5250 2CE8                       u5170 2C40                       u5411 30E4  
                     u5331 2F64                       u3731 3848                       u3811 39EC  
                     u3491 26F8                       u3651 1EE2                       u3571 1C52  
                     u2931 137C                       u4187 2A7C                       u2851 36E8  
                     u4611 0E4C                       u4531 0B98                       u4451 0AA0  
                     u4371 089E                       u4291 0716                       u5091 1B34  
                     u5251 2CE4                       u5171 2C3C                       u5340 2FC4  
                     u3740 386A                       u3820 3A14                       u3900 348C  
                     u3660 1EFA                       u3580 1C8C                       u2940 138E  
                     u2860 12A8                       u4700 1092                       u4620 0EF4  
                     u4540 0BB2                       u4460 0AC6                       u4380 08D0  
                     u5260 2D16                       u5180 2C5A                       u5500 2386  
                     u5420 3966                       u5341 2FC0                       u3741 3866  
                     u3821 3A10                       u3901 3488                       u3661 1EF6  
                     u3581 1C88                       u2941 138A                       u2861 12A4  
                     u4701 108E                       u4621 0EF0                       u4541 0BAE  
                     u4461 0AC2                       u4381 08CA                       u5261 2D12  
                     u5181 2C56                       u5501 2382                       u5421 3962  
                     u5350 301A                       u3750 3886                       u3830 3A54  
                     u3670 1F14                       u3590 1C9C                       u3910 3F04  
                     u2950 13FC                       u2870 12BA                       u4710 10A4  
                     u4630 0F06                       u4550 0BC0                       u4470 0AEE  
                     u4390 08D2                       u5270 2D40                       u5190 2C68  
                     u5510 2398                       u5430 3974                       u5351 3016  
                     u3751 3882                       u3831 3A50                       u3671 1F10  
                     u3591 1C98                       u3911 3F00                       u2951 13F8  
                     u2871 12B6                       u4711 10A0                       u4631 0F02  
                     u4551 0BBC                       u4471 0AEA                       u5271 2D3C  
                     u5191 2C64                       u5511 2394                       u5431 3970  
                     u5360 3064                       u3760 38AC                       u3840 3A92  
                     u3680 1F5C                       u2960 1414                       u2880 12CA  
                     u3920 32A2                       u4800 1242                       u4720 10B4  
                     u4640 0F18                       u4560 0BEA                       u4480 0B04  
                     u5280 2D52                       u5520 23D2                       u5440 2058  
                     u5600 2EF4                       u5361 3060                       u3761 38A8  
                     u3841 3A8E                       u3681 1F58                       u2961 140E  
                     u2881 12C6                       u3921 329E                       u4801 123E  
                     u4721 10B0                       u4641 0F14                       u4561 0BE6  
                     u4481 0B00                       u5281 2D4E                       u5521 23CE  
                     u5441 2054                       u5601 2EF0                       u5370 3082  
                     u4810 3134                       u3770 3988                       u3850 3AC6  
                     u3690 1F8A                       u2970 1416                       u2890 130C  
                     u3930 32D6                       u4730 10EA                       u4650 0F26  
                     u4570 0D30                       u4490 0B20                       u5290 2D62  
                     u5450 20D8                       u5530 27F6                       u5610 2F12  
                     u5371 307E                       u4811 3130                       u3771 3984  
                     u3851 3AC2                       u3691 1F86                       u2891 1308  
                     u4731 10E6                       u4651 0F22                       u4571 0D2C  
                     u4491 0B1C                       u5291 2D5E                       u5451 20D4  
                     u5531 27F2                       u5611 2F0E                       u5380 3092  
                     u4820 316A                       u3780 39A2                       u3860 33C0  
                     u2980 143E                       u3940 3304                       u4740 1118  
                     u4660 0F40                       u4580 0D96                       u4900 360C  
                     u5460 2168                       u5620 2F30                       u5381 308E  
                     u4821 3166                       u3781 399E                       u3861 33BC  
                     u2981 143A                       u3941 3300                       u4741 1114  
                     u4661 0F3C                       u4581 0D92                       u4901 3608  
                     u5461 2164                       u5541 28F8                       u5621 2F2C  
                     u5390 30A0                       u4830 3186                       u3790 39BC  
                     u3870 33FE                       u2990 145C                       u3950 3318  
                     u4750 119A                       u4670 0F4E                       u4590 0DDC  
                     u4910 361E                       u5550 2948                       u5391 309C  
                     u4831 3182                       u3791 39B8                       u3871 33FA  
                     u2991 1458                       u3951 3314                       u3935 32CC  
                     u4751 1196                       u4671 0F4A                       u4591 0DD8  
                     u4911 361A                       u5471 2260                       u5551 2944  
                     u4840 323C                       u3880 341C                       u3960 3340  
                     u4760 11B4                       u4680 0FA6                       u4920 3646  
                     u5480 2338                       u5560 29B4                       u4841 3236  
                     u3881 3418                       u3961 333C                       u4761 11B0  
                     u4681 0FA2                       u4921 3642                       u5481 2334  
                     u5561 29B0                       u4930 3B68                       u4850 323E  
                     u3890 343C                       u3970 3360                       u4770 11CC  
                     u4690 1076                       u5490 2352                       u5570 2E80  
                     u4931 3B64                       u3891 3438                       u3971 335C  
                     u4771 11C8                       u4691 1072                       u5491 234E  
                     u5571 2E7C                       u4940 3B80                       u4860 3254  
                     u3980 3370                       u4780 122A                       u5580 2EBC  
                     u4941 3B7C                       u4861 3250                       u3981 336C  
                     u4781 1224                       u5581 2EB8                       u4950 3BAA  
                     u4870 3266                       u3990 3744                       u4790 122C  
                     u5590 2EE2                       u4951 3BA6                       u4871 3262  
                     u3991 3740                       u5591 2EDE                       u4880 35BE  
                     u4960 1772                       u4881 35BA                       u4961 176E  
                     u4890 35F0                       u4970 17BA                       u4891 35EC  
                     u4971 17B6                       u4980 17F4                       u4981 17F0  
                     u4990 189C                       u4991 1896                       _dbuf 0100  
                     _atoi 30FC                       _main 2D92                       _prec 00E1  
                     _nout 00DD                       pad@i 0018                       pad@p 0015  
                     fsr0h 000FEA                       fsr1h 000FE2                       indf0 000FEF  
                     fsr2h 000FDA                       fsr0l 000FE9                       indf2 000FDF  
                     fsr1l 000FE1                       pad@w 001A                       fsr2l 000FD9  
            ___fpclassifyf 3496            ??_encher_tanque 00A4                       prodh 000FF4  
                     prodl 000FF3                       start 0000            ___fldiv@new_exp 0012  
         encher_tanque@num 00C8           encher_tanque@tmp 00D0           encher_tanque@vol 007E  
             ___param_bank 000000                      ??_pad 0017              ___fltol@sign1 0022  
                    ?_atoi 0008            __end_of___fladd 174E                      ?_main 0001  
          __end_of___fldiv 276E            __end_of___awdiv 38BE            __end_of___flneg 3F26  
                    STR_10 0667                      STR_11 06D7                      STR_20 0667  
                    STR_12 06EF                      STR_21 06A5                      STR_13 068D  
                    STR_30 0664                      STR_22 06B0                      STR_14 06C6  
                    STR_31 06DC                      STR_15 0680                      STR_23 0656  
                    STR_24 0667                      STR_32 06E4                      STR_16 0664  
                    STR_25 06D7                      STR_17 06D7                      STR_41 06EC  
                    STR_26 06EF                      STR_18 06CF                      STR_19 06EF  
                    STR_35 06E0                      STR_27 0648                      STR_28 06C6  
                    STR_36 06E8            __end_of___awmod 3A26                      STR_29 0680  
                    STR_39 06EC            __end_of___flmul 1FE2            __end_of___flsub 3E72  
          __end_of___fltol 3392            ___awdiv@divisor 0003   __size_of_esvaziar_tanque 0248  
          ___awdiv@counter 0005               vfpfcnvrt@fmt 0074           esvaziar_tanque@i 00C6  
         esvaziar_tanque@y 00B8            __end_of_lcd_dat 3FBE            __end_of_lcd_cmd 3FE8  
          __end_of_lcd_str 3B48                      _flags 00E3                      _linha 0601  
                    _fputc 366A                      _fputs 3E72            __end_of_isdigit 3F5E  
                    atoi@n 0015                      pad@fp 0011                      atoi@s 0008  
                    _width 00DF                      _putch 4048            __end_of_isspace 3E2C  
          __end_of_isupper 3EEE                      tablat 000FF5          encher_tanque@F347 0164  
                    plusw1 000FE3                      plusw2 000FDB                      status 000FD8  
          __end_of_sprintf 3DDA             ?___fpclassifyf 0001            __end_of_tolower 3CD0  
          __end_of_strncmp 366A            __initialization 3BAC               __end_of_atoi 328C  
             __end_of_main 2F48                     ??_atoi 000A                     ??_main 0080  
            __activetblptr 000002            tc_tecla@timeout 0007                     ?_fputc 0001  
                   ?_fputs 000A           ___awdiv@dividend 0001                     ?_putch 0001  
         __end_of___xxtofl 30FC    encher_tanque@incremento 00CE     esvaziar_tanque@numeros 00A4  
             vfprintf@cfmt 007C           __end_of_lcd_init 3D2C                     ___flge 3392  
                   ___fleq 3A26                  ??___fladd 0017                     ___wmul 4010  
                ??___fldiv 0009                  ??___awdiv 0005                  ??___flneg 0005  
                ??___awmod 0005                  ??___flmul 0009                  ??___flsub 0027  
                ??___fltol 001E                     _efgtoa 06F4                     _lcd_wr 4040  
                   _atraso 00F1                     _floorf 29B6                     clear_0 3BF2  
                   clear_1 3BFE           ___awdiv@quotient 0007            ___awmod@divisor 0003  
          ___awmod@counter 0005                     pad@buf 0013                  ??_lcd_dat 0007  
                ??_lcd_cmd 0007           __end_of_tc_tecla 2D92                     _strcpy 3D2C  
                   _strlen 3F5E                     _volume 00E7                  ??_lcd_str 000A  
                   fputc@c 0001                     fputs@c 000E                     fputs@i 000F  
                   fputs@s 000A                  ??_isdigit 0003            ___fpclassifyf@e 0009  
          ___fpclassifyf@u 000B            ___fpclassifyf@x 0001               __mediumconst 0000  
                ??_isspace 0003                     tblptrh 000FF7                  ??_isupper 0003  
                   tblptrl 000FF6                     tblptru 000FF8                     putch@c 0001  
         __end_of_vfprintf 3C70          ??_esvaziar_tanque 0080                  ??_sprintf 007E  
                ??_tolower 0009                  ??_strncmp 0007                 ___flge@ff1 001F  
               ___flge@ff2 0023            ??___fpclassifyf 0005         encher_tanque@i_130 00C4  
             ___xxtofl@arg 000B               ___xxtofl@exp 000A               ___xxtofl@val 0001  
               ___fleq@ff1 0001                 ___fleq@ff2 0005                 __accesstop 0080  
  __end_of__initialization 3C04                 ___flneg@f1 0001              ___rparam_used 000001  
       encher_tanque@tempo 00C6                 ___fltol@f1 001A             __pcstackCOMRAM 0001  
             __pidataBANK0 4036               __pidataBANK1 3FE8              __end_of_linha 0605  
            __end_of_fputc 3734              __end_of_fputs 3EB6              __end_of_putch 404A  
         ??_ver_quantidade 0080                    ??_fputc 0005                    ??_fputs 000E  
       __size_of_atraso_ms 0064                    ??_putch 0001                 __pbssBANK0 00D5  
               __pbssBANK1 0100                tc_tecla@ret 000C                tc_tecla@tmp 000B  
               _efgtoa$732 003E                 _efgtoa$733 0040                 _efgtoa$742 0044  
               _efgtoa$743 0046                 _efgtoa$744 0048                 _efgtoa$738 0042  
                  ?___flge 001F                    ?___fleq 0001                    ?___wmul 0001  
                  ?_efgtoa 002E                    ?_lcd_wr 0001                    ?_floorf 001A  
                  ?_strcpy 0001                    ?_strlen 0001                  ?___xxtofl 0001  
       __size_of_vfpfcnvrt 046A                  ?_lcd_init 0001                 _atraso_min 00F3  
       esvaziar_tanque@vol 007E                  ?_tc_tecla 0007                    __Hparam 0000  
                  __Lparam 0000      __end_of_encher_tanque 23D4            __size_of___flge 0104  
          __size_of___fleq 00AA                    ___fladd 128E                    ___fldiv 23D4  
                  ___awdiv 37FA                    ___flneg 3EEE                    ___awmod 3976  
                  ___flmul 1BB8                    ___flsub 3E2C                    ___fltol 328C  
          __size_of___wmul 0026                  ?_vfprintf 008C          __end_of_atraso_ms 3BAC  
             __psmallconst 0600            __size_of_efgtoa 0B9A            __size_of_lcd_wr 0008  
          __size_of_floorf 0212                    __pcinit 3BAC                    __ramtop 0600  
                  __ptext0 2D92                    __ptext1 38BE                    __ptext2 3CD0  
                  __ptext3 276E                    __ptext4 1FE2                    __ptext5 2BC8  
                  __ptext6 3D88                    __ptext7 3C0E                    __ptext8 174E  
                  __ptext9 3594                    _lcd_dat 3F94                    _lcd_cmd 3FBE  
                  _lcd_str 3AD0            __size_of_strcpy 005C            __size_of_strlen 0036  
             __size_of_pad 00C6                    _isdigit 3F26                 ??___xxtofl 0005  
         ___awmod@dividend 0001                    _isspace 3DDA                    _isupper 3EB6  
                  efgtoa@c 0034                    efgtoa@d 0052                    efgtoa@e 006A  
                  efgtoa@f 0030                    efgtoa@g 0066                    efgtoa@h 005C  
                  efgtoa@i 0064                    efgtoa@l 0060                    efgtoa@m 004E  
                  efgtoa@n 006C                    efgtoa@p 0056                    efgtoa@t 004A  
                  efgtoa@u 006E                    efgtoa@w 0059                    atoi@neg 000E  
                  _sprintf 3D88                    _tolower 3C70                 ??_lcd_init 0008  
                  _strncmp 3594       end_of_initialization 3C04                    floorf@e 0028  
                  floorf@m 0024                    floorf@u 002A                    floorf@x 001A  
                  fputc@fp 0003              __Lmediumconst 0000                    fputs@fp 000C  
               ??_tc_tecla 0009          __end_of_vfpfcnvrt 1BB8                 efgtoa@mode 005B  
               efgtoa@sign 0054                    postdec1 000FE5                    postdec2 000FDD  
                  postinc0 000FEE                    postinc1 000FE6                    postinc2 000FDE  
               ??_vfprintf 007C                    strcpy@d 0009                    strlen@a 0003  
                  strcpy@s 0007                    strlen@s 0001            _esvaziar_tanque 276E  
              ___fladd@grs 001E              ___xxtofl@sign 0009                 lcd_dat@val 0007  
               lcd_cmd@val 0007                ___fldiv@grs 0014                ___fldiv@rem 000D  
              ___flmul@grs 000E                 lcd_str@str 0008             __end_of___flge 3496  
           __end_of___fleq 3AD0                 atraso_ms@i 0003                 atraso_ms@j 0005  
               atraso_ms@k 0006                 atraso_ms@t 0001                vfpfcnvrt@ap 0076  
              vfpfcnvrt@ct 0088                vfpfcnvrt@fp 0072             __end_of___wmul 4036  
     esvaziar_tanque@tempo 00C0             __end_of_efgtoa 128E             __end_of_lcd_wr 4048  
           __end_of_floorf 2BC8                 floorf@F524 00D5             __end_of_strcpy 3D88  
           __end_of_strlen 3F94        start_initialization 3BAC                __end_of_pad 37FA  
    __end_of___fpclassifyf 3594                vfprintf@fmt 008E    __end_of_esvaziar_tanque 29B6  
                 ??___flge 0027                   ??___fleq 0009                   ??___wmul 0005  
                 ??_efgtoa 0035                   ??_lcd_wr 0001                __pdataBANK0 00EB  
              __pdataBANK1 0150                   ??_floorf 001E                   ??_strcpy 0005  
                 ??_strlen 0003                  ___fladd@a 0013                  ___fladd@b 000F  
                ___fldiv@a 0005                  ___fldiv@b 0001                  ___flmul@a 0005  
                ___flmul@b 0001                  ___flsub@a 0023                  ___flsub@b 001F  
            __pcstackBANK0 0080          __size_of___xxtofl 01B4          __size_of_lcd_init 005C  
               tc_tecla@to 0009          __size_of_tc_tecla 01CA                   ?___fladd 000F  
                 ?___fldiv 0001                   ?___awdiv 0001                   ?___flneg 0001  
                 ?___awmod 0001                   ?___flmul 0001                   ?___flsub 001F  
                 ?___fltol 001A                   ?_lcd_dat 0001                   ?_lcd_cmd 0001  
        __size_of_vfprintf 0062                   ?_lcd_str 0008                  _atrasoMed 00ED  
                _atrasoMax 00EB                  _atrasoMin 00EF                  _atraso_ms 3B48  
              __smallconst 0600                   ?_isdigit 0001            ver_quantidade@i 00AC  
          ver_quantidade@y 00A4                   ?_isspace 0001                   ?_isupper 0001  
                 ?_sprintf 0092                   ?_tolower 0007    __size_of_ver_quantidade 00B8  
           __size_of_fputc 00CA             __size_of_fputs 0044                   ?_strncmp 0001  
           __size_of_putch 0002             ___wmul@product 0005           ?_esvaziar_tanque 007E  
                _vfpfcnvrt 174E          ___wmul@multiplier 0001                 ?_atraso_ms 0001  
                lcd_wr@val 0001        esvaziar_tanque@F342 0150     __size_of_encher_tanque 03F2  
               vfpfcnvrt@c 008B                 vfpfcnvrt@f 0084                  copy_data0 3BC0  
                copy_data1 3BE0          ver_quantidade@vol 007E                   __Hrparam 0000  
               vfprintf@ap 0090                   __Lrparam 0000                 vfprintf@fp 008C  
         __size_of___fladd 04C0           __size_of___fldiv 039A           __size_of___awdiv 00C4  
         __size_of___flneg 0038           __size_of___awmod 00B0           __size_of___flmul 042A  
         __size_of___flsub 0046           __size_of___fltol 0106                 ?_vfpfcnvrt 0072  
       ___fpclassifyf@F463 00D9           __size_of_lcd_dat 002A           __size_of_lcd_cmd 002A  
               sprintf@fmt 0094           __size_of_lcd_str 0078                   ___xxtofl 2F48  
                 _atoi$796 0010                   _atoi$797 0014                   _atoi$798 0012  
                tc_tecla@i 000D           __size_of_isdigit 0038           __size_of_isspace 0052  
                 __ptext10 06F4                   __ptext11 3C70                   __ptext20 3496  
                 __ptext12 3EB6                   __ptext21 328C                   __ptext13 3D2C  
                 __ptext30 37FA                   __ptext22 3E2C                   __ptext14 3734  
                 __ptext31 30FC                   __ptext23 128E                   __ptext15 3F5E  
                 __ptext40 2F48                   __ptext32 3DDA                   __ptext24 3EEE  
                 __ptext16 3E72                   __ptext33 3F26                   __ptext25 1BB8  
                 __ptext17 366A                   __ptext34 4010                   __ptext26 3392  
                 __ptext18 4048                   __ptext35 3AD0                   __ptext27 3A26  
                 __ptext19 29B6                   __ptext36 3F94                   __ptext28 23D4  
                 __ptext37 3FBE                   __ptext29 3976                   __ptext38 4040  
                 __ptext39 3B48           __size_of_isupper 0038                   _lcd_init 3CD0  
         __size_of_sprintf 0052           __size_of_tolower 0060                 strcpy@dest 0001  
         __size_of_strncmp 00D6              __size_of_atoi 0190              __size_of_main 01B6  
                 _tc_tecla 2BC8                   efgtoa@fp 002E                   efgtoa@ne 0050  
                 efgtoa@pp 004C                   efgtoa@ou 003A              _encher_tanque 1FE2  
                 _vfprintf 3C0E                   lcd_str@i 000C                _isspace$827 0007  
              ??_atraso_ms 0003                   isdigit@c 0001             _ver_quantidade 38BE  
                sprintf@ap 009C                   isspace@c 0001                  strcpy@src 0003  
                 isupper@c 0001                  strncmp@_l 0001                  strncmp@_r 0003  
           ?_encher_tanque 007E                efgtoa@nmode 0058                ??_vfpfcnvrt 0078  
            _vfpfcnvrt$762 0082              _vfpfcnvrt$758 0080                   sprintf@f 009E  
                 tolower@c 0007                   sprintf@s 0092     __size_of___fpclassifyf 00FE  
   __end_of_ver_quantidade 3976                   strncmp@l 0008                   strncmp@n 0005  
                 strncmp@r 000A              ___fladd@signs 001B               ___fladd@aexp 001C  
             ___fladd@bexp 001D  

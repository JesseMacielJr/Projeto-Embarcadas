

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Jul 04 21:00:12 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    61                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    63  0000                     
    64                           ; Version 2.20
    65                           ; Generated 12/02/2020 GMT
    66                           ; 
    67                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F4520 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     
    99                           	psect	idataBANK0
   100  004198                     __pidataBANK0:
   101                           	callstack 0
   102                           
   103                           ;initializer for _atrasoMax
   104  004198  03E8               	dw	1000
   105                           
   106                           ;initializer for _atrasoMed
   107  00419A  01F4               	dw	500
   108                           
   109                           ;initializer for _atrasoMin
   110  00419C  0014               	dw	20
   111                           
   112                           ;initializer for _atraso
   113  00419E  000F               	dw	15
   114                           
   115                           ;initializer for _atraso_min
   116  0041A0  0005               	dw	5
   117                           
   118                           	psect	idataBANK1
   119  004136                     __pidataBANK1:
   120                           	callstack 0
   121                           
   122                           ;initializer for esvaziar_tanque@F342
   123  004136  003F               	dw	63
   124  004138  0006               	dw	6
   125  00413A  005B               	dw	91
   126  00413C  004F               	dw	79
   127  00413E  0066               	dw	102
   128  004140  006D               	dw	109
   129  004142  007D               	dw	125
   130  004144  0007               	dw	7
   131  004146  007F               	dw	127
   132  004148  006F               	dw	111
   133                           
   134                           ;initializer for encher_tanque@F355
   135  00414A  003F               	dw	63
   136  00414C  0006               	dw	6
   137  00414E  005B               	dw	91
   138  004150  004F               	dw	79
   139  004152  0066               	dw	102
   140  004154  006D               	dw	109
   141  004156  007D               	dw	125
   142  004158  0007               	dw	7
   143  00415A  007F               	dw	127
   144  00415C  006F               	dw	111
   145                           
   146                           	psect	smallconst
   147  000600                     __psmallconst:
   148                           	callstack 0
   149  000600  00                 	db	0
   150  000601                     _linha:
   151                           	callstack 0
   152  000601  01                 	db	1
   153  000602  02                 	db	2
   154  000603  04                 	db	4
   155  000604  00                 	db	0
   156  000605                     __end_of_linha:
   157                           	callstack 0
   158  000605                     STR_5:
   159  000605  52                 	db	82	;'R'
   160  000606  42                 	db	66	;'B'
   161  000607  33                 	db	51	;'3'
   162  000608  2D                 	db	45
   163  000609  56                 	db	86	;'V'
   164  00060A  65                 	db	101	;'e'
   165  00060B  72                 	db	114	;'r'
   166  00060C  20                 	db	32
   167  00060D  52                 	db	82	;'R'
   168  00060E  42                 	db	66	;'B'
   169  00060F  34                 	db	52	;'4'
   170  000610  2D                 	db	45
   171  000611  45                 	db	69	;'E'
   172  000612  6E                 	db	110	;'n'
   173  000613  63                 	db	99	;'c'
   174  000614  68                 	db	104	;'h'
   175  000615  65                 	db	101	;'e'
   176  000616  72                 	db	114	;'r'
   177  000617  00                 	db	0
   178  000618                     STR_1:
   179  000618  41                 	db	65	;'A'
   180  000619  62                 	db	98	;'b'
   181  00061A  61                 	db	97	;'a'
   182  00061B  73                 	db	115	;'s'
   183  00061C  74                 	db	116	;'t'
   184  00061D  65                 	db	101	;'e'
   185  00061E  63                 	db	99	;'c'
   186  00061F  69                 	db	105	;'i'
   187  000620  6D                 	db	109	;'m'
   188  000621  65                 	db	101	;'e'
   189  000622  6E                 	db	110	;'n'
   190  000623  74                 	db	116	;'t'
   191  000624  6F                 	db	111	;'o'
   192  000625  20                 	db	32
   193  000626  64                 	db	100	;'d'
   194  000627  65                 	db	101	;'e'
   195  000628  00                 	db	0
   196  000629                     STR_9:
   197  000629  45                 	db	69	;'E'
   198  00062A  52                 	db	82	;'R'
   199  00062B  52                 	db	82	;'R'
   200  00062C  4F                 	db	79	;'O'
   201  00062D  3A                 	db	58	;':'
   202  00062E  20                 	db	32
   203  00062F  76                 	db	118	;'v'
   204  000630  6F                 	db	111	;'o'
   205  000631  6C                 	db	108	;'l'
   206  000632  20                 	db	32
   207  000633  3E                 	db	62	;'>'
   208  000634  20                 	db	32
   209  000635  4D                 	db	77	;'M'
   210  000636  41                 	db	65	;'A'
   211  000637  58                 	db	88	;'X'
   212  000638  00                 	db	0
   213  000639                     STR_4:
   214  000639  56                 	db	86	;'V'
   215  00063A  61                 	db	97	;'a'
   216  00063B  7A                 	db	122	;'z'
   217  00063C  61                 	db	97	;'a'
   218  00063D  6F                 	db	111	;'o'
   219  00063E  3A                 	db	58	;':'
   220  00063F  20                 	db	32
   221  000640  31                 	db	49	;'1'
   222  000641  2E                 	db	46
   223  000642  35                 	db	53	;'5'
   224  000643  20                 	db	32
   225  000644  4C                 	db	76	;'L'
   226  000645  2F                 	db	47
   227  000646  73                 	db	115	;'s'
   228  000647  00                 	db	0
   229  000648                     STR_27:
   230  000648  45                 	db	69	;'E'
   231  000649  73                 	db	115	;'s'
   232  00064A  76                 	db	118	;'v'
   233  00064B  61                 	db	97	;'a'
   234  00064C  7A                 	db	122	;'z'
   235  00064D  69                 	db	105	;'i'
   236  00064E  61                 	db	97	;'a'
   237  00064F  6E                 	db	110	;'n'
   238  000650  64                 	db	100	;'d'
   239  000651  6F                 	db	111	;'o'
   240  000652  2E                 	db	46
   241  000653  2E                 	db	46
   242  000654  2E                 	db	46
   243  000655  00                 	db	0
   244  000656                     STR_23:
   245  000656  45                 	db	69	;'E'
   246  000657  52                 	db	82	;'R'
   247  000658  52                 	db	82	;'R'
   248  000659  4F                 	db	79	;'O'
   249  00065A  3A                 	db	58	;':'
   250  00065B  20                 	db	32
   251  00065C  76                 	db	118	;'v'
   252  00065D  6F                 	db	111	;'o'
   253  00065E  6C                 	db	108	;'l'
   254  00065F  20                 	db	32
   255  000660  3C                 	db	60	;'<'
   256  000661  20                 	db	32
   257  000662  30                 	db	48	;'0'
   258  000663  00                 	db	0
   259  000664                     STR_16:
   260  000664  20                 	db	32
   261  000665  20                 	db	32
   262  000666  20                 	db	32
   263  000667  52                 	db	82	;'R'
   264  000668  42                 	db	66	;'B'
   265  000669  31                 	db	49	;'1'
   266  00066A  2D                 	db	45
   267  00066B  56                 	db	86	;'V'
   268  00066C  6F                 	db	111	;'o'
   269  00066D  6C                 	db	108	;'l'
   270  00066E  74                 	db	116	;'t'
   271  00066F  61                 	db	97	;'a'
   272  000670  72                 	db	114	;'r'
   273  000671  00                 	db	0
   274  000672                     STR_3:
   275  000672  56                 	db	86	;'V'
   276  000673  6F                 	db	111	;'o'
   277  000674  6C                 	db	108	;'l'
   278  000675  20                 	db	32
   279  000676  6D                 	db	109	;'m'
   280  000677  61                 	db	97	;'a'
   281  000678  78                 	db	120	;'x'
   282  000679  20                 	db	32
   283  00067A  3D                 	db	61	;'='
   284  00067B  20                 	db	32
   285  00067C  37                 	db	55	;'7'
   286  00067D  30                 	db	48	;'0'
   287  00067E  4C                 	db	76	;'L'
   288  00067F  00                 	db	0
   289  000680                     STR_15:
   290  000680  20                 	db	32
   291  000681  20                 	db	32
   292  000682  20                 	db	32
   293  000683  20                 	db	32
   294  000684  53                 	db	83	;'S'
   295  000685  55                 	db	85	;'U'
   296  000686  43                 	db	67	;'C'
   297  000687  45                 	db	69	;'E'
   298  000688  53                 	db	83	;'S'
   299  000689  53                 	db	83	;'S'
   300  00068A  4F                 	db	79	;'O'
   301  00068B  21                 	db	33
   302  00068C  00                 	db	0
   303  00068D                     STR_13:
   304  00068D  45                 	db	69	;'E'
   305  00068E  6E                 	db	110	;'n'
   306  00068F  63                 	db	99	;'c'
   307  000690  68                 	db	104	;'h'
   308  000691  65                 	db	101	;'e'
   309  000692  6E                 	db	110	;'n'
   310  000693  64                 	db	100	;'d'
   311  000694  6F                 	db	111	;'o'
   312  000695  2E                 	db	46
   313  000696  2E                 	db	46
   314  000697  2E                 	db	46
   315  000698  00                 	db	0
   316  000699                     STR_6:
   317  000699  52                 	db	82	;'R'
   318  00069A  42                 	db	66	;'B'
   319  00069B  35                 	db	53	;'5'
   320  00069C  2D                 	db	45
   321  00069D  52                 	db	82	;'R'
   322  00069E  65                 	db	101	;'e'
   323  00069F  74                 	db	116	;'t'
   324  0006A0  69                 	db	105	;'i'
   325  0006A1  72                 	db	114	;'r'
   326  0006A2  61                 	db	97	;'a'
   327  0006A3  72                 	db	114	;'r'
   328  0006A4  00                 	db	0
   329  0006A5                     STR_7:
   330  0006A5  51                 	db	81	;'Q'
   331  0006A6  75                 	db	117	;'u'
   332  0006A7  61                 	db	97	;'a'
   333  0006A8  6E                 	db	110	;'n'
   334  0006A9  74                 	db	116	;'t'
   335  0006AA  28                 	db	40
   336  0006AB  4C                 	db	76	;'L'
   337  0006AC  29                 	db	41
   338  0006AD  3A                 	db	58	;':'
   339  0006AE  20                 	db	32
   340  0006AF  00                 	db	0
   341  0006B0                     STR_8:
   342  0006B0  52                 	db	82	;'R'
   343  0006B1  42                 	db	66	;'B'
   344  0006B2  31                 	db	49	;'1'
   345  0006B3  2D                 	db	45
   346  0006B4  76                 	db	118	;'v'
   347  0006B5  6F                 	db	111	;'o'
   348  0006B6  6C                 	db	108	;'l'
   349  0006B7  74                 	db	116	;'t'
   350  0006B8  61                 	db	97	;'a'
   351  0006B9  72                 	db	114	;'r'
   352  0006BA  00                 	db	0
   353  0006BB                     STR_2:
   354  0006BB  20                 	db	32
   355  0006BC  20                 	db	32
   356  0006BD  20                 	db	32
   357  0006BE  20                 	db	32
   358  0006BF  20                 	db	32
   359  0006C0  20                 	db	32
   360  0006C1  61                 	db	97	;'a'
   361  0006C2  67                 	db	103	;'g'
   362  0006C3  75                 	db	117	;'u'
   363  0006C4  61                 	db	97	;'a'
   364  0006C5  00                 	db	0
   365  0006C6                     STR_14:
   366  0006C6  41                 	db	65	;'A'
   367  0006C7  67                 	db	103	;'g'
   368  0006C8  75                 	db	117	;'u'
   369  0006C9  61                 	db	97	;'a'
   370  0006CA  72                 	db	114	;'r'
   371  0006CB  64                 	db	100	;'d'
   372  0006CC  65                 	db	101	;'e'
   373  0006CD  21                 	db	33
   374  0006CE  00                 	db	0
   375  0006CF                     STR_18:
   376  0006CF  41                 	db	65	;'A'
   377  0006D0  74                 	db	116	;'t'
   378  0006D1  75                 	db	117	;'u'
   379  0006D2  61                 	db	97	;'a'
   380  0006D3  6C                 	db	108	;'l'
   381  0006D4  3A                 	db	58	;':'
   382  0006D5  20                 	db	32
   383  0006D6  00                 	db	0
   384  0006D7                     STR_11:
   385  0006D7  25                 	db	37
   386  0006D8  2E                 	db	46
   387  0006D9  31                 	db	49	;'1'
   388  0006DA  66                 	db	102	;'f'
   389  0006DB  00                 	db	0
   390  0006DC                     STR_31:
   391  0006DC  49                 	db	73	;'I'
   392  0006DD  4E                 	db	78	;'N'
   393  0006DE  46                 	db	70	;'F'
   394  0006DF  00                 	db	0
   395  0006E0                     STR_35:
   396  0006E0  4E                 	db	78	;'N'
   397  0006E1  41                 	db	65	;'A'
   398  0006E2  4E                 	db	78	;'N'
   399  0006E3  00                 	db	0
   400  0006E4                     STR_32:
   401  0006E4  69                 	db	105	;'i'
   402  0006E5  6E                 	db	110	;'n'
   403  0006E6  66                 	db	102	;'f'
   404  0006E7  00                 	db	0
   405  0006E8                     STR_36:
   406  0006E8  6E                 	db	110	;'n'
   407  0006E9  61                 	db	97	;'a'
   408  0006EA  6E                 	db	110	;'n'
   409  0006EB  00                 	db	0
   410  0006EC                     STR_39:
   411  0006EC  6C                 	db	108	;'l'
   412  0006ED  66                 	db	102	;'f'
   413  0006EE  00                 	db	0
   414  0006EF                     STR_12:
   415  0006EF  20                 	db	32
   416  0006F0  4C                 	db	76	;'L'
   417  0006F1  00                 	db	0
   418  0006F2  00                 	db	0	; dummy byte at the end
   419  0000                     
   420                           ; #config settings
   421                           
   422                           	psect	cinit
   423  003CFA                     __pcinit:
   424                           	callstack 0
   425  003CFA                     start_initialization:
   426                           	callstack 0
   427  003CFA                     __initialization:
   428                           	callstack 0
   429                           
   430                           ; Initialize objects allocated to BANK1 (40 bytes)
   431                           ; load TBLPTR registers with __pidataBANK1
   432  003CFA  0E36               	movlw	low __pidataBANK1
   433  003CFC  6EF6               	movwf	tblptrl,c
   434  003CFE  0E41               	movlw	high __pidataBANK1
   435  003D00  6EF7               	movwf	tblptrh,c
   436  003D02  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   437  003D04  6EF8               	movwf	tblptru,c
   438  003D06  EE01  F050         	lfsr	0,__pdataBANK1
   439  003D0A  EE10 F028          	lfsr	1,40
   440  003D0E                     copy_data0:
   441  003D0E  0009               	tblrd		*+
   442  003D10  CFF5 FFEE          	movff	tablat,postinc0
   443  003D14  50E5               	movf	postdec1,w,c
   444  003D16  50E1               	movf	fsr1l,w,c
   445  003D18  E1FA               	bnz	copy_data0
   446                           
   447                           ; Initialize objects allocated to BANK0 (10 bytes)
   448                           ; load TBLPTR registers with __pidataBANK0
   449  003D1A  0E98               	movlw	low __pidataBANK0
   450  003D1C  6EF6               	movwf	tblptrl,c
   451  003D1E  0E41               	movlw	high __pidataBANK0
   452  003D20  6EF7               	movwf	tblptrh,c
   453  003D22  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   454  003D24  6EF8               	movwf	tblptru,c
   455  003D26  EE00  F0EF         	lfsr	0,__pdataBANK0
   456  003D2A  EE10 F00A          	lfsr	1,10
   457  003D2E                     copy_data1:
   458  003D2E  0009               	tblrd		*+
   459  003D30  CFF5 FFEE          	movff	tablat,postinc0
   460  003D34  50E5               	movf	postdec1,w,c
   461  003D36  50E1               	movf	fsr1l,w,c
   462  003D38  E1FA               	bnz	copy_data1
   463                           
   464                           ; Clear objects allocated to BANK1 (80 bytes)
   465  003D3A  EE01  F000         	lfsr	0,__pbssBANK1
   466  003D3E  0E50               	movlw	80
   467  003D40                     clear_0:
   468  003D40  6AEE               	clrf	postinc0,c
   469  003D42  06E8               	decf	wreg,f,c
   470  003D44  E1FD               	bnz	clear_0
   471                           
   472                           ; Clear objects allocated to BANK0 (22 bytes)
   473  003D46  EE00  F0D9         	lfsr	0,__pbssBANK0
   474  003D4A  0E16               	movlw	22
   475  003D4C                     clear_1:
   476  003D4C  6AEE               	clrf	postinc0,c
   477  003D4E  06E8               	decf	wreg,f,c
   478  003D50  E1FD               	bnz	clear_1
   479  003D52                     end_of_initialization:
   480                           	callstack 0
   481  003D52                     __end_of__initialization:
   482                           	callstack 0
   483  003D52  0E00               	movlw	low (__Lmediumconst shr (0+16))
   484  003D54  6EF8               	movwf	tblptru,c
   485  003D56  0100               	movlb	0
   486  003D58  EF00  F017         	goto	_main	;jump to C main() function
   487                           
   488                           	psect	bssBANK0
   489  0000D9                     __pbssBANK0:
   490                           	callstack 0
   491  0000D9                     floorf@F524:
   492                           	callstack 0
   493  0000D9                     	ds	4
   494  0000DD                     ___fpclassifyf@F463:
   495                           	callstack 0
   496  0000DD                     	ds	4
   497  0000E1                     _nout:
   498                           	callstack 0
   499  0000E1                     	ds	2
   500  0000E3                     _width:
   501                           	callstack 0
   502  0000E3                     	ds	2
   503  0000E5                     _prec:
   504                           	callstack 0
   505  0000E5                     	ds	2
   506  0000E7                     _flags:
   507                           	callstack 0
   508  0000E7                     	ds	2
   509  0000E9                     _i:
   510                           	callstack 0
   511  0000E9                     	ds	2
   512  0000EB                     _volume:
   513                           	callstack 0
   514  0000EB                     	ds	4
   515                           
   516                           	psect	dataBANK0
   517  0000EF                     __pdataBANK0:
   518                           	callstack 0
   519  0000EF                     _atrasoMax:
   520                           	callstack 0
   521  0000EF                     	ds	2
   522  0000F1                     _atrasoMed:
   523                           	callstack 0
   524  0000F1                     	ds	2
   525  0000F3                     _atrasoMin:
   526                           	callstack 0
   527  0000F3                     	ds	2
   528  0000F5                     _atraso:
   529                           	callstack 0
   530  0000F5                     	ds	2
   531  0000F7                     _atraso_min:
   532                           	callstack 0
   533  0000F7                     	ds	2
   534                           
   535                           	psect	bssBANK1
   536  000100                     __pbssBANK1:
   537                           	callstack 0
   538  000100                     _dbuf:
   539                           	callstack 0
   540  000100                     	ds	80
   541                           
   542                           	psect	dataBANK1
   543  000150                     __pdataBANK1:
   544                           	callstack 0
   545  000150                     esvaziar_tanque@F342:
   546                           	callstack 0
   547  000150                     	ds	20
   548  000164                     encher_tanque@F355:
   549                           	callstack 0
   550  000164                     	ds	20
   551                           
   552                           	psect	cstackBANK0
   553  000080                     __pcstackBANK0:
   554                           	callstack 0
   555  000080                     _vfpfcnvrt$763:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x0
   559  000080                     	ds	2
   560  000082                     _vfpfcnvrt$767:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x2
   564  000082                     	ds	2
   565  000084                     vfpfcnvrt@f:
   566                           	callstack 0
   567                           
   568                           ; 4 bytes @ 0x4
   569  000084                     	ds	4
   570  000088                     vfpfcnvrt@ct:
   571                           	callstack 0
   572                           
   573                           ; 3 bytes @ 0x8
   574  000088                     	ds	3
   575  00008B                     vfpfcnvrt@c:
   576                           	callstack 0
   577                           
   578                           ; 1 bytes @ 0xB
   579  00008B                     	ds	1
   580  00008C                     ?_vfprintf:
   581                           	callstack 0
   582  00008C                     vfprintf@fp:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0xC
   586  00008C                     	ds	2
   587  00008E                     vfprintf@fmt:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0xE
   591  00008E                     	ds	2
   592  000090                     vfprintf@ap:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x10
   596  000090                     	ds	2
   597  000092                     ?_sprintf:
   598                           	callstack 0
   599  000092                     sprintf@s:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x12
   603  000092                     	ds	2
   604  000094                     sprintf@fmt:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x14
   608  000094                     	ds	8
   609  00009C                     sprintf@ap:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x1C
   613  00009C                     	ds	2
   614  00009E                     sprintf@f:
   615                           	callstack 0
   616                           
   617                           ; 6 bytes @ 0x1E
   618  00009E                     	ds	6
   619  0000A4                     ??_encher_tanque:
   620  0000A4                     ver_quantidade@y:
   621                           	callstack 0
   622  0000A4                     esvaziar_tanque@numeros:
   623                           	callstack 0
   624                           
   625                           ; 20 bytes @ 0x24
   626  0000A4                     	ds	4
   627  0000A8                     encher_tanque@numeros:
   628                           	callstack 0
   629                           
   630                           ; 20 bytes @ 0x28
   631  0000A8                     	ds	4
   632  0000AC                     ver_quantidade@i:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x2C
   636  0000AC                     	ds	12
   637  0000B8                     esvaziar_tanque@y:
   638                           	callstack 0
   639                           
   640                           ; 8 bytes @ 0x38
   641  0000B8                     	ds	4
   642  0000BC                     encher_tanque@y:
   643                           	callstack 0
   644                           
   645                           ; 8 bytes @ 0x3C
   646  0000BC                     	ds	4
   647  0000C0                     esvaziar_tanque@tempo:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x40
   651  0000C0                     	ds	2
   652  0000C2                     esvaziar_tanque@decremento:
   653                           	callstack 0
   654                           
   655                           ; 4 bytes @ 0x42
   656  0000C2                     	ds	2
   657  0000C4                     _encher_tanque$1185:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x44
   661  0000C4                     	ds	2
   662  0000C6                     encher_tanque@potencia:
   663                           	callstack 0
   664  0000C6                     esvaziar_tanque@i:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x46
   668  0000C6                     	ds	2
   669  0000C8                     encher_tanque@i_132:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x48
   673  0000C8                     	ds	2
   674  0000CA                     encher_tanque@num:
   675                           	callstack 0
   676                           
   677                           ; 4 bytes @ 0x4A
   678  0000CA                     	ds	4
   679  0000CE                     encher_tanque@incremento:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x4E
   683  0000CE                     	ds	2
   684  0000D0                     encher_tanque@t1:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x50
   688  0000D0                     	ds	2
   689  0000D2                     encher_tanque@tmp:
   690                           	callstack 0
   691                           
   692                           ; 1 bytes @ 0x52
   693  0000D2                     	ds	1
   694  0000D3                     encher_tanque@tempo:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x53
   698  0000D3                     	ds	2
   699  0000D5                     encher_tanque@i:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x55
   703  0000D5                     	ds	2
   704  0000D7                     encher_tanque@t2:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x57
   708  0000D7                     	ds	2
   709                           
   710                           	psect	cstackCOMRAM
   711  000001                     __pcstackCOMRAM:
   712                           	callstack 0
   713  000001                     ?_strlen:
   714                           	callstack 0
   715  000001                     ?___fpclassifyf:
   716                           	callstack 0
   717  000001                     ?_isupper:
   718                           	callstack 0
   719  000001                     ?_isdigit:
   720                           	callstack 0
   721  000001                     ?_strncmp:
   722                           	callstack 0
   723  000001                     ?_isspace:
   724                           	callstack 0
   725  000001                     ?___wmul:
   726                           	callstack 0
   727  000001                     ?___awmod:
   728                           	callstack 0
   729  000001                     ?___lwdiv:
   730                           	callstack 0
   731  000001                     ?___fldiv:
   732                           	callstack 0
   733  000001                     ?___flmul:
   734                           	callstack 0
   735  000001                     ?___flneg:
   736                           	callstack 0
   737  000001                     ?___xxtofl:
   738                           	callstack 0
   739  000001                     lcd_wr@val:
   740                           	callstack 0
   741  000001                     atraso_ms@t:
   742                           	callstack 0
   743  000001                     ___wmul@multiplier:
   744                           	callstack 0
   745  000001                     ___awmod@dividend:
   746                           	callstack 0
   747  000001                     ___lwdiv@dividend:
   748                           	callstack 0
   749  000001                     isdigit@c:
   750                           	callstack 0
   751  000001                     isspace@c:
   752                           	callstack 0
   753  000001                     isupper@c:
   754                           	callstack 0
   755  000001                     fputc@c:
   756                           	callstack 0
   757  000001                     strcpy@dest:
   758                           	callstack 0
   759  000001                     strlen@s:
   760                           	callstack 0
   761  000001                     strncmp@_l:
   762                           	callstack 0
   763  000001                     ___fleq@ff1:
   764                           	callstack 0
   765  000001                     ___flneg@f1:
   766                           	callstack 0
   767  000001                     ___fldiv@b:
   768                           	callstack 0
   769  000001                     ___flmul@b:
   770                           	callstack 0
   771  000001                     ___xxtofl@val:
   772                           	callstack 0
   773  000001                     ___fpclassifyf@x:
   774                           	callstack 0
   775                           
   776                           ; 4 bytes @ 0x0
   777  000001                     	ds	2
   778  000003                     ??_isupper:
   779  000003                     ??_isdigit:
   780  000003                     ??_isspace:
   781  000003                     atraso_ms@i:
   782                           	callstack 0
   783  000003                     ___wmul@multiplicand:
   784                           	callstack 0
   785  000003                     ___awmod@divisor:
   786                           	callstack 0
   787  000003                     ___lwdiv@divisor:
   788                           	callstack 0
   789  000003                     fputc@fp:
   790                           	callstack 0
   791  000003                     strcpy@src:
   792                           	callstack 0
   793  000003                     strlen@a:
   794                           	callstack 0
   795  000003                     strncmp@_r:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x2
   799  000003                     	ds	2
   800  000005                     ??_fputc:
   801  000005                     ??___fpclassifyf:
   802  000005                     ??_strcpy:
   803  000005                     ??___xxtofl:
   804  000005                     atraso_ms@j:
   805                           	callstack 0
   806  000005                     ___awmod@counter:
   807                           	callstack 0
   808  000005                     ___wmul@product:
   809                           	callstack 0
   810  000005                     ___lwdiv@quotient:
   811                           	callstack 0
   812  000005                     strncmp@n:
   813                           	callstack 0
   814  000005                     ___fleq@ff2:
   815                           	callstack 0
   816  000005                     ___fldiv@a:
   817                           	callstack 0
   818  000005                     ___flmul@a:
   819                           	callstack 0
   820                           
   821                           ; 4 bytes @ 0x4
   822  000005                     	ds	1
   823  000006                     atraso_ms@k:
   824                           	callstack 0
   825  000006                     ___awmod@sign:
   826                           	callstack 0
   827                           
   828                           ; 1 bytes @ 0x5
   829  000006                     	ds	1
   830  000007                     ??_strncmp:
   831  000007                     ?_tolower:
   832                           	callstack 0
   833  000007                     ?___awdiv:
   834                           	callstack 0
   835  000007                     lcd_cmd@val:
   836                           	callstack 0
   837  000007                     lcd_dat@val:
   838                           	callstack 0
   839  000007                     ___lwdiv@counter:
   840                           	callstack 0
   841  000007                     _isspace$832:
   842                           	callstack 0
   843  000007                     tc_tecla@timeout:
   844                           	callstack 0
   845  000007                     ___awdiv@dividend:
   846                           	callstack 0
   847  000007                     strcpy@s:
   848                           	callstack 0
   849  000007                     tolower@c:
   850                           	callstack 0
   851                           
   852                           ; 2 bytes @ 0x6
   853  000007                     	ds	1
   854  000008                     ??_pwmSet1:
   855  000008                     ?_atoi:
   856                           	callstack 0
   857  000008                     lcd_str@str:
   858                           	callstack 0
   859  000008                     atoi@s:
   860                           	callstack 0
   861  000008                     strncmp@l:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x7
   865  000008                     	ds	1
   866  000009                     ??___fldiv:
   867  000009                     ??___flmul:
   868  000009                     ??_tolower:
   869  000009                     ??___fleq:
   870  000009                     ___xxtofl@sign:
   871                           	callstack 0
   872  000009                     tc_tecla@to:
   873                           	callstack 0
   874  000009                     ___awdiv@divisor:
   875                           	callstack 0
   876  000009                     ___fpclassifyf@e:
   877                           	callstack 0
   878  000009                     strcpy@d:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x8
   882  000009                     	ds	1
   883  00000A                     ??_atoi:
   884  00000A                     ??_lcd_str:
   885  00000A                     pwmSet1@porcento:
   886                           	callstack 0
   887  00000A                     ___xxtofl@exp:
   888                           	callstack 0
   889  00000A                     fputs@s:
   890                           	callstack 0
   891  00000A                     strncmp@r:
   892                           	callstack 0
   893                           
   894                           ; 2 bytes @ 0x9
   895  00000A                     	ds	1
   896  00000B                     tc_tecla@tmp:
   897                           	callstack 0
   898  00000B                     ___awdiv@counter:
   899                           	callstack 0
   900  00000B                     pwmSet1@val:
   901                           	callstack 0
   902  00000B                     ___xxtofl@arg:
   903                           	callstack 0
   904  00000B                     ___fpclassifyf@u:
   905                           	callstack 0
   906                           
   907                           ; 4 bytes @ 0xA
   908  00000B                     	ds	1
   909  00000C                     lcd_str@i:
   910                           	callstack 0
   911  00000C                     tc_tecla@ret:
   912                           	callstack 0
   913  00000C                     ___awdiv@sign:
   914                           	callstack 0
   915  00000C                     fputs@fp:
   916                           	callstack 0
   917                           
   918                           ; 2 bytes @ 0xB
   919  00000C                     	ds	1
   920  00000D                     tc_tecla@i:
   921                           	callstack 0
   922  00000D                     ___flmul@sign:
   923                           	callstack 0
   924  00000D                     ___awdiv@quotient:
   925                           	callstack 0
   926  00000D                     _tolower$896:
   927                           	callstack 0
   928  00000D                     ___fldiv@rem:
   929                           	callstack 0
   930                           
   931                           ; 4 bytes @ 0xC
   932  00000D                     	ds	1
   933  00000E                     fputs@c:
   934                           	callstack 0
   935  00000E                     atoi@neg:
   936                           	callstack 0
   937  00000E                     ___flmul@grs:
   938                           	callstack 0
   939                           
   940                           ; 4 bytes @ 0xD
   941  00000E                     	ds	1
   942  00000F                     ?___fladd:
   943                           	callstack 0
   944  00000F                     fputs@i:
   945                           	callstack 0
   946  00000F                     ___fladd@b:
   947                           	callstack 0
   948                           
   949                           ; 4 bytes @ 0xE
   950  00000F                     	ds	1
   951  000010                     _atoi$801:
   952                           	callstack 0
   953                           
   954                           ; 2 bytes @ 0xF
   955  000010                     	ds	1
   956  000011                     ?_pad:
   957                           	callstack 0
   958  000011                     ___fldiv@sign:
   959                           	callstack 0
   960  000011                     pad@fp:
   961                           	callstack 0
   962                           
   963                           ; 2 bytes @ 0x10
   964  000011                     	ds	1
   965  000012                     ___flmul@aexp:
   966                           	callstack 0
   967  000012                     ___fldiv@new_exp:
   968                           	callstack 0
   969  000012                     _atoi$803:
   970                           	callstack 0
   971                           
   972                           ; 2 bytes @ 0x11
   973  000012                     	ds	1
   974  000013                     ___flmul@bexp:
   975                           	callstack 0
   976  000013                     pad@buf:
   977                           	callstack 0
   978  000013                     ___fladd@a:
   979                           	callstack 0
   980                           
   981                           ; 4 bytes @ 0x12
   982  000013                     	ds	1
   983  000014                     _atoi$802:
   984                           	callstack 0
   985  000014                     ___fldiv@grs:
   986                           	callstack 0
   987  000014                     ___flmul@prod:
   988                           	callstack 0
   989                           
   990                           ; 4 bytes @ 0x13
   991  000014                     	ds	1
   992  000015                     pad@p:
   993                           	callstack 0
   994  000015                     atoi@n:
   995                           	callstack 0
   996                           
   997                           ; 2 bytes @ 0x14
   998  000015                     	ds	2
   999  000017                     ??___fladd:
  1000  000017                     ??_pad:
  1001                           
  1002                           ; 1 bytes @ 0x16
  1003  000017                     	ds	1
  1004  000018                     ___fldiv@bexp:
  1005                           	callstack 0
  1006  000018                     ___flmul@temp:
  1007                           	callstack 0
  1008  000018                     pad@i:
  1009                           	callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x17
  1012  000018                     	ds	1
  1013  000019                     ___fldiv@aexp:
  1014                           	callstack 0
  1015                           
  1016                           ; 1 bytes @ 0x18
  1017  000019                     	ds	1
  1018  00001A                     ?_floorf:
  1019                           	callstack 0
  1020  00001A                     ?___fltol:
  1021                           	callstack 0
  1022  00001A                     pad@w:
  1023                           	callstack 0
  1024  00001A                     ___fltol@f1:
  1025                           	callstack 0
  1026  00001A                     floorf@x:
  1027                           	callstack 0
  1028                           
  1029                           ; 4 bytes @ 0x19
  1030  00001A                     	ds	1
  1031  00001B                     ___fladd@signs:
  1032                           	callstack 0
  1033                           
  1034                           ; 1 bytes @ 0x1A
  1035  00001B                     	ds	1
  1036  00001C                     ___fladd@aexp:
  1037                           	callstack 0
  1038                           
  1039                           ; 1 bytes @ 0x1B
  1040  00001C                     	ds	1
  1041  00001D                     ___fladd@bexp:
  1042                           	callstack 0
  1043                           
  1044                           ; 1 bytes @ 0x1C
  1045  00001D                     	ds	1
  1046  00001E                     ??_floorf:
  1047  00001E                     ??___fltol:
  1048  00001E                     ___fladd@grs:
  1049                           	callstack 0
  1050                           
  1051                           ; 1 bytes @ 0x1D
  1052  00001E                     	ds	1
  1053  00001F                     ?___flsub:
  1054                           	callstack 0
  1055  00001F                     ___flge@ff1:
  1056                           	callstack 0
  1057  00001F                     ___flsub@b:
  1058                           	callstack 0
  1059                           
  1060                           ; 4 bytes @ 0x1E
  1061  00001F                     	ds	3
  1062  000022                     ___fltol@sign1:
  1063                           	callstack 0
  1064                           
  1065                           ; 1 bytes @ 0x21
  1066  000022                     	ds	1
  1067  000023                     ___fltol@exp1:
  1068                           	callstack 0
  1069  000023                     ___flge@ff2:
  1070                           	callstack 0
  1071  000023                     ___flsub@a:
  1072                           	callstack 0
  1073                           
  1074                           ; 4 bytes @ 0x22
  1075  000023                     	ds	1
  1076  000024                     floorf@m:
  1077                           	callstack 0
  1078                           
  1079                           ; 4 bytes @ 0x23
  1080  000024                     	ds	3
  1081  000027                     ??___flge:
  1082                           
  1083                           ; 1 bytes @ 0x26
  1084  000027                     	ds	1
  1085  000028                     floorf@e:
  1086                           	callstack 0
  1087                           
  1088                           ; 2 bytes @ 0x27
  1089  000028                     	ds	2
  1090  00002A                     floorf@u:
  1091                           	callstack 0
  1092                           
  1093                           ; 4 bytes @ 0x29
  1094  00002A                     	ds	4
  1095  00002E                     ?_efgtoa:
  1096                           	callstack 0
  1097  00002E                     efgtoa@fp:
  1098                           	callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x2D
  1101  00002E                     	ds	2
  1102  000030                     efgtoa@f:
  1103                           	callstack 0
  1104                           
  1105                           ; 4 bytes @ 0x2F
  1106  000030                     	ds	4
  1107  000034                     efgtoa@c:
  1108                           	callstack 0
  1109                           
  1110                           ; 1 bytes @ 0x33
  1111  000034                     	ds	1
  1112  000035                     ??_efgtoa:
  1113                           
  1114                           ; 1 bytes @ 0x34
  1115  000035                     	ds	5
  1116  00003A                     efgtoa@ou:
  1117                           	callstack 0
  1118                           
  1119                           ; 4 bytes @ 0x39
  1120  00003A                     	ds	4
  1121  00003E                     _efgtoa$737:
  1122                           	callstack 0
  1123                           
  1124                           ; 2 bytes @ 0x3D
  1125  00003E                     	ds	2
  1126  000040                     _efgtoa$738:
  1127                           	callstack 0
  1128                           
  1129                           ; 2 bytes @ 0x3F
  1130  000040                     	ds	2
  1131  000042                     _efgtoa$743:
  1132                           	callstack 0
  1133                           
  1134                           ; 2 bytes @ 0x41
  1135  000042                     	ds	2
  1136  000044                     _efgtoa$747:
  1137                           	callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x43
  1140  000044                     	ds	2
  1141  000046                     _efgtoa$748:
  1142                           	callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x45
  1145  000046                     	ds	2
  1146  000048                     _efgtoa$749:
  1147                           	callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x47
  1150  000048                     	ds	2
  1151  00004A                     efgtoa@t:
  1152                           	callstack 0
  1153                           
  1154                           ; 2 bytes @ 0x49
  1155  00004A                     	ds	2
  1156  00004C                     efgtoa@pp:
  1157                           	callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x4B
  1160  00004C                     	ds	2
  1161  00004E                     efgtoa@m:
  1162                           	callstack 0
  1163                           
  1164                           ; 2 bytes @ 0x4D
  1165  00004E                     	ds	2
  1166  000050                     efgtoa@ne:
  1167                           	callstack 0
  1168                           
  1169                           ; 2 bytes @ 0x4F
  1170  000050                     	ds	2
  1171  000052                     efgtoa@d:
  1172                           	callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x51
  1175  000052                     	ds	2
  1176  000054                     efgtoa@sign:
  1177                           	callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x53
  1180  000054                     	ds	2
  1181  000056                     efgtoa@p:
  1182                           	callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x55
  1185  000056                     	ds	2
  1186  000058                     efgtoa@nmode:
  1187                           	callstack 0
  1188                           
  1189                           ; 1 bytes @ 0x57
  1190  000058                     	ds	1
  1191  000059                     efgtoa@w:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x58
  1195  000059                     	ds	2
  1196  00005B                     efgtoa@mode:
  1197                           	callstack 0
  1198                           
  1199                           ; 1 bytes @ 0x5A
  1200  00005B                     	ds	1
  1201  00005C                     efgtoa@h:
  1202                           	callstack 0
  1203                           
  1204                           ; 4 bytes @ 0x5B
  1205  00005C                     	ds	4
  1206  000060                     efgtoa@l:
  1207                           	callstack 0
  1208                           
  1209                           ; 4 bytes @ 0x5F
  1210  000060                     	ds	4
  1211  000064                     efgtoa@i:
  1212                           	callstack 0
  1213                           
  1214                           ; 2 bytes @ 0x63
  1215  000064                     	ds	2
  1216  000066                     efgtoa@g:
  1217                           	callstack 0
  1218                           
  1219                           ; 4 bytes @ 0x65
  1220  000066                     	ds	4
  1221  00006A                     efgtoa@e:
  1222                           	callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x69
  1225  00006A                     	ds	2
  1226  00006C                     efgtoa@n:
  1227                           	callstack 0
  1228                           
  1229                           ; 2 bytes @ 0x6B
  1230  00006C                     	ds	2
  1231  00006E                     efgtoa@u:
  1232                           	callstack 0
  1233                           
  1234                           ; 4 bytes @ 0x6D
  1235  00006E                     	ds	4
  1236  000072                     ?_vfpfcnvrt:
  1237                           	callstack 0
  1238  000072                     vfpfcnvrt@fp:
  1239                           	callstack 0
  1240                           
  1241                           ; 2 bytes @ 0x71
  1242  000072                     	ds	2
  1243  000074                     vfpfcnvrt@fmt:
  1244                           	callstack 0
  1245                           
  1246                           ; 2 bytes @ 0x73
  1247  000074                     	ds	2
  1248  000076                     vfpfcnvrt@ap:
  1249                           	callstack 0
  1250                           
  1251                           ; 2 bytes @ 0x75
  1252  000076                     	ds	2
  1253  000078                     ??_vfpfcnvrt:
  1254                           
  1255                           ; 1 bytes @ 0x77
  1256  000078                     	ds	4
  1257  00007C                     vfprintf@cfmt:
  1258                           	callstack 0
  1259                           
  1260                           ; 2 bytes @ 0x7B
  1261  00007C                     	ds	2
  1262  00007E                     encher_tanque@vol:
  1263                           	callstack 0
  1264  00007E                     ver_quantidade@vol:
  1265                           	callstack 0
  1266  00007E                     esvaziar_tanque@vol:
  1267                           	callstack 0
  1268                           
  1269                           ; 2 bytes @ 0x7D
  1270  00007E                     	ds	2
  1271  000080                     
  1272                           ; 1 bytes @ 0x7F
  1273 ;;
  1274 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1275 ;;
  1276 ;; *************** function _main *****************
  1277 ;; Defined at:
  1278 ;;		line 16 in file "main.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;		None
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;  flag            2    0        int 
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      void 
  1285 ;; Registers used:
  1286 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1292 ;;      Params:         0       0       0       0       0       0       0
  1293 ;;      Locals:         0       2       0       0       0       0       0
  1294 ;;      Temps:          0       0       0       0       0       0       0
  1295 ;;      Totals:         0       2       0       0       0       0       0
  1296 ;;Total ram usage:        2 bytes
  1297 ;; Hardware stack levels required when called:    9
  1298 ;; This function calls:
  1299 ;;		_atraso_ms
  1300 ;;		_encher_tanque
  1301 ;;		_esvaziar_tanque
  1302 ;;		_lcd_cmd
  1303 ;;		_lcd_init
  1304 ;;		_lcd_str
  1305 ;;		_ver_quantidade
  1306 ;; This function is called by:
  1307 ;;		Startup code after reset
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311                           	psect	text0
  1312  002E00                     __ptext0:
  1313                           	callstack 0
  1314  002E00                     _main:
  1315                           	callstack 22
  1316  002E00                     
  1317                           ;main.c: 18:     (*(volatile __near unsigned char*)0xFC1) = 0x06;
  1318  002E00  0E06               	movlw	6
  1319  002E02  6EC1               	movwf	193,c	;volatile
  1320                           
  1321                           ;main.c: 19:     (*(volatile __near unsigned char*)0xF93) = 0x01;
  1322  002E04  0E01               	movlw	1
  1323  002E06  6E93               	movwf	147,c	;volatile
  1324                           
  1325                           ;main.c: 20:     (*(volatile __near unsigned char*)0xF95) = 0x00;
  1326  002E08  0E00               	movlw	0
  1327  002E0A  6E95               	movwf	149,c	;volatile
  1328                           
  1329                           ;main.c: 21:     (*(volatile __near unsigned char*)0xF96) = 0x00;
  1330  002E0C  0E00               	movlw	0
  1331  002E0E  6E96               	movwf	150,c	;volatile
  1332  002E10                     
  1333                           ;main.c: 23:     lcd_init();
  1334  002E10  EC0F  F01F         	call	_lcd_init	;wreg free
  1335  002E14                     
  1336                           ;main.c: 26:     lcd_cmd(0x01);
  1337  002E14  0E01               	movlw	1
  1338  002E16  EC86  F020         	call	_lcd_cmd
  1339  002E1A                     
  1340                           ;main.c: 27:     lcd_cmd(0x80);
  1341  002E1A  0E80               	movlw	128
  1342  002E1C  EC86  F020         	call	_lcd_cmd
  1343  002E20                     
  1344                           ;main.c: 28:     lcd_str("Abastecimento de");
  1345  002E20  0E18               	movlw	low STR_1
  1346  002E22  6E08               	movwf	lcd_str@str^0,c
  1347  002E24  0E06               	movlw	high STR_1
  1348  002E26  6E09               	movwf	(lcd_str@str+1)^0,c
  1349  002E28  EC9F  F01D         	call	_lcd_str	;wreg free
  1350  002E2C                     
  1351                           ;main.c: 29:     lcd_cmd(0xC0);
  1352  002E2C  0EC0               	movlw	192
  1353  002E2E  EC86  F020         	call	_lcd_cmd
  1354  002E32                     
  1355                           ;main.c: 30:     lcd_str("      agua");
  1356  002E32  0EBB               	movlw	low STR_2
  1357  002E34  6E08               	movwf	lcd_str@str^0,c
  1358  002E36  0E06               	movlw	high STR_2
  1359  002E38  6E09               	movwf	(lcd_str@str+1)^0,c
  1360  002E3A  EC9F  F01D         	call	_lcd_str	;wreg free
  1361  002E3E                     
  1362                           ;main.c: 31:     atraso_ms(atrasoMin);
  1363  002E3E  0E00               	movlw	0
  1364  002E40  6E02               	movwf	(atraso_ms@t+1)^0,c
  1365  002E42  0E14               	movlw	20
  1366  002E44  6E01               	movwf	atraso_ms@t^0,c
  1367  002E46  EC4B  F01E         	call	_atraso_ms	;wreg free
  1368  002E4A                     
  1369                           ;main.c: 32:     lcd_cmd(0x01);
  1370  002E4A  0E01               	movlw	1
  1371  002E4C  EC86  F020         	call	_lcd_cmd
  1372  002E50                     
  1373                           ;main.c: 35:     lcd_cmd(0x80);
  1374  002E50  0E80               	movlw	128
  1375  002E52  EC86  F020         	call	_lcd_cmd
  1376  002E56                     
  1377                           ;main.c: 36:     lcd_str("Vol max = 70L");
  1378  002E56  0E72               	movlw	low STR_3
  1379  002E58  6E08               	movwf	lcd_str@str^0,c
  1380  002E5A  0E06               	movlw	high STR_3
  1381  002E5C  6E09               	movwf	(lcd_str@str+1)^0,c
  1382  002E5E  EC9F  F01D         	call	_lcd_str	;wreg free
  1383  002E62                     
  1384                           ;main.c: 37:     lcd_cmd(0xC0);
  1385  002E62  0EC0               	movlw	192
  1386  002E64  EC86  F020         	call	_lcd_cmd
  1387  002E68                     
  1388                           ;main.c: 38:     lcd_str("Vazao: 1.5 L/s");
  1389  002E68  0E39               	movlw	low STR_4
  1390  002E6A  6E08               	movwf	lcd_str@str^0,c
  1391  002E6C  0E06               	movlw	high STR_4
  1392  002E6E  6E09               	movwf	(lcd_str@str+1)^0,c
  1393  002E70  EC9F  F01D         	call	_lcd_str	;wreg free
  1394  002E74                     
  1395                           ;main.c: 39:     atraso_ms(atrasoMin);
  1396  002E74  0E00               	movlw	0
  1397  002E76  6E02               	movwf	(atraso_ms@t+1)^0,c
  1398  002E78  0E14               	movlw	20
  1399  002E7A  6E01               	movwf	atraso_ms@t^0,c
  1400  002E7C  EC4B  F01E         	call	_atraso_ms	;wreg free
  1401  002E80                     
  1402                           ;main.c: 40:     lcd_cmd(0x01);
  1403  002E80  0E01               	movlw	1
  1404  002E82  EC86  F020         	call	_lcd_cmd
  1405  002E86                     l113:
  1406  002E86                     
  1407                           ;main.c: 47:         lcd_cmd(0x01);
  1408  002E86  0E01               	movlw	1
  1409  002E88  EC86  F020         	call	_lcd_cmd
  1410  002E8C                     
  1411                           ;main.c: 48:         lcd_cmd(0x80);
  1412  002E8C  0E80               	movlw	128
  1413  002E8E  EC86  F020         	call	_lcd_cmd
  1414  002E92                     
  1415                           ;main.c: 49:         lcd_str("RB3-Ver RB4-Encher");
  1416  002E92  0E05               	movlw	low STR_5
  1417  002E94  6E08               	movwf	lcd_str@str^0,c
  1418  002E96  0E06               	movlw	high STR_5
  1419  002E98  6E09               	movwf	(lcd_str@str+1)^0,c
  1420  002E9A  EC9F  F01D         	call	_lcd_str	;wreg free
  1421  002E9E                     
  1422                           ;main.c: 50:         lcd_cmd(0xC0);
  1423  002E9E  0EC0               	movlw	192
  1424  002EA0  EC86  F020         	call	_lcd_cmd
  1425  002EA4                     
  1426                           ;main.c: 51:         lcd_str("RB5-Retirar");
  1427  002EA4  0E99               	movlw	low STR_6
  1428  002EA6  6E08               	movwf	lcd_str@str^0,c
  1429  002EA8  0E06               	movlw	high STR_6
  1430  002EAA  6E09               	movwf	(lcd_str@str+1)^0,c
  1431  002EAC  EC9F  F01D         	call	_lcd_str	;wreg free
  1432  002EB0                     
  1433                           ;main.c: 52:         for (i = 0; i < 2; i++) {
  1434  002EB0  0E00               	movlw	0
  1435  002EB2  0100               	movlb	0	; () banked
  1436  002EB4  6FEA               	movwf	(_i+1)& (0+255),b
  1437  002EB6  0E00               	movlw	0
  1438  002EB8  6FE9               	movwf	_i& (0+255),b
  1439  002EBA                     l4791:
  1440                           
  1441                           ; BSR set to: 0
  1442                           ;main.c: 53:             atraso_ms(350);
  1443  002EBA  0E01               	movlw	1
  1444  002EBC  6E02               	movwf	(atraso_ms@t+1)^0,c
  1445  002EBE  0E5E               	movlw	94
  1446  002EC0  6E01               	movwf	atraso_ms@t^0,c
  1447  002EC2  EC4B  F01E         	call	_atraso_ms	;wreg free
  1448                           
  1449                           ;main.c: 54:             lcd_cmd(0x18);
  1450  002EC6  0E18               	movlw	24
  1451  002EC8  EC86  F020         	call	_lcd_cmd
  1452  002ECC                     
  1453                           ;main.c: 55:         }
  1454  002ECC  0100               	movlb	0	; () banked
  1455  002ECE  4BE9               	infsnz	_i& (0+255),f,b
  1456  002ED0  2BEA               	incf	(_i+1)& (0+255),f,b
  1457  002ED2                     
  1458                           ; BSR set to: 0
  1459  002ED2  BFEA               	btfsc	(_i+1)& (0+255),7,b
  1460  002ED4  EF75  F017         	goto	u5631
  1461  002ED8  51EA               	movf	(_i+1)& (0+255),w,b
  1462  002EDA  E109               	bnz	u5630
  1463  002EDC  0E02               	movlw	2
  1464  002EDE  5DE9               	subwf	_i& (0+255),w,b
  1465  002EE0  A0D8               	btfss	status,0,c
  1466  002EE2  EF75  F017         	goto	u5631
  1467  002EE6  EF77  F017         	goto	u5630
  1468  002EEA                     u5631:
  1469  002EEA  EF5D  F017         	goto	l4791
  1470  002EEE                     u5630:
  1471  002EEE                     
  1472                           ; BSR set to: 0
  1473                           ;main.c: 56:         for (i = 0; i < 2; i++) {
  1474  002EEE  0E00               	movlw	0
  1475  002EF0  6FEA               	movwf	(_i+1)& (0+255),b
  1476  002EF2  0E00               	movlw	0
  1477  002EF4  6FE9               	movwf	_i& (0+255),b
  1478  002EF6                     l4803:
  1479                           
  1480                           ; BSR set to: 0
  1481                           ;main.c: 57:             atraso_ms(350);
  1482  002EF6  0E01               	movlw	1
  1483  002EF8  6E02               	movwf	(atraso_ms@t+1)^0,c
  1484  002EFA  0E5E               	movlw	94
  1485  002EFC  6E01               	movwf	atraso_ms@t^0,c
  1486  002EFE  EC4B  F01E         	call	_atraso_ms	;wreg free
  1487                           
  1488                           ;main.c: 58:             lcd_cmd(0x1C);
  1489  002F02  0E1C               	movlw	28
  1490  002F04  EC86  F020         	call	_lcd_cmd
  1491  002F08                     
  1492                           ;main.c: 59:         }
  1493  002F08  0100               	movlb	0	; () banked
  1494  002F0A  4BE9               	infsnz	_i& (0+255),f,b
  1495  002F0C  2BEA               	incf	(_i+1)& (0+255),f,b
  1496  002F0E                     
  1497                           ; BSR set to: 0
  1498  002F0E  BFEA               	btfsc	(_i+1)& (0+255),7,b
  1499  002F10  EF93  F017         	goto	u5641
  1500  002F14  51EA               	movf	(_i+1)& (0+255),w,b
  1501  002F16  E109               	bnz	u5640
  1502  002F18  0E02               	movlw	2
  1503  002F1A  5DE9               	subwf	_i& (0+255),w,b
  1504  002F1C  A0D8               	btfss	status,0,c
  1505  002F1E  EF93  F017         	goto	u5641
  1506  002F22  EF95  F017         	goto	u5640
  1507  002F26                     u5641:
  1508  002F26  EF7B  F017         	goto	l4803
  1509  002F2A                     u5640:
  1510  002F2A                     
  1511                           ; BSR set to: 0
  1512                           ;main.c: 62:         (*(volatile __near unsigned char*)0xF93) = 0xF8;
  1513  002F2A  0EF8               	movlw	248
  1514  002F2C  6E93               	movwf	147,c	;volatile
  1515                           
  1516                           ;main.c: 63:         (*(volatile __near unsigned char*)0xF92) = 0x20;
  1517  002F2E  0E20               	movlw	32
  1518  002F30  6E92               	movwf	146,c	;volatile
  1519                           
  1520                           ;main.c: 64:         (*(volatile __near unsigned char*)0xF93) = 0x3F;
  1521  002F32  0E3F               	movlw	63
  1522  002F34  6E93               	movwf	147,c	;volatile
  1523                           
  1524                           ;main.c: 65:         (*(volatile __near unsigned char*)0xF92) = 0x20;
  1525  002F36  0E20               	movlw	32
  1526  002F38  6E92               	movwf	146,c	;volatile
  1527                           
  1528                           ;main.c: 66:         (*(volatile __near unsigned char*)0xF93) = 0x3F;
  1529  002F3A  0E3F               	movlw	63
  1530  002F3C  6E93               	movwf	147,c	;volatile
  1531                           
  1532                           ;main.c: 67:         (*(volatile __near unsigned char*)0xF96) = 0x00;
  1533  002F3E  0E00               	movlw	0
  1534  002F40  6E96               	movwf	150,c	;volatile
  1535  002F42                     l4811:
  1536                           
  1537                           ;main.c: 79:             if (!((((*(volatile __near unsigned char*)0xF81)) & (1<<1)))) {
  1538  002F42  B281               	btfsc	129,1,c	;volatile
  1539  002F44  EFA6  F017         	goto	u5651
  1540  002F48  EFA8  F017         	goto	u5650
  1541  002F4C                     u5651:
  1542  002F4C  EFAA  F017         	goto	l119
  1543  002F50                     u5650:
  1544  002F50  EF43  F017         	goto	l113
  1545  002F54                     l119:
  1546  002F54  B681               	btfsc	129,3,c	;volatile
  1547  002F56  EFAF  F017         	goto	u5661
  1548  002F5A  EFB1  F017         	goto	u5660
  1549  002F5E                     u5661:
  1550  002F5E  EFB9  F017         	goto	l122
  1551  002F62                     u5660:
  1552  002F62                     
  1553                           ;main.c: 83:                 ver_quantidade(&volume);
  1554  002F62  0EEB               	movlw	low _volume
  1555  002F64  6E7E               	movwf	ver_quantidade@vol^0,c
  1556  002F66  0E00               	movlw	high _volume
  1557  002F68  6E7F               	movwf	(ver_quantidade@vol+1)^0,c
  1558  002F6A  EC96  F01C         	call	_ver_quantidade	;wreg free
  1559                           
  1560                           ;main.c: 84:             }
  1561  002F6E  EFA1  F017         	goto	l4811
  1562  002F72                     l122:
  1563  002F72  B881               	btfsc	129,4,c	;volatile
  1564  002F74  EFBE  F017         	goto	u5671
  1565  002F78  EFC0  F017         	goto	u5670
  1566  002F7C                     u5671:
  1567  002F7C  EFC8  F017         	goto	l124
  1568  002F80                     u5670:
  1569  002F80                     
  1570                           ;main.c: 86:                 encher_tanque(&volume);
  1571  002F80  0EEB               	movlw	low _volume
  1572  002F82  6E7E               	movwf	encher_tanque@vol^0,c
  1573  002F84  0E00               	movlw	high _volume
  1574  002F86  6E7F               	movwf	(encher_tanque@vol+1)^0,c
  1575  002F88  ECDC  F00D         	call	_encher_tanque	;wreg free
  1576                           
  1577                           ;main.c: 87:             }
  1578  002F8C  EFA1  F017         	goto	l4811
  1579  002F90                     l124:
  1580  002F90  BA81               	btfsc	129,5,c	;volatile
  1581  002F92  EFCD  F017         	goto	u5681
  1582  002F96  EFCF  F017         	goto	u5680
  1583  002F9A                     u5681:
  1584  002F9A  EFD7  F017         	goto	l121
  1585  002F9E                     u5680:
  1586  002F9E                     
  1587                           ;main.c: 89:                 esvaziar_tanque(&volume);
  1588  002F9E  0EEB               	movlw	low _volume
  1589  002FA0  6E7E               	movwf	esvaziar_tanque@vol^0,c
  1590  002FA2  0E00               	movlw	high _volume
  1591  002FA4  6E7F               	movwf	(esvaziar_tanque@vol+1)^0,c
  1592  002FA6  ECEE  F013         	call	_esvaziar_tanque	;wreg free
  1593  002FAA  EFA1  F017         	goto	l4811
  1594  002FAE                     l121:
  1595  002FAE  EFA1  F017         	goto	l4811
  1596  002FB2  EF00  F000         	goto	start
  1597  002FB6                     __end_of_main:
  1598                           	callstack 0
  1599                           
  1600 ;; *************** function _ver_quantidade *****************
  1601 ;; Defined at:
  1602 ;;		line 7 in file "ver.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;  vol             2  125[COMRAM] PTR 
  1605 ;;		 -> volume(4), 
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;  y               8   36[BANK0 ] unsigned char [8]
  1608 ;;  i               2   44[BANK0 ] int 
  1609 ;; Return value:  Size  Location     Type
  1610 ;;                  1    wreg      void 
  1611 ;; Registers used:
  1612 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1613 ;; Tracked objects:
  1614 ;;		On entry : 0/0
  1615 ;;		On exit  : 0/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1618 ;;      Params:         2       0       0       0       0       0       0
  1619 ;;      Locals:         0      10       0       0       0       0       0
  1620 ;;      Temps:          0       0       0       0       0       0       0
  1621 ;;      Totals:         2      10       0       0       0       0       0
  1622 ;;Total ram usage:       12 bytes
  1623 ;; Hardware stack levels used:    1
  1624 ;; Hardware stack levels required when called:    8
  1625 ;; This function calls:
  1626 ;;		_lcd_cmd
  1627 ;;		_lcd_str
  1628 ;;		_sprintf
  1629 ;; This function is called by:
  1630 ;;		_main
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           	psect	text1
  1635  00392C                     __ptext1:
  1636                           	callstack 0
  1637  00392C                     _ver_quantidade:
  1638                           	callstack 22
  1639  00392C                     
  1640                           ;ver.c: 9:     int i;;ver.c: 10:     char y[8];;ver.c: 11:     sprintf(y, "%.1f", *vol);
  1641  00392C  0EA4               	movlw	low ver_quantidade@y
  1642  00392E  0100               	movlb	0	; () banked
  1643  003930  6F92               	movwf	sprintf@s& (0+255),b
  1644  003932  0E00               	movlw	high ver_quantidade@y
  1645  003934  6F93               	movwf	(sprintf@s+1)& (0+255),b
  1646  003936  0ED7               	movlw	low STR_11
  1647  003938  6F94               	movwf	sprintf@fmt& (0+255),b
  1648  00393A  0E06               	movlw	high STR_11
  1649  00393C  6F95               	movwf	(sprintf@fmt+1)& (0+255),b
  1650  00393E  C07E  FFD9         	movff	ver_quantidade@vol,fsr2l
  1651  003942  C07F  FFDA         	movff	ver_quantidade@vol+1,fsr2h
  1652  003946  CFDE F096          	movff	postinc2,?_sprintf+4
  1653  00394A  CFDE F097          	movff	postinc2,?_sprintf+5
  1654  00394E  CFDE F098          	movff	postinc2,?_sprintf+6
  1655  003952  CFDE F099          	movff	postinc2,?_sprintf+7
  1656  003956  EC6B  F01F         	call	_sprintf	;wreg free
  1657  00395A                     
  1658                           ;ver.c: 13:     lcd_cmd(0x01);
  1659  00395A  0E01               	movlw	1
  1660  00395C  EC86  F020         	call	_lcd_cmd
  1661  003960                     
  1662                           ;ver.c: 14:     lcd_cmd(0x80);
  1663  003960  0E80               	movlw	128
  1664  003962  EC86  F020         	call	_lcd_cmd
  1665  003966                     
  1666                           ;ver.c: 15:     lcd_str("Atual: ");
  1667  003966  0ECF               	movlw	low STR_18
  1668  003968  6E08               	movwf	lcd_str@str^0,c
  1669  00396A  0E06               	movlw	high STR_18
  1670  00396C  6E09               	movwf	(lcd_str@str+1)^0,c
  1671  00396E  EC9F  F01D         	call	_lcd_str	;wreg free
  1672  003972                     
  1673                           ;ver.c: 16:     lcd_str(y);
  1674  003972  0EA4               	movlw	low ver_quantidade@y
  1675  003974  6E08               	movwf	lcd_str@str^0,c
  1676  003976  0E00               	movlw	high ver_quantidade@y
  1677  003978  6E09               	movwf	(lcd_str@str+1)^0,c
  1678  00397A  EC9F  F01D         	call	_lcd_str	;wreg free
  1679  00397E                     
  1680                           ;ver.c: 17:     lcd_str(" L");
  1681  00397E  0EEF               	movlw	low STR_12
  1682  003980  6E08               	movwf	lcd_str@str^0,c
  1683  003982  0E06               	movlw	high STR_12
  1684  003984  6E09               	movwf	(lcd_str@str+1)^0,c
  1685  003986  EC9F  F01D         	call	_lcd_str	;wreg free
  1686  00398A                     
  1687                           ;ver.c: 18:     lcd_cmd(0xC0);
  1688  00398A  0EC0               	movlw	192
  1689  00398C  EC86  F020         	call	_lcd_cmd
  1690  003990                     
  1691                           ;ver.c: 19:     lcd_str("RB1-Voltar");
  1692  003990  0E67               	movlw	low (STR_16+3)
  1693  003992  6E08               	movwf	lcd_str@str^0,c
  1694  003994  0E06               	movlw	high (STR_16+3)
  1695  003996  6E09               	movwf	(lcd_str@str+1)^0,c
  1696  003998  EC9F  F01D         	call	_lcd_str	;wreg free
  1697  00399C                     
  1698                           ;ver.c: 20:     lcd_cmd(0xC0);
  1699  00399C  0EC0               	movlw	192
  1700  00399E  EC86  F020         	call	_lcd_cmd
  1701  0039A2                     
  1702                           ;ver.c: 22:     for (i = 0; i < 7; i++) {
  1703  0039A2  0E00               	movlw	0
  1704  0039A4  0100               	movlb	0	; () banked
  1705  0039A6  6FAD               	movwf	(ver_quantidade@i+1)& (0+255),b
  1706  0039A8  0E00               	movlw	0
  1707  0039AA  6FAC               	movwf	ver_quantidade@i& (0+255),b
  1708  0039AC                     l4527:
  1709                           
  1710                           ; BSR set to: 0
  1711                           ;ver.c: 23:         lcd_cmd(0x10);
  1712  0039AC  0E10               	movlw	16
  1713  0039AE  EC86  F020         	call	_lcd_cmd
  1714  0039B2                     
  1715                           ;ver.c: 24:     }
  1716  0039B2  0100               	movlb	0	; () banked
  1717  0039B4  4BAC               	infsnz	ver_quantidade@i& (0+255),f,b
  1718  0039B6  2BAD               	incf	(ver_quantidade@i+1)& (0+255),f,b
  1719  0039B8                     
  1720                           ; BSR set to: 0
  1721  0039B8  BFAD               	btfsc	(ver_quantidade@i+1)& (0+255),7,b
  1722  0039BA  EFE8  F01C         	goto	u5481
  1723  0039BE  51AD               	movf	(ver_quantidade@i+1)& (0+255),w,b
  1724  0039C0  E109               	bnz	u5480
  1725  0039C2  0E07               	movlw	7
  1726  0039C4  5DAC               	subwf	ver_quantidade@i& (0+255),w,b
  1727  0039C6  A0D8               	btfss	status,0,c
  1728  0039C8  EFE8  F01C         	goto	u5481
  1729  0039CC  EFEA  F01C         	goto	u5480
  1730  0039D0                     u5481:
  1731  0039D0  EFD6  F01C         	goto	l4527
  1732  0039D4                     u5480:
  1733  0039D4                     l179:
  1734                           
  1735                           ;ver.c: 31:     while(((((*(volatile __near unsigned char*)0xF81)) & (1<<1)))){
  1736  0039D4  B281               	btfsc	129,1,c	;volatile
  1737  0039D6  EFEF  F01C         	goto	u5491
  1738  0039DA  EFF1  F01C         	goto	u5490
  1739  0039DE                     u5491:
  1740  0039DE  EFEA  F01C         	goto	l179
  1741  0039E2                     u5490:
  1742  0039E2  0012               	return		;funcret
  1743  0039E4                     __end_of_ver_quantidade:
  1744                           	callstack 0
  1745                           
  1746 ;; *************** function _lcd_init *****************
  1747 ;; Defined at:
  1748 ;;		line 29 in file "lcd.c"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;		None
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;		None
  1753 ;; Return value:  Size  Location     Type
  1754 ;;                  1    wreg      void 
  1755 ;; Registers used:
  1756 ;;		wreg, status,2, status,0, cstack
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1762 ;;      Params:         0       0       0       0       0       0       0
  1763 ;;      Locals:         0       0       0       0       0       0       0
  1764 ;;      Temps:          0       0       0       0       0       0       0
  1765 ;;      Totals:         0       0       0       0       0       0       0
  1766 ;;Total ram usage:        0 bytes
  1767 ;; Hardware stack levels used:    1
  1768 ;; Hardware stack levels required when called:    2
  1769 ;; This function calls:
  1770 ;;		_atraso_ms
  1771 ;;		_lcd_cmd
  1772 ;; This function is called by:
  1773 ;;		_main
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           	psect	text2
  1778  003E1E                     __ptext2:
  1779                           	callstack 0
  1780  003E1E                     _lcd_init:
  1781                           	callstack 28
  1782  003E1E                     
  1783                           ;lcd.c: 30:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  1784  003E1E  9284               	bcf	132,1,c	;volatile
  1785                           
  1786                           ;lcd.c: 31:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<2));
  1787  003E20  9484               	bcf	132,2,c	;volatile
  1788  003E22                     
  1789                           ;lcd.c: 32:     atraso_ms(20);
  1790  003E22  0E00               	movlw	0
  1791  003E24  6E02               	movwf	(atraso_ms@t+1)^0,c
  1792  003E26  0E14               	movlw	20
  1793  003E28  6E01               	movwf	atraso_ms@t^0,c
  1794  003E2A  EC4B  F01E         	call	_atraso_ms	;wreg free
  1795  003E2E                     
  1796                           ;lcd.c: 33:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  1797  003E2E  8284               	bsf	132,1,c	;volatile
  1798                           
  1799                           ;lcd.c: 35:     lcd_cmd(0x38);
  1800  003E30  0E38               	movlw	56
  1801  003E32  EC86  F020         	call	_lcd_cmd
  1802                           
  1803                           ;lcd.c: 36:     atraso_ms(5);
  1804  003E36  0E00               	movlw	0
  1805  003E38  6E02               	movwf	(atraso_ms@t+1)^0,c
  1806  003E3A  0E05               	movlw	5
  1807  003E3C  6E01               	movwf	atraso_ms@t^0,c
  1808  003E3E  EC4B  F01E         	call	_atraso_ms	;wreg free
  1809                           
  1810                           ;lcd.c: 37:     lcd_cmd(0x38);
  1811  003E42  0E38               	movlw	56
  1812  003E44  EC86  F020         	call	_lcd_cmd
  1813                           
  1814                           ;lcd.c: 38:     atraso_ms(1);
  1815  003E48  0E00               	movlw	0
  1816  003E4A  6E02               	movwf	(atraso_ms@t+1)^0,c
  1817  003E4C  0E01               	movlw	1
  1818  003E4E  6E01               	movwf	atraso_ms@t^0,c
  1819  003E50  EC4B  F01E         	call	_atraso_ms	;wreg free
  1820                           
  1821                           ;lcd.c: 39:     lcd_cmd(0x38);
  1822  003E54  0E38               	movlw	56
  1823  003E56  EC86  F020         	call	_lcd_cmd
  1824                           
  1825                           ;lcd.c: 40:     lcd_cmd(0x08);
  1826  003E5A  0E08               	movlw	8
  1827  003E5C  EC86  F020         	call	_lcd_cmd
  1828                           
  1829                           ;lcd.c: 41:     lcd_cmd(0x0F);
  1830  003E60  0E0F               	movlw	15
  1831  003E62  EC86  F020         	call	_lcd_cmd
  1832                           
  1833                           ;lcd.c: 42:     lcd_cmd(0x01);
  1834  003E66  0E01               	movlw	1
  1835  003E68  EC86  F020         	call	_lcd_cmd
  1836                           
  1837                           ;lcd.c: 43:     lcd_cmd(0x38);
  1838  003E6C  0E38               	movlw	56
  1839  003E6E  EC86  F020         	call	_lcd_cmd
  1840                           
  1841                           ;lcd.c: 44:     lcd_cmd(0x80);
  1842  003E72  0E80               	movlw	128
  1843  003E74  EC86  F020         	call	_lcd_cmd
  1844  003E78  0012               	return		;funcret
  1845  003E7A                     __end_of_lcd_init:
  1846                           	callstack 0
  1847                           
  1848 ;; *************** function _esvaziar_tanque *****************
  1849 ;; Defined at:
  1850 ;;		line 8 in file "esvaziar.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;  vol             2  125[COMRAM] PTR 
  1853 ;;		 -> volume(4), 
  1854 ;; Auto vars:     Size  Location     Type
  1855 ;;  numeros        20   36[BANK0 ] int [10]
  1856 ;;  y               8   56[BANK0 ] unsigned char [8]
  1857 ;;  i               2   70[BANK0 ] int 
  1858 ;;  tempo           2   64[BANK0 ] int 
  1859 ;;  decremento      4   66[BANK0 ] int 
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  1    wreg      void 
  1862 ;; Registers used:
  1863 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1869 ;;      Params:         2       0       0       0       0       0       0
  1870 ;;      Locals:         0      36       0       0       0       0       0
  1871 ;;      Temps:          0       0       0       0       0       0       0
  1872 ;;      Totals:         2      36       0       0       0       0       0
  1873 ;;Total ram usage:       38 bytes
  1874 ;; Hardware stack levels used:    1
  1875 ;; Hardware stack levels required when called:    8
  1876 ;; This function calls:
  1877 ;;		___fldiv
  1878 ;;		___flsub
  1879 ;;		___fltol
  1880 ;;		_atraso_ms
  1881 ;;		_lcd_cmd
  1882 ;;		_lcd_str
  1883 ;;		_sprintf
  1884 ;; This function is called by:
  1885 ;;		_main
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889                           	psect	text3
  1890  0027DC                     __ptext3:
  1891                           	callstack 0
  1892  0027DC                     _esvaziar_tanque:
  1893                           	callstack 22
  1894  0027DC                     
  1895                           ;esvaziar.c: 11:     lcd_cmd(0x01);
  1896  0027DC  0E01               	movlw	1
  1897  0027DE  EC86  F020         	call	_lcd_cmd
  1898                           
  1899                           ;esvaziar.c: 12:     lcd_cmd(0x80);
  1900  0027E2  0E80               	movlw	128
  1901  0027E4  EC86  F020         	call	_lcd_cmd
  1902  0027E8                     
  1903                           ;esvaziar.c: 13:     lcd_str("Quant(L): ");
  1904  0027E8  0EA5               	movlw	low STR_7
  1905  0027EA  6E08               	movwf	lcd_str@str^0,c
  1906  0027EC  0E06               	movlw	high STR_7
  1907  0027EE  6E09               	movwf	(lcd_str@str+1)^0,c
  1908  0027F0  EC9F  F01D         	call	_lcd_str	;wreg free
  1909  0027F4                     
  1910                           ;esvaziar.c: 14:     lcd_cmd(0xC0);
  1911  0027F4  0EC0               	movlw	192
  1912  0027F6  EC86  F020         	call	_lcd_cmd
  1913                           
  1914                           ;esvaziar.c: 15:     lcd_str("RB1-voltar");
  1915  0027FA  0EB0               	movlw	low STR_8
  1916  0027FC  6E08               	movwf	lcd_str@str^0,c
  1917  0027FE  0E06               	movlw	high STR_8
  1918  002800  6E09               	movwf	(lcd_str@str+1)^0,c
  1919  002802  EC9F  F01D         	call	_lcd_str	;wreg free
  1920  002806                     
  1921                           ;esvaziar.c: 16:     lcd_cmd(0x80 +10);
  1922  002806  0E8A               	movlw	138
  1923  002808  EC86  F020         	call	_lcd_cmd
  1924  00280C                     
  1925                           ;esvaziar.c: 17:     atraso_ms(1000);
  1926  00280C  0E03               	movlw	3
  1927  00280E  6E02               	movwf	(atraso_ms@t+1)^0,c
  1928  002810  0EE8               	movlw	232
  1929  002812  6E01               	movwf	atraso_ms@t^0,c
  1930  002814  EC4B  F01E         	call	_atraso_ms	;wreg free
  1931  002818                     
  1932                           ;esvaziar.c: 19:     double decremento = 5;
  1933  002818  0E00               	movlw	0
  1934  00281A  0100               	movlb	0	; () banked
  1935  00281C  6FC2               	movwf	esvaziar_tanque@decremento& (0+255),b
  1936  00281E  0E00               	movlw	0
  1937  002820  6FC3               	movwf	(esvaziar_tanque@decremento+1)& (0+255),b
  1938  002822  0EA0               	movlw	160
  1939  002824  6FC4               	movwf	(esvaziar_tanque@decremento+2)& (0+255),b
  1940  002826  0E40               	movlw	64
  1941  002828  6FC5               	movwf	(esvaziar_tanque@decremento+3)& (0+255),b
  1942  00282A                     
  1943                           ; BSR set to: 0
  1944                           ;esvaziar.c: 21:     if (*vol - decremento < 0) {
  1945  00282A  C07E  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  1946  00282E  C07F  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  1947  002832  CFDE F01F          	movff	postinc2,___flsub@b
  1948  002836  CFDE F020          	movff	postinc2,___flsub@b+1
  1949  00283A  CFDE F021          	movff	postinc2,___flsub@b+2
  1950  00283E  CFDE F022          	movff	postinc2,___flsub@b+3
  1951  002842  C0C2  F023         	movff	esvaziar_tanque@decremento,___flsub@a
  1952  002846  C0C3  F024         	movff	esvaziar_tanque@decremento+1,___flsub@a+1
  1953  00284A  C0C4  F025         	movff	esvaziar_tanque@decremento+2,___flsub@a+2
  1954  00284E  C0C5  F026         	movff	esvaziar_tanque@decremento+3,___flsub@a+3
  1955  002852  ECBD  F01F         	call	___flsub	;wreg free
  1956  002856  BE22               	btfsc	(?___flsub+3)^0,7,c
  1957  002858  EF32  F014         	goto	u5590
  1958  00285C  EF30  F014         	goto	u5591
  1959  002860                     u5591:
  1960  002860  EF49  F014         	goto	l4683
  1961  002864                     u5590:
  1962  002864                     
  1963                           ;esvaziar.c: 24:         lcd_cmd(0x01);
  1964  002864  0E01               	movlw	1
  1965  002866  EC86  F020         	call	_lcd_cmd
  1966                           
  1967                           ;esvaziar.c: 25:         lcd_cmd(0x80);
  1968  00286A  0E80               	movlw	128
  1969  00286C  EC86  F020         	call	_lcd_cmd
  1970  002870                     
  1971                           ;esvaziar.c: 26:         lcd_str("ERRO: vol < 0");
  1972  002870  0E56               	movlw	low STR_23
  1973  002872  6E08               	movwf	lcd_str@str^0,c
  1974  002874  0E06               	movlw	high STR_23
  1975  002876  6E09               	movwf	(lcd_str@str+1)^0,c
  1976  002878  EC9F  F01D         	call	_lcd_str	;wreg free
  1977  00287C                     
  1978                           ;esvaziar.c: 27:         lcd_cmd(0xC0);
  1979  00287C  0EC0               	movlw	192
  1980  00287E  EC86  F020         	call	_lcd_cmd
  1981                           
  1982                           ;esvaziar.c: 28:         lcd_str("RB1-Voltar");
  1983  002882  0E67               	movlw	low (STR_16+3)
  1984  002884  6E08               	movwf	lcd_str@str^0,c
  1985  002886  0E06               	movlw	high (STR_16+3)
  1986  002888  6E09               	movwf	(lcd_str@str+1)^0,c
  1987  00288A  EC9F  F01D         	call	_lcd_str	;wreg free
  1988                           
  1989                           ;esvaziar.c: 34:     } else {
  1990  00288E  EF0A  F015         	goto	l199
  1991  002892                     l4683:
  1992                           
  1993                           ;esvaziar.c: 36:         *vol -= decremento;
  1994  002892  C07E  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  1995  002896  C07F  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  1996  00289A  CFDE F01F          	movff	postinc2,___flsub@b
  1997  00289E  CFDE F020          	movff	postinc2,___flsub@b+1
  1998  0028A2  CFDE F021          	movff	postinc2,___flsub@b+2
  1999  0028A6  CFDE F022          	movff	postinc2,___flsub@b+3
  2000  0028AA  C0C2  F023         	movff	esvaziar_tanque@decremento,___flsub@a
  2001  0028AE  C0C3  F024         	movff	esvaziar_tanque@decremento+1,___flsub@a+1
  2002  0028B2  C0C4  F025         	movff	esvaziar_tanque@decremento+2,___flsub@a+2
  2003  0028B6  C0C5  F026         	movff	esvaziar_tanque@decremento+3,___flsub@a+3
  2004  0028BA  ECBD  F01F         	call	___flsub	;wreg free
  2005  0028BE  C07E  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  2006  0028C2  C07F  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  2007  0028C6  C01F  FFDE         	movff	?___flsub,postinc2
  2008  0028CA  C020  FFDE         	movff	?___flsub+1,postinc2
  2009  0028CE  C021  FFDE         	movff	?___flsub+2,postinc2
  2010  0028D2  C022  FFDE         	movff	?___flsub+3,postinc2
  2011  0028D6                     
  2012                           ;esvaziar.c: 37:         char y[8];;esvaziar.c: 38:         sprintf(y, "%.1f", *vol);
  2013  0028D6  0EB8               	movlw	low esvaziar_tanque@y
  2014  0028D8  0100               	movlb	0	; () banked
  2015  0028DA  6F92               	movwf	sprintf@s& (0+255),b
  2016  0028DC  0E00               	movlw	high esvaziar_tanque@y
  2017  0028DE  6F93               	movwf	(sprintf@s+1)& (0+255),b
  2018  0028E0  0ED7               	movlw	low STR_11
  2019  0028E2  6F94               	movwf	sprintf@fmt& (0+255),b
  2020  0028E4  0E06               	movlw	high STR_11
  2021  0028E6  6F95               	movwf	(sprintf@fmt+1)& (0+255),b
  2022  0028E8  C07E  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  2023  0028EC  C07F  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  2024  0028F0  CFDE F096          	movff	postinc2,?_sprintf+4
  2025  0028F4  CFDE F097          	movff	postinc2,?_sprintf+5
  2026  0028F8  CFDE F098          	movff	postinc2,?_sprintf+6
  2027  0028FC  CFDE F099          	movff	postinc2,?_sprintf+7
  2028  002900  EC6B  F01F         	call	_sprintf	;wreg free
  2029  002904                     
  2030                           ;esvaziar.c: 39:         lcd_str(y);
  2031  002904  0EB8               	movlw	low esvaziar_tanque@y
  2032  002906  6E08               	movwf	lcd_str@str^0,c
  2033  002908  0E00               	movlw	high esvaziar_tanque@y
  2034  00290A  6E09               	movwf	(lcd_str@str+1)^0,c
  2035  00290C  EC9F  F01D         	call	_lcd_str	;wreg free
  2036  002910                     
  2037                           ;esvaziar.c: 40:         lcd_str(" L");
  2038  002910  0EEF               	movlw	low STR_12
  2039  002912  6E08               	movwf	lcd_str@str^0,c
  2040  002914  0E06               	movlw	high STR_12
  2041  002916  6E09               	movwf	(lcd_str@str+1)^0,c
  2042  002918  EC9F  F01D         	call	_lcd_str	;wreg free
  2043  00291C                     
  2044                           ;esvaziar.c: 43:         int tempo = decremento / 2;
  2045  00291C  0E00               	movlw	0
  2046  00291E  6E05               	movwf	___fldiv@a^0,c
  2047  002920  0E00               	movlw	0
  2048  002922  6E06               	movwf	(___fldiv@a+1)^0,c
  2049  002924  0E00               	movlw	0
  2050  002926  6E07               	movwf	(___fldiv@a+2)^0,c
  2051  002928  0E40               	movlw	64
  2052  00292A  6E08               	movwf	(___fldiv@a+3)^0,c
  2053  00292C  C0C2  F001         	movff	esvaziar_tanque@decremento,___fldiv@b
  2054  002930  C0C3  F002         	movff	esvaziar_tanque@decremento+1,___fldiv@b+1
  2055  002934  C0C4  F003         	movff	esvaziar_tanque@decremento+2,___fldiv@b+2
  2056  002938  C0C5  F004         	movff	esvaziar_tanque@decremento+3,___fldiv@b+3
  2057  00293C  EC21  F012         	call	___fldiv	;wreg free
  2058  002940  C001  F01A         	movff	?___fldiv,___fltol@f1
  2059  002944  C002  F01B         	movff	?___fldiv+1,___fltol@f1+1
  2060  002948  C003  F01C         	movff	?___fldiv+2,___fltol@f1+2
  2061  00294C  C004  F01D         	movff	?___fldiv+3,___fltol@f1+3
  2062  002950  EC7D  F019         	call	___fltol	;wreg free
  2063  002954  C01A  F0C0         	movff	?___fltol,esvaziar_tanque@tempo
  2064  002958  C01B  F0C1         	movff	?___fltol+1,esvaziar_tanque@tempo+1
  2065  00295C                     
  2066                           ;esvaziar.c: 44:         int i;;esvaziar.c: 45:         int numeros[10] = {0x3F, 0x06, 0
      +                          x5B, 0x4F, 0x66, 0x6D, 0x7D,
  2067  00295C  EE21  F050         	lfsr	2,esvaziar_tanque@F342
  2068  002960  EE10  F0A4         	lfsr	1,esvaziar_tanque@numeros
  2069  002964  0E13               	movlw	19
  2070  002966                     u5601:
  2071  002966  CFDB FFE3          	movff	plusw2,plusw1
  2072  00296A  06E8               	decf	wreg,f,c
  2073  00296C  E2FC               	bc	u5601
  2074  00296E                     
  2075                           ;esvaziar.c: 48:         (*(volatile __near unsigned char*)0xF92) = 0x00;
  2076  00296E  0E00               	movlw	0
  2077  002970  6E92               	movwf	146,c	;volatile
  2078  002972                     
  2079                           ;esvaziar.c: 49:         (((*(volatile __near unsigned char*)0xF80)) |= (1<<5));
  2080  002972  8A80               	bsf	128,5,c	;volatile
  2081  002974                     
  2082                           ;esvaziar.c: 54:         lcd_cmd(0x01);
  2083  002974  0E01               	movlw	1
  2084  002976  EC86  F020         	call	_lcd_cmd
  2085  00297A                     
  2086                           ;esvaziar.c: 55:         lcd_cmd(0x80);
  2087  00297A  0E80               	movlw	128
  2088  00297C  EC86  F020         	call	_lcd_cmd
  2089  002980                     
  2090                           ;esvaziar.c: 56:         lcd_str("Esvaziando...");
  2091  002980  0E48               	movlw	low STR_27
  2092  002982  6E08               	movwf	lcd_str@str^0,c
  2093  002984  0E06               	movlw	high STR_27
  2094  002986  6E09               	movwf	(lcd_str@str+1)^0,c
  2095  002988  EC9F  F01D         	call	_lcd_str	;wreg free
  2096  00298C                     
  2097                           ;esvaziar.c: 57:         lcd_cmd(0xC0);
  2098  00298C  0EC0               	movlw	192
  2099  00298E  EC86  F020         	call	_lcd_cmd
  2100  002992                     
  2101                           ;esvaziar.c: 58:         lcd_str("Aguarde!");
  2102  002992  0EC6               	movlw	low STR_14
  2103  002994  6E08               	movwf	lcd_str@str^0,c
  2104  002996  0E06               	movlw	high STR_14
  2105  002998  6E09               	movwf	(lcd_str@str+1)^0,c
  2106  00299A  EC9F  F01D         	call	_lcd_str	;wreg free
  2107  00299E                     
  2108                           ;esvaziar.c: 65:         for (i = tempo; i >= 0; i--) {
  2109  00299E  C0C0  F0C6         	movff	esvaziar_tanque@tempo,esvaziar_tanque@i
  2110  0029A2  C0C1  F0C7         	movff	esvaziar_tanque@tempo+1,esvaziar_tanque@i+1
  2111  0029A6                     l4711:
  2112  0029A6  0100               	movlb	0	; () banked
  2113  0029A8  BFC7               	btfsc	(esvaziar_tanque@i+1)& (0+255),7,b
  2114  0029AA  EFDB  F014         	goto	u5610
  2115  0029AE  EFD9  F014         	goto	u5611
  2116  0029B2                     u5611:
  2117  0029B2  EFDD  F014         	goto	l4715
  2118  0029B6                     u5610:
  2119  0029B6  EFF4  F014         	goto	l4723
  2120  0029BA                     l4715:
  2121                           
  2122                           ; BSR set to: 0
  2123                           ;esvaziar.c: 66:             (*(volatile __near unsigned char*)0xF83) = numeros[i];
  2124  0029BA  90D8               	bcf	status,0,c
  2125  0029BC  35C6               	rlcf	esvaziar_tanque@i& (0+255),w,b
  2126  0029BE  6ED9               	movwf	fsr2l,c
  2127  0029C0  35C7               	rlcf	(esvaziar_tanque@i+1)& (0+255),w,b
  2128  0029C2  6EDA               	movwf	fsr2h,c
  2129  0029C4  0EA4               	movlw	low esvaziar_tanque@numeros
  2130  0029C6  26D9               	addwf	fsr2l,f,c
  2131  0029C8  0E00               	movlw	high esvaziar_tanque@numeros
  2132  0029CA  22DA               	addwfc	fsr2h,f,c
  2133  0029CC  50DF               	movf	indf2,w,c
  2134  0029CE  6E83               	movwf	131,c	;volatile
  2135  0029D0                     
  2136                           ; BSR set to: 0
  2137                           ;esvaziar.c: 67:             atraso_ms(1000);
  2138  0029D0  0E03               	movlw	3
  2139  0029D2  6E02               	movwf	(atraso_ms@t+1)^0,c
  2140  0029D4  0EE8               	movlw	232
  2141  0029D6  6E01               	movwf	atraso_ms@t^0,c
  2142  0029D8  EC4B  F01E         	call	_atraso_ms	;wreg free
  2143  0029DC                     
  2144                           ;esvaziar.c: 68:         }
  2145  0029DC  0100               	movlb	0	; () banked
  2146  0029DE  07C6               	decf	esvaziar_tanque@i& (0+255),f,b
  2147  0029E0  A0D8               	btfss	status,0,c
  2148  0029E2  07C7               	decf	(esvaziar_tanque@i+1)& (0+255),f,b
  2149  0029E4  EFD3  F014         	goto	l4711
  2150  0029E8                     l4723:
  2151                           
  2152                           ; BSR set to: 0
  2153                           ;esvaziar.c: 69:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  2154  0029E8  9A80               	bcf	128,5,c	;volatile
  2155  0029EA                     
  2156                           ; BSR set to: 0
  2157                           ;esvaziar.c: 72:         lcd_cmd(0x01);
  2158  0029EA  0E01               	movlw	1
  2159  0029EC  EC86  F020         	call	_lcd_cmd
  2160  0029F0                     
  2161                           ;esvaziar.c: 73:         lcd_cmd(0x80);
  2162  0029F0  0E80               	movlw	128
  2163  0029F2  EC86  F020         	call	_lcd_cmd
  2164  0029F6                     
  2165                           ;esvaziar.c: 74:         lcd_str("    SUCESSO!");
  2166  0029F6  0E80               	movlw	low STR_15
  2167  0029F8  6E08               	movwf	lcd_str@str^0,c
  2168  0029FA  0E06               	movlw	high STR_15
  2169  0029FC  6E09               	movwf	(lcd_str@str+1)^0,c
  2170  0029FE  EC9F  F01D         	call	_lcd_str	;wreg free
  2171  002A02                     
  2172                           ;esvaziar.c: 75:         lcd_cmd(0xC0);
  2173  002A02  0EC0               	movlw	192
  2174  002A04  EC86  F020         	call	_lcd_cmd
  2175  002A08                     
  2176                           ;esvaziar.c: 76:         lcd_str("   RB1-Voltar");
  2177  002A08  0E64               	movlw	low STR_16
  2178  002A0A  6E08               	movwf	lcd_str@str^0,c
  2179  002A0C  0E06               	movlw	high STR_16
  2180  002A0E  6E09               	movwf	(lcd_str@str+1)^0,c
  2181  002A10  EC9F  F01D         	call	_lcd_str	;wreg free
  2182  002A14                     l199:
  2183                           
  2184                           ;esvaziar.c: 94:     while(((((*(volatile __near unsigned char*)0xF81)) & (1<<1)))){
  2185  002A14  B281               	btfsc	129,1,c	;volatile
  2186  002A16  EF0F  F015         	goto	u5621
  2187  002A1A  EF11  F015         	goto	u5620
  2188  002A1E                     u5621:
  2189  002A1E  EF0A  F015         	goto	l199
  2190  002A22                     u5620:
  2191  002A22  0012               	return		;funcret
  2192  002A24                     __end_of_esvaziar_tanque:
  2193                           	callstack 0
  2194                           
  2195 ;; *************** function _encher_tanque *****************
  2196 ;; Defined at:
  2197 ;;		line 9 in file "encher.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;  vol             2  125[COMRAM] PTR 
  2200 ;;		 -> volume(4), 
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;  numeros        20   40[BANK0 ] int [10]
  2203 ;;  y               8   60[BANK0 ] unsigned char [8]
  2204 ;;  t2              2   87[BANK0 ] int 
  2205 ;;  tempo           2   83[BANK0 ] int 
  2206 ;;  t1              2   80[BANK0 ] int 
  2207 ;;  i               2   72[BANK0 ] int 
  2208 ;;  potencia        2   70[BANK0 ] int 
  2209 ;;  num             4   74[BANK0 ] unsigned int [2]
  2210 ;;  i               2   85[BANK0 ] unsigned int 
  2211 ;;  incremento      2   78[BANK0 ] unsigned int 
  2212 ;;  tmp             1   82[BANK0 ] unsigned char 
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  1    wreg      void 
  2215 ;; Registers used:
  2216 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2222 ;;      Params:         2       0       0       0       0       0       0
  2223 ;;      Locals:         0      49       0       0       0       0       0
  2224 ;;      Temps:          0       4       0       0       0       0       0
  2225 ;;      Totals:         2      53       0       0       0       0       0
  2226 ;;Total ram usage:       55 bytes
  2227 ;; Hardware stack levels used:    1
  2228 ;; Hardware stack levels required when called:    8
  2229 ;; This function calls:
  2230 ;;		___awdiv
  2231 ;;		___awmod
  2232 ;;		___fladd
  2233 ;;		___flge
  2234 ;;		___wmul
  2235 ;;		___xxtofl
  2236 ;;		_atraso_ms
  2237 ;;		_lcd_cmd
  2238 ;;		_lcd_dat
  2239 ;;		_lcd_str
  2240 ;;		_pwmInit
  2241 ;;		_pwmSet1
  2242 ;;		_sprintf
  2243 ;;		_tc_tecla
  2244 ;; This function is called by:
  2245 ;;		_main
  2246 ;; This function uses a non-reentrant model
  2247 ;;
  2248                           
  2249                           	psect	text4
  2250  001BB8                     __ptext4:
  2251                           	callstack 0
  2252  001BB8                     _encher_tanque:
  2253                           	callstack 22
  2254  001BB8                     
  2255                           ;encher.c: 12:     lcd_cmd(0x01);
  2256  001BB8  0E01               	movlw	1
  2257  001BBA  EC86  F020         	call	_lcd_cmd
  2258                           
  2259                           ;encher.c: 13:     lcd_cmd(0x80);
  2260  001BBE  0E80               	movlw	128
  2261  001BC0  EC86  F020         	call	_lcd_cmd
  2262  001BC4                     
  2263                           ;encher.c: 14:     lcd_str("Quant(L): ");
  2264  001BC4  0EA5               	movlw	low STR_7
  2265  001BC6  6E08               	movwf	lcd_str@str^0,c
  2266  001BC8  0E06               	movlw	high STR_7
  2267  001BCA  6E09               	movwf	(lcd_str@str+1)^0,c
  2268  001BCC  EC9F  F01D         	call	_lcd_str	;wreg free
  2269  001BD0                     
  2270                           ;encher.c: 15:     lcd_cmd(0xC0);
  2271  001BD0  0EC0               	movlw	192
  2272  001BD2  EC86  F020         	call	_lcd_cmd
  2273                           
  2274                           ;encher.c: 16:     lcd_str("RB1-voltar");
  2275  001BD6  0EB0               	movlw	low STR_8
  2276  001BD8  6E08               	movwf	lcd_str@str^0,c
  2277  001BDA  0E06               	movlw	high STR_8
  2278  001BDC  6E09               	movwf	(lcd_str@str+1)^0,c
  2279  001BDE  EC9F  F01D         	call	_lcd_str	;wreg free
  2280  001BE2                     
  2281                           ;encher.c: 17:     lcd_cmd(0x80 +10);
  2282  001BE2  0E8A               	movlw	138
  2283  001BE4  EC86  F020         	call	_lcd_cmd
  2284  001BE8                     
  2285                           ;encher.c: 22:     unsigned int incremento;;encher.c: 24:     unsigned int i = 0;
  2286  001BE8  0E00               	movlw	0
  2287  001BEA  0100               	movlb	0	; () banked
  2288  001BEC  6FD6               	movwf	(encher_tanque@i+1)& (0+255),b
  2289  001BEE  0E00               	movlw	0
  2290  001BF0  6FD5               	movwf	encher_tanque@i& (0+255),b
  2291  001BF2                     
  2292                           ; BSR set to: 0
  2293                           ;encher.c: 25:     unsigned int num[2];;encher.c: 26:     unsigned char tmp;;encher.c: 2
      +                          8:     (*(volatile __near unsigned char*)0xF93) = 0xF8;
  2294  001BF2  0EF8               	movlw	248
  2295  001BF4  6E93               	movwf	147,c	;volatile
  2296                           
  2297                           ;encher.c: 30:     while (i!=2) {
  2298  001BF6  EF4D  F00E         	goto	l4561
  2299  001BFA                     l4545:
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;encher.c: 31:         (*(volatile __near unsigned char*)0xF95) = 0x0F;
  2303  001BFA  0E0F               	movlw	15
  2304  001BFC  6E95               	movwf	149,c	;volatile
  2305  001BFE                     
  2306                           ; BSR set to: 0
  2307                           ;encher.c: 32:         tmp = tc_tecla(0) + 0x30;
  2308  001BFE  0E00               	movlw	0
  2309  001C00  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  2310  001C02  0E00               	movlw	0
  2311  001C04  6E07               	movwf	tc_tecla@timeout^0,c
  2312  001C06  EC1B  F016         	call	_tc_tecla	;wreg free
  2313  001C0A  0F30               	addlw	48
  2314  001C0C  0100               	movlb	0	; () banked
  2315  001C0E  6FD2               	movwf	encher_tanque@tmp& (0+255),b
  2316  001C10                     
  2317                           ; BSR set to: 0
  2318                           ;encher.c: 33:         (*(volatile __near unsigned char*)0xF95) = 0x00;
  2319  001C10  0E00               	movlw	0
  2320  001C12  6E95               	movwf	149,c	;volatile
  2321  001C14                     
  2322                           ; BSR set to: 0
  2323                           ;encher.c: 34:         lcd_dat(tmp);
  2324  001C14  51D2               	movf	encher_tanque@tmp& (0+255),w,b
  2325  001C16  EC71  F020         	call	_lcd_dat
  2326  001C1A                     
  2327                           ;encher.c: 35:         if (i == 0) {
  2328  001C1A  0100               	movlb	0	; () banked
  2329  001C1C  51D5               	movf	encher_tanque@i& (0+255),w,b
  2330  001C1E  11D6               	iorwf	(encher_tanque@i+1)& (0+255),w,b
  2331  001C20  A4D8               	btfss	status,2,c
  2332  001C22  EF15  F00E         	goto	u5501
  2333  001C26  EF17  F00E         	goto	u5500
  2334  001C2A                     u5501:
  2335  001C2A  EF33  F00E         	goto	l4557
  2336  001C2E                     u5500:
  2337  001C2E                     
  2338                           ; BSR set to: 0
  2339                           ;encher.c: 36:             num[i] = (tmp - '0')*10;
  2340  001C2E  0ED0               	movlw	208
  2341  001C30  25D2               	addwf	encher_tanque@tmp& (0+255),w,b
  2342  001C32  6E01               	movwf	___wmul@multiplier^0,c
  2343  001C34  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2344  001C36  0EFF               	movlw	255
  2345  001C38  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  2346  001C3A  0E00               	movlw	0
  2347  001C3C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2348  001C3E  0E0A               	movlw	10
  2349  001C40  6E03               	movwf	___wmul@multiplicand^0,c
  2350  001C42  ECAF  F020         	call	___wmul	;wreg free
  2351  001C46  90D8               	bcf	status,0,c
  2352  001C48  0100               	movlb	0	; () banked
  2353  001C4A  35D5               	rlcf	encher_tanque@i& (0+255),w,b
  2354  001C4C  6ED9               	movwf	fsr2l,c
  2355  001C4E  35D6               	rlcf	(encher_tanque@i+1)& (0+255),w,b
  2356  001C50  6EDA               	movwf	fsr2h,c
  2357  001C52  0ECA               	movlw	low encher_tanque@num
  2358  001C54  26D9               	addwf	fsr2l,f,c
  2359  001C56  0E00               	movlw	high encher_tanque@num
  2360  001C58  22DA               	addwfc	fsr2h,f,c
  2361  001C5A  C001  FFDE         	movff	?___wmul,postinc2
  2362  001C5E  C002  FFDD         	movff	?___wmul+1,postdec2
  2363                           
  2364                           ;encher.c: 37:         } else {
  2365  001C62  EF4B  F00E         	goto	l4559
  2366  001C66                     l4557:
  2367                           
  2368                           ; BSR set to: 0
  2369                           ;encher.c: 38:             num[i] = (tmp - '0');
  2370  001C66  0ED0               	movlw	208
  2371  001C68  6FA4               	movwf	??_encher_tanque& (0+255),b
  2372  001C6A  0EFF               	movlw	255
  2373  001C6C  6FA5               	movwf	(??_encher_tanque+1)& (0+255),b
  2374  001C6E  51D2               	movf	encher_tanque@tmp& (0+255),w,b
  2375  001C70  6FA6               	movwf	(??_encher_tanque+2)& (0+255),b
  2376  001C72  6BA7               	clrf	(??_encher_tanque+3)& (0+255),b
  2377  001C74  51A4               	movf	??_encher_tanque& (0+255),w,b
  2378  001C76  27A6               	addwf	(??_encher_tanque+2)& (0+255),f,b
  2379  001C78  51A5               	movf	(??_encher_tanque+1)& (0+255),w,b
  2380  001C7A  23A7               	addwfc	(??_encher_tanque+3)& (0+255),f,b
  2381  001C7C  90D8               	bcf	status,0,c
  2382  001C7E  35D5               	rlcf	encher_tanque@i& (0+255),w,b
  2383  001C80  6ED9               	movwf	fsr2l,c
  2384  001C82  35D6               	rlcf	(encher_tanque@i+1)& (0+255),w,b
  2385  001C84  6EDA               	movwf	fsr2h,c
  2386  001C86  0ECA               	movlw	low encher_tanque@num
  2387  001C88  26D9               	addwf	fsr2l,f,c
  2388  001C8A  0E00               	movlw	high encher_tanque@num
  2389  001C8C  22DA               	addwfc	fsr2h,f,c
  2390  001C8E  C0A6  FFDE         	movff	??_encher_tanque+2,postinc2
  2391  001C92  C0A7  FFDD         	movff	??_encher_tanque+3,postdec2
  2392  001C96                     l4559:
  2393                           
  2394                           ; BSR set to: 0
  2395                           ;encher.c: 40:         i++;
  2396  001C96  4BD5               	infsnz	encher_tanque@i& (0+255),f,b
  2397  001C98  2BD6               	incf	(encher_tanque@i+1)& (0+255),f,b
  2398  001C9A                     l4561:
  2399                           
  2400                           ; BSR set to: 0
  2401                           ;encher.c: 30:     while (i!=2) {
  2402  001C9A  0E02               	movlw	2
  2403  001C9C  19D5               	xorwf	encher_tanque@i& (0+255),w,b
  2404  001C9E  11D6               	iorwf	(encher_tanque@i+1)& (0+255),w,b
  2405  001CA0  A4D8               	btfss	status,2,c
  2406  001CA2  EF55  F00E         	goto	u5511
  2407  001CA6  EF57  F00E         	goto	u5510
  2408  001CAA                     u5511:
  2409  001CAA  EFFD  F00D         	goto	l4545
  2410  001CAE                     u5510:
  2411  001CAE                     
  2412                           ; BSR set to: 0
  2413                           ;encher.c: 43:     atraso_ms(500);
  2414  001CAE  0E01               	movlw	1
  2415  001CB0  6E02               	movwf	(atraso_ms@t+1)^0,c
  2416  001CB2  0EF4               	movlw	244
  2417  001CB4  6E01               	movwf	atraso_ms@t^0,c
  2418  001CB6  EC4B  F01E         	call	_atraso_ms	;wreg free
  2419                           
  2420                           ;encher.c: 44:     lcd_cmd(0x01);
  2421  001CBA  0E01               	movlw	1
  2422  001CBC  EC86  F020         	call	_lcd_cmd
  2423  001CC0                     
  2424                           ;encher.c: 46:     incremento = num[0]+num[1];
  2425  001CC0  0100               	movlb	0	; () banked
  2426  001CC2  51CA               	movf	encher_tanque@num& (0+255),w,b
  2427  001CC4  25CC               	addwf	(encher_tanque@num+2)& (0+255),w,b
  2428  001CC6  6FCE               	movwf	encher_tanque@incremento& (0+255),b
  2429  001CC8  51CB               	movf	(encher_tanque@num+1)& (0+255),w,b
  2430  001CCA  21CD               	addwfc	(encher_tanque@num+3)& (0+255),w,b
  2431  001CCC  6FCF               	movwf	(encher_tanque@incremento+1)& (0+255),b
  2432  001CCE                     
  2433                           ; BSR set to: 0
  2434                           ;encher.c: 48:     if (*vol + incremento > 70) {
  2435  001CCE  0E00               	movlw	0
  2436  001CD0  6E1F               	movwf	___flge@ff1^0,c
  2437  001CD2  0E00               	movlw	0
  2438  001CD4  6E20               	movwf	(___flge@ff1+1)^0,c
  2439  001CD6  0E8C               	movlw	140
  2440  001CD8  6E21               	movwf	(___flge@ff1+2)^0,c
  2441  001CDA  0E42               	movlw	66
  2442  001CDC  6E22               	movwf	(___flge@ff1+3)^0,c
  2443  001CDE  C07E  FFD9         	movff	encher_tanque@vol,fsr2l
  2444  001CE2  C07F  FFDA         	movff	encher_tanque@vol+1,fsr2h
  2445  001CE6  CFDE F013          	movff	postinc2,___fladd@a
  2446  001CEA  CFDE F014          	movff	postinc2,___fladd@a+1
  2447  001CEE  CFDE F015          	movff	postinc2,___fladd@a+2
  2448  001CF2  CFDE F016          	movff	postinc2,___fladd@a+3
  2449  001CF6  C0CE  F001         	movff	encher_tanque@incremento,___xxtofl@val
  2450  001CFA  C0CF  F002         	movff	encher_tanque@incremento+1,___xxtofl@val+1
  2451  001CFE  6A03               	clrf	(___xxtofl@val+2)^0,c
  2452  001D00  6A04               	clrf	(___xxtofl@val+3)^0,c
  2453  001D02  0E00               	movlw	0
  2454  001D04  ECDB  F017         	call	___xxtofl
  2455  001D08  C001  F00F         	movff	?___xxtofl,___fladd@b
  2456  001D0C  C002  F010         	movff	?___xxtofl+1,___fladd@b+1
  2457  001D10  C003  F011         	movff	?___xxtofl+2,___fladd@b+2
  2458  001D14  C004  F012         	movff	?___xxtofl+3,___fladd@b+3
  2459  001D18  EC47  F009         	call	___fladd	;wreg free
  2460  001D1C  C00F  F023         	movff	?___fladd,___flge@ff2
  2461  001D20  C010  F024         	movff	?___fladd+1,___flge@ff2+1
  2462  001D24  C011  F025         	movff	?___fladd+2,___flge@ff2+2
  2463  001D28  C012  F026         	movff	?___fladd+3,___flge@ff2+3
  2464  001D2C  EC00  F01A         	call	___flge	;wreg free
  2465  001D30  B0D8               	btfsc	status,0,c
  2466  001D32  EF9D  F00E         	goto	u5521
  2467  001D36  EF9F  F00E         	goto	u5520
  2468  001D3A                     u5521:
  2469  001D3A  EFB6  F00E         	goto	l4575
  2470  001D3E                     u5520:
  2471  001D3E                     
  2472                           ;encher.c: 51:         lcd_cmd(0x01);
  2473  001D3E  0E01               	movlw	1
  2474  001D40  EC86  F020         	call	_lcd_cmd
  2475                           
  2476                           ;encher.c: 52:         lcd_cmd(0x80);
  2477  001D44  0E80               	movlw	128
  2478  001D46  EC86  F020         	call	_lcd_cmd
  2479  001D4A                     
  2480                           ;encher.c: 53:         lcd_str("ERRO: vol > MAX");
  2481  001D4A  0E29               	movlw	low STR_9
  2482  001D4C  6E08               	movwf	lcd_str@str^0,c
  2483  001D4E  0E06               	movlw	high STR_9
  2484  001D50  6E09               	movwf	(lcd_str@str+1)^0,c
  2485  001D52  EC9F  F01D         	call	_lcd_str	;wreg free
  2486  001D56                     
  2487                           ;encher.c: 54:         lcd_cmd(0xC0);
  2488  001D56  0EC0               	movlw	192
  2489  001D58  EC86  F020         	call	_lcd_cmd
  2490                           
  2491                           ;encher.c: 55:         lcd_str("RB1-Voltar");
  2492  001D5C  0E67               	movlw	low (STR_16+3)
  2493  001D5E  6E08               	movwf	lcd_str@str^0,c
  2494  001D60  0E06               	movlw	high (STR_16+3)
  2495  001D62  6E09               	movwf	(lcd_str@str+1)^0,c
  2496  001D64  EC9F  F01D         	call	_lcd_str	;wreg free
  2497                           
  2498                           ;encher.c: 61:     } else {
  2499  001D68  EF04  F010         	goto	l165
  2500  001D6C                     l4575:
  2501                           
  2502                           ;encher.c: 63:         *vol += incremento;
  2503  001D6C  C07E  FFD9         	movff	encher_tanque@vol,fsr2l
  2504  001D70  C07F  FFDA         	movff	encher_tanque@vol+1,fsr2h
  2505  001D74  CFDE F00F          	movff	postinc2,___fladd@b
  2506  001D78  CFDE F010          	movff	postinc2,___fladd@b+1
  2507  001D7C  CFDE F011          	movff	postinc2,___fladd@b+2
  2508  001D80  CFDE F012          	movff	postinc2,___fladd@b+3
  2509  001D84  C0CE  F001         	movff	encher_tanque@incremento,___xxtofl@val
  2510  001D88  C0CF  F002         	movff	encher_tanque@incremento+1,___xxtofl@val+1
  2511  001D8C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2512  001D8E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2513  001D90  0E00               	movlw	0
  2514  001D92  ECDB  F017         	call	___xxtofl
  2515  001D96  C001  F013         	movff	?___xxtofl,___fladd@a
  2516  001D9A  C002  F014         	movff	?___xxtofl+1,___fladd@a+1
  2517  001D9E  C003  F015         	movff	?___xxtofl+2,___fladd@a+2
  2518  001DA2  C004  F016         	movff	?___xxtofl+3,___fladd@a+3
  2519  001DA6  EC47  F009         	call	___fladd	;wreg free
  2520  001DAA  C07E  FFD9         	movff	encher_tanque@vol,fsr2l
  2521  001DAE  C07F  FFDA         	movff	encher_tanque@vol+1,fsr2h
  2522  001DB2  C00F  FFDE         	movff	?___fladd,postinc2
  2523  001DB6  C010  FFDE         	movff	?___fladd+1,postinc2
  2524  001DBA  C011  FFDE         	movff	?___fladd+2,postinc2
  2525  001DBE  C012  FFDE         	movff	?___fladd+3,postinc2
  2526  001DC2                     
  2527                           ;encher.c: 64:         char y[8];;encher.c: 65:         sprintf(y, "%.1f", *vol);
  2528  001DC2  0EBC               	movlw	low encher_tanque@y
  2529  001DC4  0100               	movlb	0	; () banked
  2530  001DC6  6F92               	movwf	sprintf@s& (0+255),b
  2531  001DC8  0E00               	movlw	high encher_tanque@y
  2532  001DCA  6F93               	movwf	(sprintf@s+1)& (0+255),b
  2533  001DCC  0ED7               	movlw	low STR_11
  2534  001DCE  6F94               	movwf	sprintf@fmt& (0+255),b
  2535  001DD0  0E06               	movlw	high STR_11
  2536  001DD2  6F95               	movwf	(sprintf@fmt+1)& (0+255),b
  2537  001DD4  C07E  FFD9         	movff	encher_tanque@vol,fsr2l
  2538  001DD8  C07F  FFDA         	movff	encher_tanque@vol+1,fsr2h
  2539  001DDC  CFDE F096          	movff	postinc2,?_sprintf+4
  2540  001DE0  CFDE F097          	movff	postinc2,?_sprintf+5
  2541  001DE4  CFDE F098          	movff	postinc2,?_sprintf+6
  2542  001DE8  CFDE F099          	movff	postinc2,?_sprintf+7
  2543  001DEC  EC6B  F01F         	call	_sprintf	;wreg free
  2544  001DF0                     
  2545                           ;encher.c: 66:         lcd_str(y);
  2546  001DF0  0EBC               	movlw	low encher_tanque@y
  2547  001DF2  6E08               	movwf	lcd_str@str^0,c
  2548  001DF4  0E00               	movlw	high encher_tanque@y
  2549  001DF6  6E09               	movwf	(lcd_str@str+1)^0,c
  2550  001DF8  EC9F  F01D         	call	_lcd_str	;wreg free
  2551  001DFC                     
  2552                           ;encher.c: 67:         lcd_str(" L");
  2553  001DFC  0EEF               	movlw	low STR_12
  2554  001DFE  6E08               	movwf	lcd_str@str^0,c
  2555  001E00  0E06               	movlw	high STR_12
  2556  001E02  6E09               	movwf	(lcd_str@str+1)^0,c
  2557  001E04  EC9F  F01D         	call	_lcd_str	;wreg free
  2558  001E08                     
  2559                           ;encher.c: 68:         atraso_ms(500);
  2560  001E08  0E01               	movlw	1
  2561  001E0A  6E02               	movwf	(atraso_ms@t+1)^0,c
  2562  001E0C  0EF4               	movlw	244
  2563  001E0E  6E01               	movwf	atraso_ms@t^0,c
  2564  001E10  EC4B  F01E         	call	_atraso_ms	;wreg free
  2565  001E14                     
  2566                           ;encher.c: 71:         int tempo = incremento / 2;
  2567  001E14  90D8               	bcf	status,0,c
  2568  001E16  0100               	movlb	0	; () banked
  2569  001E18  31CF               	rrcf	(encher_tanque@incremento+1)& (0+255),w,b
  2570  001E1A  6FA4               	movwf	??_encher_tanque& (0+255),b
  2571  001E1C  31CE               	rrcf	encher_tanque@incremento& (0+255),w,b
  2572  001E1E  6FD3               	movwf	encher_tanque@tempo& (0+255),b
  2573  001E20  C0A4  F0D4         	movff	??_encher_tanque,encher_tanque@tempo+1
  2574  001E24                     
  2575                           ; BSR set to: 0
  2576                           ;encher.c: 72:         int t1, t2;;encher.c: 73:         int i = 0, potencia = 100;
  2577  001E24  0E00               	movlw	0
  2578  001E26  6FC9               	movwf	(encher_tanque@i_132+1)& (0+255),b
  2579  001E28  0E00               	movlw	0
  2580  001E2A  6FC8               	movwf	encher_tanque@i_132& (0+255),b
  2581  001E2C                     
  2582                           ; BSR set to: 0
  2583                           ;encher.c: 74:         int numeros[10] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D,
  2584  001E2C  EE21  F064         	lfsr	2,encher_tanque@F355
  2585  001E30  EE10  F0A8         	lfsr	1,encher_tanque@numeros
  2586  001E34  0E13               	movlw	19
  2587  001E36                     u5531:
  2588  001E36  CFDB FFE3          	movff	plusw2,plusw1
  2589  001E3A  06E8               	decf	wreg,f,c
  2590  001E3C  E2FC               	bc	u5531
  2591  001E3E                     
  2592                           ; BSR set to: 0
  2593                           ;encher.c: 77:         (*(volatile __near unsigned char*)0xF92) = 0x00;
  2594  001E3E  0E00               	movlw	0
  2595  001E40  6E92               	movwf	146,c	;volatile
  2596  001E42                     
  2597                           ; BSR set to: 0
  2598                           ;encher.c: 79:         (((*(volatile __near unsigned char*)0xF80)) |= (1<<4));
  2599  001E42  8880               	bsf	128,4,c	;volatile
  2600  001E44                     
  2601                           ; BSR set to: 0
  2602                           ;encher.c: 83:         lcd_cmd(0x01);
  2603  001E44  0E01               	movlw	1
  2604  001E46  EC86  F020         	call	_lcd_cmd
  2605  001E4A                     
  2606                           ;encher.c: 84:         lcd_cmd(0x80);
  2607  001E4A  0E80               	movlw	128
  2608  001E4C  EC86  F020         	call	_lcd_cmd
  2609  001E50                     
  2610                           ;encher.c: 85:         lcd_str("Enchendo...");
  2611  001E50  0E8D               	movlw	low STR_13
  2612  001E52  6E08               	movwf	lcd_str@str^0,c
  2613  001E54  0E06               	movlw	high STR_13
  2614  001E56  6E09               	movwf	(lcd_str@str+1)^0,c
  2615  001E58  EC9F  F01D         	call	_lcd_str	;wreg free
  2616  001E5C                     
  2617                           ;encher.c: 86:         lcd_cmd(0xC0);
  2618  001E5C  0EC0               	movlw	192
  2619  001E5E  EC86  F020         	call	_lcd_cmd
  2620  001E62                     
  2621                           ;encher.c: 87:         lcd_str("Aguarde!");
  2622  001E62  0EC6               	movlw	low STR_14
  2623  001E64  6E08               	movwf	lcd_str@str^0,c
  2624  001E66  0E06               	movlw	high STR_14
  2625  001E68  6E09               	movwf	(lcd_str@str+1)^0,c
  2626  001E6A  EC9F  F01D         	call	_lcd_str	;wreg free
  2627  001E6E                     
  2628                           ;encher.c: 93:         pwmInit();
  2629  001E6E  ECC2  F020         	call	_pwmInit	;wreg free
  2630  001E72                     
  2631                           ;encher.c: 96:         t1 = tempo / 10;
  2632  001E72  C0D3  F007         	movff	encher_tanque@tempo,___awdiv@dividend
  2633  001E76  C0D4  F008         	movff	encher_tanque@tempo+1,___awdiv@dividend+1
  2634  001E7A  0E00               	movlw	0
  2635  001E7C  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2636  001E7E  0E0A               	movlw	10
  2637  001E80  6E09               	movwf	___awdiv@divisor^0,c
  2638  001E82  EC34  F01C         	call	___awdiv	;wreg free
  2639  001E86  C007  F0D0         	movff	?___awdiv,encher_tanque@t1
  2640  001E8A  C008  F0D1         	movff	?___awdiv+1,encher_tanque@t1+1
  2641  001E8E                     
  2642                           ;encher.c: 97:         t2 = tempo % 10;
  2643  001E8E  C0D3  F001         	movff	encher_tanque@tempo,___awmod@dividend
  2644  001E92  C0D4  F002         	movff	encher_tanque@tempo+1,___awmod@dividend+1
  2645  001E96  0E00               	movlw	0
  2646  001E98  6E04               	movwf	(___awmod@divisor+1)^0,c
  2647  001E9A  0E0A               	movlw	10
  2648  001E9C  6E03               	movwf	___awmod@divisor^0,c
  2649  001E9E  ECF2  F01C         	call	___awmod	;wreg free
  2650  001EA2  C001  F0D7         	movff	?___awmod,encher_tanque@t2
  2651  001EA6  C002  F0D8         	movff	?___awmod+1,encher_tanque@t2+1
  2652                           
  2653                           ;encher.c: 98:         while ((t1 != 0) || (t2 != 0)) {
  2654  001EAA  EFD8  F00F         	goto	l4645
  2655  001EAE                     l4613:
  2656                           
  2657                           ; BSR set to: 0
  2658                           ;encher.c: 99:             potencia = 100*(tempo-(t1*10)+t2)/tempo;
  2659  001EAE  C0D0  F001         	movff	encher_tanque@t1,___wmul@multiplier
  2660  001EB2  C0D1  F002         	movff	encher_tanque@t1+1,___wmul@multiplier+1
  2661  001EB6  0EFF               	movlw	255
  2662  001EB8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2663  001EBA  0EF6               	movlw	246
  2664  001EBC  6E03               	movwf	___wmul@multiplicand^0,c
  2665  001EBE  ECAF  F020         	call	___wmul	;wreg free
  2666  001EC2  0100               	movlb	0	; () banked
  2667  001EC4  51D3               	movf	encher_tanque@tempo& (0+255),w,b
  2668  001EC6  2601               	addwf	?___wmul^0,f,c
  2669  001EC8  51D4               	movf	(encher_tanque@tempo+1)& (0+255),w,b
  2670  001ECA  2202               	addwfc	(?___wmul+1)^0,f,c
  2671  001ECC  51D7               	movf	encher_tanque@t2& (0+255),w,b
  2672  001ECE  2401               	addwf	?___wmul^0,w,c
  2673  001ED0  6FC4               	movwf	_encher_tanque$1185& (0+255),b
  2674  001ED2  51D8               	movf	(encher_tanque@t2+1)& (0+255),w,b
  2675  001ED4  2002               	addwfc	(?___wmul+1)^0,w,c
  2676  001ED6  6FC5               	movwf	(_encher_tanque$1185+1)& (0+255),b
  2677                           
  2678                           ;encher.c: 99:             potencia = 100*(tempo-(t1*10)+t2)/tempo;
  2679  001ED8  C0C4  F001         	movff	_encher_tanque$1185,___wmul@multiplier
  2680  001EDC  C0C5  F002         	movff	_encher_tanque$1185+1,___wmul@multiplier+1
  2681  001EE0  0E00               	movlw	0
  2682  001EE2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2683  001EE4  0E64               	movlw	100
  2684  001EE6  6E03               	movwf	___wmul@multiplicand^0,c
  2685  001EE8  ECAF  F020         	call	___wmul	;wreg free
  2686  001EEC  C001  F007         	movff	?___wmul,___awdiv@dividend
  2687  001EF0  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  2688  001EF4  C0D3  F009         	movff	encher_tanque@tempo,___awdiv@divisor
  2689  001EF8  C0D4  F00A         	movff	encher_tanque@tempo+1,___awdiv@divisor+1
  2690  001EFC  EC34  F01C         	call	___awdiv	;wreg free
  2691  001F00  C007  F0C6         	movff	?___awdiv,encher_tanque@potencia
  2692  001F04  C008  F0C7         	movff	?___awdiv+1,encher_tanque@potencia+1
  2693                           
  2694                           ;encher.c: 100:             pwmSet1(potencia);
  2695  001F08  0100               	movlb	0	; () banked
  2696  001F0A  51C6               	movf	encher_tanque@potencia& (0+255),w,b
  2697  001F0C  EC15  F01E         	call	_pwmSet1
  2698  001F10                     
  2699                           ;encher.c: 101:             (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  2700  001F10  9A80               	bcf	128,5,c	;volatile
  2701  001F12                     
  2702                           ;encher.c: 102:             (((*(volatile __near unsigned char*)0xF80)) |= (1<<4));
  2703  001F12  8880               	bsf	128,4,c	;volatile
  2704  001F14                     
  2705                           ;encher.c: 103:             (*(volatile __near unsigned char*)0xF83) = numeros[t1];
  2706  001F14  90D8               	bcf	status,0,c
  2707  001F16  0100               	movlb	0	; () banked
  2708  001F18  35D0               	rlcf	encher_tanque@t1& (0+255),w,b
  2709  001F1A  6ED9               	movwf	fsr2l,c
  2710  001F1C  35D1               	rlcf	(encher_tanque@t1+1)& (0+255),w,b
  2711  001F1E  6EDA               	movwf	fsr2h,c
  2712  001F20  0EA8               	movlw	low encher_tanque@numeros
  2713  001F22  26D9               	addwf	fsr2l,f,c
  2714  001F24  0E00               	movlw	high encher_tanque@numeros
  2715  001F26  22DA               	addwfc	fsr2h,f,c
  2716  001F28  50DF               	movf	indf2,w,c
  2717  001F2A  6E83               	movwf	131,c	;volatile
  2718  001F2C                     
  2719                           ; BSR set to: 0
  2720                           ;encher.c: 104:             atraso_ms(5);
  2721  001F2C  0E00               	movlw	0
  2722  001F2E  6E02               	movwf	(atraso_ms@t+1)^0,c
  2723  001F30  0E05               	movlw	5
  2724  001F32  6E01               	movwf	atraso_ms@t^0,c
  2725  001F34  EC4B  F01E         	call	_atraso_ms	;wreg free
  2726  001F38                     
  2727                           ;encher.c: 105:             (((*(volatile __near unsigned char*)0xF80)) |= (1<<5));
  2728  001F38  8A80               	bsf	128,5,c	;volatile
  2729  001F3A                     
  2730                           ;encher.c: 106:             (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<4));
  2731  001F3A  9880               	bcf	128,4,c	;volatile
  2732  001F3C                     
  2733                           ;encher.c: 107:             (*(volatile __near unsigned char*)0xF83) = numeros[t2];
  2734  001F3C  90D8               	bcf	status,0,c
  2735  001F3E  0100               	movlb	0	; () banked
  2736  001F40  35D7               	rlcf	encher_tanque@t2& (0+255),w,b
  2737  001F42  6ED9               	movwf	fsr2l,c
  2738  001F44  35D8               	rlcf	(encher_tanque@t2+1)& (0+255),w,b
  2739  001F46  6EDA               	movwf	fsr2h,c
  2740  001F48  0EA8               	movlw	low encher_tanque@numeros
  2741  001F4A  26D9               	addwf	fsr2l,f,c
  2742  001F4C  0E00               	movlw	high encher_tanque@numeros
  2743  001F4E  22DA               	addwfc	fsr2h,f,c
  2744  001F50  50DF               	movf	indf2,w,c
  2745  001F52  6E83               	movwf	131,c	;volatile
  2746  001F54                     
  2747                           ; BSR set to: 0
  2748                           ;encher.c: 108:             atraso_ms(5);
  2749  001F54  0E00               	movlw	0
  2750  001F56  6E02               	movwf	(atraso_ms@t+1)^0,c
  2751  001F58  0E05               	movlw	5
  2752  001F5A  6E01               	movwf	atraso_ms@t^0,c
  2753  001F5C  EC4B  F01E         	call	_atraso_ms	;wreg free
  2754  001F60                     
  2755                           ;encher.c: 110:             if(i == 40) {
  2756  001F60  0E28               	movlw	40
  2757  001F62  0100               	movlb	0	; () banked
  2758  001F64  19C8               	xorwf	encher_tanque@i_132& (0+255),w,b
  2759  001F66  11C9               	iorwf	(encher_tanque@i_132+1)& (0+255),w,b
  2760  001F68  A4D8               	btfss	status,2,c
  2761  001F6A  EFB9  F00F         	goto	u5541
  2762  001F6E  EFBB  F00F         	goto	u5540
  2763  001F72                     u5541:
  2764  001F72  EFD6  F00F         	goto	l4643
  2765  001F76                     u5540:
  2766  001F76                     
  2767                           ; BSR set to: 0
  2768                           ;encher.c: 111:                 i = 0;
  2769  001F76  0E00               	movlw	0
  2770  001F78  6FC9               	movwf	(encher_tanque@i_132+1)& (0+255),b
  2771  001F7A  0E00               	movlw	0
  2772  001F7C  6FC8               	movwf	encher_tanque@i_132& (0+255),b
  2773  001F7E                     
  2774                           ; BSR set to: 0
  2775                           ;encher.c: 112:                 if (t2 == 0) {
  2776  001F7E  51D7               	movf	encher_tanque@t2& (0+255),w,b
  2777  001F80  11D8               	iorwf	(encher_tanque@t2+1)& (0+255),w,b
  2778  001F82  A4D8               	btfss	status,2,c
  2779  001F84  EFC6  F00F         	goto	u5551
  2780  001F88  EFC8  F00F         	goto	u5550
  2781  001F8C                     u5551:
  2782  001F8C  EFD1  F00F         	goto	l4641
  2783  001F90                     u5550:
  2784  001F90                     
  2785                           ; BSR set to: 0
  2786                           ;encher.c: 113:                     t1--;
  2787  001F90  07D0               	decf	encher_tanque@t1& (0+255),f,b
  2788  001F92  A0D8               	btfss	status,0,c
  2789  001F94  07D1               	decf	(encher_tanque@t1+1)& (0+255),f,b
  2790  001F96                     
  2791                           ; BSR set to: 0
  2792                           ;encher.c: 114:                     t2 = 9;
  2793  001F96  0E00               	movlw	0
  2794  001F98  6FD8               	movwf	(encher_tanque@t2+1)& (0+255),b
  2795  001F9A  0E09               	movlw	9
  2796  001F9C  6FD7               	movwf	encher_tanque@t2& (0+255),b
  2797                           
  2798                           ;encher.c: 115:                 } else {
  2799  001F9E  EFD8  F00F         	goto	l4645
  2800  001FA2                     l4641:
  2801                           
  2802                           ; BSR set to: 0
  2803                           ;encher.c: 116:                     t2--;
  2804  001FA2  07D7               	decf	encher_tanque@t2& (0+255),f,b
  2805  001FA4  A0D8               	btfss	status,0,c
  2806  001FA6  07D8               	decf	(encher_tanque@t2+1)& (0+255),f,b
  2807  001FA8  EFD8  F00F         	goto	l4645
  2808  001FAC                     l4643:
  2809                           
  2810                           ; BSR set to: 0
  2811                           ;encher.c: 119:                 i++;
  2812  001FAC  4BC8               	infsnz	encher_tanque@i_132& (0+255),f,b
  2813  001FAE  2BC9               	incf	(encher_tanque@i_132+1)& (0+255),f,b
  2814  001FB0                     l4645:
  2815                           
  2816                           ;encher.c: 98:         while ((t1 != 0) || (t2 != 0)) {
  2817  001FB0  0100               	movlb	0	; () banked
  2818  001FB2  51D0               	movf	encher_tanque@t1& (0+255),w,b
  2819  001FB4  11D1               	iorwf	(encher_tanque@t1+1)& (0+255),w,b
  2820  001FB6  A4D8               	btfss	status,2,c
  2821  001FB8  EFE0  F00F         	goto	u5561
  2822  001FBC  EFE2  F00F         	goto	u5560
  2823  001FC0                     u5561:
  2824  001FC0  EF57  F00F         	goto	l4613
  2825  001FC4                     u5560:
  2826  001FC4                     
  2827                           ; BSR set to: 0
  2828  001FC4  51D7               	movf	encher_tanque@t2& (0+255),w,b
  2829  001FC6  11D8               	iorwf	(encher_tanque@t2+1)& (0+255),w,b
  2830  001FC8  A4D8               	btfss	status,2,c
  2831  001FCA  EFE9  F00F         	goto	u5571
  2832  001FCE  EFEB  F00F         	goto	u5570
  2833  001FD2                     u5571:
  2834  001FD2  EF57  F00F         	goto	l4613
  2835  001FD6                     u5570:
  2836  001FD6                     
  2837                           ; BSR set to: 0
  2838                           ;encher.c: 122:         pwmSet1(0);
  2839  001FD6  0E00               	movlw	0
  2840  001FD8  EC15  F01E         	call	_pwmSet1
  2841  001FDC                     
  2842                           ;encher.c: 124:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  2843  001FDC  9A80               	bcf	128,5,c	;volatile
  2844  001FDE                     
  2845                           ;encher.c: 127:         lcd_cmd(0x01);
  2846  001FDE  0E01               	movlw	1
  2847  001FE0  EC86  F020         	call	_lcd_cmd
  2848  001FE4                     
  2849                           ;encher.c: 128:         lcd_cmd(0x80);
  2850  001FE4  0E80               	movlw	128
  2851  001FE6  EC86  F020         	call	_lcd_cmd
  2852  001FEA                     
  2853                           ;encher.c: 129:         lcd_str("    SUCESSO!");
  2854  001FEA  0E80               	movlw	low STR_15
  2855  001FEC  6E08               	movwf	lcd_str@str^0,c
  2856  001FEE  0E06               	movlw	high STR_15
  2857  001FF0  6E09               	movwf	(lcd_str@str+1)^0,c
  2858  001FF2  EC9F  F01D         	call	_lcd_str	;wreg free
  2859  001FF6                     
  2860                           ;encher.c: 130:         lcd_cmd(0xC0);
  2861  001FF6  0EC0               	movlw	192
  2862  001FF8  EC86  F020         	call	_lcd_cmd
  2863  001FFC                     
  2864                           ;encher.c: 131:         lcd_str("   RB1-Voltar");
  2865  001FFC  0E64               	movlw	low STR_16
  2866  001FFE  6E08               	movwf	lcd_str@str^0,c
  2867  002000  0E06               	movlw	high STR_16
  2868  002002  6E09               	movwf	(lcd_str@str+1)^0,c
  2869  002004  EC9F  F01D         	call	_lcd_str	;wreg free
  2870  002008                     l165:
  2871                           
  2872                           ;encher.c: 148:     while(((((*(volatile __near unsigned char*)0xF81)) & (1<<1)))){
  2873  002008  B281               	btfsc	129,1,c	;volatile
  2874  00200A  EF09  F010         	goto	u5581
  2875  00200E  EF0B  F010         	goto	u5580
  2876  002012                     u5581:
  2877  002012  EF04  F010         	goto	l165
  2878  002016                     u5580:
  2879  002016  0012               	return		;funcret
  2880  002018                     __end_of_encher_tanque:
  2881                           	callstack 0
  2882                           
  2883 ;; *************** function _tc_tecla *****************
  2884 ;; Defined at:
  2885 ;;		line 14 in file "teclado.c"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;  timeout         2    6[COMRAM] unsigned int 
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;  to              2    8[COMRAM] unsigned int 
  2890 ;;  i               1   12[COMRAM] unsigned char 
  2891 ;;  ret             1   11[COMRAM] unsigned char 
  2892 ;;  tmp             1   10[COMRAM] unsigned char 
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  1    wreg      unsigned char 
  2895 ;; Registers used:
  2896 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2902 ;;      Params:         2       0       0       0       0       0       0
  2903 ;;      Locals:         5       0       0       0       0       0       0
  2904 ;;      Temps:          0       0       0       0       0       0       0
  2905 ;;      Totals:         7       0       0       0       0       0       0
  2906 ;;Total ram usage:        7 bytes
  2907 ;; Hardware stack levels used:    1
  2908 ;; Hardware stack levels required when called:    1
  2909 ;; This function calls:
  2910 ;;		_atraso_ms
  2911 ;; This function is called by:
  2912 ;;		_encher_tanque
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916                           	psect	text5
  2917  002C36                     __ptext5:
  2918                           	callstack 0
  2919  002C36                     _tc_tecla:
  2920                           	callstack 28
  2921  002C36                     
  2922                           ;teclado.c: 15:     unsigned int to = 0;
  2923  002C36  0E00               	movlw	0
  2924  002C38  6E0A               	movwf	(tc_tecla@to+1)^0,c
  2925  002C3A  0E00               	movlw	0
  2926  002C3C  6E09               	movwf	tc_tecla@to^0,c
  2927                           
  2928                           ;teclado.c: 16:     unsigned char i;;teclado.c: 17:     unsigned char ret = 0;
  2929  002C3E  0E00               	movlw	0
  2930  002C40  6E0C               	movwf	tc_tecla@ret^0,c
  2931  002C42                     
  2932                           ;teclado.c: 18:     unsigned char tmp = (*(volatile __near unsigned char*)0xF81);
  2933  002C42  CF81 F00B          	movff	3969,tc_tecla@tmp	;volatile
  2934                           
  2935                           ;teclado.c: 21:     while (((to < timeout) || (!timeout))&&(!ret)) {
  2936  002C46  EFCC  F016         	goto	l4405
  2937  002C4A                     l4353:
  2938                           
  2939                           ;teclado.c: 22:         for (i = 0; i < 3; i++) {
  2940  002C4A  0E00               	movlw	0
  2941  002C4C  6E0D               	movwf	tc_tecla@i^0,c
  2942  002C4E                     l4359:
  2943                           
  2944                           ;teclado.c: 23:             (*(volatile __near unsigned char*)0xF81) |= ~linha[i];
  2945  002C4E  0E01               	movlw	low _linha
  2946  002C50  240D               	addwf	tc_tecla@i^0,w,c
  2947  002C52  6EF6               	movwf	tblptrl,c
  2948  002C54  6AF7               	clrf	tblptrh,c
  2949  002C56  0E06               	movlw	high _linha
  2950  002C58  22F7               	addwfc	tblptrh,f,c
  2951  002C5A                     	if	0	;There are less than 3 active tblptr bytes
  2952  002C5A                     	endif
  2953  002C5A  0008               	tblrd		*
  2954  002C5C  50F5               	movf	tablat,w,c
  2955  002C5E  0AFF               	xorlw	255
  2956  002C60  1281               	iorwf	129,f,c	;volatile
  2957  002C62                     
  2958                           ;teclado.c: 24:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<3))) 
      +                          {
  2959  002C62  B683               	btfsc	131,3,c	;volatile
  2960  002C64  EF36  F016         	goto	u5201
  2961  002C68  EF38  F016         	goto	u5200
  2962  002C6C                     u5201:
  2963  002C6C  EF50  F016         	goto	l45
  2964  002C70                     u5200:
  2965  002C70                     
  2966                           ;teclado.c: 25:                 atraso_ms(atraso);
  2967  002C70  0E00               	movlw	0
  2968  002C72  6E02               	movwf	(atraso_ms@t+1)^0,c
  2969  002C74  0E0F               	movlw	15
  2970  002C76  6E01               	movwf	atraso_ms@t^0,c
  2971  002C78  EC4B  F01E         	call	_atraso_ms	;wreg free
  2972  002C7C                     
  2973                           ;teclado.c: 26:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<3
      +                          ))) {
  2974  002C7C  B683               	btfsc	131,3,c	;volatile
  2975  002C7E  EF43  F016         	goto	u5211
  2976  002C82  EF45  F016         	goto	u5210
  2977  002C86                     u5211:
  2978  002C86  EF50  F016         	goto	l45
  2979  002C8A                     u5210:
  2980  002C8A                     l47:
  2981  002C8A  A683               	btfss	131,3,c	;volatile
  2982  002C8C  EF4A  F016         	goto	u5221
  2983  002C90  EF4C  F016         	goto	u5220
  2984  002C94                     u5221:
  2985  002C94  EF45  F016         	goto	l47
  2986  002C98                     u5220:
  2987  002C98                     
  2988                           ;teclado.c: 28:                     ret = 1 + i;
  2989  002C98  280D               	incf	tc_tecla@i^0,w,c
  2990  002C9A  6E0C               	movwf	tc_tecla@ret^0,c
  2991                           
  2992                           ;teclado.c: 29:                     break;
  2993  002C9C  EFC2  F016         	goto	l4401
  2994  002CA0                     l45:
  2995                           
  2996                           ;teclado.c: 32:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<2))) 
      +                          {
  2997  002CA0  B483               	btfsc	131,2,c	;volatile
  2998  002CA2  EF55  F016         	goto	u5231
  2999  002CA6  EF57  F016         	goto	u5230
  3000  002CAA                     u5231:
  3001  002CAA  EF70  F016         	goto	l50
  3002  002CAE                     u5230:
  3003  002CAE                     
  3004                           ;teclado.c: 33:                 atraso_ms(atraso);
  3005  002CAE  0E00               	movlw	0
  3006  002CB0  6E02               	movwf	(atraso_ms@t+1)^0,c
  3007  002CB2  0E0F               	movlw	15
  3008  002CB4  6E01               	movwf	atraso_ms@t^0,c
  3009  002CB6  EC4B  F01E         	call	_atraso_ms	;wreg free
  3010  002CBA                     
  3011                           ;teclado.c: 34:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<2
      +                          ))) {
  3012  002CBA  B483               	btfsc	131,2,c	;volatile
  3013  002CBC  EF62  F016         	goto	u5241
  3014  002CC0  EF64  F016         	goto	u5240
  3015  002CC4                     u5241:
  3016  002CC4  EF70  F016         	goto	l50
  3017  002CC8                     u5240:
  3018  002CC8                     l52:
  3019  002CC8  A483               	btfss	131,2,c	;volatile
  3020  002CCA  EF69  F016         	goto	u5251
  3021  002CCE  EF6B  F016         	goto	u5250
  3022  002CD2                     u5251:
  3023  002CD2  EF64  F016         	goto	l52
  3024  002CD6                     u5250:
  3025  002CD6                     
  3026                           ;teclado.c: 36:                     ret = 4 + i;
  3027  002CD6  500D               	movf	tc_tecla@i^0,w,c
  3028  002CD8  0F04               	addlw	4
  3029  002CDA  6E0C               	movwf	tc_tecla@ret^0,c
  3030                           
  3031                           ;teclado.c: 37:                     break;
  3032  002CDC  EFC2  F016         	goto	l4401
  3033  002CE0                     l50:
  3034                           
  3035                           ;teclado.c: 40:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<1))) 
      +                          {
  3036  002CE0  B283               	btfsc	131,1,c	;volatile
  3037  002CE2  EF75  F016         	goto	u5261
  3038  002CE6  EF77  F016         	goto	u5260
  3039  002CEA                     u5261:
  3040  002CEA  EF90  F016         	goto	l55
  3041  002CEE                     u5260:
  3042  002CEE                     
  3043                           ;teclado.c: 41:                 atraso_ms(atraso);
  3044  002CEE  0E00               	movlw	0
  3045  002CF0  6E02               	movwf	(atraso_ms@t+1)^0,c
  3046  002CF2  0E0F               	movlw	15
  3047  002CF4  6E01               	movwf	atraso_ms@t^0,c
  3048  002CF6  EC4B  F01E         	call	_atraso_ms	;wreg free
  3049  002CFA                     
  3050                           ;teclado.c: 42:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<1
      +                          ))) {
  3051  002CFA  B283               	btfsc	131,1,c	;volatile
  3052  002CFC  EF82  F016         	goto	u5271
  3053  002D00  EF84  F016         	goto	u5270
  3054  002D04                     u5271:
  3055  002D04  EF90  F016         	goto	l55
  3056  002D08                     u5270:
  3057  002D08                     l57:
  3058  002D08  A283               	btfss	131,1,c	;volatile
  3059  002D0A  EF89  F016         	goto	u5281
  3060  002D0E  EF8B  F016         	goto	u5280
  3061  002D12                     u5281:
  3062  002D12  EF84  F016         	goto	l57
  3063  002D16                     u5280:
  3064  002D16                     
  3065                           ;teclado.c: 44:                     ret = 7 + i;
  3066  002D16  500D               	movf	tc_tecla@i^0,w,c
  3067  002D18  0F07               	addlw	7
  3068  002D1A  6E0C               	movwf	tc_tecla@ret^0,c
  3069                           
  3070                           ;teclado.c: 45:                     break;
  3071  002D1C  EFC2  F016         	goto	l4401
  3072  002D20                     l55:
  3073                           
  3074                           ;teclado.c: 48:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<0))) 
      +                          {
  3075  002D20  B083               	btfsc	131,0,c	;volatile
  3076  002D22  EF95  F016         	goto	u5291
  3077  002D26  EF97  F016         	goto	u5290
  3078  002D2A                     u5291:
  3079  002D2A  EFB0  F016         	goto	l4395
  3080  002D2E                     u5290:
  3081  002D2E                     
  3082                           ;teclado.c: 49:                 atraso_ms(atraso);
  3083  002D2E  0E00               	movlw	0
  3084  002D30  6E02               	movwf	(atraso_ms@t+1)^0,c
  3085  002D32  0E0F               	movlw	15
  3086  002D34  6E01               	movwf	atraso_ms@t^0,c
  3087  002D36  EC4B  F01E         	call	_atraso_ms	;wreg free
  3088  002D3A                     
  3089                           ;teclado.c: 50:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<0
      +                          ))) {
  3090  002D3A  B083               	btfsc	131,0,c	;volatile
  3091  002D3C  EFA2  F016         	goto	u5301
  3092  002D40  EFA4  F016         	goto	u5300
  3093  002D44                     u5301:
  3094  002D44  EFB0  F016         	goto	l4395
  3095  002D48                     u5300:
  3096  002D48                     l62:
  3097  002D48  A083               	btfss	131,0,c	;volatile
  3098  002D4A  EFA9  F016         	goto	u5311
  3099  002D4E  EFAB  F016         	goto	u5310
  3100  002D52                     u5311:
  3101  002D52  EFA4  F016         	goto	l62
  3102  002D56                     u5310:
  3103  002D56                     
  3104                           ;teclado.c: 52:                     ret = 10 + i;
  3105  002D56  500D               	movf	tc_tecla@i^0,w,c
  3106  002D58  0F0A               	addlw	10
  3107  002D5A  6E0C               	movwf	tc_tecla@ret^0,c
  3108                           
  3109                           ;teclado.c: 53:                     break;
  3110  002D5C  EFC2  F016         	goto	l4401
  3111  002D60                     l4395:
  3112                           
  3113                           ;teclado.c: 56:             (*(volatile __near unsigned char*)0xF81) &= linha[i];
  3114  002D60  0E01               	movlw	low _linha
  3115  002D62  240D               	addwf	tc_tecla@i^0,w,c
  3116  002D64  6EF6               	movwf	tblptrl,c
  3117  002D66  6AF7               	clrf	tblptrh,c
  3118  002D68  0E06               	movlw	high _linha
  3119  002D6A  22F7               	addwfc	tblptrh,f,c
  3120  002D6C                     	if	0	;There are less than 3 active tblptr bytes
  3121  002D6C                     	endif
  3122  002D6C  0008               	tblrd		*
  3123  002D6E  50F5               	movf	tablat,w,c
  3124  002D70  1681               	andwf	129,f,c	;volatile
  3125  002D72                     
  3126                           ;teclado.c: 57:         };
  3127  002D72  2A0D               	incf	tc_tecla@i^0,f,c
  3128  002D74  0E02               	movlw	2
  3129  002D76  640D               	cpfsgt	tc_tecla@i^0,c
  3130  002D78  EFC0  F016         	goto	u5321
  3131  002D7C  EFC2  F016         	goto	u5320
  3132  002D80                     u5321:
  3133  002D80  EF27  F016         	goto	l4359
  3134  002D84                     u5320:
  3135  002D84                     l4401:
  3136                           
  3137                           ;teclado.c: 58:         atraso_ms(atraso_min);
  3138  002D84  0E00               	movlw	0
  3139  002D86  6E02               	movwf	(atraso_ms@t+1)^0,c
  3140  002D88  0E05               	movlw	5
  3141  002D8A  6E01               	movwf	atraso_ms@t^0,c
  3142  002D8C  EC4B  F01E         	call	_atraso_ms	;wreg free
  3143  002D90                     
  3144                           ;teclado.c: 59:         to += 5;
  3145  002D90  0E05               	movlw	5
  3146  002D92  2609               	addwf	tc_tecla@to^0,f,c
  3147  002D94  0E00               	movlw	0
  3148  002D96  220A               	addwfc	(tc_tecla@to+1)^0,f,c
  3149  002D98                     l4405:
  3150                           
  3151                           ;teclado.c: 21:     while (((to < timeout) || (!timeout))&&(!ret)) {
  3152  002D98  5007               	movf	tc_tecla@timeout^0,w,c
  3153  002D9A  5C09               	subwf	tc_tecla@to^0,w,c
  3154  002D9C  5008               	movf	(tc_tecla@timeout+1)^0,w,c
  3155  002D9E  580A               	subwfb	(tc_tecla@to+1)^0,w,c
  3156  002DA0  A0D8               	btfss	status,0,c
  3157  002DA2  EFD5  F016         	goto	u5331
  3158  002DA6  EFD7  F016         	goto	u5330
  3159  002DAA                     u5331:
  3160  002DAA  EFE0  F016         	goto	l4409
  3161  002DAE                     u5330:
  3162  002DAE  5007               	movf	tc_tecla@timeout^0,w,c
  3163  002DB0  1008               	iorwf	(tc_tecla@timeout+1)^0,w,c
  3164  002DB2  A4D8               	btfss	status,2,c
  3165  002DB4  EFDE  F016         	goto	u5341
  3166  002DB8  EFE0  F016         	goto	u5340
  3167  002DBC                     u5341:
  3168  002DBC  EFE8  F016         	goto	l4411
  3169  002DC0                     u5340:
  3170  002DC0                     l4409:
  3171  002DC0  500C               	movf	tc_tecla@ret^0,w,c
  3172  002DC2  B4D8               	btfsc	status,2,c
  3173  002DC4  EFE6  F016         	goto	u5351
  3174  002DC8  EFE8  F016         	goto	u5350
  3175  002DCC                     u5351:
  3176  002DCC  EF25  F016         	goto	l4353
  3177  002DD0                     u5350:
  3178  002DD0                     l4411:
  3179                           
  3180                           ;teclado.c: 62:     if (!ret)ret = 255;
  3181  002DD0  500C               	movf	tc_tecla@ret^0,w,c
  3182  002DD2  A4D8               	btfss	status,2,c
  3183  002DD4  EFEE  F016         	goto	u5361
  3184  002DD8  EFF0  F016         	goto	u5360
  3185  002DDC                     u5361:
  3186  002DDC  EFF1  F016         	goto	l4415
  3187  002DE0                     u5360:
  3188  002DE0  680C               	setf	tc_tecla@ret^0,c
  3189  002DE2                     l4415:
  3190                           
  3191                           ;teclado.c: 63:     if (ret == 11)ret = 0;
  3192  002DE2  0E0B               	movlw	11
  3193  002DE4  180C               	xorwf	tc_tecla@ret^0,w,c
  3194  002DE6  A4D8               	btfss	status,2,c
  3195  002DE8  EFF8  F016         	goto	u5371
  3196  002DEC  EFFA  F016         	goto	u5370
  3197  002DF0                     u5371:
  3198  002DF0  EFFC  F016         	goto	l4419
  3199  002DF4                     u5370:
  3200  002DF4  0E00               	movlw	0
  3201  002DF6  6E0C               	movwf	tc_tecla@ret^0,c
  3202  002DF8                     l4419:
  3203                           
  3204                           ;teclado.c: 64:     (*(volatile __near unsigned char*)0xF81) = tmp;
  3205  002DF8  C00B  FF81         	movff	tc_tecla@tmp,3969	;volatile
  3206                           
  3207                           ;teclado.c: 65:     return ret;
  3208  002DFC  500C               	movf	tc_tecla@ret^0,w,c
  3209  002DFE  0012               	return		;funcret
  3210  002E00                     __end_of_tc_tecla:
  3211                           	callstack 0
  3212                           
  3213 ;; *************** function _sprintf *****************
  3214 ;; Defined at:
  3215 ;;		line 9 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;  s               2   18[BANK0 ] PTR unsigned char 
  3218 ;;		 -> esvaziar_tanque@y(8), ver_quantidade@y(8), encher_tanque@y(8), 
  3219 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
  3220 ;;		 -> STR_25(5), STR_17(5), STR_11(5), 
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;  f               6   30[BANK0 ] struct _IO_FILE
  3223 ;;  ap              2   28[BANK0 ] PTR void [1]
  3224 ;;		 -> ?_sprintf(2), 
  3225 ;;  ret             2    0        int 
  3226 ;; Return value:  Size  Location     Type
  3227 ;;                  2   18[BANK0 ] int 
  3228 ;; Registers used:
  3229 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3235 ;;      Params:         0       8       0       0       0       0       0
  3236 ;;      Locals:         0      10       0       0       0       0       0
  3237 ;;      Temps:          0       0       0       0       0       0       0
  3238 ;;      Totals:         0      18       0       0       0       0       0
  3239 ;;Total ram usage:       18 bytes
  3240 ;; Hardware stack levels used:    1
  3241 ;; Hardware stack levels required when called:    7
  3242 ;; This function calls:
  3243 ;;		_vfprintf
  3244 ;; This function is called by:
  3245 ;;		_encher_tanque
  3246 ;;		_ver_quantidade
  3247 ;;		_esvaziar_tanque
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251                           	psect	text6
  3252  003ED6                     __ptext6:
  3253                           	callstack 0
  3254  003ED6                     _sprintf:
  3255                           	callstack 22
  3256  003ED6  0E96               	movlw	low (?_sprintf+4)
  3257  003ED8  0100               	movlb	0	; () banked
  3258  003EDA  6F9C               	movwf	sprintf@ap& (0+255),b
  3259  003EDC  0E00               	movlw	high (?_sprintf+4)
  3260  003EDE  6F9D               	movwf	(sprintf@ap+1)& (0+255),b
  3261  003EE0  C092  F09E         	movff	sprintf@s,sprintf@f
  3262  003EE4  C093  F09F         	movff	sprintf@s+1,sprintf@f+1
  3263  003EE8                     
  3264                           ; BSR set to: 0
  3265  003EE8  0E00               	movlw	0
  3266  003EEA  6FA1               	movwf	(sprintf@f+3)& (0+255),b
  3267  003EEC  0E00               	movlw	0
  3268  003EEE  6FA0               	movwf	(sprintf@f+2)& (0+255),b
  3269  003EF0                     
  3270                           ; BSR set to: 0
  3271  003EF0  0E00               	movlw	0
  3272  003EF2  6FA3               	movwf	(sprintf@f+5)& (0+255),b
  3273  003EF4  0E00               	movlw	0
  3274  003EF6  6FA2               	movwf	(sprintf@f+4)& (0+255),b
  3275  003EF8                     
  3276                           ; BSR set to: 0
  3277  003EF8  0E9E               	movlw	low sprintf@f
  3278  003EFA  6F8C               	movwf	vfprintf@fp& (0+255),b
  3279  003EFC  0E00               	movlw	high sprintf@f
  3280  003EFE  6F8D               	movwf	(vfprintf@fp+1)& (0+255),b
  3281  003F00  C094  F08E         	movff	sprintf@fmt,vfprintf@fmt
  3282  003F04  C095  F08F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3283  003F08  0E9C               	movlw	low sprintf@ap
  3284  003F0A  6F90               	movwf	vfprintf@ap& (0+255),b
  3285  003F0C  0E00               	movlw	high sprintf@ap
  3286  003F0E  6F91               	movwf	(vfprintf@ap+1)& (0+255),b
  3287  003F10  ECAE  F01E         	call	_vfprintf	;wreg free
  3288  003F14  0100               	movlb	0	; () banked
  3289  003F16  51A0               	movf	(sprintf@f+2)& (0+255),w,b
  3290  003F18  2592               	addwf	sprintf@s& (0+255),w,b
  3291  003F1A  6ED9               	movwf	fsr2l,c
  3292  003F1C  51A1               	movf	(sprintf@f+3)& (0+255),w,b
  3293  003F1E  2193               	addwfc	(sprintf@s+1)& (0+255),w,b
  3294  003F20  6EDA               	movwf	fsr2h,c
  3295  003F22  0E00               	movlw	0
  3296  003F24  6EDF               	movwf	indf2,c
  3297  003F26                     
  3298                           ; BSR set to: 0
  3299  003F26  0012               	return		;funcret
  3300  003F28                     __end_of_sprintf:
  3301                           	callstack 0
  3302                           
  3303 ;; *************** function _vfprintf *****************
  3304 ;; Defined at:
  3305 ;;		line 1368 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3306 ;; Parameters:    Size  Location     Type
  3307 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  3308 ;;		 -> sprintf@f(6), 
  3309 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  3310 ;;		 -> STR_25(5), STR_17(5), STR_11(5), 
  3311 ;;  ap              2   16[BANK0 ] PTR PTR void 
  3312 ;;		 -> sprintf@ap(2), 
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;  cfmt            2  123[COMRAM] PTR unsigned char 
  3315 ;;		 -> STR_25(5), STR_17(5), STR_11(5), 
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  2   12[BANK0 ] int 
  3318 ;; Registers used:
  3319 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3325 ;;      Params:         0       6       0       0       0       0       0
  3326 ;;      Locals:         2       0       0       0       0       0       0
  3327 ;;      Temps:          0       0       0       0       0       0       0
  3328 ;;      Totals:         2       6       0       0       0       0       0
  3329 ;;Total ram usage:        8 bytes
  3330 ;; Hardware stack levels used:    1
  3331 ;; Hardware stack levels required when called:    6
  3332 ;; This function calls:
  3333 ;;		_vfpfcnvrt
  3334 ;; This function is called by:
  3335 ;;		_sprintf
  3336 ;; This function uses a non-reentrant model
  3337 ;;
  3338                           
  3339                           	psect	text7
  3340  003D5C                     __ptext7:
  3341                           	callstack 0
  3342  003D5C                     _vfprintf:
  3343                           	callstack 22
  3344  003D5C                     
  3345                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprintf(FIL
      +                          E *fp, const char *fmt, va_list ap);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1369: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 13
      +                          71:     char *cfmt;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 137
      +                          3:     cfmt = (char *)fmt;
  3346  003D5C  C08E  F07C         	movff	vfprintf@fmt,vfprintf@cfmt
  3347  003D60  C08F  F07D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3348  003D64                     
  3349                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 0;
  3350  003D64  0E00               	movlw	0
  3351  003D66  0100               	movlb	0	; () banked
  3352  003D68  6FE2               	movwf	(_nout+1)& (0+255),b
  3353  003D6A  0E00               	movlw	0
  3354  003D6C  6FE1               	movwf	_nout& (0+255),b
  3355                           
  3356                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt
      +                          ) {
  3357  003D6E  EFCC  F01E         	goto	l4325
  3358  003D72                     l4323:
  3359                           
  3360                           ; BSR set to: 0
  3361                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nout += 
      +                          vfpfcnvrt(fp, &cfmt, ap);
  3362  003D72  C08C  F072         	movff	vfprintf@fp,vfpfcnvrt@fp
  3363  003D76  C08D  F073         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3364  003D7A  0E7C               	movlw	low vfprintf@cfmt
  3365  003D7C  6E74               	movwf	vfpfcnvrt@fmt^0,c
  3366  003D7E  0E00               	movlw	high vfprintf@cfmt
  3367  003D80  6E75               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3368  003D82  C090  F076         	movff	vfprintf@ap,vfpfcnvrt@ap
  3369  003D86  C091  F077         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3370  003D8A  ECA7  F00B         	call	_vfpfcnvrt	;wreg free
  3371  003D8E  5072               	movf	?_vfpfcnvrt^0,w,c
  3372  003D90  0100               	movlb	0	; () banked
  3373  003D92  27E1               	addwf	_nout& (0+255),f,b
  3374  003D94  5073               	movf	(?_vfpfcnvrt+1)^0,w,c
  3375  003D96  23E2               	addwfc	(_nout+1)& (0+255),f,b
  3376  003D98                     l4325:
  3377                           
  3378                           ; BSR set to: 0
  3379                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt
      +                          ) {
  3380  003D98  C07C  FFF6         	movff	vfprintf@cfmt,tblptrl
  3381  003D9C  C07D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3382  003DA0                     	if	0	;tblptru may be non-zero
  3383  003DA0                     	endif
  3384  003DA0                     	if	0	;tblptru may be non-zero
  3385  003DA0                     	endif
  3386  003DA0  0008               	tblrd		*
  3387  003DA2  50F5               	movf	tablat,w,c
  3388  003DA4  0900               	iorlw	0
  3389  003DA6  A4D8               	btfss	status,2,c
  3390  003DA8  EFD8  F01E         	goto	u5161
  3391  003DAC  EFDA  F01E         	goto	u5160
  3392  003DB0                     u5161:
  3393  003DB0  EFB9  F01E         	goto	l4323
  3394  003DB4                     u5160:
  3395  003DB4                     
  3396                           ; BSR set to: 0
  3397                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return nout;
  3398  003DB4  C0E1  F08C         	movff	_nout,?_vfprintf
  3399  003DB8  C0E2  F08D         	movff	_nout+1,?_vfprintf+1
  3400  003DBC                     
  3401                           ; BSR set to: 0
  3402  003DBC  0012               	return		;funcret
  3403  003DBE                     __end_of_vfprintf:
  3404                           	callstack 0
  3405                           
  3406 ;; *************** function _vfpfcnvrt *****************
  3407 ;; Defined at:
  3408 ;;		line 670 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;  fp              2  113[COMRAM] PTR struct _IO_FILE
  3411 ;;		 -> sprintf@f(6), 
  3412 ;;  fmt             2  115[COMRAM] PTR PTR unsigned char 
  3413 ;;		 -> vfprintf@cfmt(2), 
  3414 ;;  ap              2  117[COMRAM] PTR PTR void 
  3415 ;;		 -> sprintf@ap(2), 
  3416 ;; Auto vars:     Size  Location     Type
  3417 ;;  llu             8    0        unsigned long long 
  3418 ;;  ll              8    0        long long 
  3419 ;;  f               4    4[BANK0 ] long long 
  3420 ;;  ct              3    8[BANK0 ] unsigned char [3]
  3421 ;;  vp              3    0        PTR void 
  3422 ;;  cp              3    0        PTR unsigned char 
  3423 ;;  i               2    0        int 
  3424 ;;  done            2    0        int 
  3425 ;;  c               1   11[BANK0 ] unsigned char 
  3426 ;; Return value:  Size  Location     Type
  3427 ;;                  2  113[COMRAM] int 
  3428 ;; Registers used:
  3429 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3430 ;; Tracked objects:
  3431 ;;		On entry : 0/0
  3432 ;;		On exit  : 0/0
  3433 ;;		Unchanged: 0/0
  3434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3435 ;;      Params:         6       0       0       0       0       0       0
  3436 ;;      Locals:         0      12       0       0       0       0       0
  3437 ;;      Temps:          4       0       0       0       0       0       0
  3438 ;;      Totals:        10      12       0       0       0       0       0
  3439 ;;Total ram usage:       22 bytes
  3440 ;; Hardware stack levels used:    1
  3441 ;; Hardware stack levels required when called:    5
  3442 ;; This function calls:
  3443 ;;		_atoi
  3444 ;;		_efgtoa
  3445 ;;		_fputc
  3446 ;;		_isdigit
  3447 ;;		_isupper
  3448 ;;		_strncmp
  3449 ;;		_tolower
  3450 ;; This function is called by:
  3451 ;;		_vfprintf
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455                           	psect	text8
  3456  00174E                     __ptext8:
  3457                           	callstack 0
  3458  00174E                     _vfpfcnvrt:
  3459                           	callstack 22
  3460  00174E                     
  3461                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int vfpfcn
      +                          vrt(FILE *fp, char *fmt[], va_list ap);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\c
      +                          ommon\doprnt.c: 671: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          672:     char c, *cp, ct[3];;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\dopr
      +                          nt.c: 673:     int done, i;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 674:     long long ll;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 675:     unsigned long long llu;
  3462  00174E  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3463  001752  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3464  001756  CFDE FFF6          	movff	postinc2,tblptrl
  3465  00175A  CFDD FFF7          	movff	postdec2,tblptrh
  3466  00175E                     	if	0	;tblptru may be non-zero
  3467  00175E                     	endif
  3468  00175E                     	if	0	;tblptru may be non-zero
  3469  00175E                     	endif
  3470  00175E  0008               	tblrd		*
  3471  001760  50F5               	movf	tablat,w,c
  3472  001762  0A25               	xorlw	37
  3473  001764  A4D8               	btfss	status,2,c
  3474  001766  EFB7  F00B         	goto	u4991
  3475  00176A  EFB9  F00B         	goto	u4990
  3476  00176E                     u4991:
  3477  00176E  EFC0  F00D         	goto	l4275
  3478  001772                     u4990:
  3479  001772                     
  3480                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*fmt;
  3481  001772  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3482  001776  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3483  00177A  2ADE               	incf	postinc2,f,c
  3484  00177C  0E00               	movlw	0
  3485  00177E  22DD               	addwfc	postdec2,f,c
  3486  001780                     
  3487                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flags = w
      +                          idth = 0;
  3488  001780  0E00               	movlw	0
  3489  001782  0100               	movlb	0	; () banked
  3490  001784  6FE4               	movwf	(_width+1)& (0+255),b
  3491  001786  0E00               	movlw	0
  3492  001788  6FE3               	movwf	_width& (0+255),b
  3493  00178A  C0E3  F0E7         	movff	_width,_flags
  3494  00178E  C0E4  F0E8         	movff	_width+1,_flags+1
  3495  001792                     
  3496                           ; BSR set to: 0
  3497                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec = -1
      +                          ;
  3498  001792  69E5               	setf	_prec& (0+255),b
  3499  001794  69E6               	setf	(_prec+1)& (0+255),b
  3500  001796                     
  3501                           ; BSR set to: 0
  3502                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if ((*fmt
      +                          )[0] == '.') {
  3503  001796  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3504  00179A  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3505  00179E  CFDE FFF6          	movff	postinc2,tblptrl
  3506  0017A2  CFDD FFF7          	movff	postdec2,tblptrh
  3507  0017A6                     	if	0	;tblptru may be non-zero
  3508  0017A6                     	endif
  3509  0017A6                     	if	0	;tblptru may be non-zero
  3510  0017A6                     	endif
  3511  0017A6  0008               	tblrd		*
  3512  0017A8  50F5               	movf	tablat,w,c
  3513  0017AA  0A2E               	xorlw	46
  3514  0017AC  A4D8               	btfss	status,2,c
  3515  0017AE  EFDB  F00B         	goto	u5001
  3516  0017B2  EFDD  F00B         	goto	u5000
  3517  0017B6                     u5001:
  3518  0017B6  EF5B  F00C         	goto	l4221
  3519  0017BA                     u5000:
  3520  0017BA                     
  3521                           ; BSR set to: 0
  3522                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             prec 
      +                          = 0;
  3523  0017BA  0E00               	movlw	0
  3524  0017BC  6FE6               	movwf	(_prec+1)& (0+255),b
  3525  0017BE  0E00               	movlw	0
  3526  0017C0  6FE5               	movwf	_prec& (0+255),b
  3527  0017C2                     
  3528                           ; BSR set to: 0
  3529                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             ++*fm
      +                          t;
  3530  0017C2  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3531  0017C6  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3532  0017CA  2ADE               	incf	postinc2,f,c
  3533  0017CC  0E00               	movlw	0
  3534  0017CE  22DD               	addwfc	postdec2,f,c
  3535  0017D0                     
  3536                           ; BSR set to: 0
  3537                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             if ((
      +                          *fmt)[0] == '*') {
  3538  0017D0  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3539  0017D4  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3540  0017D8  CFDE FFF6          	movff	postinc2,tblptrl
  3541  0017DC  CFDD FFF7          	movff	postdec2,tblptrh
  3542  0017E0                     	if	0	;tblptru may be non-zero
  3543  0017E0                     	endif
  3544  0017E0                     	if	0	;tblptru may be non-zero
  3545  0017E0                     	endif
  3546  0017E0  0008               	tblrd		*
  3547  0017E2  50F5               	movf	tablat,w,c
  3548  0017E4  0A2A               	xorlw	42
  3549  0017E6  A4D8               	btfss	status,2,c
  3550  0017E8  EFF8  F00B         	goto	u5011
  3551  0017EC  EFFA  F00B         	goto	u5010
  3552  0017F0                     u5011:
  3553  0017F0  EF17  F00C         	goto	l4211
  3554  0017F4                     u5010:
  3555  0017F4                     
  3556                           ; BSR set to: 0
  3557                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:                 +
      +                          +*fmt;
  3558  0017F4  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3559  0017F8  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3560  0017FC  2ADE               	incf	postinc2,f,c
  3561  0017FE  0E00               	movlw	0
  3562  001800  22DD               	addwfc	postdec2,f,c
  3563                           
  3564                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:                 p
      +                          rec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3565  001802  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3566  001806  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3567  00180A  CFDF F078          	movff	indf2,??_vfpfcnvrt
  3568  00180E  0E02               	movlw	2
  3569  001810  26DE               	addwf	postinc2,f,c
  3570  001812  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  3571  001816  0E00               	movlw	0
  3572  001818  22DD               	addwfc	postdec2,f,c
  3573  00181A  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3574  00181E  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3575  001822  CFDE F0E5          	movff	postinc2,_prec
  3576  001826  CFDD F0E6          	movff	postdec2,_prec+1
  3577                           
  3578                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             } els
      +                          e {
  3579  00182A  EF5B  F00C         	goto	l4221
  3580  00182E                     l4211:
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:                 p
      +                          rec = atoi(*fmt);
  3584  00182E  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3585  001832  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3586  001836  CFDE F008          	movff	postinc2,atoi@s
  3587  00183A  CFDD F009          	movff	postdec2,atoi@s+1
  3588  00183E  ECB5  F018         	call	_atoi	;wreg free
  3589  001842  C008  F0E5         	movff	?_atoi,_prec
  3590  001846  C009  F0E6         	movff	?_atoi+1,_prec+1
  3591                           
  3592                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:                 w
      +                          hile ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3593  00184A  EF2E  F00C         	goto	l4215
  3594  00184E                     l4213:
  3595                           
  3596                           ; BSR set to: 0
  3597                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:                  
      +                             ++*fmt;
  3598  00184E  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3599  001852  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3600  001856  2ADE               	incf	postinc2,f,c
  3601  001858  0E00               	movlw	0
  3602  00185A  22DD               	addwfc	postdec2,f,c
  3603  00185C                     l4215:
  3604  00185C  0ED0               	movlw	208
  3605  00185E  6E78               	movwf	??_vfpfcnvrt^0,c
  3606  001860  0EFF               	movlw	255
  3607  001862  6E79               	movwf	(??_vfpfcnvrt+1)^0,c
  3608  001864  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3609  001868  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3610  00186C  CFDE FFF6          	movff	postinc2,tblptrl
  3611  001870  CFDD FFF7          	movff	postdec2,tblptrh
  3612  001874                     	if	0	;tblptru may be non-zero
  3613  001874                     	endif
  3614  001874                     	if	0	;tblptru may be non-zero
  3615  001874                     	endif
  3616  001874  0008               	tblrd		*
  3617  001876  50F5               	movf	tablat,w,c
  3618  001878  6E7A               	movwf	(??_vfpfcnvrt+2)^0,c
  3619  00187A  6A7B               	clrf	(??_vfpfcnvrt+3)^0,c
  3620  00187C  5078               	movf	??_vfpfcnvrt^0,w,c
  3621  00187E  267A               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3622  001880  5079               	movf	(??_vfpfcnvrt+1)^0,w,c
  3623  001882  227B               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3624  001884  507B               	movf	(??_vfpfcnvrt+3)^0,w,c
  3625  001886  E10A               	bnz	u5020
  3626  001888  0E0A               	movlw	10
  3627  00188A  5C7A               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3628  00188C  A0D8               	btfss	status,0,c
  3629  00188E  EF4B  F00C         	goto	u5021
  3630  001892  EF4E  F00C         	goto	u5020
  3631  001896                     u5021:
  3632  001896  0E01               	movlw	1
  3633  001898  EF4F  F00C         	goto	u5030
  3634  00189C                     u5020:
  3635  00189C  0E00               	movlw	0
  3636  00189E                     u5030:
  3637  00189E  0100               	movlb	0	; () banked
  3638  0018A0  6F80               	movwf	_vfpfcnvrt$763& (0+255),b
  3639  0018A2  6B81               	clrf	(_vfpfcnvrt$763+1)& (0+255),b
  3640  0018A4                     
  3641                           ; BSR set to: 0
  3642  0018A4  5180               	movf	_vfpfcnvrt$763& (0+255),w,b
  3643  0018A6  1181               	iorwf	(_vfpfcnvrt$763+1)& (0+255),w,b
  3644  0018A8  A4D8               	btfss	status,2,c
  3645  0018AA  EF59  F00C         	goto	u5041
  3646  0018AE  EF5B  F00C         	goto	u5040
  3647  0018B2                     u5041:
  3648  0018B2  EF27  F00C         	goto	l4213
  3649  0018B6                     u5040:
  3650  0018B6                     l4221:
  3651                           
  3652                           ; BSR set to: 0
  3653                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0] = t
      +                          olower((int)(*fmt)[0]);
  3654  0018B6  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3655  0018BA  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3656  0018BE  CFDE FFF6          	movff	postinc2,tblptrl
  3657  0018C2  CFDD FFF7          	movff	postdec2,tblptrh
  3658  0018C6                     	if	0	;tblptru may be non-zero
  3659  0018C6                     	endif
  3660  0018C6                     	if	0	;tblptru may be non-zero
  3661  0018C6                     	endif
  3662  0018C6  0008               	tblrd		*
  3663  0018C8  50F5               	movf	tablat,w,c
  3664  0018CA  6E07               	movwf	tolower@c^0,c
  3665  0018CC  6A08               	clrf	(tolower@c+1)^0,c
  3666  0018CE  ECDF  F01E         	call	_tolower	;wreg free
  3667  0018D2  5007               	movf	?_tolower^0,w,c
  3668  0018D4  0100               	movlb	0	; () banked
  3669  0018D6  6F88               	movwf	vfpfcnvrt@ct& (0+255),b
  3670  0018D8                     
  3671                           ; BSR set to: 0
  3672                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (ct[0]
      +                          ) {
  3673  0018D8  5188               	movf	vfpfcnvrt@ct& (0+255),w,b
  3674  0018DA  B4D8               	btfsc	status,2,c
  3675  0018DC  EF72  F00C         	goto	u5051
  3676  0018E0  EF74  F00C         	goto	u5050
  3677  0018E4                     u5051:
  3678  0018E4  EFAE  F00C         	goto	l4231
  3679  0018E8                     u5050:
  3680  0018E8                     
  3681                           ; BSR set to: 0
  3682                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             ct[1]
      +                           = tolower((int)(*fmt)[1]);
  3683  0018E8  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3684  0018EC  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3685  0018F0  CFDE F078          	movff	postinc2,??_vfpfcnvrt
  3686  0018F4  CFDD F079          	movff	postdec2,??_vfpfcnvrt+1
  3687  0018F8  0E01               	movlw	1
  3688  0018FA  2678               	addwf	??_vfpfcnvrt^0,f,c
  3689  0018FC  0E00               	movlw	0
  3690  0018FE  2279               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3691  001900  C078  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3692  001904  C079  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3693  001908                     	if	0	;tblptru may be non-zero
  3694  001908                     	endif
  3695  001908                     	if	0	;tblptru may be non-zero
  3696  001908                     	endif
  3697  001908  0008               	tblrd		*
  3698  00190A  50F5               	movf	tablat,w,c
  3699  00190C  6E07               	movwf	tolower@c^0,c
  3700  00190E  6A08               	clrf	(tolower@c+1)^0,c
  3701  001910  ECDF  F01E         	call	_tolower	;wreg free
  3702  001914  5007               	movf	?_tolower^0,w,c
  3703  001916  0100               	movlb	0	; () banked
  3704  001918  6F89               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3705  00191A                     
  3706                           ; BSR set to: 0
  3707                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             if (c
      +                          t[1]) {
  3708  00191A  5189               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3709  00191C  B4D8               	btfsc	status,2,c
  3710  00191E  EF93  F00C         	goto	u5061
  3711  001922  EF95  F00C         	goto	u5060
  3712  001926                     u5061:
  3713  001926  EFAE  F00C         	goto	l4231
  3714  00192A                     u5060:
  3715  00192A                     
  3716                           ; BSR set to: 0
  3717                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:                 c
      +                          t[2] = tolower((int)(*fmt)[2]);
  3718  00192A  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3719  00192E  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3720  001932  CFDE F078          	movff	postinc2,??_vfpfcnvrt
  3721  001936  CFDD F079          	movff	postdec2,??_vfpfcnvrt+1
  3722  00193A  0E02               	movlw	2
  3723  00193C  2678               	addwf	??_vfpfcnvrt^0,f,c
  3724  00193E  0E00               	movlw	0
  3725  001940  2279               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3726  001942  C078  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3727  001946  C079  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3728  00194A                     	if	0	;tblptru may be non-zero
  3729  00194A                     	endif
  3730  00194A                     	if	0	;tblptru may be non-zero
  3731  00194A                     	endif
  3732  00194A  0008               	tblrd		*
  3733  00194C  50F5               	movf	tablat,w,c
  3734  00194E  6E07               	movwf	tolower@c^0,c
  3735  001950  6A08               	clrf	(tolower@c+1)^0,c
  3736  001952  ECDF  F01E         	call	_tolower	;wreg free
  3737  001956  5007               	movf	?_tolower^0,w,c
  3738  001958  0100               	movlb	0	; () banked
  3739  00195A  6F8A               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3740  00195C                     l4231:
  3741                           
  3742                           ; BSR set to: 0
  3743                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (ct[0]
      +                           == 'f') {
  3744  00195C  0E66               	movlw	102
  3745  00195E  1988               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3746  001960  A4D8               	btfss	status,2,c
  3747  001962  EFB5  F00C         	goto	u5071
  3748  001966  EFB7  F00C         	goto	u5070
  3749  00196A                     u5071:
  3750  00196A  EFF7  F00C         	goto	l4243
  3751  00196E                     u5070:
  3752  00196E                     
  3753                           ; BSR set to: 0
  3754                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             c = (
      +                          *fmt)[0];
  3755  00196E  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3756  001972  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3757  001976  CFDE FFF6          	movff	postinc2,tblptrl
  3758  00197A  CFDD FFF7          	movff	postdec2,tblptrh
  3759  00197E                     	if	0	;tblptru may be non-zero
  3760  00197E                     	endif
  3761  00197E                     	if	0	;tblptru may be non-zero
  3762  00197E                     	endif
  3763  00197E  0008               	tblrd		*
  3764  001980  CFF5 F08B          	movff	tablat,vfpfcnvrt@c
  3765  001984                     
  3766                           ; BSR set to: 0
  3767                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             ++*fm
      +                          t;
  3768  001984  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3769  001988  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3770  00198C  2ADE               	incf	postinc2,f,c
  3771  00198E  0E00               	movlw	0
  3772  001990  22DD               	addwfc	postdec2,f,c
  3773  001992                     
  3774                           ; BSR set to: 0
  3775                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             f = (
      +                          long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3776  001992  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3777  001996  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3778  00199A  CFDF F078          	movff	indf2,??_vfpfcnvrt
  3779  00199E  0E04               	movlw	4
  3780  0019A0  26DE               	addwf	postinc2,f,c
  3781  0019A2  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  3782  0019A6  0E00               	movlw	0
  3783  0019A8  22DD               	addwfc	postdec2,f,c
  3784  0019AA  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3785  0019AE  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3786  0019B2  CFDE F084          	movff	postinc2,vfpfcnvrt@f
  3787  0019B6  CFDE F085          	movff	postinc2,vfpfcnvrt@f+1
  3788  0019BA  CFDE F086          	movff	postinc2,vfpfcnvrt@f+2
  3789  0019BE  CFDE F087          	movff	postinc2,vfpfcnvrt@f+3
  3790  0019C2                     l4239:
  3791                           
  3792                           ; BSR set to: 0
  3793                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             retur
      +                          n efgtoa(fp, f, c);
  3794  0019C2  C072  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  3795  0019C6  C073  F02F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3796  0019CA  C084  F030         	movff	vfpfcnvrt@f,efgtoa@f
  3797  0019CE  C085  F031         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3798  0019D2  C086  F032         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3799  0019D6  C087  F033         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3800  0019DA  C08B  F034         	movff	vfpfcnvrt@c,efgtoa@c
  3801  0019DE  EC7A  F003         	call	_efgtoa	;wreg free
  3802  0019E2  C02E  F072         	movff	?_efgtoa,?_vfpfcnvrt
  3803  0019E6  C02F  F073         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3804  0019EA  EFDB  F00D         	goto	l1037
  3805  0019EE                     l4243:
  3806                           
  3807                           ; BSR set to: 0
  3808                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (!strn
      +                          cmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3809  0019EE  0E88               	movlw	low vfpfcnvrt@ct
  3810  0019F0  6E01               	movwf	strncmp@_l^0,c
  3811  0019F2  0E00               	movlw	high vfpfcnvrt@ct
  3812  0019F4  6E02               	movwf	(strncmp@_l+1)^0,c
  3813  0019F6  0EEC               	movlw	low STR_39
  3814  0019F8  6E03               	movwf	strncmp@_r^0,c
  3815  0019FA  0E06               	movlw	high STR_39
  3816  0019FC  6E04               	movwf	(strncmp@_r+1)^0,c
  3817  0019FE  0E00               	movlw	0
  3818  001A00  6E06               	movwf	(strncmp@n+1)^0,c
  3819  001A02  0E02               	movlw	2
  3820  001A04  6E05               	movwf	strncmp@n^0,c
  3821  001A06  EC01  F01B         	call	_strncmp	;wreg free
  3822  001A0A  5001               	movf	?_strncmp^0,w,c
  3823  001A0C  1002               	iorwf	(?_strncmp+1)^0,w,c
  3824  001A0E  A4D8               	btfss	status,2,c
  3825  001A10  EF0C  F00D         	goto	u5081
  3826  001A14  EF0E  F00D         	goto	u5080
  3827  001A18                     u5081:
  3828  001A18  EF8A  F00D         	goto	l4259
  3829  001A1C                     u5080:
  3830  001A1C                     
  3831                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             if ((
      +                          0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3832  001A1C  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3833  001A20  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3834  001A24  CFDE F078          	movff	postinc2,??_vfpfcnvrt
  3835  001A28  CFDD F079          	movff	postdec2,??_vfpfcnvrt+1
  3836  001A2C  0E01               	movlw	1
  3837  001A2E  2678               	addwf	??_vfpfcnvrt^0,f,c
  3838  001A30  0E00               	movlw	0
  3839  001A32  2279               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3840  001A34  C078  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3841  001A38  C079  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3842  001A3C                     	if	0	;tblptru may be non-zero
  3843  001A3C                     	endif
  3844  001A3C                     	if	0	;tblptru may be non-zero
  3845  001A3C                     	endif
  3846  001A3C  0008               	tblrd		*
  3847  001A3E  CFF5 F08B          	movff	tablat,vfpfcnvrt@c
  3848  001A42  0EBF               	movlw	191
  3849  001A44  6E78               	movwf	??_vfpfcnvrt^0,c
  3850  001A46  0EFF               	movlw	255
  3851  001A48  6E79               	movwf	(??_vfpfcnvrt+1)^0,c
  3852  001A4A  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3853  001A4E  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3854  001A52  CFDE FFF6          	movff	postinc2,tblptrl
  3855  001A56  CFDD FFF7          	movff	postdec2,tblptrh
  3856  001A5A                     	if	0	;tblptru may be non-zero
  3857  001A5A                     	endif
  3858  001A5A                     	if	0	;tblptru may be non-zero
  3859  001A5A                     	endif
  3860  001A5A  0008               	tblrd		*
  3861  001A5C  50F5               	movf	tablat,w,c
  3862  001A5E  6E7A               	movwf	(??_vfpfcnvrt+2)^0,c
  3863  001A60  6A7B               	clrf	(??_vfpfcnvrt+3)^0,c
  3864  001A62  5078               	movf	??_vfpfcnvrt^0,w,c
  3865  001A64  267A               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3866  001A66  5079               	movf	(??_vfpfcnvrt+1)^0,w,c
  3867  001A68  227B               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3868  001A6A  507B               	movf	(??_vfpfcnvrt+3)^0,w,c
  3869  001A6C  E10A               	bnz	u5090
  3870  001A6E  0E1A               	movlw	26
  3871  001A70  5C7A               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3872  001A72  A0D8               	btfss	status,0,c
  3873  001A74  EF3E  F00D         	goto	u5091
  3874  001A78  EF41  F00D         	goto	u5090
  3875  001A7C                     u5091:
  3876  001A7C  0E01               	movlw	1
  3877  001A7E  EF42  F00D         	goto	u5100
  3878  001A82                     u5090:
  3879  001A82  0E00               	movlw	0
  3880  001A84                     u5100:
  3881  001A84  0100               	movlb	0	; () banked
  3882  001A86  6F82               	movwf	_vfpfcnvrt$767& (0+255),b
  3883  001A88  6B83               	clrf	(_vfpfcnvrt$767+1)& (0+255),b
  3884  001A8A                     
  3885                           ; BSR set to: 0
  3886  001A8A  5182               	movf	_vfpfcnvrt$767& (0+255),w,b
  3887  001A8C  1183               	iorwf	(_vfpfcnvrt$767+1)& (0+255),w,b
  3888  001A8E  B4D8               	btfsc	status,2,c
  3889  001A90  EF4C  F00D         	goto	u5111
  3890  001A94  EF4E  F00D         	goto	u5110
  3891  001A98                     u5111:
  3892  001A98  EF68  F00D         	goto	l4253
  3893  001A9C                     u5110:
  3894  001A9C                     
  3895                           ; BSR set to: 0
  3896                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:                 f
      +                           = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3897  001A9C  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3898  001AA0  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3899  001AA4  CFDF F078          	movff	indf2,??_vfpfcnvrt
  3900  001AA8  0E04               	movlw	4
  3901  001AAA  26DE               	addwf	postinc2,f,c
  3902  001AAC  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  3903  001AB0  0E00               	movlw	0
  3904  001AB2  22DD               	addwfc	postdec2,f,c
  3905  001AB4  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3906  001AB8  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3907  001ABC  CFDE F084          	movff	postinc2,vfpfcnvrt@f
  3908  001AC0  CFDE F085          	movff	postinc2,vfpfcnvrt@f+1
  3909  001AC4  CFDE F086          	movff	postinc2,vfpfcnvrt@f+2
  3910  001AC8  CFDE F087          	movff	postinc2,vfpfcnvrt@f+3
  3911                           
  3912                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             } els
      +                          e {
  3913  001ACC  EF80  F00D         	goto	l1044
  3914  001AD0                     l4253:
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:                 f
      +                           = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3918  001AD0  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3919  001AD4  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3920  001AD8  CFDF F078          	movff	indf2,??_vfpfcnvrt
  3921  001ADC  0E04               	movlw	4
  3922  001ADE  26DE               	addwf	postinc2,f,c
  3923  001AE0  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  3924  001AE4  0E00               	movlw	0
  3925  001AE6  22DD               	addwfc	postdec2,f,c
  3926  001AE8  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3927  001AEC  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3928  001AF0  CFDE F084          	movff	postinc2,vfpfcnvrt@f
  3929  001AF4  CFDE F085          	movff	postinc2,vfpfcnvrt@f+1
  3930  001AF8  CFDE F086          	movff	postinc2,vfpfcnvrt@f+2
  3931  001AFC  CFDE F087          	movff	postinc2,vfpfcnvrt@f+3
  3932  001B00                     l1044:
  3933                           
  3934                           ; BSR set to: 0
  3935                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             *fmt 
      +                          += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3936  001B00  0E02               	movlw	2
  3937  001B02  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3938  001B06  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3939  001B0A  26DE               	addwf	postinc2,f,c
  3940  001B0C  0E00               	movlw	0
  3941  001B0E  22DD               	addwfc	postdec2,f,c
  3942  001B10  EFE1  F00C         	goto	l4239
  3943  001B14                     l4259:
  3944                           
  3945                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if ((*fm
      +                          t)[0] == '%') {
  3946  001B14  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3947  001B18  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3948  001B1C  CFDE FFF6          	movff	postinc2,tblptrl
  3949  001B20  CFDD FFF7          	movff	postdec2,tblptrh
  3950  001B24                     	if	0	;tblptru may be non-zero
  3951  001B24                     	endif
  3952  001B24                     	if	0	;tblptru may be non-zero
  3953  001B24                     	endif
  3954  001B24  0008               	tblrd		*
  3955  001B26  50F5               	movf	tablat,w,c
  3956  001B28  0A25               	xorlw	37
  3957  001B2A  A4D8               	btfss	status,2,c
  3958  001B2C  EF9A  F00D         	goto	u5121
  3959  001B30  EF9C  F00D         	goto	u5120
  3960  001B34                     u5121:
  3961  001B34  EFB3  F00D         	goto	l4269
  3962  001B38                     u5120:
  3963  001B38                     
  3964                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:             ++*f
      +                          mt;
  3965  001B38  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3966  001B3C  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3967  001B40  2ADE               	incf	postinc2,f,c
  3968  001B42  0E00               	movlw	0
  3969  001B44  22DD               	addwfc	postdec2,f,c
  3970  001B46                     
  3971                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:             fput
      +                          c((int)'%', fp);
  3972  001B46  0E00               	movlw	0
  3973  001B48  6E02               	movwf	(fputc@c+1)^0,c
  3974  001B4A  0E25               	movlw	37
  3975  001B4C  6E01               	movwf	fputc@c^0,c
  3976  001B4E  C072  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3977  001B52  C073  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3978  001B56  EC6C  F01B         	call	_fputc	;wreg free
  3979  001B5A                     l4265:
  3980                           
  3981                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:             retu
      +                          rn 1;
  3982  001B5A  0E00               	movlw	0
  3983  001B5C  6E73               	movwf	(?_vfpfcnvrt+1)^0,c
  3984  001B5E  0E01               	movlw	1
  3985  001B60  6E72               	movwf	?_vfpfcnvrt^0,c
  3986  001B62  EFDB  F00D         	goto	l1037
  3987  001B66                     l4269:
  3988                           
  3989                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*fmt;
  3990  001B66  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3991  001B6A  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3992  001B6E  2ADE               	incf	postinc2,f,c
  3993  001B70  0E00               	movlw	0
  3994  001B72  22DD               	addwfc	postdec2,f,c
  3995  001B74                     
  3996                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         return 0
      +                          ;
  3997  001B74  0E00               	movlw	0
  3998  001B76  6E73               	movwf	(?_vfpfcnvrt+1)^0,c
  3999  001B78  0E00               	movlw	0
  4000  001B7A  6E72               	movwf	?_vfpfcnvrt^0,c
  4001  001B7C  EFDB  F00D         	goto	l1037
  4002  001B80                     l4275:
  4003                           
  4004                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((int)(
      +                          *fmt)[0], fp);
  4005  001B80  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4006  001B84  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4007  001B88  CFDE FFF6          	movff	postinc2,tblptrl
  4008  001B8C  CFDD FFF7          	movff	postdec2,tblptrh
  4009  001B90                     	if	0	;tblptru may be non-zero
  4010  001B90                     	endif
  4011  001B90                     	if	0	;tblptru may be non-zero
  4012  001B90                     	endif
  4013  001B90  0008               	tblrd		*
  4014  001B92  50F5               	movf	tablat,w,c
  4015  001B94  6E01               	movwf	fputc@c^0,c
  4016  001B96  6A02               	clrf	(fputc@c+1)^0,c
  4017  001B98  C072  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4018  001B9C  C073  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4019  001BA0  EC6C  F01B         	call	_fputc	;wreg free
  4020  001BA4                     
  4021                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  4022  001BA4  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4023  001BA8  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4024  001BAC  2ADE               	incf	postinc2,f,c
  4025  001BAE  0E00               	movlw	0
  4026  001BB0  22DD               	addwfc	postdec2,f,c
  4027  001BB2  EFAD  F00D         	goto	l4265
  4028  001BB6                     l1037:
  4029  001BB6  0012               	return		;funcret
  4030  001BB8                     __end_of_vfpfcnvrt:
  4031                           	callstack 0
  4032                           
  4033 ;; *************** function _strncmp *****************
  4034 ;; Defined at:
  4035 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  4038 ;;		 -> vfpfcnvrt@ct(3), 
  4039 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  4040 ;;		 -> STR_41(3), 
  4041 ;;  n               2    4[COMRAM] unsigned int 
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;  r               2    9[COMRAM] PTR const unsigned char 
  4044 ;;		 -> STR_41(3), 
  4045 ;;  l               2    7[COMRAM] PTR const unsigned char 
  4046 ;;		 -> vfpfcnvrt@ct(3), 
  4047 ;; Return value:  Size  Location     Type
  4048 ;;                  2    0[COMRAM] int 
  4049 ;; Registers used:
  4050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4051 ;; Tracked objects:
  4052 ;;		On entry : 0/0
  4053 ;;		On exit  : 0/0
  4054 ;;		Unchanged: 0/0
  4055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4056 ;;      Params:         6       0       0       0       0       0       0
  4057 ;;      Locals:         4       0       0       0       0       0       0
  4058 ;;      Temps:          1       0       0       0       0       0       0
  4059 ;;      Totals:        11       0       0       0       0       0       0
  4060 ;;Total ram usage:       11 bytes
  4061 ;; Hardware stack levels used:    1
  4062 ;; This function calls:
  4063 ;;		Nothing
  4064 ;; This function is called by:
  4065 ;;		_vfpfcnvrt
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069                           	psect	text9
  4070  003602                     __ptext9:
  4071                           	callstack 0
  4072  003602                     _strncmp:
  4073                           	callstack 26
  4074  003602  C001  F008         	movff	strncmp@_l,strncmp@l
  4075  003606  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  4076  00360A  C003  F00A         	movff	strncmp@_r,strncmp@r
  4077  00360E  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  4078  003612  0605               	decf	strncmp@n^0,f,c
  4079  003614  A0D8               	btfss	status,0,c
  4080  003616  0606               	decf	(strncmp@n+1)^0,f,c
  4081  003618  2805               	incf	strncmp@n^0,w,c
  4082  00361A  E106               	bnz	u4911
  4083  00361C  2806               	incf	(strncmp@n+1)^0,w,c
  4084  00361E  A4D8               	btfss	status,2,c
  4085  003620  EF14  F01B         	goto	u4911
  4086  003624  EF16  F01B         	goto	u4910
  4087  003628                     u4911:
  4088  003628  EF23  F01B         	goto	l4153
  4089  00362C                     u4910:
  4090  00362C  0E00               	movlw	0
  4091  00362E  6E02               	movwf	(?_strncmp+1)^0,c
  4092  003630  0E00               	movlw	0
  4093  003632  6E01               	movwf	?_strncmp^0,c
  4094  003634  EF6B  F01B         	goto	l1165
  4095  003638                     l4151:
  4096  003638  4A08               	infsnz	strncmp@l^0,f,c
  4097  00363A  2A09               	incf	(strncmp@l+1)^0,f,c
  4098  00363C  4A0A               	infsnz	strncmp@r^0,f,c
  4099  00363E  2A0B               	incf	(strncmp@r+1)^0,f,c
  4100  003640  0605               	decf	strncmp@n^0,f,c
  4101  003642  A0D8               	btfss	status,0,c
  4102  003644  0606               	decf	(strncmp@n+1)^0,f,c
  4103  003646                     l4153:
  4104  003646  C008  FFD9         	movff	strncmp@l,fsr2l
  4105  00364A  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4106  00364E  50DF               	movf	indf2,w,c
  4107  003650  B4D8               	btfsc	status,2,c
  4108  003652  EF2D  F01B         	goto	u4921
  4109  003656  EF2F  F01B         	goto	u4920
  4110  00365A                     u4921:
  4111  00365A  EF5A  F01B         	goto	l4161
  4112  00365E                     u4920:
  4113  00365E  C00A  FFF6         	movff	strncmp@r,tblptrl
  4114  003662  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4115  003666                     	if	0	;tblptru may be non-zero
  4116  003666                     	endif
  4117  003666                     	if	0	;tblptru may be non-zero
  4118  003666                     	endif
  4119  003666  0008               	tblrd		*
  4120  003668  50F5               	movf	tablat,w,c
  4121  00366A  0900               	iorlw	0
  4122  00366C  B4D8               	btfsc	status,2,c
  4123  00366E  EF3B  F01B         	goto	u4931
  4124  003672  EF3D  F01B         	goto	u4930
  4125  003676                     u4931:
  4126  003676  EF5A  F01B         	goto	l4161
  4127  00367A                     u4930:
  4128  00367A  5005               	movf	strncmp@n^0,w,c
  4129  00367C  1006               	iorwf	(strncmp@n+1)^0,w,c
  4130  00367E  B4D8               	btfsc	status,2,c
  4131  003680  EF44  F01B         	goto	u4941
  4132  003684  EF46  F01B         	goto	u4940
  4133  003688                     u4941:
  4134  003688  EF5A  F01B         	goto	l4161
  4135  00368C                     u4940:
  4136  00368C  C008  FFD9         	movff	strncmp@l,fsr2l
  4137  003690  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4138  003694  50DF               	movf	indf2,w,c
  4139  003696  6E07               	movwf	??_strncmp^0,c
  4140  003698  C00A  FFF6         	movff	strncmp@r,tblptrl
  4141  00369C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4142  0036A0                     	if	0	;tblptru may be non-zero
  4143  0036A0                     	endif
  4144  0036A0                     	if	0	;tblptru may be non-zero
  4145  0036A0                     	endif
  4146  0036A0  0008               	tblrd		*
  4147  0036A2  50F5               	movf	tablat,w,c
  4148  0036A4  1807               	xorwf	??_strncmp^0,w,c
  4149  0036A6  B4D8               	btfsc	status,2,c
  4150  0036A8  EF58  F01B         	goto	u4951
  4151  0036AC  EF5A  F01B         	goto	u4950
  4152  0036B0                     u4951:
  4153  0036B0  EF1C  F01B         	goto	l4151
  4154  0036B4                     u4950:
  4155  0036B4                     l4161:
  4156  0036B4  C008  FFD9         	movff	strncmp@l,fsr2l
  4157  0036B8  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4158  0036BC  50DF               	movf	indf2,w,c
  4159  0036BE  6E07               	movwf	??_strncmp^0,c
  4160  0036C0  C00A  FFF6         	movff	strncmp@r,tblptrl
  4161  0036C4  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4162  0036C8                     	if	0	;tblptru may be non-zero
  4163  0036C8                     	endif
  4164  0036C8                     	if	0	;tblptru may be non-zero
  4165  0036C8                     	endif
  4166  0036C8  0008               	tblrd		*
  4167  0036CA  50F5               	movf	tablat,w,c
  4168  0036CC  5C07               	subwf	??_strncmp^0,w,c
  4169  0036CE  6E01               	movwf	?_strncmp^0,c
  4170  0036D0  6A02               	clrf	(?_strncmp+1)^0,c
  4171  0036D2  A0D8               	btfss	status,0,c
  4172  0036D4  0602               	decf	(?_strncmp+1)^0,f,c
  4173  0036D6                     l1165:
  4174  0036D6  0012               	return		;funcret
  4175  0036D8                     __end_of_strncmp:
  4176                           	callstack 0
  4177                           
  4178 ;; *************** function _efgtoa *****************
  4179 ;; Defined at:
  4180 ;;		line 319 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  4183 ;;		 -> sprintf@f(6), 
  4184 ;;  f               4   47[COMRAM] PTR struct _IO_FILE
  4185 ;;  c               1   51[COMRAM] unsigned char 
  4186 ;; Auto vars:     Size  Location     Type
  4187 ;;  u               4  109[COMRAM] unsigned char 
  4188 ;;  g               4  101[COMRAM] unsigned char 
  4189 ;;  l               4   95[COMRAM] unsigned char 
  4190 ;;  h               4   91[COMRAM] unsigned char 
  4191 ;;  ou              4   57[COMRAM] unsigned char 
  4192 ;;  n               2  107[COMRAM] int 
  4193 ;;  e               2  105[COMRAM] int 
  4194 ;;  i               2   99[COMRAM] int 
  4195 ;;  w               2   88[COMRAM] int 
  4196 ;;  p               2   85[COMRAM] int 
  4197 ;;  sign            2   83[COMRAM] int 
  4198 ;;  d               2   81[COMRAM] int 
  4199 ;;  ne              2   79[COMRAM] int 
  4200 ;;  m               2   77[COMRAM] int 
  4201 ;;  pp              2   75[COMRAM] int 
  4202 ;;  t               2   73[COMRAM] int 
  4203 ;;  mode            1   90[COMRAM] unsigned char 
  4204 ;;  nmode           1   87[COMRAM] unsigned char 
  4205 ;; Return value:  Size  Location     Type
  4206 ;;                  2   45[COMRAM] int 
  4207 ;; Registers used:
  4208 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4209 ;; Tracked objects:
  4210 ;;		On entry : 0/0
  4211 ;;		On exit  : 0/0
  4212 ;;		Unchanged: 0/0
  4213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4214 ;;      Params:         7       0       0       0       0       0       0
  4215 ;;      Locals:        56       0       0       0       0       0       0
  4216 ;;      Temps:          5       0       0       0       0       0       0
  4217 ;;      Totals:        68       0       0       0       0       0       0
  4218 ;;Total ram usage:       68 bytes
  4219 ;; Hardware stack levels used:    1
  4220 ;; Hardware stack levels required when called:    4
  4221 ;; This function calls:
  4222 ;;		___awdiv
  4223 ;;		___awmod
  4224 ;;		___fladd
  4225 ;;		___fldiv
  4226 ;;		___fleq
  4227 ;;		___flge
  4228 ;;		___flmul
  4229 ;;		___flneg
  4230 ;;		___flsub
  4231 ;;		___fltol
  4232 ;;		___fpclassifyf
  4233 ;;		_floorf
  4234 ;;		_isupper
  4235 ;;		_pad
  4236 ;;		_strcpy
  4237 ;;		_tolower
  4238 ;; This function is called by:
  4239 ;;		_vfpfcnvrt
  4240 ;; This function uses a non-reentrant model
  4241 ;;
  4242                           
  4243                           	psect	text10
  4244  0006F4                     __ptext10:
  4245                           	callstack 0
  4246  0006F4                     _efgtoa:
  4247                           	callstack 22
  4248  0006F4                     
  4249                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int efgtoa
      +                          (FILE *fp, long double f, char c);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common
      +                          \doprnt.c: 320: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 321: 
      +                              char mode, nmode;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 3
      +                          22:     int d, e, i, m, n, ne, p, pp, sign, t, w;;D:\Programs\Microship\xc8\v2.20\pic\so
      +                          urces\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;;D:\Programs\Microship\xc
      +                          8\v2.20\pic\sources\c99\common\doprnt.c: 326:     sign = 0;
  4250  0006F4  0E00               	movlw	0
  4251  0006F6  6E55               	movwf	(efgtoa@sign+1)^0,c
  4252  0006F8  0E00               	movlw	0
  4253  0006FA  6E54               	movwf	efgtoa@sign^0,c
  4254  0006FC                     
  4255                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  4256  0006FC  C030  F066         	movff	efgtoa@f,efgtoa@g
  4257  000700  C031  F067         	movff	efgtoa@f+1,efgtoa@g+1
  4258  000704  C032  F068         	movff	efgtoa@f+2,efgtoa@g+2
  4259  000708  C033  F069         	movff	efgtoa@f+3,efgtoa@g+3
  4260  00070C                     
  4261                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 0.0) 
      +                          {
  4262  00070C  BE69               	btfsc	(efgtoa@g+3)^0,7,c
  4263  00070E  EF8D  F003         	goto	u4320
  4264  000712  EF8B  F003         	goto	u4321
  4265  000716                     u4321:
  4266  000716  EFA3  F003         	goto	l3815
  4267  00071A                     u4320:
  4268  00071A                     
  4269                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign = 1;
  4270  00071A  0E00               	movlw	0
  4271  00071C  6E55               	movwf	(efgtoa@sign+1)^0,c
  4272  00071E  0E01               	movlw	1
  4273  000720  6E54               	movwf	efgtoa@sign^0,c
  4274  000722                     
  4275                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = -g;
  4276  000722  C066  F001         	movff	efgtoa@g,___flneg@f1
  4277  000726  C067  F002         	movff	efgtoa@g+1,___flneg@f1+1
  4278  00072A  C068  F003         	movff	efgtoa@g+2,___flneg@f1+2
  4279  00072E  C069  F004         	movff	efgtoa@g+3,___flneg@f1+3
  4280  000732  EC1E  F020         	call	___flneg	;wreg free
  4281  000736  C001  F066         	movff	?___flneg,efgtoa@g
  4282  00073A  C002  F067         	movff	?___flneg+1,efgtoa@g+1
  4283  00073E  C003  F068         	movff	?___flneg+2,efgtoa@g+2
  4284  000742  C004  F069         	movff	?___flneg+3,efgtoa@g+3
  4285  000746                     l3815:
  4286                           
  4287                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  4288  000746  0E00               	movlw	0
  4289  000748  6E6D               	movwf	(efgtoa@n+1)^0,c
  4290  00074A  0E00               	movlw	0
  4291  00074C  6E6C               	movwf	efgtoa@n^0,c
  4292  00074E                     
  4293                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = width;
  4294  00074E  C0E3  F059         	movff	_width,efgtoa@w
  4295  000752  C0E4  F05A         	movff	_width+1,efgtoa@w+1
  4296  000756                     
  4297                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign || (
      +                          flags & (1 << 2))) {
  4298  000756  5054               	movf	efgtoa@sign^0,w,c
  4299  000758  1055               	iorwf	(efgtoa@sign+1)^0,w,c
  4300  00075A  A4D8               	btfss	status,2,c
  4301  00075C  EFB2  F003         	goto	u4331
  4302  000760  EFB4  F003         	goto	u4330
  4303  000764                     u4331:
  4304  000764  EFBC  F003         	goto	l3823
  4305  000768                     u4330:
  4306  000768  0100               	movlb	0	; () banked
  4307  00076A  A5E7               	btfss	_flags& (0+255),2,b
  4308  00076C  EFBA  F003         	goto	u4341
  4309  000770  EFBC  F003         	goto	u4340
  4310  000774                     u4341:
  4311  000774  EFD6  F003         	goto	l3835
  4312  000778                     u4340:
  4313  000778                     l3823:
  4314                           
  4315                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf[n] =
      +                           sign ? '-' : '+';
  4316  000778  5054               	movf	efgtoa@sign^0,w,c
  4317  00077A  1055               	iorwf	(efgtoa@sign+1)^0,w,c
  4318  00077C  A4D8               	btfss	status,2,c
  4319  00077E  EFC3  F003         	goto	u4351
  4320  000782  EFC5  F003         	goto	u4350
  4321  000786                     u4351:
  4322  000786  EFCB  F003         	goto	l3827
  4323  00078A                     u4350:
  4324  00078A  0E00               	movlw	0
  4325  00078C  6E3F               	movwf	(_efgtoa$737+1)^0,c
  4326  00078E  0E2B               	movlw	43
  4327  000790  6E3E               	movwf	_efgtoa$737^0,c
  4328  000792  EFCF  F003         	goto	l3829
  4329  000796                     l3827:
  4330  000796  0E00               	movlw	0
  4331  000798  6E3F               	movwf	(_efgtoa$737+1)^0,c
  4332  00079A  0E2D               	movlw	45
  4333  00079C  6E3E               	movwf	_efgtoa$737^0,c
  4334  00079E                     l3829:
  4335  00079E  C03E  F100         	movff	_efgtoa$737,_dbuf
  4336  0007A2                     
  4337                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  4338  0007A2  4A6C               	infsnz	efgtoa@n^0,f,c
  4339  0007A4  2A6D               	incf	(efgtoa@n+1)^0,f,c
  4340  0007A6                     
  4341                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  4342  0007A6  0659               	decf	efgtoa@w^0,f,c
  4343  0007A8  A0D8               	btfss	status,0,c
  4344  0007AA  065A               	decf	(efgtoa@w+1)^0,f,c
  4345  0007AC                     l3835:
  4346                           
  4347                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if ((0 ? 
      +                          isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4348  0007AC  C066  F001         	movff	efgtoa@g,___fpclassifyf@x
  4349  0007B0  C067  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4350  0007B4  C068  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4351  0007B8  C069  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4352  0007BC  EC82  F01A         	call	___fpclassifyf	;wreg free
  4353  0007C0  0401               	decf	?___fpclassifyf^0,w,c
  4354  0007C2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4355  0007C4  A4D8               	btfss	status,2,c
  4356  0007C6  EFE7  F003         	goto	u4361
  4357  0007CA  EFE9  F003         	goto	u4360
  4358  0007CE                     u4361:
  4359  0007CE  EF3E  F004         	goto	l3853
  4360  0007D2                     u4360:
  4361  0007D2  0EBF               	movlw	191
  4362  0007D4  6E35               	movwf	??_efgtoa^0,c
  4363  0007D6  0EFF               	movlw	255
  4364  0007D8  6E36               	movwf	(??_efgtoa+1)^0,c
  4365  0007DA  5034               	movf	efgtoa@c^0,w,c
  4366  0007DC  6E37               	movwf	(??_efgtoa+2)^0,c
  4367  0007DE  6A38               	clrf	(??_efgtoa+3)^0,c
  4368  0007E0  5035               	movf	??_efgtoa^0,w,c
  4369  0007E2  2637               	addwf	(??_efgtoa+2)^0,f,c
  4370  0007E4  5036               	movf	(??_efgtoa+1)^0,w,c
  4371  0007E6  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4372  0007E8  5038               	movf	(??_efgtoa+3)^0,w,c
  4373  0007EA  E10A               	bnz	u4370
  4374  0007EC  0E1A               	movlw	26
  4375  0007EE  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4376  0007F0  A0D8               	btfss	status,0,c
  4377  0007F2  EFFD  F003         	goto	u4371
  4378  0007F6  EF00  F004         	goto	u4370
  4379  0007FA                     u4371:
  4380  0007FA  0E01               	movlw	1
  4381  0007FC  EF01  F004         	goto	u4380
  4382  000800                     u4370:
  4383  000800  0E00               	movlw	0
  4384  000802                     u4380:
  4385  000802  6E40               	movwf	_efgtoa$738^0,c
  4386  000804  6A41               	clrf	(_efgtoa$738+1)^0,c
  4387  000806  5040               	movf	_efgtoa$738^0,w,c
  4388  000808  1041               	iorwf	(_efgtoa$738+1)^0,w,c
  4389  00080A  B4D8               	btfsc	status,2,c
  4390  00080C  EF0A  F004         	goto	u4391
  4391  000810  EF0C  F004         	goto	u4390
  4392  000814                     u4391:
  4393  000814  EF1A  F004         	goto	l3845
  4394  000818                     u4390:
  4395  000818                     
  4396                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             strcp
      +                          y(&dbuf[n], "INF");
  4397  000818  0E00               	movlw	low _dbuf
  4398  00081A  246C               	addwf	efgtoa@n^0,w,c
  4399  00081C  6E01               	movwf	strcpy@dest^0,c
  4400  00081E  0E01               	movlw	high _dbuf
  4401  000820  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4402  000822  6E02               	movwf	(strcpy@dest+1)^0,c
  4403  000824  0EDC               	movlw	low STR_31
  4404  000826  6E03               	movwf	strcpy@src^0,c
  4405  000828  0E06               	movlw	high STR_31
  4406  00082A  6E04               	movwf	(strcpy@src+1)^0,c
  4407  00082C  EC3D  F01F         	call	_strcpy	;wreg free
  4408                           
  4409                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } else {
  4410  000830  EF26  F004         	goto	l3847
  4411  000834                     l3845:
  4412                           
  4413                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             strcp
      +                          y(&dbuf[n], "inf");
  4414  000834  0E00               	movlw	low _dbuf
  4415  000836  246C               	addwf	efgtoa@n^0,w,c
  4416  000838  6E01               	movwf	strcpy@dest^0,c
  4417  00083A  0E01               	movlw	high _dbuf
  4418  00083C  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4419  00083E  6E02               	movwf	(strcpy@dest+1)^0,c
  4420  000840  0EE4               	movlw	low STR_32
  4421  000842  6E03               	movwf	strcpy@src^0,c
  4422  000844  0E06               	movlw	high STR_32
  4423  000846  6E04               	movwf	(strcpy@src+1)^0,c
  4424  000848  EC3D  F01F         	call	_strcpy	;wreg free
  4425  00084C                     l3847:
  4426                           
  4427                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -= ((si
      +                          zeof("inf")/sizeof("inf"[0]))-1);
  4428  00084C  0EFD               	movlw	253
  4429  00084E  2659               	addwf	efgtoa@w^0,f,c
  4430  000850  0EFF               	movlw	255
  4431  000852  225A               	addwfc	(efgtoa@w+1)^0,f,c
  4432  000854                     l3849:
  4433                           
  4434                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         return pa
      +                          d(fp, &dbuf[0], w);
  4435  000854  C02E  F011         	movff	efgtoa@fp,pad@fp
  4436  000858  C02F  F012         	movff	efgtoa@fp+1,pad@fp+1
  4437  00085C  0E00               	movlw	low _dbuf
  4438  00085E  6E13               	movwf	pad@buf^0,c
  4439  000860  0E01               	movlw	high _dbuf
  4440  000862  6E14               	movwf	(pad@buf+1)^0,c
  4441  000864  C059  F015         	movff	efgtoa@w,pad@p
  4442  000868  C05A  F016         	movff	efgtoa@w+1,pad@p+1
  4443  00086C  ECD1  F01B         	call	_pad	;wreg free
  4444  000870  C011  F02E         	movff	?_pad,?_efgtoa
  4445  000874  C012  F02F         	movff	?_pad+1,?_efgtoa+1
  4446  000878  EF46  F009         	goto	l947
  4447  00087C                     l3853:
  4448                           
  4449                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if ((0 ? 
      +                          isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4450  00087C  C066  F001         	movff	efgtoa@g,___fpclassifyf@x
  4451  000880  C067  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4452  000884  C068  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4453  000888  C069  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4454  00088C  EC82  F01A         	call	___fpclassifyf	;wreg free
  4455  000890  5001               	movf	?___fpclassifyf^0,w,c
  4456  000892  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4457  000894  A4D8               	btfss	status,2,c
  4458  000896  EF4F  F004         	goto	u4401
  4459  00089A  EF51  F004         	goto	u4400
  4460  00089E                     u4401:
  4461  00089E  EF90  F004         	goto	l3871
  4462  0008A2                     u4400:
  4463  0008A2  0EBF               	movlw	191
  4464  0008A4  6E35               	movwf	??_efgtoa^0,c
  4465  0008A6  0EFF               	movlw	255
  4466  0008A8  6E36               	movwf	(??_efgtoa+1)^0,c
  4467  0008AA  5034               	movf	efgtoa@c^0,w,c
  4468  0008AC  6E37               	movwf	(??_efgtoa+2)^0,c
  4469  0008AE  6A38               	clrf	(??_efgtoa+3)^0,c
  4470  0008B0  5035               	movf	??_efgtoa^0,w,c
  4471  0008B2  2637               	addwf	(??_efgtoa+2)^0,f,c
  4472  0008B4  5036               	movf	(??_efgtoa+1)^0,w,c
  4473  0008B6  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4474  0008B8  5038               	movf	(??_efgtoa+3)^0,w,c
  4475  0008BA  E10A               	bnz	u4410
  4476  0008BC  0E1A               	movlw	26
  4477  0008BE  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4478  0008C0  A0D8               	btfss	status,0,c
  4479  0008C2  EF65  F004         	goto	u4411
  4480  0008C6  EF68  F004         	goto	u4410
  4481  0008CA                     u4411:
  4482  0008CA  0E01               	movlw	1
  4483  0008CC  EF69  F004         	goto	u4420
  4484  0008D0                     u4410:
  4485  0008D0  0E00               	movlw	0
  4486  0008D2                     u4420:
  4487  0008D2  6E42               	movwf	_efgtoa$743^0,c
  4488  0008D4  6A43               	clrf	(_efgtoa$743+1)^0,c
  4489  0008D6  5042               	movf	_efgtoa$743^0,w,c
  4490  0008D8  1043               	iorwf	(_efgtoa$743+1)^0,w,c
  4491  0008DA  B4D8               	btfsc	status,2,c
  4492  0008DC  EF72  F004         	goto	u4431
  4493  0008E0  EF74  F004         	goto	u4430
  4494  0008E4                     u4431:
  4495  0008E4  EF82  F004         	goto	l3863
  4496  0008E8                     u4430:
  4497  0008E8                     
  4498                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             strcp
      +                          y(&dbuf[n], "NAN");
  4499  0008E8  0E00               	movlw	low _dbuf
  4500  0008EA  246C               	addwf	efgtoa@n^0,w,c
  4501  0008EC  6E01               	movwf	strcpy@dest^0,c
  4502  0008EE  0E01               	movlw	high _dbuf
  4503  0008F0  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4504  0008F2  6E02               	movwf	(strcpy@dest+1)^0,c
  4505  0008F4  0EE0               	movlw	low STR_35
  4506  0008F6  6E03               	movwf	strcpy@src^0,c
  4507  0008F8  0E06               	movlw	high STR_35
  4508  0008FA  6E04               	movwf	(strcpy@src+1)^0,c
  4509  0008FC  EC3D  F01F         	call	_strcpy	;wreg free
  4510                           
  4511                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } else {
  4512  000900  EF26  F004         	goto	l3847
  4513  000904                     l3863:
  4514                           
  4515                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             strcp
      +                          y(&dbuf[n], "nan");
  4516  000904  0E00               	movlw	low _dbuf
  4517  000906  246C               	addwf	efgtoa@n^0,w,c
  4518  000908  6E01               	movwf	strcpy@dest^0,c
  4519  00090A  0E01               	movlw	high _dbuf
  4520  00090C  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4521  00090E  6E02               	movwf	(strcpy@dest+1)^0,c
  4522  000910  0EE8               	movlw	low STR_36
  4523  000912  6E03               	movwf	strcpy@src^0,c
  4524  000914  0E06               	movlw	high STR_36
  4525  000916  6E04               	movwf	(strcpy@src+1)^0,c
  4526  000918  EC3D  F01F         	call	_strcpy	;wreg free
  4527  00091C  EF26  F004         	goto	l3847
  4528  000920                     l3871:
  4529                           
  4530                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  4531  000920  0E00               	movlw	0
  4532  000922  6E6E               	movwf	efgtoa@u^0,c
  4533  000924  0E00               	movlw	0
  4534  000926  6E6F               	movwf	(efgtoa@u+1)^0,c
  4535  000928  0E80               	movlw	128
  4536  00092A  6E70               	movwf	(efgtoa@u+2)^0,c
  4537  00092C  0E3F               	movlw	63
  4538  00092E  6E71               	movwf	(efgtoa@u+3)^0,c
  4539                           
  4540                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  4541  000930  0E00               	movlw	0
  4542  000932  6E6B               	movwf	(efgtoa@e+1)^0,c
  4543  000934  0E00               	movlw	0
  4544  000936  6E6A               	movwf	efgtoa@e^0,c
  4545  000938                     
  4546                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g == 0.
      +                          0)) {
  4547  000938  C066  F001         	movff	efgtoa@g,___fleq@ff1
  4548  00093C  C067  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  4549  000940  C068  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  4550  000944  C069  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  4551  000948  0E00               	movlw	0
  4552  00094A  6E05               	movwf	___fleq@ff2^0,c
  4553  00094C  0E00               	movlw	0
  4554  00094E  6E06               	movwf	(___fleq@ff2+1)^0,c
  4555  000950  0E00               	movlw	0
  4556  000952  6E07               	movwf	(___fleq@ff2+2)^0,c
  4557  000954  0E00               	movlw	0
  4558  000956  6E08               	movwf	(___fleq@ff2+3)^0,c
  4559  000958  EC4A  F01D         	call	___fleq	;wreg free
  4560  00095C  B0D8               	btfsc	status,0,c
  4561  00095E  EFB3  F004         	goto	u4441
  4562  000962  EFB5  F004         	goto	u4440
  4563  000966                     u4441:
  4564  000966  EF36  F005         	goto	l3889
  4565  00096A                     u4440:
  4566  00096A  EFD3  F004         	goto	l3881
  4567  00096E                     l3877:
  4568                           
  4569                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             u = u
      +                          *10.0;
  4570  00096E  C06E  F001         	movff	efgtoa@u,___flmul@b
  4571  000972  C06F  F002         	movff	efgtoa@u+1,___flmul@b+1
  4572  000976  C070  F003         	movff	efgtoa@u+2,___flmul@b+2
  4573  00097A  C071  F004         	movff	efgtoa@u+3,___flmul@b+3
  4574  00097E  0E00               	movlw	0
  4575  000980  6E05               	movwf	___flmul@a^0,c
  4576  000982  0E00               	movlw	0
  4577  000984  6E06               	movwf	(___flmul@a+1)^0,c
  4578  000986  0E20               	movlw	32
  4579  000988  6E07               	movwf	(___flmul@a+2)^0,c
  4580  00098A  0E41               	movlw	65
  4581  00098C  6E08               	movwf	(___flmul@a+3)^0,c
  4582  00098E  EC0C  F010         	call	___flmul	;wreg free
  4583  000992  C001  F06E         	movff	?___flmul,efgtoa@u
  4584  000996  C002  F06F         	movff	?___flmul+1,efgtoa@u+1
  4585  00099A  C003  F070         	movff	?___flmul+2,efgtoa@u+2
  4586  00099E  C004  F071         	movff	?___flmul+3,efgtoa@u+3
  4587  0009A2                     
  4588                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             ++e;
  4589  0009A2  4A6A               	infsnz	efgtoa@e^0,f,c
  4590  0009A4  2A6B               	incf	(efgtoa@e+1)^0,f,c
  4591  0009A6                     l3881:
  4592                           
  4593                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         while (!(
      +                          g < (u*10.0))) {
  4594  0009A6  C066  F01F         	movff	efgtoa@g,___flge@ff1
  4595  0009AA  C067  F020         	movff	efgtoa@g+1,___flge@ff1+1
  4596  0009AE  C068  F021         	movff	efgtoa@g+2,___flge@ff1+2
  4597  0009B2  C069  F022         	movff	efgtoa@g+3,___flge@ff1+3
  4598  0009B6  0E00               	movlw	0
  4599  0009B8  6E05               	movwf	___flmul@a^0,c
  4600  0009BA  0E00               	movlw	0
  4601  0009BC  6E06               	movwf	(___flmul@a+1)^0,c
  4602  0009BE  0E20               	movlw	32
  4603  0009C0  6E07               	movwf	(___flmul@a+2)^0,c
  4604  0009C2  0E41               	movlw	65
  4605  0009C4  6E08               	movwf	(___flmul@a+3)^0,c
  4606  0009C6  C06E  F001         	movff	efgtoa@u,___flmul@b
  4607  0009CA  C06F  F002         	movff	efgtoa@u+1,___flmul@b+1
  4608  0009CE  C070  F003         	movff	efgtoa@u+2,___flmul@b+2
  4609  0009D2  C071  F004         	movff	efgtoa@u+3,___flmul@b+3
  4610  0009D6  EC0C  F010         	call	___flmul	;wreg free
  4611  0009DA  C001  F023         	movff	?___flmul,___flge@ff2
  4612  0009DE  C002  F024         	movff	?___flmul+1,___flge@ff2+1
  4613  0009E2  C003  F025         	movff	?___flmul+2,___flge@ff2+2
  4614  0009E6  C004  F026         	movff	?___flmul+3,___flge@ff2+3
  4615  0009EA  EC00  F01A         	call	___flge	;wreg free
  4616  0009EE  B0D8               	btfsc	status,0,c
  4617  0009F0  EFFC  F004         	goto	u4451
  4618  0009F4  EFFE  F004         	goto	u4450
  4619  0009F8                     u4451:
  4620  0009F8  EFB7  F004         	goto	l3877
  4621  0009FC                     u4450:
  4622  0009FC  EF1D  F005         	goto	l3887
  4623  000A00                     l3883:
  4624                           
  4625                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             u = u
      +                          /10.0;
  4626  000A00  C06E  F001         	movff	efgtoa@u,___fldiv@b
  4627  000A04  C06F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4628  000A08  C070  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4629  000A0C  C071  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4630  000A10  0E00               	movlw	0
  4631  000A12  6E05               	movwf	___fldiv@a^0,c
  4632  000A14  0E00               	movlw	0
  4633  000A16  6E06               	movwf	(___fldiv@a+1)^0,c
  4634  000A18  0E20               	movlw	32
  4635  000A1A  6E07               	movwf	(___fldiv@a+2)^0,c
  4636  000A1C  0E41               	movlw	65
  4637  000A1E  6E08               	movwf	(___fldiv@a+3)^0,c
  4638  000A20  EC21  F012         	call	___fldiv	;wreg free
  4639  000A24  C001  F06E         	movff	?___fldiv,efgtoa@u
  4640  000A28  C002  F06F         	movff	?___fldiv+1,efgtoa@u+1
  4641  000A2C  C003  F070         	movff	?___fldiv+2,efgtoa@u+2
  4642  000A30  C004  F071         	movff	?___fldiv+3,efgtoa@u+3
  4643  000A34                     
  4644                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             --e;
  4645  000A34  066A               	decf	efgtoa@e^0,f,c
  4646  000A36  A0D8               	btfss	status,0,c
  4647  000A38  066B               	decf	(efgtoa@e+1)^0,f,c
  4648  000A3A                     l3887:
  4649                           
  4650                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         while (g 
      +                          < u) {
  4651  000A3A  C066  F01F         	movff	efgtoa@g,___flge@ff1
  4652  000A3E  C067  F020         	movff	efgtoa@g+1,___flge@ff1+1
  4653  000A42  C068  F021         	movff	efgtoa@g+2,___flge@ff1+2
  4654  000A46  C069  F022         	movff	efgtoa@g+3,___flge@ff1+3
  4655  000A4A  C06E  F023         	movff	efgtoa@u,___flge@ff2
  4656  000A4E  C06F  F024         	movff	efgtoa@u+1,___flge@ff2+1
  4657  000A52  C070  F025         	movff	efgtoa@u+2,___flge@ff2+2
  4658  000A56  C071  F026         	movff	efgtoa@u+3,___flge@ff2+3
  4659  000A5A  EC00  F01A         	call	___flge	;wreg free
  4660  000A5E  A0D8               	btfss	status,0,c
  4661  000A60  EF34  F005         	goto	u4461
  4662  000A64  EF36  F005         	goto	u4460
  4663  000A68                     u4461:
  4664  000A68  EF00  F005         	goto	l3883
  4665  000A6C                     u4460:
  4666  000A6C                     l3889:
  4667                           
  4668                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = tolowe
      +                          r((int)c);
  4669  000A6C  C034  F007         	movff	efgtoa@c,tolower@c
  4670  000A70  6A08               	clrf	(tolower@c+1)^0,c
  4671  000A72  ECDF  F01E         	call	_tolower	;wreg free
  4672  000A76  5007               	movf	?_tolower^0,w,c
  4673  000A78  6E5B               	movwf	efgtoa@mode^0,c
  4674  000A7A                     
  4675                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = mode;
  4676  000A7A  C05B  F058         	movff	efgtoa@mode,efgtoa@nmode
  4677  000A7E                     
  4678                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode == '
      +                          g') {
  4679  000A7E  0E67               	movlw	103
  4680  000A80  185B               	xorwf	efgtoa@mode^0,w,c
  4681  000A82  A4D8               	btfss	status,2,c
  4682  000A84  EF46  F005         	goto	u4471
  4683  000A88  EF48  F005         	goto	u4470
  4684  000A8C                     u4471:
  4685  000A8C  EF6F  F005         	goto	l3903
  4686  000A90                     u4470:
  4687  000A90                     
  4688                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec == 0) 
      +                          {
  4689  000A90  0100               	movlb	0	; () banked
  4690  000A92  51E5               	movf	_prec& (0+255),w,b
  4691  000A94  11E6               	iorwf	(_prec+1)& (0+255),w,b
  4692  000A96  A4D8               	btfss	status,2,c
  4693  000A98  EF50  F005         	goto	u4481
  4694  000A9C  EF52  F005         	goto	u4480
  4695  000AA0                     u4481:
  4696  000AA0  EF56  F005         	goto	l3899
  4697  000AA4                     u4480:
  4698  000AA4                     
  4699                           ; BSR set to: 0
  4700                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  4701  000AA4  0E00               	movlw	0
  4702  000AA6  6FE6               	movwf	(_prec+1)& (0+255),b
  4703  000AA8  0E01               	movlw	1
  4704  000AAA  6FE5               	movwf	_prec& (0+255),b
  4705  000AAC                     l3899:
  4706                           
  4707                           ; BSR set to: 0
  4708                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = (0 < 
      +                          prec) ? prec : 6;
  4709  000AAC  BFE6               	btfsc	(_prec+1)& (0+255),7,b
  4710  000AAE  EF63  F005         	goto	u4490
  4711  000AB2  51E6               	movf	(_prec+1)& (0+255),w,b
  4712  000AB4  E106               	bnz	u4491
  4713  000AB6  05E5               	decf	_prec& (0+255),w,b
  4714  000AB8  B0D8               	btfsc	status,0,c
  4715  000ABA  EF61  F005         	goto	u4491
  4716  000ABE  EF63  F005         	goto	u4490
  4717  000AC2                     u4491:
  4718  000AC2  EF69  F005         	goto	l965
  4719  000AC6                     u4490:
  4720  000AC6                     l3901:
  4721                           
  4722                           ; BSR set to: 0
  4723  000AC6  0E00               	movlw	0
  4724  000AC8  6E57               	movwf	(efgtoa@p+1)^0,c
  4725  000ACA  0E06               	movlw	6
  4726  000ACC  6E56               	movwf	efgtoa@p^0,c
  4727  000ACE  EF79  F005         	goto	l3909
  4728  000AD2                     l965:
  4729                           
  4730                           ; BSR set to: 0
  4731  000AD2  C0E5  F056         	movff	_prec,efgtoa@p
  4732  000AD6  C0E6  F057         	movff	_prec+1,efgtoa@p+1
  4733  000ADA  EF79  F005         	goto	l3909
  4734  000ADE                     l3903:
  4735                           
  4736                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = (prec
      +                           < 0) ? 6 : prec;
  4737  000ADE  0100               	movlb	0	; () banked
  4738  000AE0  BFE6               	btfsc	(_prec+1)& (0+255),7,b
  4739  000AE2  EF75  F005         	goto	u4501
  4740  000AE6  EF77  F005         	goto	u4500
  4741  000AEA                     u4501:
  4742  000AEA  EF63  F005         	goto	l3901
  4743  000AEE                     u4500:
  4744  000AEE  EF69  F005         	goto	l965
  4745  000AF2                     l3909:
  4746                           
  4747                           ; BSR set to: 0
  4748                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode == '
      +                          g') {
  4749  000AF2  0E67               	movlw	103
  4750  000AF4  185B               	xorwf	efgtoa@mode^0,w,c
  4751  000AF6  A4D8               	btfss	status,2,c
  4752  000AF8  EF80  F005         	goto	u4511
  4753  000AFC  EF82  F005         	goto	u4510
  4754  000B00                     u4511:
  4755  000B00  EFB1  F005         	goto	l3919
  4756  000B04                     u4510:
  4757  000B04                     
  4758                           ; BSR set to: 0
  4759                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (!(e <
      +                           -4) && !((p - 1) < e)) {
  4760  000B04  AE6B               	btfss	(efgtoa@e+1)^0,7,c
  4761  000B06  EF90  F005         	goto	u4520
  4762  000B0A  0EFC               	movlw	252
  4763  000B0C  5C6A               	subwf	efgtoa@e^0,w,c
  4764  000B0E  0EFF               	movlw	255
  4765  000B10  586B               	subwfb	(efgtoa@e+1)^0,w,c
  4766  000B12  A0D8               	btfss	status,0,c
  4767  000B14  EF8E  F005         	goto	u4521
  4768  000B18  EF90  F005         	goto	u4520
  4769  000B1C                     u4521:
  4770  000B1C  EFAF  F005         	goto	l3917
  4771  000B20                     u4520:
  4772  000B20                     
  4773                           ; BSR set to: 0
  4774  000B20  0EFF               	movlw	255
  4775  000B22  6E35               	movwf	??_efgtoa^0,c
  4776  000B24  0EFF               	movlw	255
  4777  000B26  6E36               	movwf	(??_efgtoa+1)^0,c
  4778  000B28  C056  F037         	movff	efgtoa@p,??_efgtoa+2
  4779  000B2C  C057  F038         	movff	efgtoa@p+1,??_efgtoa+3
  4780  000B30  5035               	movf	??_efgtoa^0,w,c
  4781  000B32  2637               	addwf	(??_efgtoa+2)^0,f,c
  4782  000B34  5036               	movf	(??_efgtoa+1)^0,w,c
  4783  000B36  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4784  000B38  506A               	movf	efgtoa@e^0,w,c
  4785  000B3A  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4786  000B3C  5038               	movf	(??_efgtoa+3)^0,w,c
  4787  000B3E  0A80               	xorlw	128
  4788  000B40  6E39               	movwf	(??_efgtoa+4)^0,c
  4789  000B42  506B               	movf	(efgtoa@e+1)^0,w,c
  4790  000B44  0A80               	xorlw	128
  4791  000B46  5839               	subwfb	(??_efgtoa+4)^0,w,c
  4792  000B48  A0D8               	btfss	status,0,c
  4793  000B4A  EFA9  F005         	goto	u4531
  4794  000B4E  EFAB  F005         	goto	u4530
  4795  000B52                     u4531:
  4796  000B52  EFAF  F005         	goto	l3917
  4797  000B56                     u4530:
  4798  000B56                     
  4799                           ; BSR set to: 0
  4800                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             nmode
      +                           = 'f';
  4801  000B56  0E66               	movlw	102
  4802  000B58  6E58               	movwf	efgtoa@nmode^0,c
  4803                           
  4804                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } else {
  4805  000B5A  EFB1  F005         	goto	l3919
  4806  000B5E                     l3917:
  4807                           
  4808                           ; BSR set to: 0
  4809                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             nmode
      +                           = 'e';
  4810  000B5E  0E65               	movlw	101
  4811  000B60  6E58               	movwf	efgtoa@nmode^0,c
  4812  000B62                     l3919:
  4813                           
  4814                           ; BSR set to: 0
  4815                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  4816  000B62  C056  F04E         	movff	efgtoa@p,efgtoa@m
  4817  000B66  C057  F04F         	movff	efgtoa@p+1,efgtoa@m+1
  4818  000B6A                     
  4819                           ; BSR set to: 0
  4820                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mode ==
      +                           'g') || ((nmode == 'f') && (e < 0))) {
  4821  000B6A  0E67               	movlw	103
  4822  000B6C  185B               	xorwf	efgtoa@mode^0,w,c
  4823  000B6E  A4D8               	btfss	status,2,c
  4824  000B70  EFBC  F005         	goto	u4541
  4825  000B74  EFBE  F005         	goto	u4540
  4826  000B78                     u4541:
  4827  000B78  EFCE  F005         	goto	l3927
  4828  000B7C                     u4540:
  4829  000B7C                     
  4830                           ; BSR set to: 0
  4831  000B7C  0E66               	movlw	102
  4832  000B7E  1858               	xorwf	efgtoa@nmode^0,w,c
  4833  000B80  A4D8               	btfss	status,2,c
  4834  000B82  EFC5  F005         	goto	u4551
  4835  000B86  EFC7  F005         	goto	u4550
  4836  000B8A                     u4551:
  4837  000B8A  EFD0  F005         	goto	l3929
  4838  000B8E                     u4550:
  4839  000B8E                     
  4840                           ; BSR set to: 0
  4841  000B8E  BE6B               	btfsc	(efgtoa@e+1)^0,7,c
  4842  000B90  EFCE  F005         	goto	u4560
  4843  000B94  EFCC  F005         	goto	u4561
  4844  000B98                     u4561:
  4845  000B98  EFD0  F005         	goto	l3929
  4846  000B9C                     u4560:
  4847  000B9C                     l3927:
  4848                           
  4849                           ; BSR set to: 0
  4850                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  4851  000B9C  4A4E               	infsnz	efgtoa@m^0,f,c
  4852  000B9E  2A4F               	incf	(efgtoa@m+1)^0,f,c
  4853  000BA0                     l3929:
  4854                           
  4855                           ; BSR set to: 0
  4856                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmode == 
      +                          'f') {
  4857  000BA0  0E66               	movlw	102
  4858  000BA2  1858               	xorwf	efgtoa@nmode^0,w,c
  4859  000BA4  A4D8               	btfss	status,2,c
  4860  000BA6  EFD7  F005         	goto	u4571
  4861  000BAA  EFD9  F005         	goto	u4570
  4862  000BAE                     u4571:
  4863  000BAE  EFF9  F005         	goto	l3939
  4864  000BB2                     u4570:
  4865  000BB2                     
  4866                           ; BSR set to: 0
  4867                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (e < 0
      +                          ) {
  4868  000BB2  BE6B               	btfsc	(efgtoa@e+1)^0,7,c
  4869  000BB4  EFE0  F005         	goto	u4580
  4870  000BB8  EFDE  F005         	goto	u4581
  4871  000BBC                     u4581:
  4872  000BBC  EFEC  F005         	goto	l3935
  4873  000BC0                     u4580:
  4874  000BC0                     
  4875                           ; BSR set to: 0
  4876                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             u = 1
      +                          .0;
  4877  000BC0  0E00               	movlw	0
  4878  000BC2  6E6E               	movwf	efgtoa@u^0,c
  4879  000BC4  0E00               	movlw	0
  4880  000BC6  6E6F               	movwf	(efgtoa@u+1)^0,c
  4881  000BC8  0E80               	movlw	128
  4882  000BCA  6E70               	movwf	(efgtoa@u+2)^0,c
  4883  000BCC  0E3F               	movlw	63
  4884  000BCE  6E71               	movwf	(efgtoa@u+3)^0,c
  4885                           
  4886                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             e = 0
      +                          ;
  4887  000BD0  0E00               	movlw	0
  4888  000BD2  6E6B               	movwf	(efgtoa@e+1)^0,c
  4889  000BD4  0E00               	movlw	0
  4890  000BD6  6E6A               	movwf	efgtoa@e^0,c
  4891  000BD8                     l3935:
  4892                           
  4893                           ; BSR set to: 0
  4894                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (!(mod
      +                          e == 'g')) {
  4895  000BD8  0E67               	movlw	103
  4896  000BDA  185B               	xorwf	efgtoa@mode^0,w,c
  4897  000BDC  B4D8               	btfsc	status,2,c
  4898  000BDE  EFF3  F005         	goto	u4591
  4899  000BE2  EFF5  F005         	goto	u4590
  4900  000BE6                     u4591:
  4901  000BE6  EFF9  F005         	goto	l3939
  4902  000BEA                     u4590:
  4903  000BEA                     
  4904                           ; BSR set to: 0
  4905                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             m += 
      +                          e;
  4906  000BEA  506A               	movf	efgtoa@e^0,w,c
  4907  000BEC  264E               	addwf	efgtoa@m^0,f,c
  4908  000BEE  506B               	movf	(efgtoa@e+1)^0,w,c
  4909  000BF0  224F               	addwfc	(efgtoa@m+1)^0,f,c
  4910  000BF2                     l3939:
  4911                           
  4912                           ; BSR set to: 0
  4913                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  4914  000BF2  0E00               	movlw	0
  4915  000BF4  6E65               	movwf	(efgtoa@i+1)^0,c
  4916  000BF6  0E00               	movlw	0
  4917  000BF8  6E64               	movwf	efgtoa@i^0,c
  4918  000BFA                     
  4919                           ; BSR set to: 0
  4920                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  4921  000BFA  C066  F05C         	movff	efgtoa@g,efgtoa@h
  4922  000BFE  C067  F05D         	movff	efgtoa@g+1,efgtoa@h+1
  4923  000C02  C068  F05E         	movff	efgtoa@g+2,efgtoa@h+2
  4924  000C06  C069  F05F         	movff	efgtoa@g+3,efgtoa@h+3
  4925  000C0A                     
  4926                           ; BSR set to: 0
  4927                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  4928  000C0A  C06E  F03A         	movff	efgtoa@u,efgtoa@ou
  4929  000C0E  C06F  F03B         	movff	efgtoa@u+1,efgtoa@ou+1
  4930  000C12  C070  F03C         	movff	efgtoa@u+2,efgtoa@ou+2
  4931  000C16  C071  F03D         	movff	efgtoa@u+3,efgtoa@ou+3
  4932                           
  4933                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i < m)
      +                           {
  4934  000C1A  EF89  F006         	goto	l3953
  4935  000C1E                     l3945:
  4936                           
  4937                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = floor
      +                          f(h/u);
  4938  000C1E  C05C  F001         	movff	efgtoa@h,___fldiv@b
  4939  000C22  C05D  F002         	movff	efgtoa@h+1,___fldiv@b+1
  4940  000C26  C05E  F003         	movff	efgtoa@h+2,___fldiv@b+2
  4941  000C2A  C05F  F004         	movff	efgtoa@h+3,___fldiv@b+3
  4942  000C2E  C06E  F005         	movff	efgtoa@u,___fldiv@a
  4943  000C32  C06F  F006         	movff	efgtoa@u+1,___fldiv@a+1
  4944  000C36  C070  F007         	movff	efgtoa@u+2,___fldiv@a+2
  4945  000C3A  C071  F008         	movff	efgtoa@u+3,___fldiv@a+3
  4946  000C3E  EC21  F012         	call	___fldiv	;wreg free
  4947  000C42  C001  F01A         	movff	?___fldiv,floorf@x
  4948  000C46  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  4949  000C4A  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  4950  000C4E  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  4951  000C52  EC12  F015         	call	_floorf	;wreg free
  4952  000C56  C01A  F060         	movff	?_floorf,efgtoa@l
  4953  000C5A  C01B  F061         	movff	?_floorf+1,efgtoa@l+1
  4954  000C5E  C01C  F062         	movff	?_floorf+2,efgtoa@l+2
  4955  000C62  C01D  F063         	movff	?_floorf+3,efgtoa@l+3
  4956                           
  4957                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = (int)
      +                          l;
  4958  000C66  C060  F01A         	movff	efgtoa@l,___fltol@f1
  4959  000C6A  C061  F01B         	movff	efgtoa@l+1,___fltol@f1+1
  4960  000C6E  C062  F01C         	movff	efgtoa@l+2,___fltol@f1+2
  4961  000C72  C063  F01D         	movff	efgtoa@l+3,___fltol@f1+3
  4962  000C76  EC7D  F019         	call	___fltol	;wreg free
  4963  000C7A  C01A  F052         	movff	?___fltol,efgtoa@d
  4964  000C7E  C01B  F053         	movff	?___fltol+1,efgtoa@d+1
  4965  000C82                     
  4966                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -= l*u;
  4967  000C82  C05C  F01F         	movff	efgtoa@h,___flsub@b
  4968  000C86  C05D  F020         	movff	efgtoa@h+1,___flsub@b+1
  4969  000C8A  C05E  F021         	movff	efgtoa@h+2,___flsub@b+2
  4970  000C8E  C05F  F022         	movff	efgtoa@h+3,___flsub@b+3
  4971  000C92  C06E  F005         	movff	efgtoa@u,___flmul@a
  4972  000C96  C06F  F006         	movff	efgtoa@u+1,___flmul@a+1
  4973  000C9A  C070  F007         	movff	efgtoa@u+2,___flmul@a+2
  4974  000C9E  C071  F008         	movff	efgtoa@u+3,___flmul@a+3
  4975  000CA2  C060  F001         	movff	efgtoa@l,___flmul@b
  4976  000CA6  C061  F002         	movff	efgtoa@l+1,___flmul@b+1
  4977  000CAA  C062  F003         	movff	efgtoa@l+2,___flmul@b+2
  4978  000CAE  C063  F004         	movff	efgtoa@l+3,___flmul@b+3
  4979  000CB2  EC0C  F010         	call	___flmul	;wreg free
  4980  000CB6  C001  F023         	movff	?___flmul,___flsub@a
  4981  000CBA  C002  F024         	movff	?___flmul+1,___flsub@a+1
  4982  000CBE  C003  F025         	movff	?___flmul+2,___flsub@a+2
  4983  000CC2  C004  F026         	movff	?___flmul+3,___flsub@a+3
  4984  000CC6  ECBD  F01F         	call	___flsub	;wreg free
  4985  000CCA  C01F  F05C         	movff	?___flsub,efgtoa@h
  4986  000CCE  C020  F05D         	movff	?___flsub+1,efgtoa@h+1
  4987  000CD2  C021  F05E         	movff	?___flsub+2,efgtoa@h+2
  4988  000CD6  C022  F05F         	movff	?___flsub+3,efgtoa@h+3
  4989  000CDA                     
  4990                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = u/10.
      +                          0;
  4991  000CDA  C06E  F001         	movff	efgtoa@u,___fldiv@b
  4992  000CDE  C06F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4993  000CE2  C070  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4994  000CE6  C071  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4995  000CEA  0E00               	movlw	0
  4996  000CEC  6E05               	movwf	___fldiv@a^0,c
  4997  000CEE  0E00               	movlw	0
  4998  000CF0  6E06               	movwf	(___fldiv@a+1)^0,c
  4999  000CF2  0E20               	movlw	32
  5000  000CF4  6E07               	movwf	(___fldiv@a+2)^0,c
  5001  000CF6  0E41               	movlw	65
  5002  000CF8  6E08               	movwf	(___fldiv@a+3)^0,c
  5003  000CFA  EC21  F012         	call	___fldiv	;wreg free
  5004  000CFE  C001  F06E         	movff	?___fldiv,efgtoa@u
  5005  000D02  C002  F06F         	movff	?___fldiv+1,efgtoa@u+1
  5006  000D06  C003  F070         	movff	?___fldiv+2,efgtoa@u+2
  5007  000D0A  C004  F071         	movff	?___fldiv+3,efgtoa@u+3
  5008  000D0E                     
  5009                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  5010  000D0E  4A64               	infsnz	efgtoa@i^0,f,c
  5011  000D10  2A65               	incf	(efgtoa@i+1)^0,f,c
  5012  000D12                     l3953:
  5013                           
  5014                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i < m)
      +                           {
  5015  000D12  504E               	movf	efgtoa@m^0,w,c
  5016  000D14  5C64               	subwf	efgtoa@i^0,w,c
  5017  000D16  5065               	movf	(efgtoa@i+1)^0,w,c
  5018  000D18  0A80               	xorlw	128
  5019  000D1A  6E35               	movwf	??_efgtoa^0,c
  5020  000D1C  504F               	movf	(efgtoa@m+1)^0,w,c
  5021  000D1E  0A80               	xorlw	128
  5022  000D20  5835               	subwfb	??_efgtoa^0,w,c
  5023  000D22  A0D8               	btfss	status,0,c
  5024  000D24  EF96  F006         	goto	u4601
  5025  000D28  EF98  F006         	goto	u4600
  5026  000D2C                     u4601:
  5027  000D2C  EF0F  F006         	goto	l3945
  5028  000D30                     u4600:
  5029  000D30                     
  5030                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.0;
  5031  000D30  C06E  F001         	movff	efgtoa@u,___flmul@b
  5032  000D34  C06F  F002         	movff	efgtoa@u+1,___flmul@b+1
  5033  000D38  C070  F003         	movff	efgtoa@u+2,___flmul@b+2
  5034  000D3C  C071  F004         	movff	efgtoa@u+3,___flmul@b+3
  5035  000D40  0E00               	movlw	0
  5036  000D42  6E05               	movwf	___flmul@a^0,c
  5037  000D44  0E00               	movlw	0
  5038  000D46  6E06               	movwf	(___flmul@a+1)^0,c
  5039  000D48  0EA0               	movlw	160
  5040  000D4A  6E07               	movwf	(___flmul@a+2)^0,c
  5041  000D4C  0E40               	movlw	64
  5042  000D4E  6E08               	movwf	(___flmul@a+3)^0,c
  5043  000D50  EC0C  F010         	call	___flmul	;wreg free
  5044  000D54  C001  F060         	movff	?___flmul,efgtoa@l
  5045  000D58  C002  F061         	movff	?___flmul+1,efgtoa@l+1
  5046  000D5C  C003  F062         	movff	?___flmul+2,efgtoa@l+2
  5047  000D60  C004  F063         	movff	?___flmul+3,efgtoa@l+3
  5048  000D64                     
  5049                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < l) {
  5050  000D64  C05C  F01F         	movff	efgtoa@h,___flge@ff1
  5051  000D68  C05D  F020         	movff	efgtoa@h+1,___flge@ff1+1
  5052  000D6C  C05E  F021         	movff	efgtoa@h+2,___flge@ff1+2
  5053  000D70  C05F  F022         	movff	efgtoa@h+3,___flge@ff1+3
  5054  000D74  C060  F023         	movff	efgtoa@l,___flge@ff2
  5055  000D78  C061  F024         	movff	efgtoa@l+1,___flge@ff2+1
  5056  000D7C  C062  F025         	movff	efgtoa@l+2,___flge@ff2+2
  5057  000D80  C063  F026         	movff	efgtoa@l+3,___flge@ff2+3
  5058  000D84  EC00  F01A         	call	___flge	;wreg free
  5059  000D88  B0D8               	btfsc	status,0,c
  5060  000D8A  EFC9  F006         	goto	u4611
  5061  000D8E  EFCB  F006         	goto	u4610
  5062  000D92                     u4611:
  5063  000D92  EFD5  F006         	goto	l3961
  5064  000D96                     u4610:
  5065  000D96                     
  5066                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 0.0;
  5067  000D96  0E00               	movlw	0
  5068  000D98  6E60               	movwf	efgtoa@l^0,c
  5069  000D9A  0E00               	movlw	0
  5070  000D9C  6E61               	movwf	(efgtoa@l+1)^0,c
  5071  000D9E  0E00               	movlw	0
  5072  000DA0  6E62               	movwf	(efgtoa@l+2)^0,c
  5073  000DA2  0E00               	movlw	0
  5074  000DA4  6E63               	movwf	(efgtoa@l+3)^0,c
  5075                           
  5076                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  5077  000DA6  EFFD  F006         	goto	l3967
  5078  000DAA                     l3961:
  5079                           
  5080                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if ((h ==
      +                           l) && !(d % 2)) {
  5081  000DAA  C05C  F001         	movff	efgtoa@h,___fleq@ff1
  5082  000DAE  C05D  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  5083  000DB2  C05E  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  5084  000DB6  C05F  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  5085  000DBA  C060  F005         	movff	efgtoa@l,___fleq@ff2
  5086  000DBE  C061  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  5087  000DC2  C062  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  5088  000DC6  C063  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  5089  000DCA  EC4A  F01D         	call	___fleq	;wreg free
  5090  000DCE  A0D8               	btfss	status,0,c
  5091  000DD0  EFEC  F006         	goto	u4621
  5092  000DD4  EFEE  F006         	goto	u4620
  5093  000DD8                     u4621:
  5094  000DD8  EFFD  F006         	goto	l3967
  5095  000DDC                     u4620:
  5096  000DDC  B052               	btfsc	efgtoa@d^0,0,c
  5097  000DDE  EFF3  F006         	goto	u4631
  5098  000DE2  EFF5  F006         	goto	u4630
  5099  000DE6                     u4631:
  5100  000DE6  EFFD  F006         	goto	l3967
  5101  000DEA                     u4630:
  5102  000DEA                     
  5103                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             l = 0
      +                          .0;
  5104  000DEA  0E00               	movlw	0
  5105  000DEC  6E60               	movwf	efgtoa@l^0,c
  5106  000DEE  0E00               	movlw	0
  5107  000DF0  6E61               	movwf	(efgtoa@l+1)^0,c
  5108  000DF2  0E00               	movlw	0
  5109  000DF4  6E62               	movwf	(efgtoa@l+2)^0,c
  5110  000DF6  0E00               	movlw	0
  5111  000DF8  6E63               	movwf	(efgtoa@l+3)^0,c
  5112  000DFA                     l3967:
  5113                           
  5114                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + l;
  5115  000DFA  C066  F00F         	movff	efgtoa@g,___fladd@b
  5116  000DFE  C067  F010         	movff	efgtoa@g+1,___fladd@b+1
  5117  000E02  C068  F011         	movff	efgtoa@g+2,___fladd@b+2
  5118  000E06  C069  F012         	movff	efgtoa@g+3,___fladd@b+3
  5119  000E0A  C060  F013         	movff	efgtoa@l,___fladd@a
  5120  000E0E  C061  F014         	movff	efgtoa@l+1,___fladd@a+1
  5121  000E12  C062  F015         	movff	efgtoa@l+2,___fladd@a+2
  5122  000E16  C063  F016         	movff	efgtoa@l+3,___fladd@a+3
  5123  000E1A  EC47  F009         	call	___fladd	;wreg free
  5124  000E1E  C00F  F05C         	movff	?___fladd,efgtoa@h
  5125  000E22  C010  F05D         	movff	?___fladd+1,efgtoa@h+1
  5126  000E26  C011  F05E         	movff	?___fladd+2,efgtoa@h+2
  5127  000E2A  C012  F05F         	movff	?___fladd+3,efgtoa@h+3
  5128  000E2E                     
  5129                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  5130  000E2E  C03A  F06E         	movff	efgtoa@ou,efgtoa@u
  5131  000E32  C03B  F06F         	movff	efgtoa@ou+1,efgtoa@u+1
  5132  000E36  C03C  F070         	movff	efgtoa@ou+2,efgtoa@u+2
  5133  000E3A  C03D  F071         	movff	efgtoa@ou+3,efgtoa@u+3
  5134  000E3E                     
  5135                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nmode =
      +                          = 'e') ? 0 : e;
  5136  000E3E  0E65               	movlw	101
  5137  000E40  1858               	xorwf	efgtoa@nmode^0,w,c
  5138  000E42  B4D8               	btfsc	status,2,c
  5139  000E44  EF26  F007         	goto	u4641
  5140  000E48  EF28  F007         	goto	u4640
  5141  000E4C                     u4641:
  5142  000E4C  EF2E  F007         	goto	l3975
  5143  000E50                     u4640:
  5144  000E50  C06A  F050         	movff	efgtoa@e,efgtoa@ne
  5145  000E54  C06B  F051         	movff	efgtoa@e+1,efgtoa@ne+1
  5146  000E58  EF32  F007         	goto	l991
  5147  000E5C                     l3975:
  5148  000E5C  0E00               	movlw	0
  5149  000E5E  6E51               	movwf	(efgtoa@ne+1)^0,c
  5150  000E60  0E00               	movlw	0
  5151  000E62  6E50               	movwf	efgtoa@ne^0,c
  5152  000E64                     l991:
  5153                           
  5154                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  5155  000E64  0E00               	movlw	0
  5156  000E66  6E4D               	movwf	(efgtoa@pp+1)^0,c
  5157  000E68  0E00               	movlw	0
  5158  000E6A  6E4C               	movwf	efgtoa@pp^0,c
  5159                           
  5160                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  5161  000E6C  0E00               	movlw	0
  5162  000E6E  6E4B               	movwf	(efgtoa@t+1)^0,c
  5163  000E70  0E00               	movlw	0
  5164  000E72  6E4A               	movwf	efgtoa@t^0,c
  5165                           
  5166                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  5167  000E74  0E00               	movlw	0
  5168  000E76  6E65               	movwf	(efgtoa@i+1)^0,c
  5169  000E78  0E00               	movlw	0
  5170  000E7A  6E64               	movwf	efgtoa@i^0,c
  5171                           
  5172                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((i < m
      +                          ) && (n < (80 - 5))) {
  5173  000E7C  EF2C  F008         	goto	l4025
  5174  000E80                     l3977:
  5175                           
  5176                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = floor
      +                          f(h/u);
  5177  000E80  C05C  F001         	movff	efgtoa@h,___fldiv@b
  5178  000E84  C05D  F002         	movff	efgtoa@h+1,___fldiv@b+1
  5179  000E88  C05E  F003         	movff	efgtoa@h+2,___fldiv@b+2
  5180  000E8C  C05F  F004         	movff	efgtoa@h+3,___fldiv@b+3
  5181  000E90  C06E  F005         	movff	efgtoa@u,___fldiv@a
  5182  000E94  C06F  F006         	movff	efgtoa@u+1,___fldiv@a+1
  5183  000E98  C070  F007         	movff	efgtoa@u+2,___fldiv@a+2
  5184  000E9C  C071  F008         	movff	efgtoa@u+3,___fldiv@a+3
  5185  000EA0  EC21  F012         	call	___fldiv	;wreg free
  5186  000EA4  C001  F01A         	movff	?___fldiv,floorf@x
  5187  000EA8  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  5188  000EAC  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  5189  000EB0  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  5190  000EB4  EC12  F015         	call	_floorf	;wreg free
  5191  000EB8  C01A  F060         	movff	?_floorf,efgtoa@l
  5192  000EBC  C01B  F061         	movff	?_floorf+1,efgtoa@l+1
  5193  000EC0  C01C  F062         	movff	?_floorf+2,efgtoa@l+2
  5194  000EC4  C01D  F063         	movff	?_floorf+3,efgtoa@l+3
  5195                           
  5196                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = (int)
      +                          l;
  5197  000EC8  C060  F01A         	movff	efgtoa@l,___fltol@f1
  5198  000ECC  C061  F01B         	movff	efgtoa@l+1,___fltol@f1+1
  5199  000ED0  C062  F01C         	movff	efgtoa@l+2,___fltol@f1+2
  5200  000ED4  C063  F01D         	movff	efgtoa@l+3,___fltol@f1+3
  5201  000ED8  EC7D  F019         	call	___fltol	;wreg free
  5202  000EDC  C01A  F052         	movff	?___fltol,efgtoa@d
  5203  000EE0  C01B  F053         	movff	?___fltol+1,efgtoa@d+1
  5204  000EE4                     
  5205                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (!(fla
      +                          gs & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5206  000EE4  0100               	movlb	0	; () banked
  5207  000EE6  B9E7               	btfsc	_flags& (0+255),4,b
  5208  000EE8  EF78  F007         	goto	u4651
  5209  000EEC  EF7A  F007         	goto	u4650
  5210  000EF0                     u4651:
  5211  000EF0  EF97  F007         	goto	l3989
  5212  000EF4                     u4650:
  5213  000EF4                     
  5214                           ; BSR set to: 0
  5215  000EF4  5052               	movf	efgtoa@d^0,w,c
  5216  000EF6  1053               	iorwf	(efgtoa@d+1)^0,w,c
  5217  000EF8  A4D8               	btfss	status,2,c
  5218  000EFA  EF81  F007         	goto	u4661
  5219  000EFE  EF83  F007         	goto	u4660
  5220  000F02                     u4661:
  5221  000F02  EF97  F007         	goto	l3989
  5222  000F06                     u4660:
  5223  000F06                     
  5224                           ; BSR set to: 0
  5225  000F06  0E67               	movlw	103
  5226  000F08  185B               	xorwf	efgtoa@mode^0,w,c
  5227  000F0A  A4D8               	btfss	status,2,c
  5228  000F0C  EF8A  F007         	goto	u4671
  5229  000F10  EF8C  F007         	goto	u4670
  5230  000F14                     u4671:
  5231  000F14  EF97  F007         	goto	l3989
  5232  000F18                     u4670:
  5233  000F18                     
  5234                           ; BSR set to: 0
  5235  000F18  BE51               	btfsc	(efgtoa@ne+1)^0,7,c
  5236  000F1A  EF93  F007         	goto	u4680
  5237  000F1E  EF91  F007         	goto	u4681
  5238  000F22                     u4681:
  5239  000F22  EF97  F007         	goto	l3989
  5240  000F26                     u4680:
  5241  000F26                     
  5242                           ; BSR set to: 0
  5243                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             ++t;
  5244  000F26  4A4A               	infsnz	efgtoa@t^0,f,c
  5245  000F28  2A4B               	incf	(efgtoa@t+1)^0,f,c
  5246                           
  5247                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } else {
  5248  000F2A  EFE1  F007         	goto	l4017
  5249  000F2E                     l3989:
  5250                           
  5251                           ; BSR set to: 0
  5252                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             if (!
      +                          pp && (ne < 0)) {
  5253  000F2E  504C               	movf	efgtoa@pp^0,w,c
  5254  000F30  104D               	iorwf	(efgtoa@pp+1)^0,w,c
  5255  000F32  A4D8               	btfss	status,2,c
  5256  000F34  EF9E  F007         	goto	u4691
  5257  000F38  EFA0  F007         	goto	u4690
  5258  000F3C                     u4691:
  5259  000F3C  EFCA  F007         	goto	l4009
  5260  000F40                     u4690:
  5261  000F40                     
  5262                           ; BSR set to: 0
  5263  000F40  BE51               	btfsc	(efgtoa@ne+1)^0,7,c
  5264  000F42  EFA7  F007         	goto	u4700
  5265  000F46  EFA5  F007         	goto	u4701
  5266  000F4A                     u4701:
  5267  000F4A  EFCA  F007         	goto	l4009
  5268  000F4E                     u4700:
  5269  000F4E                     
  5270                           ; BSR set to: 0
  5271                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:                 d
      +                          buf[n++] = '.';
  5272  000F4E  0E00               	movlw	low _dbuf
  5273  000F50  246C               	addwf	efgtoa@n^0,w,c
  5274  000F52  6ED9               	movwf	fsr2l,c
  5275  000F54  0E01               	movlw	high _dbuf
  5276  000F56  206D               	addwfc	(efgtoa@n+1)^0,w,c
  5277  000F58  6EDA               	movwf	fsr2h,c
  5278  000F5A  0E2E               	movlw	46
  5279  000F5C  6EDF               	movwf	indf2,c
  5280  000F5E                     
  5281                           ; BSR set to: 0
  5282  000F5E  4A6C               	infsnz	efgtoa@n^0,f,c
  5283  000F60  2A6D               	incf	(efgtoa@n+1)^0,f,c
  5284  000F62                     
  5285                           ; BSR set to: 0
  5286                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:                 -
      +                          -w;
  5287  000F62  0659               	decf	efgtoa@w^0,f,c
  5288  000F64  A0D8               	btfss	status,0,c
  5289  000F66  065A               	decf	(efgtoa@w+1)^0,f,c
  5290  000F68                     
  5291                           ; BSR set to: 0
  5292                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:                 p
      +                          p = 1;
  5293  000F68  0E00               	movlw	0
  5294  000F6A  6E4D               	movwf	(efgtoa@pp+1)^0,c
  5295  000F6C  0E01               	movlw	1
  5296  000F6E  6E4C               	movwf	efgtoa@pp^0,c
  5297  000F70  EFCA  F007         	goto	l4009
  5298  000F74                     l4001:
  5299                           
  5300                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:                 d
      +                          buf[n++] = '0';
  5301  000F74  0E00               	movlw	low _dbuf
  5302  000F76  246C               	addwf	efgtoa@n^0,w,c
  5303  000F78  6ED9               	movwf	fsr2l,c
  5304  000F7A  0E01               	movlw	high _dbuf
  5305  000F7C  206D               	addwfc	(efgtoa@n+1)^0,w,c
  5306  000F7E  6EDA               	movwf	fsr2h,c
  5307  000F80  0E30               	movlw	48
  5308  000F82  6EDF               	movwf	indf2,c
  5309  000F84  4A6C               	infsnz	efgtoa@n^0,f,c
  5310  000F86  2A6D               	incf	(efgtoa@n+1)^0,f,c
  5311  000F88                     
  5312                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:                 -
      +                          -w;
  5313  000F88  0659               	decf	efgtoa@w^0,f,c
  5314  000F8A  A0D8               	btfss	status,0,c
  5315  000F8C  065A               	decf	(efgtoa@w+1)^0,f,c
  5316  000F8E                     
  5317                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:                 -
      +                          -t;
  5318  000F8E  064A               	decf	efgtoa@t^0,f,c
  5319  000F90  A0D8               	btfss	status,0,c
  5320  000F92  064B               	decf	(efgtoa@t+1)^0,f,c
  5321  000F94                     l4009:
  5322                           
  5323                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             while
      +                           (t) {
  5324  000F94  504A               	movf	efgtoa@t^0,w,c
  5325  000F96  104B               	iorwf	(efgtoa@t+1)^0,w,c
  5326  000F98  A4D8               	btfss	status,2,c
  5327  000F9A  EFD1  F007         	goto	u4711
  5328  000F9E  EFD3  F007         	goto	u4710
  5329  000FA2                     u4711:
  5330  000FA2  EFBA  F007         	goto	l4001
  5331  000FA6                     u4710:
  5332  000FA6                     
  5333                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             dbuf[
      +                          n++] = '0' + d;
  5334  000FA6  0E00               	movlw	low _dbuf
  5335  000FA8  246C               	addwf	efgtoa@n^0,w,c
  5336  000FAA  6ED9               	movwf	fsr2l,c
  5337  000FAC  0E01               	movlw	high _dbuf
  5338  000FAE  206D               	addwfc	(efgtoa@n+1)^0,w,c
  5339  000FB0  6EDA               	movwf	fsr2h,c
  5340  000FB2  5052               	movf	efgtoa@d^0,w,c
  5341  000FB4  0F30               	addlw	48
  5342  000FB6  6EDF               	movwf	indf2,c
  5343  000FB8  4A6C               	infsnz	efgtoa@n^0,f,c
  5344  000FBA  2A6D               	incf	(efgtoa@n+1)^0,f,c
  5345  000FBC                     
  5346                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             --w;
  5347  000FBC  0659               	decf	efgtoa@w^0,f,c
  5348  000FBE  A0D8               	btfss	status,0,c
  5349  000FC0  065A               	decf	(efgtoa@w+1)^0,f,c
  5350  000FC2                     l4017:
  5351                           
  5352                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -= l*u;
  5353  000FC2  C05C  F01F         	movff	efgtoa@h,___flsub@b
  5354  000FC6  C05D  F020         	movff	efgtoa@h+1,___flsub@b+1
  5355  000FCA  C05E  F021         	movff	efgtoa@h+2,___flsub@b+2
  5356  000FCE  C05F  F022         	movff	efgtoa@h+3,___flsub@b+3
  5357  000FD2  C06E  F005         	movff	efgtoa@u,___flmul@a
  5358  000FD6  C06F  F006         	movff	efgtoa@u+1,___flmul@a+1
  5359  000FDA  C070  F007         	movff	efgtoa@u+2,___flmul@a+2
  5360  000FDE  C071  F008         	movff	efgtoa@u+3,___flmul@a+3
  5361  000FE2  C060  F001         	movff	efgtoa@l,___flmul@b
  5362  000FE6  C061  F002         	movff	efgtoa@l+1,___flmul@b+1
  5363  000FEA  C062  F003         	movff	efgtoa@l+2,___flmul@b+2
  5364  000FEE  C063  F004         	movff	efgtoa@l+3,___flmul@b+3
  5365  000FF2  EC0C  F010         	call	___flmul	;wreg free
  5366  000FF6  C001  F023         	movff	?___flmul,___flsub@a
  5367  000FFA  C002  F024         	movff	?___flmul+1,___flsub@a+1
  5368  000FFE  C003  F025         	movff	?___flmul+2,___flsub@a+2
  5369  001002  C004  F026         	movff	?___flmul+3,___flsub@a+3
  5370  001006  ECBD  F01F         	call	___flsub	;wreg free
  5371  00100A  C01F  F05C         	movff	?___flsub,efgtoa@h
  5372  00100E  C020  F05D         	movff	?___flsub+1,efgtoa@h+1
  5373  001012  C021  F05E         	movff	?___flsub+2,efgtoa@h+2
  5374  001016  C022  F05F         	movff	?___flsub+3,efgtoa@h+3
  5375  00101A                     
  5376                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = u/10.
      +                          0;
  5377  00101A  C06E  F001         	movff	efgtoa@u,___fldiv@b
  5378  00101E  C06F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  5379  001022  C070  F003         	movff	efgtoa@u+2,___fldiv@b+2
  5380  001026  C071  F004         	movff	efgtoa@u+3,___fldiv@b+3
  5381  00102A  0E00               	movlw	0
  5382  00102C  6E05               	movwf	___fldiv@a^0,c
  5383  00102E  0E00               	movlw	0
  5384  001030  6E06               	movwf	(___fldiv@a+1)^0,c
  5385  001032  0E20               	movlw	32
  5386  001034  6E07               	movwf	(___fldiv@a+2)^0,c
  5387  001036  0E41               	movlw	65
  5388  001038  6E08               	movwf	(___fldiv@a+3)^0,c
  5389  00103A  EC21  F012         	call	___fldiv	;wreg free
  5390  00103E  C001  F06E         	movff	?___fldiv,efgtoa@u
  5391  001042  C002  F06F         	movff	?___fldiv+1,efgtoa@u+1
  5392  001046  C003  F070         	movff	?___fldiv+2,efgtoa@u+2
  5393  00104A  C004  F071         	movff	?___fldiv+3,efgtoa@u+3
  5394  00104E                     
  5395                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne;
  5396  00104E  0650               	decf	efgtoa@ne^0,f,c
  5397  001050  A0D8               	btfss	status,0,c
  5398  001052  0651               	decf	(efgtoa@ne+1)^0,f,c
  5399  001054                     
  5400                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  5401  001054  4A64               	infsnz	efgtoa@i^0,f,c
  5402  001056  2A65               	incf	(efgtoa@i+1)^0,f,c
  5403  001058                     l4025:
  5404                           
  5405                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((i < m
      +                          ) && (n < (80 - 5))) {
  5406  001058  504E               	movf	efgtoa@m^0,w,c
  5407  00105A  5C64               	subwf	efgtoa@i^0,w,c
  5408  00105C  5065               	movf	(efgtoa@i+1)^0,w,c
  5409  00105E  0A80               	xorlw	128
  5410  001060  6E35               	movwf	??_efgtoa^0,c
  5411  001062  504F               	movf	(efgtoa@m+1)^0,w,c
  5412  001064  0A80               	xorlw	128
  5413  001066  5835               	subwfb	??_efgtoa^0,w,c
  5414  001068  B0D8               	btfsc	status,0,c
  5415  00106A  EF39  F008         	goto	u4721
  5416  00106E  EF3B  F008         	goto	u4720
  5417  001072                     u4721:
  5418  001072  EF49  F008         	goto	l4029
  5419  001076                     u4720:
  5420  001076  BE6D               	btfsc	(efgtoa@n+1)^0,7,c
  5421  001078  EF47  F008         	goto	u4731
  5422  00107C  506D               	movf	(efgtoa@n+1)^0,w,c
  5423  00107E  E109               	bnz	u4730
  5424  001080  0E4B               	movlw	75
  5425  001082  5C6C               	subwf	efgtoa@n^0,w,c
  5426  001084  A0D8               	btfss	status,0,c
  5427  001086  EF47  F008         	goto	u4731
  5428  00108A  EF49  F008         	goto	u4730
  5429  00108E                     u4731:
  5430  00108E  EF40  F007         	goto	l3977
  5431  001092                     u4730:
  5432  001092                     l4029:
  5433                           
  5434                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp && (f
      +                          lags & (1 << 4))) {
  5435  001092  504C               	movf	efgtoa@pp^0,w,c
  5436  001094  104D               	iorwf	(efgtoa@pp+1)^0,w,c
  5437  001096  A4D8               	btfss	status,2,c
  5438  001098  EF50  F008         	goto	u4741
  5439  00109C  EF52  F008         	goto	u4740
  5440  0010A0                     u4741:
  5441  0010A0  EF64  F008         	goto	l4037
  5442  0010A4                     u4740:
  5443  0010A4  0100               	movlb	0	; () banked
  5444  0010A6  A9E7               	btfss	_flags& (0+255),4,b
  5445  0010A8  EF58  F008         	goto	u4751
  5446  0010AC  EF5A  F008         	goto	u4750
  5447  0010B0                     u4751:
  5448  0010B0  EF64  F008         	goto	l4037
  5449  0010B4                     u4750:
  5450  0010B4                     
  5451                           ; BSR set to: 0
  5452                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf[n++]
      +                           = '.';
  5453  0010B4  0E00               	movlw	low _dbuf
  5454  0010B6  246C               	addwf	efgtoa@n^0,w,c
  5455  0010B8  6ED9               	movwf	fsr2l,c
  5456  0010BA  0E01               	movlw	high _dbuf
  5457  0010BC  206D               	addwfc	(efgtoa@n+1)^0,w,c
  5458  0010BE  6EDA               	movwf	fsr2h,c
  5459  0010C0  0E2E               	movlw	46
  5460  0010C2  6EDF               	movwf	indf2,c
  5461  0010C4                     
  5462                           ; BSR set to: 0
  5463  0010C4  4A6C               	infsnz	efgtoa@n^0,f,c
  5464  0010C6  2A6D               	incf	(efgtoa@n+1)^0,f,c
  5465  0010C8                     l4037:
  5466                           
  5467                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] = '\0
      +                          ';
  5468  0010C8  0E00               	movlw	low _dbuf
  5469  0010CA  246C               	addwf	efgtoa@n^0,w,c
  5470  0010CC  6ED9               	movwf	fsr2l,c
  5471  0010CE  0E01               	movlw	high _dbuf
  5472  0010D0  206D               	addwfc	(efgtoa@n+1)^0,w,c
  5473  0010D2  6EDA               	movwf	fsr2h,c
  5474  0010D4  0E00               	movlw	0
  5475  0010D6  6EDF               	movwf	indf2,c
  5476  0010D8                     
  5477                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmode == 
      +                          'e') {
  5478  0010D8  0E65               	movlw	101
  5479  0010DA  1858               	xorwf	efgtoa@nmode^0,w,c
  5480  0010DC  A4D8               	btfss	status,2,c
  5481  0010DE  EF73  F008         	goto	u4761
  5482  0010E2  EF75  F008         	goto	u4760
  5483  0010E6                     u4761:
  5484  0010E6  EF2A  F004         	goto	l3849
  5485  0010EA                     u4760:
  5486  0010EA                     
  5487                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = sizeo
      +                          f(dbuf) - 1;
  5488  0010EA  0E00               	movlw	0
  5489  0010EC  6E65               	movwf	(efgtoa@i+1)^0,c
  5490  0010EE  0E4F               	movlw	79
  5491  0010F0  6E64               	movwf	efgtoa@i^0,c
  5492  0010F2                     
  5493                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf[i] =
      +                           '\0';
  5494  0010F2  0E00               	movlw	low _dbuf
  5495  0010F4  2464               	addwf	efgtoa@i^0,w,c
  5496  0010F6  6ED9               	movwf	fsr2l,c
  5497  0010F8  0E01               	movlw	high _dbuf
  5498  0010FA  2065               	addwfc	(efgtoa@i+1)^0,w,c
  5499  0010FC  6EDA               	movwf	fsr2h,c
  5500  0010FE  0E00               	movlw	0
  5501  001100  6EDF               	movwf	indf2,c
  5502  001102                     
  5503                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign = 0;
  5504  001102  0E00               	movlw	0
  5505  001104  6E55               	movwf	(efgtoa@sign+1)^0,c
  5506  001106  0E00               	movlw	0
  5507  001108  6E54               	movwf	efgtoa@sign^0,c
  5508  00110A                     
  5509                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (e < 0
      +                          ) {
  5510  00110A  BE6B               	btfsc	(efgtoa@e+1)^0,7,c
  5511  00110C  EF8C  F008         	goto	u4770
  5512  001110  EF8A  F008         	goto	u4771
  5513  001114                     u4771:
  5514  001114  EF94  F008         	goto	l4053
  5515  001118                     u4770:
  5516  001118                     
  5517                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             sign 
      +                          = 1;
  5518  001118  0E00               	movlw	0
  5519  00111A  6E55               	movwf	(efgtoa@sign+1)^0,c
  5520  00111C  0E01               	movlw	1
  5521  00111E  6E54               	movwf	efgtoa@sign^0,c
  5522  001120                     
  5523                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             e = -
      +                          e;
  5524  001120  6C6A               	negf	efgtoa@e^0,c
  5525  001122  1E6B               	comf	(efgtoa@e+1)^0,f,c
  5526  001124  B0D8               	btfsc	status,0,c
  5527  001126  2A6B               	incf	(efgtoa@e+1)^0,f,c
  5528  001128                     l4053:
  5529                           
  5530                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 2;
  5531  001128  0E00               	movlw	0
  5532  00112A  6E57               	movwf	(efgtoa@p+1)^0,c
  5533  00112C  0E02               	movlw	2
  5534  00112E  6E56               	movwf	efgtoa@p^0,c
  5535                           
  5536                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         while (e 
      +                          || (0 < p)) {
  5537  001130  EFC4  F008         	goto	l4065
  5538  001134                     l4055:
  5539                           
  5540                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             --i;
  5541  001134  0664               	decf	efgtoa@i^0,f,c
  5542  001136  A0D8               	btfss	status,0,c
  5543  001138  0665               	decf	(efgtoa@i+1)^0,f,c
  5544  00113A                     
  5545                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             dbuf[
      +                          i] = '0' + (e % 10);
  5546  00113A  0E00               	movlw	low _dbuf
  5547  00113C  2464               	addwf	efgtoa@i^0,w,c
  5548  00113E  6ED9               	movwf	fsr2l,c
  5549  001140  0E01               	movlw	high _dbuf
  5550  001142  2065               	addwfc	(efgtoa@i+1)^0,w,c
  5551  001144  6EDA               	movwf	fsr2h,c
  5552  001146  C06A  F001         	movff	efgtoa@e,___awmod@dividend
  5553  00114A  C06B  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  5554  00114E  0E00               	movlw	0
  5555  001150  6E04               	movwf	(___awmod@divisor+1)^0,c
  5556  001152  0E0A               	movlw	10
  5557  001154  6E03               	movwf	___awmod@divisor^0,c
  5558  001156  ECF2  F01C         	call	___awmod	;wreg free
  5559  00115A  5001               	movf	?___awmod^0,w,c
  5560  00115C  0F30               	addlw	48
  5561  00115E  6EDF               	movwf	indf2,c
  5562  001160                     
  5563                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             e = e
      +                           / 10;
  5564  001160  C06A  F007         	movff	efgtoa@e,___awdiv@dividend
  5565  001164  C06B  F008         	movff	efgtoa@e+1,___awdiv@dividend+1
  5566  001168  0E00               	movlw	0
  5567  00116A  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5568  00116C  0E0A               	movlw	10
  5569  00116E  6E09               	movwf	___awdiv@divisor^0,c
  5570  001170  EC34  F01C         	call	___awdiv	;wreg free
  5571  001174  C007  F06A         	movff	?___awdiv,efgtoa@e
  5572  001178  C008  F06B         	movff	?___awdiv+1,efgtoa@e+1
  5573  00117C                     
  5574                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             --p;
  5575  00117C  0656               	decf	efgtoa@p^0,f,c
  5576  00117E  A0D8               	btfss	status,0,c
  5577  001180  0657               	decf	(efgtoa@p+1)^0,f,c
  5578  001182                     
  5579                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             --w;
  5580  001182  0659               	decf	efgtoa@w^0,f,c
  5581  001184  A0D8               	btfss	status,0,c
  5582  001186  065A               	decf	(efgtoa@w+1)^0,f,c
  5583  001188                     l4065:
  5584                           
  5585                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         while (e 
      +                          || (0 < p)) {
  5586  001188  506A               	movf	efgtoa@e^0,w,c
  5587  00118A  106B               	iorwf	(efgtoa@e+1)^0,w,c
  5588  00118C  A4D8               	btfss	status,2,c
  5589  00118E  EFCB  F008         	goto	u4781
  5590  001192  EFCD  F008         	goto	u4780
  5591  001196                     u4781:
  5592  001196  EF9A  F008         	goto	l4055
  5593  00119A                     u4780:
  5594  00119A  BE57               	btfsc	(efgtoa@p+1)^0,7,c
  5595  00119C  EFDA  F008         	goto	u4790
  5596  0011A0  5057               	movf	(efgtoa@p+1)^0,w,c
  5597  0011A2  E106               	bnz	u4791
  5598  0011A4  0456               	decf	efgtoa@p^0,w,c
  5599  0011A6  B0D8               	btfsc	status,0,c
  5600  0011A8  EFD8  F008         	goto	u4791
  5601  0011AC  EFDA  F008         	goto	u4790
  5602  0011B0                     u4791:
  5603  0011B0  EF9A  F008         	goto	l4055
  5604  0011B4                     u4790:
  5605  0011B4                     
  5606                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  5607  0011B4  0664               	decf	efgtoa@i^0,f,c
  5608  0011B6  A0D8               	btfss	status,0,c
  5609  0011B8  0665               	decf	(efgtoa@i+1)^0,f,c
  5610  0011BA                     
  5611                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf[i] =
      +                           sign ? '-' : '+';
  5612  0011BA  5054               	movf	efgtoa@sign^0,w,c
  5613  0011BC  1055               	iorwf	(efgtoa@sign+1)^0,w,c
  5614  0011BE  A4D8               	btfss	status,2,c
  5615  0011C0  EFE4  F008         	goto	u4801
  5616  0011C4  EFE6  F008         	goto	u4800
  5617  0011C8                     u4801:
  5618  0011C8  EFEC  F008         	goto	l4075
  5619  0011CC                     u4800:
  5620  0011CC  0E00               	movlw	0
  5621  0011CE  6E45               	movwf	(_efgtoa$747+1)^0,c
  5622  0011D0  0E2B               	movlw	43
  5623  0011D2  6E44               	movwf	_efgtoa$747^0,c
  5624  0011D4  EFF0  F008         	goto	l4077
  5625  0011D8                     l4075:
  5626  0011D8  0E00               	movlw	0
  5627  0011DA  6E45               	movwf	(_efgtoa$747+1)^0,c
  5628  0011DC  0E2D               	movlw	45
  5629  0011DE  6E44               	movwf	_efgtoa$747^0,c
  5630  0011E0                     l4077:
  5631  0011E0  0E00               	movlw	low _dbuf
  5632  0011E2  2464               	addwf	efgtoa@i^0,w,c
  5633  0011E4  6ED9               	movwf	fsr2l,c
  5634  0011E6  0E01               	movlw	high _dbuf
  5635  0011E8  2065               	addwfc	(efgtoa@i+1)^0,w,c
  5636  0011EA  6EDA               	movwf	fsr2h,c
  5637  0011EC  C044  FFDF         	movff	_efgtoa$747,indf2
  5638  0011F0                     
  5639                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  5640  0011F0  0659               	decf	efgtoa@w^0,f,c
  5641  0011F2  A0D8               	btfss	status,0,c
  5642  0011F4  065A               	decf	(efgtoa@w+1)^0,f,c
  5643  0011F6                     
  5644                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf[i] =
      +                           (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5645  0011F6  0664               	decf	efgtoa@i^0,f,c
  5646  0011F8  A0D8               	btfss	status,0,c
  5647  0011FA  0665               	decf	(efgtoa@i+1)^0,f,c
  5648  0011FC  0EBF               	movlw	191
  5649  0011FE  6E35               	movwf	??_efgtoa^0,c
  5650  001200  0EFF               	movlw	255
  5651  001202  6E36               	movwf	(??_efgtoa+1)^0,c
  5652  001204  5034               	movf	efgtoa@c^0,w,c
  5653  001206  6E37               	movwf	(??_efgtoa+2)^0,c
  5654  001208  6A38               	clrf	(??_efgtoa+3)^0,c
  5655  00120A  5035               	movf	??_efgtoa^0,w,c
  5656  00120C  2637               	addwf	(??_efgtoa+2)^0,f,c
  5657  00120E  5036               	movf	(??_efgtoa+1)^0,w,c
  5658  001210  2238               	addwfc	(??_efgtoa+3)^0,f,c
  5659  001212  5038               	movf	(??_efgtoa+3)^0,w,c
  5660  001214  E10A               	bnz	u4810
  5661  001216  0E1A               	movlw	26
  5662  001218  5C37               	subwf	(??_efgtoa+2)^0,w,c
  5663  00121A  A0D8               	btfss	status,0,c
  5664  00121C  EF12  F009         	goto	u4811
  5665  001220  EF15  F009         	goto	u4810
  5666  001224                     u4811:
  5667  001224  0E01               	movlw	1
  5668  001226  EF16  F009         	goto	u4820
  5669  00122A                     u4810:
  5670  00122A  0E00               	movlw	0
  5671  00122C                     u4820:
  5672  00122C  6E48               	movwf	_efgtoa$749^0,c
  5673  00122E  6A49               	clrf	(_efgtoa$749+1)^0,c
  5674  001230  5048               	movf	_efgtoa$749^0,w,c
  5675  001232  1049               	iorwf	(_efgtoa$749+1)^0,w,c
  5676  001234  A4D8               	btfss	status,2,c
  5677  001236  EF1F  F009         	goto	u4831
  5678  00123A  EF21  F009         	goto	u4830
  5679  00123E                     u4831:
  5680  00123E  EF27  F009         	goto	l4091
  5681  001242                     u4830:
  5682  001242  0E00               	movlw	0
  5683  001244  6E47               	movwf	(_efgtoa$748+1)^0,c
  5684  001246  0E65               	movlw	101
  5685  001248  6E46               	movwf	_efgtoa$748^0,c
  5686  00124A  EF2B  F009         	goto	l4093
  5687  00124E                     l4091:
  5688  00124E  0E00               	movlw	0
  5689  001250  6E47               	movwf	(_efgtoa$748+1)^0,c
  5690  001252  0E45               	movlw	69
  5691  001254  6E46               	movwf	_efgtoa$748^0,c
  5692  001256                     l4093:
  5693  001256  0E00               	movlw	low _dbuf
  5694  001258  2464               	addwf	efgtoa@i^0,w,c
  5695  00125A  6ED9               	movwf	fsr2l,c
  5696  00125C  0E01               	movlw	high _dbuf
  5697  00125E  2065               	addwfc	(efgtoa@i+1)^0,w,c
  5698  001260  6EDA               	movwf	fsr2h,c
  5699  001262  C046  FFDF         	movff	_efgtoa$748,indf2
  5700  001266                     
  5701                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  5702  001266  0659               	decf	efgtoa@w^0,f,c
  5703  001268  A0D8               	btfss	status,0,c
  5704  00126A  065A               	decf	(efgtoa@w+1)^0,f,c
  5705  00126C                     
  5706                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strcpy(&d
      +                          buf[n], &dbuf[i]);
  5707  00126C  0E00               	movlw	low _dbuf
  5708  00126E  246C               	addwf	efgtoa@n^0,w,c
  5709  001270  6E01               	movwf	strcpy@dest^0,c
  5710  001272  0E01               	movlw	high _dbuf
  5711  001274  206D               	addwfc	(efgtoa@n+1)^0,w,c
  5712  001276  6E02               	movwf	(strcpy@dest+1)^0,c
  5713  001278  0E00               	movlw	low _dbuf
  5714  00127A  2464               	addwf	efgtoa@i^0,w,c
  5715  00127C  6E03               	movwf	strcpy@src^0,c
  5716  00127E  0E01               	movlw	high _dbuf
  5717  001280  2065               	addwfc	(efgtoa@i+1)^0,w,c
  5718  001282  6E04               	movwf	(strcpy@src+1)^0,c
  5719  001284  EC3D  F01F         	call	_strcpy	;wreg free
  5720  001288  EF2A  F004         	goto	l3849
  5721  00128C                     l947:
  5722  00128C  0012               	return		;funcret
  5723  00128E                     __end_of_efgtoa:
  5724                           	callstack 0
  5725                           
  5726 ;; *************** function _tolower *****************
  5727 ;; Defined at:
  5728 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\tolower.c"
  5729 ;; Parameters:    Size  Location     Type
  5730 ;;  c               2    6[COMRAM] int 
  5731 ;; Auto vars:     Size  Location     Type
  5732 ;;		None
  5733 ;; Return value:  Size  Location     Type
  5734 ;;                  2    6[COMRAM] int 
  5735 ;; Registers used:
  5736 ;;		wreg, status,2, status,0
  5737 ;; Tracked objects:
  5738 ;;		On entry : 0/0
  5739 ;;		On exit  : 0/0
  5740 ;;		Unchanged: 0/0
  5741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5742 ;;      Params:         2       0       0       0       0       0       0
  5743 ;;      Locals:         2       0       0       0       0       0       0
  5744 ;;      Temps:          4       0       0       0       0       0       0
  5745 ;;      Totals:         8       0       0       0       0       0       0
  5746 ;;Total ram usage:        8 bytes
  5747 ;; Hardware stack levels used:    1
  5748 ;; Hardware stack levels required when called:    1
  5749 ;; This function calls:
  5750 ;;		_isupper
  5751 ;; This function is called by:
  5752 ;;		_efgtoa
  5753 ;;		_vfpfcnvrt
  5754 ;; This function uses a non-reentrant model
  5755 ;;
  5756                           
  5757                           	psect	text11
  5758  003DBE                     __ptext11:
  5759                           	callstack 0
  5760  003DBE                     _tolower:
  5761                           	callstack 25
  5762  003DBE  0EBF               	movlw	191
  5763  003DC0  6E09               	movwf	??_tolower^0,c
  5764  003DC2  0EFF               	movlw	255
  5765  003DC4  6E0A               	movwf	(??_tolower+1)^0,c
  5766  003DC6  C007  F00B         	movff	tolower@c,??_tolower+2
  5767  003DCA  C008  F00C         	movff	tolower@c+1,??_tolower+3
  5768  003DCE  5009               	movf	??_tolower^0,w,c
  5769  003DD0  260B               	addwf	(??_tolower+2)^0,f,c
  5770  003DD2  500A               	movf	(??_tolower+1)^0,w,c
  5771  003DD4  220C               	addwfc	(??_tolower+3)^0,f,c
  5772  003DD6  500C               	movf	(??_tolower+3)^0,w,c
  5773  003DD8  E10A               	bnz	u4150
  5774  003DDA  0E1A               	movlw	26
  5775  003DDC  5C0B               	subwf	(??_tolower+2)^0,w,c
  5776  003DDE  A0D8               	btfss	status,0,c
  5777  003DE0  EFF4  F01E         	goto	u4151
  5778  003DE4  EFF7  F01E         	goto	u4150
  5779  003DE8                     u4151:
  5780  003DE8  0E01               	movlw	1
  5781  003DEA  EFF8  F01E         	goto	u4160
  5782  003DEE                     u4150:
  5783  003DEE  0E00               	movlw	0
  5784  003DF0                     u4160:
  5785  003DF0  6E0D               	movwf	_tolower$896^0,c
  5786  003DF2  6A0E               	clrf	(_tolower$896+1)^0,c
  5787  003DF4  500D               	movf	_tolower$896^0,w,c
  5788  003DF6  100E               	iorwf	(_tolower$896+1)^0,w,c
  5789  003DF8  B4D8               	btfsc	status,2,c
  5790  003DFA  EF01  F01F         	goto	u4171
  5791  003DFE  EF03  F01F         	goto	u4170
  5792  003E02                     u4171:
  5793  003E02  EF0A  F01F         	goto	l1175
  5794  003E06                     u4170:
  5795  003E06  0E20               	movlw	32
  5796  003E08  1007               	iorwf	tolower@c^0,w,c
  5797  003E0A  6E07               	movwf	?_tolower^0,c
  5798  003E0C  5008               	movf	(tolower@c+1)^0,w,c
  5799  003E0E  6E08               	movwf	(?_tolower+1)^0,c
  5800  003E10  EF0E  F01F         	goto	l1180
  5801  003E14                     l1175:
  5802  003E14  C007  F007         	movff	tolower@c,?_tolower
  5803  003E18  C008  F008         	movff	tolower@c+1,?_tolower+1
  5804  003E1C                     l1180:
  5805  003E1C  0012               	return		;funcret
  5806  003E1E                     __end_of_tolower:
  5807                           	callstack 0
  5808                           
  5809 ;; *************** function _isupper *****************
  5810 ;; Defined at:
  5811 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\isupper.c"
  5812 ;; Parameters:    Size  Location     Type
  5813 ;;  c               2    0[COMRAM] int 
  5814 ;; Auto vars:     Size  Location     Type
  5815 ;;		None
  5816 ;; Return value:  Size  Location     Type
  5817 ;;                  2    0[COMRAM] int 
  5818 ;; Registers used:
  5819 ;;		wreg, status,2, status,0
  5820 ;; Tracked objects:
  5821 ;;		On entry : 0/0
  5822 ;;		On exit  : 0/0
  5823 ;;		Unchanged: 0/0
  5824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5825 ;;      Params:         2       0       0       0       0       0       0
  5826 ;;      Locals:         0       0       0       0       0       0       0
  5827 ;;      Temps:          4       0       0       0       0       0       0
  5828 ;;      Totals:         6       0       0       0       0       0       0
  5829 ;;Total ram usage:        6 bytes
  5830 ;; Hardware stack levels used:    1
  5831 ;; This function calls:
  5832 ;;		Nothing
  5833 ;; This function is called by:
  5834 ;;		_efgtoa
  5835 ;;		_vfpfcnvrt
  5836 ;;		_tolower
  5837 ;; This function uses a non-reentrant model
  5838 ;;
  5839                           
  5840                           	psect	text12
  5841  004004                     __ptext12:
  5842                           	callstack 0
  5843  004004                     _isupper:
  5844                           	callstack 25
  5845  004004  0EBF               	movlw	191
  5846  004006  6E03               	movwf	??_isupper^0,c
  5847  004008  0EFF               	movlw	255
  5848  00400A  6E04               	movwf	(??_isupper+1)^0,c
  5849  00400C  C001  F005         	movff	isupper@c,??_isupper+2
  5850  004010  C002  F006         	movff	isupper@c+1,??_isupper+3
  5851  004014  5003               	movf	??_isupper^0,w,c
  5852  004016  2605               	addwf	(??_isupper+2)^0,f,c
  5853  004018  5004               	movf	(??_isupper+1)^0,w,c
  5854  00401A  2206               	addwfc	(??_isupper+3)^0,f,c
  5855  00401C  5006               	movf	(??_isupper+3)^0,w,c
  5856  00401E  E10A               	bnz	u3300
  5857  004020  0E1A               	movlw	26
  5858  004022  5C05               	subwf	(??_isupper+2)^0,w,c
  5859  004024  A0D8               	btfss	status,0,c
  5860  004026  EF17  F020         	goto	u3301
  5861  00402A  EF1A  F020         	goto	u3300
  5862  00402E                     u3301:
  5863  00402E  0E01               	movlw	1
  5864  004030  EF1B  F020         	goto	u3310
  5865  004034                     u3300:
  5866  004034  0E00               	movlw	0
  5867  004036                     u3310:
  5868  004036  6E01               	movwf	?_isupper^0,c
  5869  004038  6A02               	clrf	(?_isupper+1)^0,c
  5870  00403A  0012               	return		;funcret
  5871  00403C                     __end_of_isupper:
  5872                           	callstack 0
  5873                           
  5874 ;; *************** function _strcpy *****************
  5875 ;; Defined at:
  5876 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;  dest            2    0[COMRAM] PTR unsigned char 
  5879 ;;		 -> dbuf(80), 
  5880 ;;  src             2    2[COMRAM] PTR const unsigned char 
  5881 ;;		 -> STR_36(4), STR_35(4), STR_32(4), STR_31(4), 
  5882 ;;		 -> dbuf(80), 
  5883 ;; Auto vars:     Size  Location     Type
  5884 ;;  d               2    8[COMRAM] PTR unsigned char 
  5885 ;;		 -> dbuf(80), 
  5886 ;;  s               2    6[COMRAM] PTR const unsigned char 
  5887 ;;		 -> STR_36(4), STR_35(4), STR_32(4), STR_31(4), 
  5888 ;;		 -> dbuf(80), 
  5889 ;; Return value:  Size  Location     Type
  5890 ;;                  2    0[COMRAM] PTR unsigned char 
  5891 ;; Registers used:
  5892 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5893 ;; Tracked objects:
  5894 ;;		On entry : 0/0
  5895 ;;		On exit  : 0/0
  5896 ;;		Unchanged: 0/0
  5897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5898 ;;      Params:         4       0       0       0       0       0       0
  5899 ;;      Locals:         4       0       0       0       0       0       0
  5900 ;;      Temps:          2       0       0       0       0       0       0
  5901 ;;      Totals:        10       0       0       0       0       0       0
  5902 ;;Total ram usage:       10 bytes
  5903 ;; Hardware stack levels used:    1
  5904 ;; This function calls:
  5905 ;;		Nothing
  5906 ;; This function is called by:
  5907 ;;		_efgtoa
  5908 ;; This function uses a non-reentrant model
  5909 ;;
  5910                           
  5911                           	psect	text13
  5912  003E7A                     __ptext13:
  5913                           	callstack 0
  5914  003E7A                     _strcpy:
  5915                           	callstack 25
  5916  003E7A  C003  F007         	movff	strcpy@src,strcpy@s
  5917  003E7E  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  5918  003E82  C001  F009         	movff	strcpy@dest,strcpy@d
  5919  003E86  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  5920  003E8A                     l3749:
  5921  003E8A  5007               	movf	strcpy@s^0,w,c
  5922  003E8C  6E05               	movwf	??_strcpy^0,c
  5923  003E8E  5008               	movf	(strcpy@s+1)^0,w,c
  5924  003E90  6E06               	movwf	(??_strcpy+1)^0,c
  5925  003E92  4A07               	infsnz	strcpy@s^0,f,c
  5926  003E94  2A08               	incf	(strcpy@s+1)^0,f,c
  5927  003E96  C005  FFF6         	movff	??_strcpy,tblptrl
  5928  003E9A  C006  FFF7         	movff	??_strcpy+1,tblptrh
  5929  003E9E  6AF8               	clrf	tblptru,c
  5930  003EA0  C009  FFD9         	movff	strcpy@d,fsr2l
  5931  003EA4  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  5932  003EA8  4A09               	infsnz	strcpy@d^0,f,c
  5933  003EAA  2A0A               	incf	(strcpy@d+1)^0,f,c
  5934  003EAC  0E05               	movlw	(high __ramtop+-1)
  5935  003EAE  64F7               	cpfsgt	tblptrh,c
  5936  003EB0  D003               	bra	u4137
  5937  003EB2  0008               	tblrd		*
  5938  003EB4  50F5               	movf	tablat,w,c
  5939  003EB6  D005               	bra	u4130
  5940  003EB8                     u4137:
  5941  003EB8  CFF6 FFE9          	movff	tblptrl,fsr0l
  5942  003EBC  CFF7 FFEA          	movff	tblptrh,fsr0h
  5943  003EC0  50EF               	movf	indf0,w,c
  5944  003EC2                     u4130:
  5945  003EC2  6EDF               	movwf	indf2,c
  5946  003EC4  50DF               	movf	indf2,w,c
  5947  003EC6  A4D8               	btfss	status,2,c
  5948  003EC8  EF68  F01F         	goto	u4141
  5949  003ECC  EF6A  F01F         	goto	u4140
  5950  003ED0                     u4141:
  5951  003ED0  EF45  F01F         	goto	l3749
  5952  003ED4                     u4140:
  5953  003ED4  0012               	return		;funcret
  5954  003ED6                     __end_of_strcpy:
  5955                           	callstack 0
  5956                           
  5957 ;; *************** function _pad *****************
  5958 ;; Defined at:
  5959 ;;		line 72 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5960 ;; Parameters:    Size  Location     Type
  5961 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5962 ;;		 -> sprintf@f(6), 
  5963 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5964 ;;		 -> dbuf(80), 
  5965 ;;  p               2   20[COMRAM] int 
  5966 ;; Auto vars:     Size  Location     Type
  5967 ;;  w               2   25[COMRAM] int 
  5968 ;;  i               2   23[COMRAM] int 
  5969 ;; Return value:  Size  Location     Type
  5970 ;;                  2   16[COMRAM] int 
  5971 ;; Registers used:
  5972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5973 ;; Tracked objects:
  5974 ;;		On entry : 0/0
  5975 ;;		On exit  : 0/0
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5978 ;;      Params:         6       0       0       0       0       0       0
  5979 ;;      Locals:         4       0       0       0       0       0       0
  5980 ;;      Temps:          1       0       0       0       0       0       0
  5981 ;;      Totals:        11       0       0       0       0       0       0
  5982 ;;Total ram usage:       11 bytes
  5983 ;; Hardware stack levels used:    1
  5984 ;; Hardware stack levels required when called:    3
  5985 ;; This function calls:
  5986 ;;		_fputc
  5987 ;;		_fputs
  5988 ;;		_strlen
  5989 ;; This function is called by:
  5990 ;;		_efgtoa
  5991 ;; This function uses a non-reentrant model
  5992 ;;
  5993                           
  5994                           	psect	text14
  5995  0037A2                     __ptext14:
  5996                           	callstack 0
  5997  0037A2                     _pad:
  5998                           	callstack 22
  5999  0037A2                     
  6000                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pad(FIL
      +                          E *fp, char *buf, int p);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c
      +                          : 73: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 74:     int i, 
      +                          w;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 77:     if (flags & 
      +                          (1 << 0)) {
  6001  0037A2  0100               	movlb	0	; () banked
  6002  0037A4  A1E7               	btfss	_flags& (0+255),0,b
  6003  0037A6  EFD7  F01B         	goto	u4021
  6004  0037AA  EFD9  F01B         	goto	u4020
  6005  0037AE                     u4021:
  6006  0037AE  EFE3  F01B         	goto	l3707
  6007  0037B2                     u4020:
  6008  0037B2                     
  6009                           ; BSR set to: 0
  6010                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs((con
      +                          st char *)buf, fp);
  6011  0037B2  C013  F00A         	movff	pad@buf,fputs@s
  6012  0037B6  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6013  0037BA  C011  F00C         	movff	pad@fp,fputs@fp
  6014  0037BE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6015  0037C2  ECE0  F01F         	call	_fputs	;wreg free
  6016  0037C6                     l3707:
  6017                           
  6018                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ? 
      +                          0 : p;
  6019  0037C6  BE16               	btfsc	(pad@p+1)^0,7,c
  6020  0037C8  EFE8  F01B         	goto	u4031
  6021  0037CC  EFEA  F01B         	goto	u4030
  6022  0037D0                     u4031:
  6023  0037D0  EFF0  F01B         	goto	l3711
  6024  0037D4                     u4030:
  6025  0037D4  C015  F01A         	movff	pad@p,pad@w
  6026  0037D8  C016  F01B         	movff	pad@p+1,pad@w+1
  6027  0037DC  EFF4  F01B         	goto	l924
  6028  0037E0                     l3711:
  6029  0037E0  0E00               	movlw	0
  6030  0037E2  6E1B               	movwf	(pad@w+1)^0,c
  6031  0037E4  0E00               	movlw	0
  6032  0037E6  6E1A               	movwf	pad@w^0,c
  6033  0037E8                     l924:
  6034                           
  6035                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6036  0037E8  0E00               	movlw	0
  6037  0037EA  6E19               	movwf	(pad@i+1)^0,c
  6038  0037EC  0E00               	movlw	0
  6039  0037EE  6E18               	movwf	pad@i^0,c
  6040                           
  6041                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  6042  0037F0  EF06  F01C         	goto	l3717
  6043  0037F4                     l3713:
  6044                           
  6045                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc(' ',
      +                           fp);
  6046  0037F4  0E00               	movlw	0
  6047  0037F6  6E02               	movwf	(fputc@c+1)^0,c
  6048  0037F8  0E20               	movlw	32
  6049  0037FA  6E01               	movwf	fputc@c^0,c
  6050  0037FC  C011  F003         	movff	pad@fp,fputc@fp
  6051  003800  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6052  003804  EC6C  F01B         	call	_fputc	;wreg free
  6053  003808                     
  6054                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6055  003808  4A18               	infsnz	pad@i^0,f,c
  6056  00380A  2A19               	incf	(pad@i+1)^0,f,c
  6057  00380C                     l3717:
  6058                           
  6059                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  6060  00380C  501A               	movf	pad@w^0,w,c
  6061  00380E  5C18               	subwf	pad@i^0,w,c
  6062  003810  5019               	movf	(pad@i+1)^0,w,c
  6063  003812  0A80               	xorlw	128
  6064  003814  6E17               	movwf	??_pad^0,c
  6065  003816  501B               	movf	(pad@w+1)^0,w,c
  6066  003818  0A80               	xorlw	128
  6067  00381A  5817               	subwfb	??_pad^0,w,c
  6068  00381C  A0D8               	btfss	status,0,c
  6069  00381E  EF13  F01C         	goto	u4041
  6070  003822  EF15  F01C         	goto	u4040
  6071  003826                     u4041:
  6072  003826  EFFA  F01B         	goto	l3713
  6073  00382A                     u4040:
  6074  00382A                     
  6075                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(flags & 
      +                          (1 << 0))) {
  6076  00382A  0100               	movlb	0	; () banked
  6077  00382C  B1E7               	btfsc	_flags& (0+255),0,b
  6078  00382E  EF1B  F01C         	goto	u4051
  6079  003832  EF1D  F01C         	goto	u4050
  6080  003836                     u4051:
  6081  003836  EF27  F01C         	goto	l3721
  6082  00383A                     u4050:
  6083  00383A                     
  6084                           ; BSR set to: 0
  6085                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs((con
      +                          st char *)buf, fp);
  6086  00383A  C013  F00A         	movff	pad@buf,fputs@s
  6087  00383E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6088  003842  C011  F00C         	movff	pad@fp,fputs@fp
  6089  003846  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6090  00384A  ECE0  F01F         	call	_fputs	;wreg free
  6091  00384E                     l3721:
  6092                           
  6093                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return strlen(
      +                          buf) + w;
  6094  00384E  C013  F001         	movff	pad@buf,strlen@s
  6095  003852  C014  F002         	movff	pad@buf+1,strlen@s+1
  6096  003856  EC56  F020         	call	_strlen	;wreg free
  6097  00385A  501A               	movf	pad@w^0,w,c
  6098  00385C  2401               	addwf	?_strlen^0,w,c
  6099  00385E  6E11               	movwf	?_pad^0,c
  6100  003860  501B               	movf	(pad@w+1)^0,w,c
  6101  003862  2002               	addwfc	(?_strlen+1)^0,w,c
  6102  003864  6E12               	movwf	(?_pad+1)^0,c
  6103  003866  0012               	return		;funcret
  6104  003868                     __end_of_pad:
  6105                           	callstack 0
  6106                           
  6107 ;; *************** function _strlen *****************
  6108 ;; Defined at:
  6109 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strlen.c"
  6110 ;; Parameters:    Size  Location     Type
  6111 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6112 ;;		 -> dbuf(80), 
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6115 ;;		 -> dbuf(80), 
  6116 ;; Return value:  Size  Location     Type
  6117 ;;                  2    0[COMRAM] unsigned int 
  6118 ;; Registers used:
  6119 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6120 ;; Tracked objects:
  6121 ;;		On entry : 0/0
  6122 ;;		On exit  : 0/0
  6123 ;;		Unchanged: 0/0
  6124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6125 ;;      Params:         2       0       0       0       0       0       0
  6126 ;;      Locals:         2       0       0       0       0       0       0
  6127 ;;      Temps:          0       0       0       0       0       0       0
  6128 ;;      Totals:         4       0       0       0       0       0       0
  6129 ;;Total ram usage:        4 bytes
  6130 ;; Hardware stack levels used:    1
  6131 ;; This function calls:
  6132 ;;		Nothing
  6133 ;; This function is called by:
  6134 ;;		_pad
  6135 ;; This function uses a non-reentrant model
  6136 ;;
  6137                           
  6138                           	psect	text15
  6139  0040AC                     __ptext15:
  6140                           	callstack 0
  6141  0040AC                     _strlen:
  6142                           	callstack 24
  6143  0040AC  C001  F003         	movff	strlen@s,strlen@a
  6144  0040B0  C002  F004         	movff	strlen@s+1,strlen@a+1
  6145  0040B4  EF5E  F020         	goto	l3243
  6146  0040B8                     l3241:
  6147  0040B8  4A01               	infsnz	strlen@s^0,f,c
  6148  0040BA  2A02               	incf	(strlen@s+1)^0,f,c
  6149  0040BC                     l3243:
  6150  0040BC  C001  FFD9         	movff	strlen@s,fsr2l
  6151  0040C0  C002  FFDA         	movff	strlen@s+1,fsr2h
  6152  0040C4  50DF               	movf	indf2,w,c
  6153  0040C6  A4D8               	btfss	status,2,c
  6154  0040C8  EF68  F020         	goto	u3291
  6155  0040CC  EF6A  F020         	goto	u3290
  6156  0040D0                     u3291:
  6157  0040D0  EF5C  F020         	goto	l3241
  6158  0040D4                     u3290:
  6159  0040D4  5003               	movf	strlen@a^0,w,c
  6160  0040D6  5C01               	subwf	strlen@s^0,w,c
  6161  0040D8  6E01               	movwf	?_strlen^0,c
  6162  0040DA  5004               	movf	(strlen@a+1)^0,w,c
  6163  0040DC  5802               	subwfb	(strlen@s+1)^0,w,c
  6164  0040DE  6E02               	movwf	(?_strlen+1)^0,c
  6165  0040E0  0012               	return		;funcret
  6166  0040E2                     __end_of_strlen:
  6167                           	callstack 0
  6168                           
  6169 ;; *************** function _fputs *****************
  6170 ;; Defined at:
  6171 ;;		line 8 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  6172 ;; Parameters:    Size  Location     Type
  6173 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6174 ;;		 -> dbuf(80), 
  6175 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6176 ;;		 -> sprintf@f(6), 
  6177 ;; Auto vars:     Size  Location     Type
  6178 ;;  i               2   14[COMRAM] int 
  6179 ;;  c               1   13[COMRAM] unsigned char 
  6180 ;; Return value:  Size  Location     Type
  6181 ;;                  2    9[COMRAM] int 
  6182 ;; Registers used:
  6183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6184 ;; Tracked objects:
  6185 ;;		On entry : 0/0
  6186 ;;		On exit  : 0/0
  6187 ;;		Unchanged: 0/0
  6188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6189 ;;      Params:         4       0       0       0       0       0       0
  6190 ;;      Locals:         3       0       0       0       0       0       0
  6191 ;;      Temps:          0       0       0       0       0       0       0
  6192 ;;      Totals:         7       0       0       0       0       0       0
  6193 ;;Total ram usage:        7 bytes
  6194 ;; Hardware stack levels used:    1
  6195 ;; Hardware stack levels required when called:    2
  6196 ;; This function calls:
  6197 ;;		_fputc
  6198 ;; This function is called by:
  6199 ;;		_pad
  6200 ;; This function uses a non-reentrant model
  6201 ;;
  6202                           
  6203                           	psect	text16
  6204  003FC0                     __ptext16:
  6205                           	callstack 0
  6206  003FC0                     _fputs:
  6207                           	callstack 22
  6208  003FC0  0E00               	movlw	0
  6209  003FC2  6E10               	movwf	(fputs@i+1)^0,c
  6210  003FC4  0E00               	movlw	0
  6211  003FC6  6E0F               	movwf	fputs@i^0,c
  6212  003FC8  EFF1  F01F         	goto	l3237
  6213  003FCC                     l3233:
  6214  003FCC  C00E  F001         	movff	fputs@c,fputc@c
  6215  003FD0  6A02               	clrf	(fputc@c+1)^0,c
  6216  003FD2  C00C  F003         	movff	fputs@fp,fputc@fp
  6217  003FD6  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6218  003FDA  EC6C  F01B         	call	_fputc	;wreg free
  6219  003FDE  4A0F               	infsnz	fputs@i^0,f,c
  6220  003FE0  2A10               	incf	(fputs@i+1)^0,f,c
  6221  003FE2                     l3237:
  6222  003FE2  500F               	movf	fputs@i^0,w,c
  6223  003FE4  240A               	addwf	fputs@s^0,w,c
  6224  003FE6  6ED9               	movwf	fsr2l,c
  6225  003FE8  5010               	movf	(fputs@i+1)^0,w,c
  6226  003FEA  200B               	addwfc	(fputs@s+1)^0,w,c
  6227  003FEC  6EDA               	movwf	fsr2h,c
  6228  003FEE  50DF               	movf	indf2,w,c
  6229  003FF0  6E0E               	movwf	fputs@c^0,c
  6230  003FF2  500E               	movf	fputs@c^0,w,c
  6231  003FF4  A4D8               	btfss	status,2,c
  6232  003FF6  EFFF  F01F         	goto	u3281
  6233  003FFA  EF01  F020         	goto	u3280
  6234  003FFE                     u3281:
  6235  003FFE  EFE6  F01F         	goto	l3233
  6236  004002                     u3280:
  6237  004002  0012               	return		;funcret
  6238  004004                     __end_of_fputs:
  6239                           	callstack 0
  6240                           
  6241 ;; *************** function _fputc *****************
  6242 ;; Defined at:
  6243 ;;		line 8 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  6244 ;; Parameters:    Size  Location     Type
  6245 ;;  c               2    0[COMRAM] int 
  6246 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6247 ;;		 -> sprintf@f(6), 
  6248 ;; Auto vars:     Size  Location     Type
  6249 ;;		None
  6250 ;; Return value:  Size  Location     Type
  6251 ;;                  2    0[COMRAM] int 
  6252 ;; Registers used:
  6253 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6254 ;; Tracked objects:
  6255 ;;		On entry : 0/0
  6256 ;;		On exit  : 0/0
  6257 ;;		Unchanged: 0/0
  6258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6259 ;;      Params:         4       0       0       0       0       0       0
  6260 ;;      Locals:         0       0       0       0       0       0       0
  6261 ;;      Temps:          5       0       0       0       0       0       0
  6262 ;;      Totals:         9       0       0       0       0       0       0
  6263 ;;Total ram usage:        9 bytes
  6264 ;; Hardware stack levels used:    1
  6265 ;; Hardware stack levels required when called:    1
  6266 ;; This function calls:
  6267 ;;		_putch
  6268 ;; This function is called by:
  6269 ;;		_pad
  6270 ;;		_vfpfcnvrt
  6271 ;;		_fputs
  6272 ;; This function uses a non-reentrant model
  6273 ;;
  6274                           
  6275                           	psect	text17
  6276  0036D8                     __ptext17:
  6277                           	callstack 0
  6278  0036D8                     _fputc:
  6279                           	callstack 25
  6280  0036D8  5003               	movf	fputc@fp^0,w,c
  6281  0036DA  1004               	iorwf	(fputc@fp+1)^0,w,c
  6282  0036DC  B4D8               	btfsc	status,2,c
  6283  0036DE  EF73  F01B         	goto	u2851
  6284  0036E2  EF75  F01B         	goto	u2850
  6285  0036E6                     u2851:
  6286  0036E6  EF7E  F01B         	goto	l3019
  6287  0036EA                     u2850:
  6288  0036EA  5003               	movf	fputc@fp^0,w,c
  6289  0036EC  1004               	iorwf	(fputc@fp+1)^0,w,c
  6290  0036EE  A4D8               	btfss	status,2,c
  6291  0036F0  EF7C  F01B         	goto	u2861
  6292  0036F4  EF7E  F01B         	goto	u2860
  6293  0036F8                     u2861:
  6294  0036F8  EF83  F01B         	goto	l3021
  6295  0036FC                     u2860:
  6296  0036FC                     l3019:
  6297  0036FC  5001               	movf	fputc@c^0,w,c
  6298  0036FE  ECD5  F020         	call	_putch
  6299  003702  EFD0  F01B         	goto	l1138
  6300  003706                     l3021:
  6301  003706  EE20 F004          	lfsr	2,4
  6302  00370A  5003               	movf	fputc@fp^0,w,c
  6303  00370C  26D9               	addwf	fsr2l,f,c
  6304  00370E  5004               	movf	(fputc@fp+1)^0,w,c
  6305  003710  22DA               	addwfc	fsr2h,f,c
  6306  003712  50DE               	movf	postinc2,w,c
  6307  003714  10DE               	iorwf	postinc2,w,c
  6308  003716  B4D8               	btfsc	status,2,c
  6309  003718  EF90  F01B         	goto	u2871
  6310  00371C  EF92  F01B         	goto	u2870
  6311  003720                     u2871:
  6312  003720  EFAD  F01B         	goto	l3025
  6313  003724                     u2870:
  6314  003724  EE20 F004          	lfsr	2,4
  6315  003728  5003               	movf	fputc@fp^0,w,c
  6316  00372A  26D9               	addwf	fsr2l,f,c
  6317  00372C  5004               	movf	(fputc@fp+1)^0,w,c
  6318  00372E  22DA               	addwfc	fsr2h,f,c
  6319  003730  EE10 F002          	lfsr	1,2
  6320  003734  5003               	movf	fputc@fp^0,w,c
  6321  003736  26E1               	addwf	fsr1l,f,c
  6322  003738  5004               	movf	(fputc@fp+1)^0,w,c
  6323  00373A  22E2               	addwfc	fsr1h,f,c
  6324  00373C  50DE               	movf	postinc2,w,c
  6325  00373E  5CE6               	subwf	postinc1,w,c
  6326  003740  50E6               	movf	postinc1,w,c
  6327  003742  0A80               	xorlw	128
  6328  003744  6E09               	movwf	(??_fputc+4)^0,c
  6329  003746  50DE               	movf	postinc2,w,c
  6330  003748  0A80               	xorlw	128
  6331  00374A  5809               	subwfb	(??_fputc+4)^0,w,c
  6332  00374C  B0D8               	btfsc	status,0,c
  6333  00374E  EFAB  F01B         	goto	u2881
  6334  003752  EFAD  F01B         	goto	u2880
  6335  003756                     u2881:
  6336  003756  EFD0  F01B         	goto	l1138
  6337  00375A                     u2880:
  6338  00375A                     l3025:
  6339  00375A  EE20 F002          	lfsr	2,2
  6340  00375E  5003               	movf	fputc@fp^0,w,c
  6341  003760  26D9               	addwf	fsr2l,f,c
  6342  003762  5004               	movf	(fputc@fp+1)^0,w,c
  6343  003764  22DA               	addwfc	fsr2h,f,c
  6344  003766  CFDE F005          	movff	postinc2,??_fputc
  6345  00376A  CFDD F006          	movff	postdec2,??_fputc+1
  6346  00376E  C003  FFD9         	movff	fputc@fp,fsr2l
  6347  003772  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6348  003776  CFDE F007          	movff	postinc2,??_fputc+2
  6349  00377A  CFDD F008          	movff	postdec2,??_fputc+3
  6350  00377E  5005               	movf	??_fputc^0,w,c
  6351  003780  2407               	addwf	(??_fputc+2)^0,w,c
  6352  003782  6ED9               	movwf	fsr2l,c
  6353  003784  5006               	movf	(??_fputc+1)^0,w,c
  6354  003786  2008               	addwfc	(??_fputc+3)^0,w,c
  6355  003788  6EDA               	movwf	fsr2h,c
  6356  00378A  C001  FFDF         	movff	fputc@c,indf2
  6357  00378E  EE20 F002          	lfsr	2,2
  6358  003792  5003               	movf	fputc@fp^0,w,c
  6359  003794  26D9               	addwf	fsr2l,f,c
  6360  003796  5004               	movf	(fputc@fp+1)^0,w,c
  6361  003798  22DA               	addwfc	fsr2h,f,c
  6362  00379A  2ADE               	incf	postinc2,f,c
  6363  00379C  0E00               	movlw	0
  6364  00379E  22DD               	addwfc	postdec2,f,c
  6365  0037A0                     l1138:
  6366  0037A0  0012               	return		;funcret
  6367  0037A2                     __end_of_fputc:
  6368                           	callstack 0
  6369                           
  6370 ;; *************** function _putch *****************
  6371 ;; Defined at:
  6372 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\putch.c"
  6373 ;; Parameters:    Size  Location     Type
  6374 ;;  c               1    wreg     unsigned char 
  6375 ;; Auto vars:     Size  Location     Type
  6376 ;;  c               1    0[COMRAM] unsigned char 
  6377 ;; Return value:  Size  Location     Type
  6378 ;;                  1    wreg      void 
  6379 ;; Registers used:
  6380 ;;		wreg
  6381 ;; Tracked objects:
  6382 ;;		On entry : 0/0
  6383 ;;		On exit  : 0/0
  6384 ;;		Unchanged: 0/0
  6385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6386 ;;      Params:         0       0       0       0       0       0       0
  6387 ;;      Locals:         0       0       0       0       0       0       0
  6388 ;;      Temps:          0       0       0       0       0       0       0
  6389 ;;      Totals:         0       0       0       0       0       0       0
  6390 ;;Total ram usage:        0 bytes
  6391 ;; Hardware stack levels used:    1
  6392 ;; This function calls:
  6393 ;;		Nothing
  6394 ;; This function is called by:
  6395 ;;		_fputc
  6396 ;; This function uses a non-reentrant model
  6397 ;;
  6398                           
  6399                           	psect	text18
  6400  0041AA                     __ptext18:
  6401                           	callstack 0
  6402  0041AA                     _putch:
  6403                           	callstack 25
  6404  0041AA  0012               	return		;funcret
  6405  0041AC                     __end_of_putch:
  6406                           	callstack 0
  6407                           
  6408 ;; *************** function _floorf *****************
  6409 ;; Defined at:
  6410 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\floorf.c"
  6411 ;; Parameters:    Size  Location     Type
  6412 ;;  x               4   25[COMRAM] float 
  6413 ;; Auto vars:     Size  Location     Type
  6414 ;;  u               4   41[COMRAM] struct .
  6415 ;;  m               4   35[COMRAM] unsigned long 
  6416 ;;  e               2   39[COMRAM] int 
  6417 ;; Return value:  Size  Location     Type
  6418 ;;                  4   25[COMRAM] float 
  6419 ;; Registers used:
  6420 ;;		wreg, status,2, status,0
  6421 ;; Tracked objects:
  6422 ;;		On entry : 0/0
  6423 ;;		On exit  : 0/0
  6424 ;;		Unchanged: 0/0
  6425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6426 ;;      Params:         4       0       0       0       0       0       0
  6427 ;;      Locals:        10       0       0       0       0       0       0
  6428 ;;      Temps:          6       0       0       0       0       0       0
  6429 ;;      Totals:        20       0       0       0       0       0       0
  6430 ;;Total ram usage:       20 bytes
  6431 ;; Hardware stack levels used:    1
  6432 ;; This function calls:
  6433 ;;		Nothing
  6434 ;; This function is called by:
  6435 ;;		_efgtoa
  6436 ;; This function uses a non-reentrant model
  6437 ;;
  6438                           
  6439                           	psect	text19
  6440  002A24                     __ptext19:
  6441                           	callstack 0
  6442  002A24                     _floorf:
  6443                           	callstack 25
  6444  002A24  C0D9  F02A         	movff	floorf@F524,floorf@u
  6445  002A28  C0DA  F02B         	movff	floorf@F524+1,floorf@u+1
  6446  002A2C  C0DB  F02C         	movff	floorf@F524+2,floorf@u+2
  6447  002A30  C0DC  F02D         	movff	floorf@F524+3,floorf@u+3
  6448  002A34  C01A  F02A         	movff	floorf@x,floorf@u
  6449  002A38  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  6450  002A3C  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  6451  002A40  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  6452  002A44  0E81               	movlw	129
  6453  002A46  6E1E               	movwf	??_floorf^0,c
  6454  002A48  0EFF               	movlw	255
  6455  002A4A  6E1F               	movwf	(??_floorf+1)^0,c
  6456  002A4C  C02A  F020         	movff	floorf@u,??_floorf+2
  6457  002A50  C02B  F021         	movff	floorf@u+1,??_floorf+3
  6458  002A54  C02C  F022         	movff	floorf@u+2,??_floorf+4
  6459  002A58  C02D  F023         	movff	floorf@u+3,??_floorf+5
  6460  002A5C  0E18               	movlw	24
  6461  002A5E  EF36  F015         	goto	u4180
  6462  002A62                     u4185:
  6463  002A62  90D8               	bcf	status,0,c
  6464  002A64  3223               	rrcf	(??_floorf+5)^0,f,c
  6465  002A66  3222               	rrcf	(??_floorf+4)^0,f,c
  6466  002A68  3221               	rrcf	(??_floorf+3)^0,f,c
  6467  002A6A  3220               	rrcf	(??_floorf+2)^0,f,c
  6468  002A6C                     u4180:
  6469  002A6C  2EE8               	decfsz	wreg,f,c
  6470  002A6E  EF31  F015         	goto	u4185
  6471  002A72  5020               	movf	(??_floorf+2)^0,w,c
  6472  002A74  241E               	addwf	??_floorf^0,w,c
  6473  002A76  6E28               	movwf	floorf@e^0,c
  6474  002A78  0E00               	movlw	0
  6475  002A7A  201F               	addwfc	(??_floorf+1)^0,w,c
  6476  002A7C  6E29               	movwf	(floorf@e+1)^0,c
  6477  002A7E  BE29               	btfsc	(floorf@e+1)^0,7,c
  6478  002A80  EF4B  F015         	goto	u4191
  6479  002A84  5029               	movf	(floorf@e+1)^0,w,c
  6480  002A86  E109               	bnz	u4190
  6481  002A88  0E17               	movlw	23
  6482  002A8A  5C28               	subwf	floorf@e^0,w,c
  6483  002A8C  A0D8               	btfss	status,0,c
  6484  002A8E  EF4B  F015         	goto	u4191
  6485  002A92  EF4D  F015         	goto	u4190
  6486  002A96                     u4191:
  6487  002A96  EF57  F015         	goto	l3767
  6488  002A9A                     u4190:
  6489  002A9A                     l3765:
  6490  002A9A  C01A  F01A         	movff	floorf@x,?_floorf
  6491  002A9E  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  6492  002AA2  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  6493  002AA6  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  6494  002AAA  EF1A  F016         	goto	l1099
  6495  002AAE                     l3767:
  6496  002AAE  BE29               	btfsc	(floorf@e+1)^0,7,c
  6497  002AB0  EF5C  F015         	goto	u4201
  6498  002AB4  EF5E  F015         	goto	u4200
  6499  002AB8                     u4201:
  6500  002AB8  EFCE  F015         	goto	l3777
  6501  002ABC                     u4200:
  6502  002ABC  C028  F01E         	movff	floorf@e,??_floorf
  6503  002AC0  0EFF               	movlw	255
  6504  002AC2  6E1F               	movwf	(??_floorf+1)^0,c
  6505  002AC4  0EFF               	movlw	255
  6506  002AC6  6E20               	movwf	(??_floorf+2)^0,c
  6507  002AC8  0E7F               	movlw	127
  6508  002ACA  6E21               	movwf	(??_floorf+3)^0,c
  6509  002ACC  0E00               	movlw	0
  6510  002ACE  6E22               	movwf	(??_floorf+4)^0,c
  6511  002AD0                     u4215:
  6512  002AD0  661E               	tstfsz	??_floorf^0,c
  6513  002AD2  EF6D  F015         	goto	u4216
  6514  002AD6  EF75  F015         	goto	u4217
  6515  002ADA                     u4216:
  6516  002ADA  3422               	rlcf	(??_floorf+4)^0,w,c
  6517  002ADC  3222               	rrcf	(??_floorf+4)^0,f,c
  6518  002ADE  3221               	rrcf	(??_floorf+3)^0,f,c
  6519  002AE0  3220               	rrcf	(??_floorf+2)^0,f,c
  6520  002AE2  321F               	rrcf	(??_floorf+1)^0,f,c
  6521  002AE4  2E1E               	decfsz	??_floorf^0,f,c
  6522  002AE6  EF68  F015         	goto	u4215
  6523  002AEA                     u4217:
  6524  002AEA  C01F  F024         	movff	??_floorf+1,floorf@m
  6525  002AEE  C020  F025         	movff	??_floorf+2,floorf@m+1
  6526  002AF2  C021  F026         	movff	??_floorf+3,floorf@m+2
  6527  002AF6  C022  F027         	movff	??_floorf+4,floorf@m+3
  6528  002AFA  5024               	movf	floorf@m^0,w,c
  6529  002AFC  142A               	andwf	floorf@u^0,w,c
  6530  002AFE  6E1E               	movwf	??_floorf^0,c
  6531  002B00  5025               	movf	(floorf@m+1)^0,w,c
  6532  002B02  142B               	andwf	(floorf@u+1)^0,w,c
  6533  002B04  6E1F               	movwf	(??_floorf+1)^0,c
  6534  002B06  5026               	movf	(floorf@m+2)^0,w,c
  6535  002B08  142C               	andwf	(floorf@u+2)^0,w,c
  6536  002B0A  6E20               	movwf	(??_floorf+2)^0,c
  6537  002B0C  5027               	movf	(floorf@m+3)^0,w,c
  6538  002B0E  142D               	andwf	(floorf@u+3)^0,w,c
  6539  002B10  6E21               	movwf	(??_floorf+3)^0,c
  6540  002B12  501E               	movf	??_floorf^0,w,c
  6541  002B14  101F               	iorwf	(??_floorf+1)^0,w,c
  6542  002B16  1020               	iorwf	(??_floorf+2)^0,w,c
  6543  002B18  1021               	iorwf	(??_floorf+3)^0,w,c
  6544  002B1A  A4D8               	btfss	status,2,c
  6545  002B1C  EF92  F015         	goto	u4221
  6546  002B20  EF94  F015         	goto	u4220
  6547  002B24                     u4221:
  6548  002B24  EF96  F015         	goto	l3773
  6549  002B28                     u4220:
  6550  002B28  EF4D  F015         	goto	l3765
  6551  002B2C                     l3773:
  6552  002B2C  C02A  F01E         	movff	floorf@u,??_floorf
  6553  002B30  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  6554  002B34  C02C  F020         	movff	floorf@u+2,??_floorf+2
  6555  002B38  C02D  F021         	movff	floorf@u+3,??_floorf+3
  6556  002B3C  0E20               	movlw	32
  6557  002B3E  EFA6  F015         	goto	u4230
  6558  002B42                     u4235:
  6559  002B42  90D8               	bcf	status,0,c
  6560  002B44  3221               	rrcf	(??_floorf+3)^0,f,c
  6561  002B46  3220               	rrcf	(??_floorf+2)^0,f,c
  6562  002B48  321F               	rrcf	(??_floorf+1)^0,f,c
  6563  002B4A  321E               	rrcf	??_floorf^0,f,c
  6564  002B4C                     u4230:
  6565  002B4C  2EE8               	decfsz	wreg,f,c
  6566  002B4E  EFA1  F015         	goto	u4235
  6567  002B52  501E               	movf	??_floorf^0,w,c
  6568  002B54  101F               	iorwf	(??_floorf+1)^0,w,c
  6569  002B56  1020               	iorwf	(??_floorf+2)^0,w,c
  6570  002B58  1021               	iorwf	(??_floorf+3)^0,w,c
  6571  002B5A  B4D8               	btfsc	status,2,c
  6572  002B5C  EFB2  F015         	goto	u4241
  6573  002B60  EFB4  F015         	goto	u4240
  6574  002B64                     u4241:
  6575  002B64  EFBC  F015         	goto	l1102
  6576  002B68                     u4240:
  6577  002B68  5024               	movf	floorf@m^0,w,c
  6578  002B6A  262A               	addwf	floorf@u^0,f,c
  6579  002B6C  5025               	movf	(floorf@m+1)^0,w,c
  6580  002B6E  222B               	addwfc	(floorf@u+1)^0,f,c
  6581  002B70  5026               	movf	(floorf@m+2)^0,w,c
  6582  002B72  222C               	addwfc	(floorf@u+2)^0,f,c
  6583  002B74  5027               	movf	(floorf@m+3)^0,w,c
  6584  002B76  222D               	addwfc	(floorf@u+3)^0,f,c
  6585  002B78                     l1102:
  6586  002B78  1C24               	comf	floorf@m^0,w,c
  6587  002B7A  6E1E               	movwf	??_floorf^0,c
  6588  002B7C  1C25               	comf	(floorf@m+1)^0,w,c
  6589  002B7E  6E1F               	movwf	(??_floorf+1)^0,c
  6590  002B80  1C26               	comf	(floorf@m+2)^0,w,c
  6591  002B82  6E20               	movwf	(??_floorf+2)^0,c
  6592  002B84  1C27               	comf	(floorf@m+3)^0,w,c
  6593  002B86  6E21               	movwf	(??_floorf+3)^0,c
  6594  002B88  501E               	movf	??_floorf^0,w,c
  6595  002B8A  162A               	andwf	floorf@u^0,f,c
  6596  002B8C  501F               	movf	(??_floorf+1)^0,w,c
  6597  002B8E  162B               	andwf	(floorf@u+1)^0,f,c
  6598  002B90  5020               	movf	(??_floorf+2)^0,w,c
  6599  002B92  162C               	andwf	(floorf@u+2)^0,f,c
  6600  002B94  5021               	movf	(??_floorf+3)^0,w,c
  6601  002B96  162D               	andwf	(floorf@u+3)^0,f,c
  6602  002B98  EF12  F016         	goto	l3785
  6603  002B9C                     l3777:
  6604  002B9C  C02A  F01E         	movff	floorf@u,??_floorf
  6605  002BA0  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  6606  002BA4  C02C  F020         	movff	floorf@u+2,??_floorf+2
  6607  002BA8  C02D  F021         	movff	floorf@u+3,??_floorf+3
  6608  002BAC  0E20               	movlw	32
  6609  002BAE  EFDE  F015         	goto	u4250
  6610  002BB2                     u4255:
  6611  002BB2  90D8               	bcf	status,0,c
  6612  002BB4  3221               	rrcf	(??_floorf+3)^0,f,c
  6613  002BB6  3220               	rrcf	(??_floorf+2)^0,f,c
  6614  002BB8  321F               	rrcf	(??_floorf+1)^0,f,c
  6615  002BBA  321E               	rrcf	??_floorf^0,f,c
  6616  002BBC                     u4250:
  6617  002BBC  2EE8               	decfsz	wreg,f,c
  6618  002BBE  EFD9  F015         	goto	u4255
  6619  002BC2  501E               	movf	??_floorf^0,w,c
  6620  002BC4  101F               	iorwf	(??_floorf+1)^0,w,c
  6621  002BC6  1020               	iorwf	(??_floorf+2)^0,w,c
  6622  002BC8  1021               	iorwf	(??_floorf+3)^0,w,c
  6623  002BCA  A4D8               	btfss	status,2,c
  6624  002BCC  EFEA  F015         	goto	u4261
  6625  002BD0  EFEC  F015         	goto	u4260
  6626  002BD4                     u4261:
  6627  002BD4  EFF6  F015         	goto	l3781
  6628  002BD8                     u4260:
  6629  002BD8  0E00               	movlw	0
  6630  002BDA  6E2A               	movwf	floorf@u^0,c
  6631  002BDC  0E00               	movlw	0
  6632  002BDE  6E2B               	movwf	(floorf@u+1)^0,c
  6633  002BE0  0E00               	movlw	0
  6634  002BE2  6E2C               	movwf	(floorf@u+2)^0,c
  6635  002BE4  0E00               	movlw	0
  6636  002BE6  6E2D               	movwf	(floorf@u+3)^0,c
  6637  002BE8  EF12  F016         	goto	l3785
  6638  002BEC                     l3781:
  6639  002BEC  90D8               	bcf	status,0,c
  6640  002BEE  342A               	rlcf	floorf@u^0,w,c
  6641  002BF0  6E1E               	movwf	??_floorf^0,c
  6642  002BF2  342B               	rlcf	(floorf@u+1)^0,w,c
  6643  002BF4  6E1F               	movwf	(??_floorf+1)^0,c
  6644  002BF6  342C               	rlcf	(floorf@u+2)^0,w,c
  6645  002BF8  6E20               	movwf	(??_floorf+2)^0,c
  6646  002BFA  342D               	rlcf	(floorf@u+3)^0,w,c
  6647  002BFC  6E21               	movwf	(??_floorf+3)^0,c
  6648  002BFE  501E               	movf	??_floorf^0,w,c
  6649  002C00  101F               	iorwf	(??_floorf+1)^0,w,c
  6650  002C02  1020               	iorwf	(??_floorf+2)^0,w,c
  6651  002C04  1021               	iorwf	(??_floorf+3)^0,w,c
  6652  002C06  B4D8               	btfsc	status,2,c
  6653  002C08  EF08  F016         	goto	u4271
  6654  002C0C  EF0A  F016         	goto	u4270
  6655  002C10                     u4271:
  6656  002C10  EF12  F016         	goto	l3785
  6657  002C14                     u4270:
  6658  002C14  0E00               	movlw	0
  6659  002C16  6E2A               	movwf	floorf@u^0,c
  6660  002C18  0E00               	movlw	0
  6661  002C1A  6E2B               	movwf	(floorf@u+1)^0,c
  6662  002C1C  0E80               	movlw	128
  6663  002C1E  6E2C               	movwf	(floorf@u+2)^0,c
  6664  002C20  0EBF               	movlw	191
  6665  002C22  6E2D               	movwf	(floorf@u+3)^0,c
  6666  002C24                     l3785:
  6667  002C24  C02A  F01A         	movff	floorf@u,?_floorf
  6668  002C28  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  6669  002C2C  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  6670  002C30  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  6671  002C34                     l1099:
  6672  002C34  0012               	return		;funcret
  6673  002C36                     __end_of_floorf:
  6674                           	callstack 0
  6675                           
  6676 ;; *************** function ___fpclassifyf *****************
  6677 ;; Defined at:
  6678 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  6679 ;; Parameters:    Size  Location     Type
  6680 ;;  x               4    0[COMRAM] float 
  6681 ;; Auto vars:     Size  Location     Type
  6682 ;;  u               4   10[COMRAM] struct .
  6683 ;;  e               2    8[COMRAM] int 
  6684 ;; Return value:  Size  Location     Type
  6685 ;;                  2    0[COMRAM] int 
  6686 ;; Registers used:
  6687 ;;		wreg, status,2, status,0
  6688 ;; Tracked objects:
  6689 ;;		On entry : 0/0
  6690 ;;		On exit  : 0/0
  6691 ;;		Unchanged: 0/0
  6692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6693 ;;      Params:         4       0       0       0       0       0       0
  6694 ;;      Locals:         6       0       0       0       0       0       0
  6695 ;;      Temps:          4       0       0       0       0       0       0
  6696 ;;      Totals:        14       0       0       0       0       0       0
  6697 ;;Total ram usage:       14 bytes
  6698 ;; Hardware stack levels used:    1
  6699 ;; This function calls:
  6700 ;;		Nothing
  6701 ;; This function is called by:
  6702 ;;		_efgtoa
  6703 ;; This function uses a non-reentrant model
  6704 ;;
  6705                           
  6706                           	psect	text20
  6707  003504                     __ptext20:
  6708                           	callstack 0
  6709  003504                     ___fpclassifyf:
  6710                           	callstack 25
  6711  003504  C0DD  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  6712  003508  C0DE  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  6713  00350C  C0DF  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  6714  003510  C0E0  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  6715  003514  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  6716  003518  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6717  00351C  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6718  003520  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6719  003524  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6720  003528  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6721  00352C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6722  003530  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6723  003534  0E18               	movlw	24
  6724  003536  EFA2  F01A         	goto	u4060
  6725  00353A                     u4065:
  6726  00353A  90D8               	bcf	status,0,c
  6727  00353C  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  6728  00353E  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  6729  003540  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  6730  003542  3205               	rrcf	??___fpclassifyf^0,f,c
  6731  003544                     u4060:
  6732  003544  2EE8               	decfsz	wreg,f,c
  6733  003546  EF9D  F01A         	goto	u4065
  6734  00354A  5005               	movf	??___fpclassifyf^0,w,c
  6735  00354C  6E09               	movwf	___fpclassifyf@e^0,c
  6736  00354E  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  6737  003550  5009               	movf	___fpclassifyf@e^0,w,c
  6738  003552  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6739  003554  A4D8               	btfss	status,2,c
  6740  003556  EFAF  F01A         	goto	u4071
  6741  00355A  EFB1  F01A         	goto	u4070
  6742  00355E                     u4071:
  6743  00355E  EFD1  F01A         	goto	l3737
  6744  003562                     u4070:
  6745  003562  90D8               	bcf	status,0,c
  6746  003564  340B               	rlcf	___fpclassifyf@u^0,w,c
  6747  003566  6E05               	movwf	??___fpclassifyf^0,c
  6748  003568  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6749  00356A  6E06               	movwf	(??___fpclassifyf+1)^0,c
  6750  00356C  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6751  00356E  6E07               	movwf	(??___fpclassifyf+2)^0,c
  6752  003570  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6753  003572  6E08               	movwf	(??___fpclassifyf+3)^0,c
  6754  003574  5005               	movf	??___fpclassifyf^0,w,c
  6755  003576  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6756  003578  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6757  00357A  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6758  00357C  A4D8               	btfss	status,2,c
  6759  00357E  EFC3  F01A         	goto	u4081
  6760  003582  EFC5  F01A         	goto	u4080
  6761  003586                     u4081:
  6762  003586  EFCB  F01A         	goto	l3733
  6763  00358A                     u4080:
  6764  00358A  0E00               	movlw	0
  6765  00358C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6766  00358E  0E02               	movlw	2
  6767  003590  6E01               	movwf	?___fpclassifyf^0,c
  6768  003592  EF00  F01B         	goto	l1061
  6769  003596                     l3733:
  6770  003596  0E00               	movlw	0
  6771  003598  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6772  00359A  0E03               	movlw	3
  6773  00359C  6E01               	movwf	?___fpclassifyf^0,c
  6774  00359E  EF00  F01B         	goto	l1061
  6775  0035A2                     l3737:
  6776  0035A2  2809               	incf	___fpclassifyf@e^0,w,c
  6777  0035A4  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6778  0035A6  A4D8               	btfss	status,2,c
  6779  0035A8  EFD8  F01A         	goto	u4091
  6780  0035AC  EFDA  F01A         	goto	u4090
  6781  0035B0                     u4091:
  6782  0035B0  EFFC  F01A         	goto	l3743
  6783  0035B4                     u4090:
  6784  0035B4  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6785  0035B8  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6786  0035BC  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6787  0035C0  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6788  0035C4  0E09               	movlw	9
  6789  0035C6                     u4105:
  6790  0035C6  90D8               	bcf	status,0,c
  6791  0035C8  3605               	rlcf	??___fpclassifyf^0,f,c
  6792  0035CA  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  6793  0035CC  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  6794  0035CE  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  6795  0035D0  2EE8               	decfsz	wreg,f,c
  6796  0035D2  EFE3  F01A         	goto	u4105
  6797  0035D6  5005               	movf	??___fpclassifyf^0,w,c
  6798  0035D8  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6799  0035DA  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6800  0035DC  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6801  0035DE  B4D8               	btfsc	status,2,c
  6802  0035E0  EFF4  F01A         	goto	u4111
  6803  0035E4  EFF7  F01A         	goto	u4110
  6804  0035E8                     u4111:
  6805  0035E8  0E01               	movlw	1
  6806  0035EA  EFF8  F01A         	goto	u4120
  6807  0035EE                     u4110:
  6808  0035EE  0E00               	movlw	0
  6809  0035F0                     u4120:
  6810  0035F0  6E01               	movwf	?___fpclassifyf^0,c
  6811  0035F2  6A02               	clrf	(?___fpclassifyf+1)^0,c
  6812  0035F4  EF00  F01B         	goto	l1061
  6813  0035F8                     l3743:
  6814  0035F8  0E00               	movlw	0
  6815  0035FA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6816  0035FC  0E04               	movlw	4
  6817  0035FE  6E01               	movwf	?___fpclassifyf^0,c
  6818  003600                     l1061:
  6819  003600  0012               	return		;funcret
  6820  003602                     __end_of___fpclassifyf:
  6821                           	callstack 0
  6822                           
  6823 ;; *************** function ___fltol *****************
  6824 ;; Defined at:
  6825 ;;		line 43 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\fltol.c"
  6826 ;; Parameters:    Size  Location     Type
  6827 ;;  f1              4   25[COMRAM] int 
  6828 ;; Auto vars:     Size  Location     Type
  6829 ;;  exp1            1   34[COMRAM] unsigned char 
  6830 ;;  sign1           1   33[COMRAM] unsigned char 
  6831 ;; Return value:  Size  Location     Type
  6832 ;;                  4   25[COMRAM] long 
  6833 ;; Registers used:
  6834 ;;		wreg, status,2, status,0
  6835 ;; Tracked objects:
  6836 ;;		On entry : 0/0
  6837 ;;		On exit  : 0/0
  6838 ;;		Unchanged: 0/0
  6839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6840 ;;      Params:         4       0       0       0       0       0       0
  6841 ;;      Locals:         2       0       0       0       0       0       0
  6842 ;;      Temps:          4       0       0       0       0       0       0
  6843 ;;      Totals:        10       0       0       0       0       0       0
  6844 ;;Total ram usage:       10 bytes
  6845 ;; Hardware stack levels used:    1
  6846 ;; This function calls:
  6847 ;;		Nothing
  6848 ;; This function is called by:
  6849 ;;		_esvaziar_tanque
  6850 ;;		_efgtoa
  6851 ;; This function uses a non-reentrant model
  6852 ;;
  6853                           
  6854                           	psect	text21
  6855  0032FA                     __ptext21:
  6856                           	callstack 0
  6857  0032FA                     ___fltol:
  6858                           	callstack 25
  6859  0032FA  341C               	rlcf	(___fltol@f1+2)^0,w,c
  6860  0032FC  341D               	rlcf	(___fltol@f1+3)^0,w,c
  6861  0032FE  6E23               	movwf	___fltol@exp1^0,c
  6862  003300  5023               	movf	___fltol@exp1^0,w,c
  6863  003302  A4D8               	btfss	status,2,c
  6864  003304  EF86  F019         	goto	u3951
  6865  003308  EF88  F019         	goto	u3950
  6866  00330C                     u3951:
  6867  00330C  EF92  F019         	goto	l3665
  6868  003310                     u3950:
  6869  003310                     l3661:
  6870  003310  0E00               	movlw	0
  6871  003312  6E1A               	movwf	?___fltol^0,c
  6872  003314  0E00               	movlw	0
  6873  003316  6E1B               	movwf	(?___fltol+1)^0,c
  6874  003318  0E00               	movlw	0
  6875  00331A  6E1C               	movwf	(?___fltol+2)^0,c
  6876  00331C  0E00               	movlw	0
  6877  00331E  6E1D               	movwf	(?___fltol+3)^0,c
  6878  003320  EFFF  F019         	goto	l502
  6879  003324                     l3665:
  6880  003324  C01A  F01E         	movff	___fltol@f1,??___fltol
  6881  003328  C01B  F01F         	movff	___fltol@f1+1,??___fltol+1
  6882  00332C  C01C  F020         	movff	___fltol@f1+2,??___fltol+2
  6883  003330  C01D  F021         	movff	___fltol@f1+3,??___fltol+3
  6884  003334  0E20               	movlw	32
  6885  003336  EFA2  F019         	goto	u3960
  6886  00333A                     u3965:
  6887  00333A  90D8               	bcf	status,0,c
  6888  00333C  3221               	rrcf	(??___fltol+3)^0,f,c
  6889  00333E  3220               	rrcf	(??___fltol+2)^0,f,c
  6890  003340  321F               	rrcf	(??___fltol+1)^0,f,c
  6891  003342  321E               	rrcf	??___fltol^0,f,c
  6892  003344                     u3960:
  6893  003344  2EE8               	decfsz	wreg,f,c
  6894  003346  EF9D  F019         	goto	u3965
  6895  00334A  501E               	movf	??___fltol^0,w,c
  6896  00334C  6E22               	movwf	___fltol@sign1^0,c
  6897  00334E  8E1C               	bsf	(___fltol@f1+2)^0,7,c
  6898  003350  0EFF               	movlw	255
  6899  003352  161A               	andwf	___fltol@f1^0,f,c
  6900  003354  0EFF               	movlw	255
  6901  003356  161B               	andwf	(___fltol@f1+1)^0,f,c
  6902  003358  0EFF               	movlw	255
  6903  00335A  161C               	andwf	(___fltol@f1+2)^0,f,c
  6904  00335C  0E00               	movlw	0
  6905  00335E  161D               	andwf	(___fltol@f1+3)^0,f,c
  6906  003360  0E96               	movlw	150
  6907  003362  5E23               	subwf	___fltol@exp1^0,f,c
  6908  003364  BE23               	btfsc	___fltol@exp1^0,7,c
  6909  003366  EFB9  F019         	goto	u3970
  6910  00336A  EFB7  F019         	goto	u3971
  6911  00336E                     u3971:
  6912  00336E  EFCF  F019         	goto	l3685
  6913  003372                     u3970:
  6914  003372  5023               	movf	___fltol@exp1^0,w,c
  6915  003374  0A80               	xorlw	128
  6916  003376  0F97               	addlw	151
  6917  003378  B0D8               	btfsc	status,0,c
  6918  00337A  EFC1  F019         	goto	u3981
  6919  00337E  EFC3  F019         	goto	u3980
  6920  003382                     u3981:
  6921  003382  EFC5  F019         	goto	l3681
  6922  003386                     u3980:
  6923  003386  EF88  F019         	goto	l3661
  6924  00338A                     l3681:
  6925  00338A  90D8               	bcf	status,0,c
  6926  00338C  321D               	rrcf	(___fltol@f1+3)^0,f,c
  6927  00338E  321C               	rrcf	(___fltol@f1+2)^0,f,c
  6928  003390  321B               	rrcf	(___fltol@f1+1)^0,f,c
  6929  003392  321A               	rrcf	___fltol@f1^0,f,c
  6930  003394  3E23               	incfsz	___fltol@exp1^0,f,c
  6931  003396  EFC5  F019         	goto	l3681
  6932  00339A  EFE7  F019         	goto	l3695
  6933  00339E                     l3685:
  6934  00339E  0E1F               	movlw	31
  6935  0033A0  6423               	cpfsgt	___fltol@exp1^0,c
  6936  0033A2  EFD5  F019         	goto	u3991
  6937  0033A6  EFD7  F019         	goto	u3990
  6938  0033AA                     u3991:
  6939  0033AA  EFDF  F019         	goto	l3693
  6940  0033AE                     u3990:
  6941  0033AE  EF88  F019         	goto	l3661
  6942  0033B2                     l3691:
  6943  0033B2  90D8               	bcf	status,0,c
  6944  0033B4  361A               	rlcf	___fltol@f1^0,f,c
  6945  0033B6  361B               	rlcf	(___fltol@f1+1)^0,f,c
  6946  0033B8  361C               	rlcf	(___fltol@f1+2)^0,f,c
  6947  0033BA  361D               	rlcf	(___fltol@f1+3)^0,f,c
  6948  0033BC  0623               	decf	___fltol@exp1^0,f,c
  6949  0033BE                     l3693:
  6950  0033BE  5023               	movf	___fltol@exp1^0,w,c
  6951  0033C0  A4D8               	btfss	status,2,c
  6952  0033C2  EFE5  F019         	goto	u4001
  6953  0033C6  EFE7  F019         	goto	u4000
  6954  0033CA                     u4001:
  6955  0033CA  EFD9  F019         	goto	l3691
  6956  0033CE                     u4000:
  6957  0033CE                     l3695:
  6958  0033CE  5022               	movf	___fltol@sign1^0,w,c
  6959  0033D0  B4D8               	btfsc	status,2,c
  6960  0033D2  EFED  F019         	goto	u4011
  6961  0033D6  EFEF  F019         	goto	u4010
  6962  0033DA                     u4011:
  6963  0033DA  EFF7  F019         	goto	l3699
  6964  0033DE                     u4010:
  6965  0033DE  1E1D               	comf	(___fltol@f1+3)^0,f,c
  6966  0033E0  1E1C               	comf	(___fltol@f1+2)^0,f,c
  6967  0033E2  1E1B               	comf	(___fltol@f1+1)^0,f,c
  6968  0033E4  6C1A               	negf	___fltol@f1^0,c
  6969  0033E6  0E00               	movlw	0
  6970  0033E8  221B               	addwfc	(___fltol@f1+1)^0,f,c
  6971  0033EA  221C               	addwfc	(___fltol@f1+2)^0,f,c
  6972  0033EC  221D               	addwfc	(___fltol@f1+3)^0,f,c
  6973  0033EE                     l3699:
  6974  0033EE  C01A  F01A         	movff	___fltol@f1,?___fltol
  6975  0033F2  C01B  F01B         	movff	___fltol@f1+1,?___fltol+1
  6976  0033F6  C01C  F01C         	movff	___fltol@f1+2,?___fltol+2
  6977  0033FA  C01D  F01D         	movff	___fltol@f1+3,?___fltol+3
  6978  0033FE                     l502:
  6979  0033FE  0012               	return		;funcret
  6980  003400                     __end_of___fltol:
  6981                           	callstack 0
  6982                           
  6983 ;; *************** function ___flsub *****************
  6984 ;; Defined at:
  6985 ;;		line 245 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  6986 ;; Parameters:    Size  Location     Type
  6987 ;;  b               4   30[COMRAM] long 
  6988 ;;  a               4   34[COMRAM] long 
  6989 ;; Auto vars:     Size  Location     Type
  6990 ;;		None
  6991 ;; Return value:  Size  Location     Type
  6992 ;;                  4   30[COMRAM] long 
  6993 ;; Registers used:
  6994 ;;		wreg, status,2, status,0, cstack
  6995 ;; Tracked objects:
  6996 ;;		On entry : 0/0
  6997 ;;		On exit  : 0/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7000 ;;      Params:         8       0       0       0       0       0       0
  7001 ;;      Locals:         0       0       0       0       0       0       0
  7002 ;;      Temps:          0       0       0       0       0       0       0
  7003 ;;      Totals:         8       0       0       0       0       0       0
  7004 ;;Total ram usage:        8 bytes
  7005 ;; Hardware stack levels used:    1
  7006 ;; Hardware stack levels required when called:    1
  7007 ;; This function calls:
  7008 ;;		___fladd
  7009 ;; This function is called by:
  7010 ;;		_esvaziar_tanque
  7011 ;;		_efgtoa
  7012 ;; This function uses a non-reentrant model
  7013 ;;
  7014                           
  7015                           	psect	text22
  7016  003F7A                     __ptext22:
  7017                           	callstack 0
  7018  003F7A                     ___flsub:
  7019                           	callstack 24
  7020  003F7A  0E00               	movlw	0
  7021  003F7C  1A23               	xorwf	___flsub@a^0,f,c
  7022  003F7E  0E00               	movlw	0
  7023  003F80  1A24               	xorwf	(___flsub@a+1)^0,f,c
  7024  003F82  0E00               	movlw	0
  7025  003F84  1A25               	xorwf	(___flsub@a+2)^0,f,c
  7026  003F86  0E80               	movlw	128
  7027  003F88  1A26               	xorwf	(___flsub@a+3)^0,f,c
  7028  003F8A  C01F  F00F         	movff	___flsub@b,___fladd@b
  7029  003F8E  C020  F010         	movff	___flsub@b+1,___fladd@b+1
  7030  003F92  C021  F011         	movff	___flsub@b+2,___fladd@b+2
  7031  003F96  C022  F012         	movff	___flsub@b+3,___fladd@b+3
  7032  003F9A  C023  F013         	movff	___flsub@a,___fladd@a
  7033  003F9E  C024  F014         	movff	___flsub@a+1,___fladd@a+1
  7034  003FA2  C025  F015         	movff	___flsub@a+2,___fladd@a+2
  7035  003FA6  C026  F016         	movff	___flsub@a+3,___fladd@a+3
  7036  003FAA  EC47  F009         	call	___fladd	;wreg free
  7037  003FAE  C00F  F01F         	movff	?___fladd,?___flsub
  7038  003FB2  C010  F020         	movff	?___fladd+1,?___flsub+1
  7039  003FB6  C011  F021         	movff	?___fladd+2,?___flsub+2
  7040  003FBA  C012  F022         	movff	?___fladd+3,?___flsub+3
  7041  003FBE  0012               	return		;funcret
  7042  003FC0                     __end_of___flsub:
  7043                           	callstack 0
  7044                           
  7045 ;; *************** function ___fladd *****************
  7046 ;; Defined at:
  7047 ;;		line 10 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  7048 ;; Parameters:    Size  Location     Type
  7049 ;;  b               4   14[COMRAM] long 
  7050 ;;  a               4   18[COMRAM] long 
  7051 ;; Auto vars:     Size  Location     Type
  7052 ;;  grs             1   29[COMRAM] unsigned char 
  7053 ;;  bexp            1   28[COMRAM] unsigned char 
  7054 ;;  aexp            1   27[COMRAM] unsigned char 
  7055 ;;  signs           1   26[COMRAM] unsigned char 
  7056 ;; Return value:  Size  Location     Type
  7057 ;;                  4   14[COMRAM] unsigned char 
  7058 ;; Registers used:
  7059 ;;		wreg, status,2, status,0
  7060 ;; Tracked objects:
  7061 ;;		On entry : 0/0
  7062 ;;		On exit  : 0/0
  7063 ;;		Unchanged: 0/0
  7064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7065 ;;      Params:         8       0       0       0       0       0       0
  7066 ;;      Locals:         4       0       0       0       0       0       0
  7067 ;;      Temps:          4       0       0       0       0       0       0
  7068 ;;      Totals:        16       0       0       0       0       0       0
  7069 ;;Total ram usage:       16 bytes
  7070 ;; Hardware stack levels used:    1
  7071 ;; This function calls:
  7072 ;;		Nothing
  7073 ;; This function is called by:
  7074 ;;		_encher_tanque
  7075 ;;		___flsub
  7076 ;;		_efgtoa
  7077 ;; This function uses a non-reentrant model
  7078 ;;
  7079                           
  7080                           	psect	text23
  7081  00128E                     __ptext23:
  7082                           	callstack 0
  7083  00128E                     ___fladd:
  7084                           	callstack 24
  7085  00128E  5012               	movf	(___fladd@b+3)^0,w,c
  7086  001290  0B80               	andlw	128
  7087  001292  6E1B               	movwf	___fladd@signs^0,c
  7088  001294  5012               	movf	(___fladd@b+3)^0,w,c
  7089  001296  2412               	addwf	(___fladd@b+3)^0,w,c
  7090  001298  6E1D               	movwf	___fladd@bexp^0,c
  7091  00129A  AE11               	btfss	(___fladd@b+2)^0,7,c
  7092  00129C  EF52  F009         	goto	u2891
  7093  0012A0  EF54  F009         	goto	u2890
  7094  0012A4                     u2891:
  7095  0012A4  EF55  F009         	goto	l3035
  7096  0012A8                     u2890:
  7097  0012A8  801D               	bsf	___fladd@bexp^0,0,c
  7098  0012AA                     l3035:
  7099  0012AA  501D               	movf	___fladd@bexp^0,w,c
  7100  0012AC  B4D8               	btfsc	status,2,c
  7101  0012AE  EF5B  F009         	goto	u2901
  7102  0012B2  EF5D  F009         	goto	u2900
  7103  0012B6                     u2901:
  7104  0012B6  EF72  F009         	goto	l3045
  7105  0012BA                     u2900:
  7106  0012BA  281D               	incf	___fladd@bexp^0,w,c
  7107  0012BC  A4D8               	btfss	status,2,c
  7108  0012BE  EF63  F009         	goto	u2911
  7109  0012C2  EF65  F009         	goto	u2910
  7110  0012C6                     u2911:
  7111  0012C6  EF6D  F009         	goto	l3041
  7112  0012CA                     u2910:
  7113  0012CA  0E00               	movlw	0
  7114  0012CC  6E0F               	movwf	___fladd@b^0,c
  7115  0012CE  0E00               	movlw	0
  7116  0012D0  6E10               	movwf	(___fladd@b+1)^0,c
  7117  0012D2  0E00               	movlw	0
  7118  0012D4  6E11               	movwf	(___fladd@b+2)^0,c
  7119  0012D6  0E00               	movlw	0
  7120  0012D8  6E12               	movwf	(___fladd@b+3)^0,c
  7121  0012DA                     l3041:
  7122  0012DA  8E11               	bsf	(___fladd@b+2)^0,7,c
  7123  0012DC  0E00               	movlw	0
  7124  0012DE  6E12               	movwf	(___fladd@b+3)^0,c
  7125  0012E0  EF7A  F009         	goto	l3047
  7126  0012E4                     l3045:
  7127  0012E4  0E00               	movlw	0
  7128  0012E6  6E0F               	movwf	___fladd@b^0,c
  7129  0012E8  0E00               	movlw	0
  7130  0012EA  6E10               	movwf	(___fladd@b+1)^0,c
  7131  0012EC  0E00               	movlw	0
  7132  0012EE  6E11               	movwf	(___fladd@b+2)^0,c
  7133  0012F0  0E00               	movlw	0
  7134  0012F2  6E12               	movwf	(___fladd@b+3)^0,c
  7135  0012F4                     l3047:
  7136  0012F4  5016               	movf	(___fladd@a+3)^0,w,c
  7137  0012F6  0B80               	andlw	128
  7138  0012F8  6E1C               	movwf	___fladd@aexp^0,c
  7139  0012FA  501B               	movf	___fladd@signs^0,w,c
  7140  0012FC  181C               	xorwf	___fladd@aexp^0,w,c
  7141  0012FE  B4D8               	btfsc	status,2,c
  7142  001300  EF84  F009         	goto	u2921
  7143  001304  EF86  F009         	goto	u2920
  7144  001308                     u2921:
  7145  001308  EF87  F009         	goto	l3053
  7146  00130C                     u2920:
  7147  00130C  8C1B               	bsf	___fladd@signs^0,6,c
  7148  00130E                     l3053:
  7149  00130E  5016               	movf	(___fladd@a+3)^0,w,c
  7150  001310  2416               	addwf	(___fladd@a+3)^0,w,c
  7151  001312  6E1C               	movwf	___fladd@aexp^0,c
  7152  001314  AE15               	btfss	(___fladd@a+2)^0,7,c
  7153  001316  EF8F  F009         	goto	u2931
  7154  00131A  EF91  F009         	goto	u2930
  7155  00131E                     u2931:
  7156  00131E  EF92  F009         	goto	l3059
  7157  001322                     u2930:
  7158  001322  801C               	bsf	___fladd@aexp^0,0,c
  7159  001324                     l3059:
  7160  001324  501C               	movf	___fladd@aexp^0,w,c
  7161  001326  B4D8               	btfsc	status,2,c
  7162  001328  EF98  F009         	goto	u2941
  7163  00132C  EF9A  F009         	goto	u2940
  7164  001330                     u2941:
  7165  001330  EFAF  F009         	goto	l3069
  7166  001334                     u2940:
  7167  001334  281C               	incf	___fladd@aexp^0,w,c
  7168  001336  A4D8               	btfss	status,2,c
  7169  001338  EFA0  F009         	goto	u2951
  7170  00133C  EFA2  F009         	goto	u2950
  7171  001340                     u2951:
  7172  001340  EFAA  F009         	goto	l3065
  7173  001344                     u2950:
  7174  001344  0E00               	movlw	0
  7175  001346  6E13               	movwf	___fladd@a^0,c
  7176  001348  0E00               	movlw	0
  7177  00134A  6E14               	movwf	(___fladd@a+1)^0,c
  7178  00134C  0E00               	movlw	0
  7179  00134E  6E15               	movwf	(___fladd@a+2)^0,c
  7180  001350  0E00               	movlw	0
  7181  001352  6E16               	movwf	(___fladd@a+3)^0,c
  7182  001354                     l3065:
  7183  001354  8E15               	bsf	(___fladd@a+2)^0,7,c
  7184  001356  0E00               	movlw	0
  7185  001358  6E16               	movwf	(___fladd@a+3)^0,c
  7186  00135A  EFB7  F009         	goto	l3071
  7187  00135E                     l3069:
  7188  00135E  0E00               	movlw	0
  7189  001360  6E13               	movwf	___fladd@a^0,c
  7190  001362  0E00               	movlw	0
  7191  001364  6E14               	movwf	(___fladd@a+1)^0,c
  7192  001366  0E00               	movlw	0
  7193  001368  6E15               	movwf	(___fladd@a+2)^0,c
  7194  00136A  0E00               	movlw	0
  7195  00136C  6E16               	movwf	(___fladd@a+3)^0,c
  7196  00136E                     l3071:
  7197  00136E  501D               	movf	___fladd@bexp^0,w,c
  7198  001370  5C1C               	subwf	___fladd@aexp^0,w,c
  7199  001372  B0D8               	btfsc	status,0,c
  7200  001374  EFBE  F009         	goto	u2961
  7201  001378  EFC0  F009         	goto	u2960
  7202  00137C                     u2961:
  7203  00137C  EFE7  F009         	goto	l3107
  7204  001380                     u2960:
  7205  001380  AC1B               	btfss	___fladd@signs^0,6,c
  7206  001382  EFC5  F009         	goto	u2971
  7207  001386  EFC7  F009         	goto	u2970
  7208  00138A                     u2971:
  7209  00138A  EFC9  F009         	goto	l3077
  7210  00138E                     u2970:
  7211  00138E  0E80               	movlw	128
  7212  001390  1A1B               	xorwf	___fladd@signs^0,f,c
  7213  001392                     l3077:
  7214  001392  C01D  F01E         	movff	___fladd@bexp,___fladd@grs
  7215  001396  C01C  F01D         	movff	___fladd@aexp,___fladd@bexp
  7216  00139A  C01E  F01C         	movff	___fladd@grs,___fladd@aexp
  7217  00139E  C00F  F01E         	movff	___fladd@b,___fladd@grs
  7218  0013A2  C013  F00F         	movff	___fladd@a,___fladd@b
  7219  0013A6  C01E  F013         	movff	___fladd@grs,___fladd@a
  7220  0013AA  C010  F01E         	movff	___fladd@b+1,___fladd@grs
  7221  0013AE  C014  F010         	movff	___fladd@a+1,___fladd@b+1
  7222  0013B2  C01E  F014         	movff	___fladd@grs,___fladd@a+1
  7223  0013B6  C011  F01E         	movff	___fladd@b+2,___fladd@grs
  7224  0013BA  C015  F011         	movff	___fladd@a+2,___fladd@b+2
  7225  0013BE  C01E  F015         	movff	___fladd@grs,___fladd@a+2
  7226  0013C2  C012  F01E         	movff	___fladd@b+3,___fladd@grs
  7227  0013C6  C016  F012         	movff	___fladd@a+3,___fladd@b+3
  7228  0013CA  C01E  F016         	movff	___fladd@grs,___fladd@a+3
  7229  0013CE                     l3107:
  7230  0013CE  0E00               	movlw	0
  7231  0013D0  6E1E               	movwf	___fladd@grs^0,c
  7232  0013D2  501D               	movf	___fladd@bexp^0,w,c
  7233  0013D4  C01C  F017         	movff	___fladd@aexp,??___fladd
  7234  0013D8  6A18               	clrf	(??___fladd+1)^0,c
  7235  0013DA  5E17               	subwf	??___fladd^0,f,c
  7236  0013DC  0E00               	movlw	0
  7237  0013DE  5A18               	subwfb	(??___fladd+1)^0,f,c
  7238  0013E0  BE18               	btfsc	(??___fladd+1)^0,7,c
  7239  0013E2  EFFC  F009         	goto	u2981
  7240  0013E6  5018               	movf	(??___fladd+1)^0,w,c
  7241  0013E8  E109               	bnz	u2980
  7242  0013EA  0E1A               	movlw	26
  7243  0013EC  5C17               	subwf	??___fladd^0,w,c
  7244  0013EE  A0D8               	btfss	status,0,c
  7245  0013F0  EFFC  F009         	goto	u2981
  7246  0013F4  EFFE  F009         	goto	u2980
  7247  0013F8                     u2981:
  7248  0013F8  EF35  F00A         	goto	l734
  7249  0013FC                     u2980:
  7250  0013FC  500F               	movf	___fladd@b^0,w,c
  7251  0013FE  1010               	iorwf	(___fladd@b+1)^0,w,c
  7252  001400  1011               	iorwf	(___fladd@b+2)^0,w,c
  7253  001402  1012               	iorwf	(___fladd@b+3)^0,w,c
  7254  001404  A4D8               	btfss	status,2,c
  7255  001406  EF07  F00A         	goto	u2991
  7256  00140A  EF0A  F00A         	goto	u2990
  7257  00140E                     u2991:
  7258  00140E  0E01               	movlw	1
  7259  001410  EF0B  F00A         	goto	u3000
  7260  001414                     u2990:
  7261  001414  0E00               	movlw	0
  7262  001416                     u3000:
  7263  001416  6E1E               	movwf	___fladd@grs^0,c
  7264  001418  0E00               	movlw	0
  7265  00141A  6E0F               	movwf	___fladd@b^0,c
  7266  00141C  0E00               	movlw	0
  7267  00141E  6E10               	movwf	(___fladd@b+1)^0,c
  7268  001420  0E00               	movlw	0
  7269  001422  6E11               	movwf	(___fladd@b+2)^0,c
  7270  001424  0E00               	movlw	0
  7271  001426  6E12               	movwf	(___fladd@b+3)^0,c
  7272  001428  C01C  F01D         	movff	___fladd@aexp,___fladd@bexp
  7273  00142C  EF3E  F00A         	goto	l733
  7274  001430                     l735:
  7275  001430  A01E               	btfss	___fladd@grs^0,0,c
  7276  001432  EF1D  F00A         	goto	u3011
  7277  001436  EF1F  F00A         	goto	u3010
  7278  00143A                     u3011:
  7279  00143A  EF25  F00A         	goto	l3119
  7280  00143E                     u3010:
  7281  00143E  90D8               	bcf	status,0,c
  7282  001440  301E               	rrcf	___fladd@grs^0,w,c
  7283  001442  0901               	iorlw	1
  7284  001444  6E1E               	movwf	___fladd@grs^0,c
  7285  001446  EF27  F00A         	goto	l3121
  7286  00144A                     l3119:
  7287  00144A  90D8               	bcf	status,0,c
  7288  00144C  321E               	rrcf	___fladd@grs^0,f,c
  7289  00144E                     l3121:
  7290  00144E  A00F               	btfss	___fladd@b^0,0,c
  7291  001450  EF2C  F00A         	goto	u3021
  7292  001454  EF2E  F00A         	goto	u3020
  7293  001458                     u3021:
  7294  001458  EF2F  F00A         	goto	l3125
  7295  00145C                     u3020:
  7296  00145C  8E1E               	bsf	___fladd@grs^0,7,c
  7297  00145E                     l3125:
  7298  00145E  3412               	rlcf	(___fladd@b+3)^0,w,c
  7299  001460  3212               	rrcf	(___fladd@b+3)^0,f,c
  7300  001462  3211               	rrcf	(___fladd@b+2)^0,f,c
  7301  001464  3210               	rrcf	(___fladd@b+1)^0,f,c
  7302  001466  320F               	rrcf	___fladd@b^0,f,c
  7303  001468  2A1D               	incf	___fladd@bexp^0,f,c
  7304  00146A                     l734:
  7305  00146A  501C               	movf	___fladd@aexp^0,w,c
  7306  00146C  5C1D               	subwf	___fladd@bexp^0,w,c
  7307  00146E  A0D8               	btfss	status,0,c
  7308  001470  EF3C  F00A         	goto	u3031
  7309  001474  EF3E  F00A         	goto	u3030
  7310  001478                     u3031:
  7311  001478  EF18  F00A         	goto	l735
  7312  00147C                     u3030:
  7313  00147C                     l733:
  7314  00147C  BC1B               	btfsc	___fladd@signs^0,6,c
  7315  00147E  EF43  F00A         	goto	u3041
  7316  001482  EF45  F00A         	goto	u3040
  7317  001486                     u3041:
  7318  001486  EF85  F00A         	goto	l3153
  7319  00148A                     u3040:
  7320  00148A  501D               	movf	___fladd@bexp^0,w,c
  7321  00148C  A4D8               	btfss	status,2,c
  7322  00148E  EF4B  F00A         	goto	u3051
  7323  001492  EF4D  F00A         	goto	u3050
  7324  001496                     u3051:
  7325  001496  EF57  F00A         	goto	l3135
  7326  00149A                     u3050:
  7327  00149A  0E00               	movlw	0
  7328  00149C  6E0F               	movwf	?___fladd^0,c
  7329  00149E  0E00               	movlw	0
  7330  0014A0  6E10               	movwf	(?___fladd+1)^0,c
  7331  0014A2  0E00               	movlw	0
  7332  0014A4  6E11               	movwf	(?___fladd+2)^0,c
  7333  0014A6  0E00               	movlw	0
  7334  0014A8  6E12               	movwf	(?___fladd+3)^0,c
  7335  0014AA  EFA6  F00B         	goto	l742
  7336  0014AE                     l3135:
  7337  0014AE  5013               	movf	___fladd@a^0,w,c
  7338  0014B0  260F               	addwf	___fladd@b^0,f,c
  7339  0014B2  5014               	movf	(___fladd@a+1)^0,w,c
  7340  0014B4  2210               	addwfc	(___fladd@b+1)^0,f,c
  7341  0014B6  5015               	movf	(___fladd@a+2)^0,w,c
  7342  0014B8  2211               	addwfc	(___fladd@b+2)^0,f,c
  7343  0014BA  5016               	movf	(___fladd@a+3)^0,w,c
  7344  0014BC  2212               	addwfc	(___fladd@b+3)^0,f,c
  7345  0014BE  A012               	btfss	(___fladd@b+3)^0,0,c
  7346  0014C0  EF64  F00A         	goto	u3061
  7347  0014C4  EF66  F00A         	goto	u3060
  7348  0014C8                     u3061:
  7349  0014C8  EF12  F00B         	goto	l3189
  7350  0014CC                     u3060:
  7351  0014CC  A01E               	btfss	___fladd@grs^0,0,c
  7352  0014CE  EF6B  F00A         	goto	u3071
  7353  0014D2  EF6D  F00A         	goto	u3070
  7354  0014D6                     u3071:
  7355  0014D6  EF73  F00A         	goto	l3143
  7356  0014DA                     u3070:
  7357  0014DA  90D8               	bcf	status,0,c
  7358  0014DC  301E               	rrcf	___fladd@grs^0,w,c
  7359  0014DE  0901               	iorlw	1
  7360  0014E0  6E1E               	movwf	___fladd@grs^0,c
  7361  0014E2  EF75  F00A         	goto	l3145
  7362  0014E6                     l3143:
  7363  0014E6  90D8               	bcf	status,0,c
  7364  0014E8  321E               	rrcf	___fladd@grs^0,f,c
  7365  0014EA                     l3145:
  7366  0014EA  A00F               	btfss	___fladd@b^0,0,c
  7367  0014EC  EF7A  F00A         	goto	u3081
  7368  0014F0  EF7C  F00A         	goto	u3080
  7369  0014F4                     u3081:
  7370  0014F4  EF7D  F00A         	goto	l3149
  7371  0014F8                     u3080:
  7372  0014F8  8E1E               	bsf	___fladd@grs^0,7,c
  7373  0014FA                     l3149:
  7374  0014FA  3412               	rlcf	(___fladd@b+3)^0,w,c
  7375  0014FC  3212               	rrcf	(___fladd@b+3)^0,f,c
  7376  0014FE  3211               	rrcf	(___fladd@b+2)^0,f,c
  7377  001500  3210               	rrcf	(___fladd@b+1)^0,f,c
  7378  001502  320F               	rrcf	___fladd@b^0,f,c
  7379  001504  2A1D               	incf	___fladd@bexp^0,f,c
  7380  001506  EF12  F00B         	goto	l3189
  7381  00150A                     l3153:
  7382  00150A  5013               	movf	___fladd@a^0,w,c
  7383  00150C  5C0F               	subwf	___fladd@b^0,w,c
  7384  00150E  5014               	movf	(___fladd@a+1)^0,w,c
  7385  001510  5810               	subwfb	(___fladd@b+1)^0,w,c
  7386  001512  5015               	movf	(___fladd@a+2)^0,w,c
  7387  001514  5811               	subwfb	(___fladd@b+2)^0,w,c
  7388  001516  5012               	movf	(___fladd@b+3)^0,w,c
  7389  001518  0A80               	xorlw	128
  7390  00151A  6E17               	movwf	??___fladd^0,c
  7391  00151C  5016               	movf	(___fladd@a+3)^0,w,c
  7392  00151E  0A80               	xorlw	128
  7393  001520  5817               	subwfb	??___fladd^0,w,c
  7394  001522  B0D8               	btfsc	status,0,c
  7395  001524  EF96  F00A         	goto	u3091
  7396  001528  EF98  F00A         	goto	u3090
  7397  00152C                     u3091:
  7398  00152C  EFC3  F00A         	goto	l3163
  7399  001530                     u3090:
  7400  001530  500F               	movf	___fladd@b^0,w,c
  7401  001532  5C13               	subwf	___fladd@a^0,w,c
  7402  001534  6E17               	movwf	??___fladd^0,c
  7403  001536  5010               	movf	(___fladd@b+1)^0,w,c
  7404  001538  5814               	subwfb	(___fladd@a+1)^0,w,c
  7405  00153A  6E18               	movwf	(??___fladd+1)^0,c
  7406  00153C  5011               	movf	(___fladd@b+2)^0,w,c
  7407  00153E  5815               	subwfb	(___fladd@a+2)^0,w,c
  7408  001540  6E19               	movwf	(??___fladd+2)^0,c
  7409  001542  5012               	movf	(___fladd@b+3)^0,w,c
  7410  001544  5816               	subwfb	(___fladd@a+3)^0,w,c
  7411  001546  6E1A               	movwf	(??___fladd+3)^0,c
  7412  001548  0EFF               	movlw	255
  7413  00154A  2417               	addwf	??___fladd^0,w,c
  7414  00154C  6E0F               	movwf	___fladd@b^0,c
  7415  00154E  0EFF               	movlw	255
  7416  001550  2018               	addwfc	(??___fladd+1)^0,w,c
  7417  001552  6E10               	movwf	(___fladd@b+1)^0,c
  7418  001554  0EFF               	movlw	255
  7419  001556  2019               	addwfc	(??___fladd+2)^0,w,c
  7420  001558  6E11               	movwf	(___fladd@b+2)^0,c
  7421  00155A  0EFF               	movlw	255
  7422  00155C  201A               	addwfc	(??___fladd+3)^0,w,c
  7423  00155E  6E12               	movwf	(___fladd@b+3)^0,c
  7424  001560  0E80               	movlw	128
  7425  001562  1A1B               	xorwf	___fladd@signs^0,f,c
  7426  001564  6C1E               	negf	___fladd@grs^0,c
  7427  001566  501E               	movf	___fladd@grs^0,w,c
  7428  001568  A4D8               	btfss	status,2,c
  7429  00156A  EFB9  F00A         	goto	u3101
  7430  00156E  EFBB  F00A         	goto	u3100
  7431  001572                     u3101:
  7432  001572  EFCB  F00A         	goto	l750
  7433  001576                     u3100:
  7434  001576  0E01               	movlw	1
  7435  001578  260F               	addwf	___fladd@b^0,f,c
  7436  00157A  0E00               	movlw	0
  7437  00157C  2210               	addwfc	(___fladd@b+1)^0,f,c
  7438  00157E  2211               	addwfc	(___fladd@b+2)^0,f,c
  7439  001580  2212               	addwfc	(___fladd@b+3)^0,f,c
  7440  001582  EFCB  F00A         	goto	l750
  7441  001586                     l3163:
  7442  001586  5013               	movf	___fladd@a^0,w,c
  7443  001588  5E0F               	subwf	___fladd@b^0,f,c
  7444  00158A  5014               	movf	(___fladd@a+1)^0,w,c
  7445  00158C  5A10               	subwfb	(___fladd@b+1)^0,f,c
  7446  00158E  5015               	movf	(___fladd@a+2)^0,w,c
  7447  001590  5A11               	subwfb	(___fladd@b+2)^0,f,c
  7448  001592  5016               	movf	(___fladd@a+3)^0,w,c
  7449  001594  5A12               	subwfb	(___fladd@b+3)^0,f,c
  7450  001596                     l750:
  7451  001596  500F               	movf	___fladd@b^0,w,c
  7452  001598  1010               	iorwf	(___fladd@b+1)^0,w,c
  7453  00159A  1011               	iorwf	(___fladd@b+2)^0,w,c
  7454  00159C  1012               	iorwf	(___fladd@b+3)^0,w,c
  7455  00159E  A4D8               	btfss	status,2,c
  7456  0015A0  EFD4  F00A         	goto	u3111
  7457  0015A4  EFD6  F00A         	goto	u3110
  7458  0015A8                     u3111:
  7459  0015A8  EF0B  F00B         	goto	l3187
  7460  0015AC                     u3110:
  7461  0015AC  501E               	movf	___fladd@grs^0,w,c
  7462  0015AE  A4D8               	btfss	status,2,c
  7463  0015B0  EFDC  F00A         	goto	u3121
  7464  0015B4  EFDE  F00A         	goto	u3120
  7465  0015B8                     u3121:
  7466  0015B8  EF0B  F00B         	goto	l3187
  7467  0015BC                     u3120:
  7468  0015BC  0E00               	movlw	0
  7469  0015BE  6E0F               	movwf	?___fladd^0,c
  7470  0015C0  0E00               	movlw	0
  7471  0015C2  6E10               	movwf	(?___fladd+1)^0,c
  7472  0015C4  0E00               	movlw	0
  7473  0015C6  6E11               	movwf	(?___fladd+2)^0,c
  7474  0015C8  0E00               	movlw	0
  7475  0015CA  6E12               	movwf	(?___fladd+3)^0,c
  7476  0015CC  EFA6  F00B         	goto	l742
  7477  0015D0                     l3171:
  7478  0015D0  90D8               	bcf	status,0,c
  7479  0015D2  360F               	rlcf	___fladd@b^0,f,c
  7480  0015D4  3610               	rlcf	(___fladd@b+1)^0,f,c
  7481  0015D6  3611               	rlcf	(___fladd@b+2)^0,f,c
  7482  0015D8  3612               	rlcf	(___fladd@b+3)^0,f,c
  7483  0015DA  AE1E               	btfss	___fladd@grs^0,7,c
  7484  0015DC  EFF2  F00A         	goto	u3131
  7485  0015E0  EFF4  F00A         	goto	u3130
  7486  0015E4                     u3131:
  7487  0015E4  EFF5  F00A         	goto	l3177
  7488  0015E8                     u3130:
  7489  0015E8  800F               	bsf	___fladd@b^0,0,c
  7490  0015EA                     l3177:
  7491  0015EA  A01E               	btfss	___fladd@grs^0,0,c
  7492  0015EC  EFFA  F00A         	goto	u3141
  7493  0015F0  EFFC  F00A         	goto	u3140
  7494  0015F4                     u3141:
  7495  0015F4  EF00  F00B         	goto	l3181
  7496  0015F8                     u3140:
  7497  0015F8  80D8               	bsf	status,0,c
  7498  0015FA  361E               	rlcf	___fladd@grs^0,f,c
  7499  0015FC  EF02  F00B         	goto	l3183
  7500  001600                     l3181:
  7501  001600  90D8               	bcf	status,0,c
  7502  001602  361E               	rlcf	___fladd@grs^0,f,c
  7503  001604                     l3183:
  7504  001604  501D               	movf	___fladd@bexp^0,w,c
  7505  001606  B4D8               	btfsc	status,2,c
  7506  001608  EF08  F00B         	goto	u3151
  7507  00160C  EF0A  F00B         	goto	u3150
  7508  001610                     u3151:
  7509  001610  EF0B  F00B         	goto	l3187
  7510  001614                     u3150:
  7511  001614  061D               	decf	___fladd@bexp^0,f,c
  7512  001616                     l3187:
  7513  001616  AE11               	btfss	(___fladd@b+2)^0,7,c
  7514  001618  EF10  F00B         	goto	u3161
  7515  00161C  EF12  F00B         	goto	u3160
  7516  001620                     u3161:
  7517  001620  EFE8  F00A         	goto	l3171
  7518  001624                     u3160:
  7519  001624                     l3189:
  7520  001624  0E00               	movlw	0
  7521  001626  6E1C               	movwf	___fladd@aexp^0,c
  7522  001628  AE1E               	btfss	___fladd@grs^0,7,c
  7523  00162A  EF19  F00B         	goto	u3171
  7524  00162E  EF1B  F00B         	goto	u3170
  7525  001632                     u3171:
  7526  001632  EF33  F00B         	goto	l759
  7527  001636                     u3170:
  7528  001636  C01E  F017         	movff	___fladd@grs,??___fladd
  7529  00163A  0E7F               	movlw	127
  7530  00163C  1617               	andwf	??___fladd^0,f,c
  7531  00163E  B4D8               	btfsc	status,2,c
  7532  001640  EF24  F00B         	goto	u3181
  7533  001644  EF26  F00B         	goto	u3180
  7534  001648                     u3181:
  7535  001648  EF2A  F00B         	goto	l760
  7536  00164C                     u3180:
  7537  00164C                     l3195:
  7538  00164C  0E01               	movlw	1
  7539  00164E  6E1C               	movwf	___fladd@aexp^0,c
  7540  001650  EF33  F00B         	goto	l759
  7541  001654                     l760:
  7542  001654  A00F               	btfss	___fladd@b^0,0,c
  7543  001656  EF2F  F00B         	goto	u3191
  7544  00165A  EF31  F00B         	goto	u3190
  7545  00165E                     u3191:
  7546  00165E  EF33  F00B         	goto	l759
  7547  001662                     u3190:
  7548  001662  EF26  F00B         	goto	l3195
  7549  001666                     l759:
  7550  001666  501C               	movf	___fladd@aexp^0,w,c
  7551  001668  B4D8               	btfsc	status,2,c
  7552  00166A  EF39  F00B         	goto	u3201
  7553  00166E  EF3B  F00B         	goto	u3200
  7554  001672                     u3201:
  7555  001672  EF66  F00B         	goto	l3207
  7556  001676                     u3200:
  7557  001676  0E01               	movlw	1
  7558  001678  260F               	addwf	___fladd@b^0,f,c
  7559  00167A  0E00               	movlw	0
  7560  00167C  2210               	addwfc	(___fladd@b+1)^0,f,c
  7561  00167E  2211               	addwfc	(___fladd@b+2)^0,f,c
  7562  001680  2212               	addwfc	(___fladd@b+3)^0,f,c
  7563  001682  A012               	btfss	(___fladd@b+3)^0,0,c
  7564  001684  EF46  F00B         	goto	u3211
  7565  001688  EF48  F00B         	goto	u3210
  7566  00168C                     u3211:
  7567  00168C  EF66  F00B         	goto	l3207
  7568  001690                     u3210:
  7569  001690  C00F  F017         	movff	___fladd@b,??___fladd
  7570  001694  C010  F018         	movff	___fladd@b+1,??___fladd+1
  7571  001698  C011  F019         	movff	___fladd@b+2,??___fladd+2
  7572  00169C  C012  F01A         	movff	___fladd@b+3,??___fladd+3
  7573  0016A0  341A               	rlcf	(??___fladd+3)^0,w,c
  7574  0016A2  321A               	rrcf	(??___fladd+3)^0,f,c
  7575  0016A4  3219               	rrcf	(??___fladd+2)^0,f,c
  7576  0016A6  3218               	rrcf	(??___fladd+1)^0,f,c
  7577  0016A8  3217               	rrcf	??___fladd^0,f,c
  7578  0016AA  C017  F00F         	movff	??___fladd,___fladd@b
  7579  0016AE  C018  F010         	movff	??___fladd+1,___fladd@b+1
  7580  0016B2  C019  F011         	movff	??___fladd+2,___fladd@b+2
  7581  0016B6  C01A  F012         	movff	??___fladd+3,___fladd@b+3
  7582  0016BA  281D               	incf	___fladd@bexp^0,w,c
  7583  0016BC  B4D8               	btfsc	status,2,c
  7584  0016BE  EF63  F00B         	goto	u3221
  7585  0016C2  EF65  F00B         	goto	u3220
  7586  0016C6                     u3221:
  7587  0016C6  EF66  F00B         	goto	l3207
  7588  0016CA                     u3220:
  7589  0016CA  2A1D               	incf	___fladd@bexp^0,f,c
  7590  0016CC                     l3207:
  7591  0016CC  281D               	incf	___fladd@bexp^0,w,c
  7592  0016CE  B4D8               	btfsc	status,2,c
  7593  0016D0  EF6C  F00B         	goto	u3231
  7594  0016D4  EF6E  F00B         	goto	u3230
  7595  0016D8                     u3231:
  7596  0016D8  EF76  F00B         	goto	l3211
  7597  0016DC                     u3230:
  7598  0016DC  501D               	movf	___fladd@bexp^0,w,c
  7599  0016DE  A4D8               	btfss	status,2,c
  7600  0016E0  EF74  F00B         	goto	u3241
  7601  0016E4  EF76  F00B         	goto	u3240
  7602  0016E8                     u3241:
  7603  0016E8  EF88  F00B         	goto	l3215
  7604  0016EC                     u3240:
  7605  0016EC                     l3211:
  7606  0016EC  0E00               	movlw	0
  7607  0016EE  6E0F               	movwf	___fladd@b^0,c
  7608  0016F0  0E00               	movlw	0
  7609  0016F2  6E10               	movwf	(___fladd@b+1)^0,c
  7610  0016F4  0E00               	movlw	0
  7611  0016F6  6E11               	movwf	(___fladd@b+2)^0,c
  7612  0016F8  0E00               	movlw	0
  7613  0016FA  6E12               	movwf	(___fladd@b+3)^0,c
  7614  0016FC  501D               	movf	___fladd@bexp^0,w,c
  7615  0016FE  A4D8               	btfss	status,2,c
  7616  001700  EF84  F00B         	goto	u3251
  7617  001704  EF86  F00B         	goto	u3250
  7618  001708                     u3251:
  7619  001708  EF88  F00B         	goto	l3215
  7620  00170C                     u3250:
  7621  00170C  0E00               	movlw	0
  7622  00170E  6E1B               	movwf	___fladd@signs^0,c
  7623  001710                     l3215:
  7624  001710  A01D               	btfss	___fladd@bexp^0,0,c
  7625  001712  EF8D  F00B         	goto	u3261
  7626  001716  EF8F  F00B         	goto	u3260
  7627  00171A                     u3261:
  7628  00171A  EF92  F00B         	goto	l3219
  7629  00171E                     u3260:
  7630  00171E  8E11               	bsf	(___fladd@b+2)^0,7,c
  7631  001720  EF93  F00B         	goto	l3221
  7632  001724                     l3219:
  7633  001724  9E11               	bcf	(___fladd@b+2)^0,7,c
  7634  001726                     l3221:
  7635  001726  90D8               	bcf	status,0,c
  7636  001728  301D               	rrcf	___fladd@bexp^0,w,c
  7637  00172A  6E12               	movwf	(___fladd@b+3)^0,c
  7638  00172C  AE1B               	btfss	___fladd@signs^0,7,c
  7639  00172E  EF9B  F00B         	goto	u3271
  7640  001732  EF9D  F00B         	goto	u3270
  7641  001736                     u3271:
  7642  001736  EF9E  F00B         	goto	l3227
  7643  00173A                     u3270:
  7644  00173A  8E12               	bsf	(___fladd@b+3)^0,7,c
  7645  00173C                     l3227:
  7646  00173C  C00F  F00F         	movff	___fladd@b,?___fladd
  7647  001740  C010  F010         	movff	___fladd@b+1,?___fladd+1
  7648  001744  C011  F011         	movff	___fladd@b+2,?___fladd+2
  7649  001748  C012  F012         	movff	___fladd@b+3,?___fladd+3
  7650  00174C                     l742:
  7651  00174C  0012               	return		;funcret
  7652  00174E                     __end_of___fladd:
  7653                           	callstack 0
  7654                           
  7655 ;; *************** function ___flneg *****************
  7656 ;; Defined at:
  7657 ;;		line 15 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\flneg.c"
  7658 ;; Parameters:    Size  Location     Type
  7659 ;;  f1              4    0[COMRAM] unsigned char 
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;		None
  7662 ;; Return value:  Size  Location     Type
  7663 ;;                  4    0[COMRAM] unsigned char 
  7664 ;; Registers used:
  7665 ;;		wreg, status,2, status,0
  7666 ;; Tracked objects:
  7667 ;;		On entry : 0/0
  7668 ;;		On exit  : 0/0
  7669 ;;		Unchanged: 0/0
  7670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7671 ;;      Params:         4       0       0       0       0       0       0
  7672 ;;      Locals:         0       0       0       0       0       0       0
  7673 ;;      Temps:          0       0       0       0       0       0       0
  7674 ;;      Totals:         4       0       0       0       0       0       0
  7675 ;;Total ram usage:        4 bytes
  7676 ;; Hardware stack levels used:    1
  7677 ;; This function calls:
  7678 ;;		Nothing
  7679 ;; This function is called by:
  7680 ;;		_efgtoa
  7681 ;; This function uses a non-reentrant model
  7682 ;;
  7683                           
  7684                           	psect	text24
  7685  00403C                     __ptext24:
  7686                           	callstack 0
  7687  00403C                     ___flneg:
  7688                           	callstack 25
  7689  00403C  5001               	movf	___flneg@f1^0,w,c
  7690  00403E  1002               	iorwf	(___flneg@f1+1)^0,w,c
  7691  004040  1003               	iorwf	(___flneg@f1+2)^0,w,c
  7692  004042  1004               	iorwf	(___flneg@f1+3)^0,w,c
  7693  004044  B4D8               	btfsc	status,2,c
  7694  004046  EF27  F020         	goto	u3941
  7695  00404A  EF29  F020         	goto	u3940
  7696  00404E                     u3941:
  7697  00404E  EF31  F020         	goto	l3655
  7698  004052                     u3940:
  7699  004052  0E00               	movlw	0
  7700  004054  1A01               	xorwf	___flneg@f1^0,f,c
  7701  004056  0E00               	movlw	0
  7702  004058  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  7703  00405A  0E00               	movlw	0
  7704  00405C  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  7705  00405E  0E80               	movlw	128
  7706  004060  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  7707  004062                     l3655:
  7708  004062  C001  F001         	movff	___flneg@f1,?___flneg
  7709  004066  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  7710  00406A  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  7711  00406E  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  7712  004072  0012               	return		;funcret
  7713  004074                     __end_of___flneg:
  7714                           	callstack 0
  7715                           
  7716 ;; *************** function ___flmul *****************
  7717 ;; Defined at:
  7718 ;;		line 8 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
  7719 ;; Parameters:    Size  Location     Type
  7720 ;;  b               4    0[COMRAM] unsigned char 
  7721 ;;  a               4    4[COMRAM] unsigned char 
  7722 ;; Auto vars:     Size  Location     Type
  7723 ;;  prod            4   19[COMRAM] struct .
  7724 ;;  grs             4   13[COMRAM] unsigned long 
  7725 ;;  temp            2   23[COMRAM] struct .
  7726 ;;  bexp            1   18[COMRAM] unsigned char 
  7727 ;;  aexp            1   17[COMRAM] unsigned char 
  7728 ;;  sign            1   12[COMRAM] unsigned char 
  7729 ;; Return value:  Size  Location     Type
  7730 ;;                  4    0[COMRAM] unsigned char 
  7731 ;; Registers used:
  7732 ;;		wreg, status,2, status,0, prodl, prodh
  7733 ;; Tracked objects:
  7734 ;;		On entry : 0/0
  7735 ;;		On exit  : 0/0
  7736 ;;		Unchanged: 0/0
  7737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7738 ;;      Params:         8       0       0       0       0       0       0
  7739 ;;      Locals:        13       0       0       0       0       0       0
  7740 ;;      Temps:          4       0       0       0       0       0       0
  7741 ;;      Totals:        25       0       0       0       0       0       0
  7742 ;;Total ram usage:       25 bytes
  7743 ;; Hardware stack levels used:    1
  7744 ;; This function calls:
  7745 ;;		Nothing
  7746 ;; This function is called by:
  7747 ;;		_efgtoa
  7748 ;; This function uses a non-reentrant model
  7749 ;;
  7750                           
  7751                           	psect	text25
  7752  002018                     __ptext25:
  7753                           	callstack 0
  7754  002018                     ___flmul:
  7755                           	callstack 25
  7756  002018  5004               	movf	(___flmul@b+3)^0,w,c
  7757  00201A  0B80               	andlw	128
  7758  00201C  6E0D               	movwf	___flmul@sign^0,c
  7759  00201E  5004               	movf	(___flmul@b+3)^0,w,c
  7760  002020  2404               	addwf	(___flmul@b+3)^0,w,c
  7761  002022  6E13               	movwf	___flmul@bexp^0,c
  7762  002024  AE03               	btfss	(___flmul@b+2)^0,7,c
  7763  002026  EF17  F010         	goto	u3551
  7764  00202A  EF19  F010         	goto	u3550
  7765  00202E                     u3551:
  7766  00202E  EF1A  F010         	goto	l3403
  7767  002032                     u3550:
  7768  002032  8013               	bsf	___flmul@bexp^0,0,c
  7769  002034                     l3403:
  7770  002034  5013               	movf	___flmul@bexp^0,w,c
  7771  002036  B4D8               	btfsc	status,2,c
  7772  002038  EF20  F010         	goto	u3561
  7773  00203C  EF22  F010         	goto	u3560
  7774  002040                     u3561:
  7775  002040  EF35  F010         	goto	l3411
  7776  002044                     u3560:
  7777  002044  2813               	incf	___flmul@bexp^0,w,c
  7778  002046  A4D8               	btfss	status,2,c
  7779  002048  EF28  F010         	goto	u3571
  7780  00204C  EF2A  F010         	goto	u3570
  7781  002050                     u3571:
  7782  002050  EF32  F010         	goto	l3409
  7783  002054                     u3570:
  7784  002054  0E00               	movlw	0
  7785  002056  6E01               	movwf	___flmul@b^0,c
  7786  002058  0E00               	movlw	0
  7787  00205A  6E02               	movwf	(___flmul@b+1)^0,c
  7788  00205C  0E00               	movlw	0
  7789  00205E  6E03               	movwf	(___flmul@b+2)^0,c
  7790  002060  0E00               	movlw	0
  7791  002062  6E04               	movwf	(___flmul@b+3)^0,c
  7792  002064                     l3409:
  7793  002064  8E03               	bsf	(___flmul@b+2)^0,7,c
  7794  002066  EF3D  F010         	goto	l3413
  7795  00206A                     l3411:
  7796  00206A  0E00               	movlw	0
  7797  00206C  6E01               	movwf	___flmul@b^0,c
  7798  00206E  0E00               	movlw	0
  7799  002070  6E02               	movwf	(___flmul@b+1)^0,c
  7800  002072  0E00               	movlw	0
  7801  002074  6E03               	movwf	(___flmul@b+2)^0,c
  7802  002076  0E00               	movlw	0
  7803  002078  6E04               	movwf	(___flmul@b+3)^0,c
  7804  00207A                     l3413:
  7805  00207A  5008               	movf	(___flmul@a+3)^0,w,c
  7806  00207C  0B80               	andlw	128
  7807  00207E  1A0D               	xorwf	___flmul@sign^0,f,c
  7808  002080  5008               	movf	(___flmul@a+3)^0,w,c
  7809  002082  2408               	addwf	(___flmul@a+3)^0,w,c
  7810  002084  6E12               	movwf	___flmul@aexp^0,c
  7811  002086  AE07               	btfss	(___flmul@a+2)^0,7,c
  7812  002088  EF48  F010         	goto	u3581
  7813  00208C  EF4A  F010         	goto	u3580
  7814  002090                     u3581:
  7815  002090  EF4B  F010         	goto	l3421
  7816  002094                     u3580:
  7817  002094  8012               	bsf	___flmul@aexp^0,0,c
  7818  002096                     l3421:
  7819  002096  5012               	movf	___flmul@aexp^0,w,c
  7820  002098  B4D8               	btfsc	status,2,c
  7821  00209A  EF51  F010         	goto	u3591
  7822  00209E  EF53  F010         	goto	u3590
  7823  0020A2                     u3591:
  7824  0020A2  EF66  F010         	goto	l3429
  7825  0020A6                     u3590:
  7826  0020A6  2812               	incf	___flmul@aexp^0,w,c
  7827  0020A8  A4D8               	btfss	status,2,c
  7828  0020AA  EF59  F010         	goto	u3601
  7829  0020AE  EF5B  F010         	goto	u3600
  7830  0020B2                     u3601:
  7831  0020B2  EF63  F010         	goto	l3427
  7832  0020B6                     u3600:
  7833  0020B6  0E00               	movlw	0
  7834  0020B8  6E05               	movwf	___flmul@a^0,c
  7835  0020BA  0E00               	movlw	0
  7836  0020BC  6E06               	movwf	(___flmul@a+1)^0,c
  7837  0020BE  0E00               	movlw	0
  7838  0020C0  6E07               	movwf	(___flmul@a+2)^0,c
  7839  0020C2  0E00               	movlw	0
  7840  0020C4  6E08               	movwf	(___flmul@a+3)^0,c
  7841  0020C6                     l3427:
  7842  0020C6  8E07               	bsf	(___flmul@a+2)^0,7,c
  7843  0020C8  EF6E  F010         	goto	l819
  7844  0020CC                     l3429:
  7845  0020CC  0E00               	movlw	0
  7846  0020CE  6E05               	movwf	___flmul@a^0,c
  7847  0020D0  0E00               	movlw	0
  7848  0020D2  6E06               	movwf	(___flmul@a+1)^0,c
  7849  0020D4  0E00               	movlw	0
  7850  0020D6  6E07               	movwf	(___flmul@a+2)^0,c
  7851  0020D8  0E00               	movlw	0
  7852  0020DA  6E08               	movwf	(___flmul@a+3)^0,c
  7853  0020DC                     l819:
  7854  0020DC  5012               	movf	___flmul@aexp^0,w,c
  7855  0020DE  B4D8               	btfsc	status,2,c
  7856  0020E0  EF74  F010         	goto	u3611
  7857  0020E4  EF76  F010         	goto	u3610
  7858  0020E8                     u3611:
  7859  0020E8  EF7E  F010         	goto	l3433
  7860  0020EC                     u3610:
  7861  0020EC  5013               	movf	___flmul@bexp^0,w,c
  7862  0020EE  A4D8               	btfss	status,2,c
  7863  0020F0  EF7C  F010         	goto	u3621
  7864  0020F4  EF7E  F010         	goto	u3620
  7865  0020F8                     u3621:
  7866  0020F8  EF88  F010         	goto	l3437
  7867  0020FC                     u3620:
  7868  0020FC                     l3433:
  7869  0020FC  0E00               	movlw	0
  7870  0020FE  6E01               	movwf	?___flmul^0,c
  7871  002100  0E00               	movlw	0
  7872  002102  6E02               	movwf	(?___flmul+1)^0,c
  7873  002104  0E00               	movlw	0
  7874  002106  6E03               	movwf	(?___flmul+2)^0,c
  7875  002108  0E00               	movlw	0
  7876  00210A  6E04               	movwf	(?___flmul+3)^0,c
  7877  00210C  EF20  F012         	goto	l823
  7878  002110                     l3437:
  7879  002110  5007               	movf	(___flmul@a+2)^0,w,c
  7880  002112  0201               	mulwf	___flmul@b^0,c
  7881  002114  CFF3 F018          	movff	prodl,___flmul@temp
  7882  002118  CFF4 F019          	movff	prodh,___flmul@temp+1
  7883  00211C  5018               	movf	___flmul@temp^0,w,c
  7884  00211E  6E0E               	movwf	___flmul@grs^0,c
  7885  002120  6A0F               	clrf	(___flmul@grs+1)^0,c
  7886  002122  6A10               	clrf	(___flmul@grs+2)^0,c
  7887  002124  6A11               	clrf	(___flmul@grs+3)^0,c
  7888  002126  5019               	movf	(___flmul@temp+1)^0,w,c
  7889  002128  6E14               	movwf	___flmul@prod^0,c
  7890  00212A  6A15               	clrf	(___flmul@prod+1)^0,c
  7891  00212C  6A16               	clrf	(___flmul@prod+2)^0,c
  7892  00212E  6A17               	clrf	(___flmul@prod+3)^0,c
  7893  002130  5006               	movf	(___flmul@a+1)^0,w,c
  7894  002132  0202               	mulwf	(___flmul@b+1)^0,c
  7895  002134  CFF3 F018          	movff	prodl,___flmul@temp
  7896  002138  CFF4 F019          	movff	prodh,___flmul@temp+1
  7897  00213C  5018               	movf	___flmul@temp^0,w,c
  7898  00213E  260E               	addwf	___flmul@grs^0,f,c
  7899  002140  0E00               	movlw	0
  7900  002142  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7901  002144  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7902  002146  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7903  002148  5019               	movf	(___flmul@temp+1)^0,w,c
  7904  00214A  2614               	addwf	___flmul@prod^0,f,c
  7905  00214C  0E00               	movlw	0
  7906  00214E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7907  002150  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7908  002152  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7909  002154  5005               	movf	___flmul@a^0,w,c
  7910  002156  0203               	mulwf	(___flmul@b+2)^0,c
  7911  002158  CFF3 F018          	movff	prodl,___flmul@temp
  7912  00215C  CFF4 F019          	movff	prodh,___flmul@temp+1
  7913  002160  5018               	movf	___flmul@temp^0,w,c
  7914  002162  260E               	addwf	___flmul@grs^0,f,c
  7915  002164  0E00               	movlw	0
  7916  002166  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7917  002168  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7918  00216A  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7919  00216C  5019               	movf	(___flmul@temp+1)^0,w,c
  7920  00216E  2614               	addwf	___flmul@prod^0,f,c
  7921  002170  0E00               	movlw	0
  7922  002172  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7923  002174  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7924  002176  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7925  002178  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7926  00217C  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7927  002180  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7928  002184  6A0E               	clrf	___flmul@grs^0,c
  7929  002186  5005               	movf	___flmul@a^0,w,c
  7930  002188  0202               	mulwf	(___flmul@b+1)^0,c
  7931  00218A  CFF3 F018          	movff	prodl,___flmul@temp
  7932  00218E  CFF4 F019          	movff	prodh,___flmul@temp+1
  7933  002192  5018               	movf	___flmul@temp^0,w,c
  7934  002194  260E               	addwf	___flmul@grs^0,f,c
  7935  002196  5019               	movf	(___flmul@temp+1)^0,w,c
  7936  002198  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7937  00219A  0E00               	movlw	0
  7938  00219C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7939  00219E  0E00               	movlw	0
  7940  0021A0  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7941  0021A2  5006               	movf	(___flmul@a+1)^0,w,c
  7942  0021A4  0201               	mulwf	___flmul@b^0,c
  7943  0021A6  CFF3 F018          	movff	prodl,___flmul@temp
  7944  0021AA  CFF4 F019          	movff	prodh,___flmul@temp+1
  7945  0021AE  5018               	movf	___flmul@temp^0,w,c
  7946  0021B0  260E               	addwf	___flmul@grs^0,f,c
  7947  0021B2  5019               	movf	(___flmul@temp+1)^0,w,c
  7948  0021B4  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7949  0021B6  0E00               	movlw	0
  7950  0021B8  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7951  0021BA  0E00               	movlw	0
  7952  0021BC  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7953  0021BE  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7954  0021C2  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7955  0021C6  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7956  0021CA  6A0E               	clrf	___flmul@grs^0,c
  7957  0021CC  5005               	movf	___flmul@a^0,w,c
  7958  0021CE  0201               	mulwf	___flmul@b^0,c
  7959  0021D0  CFF3 F018          	movff	prodl,___flmul@temp
  7960  0021D4  CFF4 F019          	movff	prodh,___flmul@temp+1
  7961  0021D8  5018               	movf	___flmul@temp^0,w,c
  7962  0021DA  260E               	addwf	___flmul@grs^0,f,c
  7963  0021DC  5019               	movf	(___flmul@temp+1)^0,w,c
  7964  0021DE  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7965  0021E0  0E00               	movlw	0
  7966  0021E2  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7967  0021E4  0E00               	movlw	0
  7968  0021E6  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7969  0021E8  5007               	movf	(___flmul@a+2)^0,w,c
  7970  0021EA  0202               	mulwf	(___flmul@b+1)^0,c
  7971  0021EC  CFF3 F018          	movff	prodl,___flmul@temp
  7972  0021F0  CFF4 F019          	movff	prodh,___flmul@temp+1
  7973  0021F4  5018               	movf	___flmul@temp^0,w,c
  7974  0021F6  2614               	addwf	___flmul@prod^0,f,c
  7975  0021F8  5019               	movf	(___flmul@temp+1)^0,w,c
  7976  0021FA  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7977  0021FC  0E00               	movlw	0
  7978  0021FE  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7979  002200  0E00               	movlw	0
  7980  002202  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7981  002204  5006               	movf	(___flmul@a+1)^0,w,c
  7982  002206  0203               	mulwf	(___flmul@b+2)^0,c
  7983  002208  CFF3 F018          	movff	prodl,___flmul@temp
  7984  00220C  CFF4 F019          	movff	prodh,___flmul@temp+1
  7985  002210  5018               	movf	___flmul@temp^0,w,c
  7986  002212  2614               	addwf	___flmul@prod^0,f,c
  7987  002214  5019               	movf	(___flmul@temp+1)^0,w,c
  7988  002216  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7989  002218  0E00               	movlw	0
  7990  00221A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7991  00221C  0E00               	movlw	0
  7992  00221E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7993  002220  5007               	movf	(___flmul@a+2)^0,w,c
  7994  002222  0203               	mulwf	(___flmul@b+2)^0,c
  7995  002224  CFF3 F018          	movff	prodl,___flmul@temp
  7996  002228  CFF4 F019          	movff	prodh,___flmul@temp+1
  7997  00222C  5018               	movf	___flmul@temp^0,w,c
  7998  00222E  6E09               	movwf	??___flmul^0,c
  7999  002230  5019               	movf	(___flmul@temp+1)^0,w,c
  8000  002232  6E0A               	movwf	(??___flmul+1)^0,c
  8001  002234  6A0B               	clrf	(??___flmul+2)^0,c
  8002  002236  6A0C               	clrf	(??___flmul+3)^0,c
  8003  002238  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  8004  00223C  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  8005  002240  C009  F00A         	movff	??___flmul,??___flmul+1
  8006  002244  6A09               	clrf	??___flmul^0,c
  8007  002246  5009               	movf	??___flmul^0,w,c
  8008  002248  2614               	addwf	___flmul@prod^0,f,c
  8009  00224A  500A               	movf	(??___flmul+1)^0,w,c
  8010  00224C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8011  00224E  500B               	movf	(??___flmul+2)^0,w,c
  8012  002250  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8013  002252  500C               	movf	(??___flmul+3)^0,w,c
  8014  002254  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8015  002256  C00E  F009         	movff	___flmul@grs,??___flmul
  8016  00225A  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  8017  00225E  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  8018  002262  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  8019  002266  0E19               	movlw	25
  8020  002268  EF3B  F011         	goto	u3630
  8021  00226C                     u3635:
  8022  00226C  90D8               	bcf	status,0,c
  8023  00226E  320C               	rrcf	(??___flmul+3)^0,f,c
  8024  002270  320B               	rrcf	(??___flmul+2)^0,f,c
  8025  002272  320A               	rrcf	(??___flmul+1)^0,f,c
  8026  002274  3209               	rrcf	??___flmul^0,f,c
  8027  002276                     u3630:
  8028  002276  2EE8               	decfsz	wreg,f,c
  8029  002278  EF36  F011         	goto	u3635
  8030  00227C  5009               	movf	??___flmul^0,w,c
  8031  00227E  2614               	addwf	___flmul@prod^0,f,c
  8032  002280  500A               	movf	(??___flmul+1)^0,w,c
  8033  002282  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8034  002284  500B               	movf	(??___flmul+2)^0,w,c
  8035  002286  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8036  002288  500C               	movf	(??___flmul+3)^0,w,c
  8037  00228A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8038  00228C  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  8039  002290  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  8040  002294  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  8041  002298  6A0E               	clrf	___flmul@grs^0,c
  8042  00229A  5012               	movf	___flmul@aexp^0,w,c
  8043  00229C  C013  F009         	movff	___flmul@bexp,??___flmul
  8044  0022A0  6A0A               	clrf	(??___flmul+1)^0,c
  8045  0022A2  2609               	addwf	??___flmul^0,f,c
  8046  0022A4  0E00               	movlw	0
  8047  0022A6  220A               	addwfc	(??___flmul+1)^0,f,c
  8048  0022A8  0E82               	movlw	130
  8049  0022AA  2409               	addwf	??___flmul^0,w,c
  8050  0022AC  6E18               	movwf	___flmul@temp^0,c
  8051  0022AE  0EFF               	movlw	255
  8052  0022B0  200A               	addwfc	(??___flmul+1)^0,w,c
  8053  0022B2  6E19               	movwf	(___flmul@temp+1)^0,c
  8054  0022B4  EF71  F011         	goto	l3485
  8055  0022B8                     l3479:
  8056  0022B8  90D8               	bcf	status,0,c
  8057  0022BA  3614               	rlcf	___flmul@prod^0,f,c
  8058  0022BC  3615               	rlcf	(___flmul@prod+1)^0,f,c
  8059  0022BE  3616               	rlcf	(___flmul@prod+2)^0,f,c
  8060  0022C0  3617               	rlcf	(___flmul@prod+3)^0,f,c
  8061  0022C2  AE11               	btfss	(___flmul@grs+3)^0,7,c
  8062  0022C4  EF66  F011         	goto	u3641
  8063  0022C8  EF68  F011         	goto	u3640
  8064  0022CC                     u3641:
  8065  0022CC  EF69  F011         	goto	l826
  8066  0022D0                     u3640:
  8067  0022D0  8014               	bsf	___flmul@prod^0,0,c
  8068  0022D2                     l826:
  8069  0022D2  90D8               	bcf	status,0,c
  8070  0022D4  360E               	rlcf	___flmul@grs^0,f,c
  8071  0022D6  360F               	rlcf	(___flmul@grs+1)^0,f,c
  8072  0022D8  3610               	rlcf	(___flmul@grs+2)^0,f,c
  8073  0022DA  3611               	rlcf	(___flmul@grs+3)^0,f,c
  8074  0022DC  0618               	decf	___flmul@temp^0,f,c
  8075  0022DE  A0D8               	btfss	status,0,c
  8076  0022E0  0619               	decf	(___flmul@temp+1)^0,f,c
  8077  0022E2                     l3485:
  8078  0022E2  AE16               	btfss	(___flmul@prod+2)^0,7,c
  8079  0022E4  EF76  F011         	goto	u3651
  8080  0022E8  EF78  F011         	goto	u3650
  8081  0022EC                     u3651:
  8082  0022EC  EF5C  F011         	goto	l3479
  8083  0022F0                     u3650:
  8084  0022F0  0E00               	movlw	0
  8085  0022F2  6E12               	movwf	___flmul@aexp^0,c
  8086  0022F4  AE11               	btfss	(___flmul@grs+3)^0,7,c
  8087  0022F6  EF7F  F011         	goto	u3661
  8088  0022FA  EF81  F011         	goto	u3660
  8089  0022FE                     u3661:
  8090  0022FE  EFA5  F011         	goto	l828
  8091  002302                     u3660:
  8092  002302  0EFF               	movlw	255
  8093  002304  140E               	andwf	___flmul@grs^0,w,c
  8094  002306  6E09               	movwf	??___flmul^0,c
  8095  002308  0EFF               	movlw	255
  8096  00230A  140F               	andwf	(___flmul@grs+1)^0,w,c
  8097  00230C  6E0A               	movwf	(??___flmul+1)^0,c
  8098  00230E  0EFF               	movlw	255
  8099  002310  1410               	andwf	(___flmul@grs+2)^0,w,c
  8100  002312  6E0B               	movwf	(??___flmul+2)^0,c
  8101  002314  0E7F               	movlw	127
  8102  002316  1411               	andwf	(___flmul@grs+3)^0,w,c
  8103  002318  6E0C               	movwf	(??___flmul+3)^0,c
  8104  00231A  5009               	movf	??___flmul^0,w,c
  8105  00231C  100A               	iorwf	(??___flmul+1)^0,w,c
  8106  00231E  100B               	iorwf	(??___flmul+2)^0,w,c
  8107  002320  100C               	iorwf	(??___flmul+3)^0,w,c
  8108  002322  B4D8               	btfsc	status,2,c
  8109  002324  EF96  F011         	goto	u3671
  8110  002328  EF98  F011         	goto	u3670
  8111  00232C                     u3671:
  8112  00232C  EF9C  F011         	goto	l829
  8113  002330                     u3670:
  8114  002330                     l3493:
  8115  002330  0E01               	movlw	1
  8116  002332  6E12               	movwf	___flmul@aexp^0,c
  8117  002334  EFA5  F011         	goto	l828
  8118  002338                     l829:
  8119  002338  A014               	btfss	___flmul@prod^0,0,c
  8120  00233A  EFA1  F011         	goto	u3681
  8121  00233E  EFA3  F011         	goto	u3680
  8122  002342                     u3681:
  8123  002342  EFA5  F011         	goto	l828
  8124  002346                     u3680:
  8125  002346  EF98  F011         	goto	l3493
  8126  00234A                     l828:
  8127  00234A  5012               	movf	___flmul@aexp^0,w,c
  8128  00234C  B4D8               	btfsc	status,2,c
  8129  00234E  EFAB  F011         	goto	u3691
  8130  002352  EFAD  F011         	goto	u3690
  8131  002356                     u3691:
  8132  002356  EFD1  F011         	goto	l3505
  8133  00235A                     u3690:
  8134  00235A  0E01               	movlw	1
  8135  00235C  2614               	addwf	___flmul@prod^0,f,c
  8136  00235E  0E00               	movlw	0
  8137  002360  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8138  002362  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8139  002364  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8140  002366  A017               	btfss	(___flmul@prod+3)^0,0,c
  8141  002368  EFB8  F011         	goto	u3701
  8142  00236C  EFBA  F011         	goto	u3700
  8143  002370                     u3701:
  8144  002370  EFD1  F011         	goto	l3505
  8145  002374                     u3700:
  8146  002374  C014  F009         	movff	___flmul@prod,??___flmul
  8147  002378  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  8148  00237C  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  8149  002380  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  8150  002384  340C               	rlcf	(??___flmul+3)^0,w,c
  8151  002386  320C               	rrcf	(??___flmul+3)^0,f,c
  8152  002388  320B               	rrcf	(??___flmul+2)^0,f,c
  8153  00238A  320A               	rrcf	(??___flmul+1)^0,f,c
  8154  00238C  3209               	rrcf	??___flmul^0,f,c
  8155  00238E  C009  F014         	movff	??___flmul,___flmul@prod
  8156  002392  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  8157  002396  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  8158  00239A  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  8159  00239E  4A18               	infsnz	___flmul@temp^0,f,c
  8160  0023A0  2A19               	incf	(___flmul@temp+1)^0,f,c
  8161  0023A2                     l3505:
  8162  0023A2  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  8163  0023A4  EFDC  F011         	goto	u3711
  8164  0023A8  5019               	movf	(___flmul@temp+1)^0,w,c
  8165  0023AA  E108               	bnz	u3710
  8166  0023AC  2818               	incf	___flmul@temp^0,w,c
  8167  0023AE  A0D8               	btfss	status,0,c
  8168  0023B0  EFDC  F011         	goto	u3711
  8169  0023B4  EFDE  F011         	goto	u3710
  8170  0023B8                     u3711:
  8171  0023B8  EFE8  F011         	goto	l3509
  8172  0023BC                     u3710:
  8173  0023BC  0E00               	movlw	0
  8174  0023BE  6E14               	movwf	___flmul@prod^0,c
  8175  0023C0  0E00               	movlw	0
  8176  0023C2  6E15               	movwf	(___flmul@prod+1)^0,c
  8177  0023C4  0E80               	movlw	128
  8178  0023C6  6E16               	movwf	(___flmul@prod+2)^0,c
  8179  0023C8  0E7F               	movlw	127
  8180  0023CA  6E17               	movwf	(___flmul@prod+3)^0,c
  8181  0023CC  EF16  F012         	goto	l3521
  8182  0023D0                     l3509:
  8183  0023D0  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  8184  0023D2  EFF5  F011         	goto	u3720
  8185  0023D6  5019               	movf	(___flmul@temp+1)^0,w,c
  8186  0023D8  E106               	bnz	u3721
  8187  0023DA  0418               	decf	___flmul@temp^0,w,c
  8188  0023DC  B0D8               	btfsc	status,0,c
  8189  0023DE  EFF3  F011         	goto	u3721
  8190  0023E2  EFF5  F011         	goto	u3720
  8191  0023E6                     u3721:
  8192  0023E6  EF01  F012         	goto	l836
  8193  0023EA                     u3720:
  8194  0023EA  0E00               	movlw	0
  8195  0023EC  6E14               	movwf	___flmul@prod^0,c
  8196  0023EE  0E00               	movlw	0
  8197  0023F0  6E15               	movwf	(___flmul@prod+1)^0,c
  8198  0023F2  0E00               	movlw	0
  8199  0023F4  6E16               	movwf	(___flmul@prod+2)^0,c
  8200  0023F6  0E00               	movlw	0
  8201  0023F8  6E17               	movwf	(___flmul@prod+3)^0,c
  8202  0023FA  0E00               	movlw	0
  8203  0023FC  6E0D               	movwf	___flmul@sign^0,c
  8204  0023FE  EF16  F012         	goto	l3521
  8205  002402                     l836:
  8206  002402  C018  F013         	movff	___flmul@temp,___flmul@bexp
  8207  002406  0EFF               	movlw	255
  8208  002408  1614               	andwf	___flmul@prod^0,f,c
  8209  00240A  0EFF               	movlw	255
  8210  00240C  1615               	andwf	(___flmul@prod+1)^0,f,c
  8211  00240E  0E7F               	movlw	127
  8212  002410  1616               	andwf	(___flmul@prod+2)^0,f,c
  8213  002412  0E00               	movlw	0
  8214  002414  1617               	andwf	(___flmul@prod+3)^0,f,c
  8215  002416  A013               	btfss	___flmul@bexp^0,0,c
  8216  002418  EF10  F012         	goto	u3731
  8217  00241C  EF12  F012         	goto	u3730
  8218  002420                     u3731:
  8219  002420  EF13  F012         	goto	l3519
  8220  002424                     u3730:
  8221  002424  8E16               	bsf	(___flmul@prod+2)^0,7,c
  8222  002426                     l3519:
  8223  002426  90D8               	bcf	status,0,c
  8224  002428  3013               	rrcf	___flmul@bexp^0,w,c
  8225  00242A  6E17               	movwf	(___flmul@prod+3)^0,c
  8226  00242C                     l3521:
  8227  00242C  500D               	movf	___flmul@sign^0,w,c
  8228  00242E  1217               	iorwf	(___flmul@prod+3)^0,f,c
  8229  002430  C014  F001         	movff	___flmul@prod,?___flmul
  8230  002434  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  8231  002438  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  8232  00243C  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  8233  002440                     l823:
  8234  002440  0012               	return		;funcret
  8235  002442                     __end_of___flmul:
  8236                           	callstack 0
  8237                           
  8238 ;; *************** function ___flge *****************
  8239 ;; Defined at:
  8240 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\flge.c"
  8241 ;; Parameters:    Size  Location     Type
  8242 ;;  ff1             4   30[COMRAM] unsigned char 
  8243 ;;  ff2             4   34[COMRAM] unsigned char 
  8244 ;; Auto vars:     Size  Location     Type
  8245 ;;		None
  8246 ;; Return value:  Size  Location     Type
  8247 ;;		None               void
  8248 ;; Registers used:
  8249 ;;		wreg, status,2, status,0
  8250 ;; Tracked objects:
  8251 ;;		On entry : 0/0
  8252 ;;		On exit  : 0/0
  8253 ;;		Unchanged: 0/0
  8254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8255 ;;      Params:         8       0       0       0       0       0       0
  8256 ;;      Locals:         0       0       0       0       0       0       0
  8257 ;;      Temps:          4       0       0       0       0       0       0
  8258 ;;      Totals:        12       0       0       0       0       0       0
  8259 ;;Total ram usage:       12 bytes
  8260 ;; Hardware stack levels used:    1
  8261 ;; This function calls:
  8262 ;;		Nothing
  8263 ;; This function is called by:
  8264 ;;		_encher_tanque
  8265 ;;		_efgtoa
  8266 ;; This function uses a non-reentrant model
  8267 ;;
  8268                           
  8269                           	psect	text26
  8270  003400                     __ptext26:
  8271                           	callstack 0
  8272  003400                     ___flge:
  8273                           	callstack 25
  8274  003400  0E00               	movlw	0
  8275  003402  141F               	andwf	___flge@ff1^0,w,c
  8276  003404  6E27               	movwf	??___flge^0,c
  8277  003406  0E00               	movlw	0
  8278  003408  1420               	andwf	(___flge@ff1+1)^0,w,c
  8279  00340A  6E28               	movwf	(??___flge+1)^0,c
  8280  00340C  0E80               	movlw	128
  8281  00340E  1421               	andwf	(___flge@ff1+2)^0,w,c
  8282  003410  6E29               	movwf	(??___flge+2)^0,c
  8283  003412  0E7F               	movlw	127
  8284  003414  1422               	andwf	(___flge@ff1+3)^0,w,c
  8285  003416  6E2A               	movwf	(??___flge+3)^0,c
  8286  003418  5027               	movf	??___flge^0,w,c
  8287  00341A  1028               	iorwf	(??___flge+1)^0,w,c
  8288  00341C  1029               	iorwf	(??___flge+2)^0,w,c
  8289  00341E  102A               	iorwf	(??___flge+3)^0,w,c
  8290  003420  A4D8               	btfss	status,2,c
  8291  003422  EF15  F01A         	goto	u3891
  8292  003426  EF17  F01A         	goto	u3890
  8293  00342A                     u3891:
  8294  00342A  EF1F  F01A         	goto	l3633
  8295  00342E                     u3890:
  8296  00342E  0E00               	movlw	0
  8297  003430  6E1F               	movwf	___flge@ff1^0,c
  8298  003432  0E00               	movlw	0
  8299  003434  6E20               	movwf	(___flge@ff1+1)^0,c
  8300  003436  0E00               	movlw	0
  8301  003438  6E21               	movwf	(___flge@ff1+2)^0,c
  8302  00343A  0E00               	movlw	0
  8303  00343C  6E22               	movwf	(___flge@ff1+3)^0,c
  8304  00343E                     l3633:
  8305  00343E  0E00               	movlw	0
  8306  003440  1423               	andwf	___flge@ff2^0,w,c
  8307  003442  6E27               	movwf	??___flge^0,c
  8308  003444  0E00               	movlw	0
  8309  003446  1424               	andwf	(___flge@ff2+1)^0,w,c
  8310  003448  6E28               	movwf	(??___flge+1)^0,c
  8311  00344A  0E80               	movlw	128
  8312  00344C  1425               	andwf	(___flge@ff2+2)^0,w,c
  8313  00344E  6E29               	movwf	(??___flge+2)^0,c
  8314  003450  0E7F               	movlw	127
  8315  003452  1426               	andwf	(___flge@ff2+3)^0,w,c
  8316  003454  6E2A               	movwf	(??___flge+3)^0,c
  8317  003456  5027               	movf	??___flge^0,w,c
  8318  003458  1028               	iorwf	(??___flge+1)^0,w,c
  8319  00345A  1029               	iorwf	(??___flge+2)^0,w,c
  8320  00345C  102A               	iorwf	(??___flge+3)^0,w,c
  8321  00345E  A4D8               	btfss	status,2,c
  8322  003460  EF34  F01A         	goto	u3901
  8323  003464  EF36  F01A         	goto	u3900
  8324  003468                     u3901:
  8325  003468  EF3E  F01A         	goto	l3637
  8326  00346C                     u3900:
  8327  00346C  0E00               	movlw	0
  8328  00346E  6E23               	movwf	___flge@ff2^0,c
  8329  003470  0E00               	movlw	0
  8330  003472  6E24               	movwf	(___flge@ff2+1)^0,c
  8331  003474  0E00               	movlw	0
  8332  003476  6E25               	movwf	(___flge@ff2+2)^0,c
  8333  003478  0E00               	movlw	0
  8334  00347A  6E26               	movwf	(___flge@ff2+3)^0,c
  8335  00347C                     l3637:
  8336  00347C  AE22               	btfss	(___flge@ff1+3)^0,7,c
  8337  00347E  EF43  F01A         	goto	u3911
  8338  003482  EF45  F01A         	goto	u3910
  8339  003486                     u3911:
  8340  003486  EF4E  F01A         	goto	l3641
  8341  00348A                     u3910:
  8342  00348A  6C1F               	negf	___flge@ff1^0,c
  8343  00348C  1E20               	comf	(___flge@ff1+1)^0,f,c
  8344  00348E  B0D8               	btfsc	status,0,c
  8345  003490  2A20               	incf	(___flge@ff1+1)^0,f,c
  8346  003492  1E21               	comf	(___flge@ff1+2)^0,f,c
  8347  003494  B0D8               	btfsc	status,0,c
  8348  003496  2A21               	incf	(___flge@ff1+2)^0,f,c
  8349  003498  0E80               	movlw	128
  8350  00349A  5622               	subfwb	(___flge@ff1+3)^0,f,c
  8351  00349C                     l3641:
  8352  00349C  AE26               	btfss	(___flge@ff2+3)^0,7,c
  8353  00349E  EF53  F01A         	goto	u3921
  8354  0034A2  EF55  F01A         	goto	u3920
  8355  0034A6                     u3921:
  8356  0034A6  EF5E  F01A         	goto	l470
  8357  0034AA                     u3920:
  8358  0034AA  6C23               	negf	___flge@ff2^0,c
  8359  0034AC  1E24               	comf	(___flge@ff2+1)^0,f,c
  8360  0034AE  B0D8               	btfsc	status,0,c
  8361  0034B0  2A24               	incf	(___flge@ff2+1)^0,f,c
  8362  0034B2  1E25               	comf	(___flge@ff2+2)^0,f,c
  8363  0034B4  B0D8               	btfsc	status,0,c
  8364  0034B6  2A25               	incf	(___flge@ff2+2)^0,f,c
  8365  0034B8  0E80               	movlw	128
  8366  0034BA  5626               	subfwb	(___flge@ff2+3)^0,f,c
  8367  0034BC                     l470:
  8368  0034BC  0E00               	movlw	0
  8369  0034BE  1A1F               	xorwf	___flge@ff1^0,f,c
  8370  0034C0  0E00               	movlw	0
  8371  0034C2  1A20               	xorwf	(___flge@ff1+1)^0,f,c
  8372  0034C4  0E00               	movlw	0
  8373  0034C6  1A21               	xorwf	(___flge@ff1+2)^0,f,c
  8374  0034C8  0E80               	movlw	128
  8375  0034CA  1A22               	xorwf	(___flge@ff1+3)^0,f,c
  8376  0034CC  0E00               	movlw	0
  8377  0034CE  1A23               	xorwf	___flge@ff2^0,f,c
  8378  0034D0  0E00               	movlw	0
  8379  0034D2  1A24               	xorwf	(___flge@ff2+1)^0,f,c
  8380  0034D4  0E00               	movlw	0
  8381  0034D6  1A25               	xorwf	(___flge@ff2+2)^0,f,c
  8382  0034D8  0E80               	movlw	128
  8383  0034DA  1A26               	xorwf	(___flge@ff2+3)^0,f,c
  8384  0034DC  5023               	movf	___flge@ff2^0,w,c
  8385  0034DE  5C1F               	subwf	___flge@ff1^0,w,c
  8386  0034E0  5024               	movf	(___flge@ff2+1)^0,w,c
  8387  0034E2  5820               	subwfb	(___flge@ff1+1)^0,w,c
  8388  0034E4  5025               	movf	(___flge@ff2+2)^0,w,c
  8389  0034E6  5821               	subwfb	(___flge@ff1+2)^0,w,c
  8390  0034E8  5026               	movf	(___flge@ff2+3)^0,w,c
  8391  0034EA  5822               	subwfb	(___flge@ff1+3)^0,w,c
  8392  0034EC  B0D8               	btfsc	status,0,c
  8393  0034EE  EF7B  F01A         	goto	u3931
  8394  0034F2  EF7D  F01A         	goto	u3930
  8395  0034F6                     u3931:
  8396  0034F6  EF80  F01A         	goto	l3647
  8397  0034FA                     u3930:
  8398  0034FA  90D8               	bcf	status,0,c
  8399  0034FC  EF81  F01A         	goto	l475
  8400  003500                     l3647:
  8401  003500  80D8               	bsf	status,0,c
  8402  003502                     l475:
  8403  003502  0012               	return		;funcret
  8404  003504                     __end_of___flge:
  8405                           	callstack 0
  8406                           
  8407 ;; *************** function ___fleq *****************
  8408 ;; Defined at:
  8409 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\fleq.c"
  8410 ;; Parameters:    Size  Location     Type
  8411 ;;  ff1             4    0[COMRAM] unsigned char 
  8412 ;;  ff2             4    4[COMRAM] unsigned char 
  8413 ;; Auto vars:     Size  Location     Type
  8414 ;;		None
  8415 ;; Return value:  Size  Location     Type
  8416 ;;		None               void
  8417 ;; Registers used:
  8418 ;;		wreg, status,2, status,0
  8419 ;; Tracked objects:
  8420 ;;		On entry : 0/0
  8421 ;;		On exit  : 0/0
  8422 ;;		Unchanged: 0/0
  8423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8424 ;;      Params:         8       0       0       0       0       0       0
  8425 ;;      Locals:         0       0       0       0       0       0       0
  8426 ;;      Temps:          4       0       0       0       0       0       0
  8427 ;;      Totals:        12       0       0       0       0       0       0
  8428 ;;Total ram usage:       12 bytes
  8429 ;; Hardware stack levels used:    1
  8430 ;; This function calls:
  8431 ;;		Nothing
  8432 ;; This function is called by:
  8433 ;;		_efgtoa
  8434 ;; This function uses a non-reentrant model
  8435 ;;
  8436                           
  8437                           	psect	text27
  8438  003A94                     __ptext27:
  8439                           	callstack 0
  8440  003A94                     ___fleq:
  8441                           	callstack 25
  8442  003A94  0E00               	movlw	0
  8443  003A96  1401               	andwf	___fleq@ff1^0,w,c
  8444  003A98  6E09               	movwf	??___fleq^0,c
  8445  003A9A  0E00               	movlw	0
  8446  003A9C  1402               	andwf	(___fleq@ff1+1)^0,w,c
  8447  003A9E  6E0A               	movwf	(??___fleq+1)^0,c
  8448  003AA0  0E80               	movlw	128
  8449  003AA2  1403               	andwf	(___fleq@ff1+2)^0,w,c
  8450  003AA4  6E0B               	movwf	(??___fleq+2)^0,c
  8451  003AA6  0E7F               	movlw	127
  8452  003AA8  1404               	andwf	(___fleq@ff1+3)^0,w,c
  8453  003AAA  6E0C               	movwf	(??___fleq+3)^0,c
  8454  003AAC  5009               	movf	??___fleq^0,w,c
  8455  003AAE  100A               	iorwf	(??___fleq+1)^0,w,c
  8456  003AB0  100B               	iorwf	(??___fleq+2)^0,w,c
  8457  003AB2  100C               	iorwf	(??___fleq+3)^0,w,c
  8458  003AB4  A4D8               	btfss	status,2,c
  8459  003AB6  EF5F  F01D         	goto	u3861
  8460  003ABA  EF61  F01D         	goto	u3860
  8461  003ABE                     u3861:
  8462  003ABE  EF69  F01D         	goto	l3617
  8463  003AC2                     u3860:
  8464  003AC2  0E00               	movlw	0
  8465  003AC4  6E01               	movwf	___fleq@ff1^0,c
  8466  003AC6  0E00               	movlw	0
  8467  003AC8  6E02               	movwf	(___fleq@ff1+1)^0,c
  8468  003ACA  0E00               	movlw	0
  8469  003ACC  6E03               	movwf	(___fleq@ff1+2)^0,c
  8470  003ACE  0E00               	movlw	0
  8471  003AD0  6E04               	movwf	(___fleq@ff1+3)^0,c
  8472  003AD2                     l3617:
  8473  003AD2  0E00               	movlw	0
  8474  003AD4  1405               	andwf	___fleq@ff2^0,w,c
  8475  003AD6  6E09               	movwf	??___fleq^0,c
  8476  003AD8  0E00               	movlw	0
  8477  003ADA  1406               	andwf	(___fleq@ff2+1)^0,w,c
  8478  003ADC  6E0A               	movwf	(??___fleq+1)^0,c
  8479  003ADE  0E80               	movlw	128
  8480  003AE0  1407               	andwf	(___fleq@ff2+2)^0,w,c
  8481  003AE2  6E0B               	movwf	(??___fleq+2)^0,c
  8482  003AE4  0E7F               	movlw	127
  8483  003AE6  1408               	andwf	(___fleq@ff2+3)^0,w,c
  8484  003AE8  6E0C               	movwf	(??___fleq+3)^0,c
  8485  003AEA  5009               	movf	??___fleq^0,w,c
  8486  003AEC  100A               	iorwf	(??___fleq+1)^0,w,c
  8487  003AEE  100B               	iorwf	(??___fleq+2)^0,w,c
  8488  003AF0  100C               	iorwf	(??___fleq+3)^0,w,c
  8489  003AF2  A4D8               	btfss	status,2,c
  8490  003AF4  EF7E  F01D         	goto	u3871
  8491  003AF8  EF80  F01D         	goto	u3870
  8492  003AFC                     u3871:
  8493  003AFC  EF88  F01D         	goto	l3621
  8494  003B00                     u3870:
  8495  003B00  0E00               	movlw	0
  8496  003B02  6E05               	movwf	___fleq@ff2^0,c
  8497  003B04  0E00               	movlw	0
  8498  003B06  6E06               	movwf	(___fleq@ff2+1)^0,c
  8499  003B08  0E00               	movlw	0
  8500  003B0A  6E07               	movwf	(___fleq@ff2+2)^0,c
  8501  003B0C  0E00               	movlw	0
  8502  003B0E  6E08               	movwf	(___fleq@ff2+3)^0,c
  8503  003B10                     l3621:
  8504  003B10  5005               	movf	___fleq@ff2^0,w,c
  8505  003B12  1801               	xorwf	___fleq@ff1^0,w,c
  8506  003B14  E10F               	bnz	u3880
  8507  003B16  5006               	movf	(___fleq@ff2+1)^0,w,c
  8508  003B18  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  8509  003B1A  E10C               	bnz	u3880
  8510  003B1C  5007               	movf	(___fleq@ff2+2)^0,w,c
  8511  003B1E  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  8512  003B20  E109               	bnz	u3880
  8513  003B22  5008               	movf	(___fleq@ff2+3)^0,w,c
  8514  003B24  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  8515  003B26  B4D8               	btfsc	status,2,c
  8516  003B28  EF98  F01D         	goto	u3881
  8517  003B2C  EF9A  F01D         	goto	u3880
  8518  003B30                     u3881:
  8519  003B30  EF9D  F01D         	goto	l3625
  8520  003B34                     u3880:
  8521  003B34  90D8               	bcf	status,0,c
  8522  003B36  EF9E  F01D         	goto	l464
  8523  003B3A                     l3625:
  8524  003B3A  80D8               	bsf	status,0,c
  8525  003B3C                     l464:
  8526  003B3C  0012               	return		;funcret
  8527  003B3E                     __end_of___fleq:
  8528                           	callstack 0
  8529                           
  8530 ;; *************** function ___fldiv *****************
  8531 ;; Defined at:
  8532 ;;		line 11 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
  8533 ;; Parameters:    Size  Location     Type
  8534 ;;  b               4    0[COMRAM] unsigned char 
  8535 ;;  a               4    4[COMRAM] unsigned char 
  8536 ;; Auto vars:     Size  Location     Type
  8537 ;;  grs             4   19[COMRAM] unsigned long 
  8538 ;;  rem             4   12[COMRAM] unsigned long 
  8539 ;;  new_exp         2   17[COMRAM] short 
  8540 ;;  aexp            1   24[COMRAM] unsigned char 
  8541 ;;  bexp            1   23[COMRAM] unsigned char 
  8542 ;;  sign            1   16[COMRAM] unsigned char 
  8543 ;; Return value:  Size  Location     Type
  8544 ;;                  4    0[COMRAM] unsigned char 
  8545 ;; Registers used:
  8546 ;;		wreg, status,2, status,0
  8547 ;; Tracked objects:
  8548 ;;		On entry : 0/0
  8549 ;;		On exit  : 0/0
  8550 ;;		Unchanged: 0/0
  8551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8552 ;;      Params:         8       0       0       0       0       0       0
  8553 ;;      Locals:        13       0       0       0       0       0       0
  8554 ;;      Temps:          4       0       0       0       0       0       0
  8555 ;;      Totals:        25       0       0       0       0       0       0
  8556 ;;Total ram usage:       25 bytes
  8557 ;; Hardware stack levels used:    1
  8558 ;; This function calls:
  8559 ;;		Nothing
  8560 ;; This function is called by:
  8561 ;;		_esvaziar_tanque
  8562 ;;		_efgtoa
  8563 ;; This function uses a non-reentrant model
  8564 ;;
  8565                           
  8566                           	psect	text28
  8567  002442                     __ptext28:
  8568                           	callstack 0
  8569  002442                     ___fldiv:
  8570                           	callstack 25
  8571  002442  5004               	movf	(___fldiv@b+3)^0,w,c
  8572  002444  0B80               	andlw	128
  8573  002446  6E11               	movwf	___fldiv@sign^0,c
  8574  002448  5004               	movf	(___fldiv@b+3)^0,w,c
  8575  00244A  2404               	addwf	(___fldiv@b+3)^0,w,c
  8576  00244C  6E18               	movwf	___fldiv@bexp^0,c
  8577  00244E  AE03               	btfss	(___fldiv@b+2)^0,7,c
  8578  002450  EF2C  F012         	goto	u3321
  8579  002454  EF2E  F012         	goto	u3320
  8580  002458                     u3321:
  8581  002458  EF2F  F012         	goto	l3265
  8582  00245C                     u3320:
  8583  00245C  8018               	bsf	___fldiv@bexp^0,0,c
  8584  00245E                     l3265:
  8585  00245E  5018               	movf	___fldiv@bexp^0,w,c
  8586  002460  B4D8               	btfsc	status,2,c
  8587  002462  EF35  F012         	goto	u3331
  8588  002466  EF37  F012         	goto	u3330
  8589  00246A                     u3331:
  8590  00246A  EF4C  F012         	goto	l3275
  8591  00246E                     u3330:
  8592  00246E  2818               	incf	___fldiv@bexp^0,w,c
  8593  002470  A4D8               	btfss	status,2,c
  8594  002472  EF3D  F012         	goto	u3341
  8595  002476  EF3F  F012         	goto	u3340
  8596  00247A                     u3341:
  8597  00247A  EF47  F012         	goto	l3271
  8598  00247E                     u3340:
  8599  00247E  0E00               	movlw	0
  8600  002480  6E01               	movwf	___fldiv@b^0,c
  8601  002482  0E00               	movlw	0
  8602  002484  6E02               	movwf	(___fldiv@b+1)^0,c
  8603  002486  0E00               	movlw	0
  8604  002488  6E03               	movwf	(___fldiv@b+2)^0,c
  8605  00248A  0E00               	movlw	0
  8606  00248C  6E04               	movwf	(___fldiv@b+3)^0,c
  8607  00248E                     l3271:
  8608  00248E  8E03               	bsf	(___fldiv@b+2)^0,7,c
  8609  002490  0E00               	movlw	0
  8610  002492  6E04               	movwf	(___fldiv@b+3)^0,c
  8611  002494  EF54  F012         	goto	l3277
  8612  002498                     l3275:
  8613  002498  0E00               	movlw	0
  8614  00249A  6E01               	movwf	___fldiv@b^0,c
  8615  00249C  0E00               	movlw	0
  8616  00249E  6E02               	movwf	(___fldiv@b+1)^0,c
  8617  0024A0  0E00               	movlw	0
  8618  0024A2  6E03               	movwf	(___fldiv@b+2)^0,c
  8619  0024A4  0E00               	movlw	0
  8620  0024A6  6E04               	movwf	(___fldiv@b+3)^0,c
  8621  0024A8                     l3277:
  8622  0024A8  5008               	movf	(___fldiv@a+3)^0,w,c
  8623  0024AA  0B80               	andlw	128
  8624  0024AC  1A11               	xorwf	___fldiv@sign^0,f,c
  8625  0024AE  5008               	movf	(___fldiv@a+3)^0,w,c
  8626  0024B0  2408               	addwf	(___fldiv@a+3)^0,w,c
  8627  0024B2  6E19               	movwf	___fldiv@aexp^0,c
  8628  0024B4  AE07               	btfss	(___fldiv@a+2)^0,7,c
  8629  0024B6  EF5F  F012         	goto	u3351
  8630  0024BA  EF61  F012         	goto	u3350
  8631  0024BE                     u3351:
  8632  0024BE  EF62  F012         	goto	l3285
  8633  0024C2                     u3350:
  8634  0024C2  8019               	bsf	___fldiv@aexp^0,0,c
  8635  0024C4                     l3285:
  8636  0024C4  5019               	movf	___fldiv@aexp^0,w,c
  8637  0024C6  B4D8               	btfsc	status,2,c
  8638  0024C8  EF68  F012         	goto	u3361
  8639  0024CC  EF6A  F012         	goto	u3360
  8640  0024D0                     u3361:
  8641  0024D0  EF7F  F012         	goto	l3295
  8642  0024D4                     u3360:
  8643  0024D4  2819               	incf	___fldiv@aexp^0,w,c
  8644  0024D6  A4D8               	btfss	status,2,c
  8645  0024D8  EF70  F012         	goto	u3371
  8646  0024DC  EF72  F012         	goto	u3370
  8647  0024E0                     u3371:
  8648  0024E0  EF7A  F012         	goto	l3291
  8649  0024E4                     u3370:
  8650  0024E4  0E00               	movlw	0
  8651  0024E6  6E05               	movwf	___fldiv@a^0,c
  8652  0024E8  0E00               	movlw	0
  8653  0024EA  6E06               	movwf	(___fldiv@a+1)^0,c
  8654  0024EC  0E00               	movlw	0
  8655  0024EE  6E07               	movwf	(___fldiv@a+2)^0,c
  8656  0024F0  0E00               	movlw	0
  8657  0024F2  6E08               	movwf	(___fldiv@a+3)^0,c
  8658  0024F4                     l3291:
  8659  0024F4  8E07               	bsf	(___fldiv@a+2)^0,7,c
  8660  0024F6  0E00               	movlw	0
  8661  0024F8  6E08               	movwf	(___fldiv@a+3)^0,c
  8662  0024FA  EF87  F012         	goto	l3297
  8663  0024FE                     l3295:
  8664  0024FE  0E00               	movlw	0
  8665  002500  6E05               	movwf	___fldiv@a^0,c
  8666  002502  0E00               	movlw	0
  8667  002504  6E06               	movwf	(___fldiv@a+1)^0,c
  8668  002506  0E00               	movlw	0
  8669  002508  6E07               	movwf	(___fldiv@a+2)^0,c
  8670  00250A  0E00               	movlw	0
  8671  00250C  6E08               	movwf	(___fldiv@a+3)^0,c
  8672  00250E                     l3297:
  8673  00250E  5005               	movf	___fldiv@a^0,w,c
  8674  002510  1006               	iorwf	(___fldiv@a+1)^0,w,c
  8675  002512  1007               	iorwf	(___fldiv@a+2)^0,w,c
  8676  002514  1008               	iorwf	(___fldiv@a+3)^0,w,c
  8677  002516  A4D8               	btfss	status,2,c
  8678  002518  EF90  F012         	goto	u3381
  8679  00251C  EF92  F012         	goto	u3380
  8680  002520                     u3381:
  8681  002520  EFAA  F012         	goto	l3309
  8682  002524                     u3380:
  8683  002524  0E00               	movlw	0
  8684  002526  6E01               	movwf	___fldiv@b^0,c
  8685  002528  0E00               	movlw	0
  8686  00252A  6E02               	movwf	(___fldiv@b+1)^0,c
  8687  00252C  0E00               	movlw	0
  8688  00252E  6E03               	movwf	(___fldiv@b+2)^0,c
  8689  002530  0E00               	movlw	0
  8690  002532  6E04               	movwf	(___fldiv@b+3)^0,c
  8691  002534  0E80               	movlw	128
  8692  002536  1203               	iorwf	(___fldiv@b+2)^0,f,c
  8693  002538  0E7F               	movlw	127
  8694  00253A  1204               	iorwf	(___fldiv@b+3)^0,f,c
  8695  00253C                     l3303:
  8696  00253C  5011               	movf	___fldiv@sign^0,w,c
  8697  00253E  1204               	iorwf	(___fldiv@b+3)^0,f,c
  8698  002540  C001  F001         	movff	___fldiv@b,?___fldiv
  8699  002544  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  8700  002548  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  8701  00254C  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  8702  002550  EFED  F013         	goto	l787
  8703  002554                     l3309:
  8704  002554  5018               	movf	___fldiv@bexp^0,w,c
  8705  002556  A4D8               	btfss	status,2,c
  8706  002558  EFB0  F012         	goto	u3391
  8707  00255C  EFB2  F012         	goto	u3390
  8708  002560                     u3391:
  8709  002560  EFBC  F012         	goto	l3317
  8710  002564                     u3390:
  8711  002564  0E00               	movlw	0
  8712  002566  6E01               	movwf	?___fldiv^0,c
  8713  002568  0E00               	movlw	0
  8714  00256A  6E02               	movwf	(?___fldiv+1)^0,c
  8715  00256C  0E00               	movlw	0
  8716  00256E  6E03               	movwf	(?___fldiv+2)^0,c
  8717  002570  0E00               	movlw	0
  8718  002572  6E04               	movwf	(?___fldiv+3)^0,c
  8719  002574  EFED  F013         	goto	l787
  8720  002578                     l3317:
  8721  002578  5019               	movf	___fldiv@aexp^0,w,c
  8722  00257A  C018  F009         	movff	___fldiv@bexp,??___fldiv
  8723  00257E  6A0A               	clrf	(??___fldiv+1)^0,c
  8724  002580  5E09               	subwf	??___fldiv^0,f,c
  8725  002582  0E00               	movlw	0
  8726  002584  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  8727  002586  0E7F               	movlw	127
  8728  002588  2409               	addwf	??___fldiv^0,w,c
  8729  00258A  6E12               	movwf	___fldiv@new_exp^0,c
  8730  00258C  0E00               	movlw	0
  8731  00258E  200A               	addwfc	(??___fldiv+1)^0,w,c
  8732  002590  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8733  002592  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  8734  002596  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  8735  00259A  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  8736  00259E  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  8737  0025A2  0E00               	movlw	0
  8738  0025A4  6E01               	movwf	___fldiv@b^0,c
  8739  0025A6  0E00               	movlw	0
  8740  0025A8  6E02               	movwf	(___fldiv@b+1)^0,c
  8741  0025AA  0E00               	movlw	0
  8742  0025AC  6E03               	movwf	(___fldiv@b+2)^0,c
  8743  0025AE  0E00               	movlw	0
  8744  0025B0  6E04               	movwf	(___fldiv@b+3)^0,c
  8745  0025B2  0E00               	movlw	0
  8746  0025B4  6E14               	movwf	___fldiv@grs^0,c
  8747  0025B6  0E00               	movlw	0
  8748  0025B8  6E15               	movwf	(___fldiv@grs+1)^0,c
  8749  0025BA  0E00               	movlw	0
  8750  0025BC  6E16               	movwf	(___fldiv@grs+2)^0,c
  8751  0025BE  0E00               	movlw	0
  8752  0025C0  6E17               	movwf	(___fldiv@grs+3)^0,c
  8753  0025C2  0E00               	movlw	0
  8754  0025C4  6E19               	movwf	___fldiv@aexp^0,c
  8755  0025C6  EF1D  F013         	goto	l789
  8756  0025CA                     l3327:
  8757  0025CA  5019               	movf	___fldiv@aexp^0,w,c
  8758  0025CC  B4D8               	btfsc	status,2,c
  8759  0025CE  EFEB  F012         	goto	u3401
  8760  0025D2  EFED  F012         	goto	u3400
  8761  0025D6                     u3401:
  8762  0025D6  EF04  F013         	goto	l3335
  8763  0025DA                     u3400:
  8764  0025DA  90D8               	bcf	status,0,c
  8765  0025DC  360D               	rlcf	___fldiv@rem^0,f,c
  8766  0025DE  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  8767  0025E0  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  8768  0025E2  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  8769  0025E4  90D8               	bcf	status,0,c
  8770  0025E6  3601               	rlcf	___fldiv@b^0,f,c
  8771  0025E8  3602               	rlcf	(___fldiv@b+1)^0,f,c
  8772  0025EA  3603               	rlcf	(___fldiv@b+2)^0,f,c
  8773  0025EC  3604               	rlcf	(___fldiv@b+3)^0,f,c
  8774  0025EE  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8775  0025F0  EFFC  F012         	goto	u3411
  8776  0025F4  EFFE  F012         	goto	u3410
  8777  0025F8                     u3411:
  8778  0025F8  EFFF  F012         	goto	l792
  8779  0025FC                     u3410:
  8780  0025FC  8001               	bsf	___fldiv@b^0,0,c
  8781  0025FE                     l792:
  8782  0025FE  90D8               	bcf	status,0,c
  8783  002600  3614               	rlcf	___fldiv@grs^0,f,c
  8784  002602  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  8785  002604  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  8786  002606  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  8787  002608                     l3335:
  8788  002608  5005               	movf	___fldiv@a^0,w,c
  8789  00260A  5C0D               	subwf	___fldiv@rem^0,w,c
  8790  00260C  5006               	movf	(___fldiv@a+1)^0,w,c
  8791  00260E  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  8792  002610  5007               	movf	(___fldiv@a+2)^0,w,c
  8793  002612  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  8794  002614  5008               	movf	(___fldiv@a+3)^0,w,c
  8795  002616  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  8796  002618  A0D8               	btfss	status,0,c
  8797  00261A  EF11  F013         	goto	u3421
  8798  00261E  EF13  F013         	goto	u3420
  8799  002622                     u3421:
  8800  002622  EF1C  F013         	goto	l3341
  8801  002626                     u3420:
  8802  002626  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  8803  002628  5005               	movf	___fldiv@a^0,w,c
  8804  00262A  5E0D               	subwf	___fldiv@rem^0,f,c
  8805  00262C  5006               	movf	(___fldiv@a+1)^0,w,c
  8806  00262E  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  8807  002630  5007               	movf	(___fldiv@a+2)^0,w,c
  8808  002632  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  8809  002634  5008               	movf	(___fldiv@a+3)^0,w,c
  8810  002636  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  8811  002638                     l3341:
  8812  002638  2A19               	incf	___fldiv@aexp^0,f,c
  8813  00263A                     l789:
  8814  00263A  0E19               	movlw	25
  8815  00263C  6419               	cpfsgt	___fldiv@aexp^0,c
  8816  00263E  EF23  F013         	goto	u3431
  8817  002642  EF25  F013         	goto	u3430
  8818  002646                     u3431:
  8819  002646  EFE5  F012         	goto	l3327
  8820  00264A                     u3430:
  8821  00264A  500D               	movf	___fldiv@rem^0,w,c
  8822  00264C  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  8823  00264E  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  8824  002650  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  8825  002652  B4D8               	btfsc	status,2,c
  8826  002654  EF2E  F013         	goto	u3441
  8827  002658  EF30  F013         	goto	u3440
  8828  00265C                     u3441:
  8829  00265C  EF48  F013         	goto	l3353
  8830  002660                     u3440:
  8831  002660  8014               	bsf	___fldiv@grs^0,0,c
  8832  002662  EF48  F013         	goto	l3353
  8833  002666                     l3347:
  8834  002666  90D8               	bcf	status,0,c
  8835  002668  3601               	rlcf	___fldiv@b^0,f,c
  8836  00266A  3602               	rlcf	(___fldiv@b+1)^0,f,c
  8837  00266C  3603               	rlcf	(___fldiv@b+2)^0,f,c
  8838  00266E  3604               	rlcf	(___fldiv@b+3)^0,f,c
  8839  002670  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8840  002672  EF3D  F013         	goto	u3451
  8841  002676  EF3F  F013         	goto	u3450
  8842  00267A                     u3451:
  8843  00267A  EF40  F013         	goto	l798
  8844  00267E                     u3450:
  8845  00267E  8001               	bsf	___fldiv@b^0,0,c
  8846  002680                     l798:
  8847  002680  90D8               	bcf	status,0,c
  8848  002682  3614               	rlcf	___fldiv@grs^0,f,c
  8849  002684  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  8850  002686  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  8851  002688  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  8852  00268A  0612               	decf	___fldiv@new_exp^0,f,c
  8853  00268C  A0D8               	btfss	status,0,c
  8854  00268E  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  8855  002690                     l3353:
  8856  002690  AE03               	btfss	(___fldiv@b+2)^0,7,c
  8857  002692  EF4D  F013         	goto	u3461
  8858  002696  EF4F  F013         	goto	u3460
  8859  00269A                     u3461:
  8860  00269A  EF33  F013         	goto	l3347
  8861  00269E                     u3460:
  8862  00269E  0E00               	movlw	0
  8863  0026A0  6E19               	movwf	___fldiv@aexp^0,c
  8864  0026A2  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8865  0026A4  EF56  F013         	goto	u3471
  8866  0026A8  EF58  F013         	goto	u3470
  8867  0026AC                     u3471:
  8868  0026AC  EF7C  F013         	goto	l800
  8869  0026B0                     u3470:
  8870  0026B0  0EFF               	movlw	255
  8871  0026B2  1414               	andwf	___fldiv@grs^0,w,c
  8872  0026B4  6E09               	movwf	??___fldiv^0,c
  8873  0026B6  0EFF               	movlw	255
  8874  0026B8  1415               	andwf	(___fldiv@grs+1)^0,w,c
  8875  0026BA  6E0A               	movwf	(??___fldiv+1)^0,c
  8876  0026BC  0EFF               	movlw	255
  8877  0026BE  1416               	andwf	(___fldiv@grs+2)^0,w,c
  8878  0026C0  6E0B               	movwf	(??___fldiv+2)^0,c
  8879  0026C2  0E7F               	movlw	127
  8880  0026C4  1417               	andwf	(___fldiv@grs+3)^0,w,c
  8881  0026C6  6E0C               	movwf	(??___fldiv+3)^0,c
  8882  0026C8  5009               	movf	??___fldiv^0,w,c
  8883  0026CA  100A               	iorwf	(??___fldiv+1)^0,w,c
  8884  0026CC  100B               	iorwf	(??___fldiv+2)^0,w,c
  8885  0026CE  100C               	iorwf	(??___fldiv+3)^0,w,c
  8886  0026D0  B4D8               	btfsc	status,2,c
  8887  0026D2  EF6D  F013         	goto	u3481
  8888  0026D6  EF6F  F013         	goto	u3480
  8889  0026DA                     u3481:
  8890  0026DA  EF73  F013         	goto	l801
  8891  0026DE                     u3480:
  8892  0026DE                     l3361:
  8893  0026DE  0E01               	movlw	1
  8894  0026E0  6E19               	movwf	___fldiv@aexp^0,c
  8895  0026E2  EF7C  F013         	goto	l800
  8896  0026E6                     l801:
  8897  0026E6  A001               	btfss	___fldiv@b^0,0,c
  8898  0026E8  EF78  F013         	goto	u3491
  8899  0026EC  EF7A  F013         	goto	u3490
  8900  0026F0                     u3491:
  8901  0026F0  EF7C  F013         	goto	l800
  8902  0026F4                     u3490:
  8903  0026F4  EF6F  F013         	goto	l3361
  8904  0026F8                     l800:
  8905  0026F8  5019               	movf	___fldiv@aexp^0,w,c
  8906  0026FA  B4D8               	btfsc	status,2,c
  8907  0026FC  EF82  F013         	goto	u3501
  8908  002700  EF84  F013         	goto	u3500
  8909  002704                     u3501:
  8910  002704  EFA8  F013         	goto	l3373
  8911  002708                     u3500:
  8912  002708  0E01               	movlw	1
  8913  00270A  2601               	addwf	___fldiv@b^0,f,c
  8914  00270C  0E00               	movlw	0
  8915  00270E  2202               	addwfc	(___fldiv@b+1)^0,f,c
  8916  002710  2203               	addwfc	(___fldiv@b+2)^0,f,c
  8917  002712  2204               	addwfc	(___fldiv@b+3)^0,f,c
  8918  002714  A004               	btfss	(___fldiv@b+3)^0,0,c
  8919  002716  EF8F  F013         	goto	u3511
  8920  00271A  EF91  F013         	goto	u3510
  8921  00271E                     u3511:
  8922  00271E  EFA8  F013         	goto	l3373
  8923  002722                     u3510:
  8924  002722  C001  F009         	movff	___fldiv@b,??___fldiv
  8925  002726  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  8926  00272A  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  8927  00272E  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  8928  002732  340C               	rlcf	(??___fldiv+3)^0,w,c
  8929  002734  320C               	rrcf	(??___fldiv+3)^0,f,c
  8930  002736  320B               	rrcf	(??___fldiv+2)^0,f,c
  8931  002738  320A               	rrcf	(??___fldiv+1)^0,f,c
  8932  00273A  3209               	rrcf	??___fldiv^0,f,c
  8933  00273C  C009  F001         	movff	??___fldiv,___fldiv@b
  8934  002740  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  8935  002744  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  8936  002748  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  8937  00274C  4A12               	infsnz	___fldiv@new_exp^0,f,c
  8938  00274E  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  8939  002750                     l3373:
  8940  002750  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8941  002752  EFB3  F013         	goto	u3521
  8942  002756  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  8943  002758  E108               	bnz	u3520
  8944  00275A  2812               	incf	___fldiv@new_exp^0,w,c
  8945  00275C  A0D8               	btfss	status,0,c
  8946  00275E  EFB3  F013         	goto	u3521
  8947  002762  EFB5  F013         	goto	u3520
  8948  002766                     u3521:
  8949  002766  EFC0  F013         	goto	l3377
  8950  00276A                     u3520:
  8951  00276A  0E00               	movlw	0
  8952  00276C  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8953  00276E  6812               	setf	___fldiv@new_exp^0,c
  8954  002770  0E00               	movlw	0
  8955  002772  6E01               	movwf	___fldiv@b^0,c
  8956  002774  0E00               	movlw	0
  8957  002776  6E02               	movwf	(___fldiv@b+1)^0,c
  8958  002778  0E00               	movlw	0
  8959  00277A  6E03               	movwf	(___fldiv@b+2)^0,c
  8960  00277C  0E00               	movlw	0
  8961  00277E  6E04               	movwf	(___fldiv@b+3)^0,c
  8962  002780                     l3377:
  8963  002780  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8964  002782  EFCD  F013         	goto	u3530
  8965  002786  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  8966  002788  E106               	bnz	u3531
  8967  00278A  0412               	decf	___fldiv@new_exp^0,w,c
  8968  00278C  B0D8               	btfsc	status,0,c
  8969  00278E  EFCB  F013         	goto	u3531
  8970  002792  EFCD  F013         	goto	u3530
  8971  002796                     u3531:
  8972  002796  EFDB  F013         	goto	l3381
  8973  00279A                     u3530:
  8974  00279A  0E00               	movlw	0
  8975  00279C  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8976  00279E  0E00               	movlw	0
  8977  0027A0  6E12               	movwf	___fldiv@new_exp^0,c
  8978  0027A2  0E00               	movlw	0
  8979  0027A4  6E01               	movwf	___fldiv@b^0,c
  8980  0027A6  0E00               	movlw	0
  8981  0027A8  6E02               	movwf	(___fldiv@b+1)^0,c
  8982  0027AA  0E00               	movlw	0
  8983  0027AC  6E03               	movwf	(___fldiv@b+2)^0,c
  8984  0027AE  0E00               	movlw	0
  8985  0027B0  6E04               	movwf	(___fldiv@b+3)^0,c
  8986  0027B2  0E00               	movlw	0
  8987  0027B4  6E11               	movwf	___fldiv@sign^0,c
  8988  0027B6                     l3381:
  8989  0027B6  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  8990  0027BA  A018               	btfss	___fldiv@bexp^0,0,c
  8991  0027BC  EFE2  F013         	goto	u3541
  8992  0027C0  EFE4  F013         	goto	u3540
  8993  0027C4                     u3541:
  8994  0027C4  EFE7  F013         	goto	l3387
  8995  0027C8                     u3540:
  8996  0027C8  8E03               	bsf	(___fldiv@b+2)^0,7,c
  8997  0027CA  EFE8  F013         	goto	l3389
  8998  0027CE                     l3387:
  8999  0027CE  9E03               	bcf	(___fldiv@b+2)^0,7,c
  9000  0027D0                     l3389:
  9001  0027D0  90D8               	bcf	status,0,c
  9002  0027D2  3018               	rrcf	___fldiv@bexp^0,w,c
  9003  0027D4  6E04               	movwf	(___fldiv@b+3)^0,c
  9004  0027D6  EF9E  F012         	goto	l3303
  9005  0027DA                     l787:
  9006  0027DA  0012               	return		;funcret
  9007  0027DC                     __end_of___fldiv:
  9008                           	callstack 0
  9009                           
  9010 ;; *************** function ___awmod *****************
  9011 ;; Defined at:
  9012 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\awmod.c"
  9013 ;; Parameters:    Size  Location     Type
  9014 ;;  dividend        2    0[COMRAM] int 
  9015 ;;  divisor         2    2[COMRAM] int 
  9016 ;; Auto vars:     Size  Location     Type
  9017 ;;  sign            1    5[COMRAM] unsigned char 
  9018 ;;  counter         1    4[COMRAM] unsigned char 
  9019 ;; Return value:  Size  Location     Type
  9020 ;;                  2    0[COMRAM] int 
  9021 ;; Registers used:
  9022 ;;		wreg, status,2, status,0
  9023 ;; Tracked objects:
  9024 ;;		On entry : 0/0
  9025 ;;		On exit  : 0/0
  9026 ;;		Unchanged: 0/0
  9027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9028 ;;      Params:         4       0       0       0       0       0       0
  9029 ;;      Locals:         2       0       0       0       0       0       0
  9030 ;;      Temps:          0       0       0       0       0       0       0
  9031 ;;      Totals:         6       0       0       0       0       0       0
  9032 ;;Total ram usage:        6 bytes
  9033 ;; Hardware stack levels used:    1
  9034 ;; This function calls:
  9035 ;;		Nothing
  9036 ;; This function is called by:
  9037 ;;		_encher_tanque
  9038 ;;		_efgtoa
  9039 ;; This function uses a non-reentrant model
  9040 ;;
  9041                           
  9042                           	psect	text29
  9043  0039E4                     __ptext29:
  9044                           	callstack 0
  9045  0039E4                     ___awmod:
  9046                           	callstack 25
  9047  0039E4  0E00               	movlw	0
  9048  0039E6  6E06               	movwf	___awmod@sign^0,c
  9049  0039E8  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  9050  0039EA  EFFB  F01C         	goto	u3800
  9051  0039EE  EFF9  F01C         	goto	u3801
  9052  0039F2                     u3801:
  9053  0039F2  EF01  F01D         	goto	l3585
  9054  0039F6                     u3800:
  9055  0039F6  6C01               	negf	___awmod@dividend^0,c
  9056  0039F8  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9057  0039FA  B0D8               	btfsc	status,0,c
  9058  0039FC  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9059  0039FE  0E01               	movlw	1
  9060  003A00  6E06               	movwf	___awmod@sign^0,c
  9061  003A02                     l3585:
  9062  003A02  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  9063  003A04  EF08  F01D         	goto	u3810
  9064  003A08  EF06  F01D         	goto	u3811
  9065  003A0C                     u3811:
  9066  003A0C  EF0C  F01D         	goto	l3589
  9067  003A10                     u3810:
  9068  003A10  6C03               	negf	___awmod@divisor^0,c
  9069  003A12  1E04               	comf	(___awmod@divisor+1)^0,f,c
  9070  003A14  B0D8               	btfsc	status,0,c
  9071  003A16  2A04               	incf	(___awmod@divisor+1)^0,f,c
  9072  003A18                     l3589:
  9073  003A18  5003               	movf	___awmod@divisor^0,w,c
  9074  003A1A  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  9075  003A1C  B4D8               	btfsc	status,2,c
  9076  003A1E  EF13  F01D         	goto	u3821
  9077  003A22  EF15  F01D         	goto	u3820
  9078  003A26                     u3821:
  9079  003A26  EF39  F01D         	goto	l3605
  9080  003A2A                     u3820:
  9081  003A2A  0E01               	movlw	1
  9082  003A2C  6E05               	movwf	___awmod@counter^0,c
  9083  003A2E  EF1D  F01D         	goto	l3595
  9084  003A32                     l3593:
  9085  003A32  90D8               	bcf	status,0,c
  9086  003A34  3603               	rlcf	___awmod@divisor^0,f,c
  9087  003A36  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  9088  003A38  2A05               	incf	___awmod@counter^0,f,c
  9089  003A3A                     l3595:
  9090  003A3A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  9091  003A3C  EF22  F01D         	goto	u3831
  9092  003A40  EF24  F01D         	goto	u3830
  9093  003A44                     u3831:
  9094  003A44  EF19  F01D         	goto	l3593
  9095  003A48                     u3830:
  9096  003A48                     l3597:
  9097  003A48  5003               	movf	___awmod@divisor^0,w,c
  9098  003A4A  5C01               	subwf	___awmod@dividend^0,w,c
  9099  003A4C  5004               	movf	(___awmod@divisor+1)^0,w,c
  9100  003A4E  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  9101  003A50  A0D8               	btfss	status,0,c
  9102  003A52  EF2D  F01D         	goto	u3841
  9103  003A56  EF2F  F01D         	goto	u3840
  9104  003A5A                     u3841:
  9105  003A5A  EF33  F01D         	goto	l3601
  9106  003A5E                     u3840:
  9107  003A5E  5003               	movf	___awmod@divisor^0,w,c
  9108  003A60  5E01               	subwf	___awmod@dividend^0,f,c
  9109  003A62  5004               	movf	(___awmod@divisor+1)^0,w,c
  9110  003A64  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  9111  003A66                     l3601:
  9112  003A66  90D8               	bcf	status,0,c
  9113  003A68  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  9114  003A6A  3203               	rrcf	___awmod@divisor^0,f,c
  9115  003A6C  2E05               	decfsz	___awmod@counter^0,f,c
  9116  003A6E  EF24  F01D         	goto	l3597
  9117  003A72                     l3605:
  9118  003A72  5006               	movf	___awmod@sign^0,w,c
  9119  003A74  B4D8               	btfsc	status,2,c
  9120  003A76  EF3F  F01D         	goto	u3851
  9121  003A7A  EF41  F01D         	goto	u3850
  9122  003A7E                     u3851:
  9123  003A7E  EF45  F01D         	goto	l3609
  9124  003A82                     u3850:
  9125  003A82  6C01               	negf	___awmod@dividend^0,c
  9126  003A84  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9127  003A86  B0D8               	btfsc	status,0,c
  9128  003A88  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9129  003A8A                     l3609:
  9130  003A8A  C001  F001         	movff	___awmod@dividend,?___awmod
  9131  003A8E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  9132  003A92  0012               	return		;funcret
  9133  003A94                     __end_of___awmod:
  9134                           	callstack 0
  9135                           
  9136 ;; *************** function ___awdiv *****************
  9137 ;; Defined at:
  9138 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  9139 ;; Parameters:    Size  Location     Type
  9140 ;;  dividend        2    6[COMRAM] int 
  9141 ;;  divisor         2    8[COMRAM] int 
  9142 ;; Auto vars:     Size  Location     Type
  9143 ;;  quotient        2   12[COMRAM] int 
  9144 ;;  sign            1   11[COMRAM] unsigned char 
  9145 ;;  counter         1   10[COMRAM] unsigned char 
  9146 ;; Return value:  Size  Location     Type
  9147 ;;                  2    6[COMRAM] int 
  9148 ;; Registers used:
  9149 ;;		wreg, status,2, status,0
  9150 ;; Tracked objects:
  9151 ;;		On entry : 0/0
  9152 ;;		On exit  : 0/0
  9153 ;;		Unchanged: 0/0
  9154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9155 ;;      Params:         4       0       0       0       0       0       0
  9156 ;;      Locals:         4       0       0       0       0       0       0
  9157 ;;      Temps:          0       0       0       0       0       0       0
  9158 ;;      Totals:         8       0       0       0       0       0       0
  9159 ;;Total ram usage:        8 bytes
  9160 ;; Hardware stack levels used:    1
  9161 ;; This function calls:
  9162 ;;		Nothing
  9163 ;; This function is called by:
  9164 ;;		_encher_tanque
  9165 ;;		_efgtoa
  9166 ;; This function uses a non-reentrant model
  9167 ;;
  9168                           
  9169                           	psect	text30
  9170  003868                     __ptext30:
  9171                           	callstack 0
  9172  003868                     ___awdiv:
  9173                           	callstack 25
  9174  003868  0E00               	movlw	0
  9175  00386A  6E0C               	movwf	___awdiv@sign^0,c
  9176  00386C  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  9177  00386E  EF3D  F01C         	goto	u3740
  9178  003872  EF3B  F01C         	goto	u3741
  9179  003876                     u3741:
  9180  003876  EF43  F01C         	goto	l3541
  9181  00387A                     u3740:
  9182  00387A  6C09               	negf	___awdiv@divisor^0,c
  9183  00387C  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  9184  00387E  B0D8               	btfsc	status,0,c
  9185  003880  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  9186  003882  0E01               	movlw	1
  9187  003884  6E0C               	movwf	___awdiv@sign^0,c
  9188  003886                     l3541:
  9189  003886  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  9190  003888  EF4A  F01C         	goto	u3750
  9191  00388C  EF48  F01C         	goto	u3751
  9192  003890                     u3751:
  9193  003890  EF50  F01C         	goto	l3547
  9194  003894                     u3750:
  9195  003894  6C07               	negf	___awdiv@dividend^0,c
  9196  003896  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  9197  003898  B0D8               	btfsc	status,0,c
  9198  00389A  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  9199  00389C  0E01               	movlw	1
  9200  00389E  1A0C               	xorwf	___awdiv@sign^0,f,c
  9201  0038A0                     l3547:
  9202  0038A0  0E00               	movlw	0
  9203  0038A2  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  9204  0038A4  0E00               	movlw	0
  9205  0038A6  6E0D               	movwf	___awdiv@quotient^0,c
  9206  0038A8  5009               	movf	___awdiv@divisor^0,w,c
  9207  0038AA  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  9208  0038AC  B4D8               	btfsc	status,2,c
  9209  0038AE  EF5B  F01C         	goto	u3761
  9210  0038B2  EF5D  F01C         	goto	u3760
  9211  0038B6                     u3761:
  9212  0038B6  EF85  F01C         	goto	l3569
  9213  0038BA                     u3760:
  9214  0038BA  0E01               	movlw	1
  9215  0038BC  6E0B               	movwf	___awdiv@counter^0,c
  9216  0038BE  EF65  F01C         	goto	l3555
  9217  0038C2                     l3553:
  9218  0038C2  90D8               	bcf	status,0,c
  9219  0038C4  3609               	rlcf	___awdiv@divisor^0,f,c
  9220  0038C6  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  9221  0038C8  2A0B               	incf	___awdiv@counter^0,f,c
  9222  0038CA                     l3555:
  9223  0038CA  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  9224  0038CC  EF6A  F01C         	goto	u3771
  9225  0038D0  EF6C  F01C         	goto	u3770
  9226  0038D4                     u3771:
  9227  0038D4  EF61  F01C         	goto	l3553
  9228  0038D8                     u3770:
  9229  0038D8                     l3557:
  9230  0038D8  90D8               	bcf	status,0,c
  9231  0038DA  360D               	rlcf	___awdiv@quotient^0,f,c
  9232  0038DC  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  9233  0038DE  5009               	movf	___awdiv@divisor^0,w,c
  9234  0038E0  5C07               	subwf	___awdiv@dividend^0,w,c
  9235  0038E2  500A               	movf	(___awdiv@divisor+1)^0,w,c
  9236  0038E4  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  9237  0038E6  A0D8               	btfss	status,0,c
  9238  0038E8  EF78  F01C         	goto	u3781
  9239  0038EC  EF7A  F01C         	goto	u3780
  9240  0038F0                     u3781:
  9241  0038F0  EF7F  F01C         	goto	l3565
  9242  0038F4                     u3780:
  9243  0038F4  5009               	movf	___awdiv@divisor^0,w,c
  9244  0038F6  5E07               	subwf	___awdiv@dividend^0,f,c
  9245  0038F8  500A               	movf	(___awdiv@divisor+1)^0,w,c
  9246  0038FA  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  9247  0038FC  800D               	bsf	___awdiv@quotient^0,0,c
  9248  0038FE                     l3565:
  9249  0038FE  90D8               	bcf	status,0,c
  9250  003900  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  9251  003902  3209               	rrcf	___awdiv@divisor^0,f,c
  9252  003904  2E0B               	decfsz	___awdiv@counter^0,f,c
  9253  003906  EF6C  F01C         	goto	l3557
  9254  00390A                     l3569:
  9255  00390A  500C               	movf	___awdiv@sign^0,w,c
  9256  00390C  B4D8               	btfsc	status,2,c
  9257  00390E  EF8B  F01C         	goto	u3791
  9258  003912  EF8D  F01C         	goto	u3790
  9259  003916                     u3791:
  9260  003916  EF91  F01C         	goto	l3573
  9261  00391A                     u3790:
  9262  00391A  6C0D               	negf	___awdiv@quotient^0,c
  9263  00391C  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  9264  00391E  B0D8               	btfsc	status,0,c
  9265  003920  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  9266  003922                     l3573:
  9267  003922  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  9268  003926  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  9269  00392A  0012               	return		;funcret
  9270  00392C                     __end_of___awdiv:
  9271                           	callstack 0
  9272                           
  9273 ;; *************** function _atoi *****************
  9274 ;; Defined at:
  9275 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\atoi.c"
  9276 ;; Parameters:    Size  Location     Type
  9277 ;;  s               2    7[COMRAM] PTR const unsigned char 
  9278 ;;		 -> STR_25(5), STR_17(5), STR_11(5), 
  9279 ;; Auto vars:     Size  Location     Type
  9280 ;;  n               2   20[COMRAM] int 
  9281 ;;  neg             2   13[COMRAM] int 
  9282 ;; Return value:  Size  Location     Type
  9283 ;;                  2    7[COMRAM] int 
  9284 ;; Registers used:
  9285 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9286 ;; Tracked objects:
  9287 ;;		On entry : 0/0
  9288 ;;		On exit  : 0/0
  9289 ;;		Unchanged: 0/0
  9290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9291 ;;      Params:         2       0       0       0       0       0       0
  9292 ;;      Locals:         9       0       0       0       0       0       0
  9293 ;;      Temps:          4       0       0       0       0       0       0
  9294 ;;      Totals:        15       0       0       0       0       0       0
  9295 ;;Total ram usage:       15 bytes
  9296 ;; Hardware stack levels used:    1
  9297 ;; Hardware stack levels required when called:    1
  9298 ;; This function calls:
  9299 ;;		___wmul
  9300 ;;		_isdigit
  9301 ;;		_isspace
  9302 ;; This function is called by:
  9303 ;;		_vfpfcnvrt
  9304 ;; This function uses a non-reentrant model
  9305 ;;
  9306                           
  9307                           	psect	text31
  9308  00316A                     __ptext31:
  9309                           	callstack 0
  9310  00316A                     _atoi:
  9311                           	callstack 25
  9312  00316A  0E00               	movlw	0
  9313  00316C  6E16               	movwf	(atoi@n+1)^0,c
  9314  00316E  0E00               	movlw	0
  9315  003170  6E15               	movwf	atoi@n^0,c
  9316  003172  0E00               	movlw	0
  9317  003174  6E0F               	movwf	(atoi@neg+1)^0,c
  9318  003176  0E00               	movlw	0
  9319  003178  6E0E               	movwf	atoi@neg^0,c
  9320  00317A  EFC1  F018         	goto	l4107
  9321  00317E                     l4105:
  9322  00317E  4A08               	infsnz	atoi@s^0,f,c
  9323  003180  2A09               	incf	(atoi@s+1)^0,f,c
  9324  003182                     l4107:
  9325  003182  0E01               	movlw	1
  9326  003184  6E14               	movwf	_atoi$802^0,c
  9327  003186  C008  FFF6         	movff	atoi@s,tblptrl
  9328  00318A  C009  FFF7         	movff	atoi@s+1,tblptrh
  9329  00318E                     	if	0	;tblptru may be non-zero
  9330  00318E                     	endif
  9331  00318E                     	if	0	;tblptru may be non-zero
  9332  00318E                     	endif
  9333  00318E  0008               	tblrd		*
  9334  003190  50F5               	movf	tablat,w,c
  9335  003192  0A20               	xorlw	32
  9336  003194  B4D8               	btfsc	status,2,c
  9337  003196  EFCF  F018         	goto	u4841
  9338  00319A  EFD1  F018         	goto	u4840
  9339  00319E                     u4841:
  9340  00319E  EFEE  F018         	goto	l4115
  9341  0031A2                     u4840:
  9342  0031A2  0EF7               	movlw	247
  9343  0031A4  6E0A               	movwf	??_atoi^0,c
  9344  0031A6  0EFF               	movlw	255
  9345  0031A8  6E0B               	movwf	(??_atoi+1)^0,c
  9346  0031AA  C008  FFF6         	movff	atoi@s,tblptrl
  9347  0031AE  C009  FFF7         	movff	atoi@s+1,tblptrh
  9348  0031B2                     	if	0	;tblptru may be non-zero
  9349  0031B2                     	endif
  9350  0031B2                     	if	0	;tblptru may be non-zero
  9351  0031B2                     	endif
  9352  0031B2  0008               	tblrd		*
  9353  0031B4  50F5               	movf	tablat,w,c
  9354  0031B6  6E0C               	movwf	(??_atoi+2)^0,c
  9355  0031B8  6A0D               	clrf	(??_atoi+3)^0,c
  9356  0031BA  500A               	movf	??_atoi^0,w,c
  9357  0031BC  260C               	addwf	(??_atoi+2)^0,f,c
  9358  0031BE  500B               	movf	(??_atoi+1)^0,w,c
  9359  0031C0  220D               	addwfc	(??_atoi+3)^0,f,c
  9360  0031C2  500D               	movf	(??_atoi+3)^0,w,c
  9361  0031C4  E109               	bnz	u4850
  9362  0031C6  0E05               	movlw	5
  9363  0031C8  5C0C               	subwf	(??_atoi+2)^0,w,c
  9364  0031CA  A0D8               	btfss	status,0,c
  9365  0031CC  EFEA  F018         	goto	u4851
  9366  0031D0  EFEC  F018         	goto	u4850
  9367  0031D4                     u4851:
  9368  0031D4  EFEE  F018         	goto	l4115
  9369  0031D8                     u4850:
  9370  0031D8  0E00               	movlw	0
  9371  0031DA  6E14               	movwf	_atoi$802^0,c
  9372  0031DC                     l4115:
  9373  0031DC  C014  F010         	movff	_atoi$802,_atoi$801
  9374  0031E0  6A11               	clrf	(_atoi$801+1)^0,c
  9375  0031E2  5010               	movf	_atoi$801^0,w,c
  9376  0031E4  1011               	iorwf	(_atoi$801+1)^0,w,c
  9377  0031E6  A4D8               	btfss	status,2,c
  9378  0031E8  EFF8  F018         	goto	u4861
  9379  0031EC  EFFA  F018         	goto	u4860
  9380  0031F0                     u4861:
  9381  0031F0  EFBF  F018         	goto	l4105
  9382  0031F4                     u4860:
  9383  0031F4  EF04  F019         	goto	l4125
  9384  0031F8                     l4121:
  9385  0031F8  0E00               	movlw	0
  9386  0031FA  6E0F               	movwf	(atoi@neg+1)^0,c
  9387  0031FC  0E01               	movlw	1
  9388  0031FE  6E0E               	movwf	atoi@neg^0,c
  9389  003200                     l4123:
  9390  003200  4A08               	infsnz	atoi@s^0,f,c
  9391  003202  2A09               	incf	(atoi@s+1)^0,f,c
  9392  003204  EF39  F019         	goto	l4131
  9393  003208                     l4125:
  9394  003208  C008  FFF6         	movff	atoi@s,tblptrl
  9395  00320C  C009  FFF7         	movff	atoi@s+1,tblptrh
  9396  003210                     	if	0	;tblptru may be non-zero
  9397  003210                     	endif
  9398  003210                     	if	0	;tblptru may be non-zero
  9399  003210                     	endif
  9400  003210  0008               	tblrd		*
  9401  003212  50F5               	movf	tablat,w,c
  9402  003214  6E0A               	movwf	??_atoi^0,c
  9403  003216  6A0B               	clrf	(??_atoi+1)^0,c
  9404                           
  9405                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9406                           ; Switch size 1, requested type "simple"
  9407                           ; Number of cases is 1, Range of values is 0 to 0
  9408                           ; switch strategies available:
  9409                           ; Name         Instructions Cycles
  9410                           ; simple_byte            4     3 (average)
  9411                           ;	Chosen strategy is simple_byte
  9412  003218  500B               	movf	(??_atoi+1)^0,w,c
  9413  00321A  0A00               	xorlw	0	; case 0
  9414  00321C  B4D8               	btfsc	status,2,c
  9415  00321E  EF13  F019         	goto	l4843
  9416  003222  EF39  F019         	goto	l4131
  9417  003226                     l4843:
  9418                           
  9419                           ; Switch size 1, requested type "simple"
  9420                           ; Number of cases is 2, Range of values is 43 to 45
  9421                           ; switch strategies available:
  9422                           ; Name         Instructions Cycles
  9423                           ; simple_byte            7     4 (average)
  9424                           ;	Chosen strategy is simple_byte
  9425  003226  500A               	movf	??_atoi^0,w,c
  9426  003228  0A2B               	xorlw	43	; case 43
  9427  00322A  B4D8               	btfsc	status,2,c
  9428  00322C  EF00  F019         	goto	l4123
  9429  003230  0A06               	xorlw	6	; case 45
  9430  003232  B4D8               	btfsc	status,2,c
  9431  003234  EFFC  F018         	goto	l4121
  9432  003238  EF39  F019         	goto	l4131
  9433  00323C                     l4127:
  9434  00323C  C015  F001         	movff	atoi@n,___wmul@multiplier
  9435  003240  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  9436  003244  0E00               	movlw	0
  9437  003246  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9438  003248  0E0A               	movlw	10
  9439  00324A  6E03               	movwf	___wmul@multiplicand^0,c
  9440  00324C  ECAF  F020         	call	___wmul	;wreg free
  9441  003250  C008  FFF6         	movff	atoi@s,tblptrl
  9442  003254  C009  FFF7         	movff	atoi@s+1,tblptrh
  9443  003258                     	if	0	;tblptru may be non-zero
  9444  003258                     	endif
  9445  003258                     	if	0	;tblptru may be non-zero
  9446  003258                     	endif
  9447  003258  0008               	tblrd		*
  9448  00325A  50F5               	movf	tablat,w,c
  9449  00325C  5E01               	subwf	?___wmul^0,f,c
  9450  00325E  0E00               	movlw	0
  9451  003260  5A02               	subwfb	(?___wmul+1)^0,f,c
  9452  003262  0E30               	movlw	48
  9453  003264  2401               	addwf	?___wmul^0,w,c
  9454  003266  6E15               	movwf	atoi@n^0,c
  9455  003268  0E00               	movlw	0
  9456  00326A  2002               	addwfc	(?___wmul+1)^0,w,c
  9457  00326C  6E16               	movwf	(atoi@n+1)^0,c
  9458  00326E  EF00  F019         	goto	l4123
  9459  003272                     l4131:
  9460  003272  0ED0               	movlw	208
  9461  003274  6E0A               	movwf	??_atoi^0,c
  9462  003276  0EFF               	movlw	255
  9463  003278  6E0B               	movwf	(??_atoi+1)^0,c
  9464  00327A  C008  FFF6         	movff	atoi@s,tblptrl
  9465  00327E  C009  FFF7         	movff	atoi@s+1,tblptrh
  9466  003282                     	if	0	;tblptru may be non-zero
  9467  003282                     	endif
  9468  003282                     	if	0	;tblptru may be non-zero
  9469  003282                     	endif
  9470  003282  0008               	tblrd		*
  9471  003284  50F5               	movf	tablat,w,c
  9472  003286  6E0C               	movwf	(??_atoi+2)^0,c
  9473  003288  6A0D               	clrf	(??_atoi+3)^0,c
  9474  00328A  500A               	movf	??_atoi^0,w,c
  9475  00328C  260C               	addwf	(??_atoi+2)^0,f,c
  9476  00328E  500B               	movf	(??_atoi+1)^0,w,c
  9477  003290  220D               	addwfc	(??_atoi+3)^0,f,c
  9478  003292  500D               	movf	(??_atoi+3)^0,w,c
  9479  003294  E10A               	bnz	u4870
  9480  003296  0E0A               	movlw	10
  9481  003298  5C0C               	subwf	(??_atoi+2)^0,w,c
  9482  00329A  A0D8               	btfss	status,0,c
  9483  00329C  EF52  F019         	goto	u4871
  9484  0032A0  EF55  F019         	goto	u4870
  9485  0032A4                     u4871:
  9486  0032A4  0E01               	movlw	1
  9487  0032A6  EF56  F019         	goto	u4880
  9488  0032AA                     u4870:
  9489  0032AA  0E00               	movlw	0
  9490  0032AC                     u4880:
  9491  0032AC  6E12               	movwf	_atoi$803^0,c
  9492  0032AE  6A13               	clrf	(_atoi$803+1)^0,c
  9493  0032B0  5012               	movf	_atoi$803^0,w,c
  9494  0032B2  1013               	iorwf	(_atoi$803+1)^0,w,c
  9495  0032B4  A4D8               	btfss	status,2,c
  9496  0032B6  EF5F  F019         	goto	u4891
  9497  0032BA  EF61  F019         	goto	u4890
  9498  0032BE                     u4891:
  9499  0032BE  EF1E  F019         	goto	l4127
  9500  0032C2                     u4890:
  9501  0032C2  500E               	movf	atoi@neg^0,w,c
  9502  0032C4  100F               	iorwf	(atoi@neg+1)^0,w,c
  9503  0032C6  A4D8               	btfss	status,2,c
  9504  0032C8  EF68  F019         	goto	u4901
  9505  0032CC  EF6A  F019         	goto	u4900
  9506  0032D0                     u4901:
  9507  0032D0  EF78  F019         	goto	l1090
  9508  0032D4                     u4900:
  9509  0032D4  C015  F00A         	movff	atoi@n,??_atoi
  9510  0032D8  C016  F00B         	movff	atoi@n+1,??_atoi+1
  9511  0032DC  1E0A               	comf	??_atoi^0,f,c
  9512  0032DE  1E0B               	comf	(??_atoi+1)^0,f,c
  9513  0032E0  4A0A               	infsnz	??_atoi^0,f,c
  9514  0032E2  2A0B               	incf	(??_atoi+1)^0,f,c
  9515  0032E4  C00A  F008         	movff	??_atoi,?_atoi
  9516  0032E8  C00B  F009         	movff	??_atoi+1,?_atoi+1
  9517  0032EC  EF7C  F019         	goto	l1093
  9518  0032F0                     l1090:
  9519  0032F0  C015  F008         	movff	atoi@n,?_atoi
  9520  0032F4  C016  F009         	movff	atoi@n+1,?_atoi+1
  9521  0032F8                     l1093:
  9522  0032F8  0012               	return		;funcret
  9523  0032FA                     __end_of_atoi:
  9524                           	callstack 0
  9525                           
  9526 ;; *************** function _isspace *****************
  9527 ;; Defined at:
  9528 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\isspace.c"
  9529 ;; Parameters:    Size  Location     Type
  9530 ;;  c               2    0[COMRAM] int 
  9531 ;; Auto vars:     Size  Location     Type
  9532 ;;		None
  9533 ;; Return value:  Size  Location     Type
  9534 ;;                  2    0[COMRAM] int 
  9535 ;; Registers used:
  9536 ;;		wreg, status,2, status,0
  9537 ;; Tracked objects:
  9538 ;;		On entry : 0/0
  9539 ;;		On exit  : 0/0
  9540 ;;		Unchanged: 0/0
  9541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9542 ;;      Params:         2       0       0       0       0       0       0
  9543 ;;      Locals:         1       0       0       0       0       0       0
  9544 ;;      Temps:          4       0       0       0       0       0       0
  9545 ;;      Totals:         7       0       0       0       0       0       0
  9546 ;;Total ram usage:        7 bytes
  9547 ;; Hardware stack levels used:    1
  9548 ;; This function calls:
  9549 ;;		Nothing
  9550 ;; This function is called by:
  9551 ;;		_atoi
  9552 ;; This function uses a non-reentrant model
  9553 ;;
  9554                           
  9555                           	psect	text32
  9556  003F28                     __ptext32:
  9557                           	callstack 0
  9558  003F28                     _isspace:
  9559                           	callstack 25
  9560  003F28  0E01               	movlw	1
  9561  003F2A  6E07               	movwf	_isspace$832^0,c
  9562  003F2C  0E20               	movlw	32
  9563  003F2E  1801               	xorwf	isspace@c^0,w,c
  9564  003F30  1002               	iorwf	(isspace@c+1)^0,w,c
  9565  003F32  B4D8               	btfsc	status,2,c
  9566  003F34  EF9E  F01F         	goto	u4301
  9567  003F38  EFA0  F01F         	goto	u4300
  9568  003F3C                     u4301:
  9569  003F3C  EFB9  F01F         	goto	l3801
  9570  003F40                     u4300:
  9571  003F40  0EF7               	movlw	247
  9572  003F42  6E03               	movwf	??_isspace^0,c
  9573  003F44  0EFF               	movlw	255
  9574  003F46  6E04               	movwf	(??_isspace+1)^0,c
  9575  003F48  C001  F005         	movff	isspace@c,??_isspace+2
  9576  003F4C  C002  F006         	movff	isspace@c+1,??_isspace+3
  9577  003F50  5003               	movf	??_isspace^0,w,c
  9578  003F52  2605               	addwf	(??_isspace+2)^0,f,c
  9579  003F54  5004               	movf	(??_isspace+1)^0,w,c
  9580  003F56  2206               	addwfc	(??_isspace+3)^0,f,c
  9581  003F58  5006               	movf	(??_isspace+3)^0,w,c
  9582  003F5A  E109               	bnz	u4310
  9583  003F5C  0E05               	movlw	5
  9584  003F5E  5C05               	subwf	(??_isspace+2)^0,w,c
  9585  003F60  A0D8               	btfss	status,0,c
  9586  003F62  EFB5  F01F         	goto	u4311
  9587  003F66  EFB7  F01F         	goto	u4310
  9588  003F6A                     u4311:
  9589  003F6A  EFB9  F01F         	goto	l3801
  9590  003F6E                     u4310:
  9591  003F6E  0E00               	movlw	0
  9592  003F70  6E07               	movwf	_isspace$832^0,c
  9593  003F72                     l3801:
  9594  003F72  C007  F001         	movff	_isspace$832,?_isspace
  9595  003F76  6A02               	clrf	(?_isspace+1)^0,c
  9596  003F78  0012               	return		;funcret
  9597  003F7A                     __end_of_isspace:
  9598                           	callstack 0
  9599                           
  9600 ;; *************** function _isdigit *****************
  9601 ;; Defined at:
  9602 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\isdigit.c"
  9603 ;; Parameters:    Size  Location     Type
  9604 ;;  c               2    0[COMRAM] int 
  9605 ;; Auto vars:     Size  Location     Type
  9606 ;;		None
  9607 ;; Return value:  Size  Location     Type
  9608 ;;                  2    0[COMRAM] int 
  9609 ;; Registers used:
  9610 ;;		wreg, status,2, status,0
  9611 ;; Tracked objects:
  9612 ;;		On entry : 0/0
  9613 ;;		On exit  : 0/0
  9614 ;;		Unchanged: 0/0
  9615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9616 ;;      Params:         2       0       0       0       0       0       0
  9617 ;;      Locals:         0       0       0       0       0       0       0
  9618 ;;      Temps:          4       0       0       0       0       0       0
  9619 ;;      Totals:         6       0       0       0       0       0       0
  9620 ;;Total ram usage:        6 bytes
  9621 ;; Hardware stack levels used:    1
  9622 ;; This function calls:
  9623 ;;		Nothing
  9624 ;; This function is called by:
  9625 ;;		_vfpfcnvrt
  9626 ;;		_atoi
  9627 ;; This function uses a non-reentrant model
  9628 ;;
  9629                           
  9630                           	psect	text33
  9631  004074                     __ptext33:
  9632                           	callstack 0
  9633  004074                     _isdigit:
  9634                           	callstack 26
  9635  004074  0ED0               	movlw	208
  9636  004076  6E03               	movwf	??_isdigit^0,c
  9637  004078  0EFF               	movlw	255
  9638  00407A  6E04               	movwf	(??_isdigit+1)^0,c
  9639  00407C  C001  F005         	movff	isdigit@c,??_isdigit+2
  9640  004080  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  9641  004084  5003               	movf	??_isdigit^0,w,c
  9642  004086  2605               	addwf	(??_isdigit+2)^0,f,c
  9643  004088  5004               	movf	(??_isdigit+1)^0,w,c
  9644  00408A  2206               	addwfc	(??_isdigit+3)^0,f,c
  9645  00408C  5006               	movf	(??_isdigit+3)^0,w,c
  9646  00408E  E10A               	bnz	u4280
  9647  004090  0E0A               	movlw	10
  9648  004092  5C05               	subwf	(??_isdigit+2)^0,w,c
  9649  004094  A0D8               	btfss	status,0,c
  9650  004096  EF4F  F020         	goto	u4281
  9651  00409A  EF52  F020         	goto	u4280
  9652  00409E                     u4281:
  9653  00409E  0E01               	movlw	1
  9654  0040A0  EF53  F020         	goto	u4290
  9655  0040A4                     u4280:
  9656  0040A4  0E00               	movlw	0
  9657  0040A6                     u4290:
  9658  0040A6  6E01               	movwf	?_isdigit^0,c
  9659  0040A8  6A02               	clrf	(?_isdigit+1)^0,c
  9660  0040AA  0012               	return		;funcret
  9661  0040AC                     __end_of_isdigit:
  9662                           	callstack 0
  9663                           
  9664 ;; *************** function _pwmSet1 *****************
  9665 ;; Defined at:
  9666 ;;		line 23 in file "pwm.c"
  9667 ;; Parameters:    Size  Location     Type
  9668 ;;  porcento        1    wreg     unsigned char 
  9669 ;; Auto vars:     Size  Location     Type
  9670 ;;  porcento        1    9[COMRAM] unsigned char 
  9671 ;;  val             2   10[COMRAM] unsigned int 
  9672 ;; Return value:  Size  Location     Type
  9673 ;;                  1    wreg      void 
  9674 ;; Registers used:
  9675 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9676 ;; Tracked objects:
  9677 ;;		On entry : 0/0
  9678 ;;		On exit  : 0/0
  9679 ;;		Unchanged: 0/0
  9680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9681 ;;      Params:         0       0       0       0       0       0       0
  9682 ;;      Locals:         3       0       0       0       0       0       0
  9683 ;;      Temps:          2       0       0       0       0       0       0
  9684 ;;      Totals:         5       0       0       0       0       0       0
  9685 ;;Total ram usage:        5 bytes
  9686 ;; Hardware stack levels used:    1
  9687 ;; Hardware stack levels required when called:    1
  9688 ;; This function calls:
  9689 ;;		___lwdiv
  9690 ;;		___wmul
  9691 ;; This function is called by:
  9692 ;;		_encher_tanque
  9693 ;; This function uses a non-reentrant model
  9694 ;;
  9695                           
  9696                           	psect	text34
  9697  003C2A                     __ptext34:
  9698                           	callstack 0
  9699  003C2A                     _pwmSet1:
  9700                           	callstack 28
  9701                           
  9702                           ;incstack = 0
  9703                           ;pwmSet1@porcento stored from wreg
  9704  003C2A  6E0A               	movwf	pwmSet1@porcento^0,c
  9705  003C2C                     
  9706                           ;pwm.c: 23: void pwmSet1(unsigned char porcento);pwm.c: 24: {;pwm.c: 30:  unsigned int v
      +                          al = ((unsigned int)porcento) *((*(volatile __near unsigned char*)0xFCB)+1);
  9707  003C2C  0E01               	movlw	1
  9708  003C2E  24CB               	addwf	203,w,c	;volatile
  9709  003C30  6E01               	movwf	___wmul@multiplier^0,c
  9710  003C32  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9711  003C34  0E00               	movlw	0
  9712  003C36  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  9713  003C38  C00A  F003         	movff	pwmSet1@porcento,___wmul@multiplicand
  9714  003C3C  6A04               	clrf	(___wmul@multiplicand+1)^0,c
  9715  003C3E  ECAF  F020         	call	___wmul	;wreg free
  9716  003C42  C001  F00B         	movff	?___wmul,pwmSet1@val
  9717  003C46  C002  F00C         	movff	?___wmul+1,pwmSet1@val+1
  9718  003C4A                     
  9719                           ;pwm.c: 31:  val = val / 25;
  9720  003C4A  C00B  F001         	movff	pwmSet1@val,___lwdiv@dividend
  9721  003C4E  C00C  F002         	movff	pwmSet1@val+1,___lwdiv@dividend+1
  9722  003C52  0E00               	movlw	0
  9723  003C54  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  9724  003C56  0E19               	movlw	25
  9725  003C58  6E03               	movwf	___lwdiv@divisor^0,c
  9726  003C5A  ECDB  F01D         	call	___lwdiv	;wreg free
  9727  003C5E  C001  F00B         	movff	?___lwdiv,pwmSet1@val
  9728  003C62  C002  F00C         	movff	?___lwdiv+1,pwmSet1@val+1
  9729  003C66                     
  9730                           ;pwm.c: 33:  val &= 0x03ff;
  9731  003C66  0EFF               	movlw	255
  9732  003C68  160B               	andwf	pwmSet1@val^0,f,c
  9733  003C6A  0E03               	movlw	3
  9734  003C6C  160C               	andwf	(pwmSet1@val+1)^0,f,c
  9735  003C6E                     
  9736                           ;pwm.c: 35:  (*(volatile __near unsigned char*)0xFBE) = val >> 2;
  9737  003C6E  C00B  F008         	movff	pwmSet1@val,??_pwmSet1
  9738  003C72  C00C  F009         	movff	pwmSet1@val+1,??_pwmSet1+1
  9739  003C76  90D8               	bcf	status,0,c
  9740  003C78  3209               	rrcf	(??_pwmSet1+1)^0,f,c
  9741  003C7A  3208               	rrcf	??_pwmSet1^0,f,c
  9742  003C7C  90D8               	bcf	status,0,c
  9743  003C7E  3209               	rrcf	(??_pwmSet1+1)^0,f,c
  9744  003C80  3208               	rrcf	??_pwmSet1^0,f,c
  9745  003C82  5008               	movf	??_pwmSet1^0,w,c
  9746  003C84  6EBE               	movwf	190,c	;volatile
  9747  003C86                     
  9748                           ;pwm.c: 37:  (*(volatile __near unsigned char*)0xFBD) |= (val & 0x0003) << 4;
  9749  003C86  C00B  F008         	movff	pwmSet1@val,??_pwmSet1
  9750  003C8A  0E03               	movlw	3
  9751  003C8C  1608               	andwf	??_pwmSet1^0,f,c
  9752  003C8E  3808               	swapf	??_pwmSet1^0,w,c
  9753  003C90  0BF0               	andlw	240
  9754  003C92  12BD               	iorwf	189,f,c	;volatile
  9755  003C94  0012               	return		;funcret
  9756  003C96                     __end_of_pwmSet1:
  9757                           	callstack 0
  9758                           
  9759 ;; *************** function ___wmul *****************
  9760 ;; Defined at:
  9761 ;;		line 15 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  9762 ;; Parameters:    Size  Location     Type
  9763 ;;  multiplier      2    0[COMRAM] unsigned int 
  9764 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9765 ;; Auto vars:     Size  Location     Type
  9766 ;;  product         2    4[COMRAM] unsigned int 
  9767 ;; Return value:  Size  Location     Type
  9768 ;;                  2    0[COMRAM] unsigned int 
  9769 ;; Registers used:
  9770 ;;		wreg, status,2, status,0, prodl, prodh
  9771 ;; Tracked objects:
  9772 ;;		On entry : 0/0
  9773 ;;		On exit  : 0/0
  9774 ;;		Unchanged: 0/0
  9775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9776 ;;      Params:         4       0       0       0       0       0       0
  9777 ;;      Locals:         2       0       0       0       0       0       0
  9778 ;;      Temps:          0       0       0       0       0       0       0
  9779 ;;      Totals:         6       0       0       0       0       0       0
  9780 ;;Total ram usage:        6 bytes
  9781 ;; Hardware stack levels used:    1
  9782 ;; This function calls:
  9783 ;;		Nothing
  9784 ;; This function is called by:
  9785 ;;		_pwmSet1
  9786 ;;		_encher_tanque
  9787 ;;		_atoi
  9788 ;;		_pwmSet2
  9789 ;; This function uses a non-reentrant model
  9790 ;;
  9791                           
  9792                           	psect	text35
  9793  00415E                     __ptext35:
  9794                           	callstack 0
  9795  00415E                     ___wmul:
  9796                           	callstack 25
  9797  00415E  5001               	movf	___wmul@multiplier^0,w,c
  9798  004160  0203               	mulwf	___wmul@multiplicand^0,c
  9799  004162  CFF3 F005          	movff	prodl,___wmul@product
  9800  004166  CFF4 F006          	movff	prodh,___wmul@product+1
  9801  00416A  5001               	movf	___wmul@multiplier^0,w,c
  9802  00416C  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9803  00416E  50F3               	movf	243,w,c
  9804  004170  2606               	addwf	(___wmul@product+1)^0,f,c
  9805  004172  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9806  004174  0203               	mulwf	___wmul@multiplicand^0,c
  9807  004176  50F3               	movf	243,w,c
  9808  004178  2606               	addwf	(___wmul@product+1)^0,f,c
  9809  00417A  C005  F001         	movff	___wmul@product,?___wmul
  9810  00417E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9811  004182  0012               	return		;funcret
  9812  004184                     __end_of___wmul:
  9813                           	callstack 0
  9814                           
  9815 ;; *************** function ___lwdiv *****************
  9816 ;; Defined at:
  9817 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\lwdiv.c"
  9818 ;; Parameters:    Size  Location     Type
  9819 ;;  dividend        2    0[COMRAM] unsigned int 
  9820 ;;  divisor         2    2[COMRAM] unsigned int 
  9821 ;; Auto vars:     Size  Location     Type
  9822 ;;  quotient        2    4[COMRAM] unsigned int 
  9823 ;;  counter         1    6[COMRAM] unsigned char 
  9824 ;; Return value:  Size  Location     Type
  9825 ;;                  2    0[COMRAM] unsigned int 
  9826 ;; Registers used:
  9827 ;;		wreg, status,2, status,0
  9828 ;; Tracked objects:
  9829 ;;		On entry : 0/0
  9830 ;;		On exit  : 0/0
  9831 ;;		Unchanged: 0/0
  9832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9833 ;;      Params:         4       0       0       0       0       0       0
  9834 ;;      Locals:         3       0       0       0       0       0       0
  9835 ;;      Temps:          0       0       0       0       0       0       0
  9836 ;;      Totals:         7       0       0       0       0       0       0
  9837 ;;Total ram usage:        7 bytes
  9838 ;; Hardware stack levels used:    1
  9839 ;; This function calls:
  9840 ;;		Nothing
  9841 ;; This function is called by:
  9842 ;;		_pwmSet1
  9843 ;;		_pwmSet2
  9844 ;; This function uses a non-reentrant model
  9845 ;;
  9846                           
  9847                           	psect	text36
  9848  003BB6                     __ptext36:
  9849                           	callstack 0
  9850  003BB6                     ___lwdiv:
  9851                           	callstack 28
  9852  003BB6  0E00               	movlw	0
  9853  003BB8  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  9854  003BBA  0E00               	movlw	0
  9855  003BBC  6E05               	movwf	___lwdiv@quotient^0,c
  9856  003BBE  5003               	movf	___lwdiv@divisor^0,w,c
  9857  003BC0  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9858  003BC2  B4D8               	btfsc	status,2,c
  9859  003BC4  EFE6  F01D         	goto	u5131
  9860  003BC8  EFE8  F01D         	goto	u5130
  9861  003BCC                     u5131:
  9862  003BCC  EF10  F01E         	goto	l696
  9863  003BD0                     u5130:
  9864  003BD0  0E01               	movlw	1
  9865  003BD2  6E07               	movwf	___lwdiv@counter^0,c
  9866  003BD4  EFF0  F01D         	goto	l4305
  9867  003BD8                     l4303:
  9868  003BD8  90D8               	bcf	status,0,c
  9869  003BDA  3603               	rlcf	___lwdiv@divisor^0,f,c
  9870  003BDC  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9871  003BDE  2A07               	incf	___lwdiv@counter^0,f,c
  9872  003BE0                     l4305:
  9873  003BE0  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  9874  003BE2  EFF5  F01D         	goto	u5141
  9875  003BE6  EFF7  F01D         	goto	u5140
  9876  003BEA                     u5141:
  9877  003BEA  EFEC  F01D         	goto	l4303
  9878  003BEE                     u5140:
  9879  003BEE                     l4307:
  9880  003BEE  90D8               	bcf	status,0,c
  9881  003BF0  3605               	rlcf	___lwdiv@quotient^0,f,c
  9882  003BF2  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9883  003BF4  5003               	movf	___lwdiv@divisor^0,w,c
  9884  003BF6  5C01               	subwf	___lwdiv@dividend^0,w,c
  9885  003BF8  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  9886  003BFA  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9887  003BFC  A0D8               	btfss	status,0,c
  9888  003BFE  EF03  F01E         	goto	u5151
  9889  003C02  EF05  F01E         	goto	u5150
  9890  003C06                     u5151:
  9891  003C06  EF0A  F01E         	goto	l4315
  9892  003C0A                     u5150:
  9893  003C0A  5003               	movf	___lwdiv@divisor^0,w,c
  9894  003C0C  5E01               	subwf	___lwdiv@dividend^0,f,c
  9895  003C0E  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  9896  003C10  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9897  003C12  8005               	bsf	___lwdiv@quotient^0,0,c
  9898  003C14                     l4315:
  9899  003C14  90D8               	bcf	status,0,c
  9900  003C16  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9901  003C18  3203               	rrcf	___lwdiv@divisor^0,f,c
  9902  003C1A  2E07               	decfsz	___lwdiv@counter^0,f,c
  9903  003C1C  EFF7  F01D         	goto	l4307
  9904  003C20                     l696:
  9905  003C20  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  9906  003C24  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9907  003C28  0012               	return		;funcret
  9908  003C2A                     __end_of___lwdiv:
  9909                           	callstack 0
  9910                           
  9911 ;; *************** function _pwmInit *****************
  9912 ;; Defined at:
  9913 ;;		line 59 in file "pwm.c"
  9914 ;; Parameters:    Size  Location     Type
  9915 ;;		None
  9916 ;; Auto vars:     Size  Location     Type
  9917 ;;		None
  9918 ;; Return value:  Size  Location     Type
  9919 ;;                  1    wreg      void 
  9920 ;; Registers used:
  9921 ;;		wreg, status,2, status,0
  9922 ;; Tracked objects:
  9923 ;;		On entry : 0/0
  9924 ;;		On exit  : 0/0
  9925 ;;		Unchanged: 0/0
  9926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9927 ;;      Params:         0       0       0       0       0       0       0
  9928 ;;      Locals:         0       0       0       0       0       0       0
  9929 ;;      Temps:          0       0       0       0       0       0       0
  9930 ;;      Totals:         0       0       0       0       0       0       0
  9931 ;;Total ram usage:        0 bytes
  9932 ;; Hardware stack levels used:    1
  9933 ;; This function calls:
  9934 ;;		Nothing
  9935 ;; This function is called by:
  9936 ;;		_encher_tanque
  9937 ;; This function uses a non-reentrant model
  9938 ;;
  9939                           
  9940                           	psect	text37
  9941  004184                     __ptext37:
  9942                           	callstack 0
  9943  004184                     _pwmInit:
  9944                           	callstack 29
  9945  004184                     
  9946                           ;pwm.c: 61:  (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<1));
  9947  004184  9294               	bcf	148,1,c	;volatile
  9948                           
  9949                           ;pwm.c: 62:  (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<2));
  9950  004186  9494               	bcf	148,2,c	;volatile
  9951  004188                     
  9952                           ;pwm.c: 64:  (*(volatile __near unsigned char*)0xFCA) |= 0b00000011;
  9953  004188  0E03               	movlw	3
  9954  00418A  12CA               	iorwf	202,f,c	;volatile
  9955  00418C                     
  9956                           ;pwm.c: 65:  (((*(volatile __near unsigned char*)0xFCA)) |= (1<<2));
  9957  00418C  84CA               	bsf	202,2,c	;volatile
  9958                           
  9959                           ;pwm.c: 68:  (*(volatile __near unsigned char*)0xFBD) |= 0b00001100;
  9960  00418E  0E0C               	movlw	12
  9961  004190  12BD               	iorwf	189,f,c	;volatile
  9962                           
  9963                           ;pwm.c: 69:  (*(volatile __near unsigned char*)0xFBA) |= 0b00001100;
  9964  004192  0E0C               	movlw	12
  9965  004194  12BA               	iorwf	186,f,c	;volatile
  9966  004196  0012               	return		;funcret
  9967  004198                     __end_of_pwmInit:
  9968                           	callstack 0
  9969                           
  9970 ;; *************** function _lcd_str *****************
  9971 ;; Defined at:
  9972 ;;		line 47 in file "lcd.c"
  9973 ;; Parameters:    Size  Location     Type
  9974 ;;  str             2    7[COMRAM] PTR const unsigned char 
  9975 ;;		 -> STR_30(14), STR_29(13), STR_28(9), STR_27(14), 
  9976 ;;		 -> STR_26(3), esvaziar_tanque@y(8), STR_24(11), STR_23(14), 
  9977 ;;		 -> STR_22(11), STR_21(11), STR_20(11), STR_19(3), 
  9978 ;;		 -> STR_18(8), ver_quantidade@y(8), STR_16(14), STR_15(13), 
  9979 ;;		 -> STR_14(9), STR_13(12), STR_12(3), encher_tanque@y(8), 
  9980 ;;		 -> STR_10(11), STR_9(16), STR_8(11), STR_7(11), 
  9981 ;;		 -> STR_6(12), STR_5(19), STR_4(15), STR_3(14), 
  9982 ;;		 -> STR_2(11), STR_1(17), 
  9983 ;; Auto vars:     Size  Location     Type
  9984 ;;  i               1   11[COMRAM] unsigned char 
  9985 ;; Return value:  Size  Location     Type
  9986 ;;                  1    wreg      void 
  9987 ;; Registers used:
  9988 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9989 ;; Tracked objects:
  9990 ;;		On entry : 0/0
  9991 ;;		On exit  : 0/0
  9992 ;;		Unchanged: 0/0
  9993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9994 ;;      Params:         2       0       0       0       0       0       0
  9995 ;;      Locals:         1       0       0       0       0       0       0
  9996 ;;      Temps:          2       0       0       0       0       0       0
  9997 ;;      Totals:         5       0       0       0       0       0       0
  9998 ;;Total ram usage:        5 bytes
  9999 ;; Hardware stack levels used:    1
 10000 ;; Hardware stack levels required when called:    2
 10001 ;; This function calls:
 10002 ;;		_lcd_dat
 10003 ;; This function is called by:
 10004 ;;		_main
 10005 ;;		_encher_tanque
 10006 ;;		_ver_quantidade
 10007 ;;		_esvaziar_tanque
 10008 ;; This function uses a non-reentrant model
 10009 ;;
 10010                           
 10011                           	psect	text38
 10012  003B3E                     __ptext38:
 10013                           	callstack 0
 10014  003B3E                     _lcd_str:
 10015                           	callstack 27
 10016  003B3E                     
 10017                           ;lcd.c: 48:     unsigned char i = 0;
 10018  003B3E  0E00               	movlw	0
 10019  003B40  6E0C               	movwf	lcd_str@i^0,c
 10020                           
 10021                           ;lcd.c: 50:     while (str[i] != 0) {
 10022  003B42  EFBC  F01D         	goto	l4347
 10023  003B46                     l4343:
 10024                           
 10025                           ;lcd.c: 51:         lcd_dat(str[i]);
 10026  003B46  500C               	movf	lcd_str@i^0,w,c
 10027  003B48  2408               	addwf	lcd_str@str^0,w,c
 10028  003B4A  6E0A               	movwf	??_lcd_str^0,c
 10029  003B4C  0E00               	movlw	0
 10030  003B4E  2009               	addwfc	(lcd_str@str+1)^0,w,c
 10031  003B50  6E0B               	movwf	(??_lcd_str+1)^0,c
 10032  003B52  C00A  FFF6         	movff	??_lcd_str,tblptrl
 10033  003B56  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
 10034  003B5A  6AF8               	clrf	tblptru,c
 10035  003B5C  0E05               	movlw	(high __ramtop+-1)
 10036  003B5E  64F7               	cpfsgt	tblptrh,c
 10037  003B60  D003               	bra	u5177
 10038  003B62  0008               	tblrd		*
 10039  003B64  50F5               	movf	tablat,w,c
 10040  003B66  D005               	bra	u5170
 10041  003B68                     u5177:
 10042  003B68  CFF6 FFE9          	movff	tblptrl,fsr0l
 10043  003B6C  CFF7 FFEA          	movff	tblptrh,fsr0h
 10044  003B70  50EF               	movf	indf0,w,c
 10045  003B72                     u5170:
 10046  003B72  EC71  F020         	call	_lcd_dat
 10047  003B76                     
 10048                           ;lcd.c: 52:         i++;
 10049  003B76  2A0C               	incf	lcd_str@i^0,f,c
 10050  003B78                     l4347:
 10051                           
 10052                           ;lcd.c: 50:     while (str[i] != 0) {
 10053  003B78  500C               	movf	lcd_str@i^0,w,c
 10054  003B7A  2408               	addwf	lcd_str@str^0,w,c
 10055  003B7C  6E0A               	movwf	??_lcd_str^0,c
 10056  003B7E  0E00               	movlw	0
 10057  003B80  2009               	addwfc	(lcd_str@str+1)^0,w,c
 10058  003B82  6E0B               	movwf	(??_lcd_str+1)^0,c
 10059  003B84  C00A  FFF6         	movff	??_lcd_str,tblptrl
 10060  003B88  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
 10061  003B8C  6AF8               	clrf	tblptru,c
 10062  003B8E  0E05               	movlw	(high __ramtop+-1)
 10063  003B90  64F7               	cpfsgt	tblptrh,c
 10064  003B92  D003               	bra	u5187
 10065  003B94  0008               	tblrd		*
 10066  003B96  50F5               	movf	tablat,w,c
 10067  003B98  D005               	bra	u5180
 10068  003B9A                     u5187:
 10069  003B9A  CFF6 FFE9          	movff	tblptrl,fsr0l
 10070  003B9E  CFF7 FFEA          	movff	tblptrh,fsr0h
 10071  003BA2  50EF               	movf	indf0,w,c
 10072  003BA4                     u5180:
 10073  003BA4  0900               	iorlw	0
 10074  003BA6  A4D8               	btfss	status,2,c
 10075  003BA8  EFD8  F01D         	goto	u5191
 10076  003BAC  EFDA  F01D         	goto	u5190
 10077  003BB0                     u5191:
 10078  003BB0  EFA3  F01D         	goto	l4343
 10079  003BB4                     u5190:
 10080  003BB4  0012               	return		;funcret
 10081  003BB6                     __end_of_lcd_str:
 10082                           	callstack 0
 10083                           
 10084 ;; *************** function _lcd_dat *****************
 10085 ;; Defined at:
 10086 ;;		line 19 in file "lcd.c"
 10087 ;; Parameters:    Size  Location     Type
 10088 ;;  val             1    wreg     unsigned char 
 10089 ;; Auto vars:     Size  Location     Type
 10090 ;;  val             1    6[COMRAM] unsigned char 
 10091 ;; Return value:  Size  Location     Type
 10092 ;;                  1    wreg      void 
 10093 ;; Registers used:
 10094 ;;		wreg, status,2, status,0, cstack
 10095 ;; Tracked objects:
 10096 ;;		On entry : 0/0
 10097 ;;		On exit  : 0/0
 10098 ;;		Unchanged: 0/0
 10099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10100 ;;      Params:         0       0       0       0       0       0       0
 10101 ;;      Locals:         1       0       0       0       0       0       0
 10102 ;;      Temps:          0       0       0       0       0       0       0
 10103 ;;      Totals:         1       0       0       0       0       0       0
 10104 ;;Total ram usage:        1 bytes
 10105 ;; Hardware stack levels used:    1
 10106 ;; Hardware stack levels required when called:    1
 10107 ;; This function calls:
 10108 ;;		_atraso_ms
 10109 ;;		_lcd_wr
 10110 ;; This function is called by:
 10111 ;;		_lcd_str
 10112 ;;		_encher_tanque
 10113 ;; This function uses a non-reentrant model
 10114 ;;
 10115                           
 10116                           	psect	text39
 10117  0040E2                     __ptext39:
 10118                           	callstack 0
 10119  0040E2                     _lcd_dat:
 10120                           	callstack 27
 10121                           
 10122                           ;incstack = 0
 10123                           ;lcd_dat@val stored from wreg
 10124  0040E2  6E07               	movwf	lcd_dat@val^0,c
 10125  0040E4                     
 10126                           ;lcd.c: 20:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
 10127  0040E4  8284               	bsf	132,1,c	;volatile
 10128  0040E6                     
 10129                           ;lcd.c: 21:     lcd_wr(val);
 10130  0040E6  5007               	movf	lcd_dat@val^0,w,c
 10131  0040E8  ECD1  F020         	call	_lcd_wr
 10132  0040EC                     
 10133                           ;lcd.c: 22:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<2));
 10134  0040EC  8484               	bsf	132,2,c	;volatile
 10135  0040EE                     
 10136                           ;lcd.c: 23:     atraso_ms(3);
 10137  0040EE  0E00               	movlw	0
 10138  0040F0  6E02               	movwf	(atraso_ms@t+1)^0,c
 10139  0040F2  0E03               	movlw	3
 10140  0040F4  6E01               	movwf	atraso_ms@t^0,c
 10141  0040F6  EC4B  F01E         	call	_atraso_ms	;wreg free
 10142  0040FA                     
 10143                           ;lcd.c: 24:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
 10144  0040FA  9284               	bcf	132,1,c	;volatile
 10145  0040FC                     
 10146                           ;lcd.c: 25:     atraso_ms(3);
 10147  0040FC  0E00               	movlw	0
 10148  0040FE  6E02               	movwf	(atraso_ms@t+1)^0,c
 10149  004100  0E03               	movlw	3
 10150  004102  6E01               	movwf	atraso_ms@t^0,c
 10151  004104  EC4B  F01E         	call	_atraso_ms	;wreg free
 10152  004108                     
 10153                           ;lcd.c: 26:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
 10154  004108  8284               	bsf	132,1,c	;volatile
 10155  00410A  0012               	return		;funcret
 10156  00410C                     __end_of_lcd_dat:
 10157                           	callstack 0
 10158                           
 10159 ;; *************** function _lcd_cmd *****************
 10160 ;; Defined at:
 10161 ;;		line 9 in file "lcd.c"
 10162 ;; Parameters:    Size  Location     Type
 10163 ;;  val             1    wreg     unsigned char 
 10164 ;; Auto vars:     Size  Location     Type
 10165 ;;  val             1    6[COMRAM] unsigned char 
 10166 ;; Return value:  Size  Location     Type
 10167 ;;                  1    wreg      void 
 10168 ;; Registers used:
 10169 ;;		wreg, status,2, status,0, cstack
 10170 ;; Tracked objects:
 10171 ;;		On entry : 0/0
 10172 ;;		On exit  : 0/0
 10173 ;;		Unchanged: 0/0
 10174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10175 ;;      Params:         0       0       0       0       0       0       0
 10176 ;;      Locals:         1       0       0       0       0       0       0
 10177 ;;      Temps:          0       0       0       0       0       0       0
 10178 ;;      Totals:         1       0       0       0       0       0       0
 10179 ;;Total ram usage:        1 bytes
 10180 ;; Hardware stack levels used:    1
 10181 ;; Hardware stack levels required when called:    1
 10182 ;; This function calls:
 10183 ;;		_atraso_ms
 10184 ;;		_lcd_wr
 10185 ;; This function is called by:
 10186 ;;		_lcd_init
 10187 ;;		_main
 10188 ;;		_encher_tanque
 10189 ;;		_ver_quantidade
 10190 ;;		_esvaziar_tanque
 10191 ;; This function uses a non-reentrant model
 10192 ;;
 10193                           
 10194                           	psect	text40
 10195  00410C                     __ptext40:
 10196                           	callstack 0
 10197  00410C                     _lcd_cmd:
 10198                           	callstack 28
 10199                           
 10200                           ;incstack = 0
 10201                           ;lcd_cmd@val stored from wreg
 10202  00410C  6E07               	movwf	lcd_cmd@val^0,c
 10203  00410E                     
 10204                           ;lcd.c: 10:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
 10205  00410E  8284               	bsf	132,1,c	;volatile
 10206  004110                     
 10207                           ;lcd.c: 11:     lcd_wr(val);
 10208  004110  5007               	movf	lcd_cmd@val^0,w,c
 10209  004112  ECD1  F020         	call	_lcd_wr
 10210  004116                     
 10211                           ;lcd.c: 12:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<2));
 10212  004116  9484               	bcf	132,2,c	;volatile
 10213  004118                     
 10214                           ;lcd.c: 13:     atraso_ms(3);
 10215  004118  0E00               	movlw	0
 10216  00411A  6E02               	movwf	(atraso_ms@t+1)^0,c
 10217  00411C  0E03               	movlw	3
 10218  00411E  6E01               	movwf	atraso_ms@t^0,c
 10219  004120  EC4B  F01E         	call	_atraso_ms	;wreg free
 10220  004124                     
 10221                           ;lcd.c: 14:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
 10222  004124  9284               	bcf	132,1,c	;volatile
 10223  004126                     
 10224                           ;lcd.c: 15:     atraso_ms(3);
 10225  004126  0E00               	movlw	0
 10226  004128  6E02               	movwf	(atraso_ms@t+1)^0,c
 10227  00412A  0E03               	movlw	3
 10228  00412C  6E01               	movwf	atraso_ms@t^0,c
 10229  00412E  EC4B  F01E         	call	_atraso_ms	;wreg free
 10230  004132                     
 10231                           ;lcd.c: 16:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
 10232  004132  8284               	bsf	132,1,c	;volatile
 10233  004134  0012               	return		;funcret
 10234  004136                     __end_of_lcd_cmd:
 10235                           	callstack 0
 10236                           
 10237 ;; *************** function _lcd_wr *****************
 10238 ;; Defined at:
 10239 ;;		line 5 in file "lcd.c"
 10240 ;; Parameters:    Size  Location     Type
 10241 ;;  val             1    wreg     unsigned char 
 10242 ;; Auto vars:     Size  Location     Type
 10243 ;;  val             1    0[COMRAM] unsigned char 
 10244 ;; Return value:  Size  Location     Type
 10245 ;;                  1    wreg      void 
 10246 ;; Registers used:
 10247 ;;		wreg
 10248 ;; Tracked objects:
 10249 ;;		On entry : 0/0
 10250 ;;		On exit  : 0/0
 10251 ;;		Unchanged: 0/0
 10252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10253 ;;      Params:         0       0       0       0       0       0       0
 10254 ;;      Locals:         1       0       0       0       0       0       0
 10255 ;;      Temps:          0       0       0       0       0       0       0
 10256 ;;      Totals:         1       0       0       0       0       0       0
 10257 ;;Total ram usage:        1 bytes
 10258 ;; Hardware stack levels used:    1
 10259 ;; This function calls:
 10260 ;;		Nothing
 10261 ;; This function is called by:
 10262 ;;		_lcd_cmd
 10263 ;;		_lcd_dat
 10264 ;; This function uses a non-reentrant model
 10265 ;;
 10266                           
 10267                           	psect	text41
 10268  0041A2                     __ptext41:
 10269                           	callstack 0
 10270  0041A2                     _lcd_wr:
 10271                           	callstack 27
 10272                           
 10273                           ;incstack = 0
 10274                           ;lcd_wr@val stored from wreg
 10275  0041A2  6E01               	movwf	lcd_wr@val^0,c
 10276  0041A4                     
 10277                           ;lcd.c: 6:     (*(volatile __near unsigned char*)0xF83) = val;
 10278  0041A4  C001  FF83         	movff	lcd_wr@val,3971	;volatile
 10279  0041A8  0012               	return		;funcret
 10280  0041AA                     __end_of_lcd_wr:
 10281                           	callstack 0
 10282                           
 10283 ;; *************** function _atraso_ms *****************
 10284 ;; Defined at:
 10285 ;;		line 3 in file "delay.c"
 10286 ;; Parameters:    Size  Location     Type
 10287 ;;  t               2    0[COMRAM] int 
 10288 ;; Auto vars:     Size  Location     Type
 10289 ;;  i               2    2[COMRAM] volatile unsigned int 
 10290 ;;  k               1    5[COMRAM] volatile unsigned char 
 10291 ;;  j               1    4[COMRAM] volatile unsigned char 
 10292 ;; Return value:  Size  Location     Type
 10293 ;;                  1    wreg      void 
 10294 ;; Registers used:
 10295 ;;		wreg, status,2, status,0
 10296 ;; Tracked objects:
 10297 ;;		On entry : 0/0
 10298 ;;		On exit  : 0/0
 10299 ;;		Unchanged: 0/0
 10300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10301 ;;      Params:         2       0       0       0       0       0       0
 10302 ;;      Locals:         4       0       0       0       0       0       0
 10303 ;;      Temps:          0       0       0       0       0       0       0
 10304 ;;      Totals:         6       0       0       0       0       0       0
 10305 ;;Total ram usage:        6 bytes
 10306 ;; Hardware stack levels used:    1
 10307 ;; This function calls:
 10308 ;;		Nothing
 10309 ;; This function is called by:
 10310 ;;		_lcd_cmd
 10311 ;;		_lcd_dat
 10312 ;;		_lcd_init
 10313 ;;		_tc_tecla
 10314 ;;		_main
 10315 ;;		_encher_tanque
 10316 ;;		_esvaziar_tanque
 10317 ;; This function uses a non-reentrant model
 10318 ;;
 10319                           
 10320                           	psect	text42
 10321  003C96                     __ptext42:
 10322                           	callstack 0
 10323  003C96                     _atraso_ms:
 10324                           	callstack 27
 10325  003C96                     
 10326                           ;delay.c: 4:     volatile unsigned char j, k;;delay.c: 5:     volatile unsigned int i;;d
      +                          elay.c: 7:     for (i = 0; i < (t); i++) {
 10327  003C96  0E00               	movlw	0
 10328  003C98  6E04               	movwf	(atraso_ms@i+1)^0,c	;volatile
 10329  003C9A  0E00               	movlw	0
 10330  003C9C  6E03               	movwf	atraso_ms@i^0,c	;volatile
 10331  003C9E  EF71  F01E         	goto	l4189
 10332  003CA2                     l4167:
 10333                           
 10334                           ;delay.c: 8:         for (j = 0; j < 41; j++) {
 10335  003CA2  0E00               	movlw	0
 10336  003CA4  6E05               	movwf	atraso_ms@j^0,c	;volatile
 10337  003CA6                     l4169:
 10338  003CA6  0E28               	movlw	40
 10339  003CA8  6405               	cpfsgt	atraso_ms@j^0,c	;volatile
 10340  003CAA  EF59  F01E         	goto	u4961
 10341  003CAE  EF5B  F01E         	goto	u4960
 10342  003CB2                     u4961:
 10343  003CB2  EF5D  F01E         	goto	l4173
 10344  003CB6                     u4960:
 10345  003CB6  EF6F  F01E         	goto	l4187
 10346  003CBA                     l4173:
 10347                           
 10348                           ;delay.c: 9:             for (k = 0; k < 3; k++);
 10349  003CBA  0E00               	movlw	0
 10350  003CBC  6E06               	movwf	atraso_ms@k^0,c	;volatile
 10351  003CBE                     l4175:
 10352  003CBE  0E02               	movlw	2
 10353  003CC0  6406               	cpfsgt	atraso_ms@k^0,c	;volatile
 10354  003CC2  EF65  F01E         	goto	u4971
 10355  003CC6  EF67  F01E         	goto	u4970
 10356  003CCA                     u4971:
 10357  003CCA  EF69  F01E         	goto	l4179
 10358  003CCE                     u4970:
 10359  003CCE  EF6C  F01E         	goto	l4183
 10360  003CD2                     l4179:
 10361  003CD2  2A06               	incf	atraso_ms@k^0,f,c	;volatile
 10362  003CD4  EF5F  F01E         	goto	l4175
 10363  003CD8                     l4183:
 10364                           
 10365                           ;delay.c: 10:         }
 10366  003CD8  2A05               	incf	atraso_ms@j^0,f,c	;volatile
 10367  003CDA  EF53  F01E         	goto	l4169
 10368  003CDE                     l4187:
 10369                           
 10370                           ;delay.c: 11:     }
 10371  003CDE  4A03               	infsnz	atraso_ms@i^0,f,c	;volatile
 10372  003CE0  2A04               	incf	(atraso_ms@i+1)^0,f,c	;volatile
 10373  003CE2                     l4189:
 10374  003CE2  5001               	movf	atraso_ms@t^0,w,c
 10375  003CE4  5C03               	subwf	atraso_ms@i^0,w,c	;volatile
 10376  003CE6  5002               	movf	(atraso_ms@t+1)^0,w,c
 10377  003CE8  5804               	subwfb	(atraso_ms@i+1)^0,w,c	;volatile
 10378  003CEA  A0D8               	btfss	status,0,c
 10379  003CEC  EF7A  F01E         	goto	u4981
 10380  003CF0  EF7C  F01E         	goto	u4980
 10381  003CF4                     u4981:
 10382  003CF4  EF51  F01E         	goto	l4167
 10383  003CF8                     u4980:
 10384  003CF8  0012               	return		;funcret
 10385  003CFA                     __end_of_atraso_ms:
 10386                           	callstack 0
 10387                           
 10388 ;; *************** function ___xxtofl *****************
 10389 ;; Defined at:
 10390 ;;		line 10 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
 10391 ;; Parameters:    Size  Location     Type
 10392 ;;  sign            1    wreg     unsigned char 
 10393 ;;  val             4    0[COMRAM] long 
 10394 ;; Auto vars:     Size  Location     Type
 10395 ;;  sign            1    8[COMRAM] unsigned char 
 10396 ;;  arg             4   10[COMRAM] unsigned long 
 10397 ;;  exp             1    9[COMRAM] unsigned char 
 10398 ;; Return value:  Size  Location     Type
 10399 ;;                  4    0[COMRAM] unsigned char 
 10400 ;; Registers used:
 10401 ;;		wreg, status,2, status,0
 10402 ;; Tracked objects:
 10403 ;;		On entry : 0/0
 10404 ;;		On exit  : 0/0
 10405 ;;		Unchanged: 0/0
 10406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10407 ;;      Params:         4       0       0       0       0       0       0
 10408 ;;      Locals:         6       0       0       0       0       0       0
 10409 ;;      Temps:          4       0       0       0       0       0       0
 10410 ;;      Totals:        14       0       0       0       0       0       0
 10411 ;;Total ram usage:       14 bytes
 10412 ;; Hardware stack levels used:    1
 10413 ;; This function calls:
 10414 ;;		Nothing
 10415 ;; This function is called by:
 10416 ;;		_encher_tanque
 10417 ;; This function uses a non-reentrant model
 10418 ;;
 10419                           
 10420                           	psect	text43
 10421  002FB6                     __ptext43:
 10422                           	callstack 0
 10423  002FB6                     ___xxtofl:
 10424                           	callstack 29
 10425                           
 10426                           ;incstack = 0
 10427                           ;___xxtofl@sign stored from wreg
 10428  002FB6  6E09               	movwf	___xxtofl@sign^0,c
 10429  002FB8  5009               	movf	___xxtofl@sign^0,w,c
 10430  002FBA  B4D8               	btfsc	status,2,c
 10431  002FBC  EFE2  F017         	goto	u5381
 10432  002FC0  EFE4  F017         	goto	u5380
 10433  002FC4                     u5381:
 10434  002FC4  EF06  F018         	goto	l860
 10435  002FC8                     u5380:
 10436  002FC8  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 10437  002FCA  EFEB  F017         	goto	u5390
 10438  002FCE  EFE9  F017         	goto	u5391
 10439  002FD2                     u5391:
 10440  002FD2  EF06  F018         	goto	l860
 10441  002FD6                     u5390:
 10442  002FD6  C001  F005         	movff	___xxtofl@val,??___xxtofl
 10443  002FDA  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 10444  002FDE  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 10445  002FE2  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 10446  002FE6  1E05               	comf	??___xxtofl^0,f,c
 10447  002FE8  1E06               	comf	(??___xxtofl+1)^0,f,c
 10448  002FEA  1E07               	comf	(??___xxtofl+2)^0,f,c
 10449  002FEC  1E08               	comf	(??___xxtofl+3)^0,f,c
 10450  002FEE  2A05               	incf	??___xxtofl^0,f,c
 10451  002FF0  0E00               	movlw	0
 10452  002FF2  2206               	addwfc	(??___xxtofl+1)^0,f,c
 10453  002FF4  2207               	addwfc	(??___xxtofl+2)^0,f,c
 10454  002FF6  2208               	addwfc	(??___xxtofl+3)^0,f,c
 10455  002FF8  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 10456  002FFC  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 10457  003000  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 10458  003004  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 10459  003008  EF0E  F018         	goto	l4457
 10460  00300C                     l860:
 10461  00300C  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 10462  003010  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10463  003014  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10464  003018  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10465  00301C                     l4457:
 10466  00301C  5001               	movf	___xxtofl@val^0,w,c
 10467  00301E  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 10468  003020  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 10469  003022  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 10470  003024  A4D8               	btfss	status,2,c
 10471  003026  EF17  F018         	goto	u5401
 10472  00302A  EF19  F018         	goto	u5400
 10473  00302E                     u5401:
 10474  00302E  EF23  F018         	goto	l4463
 10475  003032                     u5400:
 10476  003032  0E00               	movlw	0
 10477  003034  6E01               	movwf	?___xxtofl^0,c
 10478  003036  0E00               	movlw	0
 10479  003038  6E02               	movwf	(?___xxtofl+1)^0,c
 10480  00303A  0E00               	movlw	0
 10481  00303C  6E03               	movwf	(?___xxtofl+2)^0,c
 10482  00303E  0E00               	movlw	0
 10483  003040  6E04               	movwf	(?___xxtofl+3)^0,c
 10484  003042  EFB4  F018         	goto	l863
 10485  003046                     l4463:
 10486  003046  0E96               	movlw	150
 10487  003048  6E0A               	movwf	___xxtofl@exp^0,c
 10488  00304A  EF2D  F018         	goto	l4467
 10489  00304E                     l4465:
 10490  00304E  2A0A               	incf	___xxtofl@exp^0,f,c
 10491  003050  90D8               	bcf	status,0,c
 10492  003052  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 10493  003054  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 10494  003056  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 10495  003058  320B               	rrcf	___xxtofl@arg^0,f,c
 10496  00305A                     l4467:
 10497  00305A  0E00               	movlw	0
 10498  00305C  140B               	andwf	___xxtofl@arg^0,w,c
 10499  00305E  6E05               	movwf	??___xxtofl^0,c
 10500  003060  0E00               	movlw	0
 10501  003062  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 10502  003064  6E06               	movwf	(??___xxtofl+1)^0,c
 10503  003066  0E00               	movlw	0
 10504  003068  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 10505  00306A  6E07               	movwf	(??___xxtofl+2)^0,c
 10506  00306C  0EFE               	movlw	254
 10507  00306E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 10508  003070  6E08               	movwf	(??___xxtofl+3)^0,c
 10509  003072  5005               	movf	??___xxtofl^0,w,c
 10510  003074  1006               	iorwf	(??___xxtofl+1)^0,w,c
 10511  003076  1007               	iorwf	(??___xxtofl+2)^0,w,c
 10512  003078  1008               	iorwf	(??___xxtofl+3)^0,w,c
 10513  00307A  A4D8               	btfss	status,2,c
 10514  00307C  EF42  F018         	goto	u5411
 10515  003080  EF44  F018         	goto	u5410
 10516  003084                     u5411:
 10517  003084  EF27  F018         	goto	l4465
 10518  003088                     u5410:
 10519  003088  EF52  F018         	goto	l867
 10520  00308C                     l4469:
 10521  00308C  2A0A               	incf	___xxtofl@exp^0,f,c
 10522  00308E  0E01               	movlw	1
 10523  003090  260B               	addwf	___xxtofl@arg^0,f,c
 10524  003092  0E00               	movlw	0
 10525  003094  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 10526  003096  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 10527  003098  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 10528  00309A  90D8               	bcf	status,0,c
 10529  00309C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 10530  00309E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 10531  0030A0  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 10532  0030A2  320B               	rrcf	___xxtofl@arg^0,f,c
 10533  0030A4                     l867:
 10534  0030A4  0E00               	movlw	0
 10535  0030A6  140B               	andwf	___xxtofl@arg^0,w,c
 10536  0030A8  6E05               	movwf	??___xxtofl^0,c
 10537  0030AA  0E00               	movlw	0
 10538  0030AC  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 10539  0030AE  6E06               	movwf	(??___xxtofl+1)^0,c
 10540  0030B0  0E00               	movlw	0
 10541  0030B2  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 10542  0030B4  6E07               	movwf	(??___xxtofl+2)^0,c
 10543  0030B6  0EFF               	movlw	255
 10544  0030B8  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 10545  0030BA  6E08               	movwf	(??___xxtofl+3)^0,c
 10546  0030BC  5005               	movf	??___xxtofl^0,w,c
 10547  0030BE  1006               	iorwf	(??___xxtofl+1)^0,w,c
 10548  0030C0  1007               	iorwf	(??___xxtofl+2)^0,w,c
 10549  0030C2  1008               	iorwf	(??___xxtofl+3)^0,w,c
 10550  0030C4  A4D8               	btfss	status,2,c
 10551  0030C6  EF67  F018         	goto	u5421
 10552  0030CA  EF69  F018         	goto	u5420
 10553  0030CE                     u5421:
 10554  0030CE  EF46  F018         	goto	l4469
 10555  0030D2                     u5420:
 10556  0030D2  EF71  F018         	goto	l4477
 10557  0030D6                     l4475:
 10558  0030D6  060A               	decf	___xxtofl@exp^0,f,c
 10559  0030D8  90D8               	bcf	status,0,c
 10560  0030DA  360B               	rlcf	___xxtofl@arg^0,f,c
 10561  0030DC  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 10562  0030DE  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 10563  0030E0  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 10564  0030E2                     l4477:
 10565  0030E2  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 10566  0030E4  EF76  F018         	goto	u5431
 10567  0030E8  EF78  F018         	goto	u5430
 10568  0030EC                     u5431:
 10569  0030EC  EF80  F018         	goto	l874
 10570  0030F0                     u5430:
 10571  0030F0  0E02               	movlw	2
 10572  0030F2  600A               	cpfslt	___xxtofl@exp^0,c
 10573  0030F4  EF7E  F018         	goto	u5441
 10574  0030F8  EF80  F018         	goto	u5440
 10575  0030FC                     u5441:
 10576  0030FC  EF6B  F018         	goto	l4475
 10577  003100                     u5440:
 10578  003100                     l874:
 10579  003100  B00A               	btfsc	___xxtofl@exp^0,0,c
 10580  003102  EF85  F018         	goto	u5451
 10581  003106  EF87  F018         	goto	u5450
 10582  00310A                     u5451:
 10583  00310A  EF88  F018         	goto	l4483
 10584  00310E                     u5450:
 10585  00310E  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 10586  003110                     l4483:
 10587  003110  90D8               	bcf	status,0,c
 10588  003112  320A               	rrcf	___xxtofl@exp^0,f,c
 10589  003114  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 10590  003118  6A06               	clrf	(??___xxtofl+1)^0,c
 10591  00311A  6A07               	clrf	(??___xxtofl+2)^0,c
 10592  00311C  6A08               	clrf	(??___xxtofl+3)^0,c
 10593  00311E  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 10594  003122  6A07               	clrf	(??___xxtofl+2)^0,c
 10595  003124  6A06               	clrf	(??___xxtofl+1)^0,c
 10596  003126  6A05               	clrf	??___xxtofl^0,c
 10597  003128  5005               	movf	??___xxtofl^0,w,c
 10598  00312A  120B               	iorwf	___xxtofl@arg^0,f,c
 10599  00312C  5006               	movf	(??___xxtofl+1)^0,w,c
 10600  00312E  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 10601  003130  5007               	movf	(??___xxtofl+2)^0,w,c
 10602  003132  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 10603  003134  5008               	movf	(??___xxtofl+3)^0,w,c
 10604  003136  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 10605  003138  5009               	movf	___xxtofl@sign^0,w,c
 10606  00313A  B4D8               	btfsc	status,2,c
 10607  00313C  EFA2  F018         	goto	u5461
 10608  003140  EFA4  F018         	goto	u5460
 10609  003144                     u5461:
 10610  003144  EFAC  F018         	goto	l4493
 10611  003148                     u5460:
 10612  003148  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 10613  00314A  EFAB  F018         	goto	u5470
 10614  00314E  EFA9  F018         	goto	u5471
 10615  003152                     u5471:
 10616  003152  EFAC  F018         	goto	l4493
 10617  003156                     u5470:
 10618  003156  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 10619  003158                     l4493:
 10620  003158  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 10621  00315C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 10622  003160  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 10623  003164  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 10624  003168                     l863:
 10625  003168  0012               	return		;funcret
 10626  00316A                     __end_of___xxtofl:
 10627                           	callstack 0
 10628                           
 10629                           	psect	rparam
 10630  0000                     
 10631                           	psect	idloc
 10632                           
 10633                           ;Config register IDLOC0 @ 0x200000
 10634                           ;	unspecified, using default values
 10635  200000                     	org	2097152
 10636  200000  FF                 	db	255
 10637                           
 10638                           ;Config register IDLOC1 @ 0x200001
 10639                           ;	unspecified, using default values
 10640  200001                     	org	2097153
 10641  200001  FF                 	db	255
 10642                           
 10643                           ;Config register IDLOC2 @ 0x200002
 10644                           ;	unspecified, using default values
 10645  200002                     	org	2097154
 10646  200002  FF                 	db	255
 10647                           
 10648                           ;Config register IDLOC3 @ 0x200003
 10649                           ;	unspecified, using default values
 10650  200003                     	org	2097155
 10651  200003  FF                 	db	255
 10652                           
 10653                           ;Config register IDLOC4 @ 0x200004
 10654                           ;	unspecified, using default values
 10655  200004                     	org	2097156
 10656  200004  FF                 	db	255
 10657                           
 10658                           ;Config register IDLOC5 @ 0x200005
 10659                           ;	unspecified, using default values
 10660  200005                     	org	2097157
 10661  200005  FF                 	db	255
 10662                           
 10663                           ;Config register IDLOC6 @ 0x200006
 10664                           ;	unspecified, using default values
 10665  200006                     	org	2097158
 10666  200006  FF                 	db	255
 10667                           
 10668                           ;Config register IDLOC7 @ 0x200007
 10669                           ;	unspecified, using default values
 10670  200007                     	org	2097159
 10671  200007  FF                 	db	255
 10672                           
 10673                           	psect	config
 10674                           
 10675                           ; Padding undefined space
 10676  300000                     	org	3145728
 10677  300000  FF                 	db	255
 10678                           
 10679                           ;Config register CONFIG1H @ 0x300001
 10680                           ;	Oscillator Selection bits
 10681                           ;	OSC = HS, HS oscillator
 10682                           ;	Fail-Safe Clock Monitor Enable bit
 10683                           ;	FCMEN = 0x0, unprogrammed default
 10684                           ;	Internal/External Oscillator Switchover bit
 10685                           ;	IESO = 0x0, unprogrammed default
 10686  300001                     	org	3145729
 10687  300001  02                 	db	2
 10688                           
 10689                           ;Config register CONFIG2L @ 0x300002
 10690                           ;	unspecified, using default values
 10691                           ;	Power-up Timer Enable bit
 10692                           ;	PWRT = 0x1, unprogrammed default
 10693                           ;	Brown-out Reset Enable bits
 10694                           ;	BOREN = 0x3, unprogrammed default
 10695                           ;	Brown Out Reset Voltage bits
 10696                           ;	BORV = 0x3, unprogrammed default
 10697  300002                     	org	3145730
 10698  300002  1F                 	db	31
 10699                           
 10700                           ;Config register CONFIG2H @ 0x300003
 10701                           ;	Watchdog Timer Enable bit
 10702                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10703                           ;	Watchdog Timer Postscale Select bits
 10704                           ;	WDTPS = 1, 1:1
 10705  300003                     	org	3145731
 10706  300003  00                 	db	0
 10707                           
 10708                           ; Padding undefined space
 10709  300004                     	org	3145732
 10710  300004  FF                 	db	255
 10711                           
 10712                           ;Config register CONFIG3H @ 0x300005
 10713                           ;	unspecified, using default values
 10714                           ;	CCP2 MUX bit
 10715                           ;	CCP2MX = 0x1, unprogrammed default
 10716                           ;	PORTB A/D Enable bit
 10717                           ;	PBADEN = 0x1, unprogrammed default
 10718                           ;	Low-Power Timer1 Oscillator Enable bit
 10719                           ;	LPT1OSC = 0x0, unprogrammed default
 10720                           ;	MCLR Pin Enable bit
 10721                           ;	MCLRE = 0x1, unprogrammed default
 10722  300005                     	org	3145733
 10723  300005  83                 	db	131
 10724                           
 10725                           ;Config register CONFIG4L @ 0x300006
 10726                           ;	Stack Full/Underflow Reset Enable bit
 10727                           ;	STVREN = 0x1, unprogrammed default
 10728                           ;	Single-Supply ICSP Enable bit
 10729                           ;	LVP = OFF, Single-Supply ICSP disabled
 10730                           ;	Extended Instruction Set Enable bit
 10731                           ;	XINST = 0x0, unprogrammed default
 10732                           ;	Background Debugger Enable bit
 10733                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 10734  300006                     	org	3145734
 10735  300006  81                 	db	129
 10736                           
 10737                           ; Padding undefined space
 10738  300007                     	org	3145735
 10739  300007  FF                 	db	255
 10740                           
 10741                           ;Config register CONFIG5L @ 0x300008
 10742                           ;	unspecified, using default values
 10743                           ;	Code Protection bit
 10744                           ;	CP0 = 0x1, unprogrammed default
 10745                           ;	Code Protection bit
 10746                           ;	CP1 = 0x1, unprogrammed default
 10747                           ;	Code Protection bit
 10748                           ;	CP2 = 0x1, unprogrammed default
 10749                           ;	Code Protection bit
 10750                           ;	CP3 = 0x1, unprogrammed default
 10751  300008                     	org	3145736
 10752  300008  0F                 	db	15
 10753                           
 10754                           ;Config register CONFIG5H @ 0x300009
 10755                           ;	unspecified, using default values
 10756                           ;	Boot Block Code Protection bit
 10757                           ;	CPB = 0x1, unprogrammed default
 10758                           ;	Data EEPROM Code Protection bit
 10759                           ;	CPD = 0x1, unprogrammed default
 10760  300009                     	org	3145737
 10761  300009  C0                 	db	192
 10762                           
 10763                           ;Config register CONFIG6L @ 0x30000A
 10764                           ;	unspecified, using default values
 10765                           ;	Write Protection bit
 10766                           ;	WRT0 = 0x1, unprogrammed default
 10767                           ;	Write Protection bit
 10768                           ;	WRT1 = 0x1, unprogrammed default
 10769                           ;	Write Protection bit
 10770                           ;	WRT2 = 0x1, unprogrammed default
 10771                           ;	Write Protection bit
 10772                           ;	WRT3 = 0x1, unprogrammed default
 10773  30000A                     	org	3145738
 10774  30000A  0F                 	db	15
 10775                           
 10776                           ;Config register CONFIG6H @ 0x30000B
 10777                           ;	unspecified, using default values
 10778                           ;	Configuration Register Write Protection bit
 10779                           ;	WRTC = 0x1, unprogrammed default
 10780                           ;	Boot Block Write Protection bit
 10781                           ;	WRTB = 0x1, unprogrammed default
 10782                           ;	Data EEPROM Write Protection bit
 10783                           ;	WRTD = 0x1, unprogrammed default
 10784  30000B                     	org	3145739
 10785  30000B  E0                 	db	224
 10786                           
 10787                           ;Config register CONFIG7L @ 0x30000C
 10788                           ;	unspecified, using default values
 10789                           ;	Table Read Protection bit
 10790                           ;	EBTR0 = 0x1, unprogrammed default
 10791                           ;	Table Read Protection bit
 10792                           ;	EBTR1 = 0x1, unprogrammed default
 10793                           ;	Table Read Protection bit
 10794                           ;	EBTR2 = 0x1, unprogrammed default
 10795                           ;	Table Read Protection bit
 10796                           ;	EBTR3 = 0x1, unprogrammed default
 10797  30000C                     	org	3145740
 10798  30000C  0F                 	db	15
 10799                           
 10800                           ;Config register CONFIG7H @ 0x30000D
 10801                           ;	unspecified, using default values
 10802                           ;	Boot Block Table Read Protection bit
 10803                           ;	EBTRB = 0x1, unprogrammed default
 10804  30000D                     	org	3145741
 10805  30000D  40                 	db	64
 10806                           tosu	equ	0xFFF
 10807                           tosh	equ	0xFFE
 10808                           tosl	equ	0xFFD
 10809                           stkptr	equ	0xFFC
 10810                           pclatu	equ	0xFFB
 10811                           pclath	equ	0xFFA
 10812                           pcl	equ	0xFF9
 10813                           tblptru	equ	0xFF8
 10814                           tblptrh	equ	0xFF7
 10815                           tblptrl	equ	0xFF6
 10816                           tablat	equ	0xFF5
 10817                           prodh	equ	0xFF4
 10818                           prodl	equ	0xFF3
 10819                           indf0	equ	0xFEF
 10820                           postinc0	equ	0xFEE
 10821                           postdec0	equ	0xFED
 10822                           preinc0	equ	0xFEC
 10823                           plusw0	equ	0xFEB
 10824                           fsr0h	equ	0xFEA
 10825                           fsr0l	equ	0xFE9
 10826                           wreg	equ	0xFE8
 10827                           indf1	equ	0xFE7
 10828                           postinc1	equ	0xFE6
 10829                           postdec1	equ	0xFE5
 10830                           preinc1	equ	0xFE4
 10831                           plusw1	equ	0xFE3
 10832                           fsr1h	equ	0xFE2
 10833                           fsr1l	equ	0xFE1
 10834                           bsr	equ	0xFE0
 10835                           indf2	equ	0xFDF
 10836                           postinc2	equ	0xFDE
 10837                           postdec2	equ	0xFDD
 10838                           preinc2	equ	0xFDC
 10839                           plusw2	equ	0xFDB
 10840                           fsr2h	equ	0xFDA
 10841                           fsr2l	equ	0xFD9
 10842                           status	equ	0xFD8

Data Sizes:
    Strings     237
    Constant    4
    Data        50
    BSS         102
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    127     127
    BANK0           128     91     123
    BANK1           256      0     120
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_41(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_41(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_36(CODE[4]), STR_35(CODE[4]), STR_32(CODE[4]), STR_31(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_36(CODE[4]), STR_35(CODE[4]), STR_32(CODE[4]), STR_31(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> esvaziar_tanque@y(BANK0[8]), ver_quantidade@y(BANK0[8]), encher_tanque@y(BANK0[8]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_25(CODE[5]), STR_17(CODE[5]), STR_11(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_25(CODE[5]), STR_17(CODE[5]), STR_11(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_25(CODE[5]), STR_17(CODE[5]), STR_11(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_25(CODE[5]), STR_17(CODE[5]), STR_11(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 8
		 -> esvaziar_tanque@y(BANK0[8]), ver_quantidade@y(BANK0[8]), encher_tanque@y(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S612_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 8
		 -> esvaziar_tanque@y(BANK0[8]), ver_quantidade@y(BANK0[8]), encher_tanque@y(BANK0[8]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> esvaziar_tanque@y(BANK0[8]), ver_quantidade@y(BANK0[8]), encher_tanque@y(BANK0[8]), 

    esvaziar_tanque@vol	PTR  size(2) Largest target is 4
		 -> volume(BANK0[4]), 

    ver_quantidade@vol	PTR  size(2) Largest target is 4
		 -> volume(BANK0[4]), 

    encher_tanque@vol	PTR  size(2) Largest target is 4
		 -> volume(BANK0[4]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_30(CODE[14]), STR_29(CODE[13]), STR_28(CODE[9]), STR_27(CODE[14]), 
		 -> STR_26(CODE[3]), esvaziar_tanque@y(BANK0[8]), STR_24(CODE[11]), STR_23(CODE[14]), 
		 -> STR_22(CODE[11]), STR_21(CODE[11]), STR_20(CODE[11]), STR_19(CODE[3]), 
		 -> STR_18(CODE[8]), ver_quantidade@y(BANK0[8]), STR_16(CODE[14]), STR_15(CODE[13]), 
		 -> STR_14(CODE[9]), STR_13(CODE[12]), STR_12(CODE[3]), encher_tanque@y(BANK0[8]), 
		 -> STR_10(CODE[11]), STR_9(CODE[16]), STR_8(CODE[11]), STR_7(CODE[11]), 
		 -> STR_6(CODE[12]), STR_5(CODE[19]), STR_4(CODE[15]), STR_3(CODE[14]), 
		 -> STR_2(CODE[11]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_encher_tanque
    _main->_esvaziar_tanque
    _main->_ver_quantidade
    _lcd_init->_lcd_cmd
    _tc_tecla->_atraso_ms
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___fltol->___fldiv
    ___flsub->___fladd
    ___fladd->___xxtofl
    ___flge->___fladd
    ___awdiv->___wmul
    _atoi->_isspace
    _pwmSet1->___lwdiv
    _lcd_str->_lcd_dat
    _lcd_dat->_atraso_ms
    _lcd_cmd->_atraso_ms

Critical Paths under _main in BANK0

    _main->_encher_tanque
    _ver_quantidade->_sprintf
    _esvaziar_tanque->_sprintf
    _encher_tanque->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  144293
                                             89 BANK0      2     2      0
                          _atraso_ms
                      _encher_tanque
                    _esvaziar_tanque
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                     _ver_quantidade
 ---------------------------------------------------------------------------------
 (1) _ver_quantidade                                      12    10      2   36653
                                            125 COMRAM     2     0      2
                                             36 BANK0     10    10      0
                            _lcd_cmd
                            _lcd_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    3664
                          _atraso_ms
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _esvaziar_tanque                                     38    36      2   44778
                                            125 COMRAM     2     0      2
                                             36 BANK0     36    36      0
                            ___fldiv
                            ___flsub
                            ___fltol
                          _atraso_ms
                            _lcd_cmd
                            _lcd_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _encher_tanque                                       55    53      2   51308
                                            125 COMRAM     2     0      2
                                             36 BANK0     53    53      0
                            ___awdiv
                            ___awmod
                            ___fladd
                             ___flge
                             ___wmul
                           ___xxtofl
                          _atraso_ms
                            _lcd_cmd
                            _lcd_dat
                            _lcd_str
                            _pwmInit
                            _pwmSet1
                            _sprintf
                           _tc_tecla
 ---------------------------------------------------------------------------------
 (2) _tc_tecla                                             7     5      2    2250
                                              6 COMRAM     7     5      2
                          _atraso_ms
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   30381
                                             18 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   29720
                                            123 COMRAM     2     2      0
                                             12 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   29348
                                            113 COMRAM    10     4      6
                                              0 BANK0     12    12      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   23289
                                             45 COMRAM    68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     457
                                             25 COMRAM    10     6      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    3497
                                             30 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2718
                                             14 COMRAM    16     8      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2352
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     790
                                             30 COMRAM    12     4      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2159
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     756
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1912
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _pwmSet1                                              5     5      0    1628
                                              7 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1071
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _pwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lcd_str                                              5     3      2    4224
                                              7 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (3) _lcd_dat                                              1     1      0    1854
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0    1854
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (4) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _atraso_ms                                            6     4      2    1810
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atraso_ms
   _encher_tanque
     ___awdiv
       ___wmul (ARG)
     ___awmod
     ___fladd
       ___xxtofl (ARG)
     ___flge
       ___fladd (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___wmul
     ___xxtofl
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_dat
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _pwmInit
     _pwmSet1
       ___lwdiv
       ___wmul
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
               ___wmul (ARG)
             ___awmod
             ___fladd
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
                 ___xxtofl (ARG)
               ___flmul (ARG)
             ___fltol
               ___fldiv (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
     _tc_tecla
       _atraso_ms
   _esvaziar_tanque
     ___fldiv
     ___flsub
       ___fladd
         ___xxtofl (ARG)
       ___flmul (ARG)
     ___fltol
       ___fldiv (ARG)
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
               ___wmul (ARG)
             ___awmod
             ___fladd
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
                 ___xxtofl (ARG)
               ___flmul (ARG)
             ___fltol
               ___fldiv (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
   _lcd_cmd
     _atraso_ms
     _lcd_wr
   _lcd_init
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
   _lcd_str
     _lcd_dat
       _atraso_ms
       _lcd_wr
   _ver_quantidade
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
               ___wmul (ARG)
             ___awmod
             ___fladd
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
                 ___xxtofl (ARG)
               ___flmul (ARG)
             ___fltol
               ___fldiv (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      78       7       46.9%
BITBANK0            80      0       0       4        0.0%
BANK0               80     5B      7B       5       96.1%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7F      7F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     172      15        0.0%
DATA                 0      0     172       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Jul 04 21:00:12 2020

             ___fldiv@aexp 0019  esvaziar_tanque@decremento 00C2               ___fldiv@bexp 0018  
                        _i 00E9               ___fldiv@sign 0011                         l10 3CF8  
                       l21 410A                         l30 3BB4                         l15 41A8  
                       l24 3E78                         l18 4134                         l50 2CE0  
                       l52 2CC8                         l45 2CA0                         l62 2D48  
                       l55 2D20                         l47 2C8A                         l72 2DFE  
                       l57 2D08                         l75 3C94                         l84 4196  
             ___awdiv@sign 000C        ___wmul@multiplicand 0003             encher_tanque@i 00D5  
           encher_tanque@y 00BC                        l121 2FAE                        l113 2E86  
                      l202 2A22                        l122 2F72                        l124 2F90  
                      l205 4182                        l119 2F54                        l165 2008  
                      l502 33FE                        l182 39E2                        l168 2016  
                      l179 39D4                        l436 392A                        l470 34BC  
                      l703 3C28                        l199 2A14                        l800 26F8  
                      l464 3B3C                        l449 3A92                        l801 26E6  
                      l475 3502                        l733 147C                        l750 1596  
                      l742 174C                        l734 146A                        l823 2440  
                      l479 4072                        l735 1430                        l760 1654  
                      l826 22D2                        l819 20DC                        l860 300C  
                      l836 2402                        l828 234A                        l924 37E8  
                      l829 2338                        l863 3168                        l759 1666  
                      l775 3FBE                        l927 382A                        l696 3C20  
                      l792 25FE                        l929 3866                        l874 3100  
                      l867 30A4                        l787 27DA                        l947 128C  
                      l883 3F26                        l789 263A                        l965 0AD2  
                      l798 2680                        l991 0E64                        _pad 37A2  
             ___awmod@sign 0006                        wreg 000FE8            ?_ver_quantidade 007E  
          encher_tanque@t1 00D0            encher_tanque@t2 00D7               ___flmul@aexp 0012  
             ___flmul@bexp 0013                _tolower$896 000D               ___flmul@sign 000D  
             ___flmul@temp 0018               ___flmul@prod 0014       encher_tanque@numeros 00A8  
             ___fltol@exp1 0023                       l1102 2B78                       l1050 3DB4  
                     l1123 403A                       l1051 3DBC                       l1044 1B00  
                     l1109 40AA                       l1117 3F78                       l1061 3600  
                     l1037 1BB6                       l1161 40E0                       l1090 32F0  
                     l1138 37A0                       l1146 4002                       l1155 3ED4  
                     l1180 3E1C                       l1093 32F8                       l3101 13C2  
                     l1149 41AA                       l3021 3706                       l1165 36D6  
                     l3111 13FC                       l3103 13C6                       l3031 129A  
                     l3023 3724                       l3015 36D8                       l1175 3E14  
                     l3201 1682                       l3121 144E                       l3113 1418  
                     l3105 13CA                       l3041 12DA                       l3033 12A8  
                     l3025 375A                       l3017 36EA                       l4001 0F74  
                     l3211 16EC                       l3203 1690                       l3131 149A  
                     l3123 145C                       l3115 1428                       l3107 13CE  
                     l3051 130C                       l3043 12DC                       l3035 12AA  
                     l1099 2C34                       l3019 36FC                       l4011 0FA6  
                     l4003 0F84                       l3301 2534                       l3221 1726  
                     l3213 170C                       l3205 16CA                       l3141 14DA  
                     l3125 145E                       l3117 143E                       l3109 13D2  
                     l3061 1334                       l3053 130E                       l3037 12BA  
                     l3045 12E4                       l3029 128E                       l4021 104E  
                     l4013 0FB8                       l4005 0F88                       l4111 31A2  
                     l4103 316A                       l3311 2564                       l3303 253C  
                     l3223 172C                       l3215 1710                       l3207 16CC  
                     l3151 1504                       l3143 14E6                       l3135 14AE  
                     l3127 1468                       l3119 144A                       l3071 136E  
                     l3063 1344                       l3055 1314                       l3047 12F4  
                     l3039 12CA                       l3231 3FC0                       l4031 10A4  
                     l4023 1054                       l4015 0FBC                       l4007 0F8E  
                     l4121 31F8                       l4113 31D8                       l4105 317E  
                     l3321 25A2                       l3313 2564                       l3305 2540  
                     l3401 2032                       l3225 173A                       l3217 171E  
                     l3209 16DC                       l3161 1576                       l3145 14EA  
                     l3137 14BE                       l3129 148A                       l3153 150A  
                     l3081 139A                       l3073 1380                       l3065 1354  
                     l3057 1322                       l3049 12FA                       l3233 3FCC  
                     l3241 40B8                       l4041 10EA                       l4033 10B4  
                     l4009 0F94                       l4017 0FC2                       l4025 1058  
                     l4201 1796                       l4131 3272                       l4123 3200  
                     l4115 31DC                       l4107 3182                       l3331 25EE  
                     l3323 25B2                       l3411 206A                       l3403 2034  
                     l3227 173C                       l3219 1724                       l3171 15D0  
                     l3155 1530                       l3163 1586                       l3147 14F8  
                     l3139 14CC                       l3091 13AE                       l3083 139E  
                     l3075 138E                       l3067 1356                       l3059 1324  
                     l3235 3FDE                       l3243 40BC                       l4051 1120  
                     l4043 10F2                       l4035 10C4                       l4027 1076  
                     l4019 101A                       l4211 182E                       l4203 17BA  
                     l4301 3BD0                       l3253 415E                       l4125 3208  
                     l4109 3186                       l3341 2638                       l3333 25FC  
                     l3325 25C2                       l3317 2578                       l3309 2554  
                     l3261 244E                       l3501 2374                       l3421 2096  
                     l3413 207A                       l3405 2044                       l3181 1600  
                     l3173 15DA                       l3165 15AC                       l3157 1564  
                     l3149 14FA                       l3093 13B2                       l3085 13A2  
                     l3077 1392                       l3069 135E                       l3237 3FE2  
                     l3245 40D4                       l4061 117C                       l4053 1128  
                     l4045 1102                       l4037 10C8                       l4029 1092  
                     l4213 184E                       l4205 17C2                       l4221 18B6  
                     l4311 3C0A                       l4303 3BD8                       l3255 417A  
                     l4135 32B0                       l4127 323C                       l4119 31E2  
                     l3351 267E                       l3343 264A                       l3335 2608  
                     l3327 25CA                       l3319 2592                       l3271 248E  
                     l3263 245C                       l3511 23EA                       l3503 239E  
                     l3431 20EC                       l3423 20A6                       l3415 2080  
                     l3407 2054                       l3191 1628                       l3183 1604  
                     l3175 15E8                       l3167 15BC                       l3159 1566  
                     l3095 13B6                       l3087 13A6                       l3079 1396  
                     l3239 40AC                       l4071 11BA                       l4063 1182  
                     l4055 1134                       l4047 110A                       l4039 10D8  
                     l4151 3638                       l4231 195C                       l4223 18D8  
                     l4215 185C                       l4207 17D0                       l4313 3C12  
                     l4305 3BE0                       l4137 32C2                       l3601 3A66  
                     l3361 26DE                       l3345 2660                       l3353 2690  
                     l3337 2626                       l3329 25DA                       l3281 24B4  
                     l3273 2490                       l3265 245E                       l3513 2406  
                     l3521 242C                       l3505 23A2                       l3441 2126  
                     l3433 20FC                       l3425 20B6                       l3417 2086  
                     l3409 2064                       l3193 1636                       l3185 1614  
                     l3177 15EA                       l3097 13BA                       l3089 13AA  
                     l3249 4004                       l4081 11F6                       l4073 11CC  
                     l4057 113A                       l4065 1188                       l4049 1118  
                     l4161 36B4                       l4153 3646                       l4145 3602  
                     l4233 196E                       l4225 18E8                       l4209 17F4  
                     l4321 3D64                       l4401 2D84                       l4331 4116  
                     l4315 3C14                       l4307 3BEE                       l4139 32D4  
                     l3603 3A6C                       l3371 274C                       l3355 269E  
                     l3347 2666                       l3339 2628                       l3291 24F4  
                     l3283 24C2                       l3267 246E                       l3275 2498  
                     l3259 2442                       l3523 2430                       l3515 2416  
                     l3507 23BC                       l3451 2178                       l3443 213C  
                     l3427 20C6                       l3419 2094                       l3195 164C  
                     l3179 15F8                       l3187 1616                       l3099 13BE  
                     l4091 124E                       l4083 11FC                       l4075 11D8  
                     l4067 119A                       l4059 1160                       l4155 365E  
                     l4147 362C                       l4251 1A9C                       l4235 1984  
                     l4243 19EE                       l4227 191A                       l4219 18A4  
                     l4323 3D72                       l4411 2DD0                       l4403 2D90  
                     l4173 3CBA                       l4165 3C96                       l4333 4118  
                     l4341 3B3E                       l4317 3C1A                       l4309 3BF4  
                     l3541 3886                       l3533 3868                       l3605 3A72  
                     l3381 27B6                       l3365 2708                       l3373 2750  
                     l3357 26A2                       l3349 2670                       l3293 24F6  
                     l3285 24C4                       l3277 24A8                       l3269 247E  
                     l3621 3B10                       l3613 3A94                       l3517 2424  
                     l3509 23D0                       l3461 21BE                       l3453 2186  
                     l3445 2148                       l3437 2110                       l3429 20CC  
                     l3189 1624                       l4093 1256                       l4077 11E0  
                     l4069 11B4                       l4157 367A                       l4261 1B38  
                     l4253 1AD0                       l4245 1A1C                       l4237 1992  
                     l4229 192A                       l4325 3D98                       l4413 2DE0  
                     l4405 2D98                       l4501 3E2E                       l4183 3CD8  
                     l4175 3CBE                       l4167 3CA2                       l4191 41A4  
                     l4335 4124                       l4327 410E                       l4343 3B46  
                     l4431 3C86                       l4423 3C2C                       l3551 38BA  
                     l3543 3894                       l3535 386C                       l3607 3A82  
                     l3383 27BA                       l3375 276A                       l3367 2714  
                     l3359 26B0                       l3287 24D4                       l3295 24FE  
                     l3279 24AE                       l3623 3B34                       l3615 3AC2  
                     l3631 342E                       l3519 2426                       l3471 222C  
                     l3463 21D8                       l3455 2192                       l3447 2160  
                     l3439 211C                       l3199 1676                       l3527 3F7A  
                     l3711 37E0                       l3703 37A2                       l4095 1266  
                     l4087 1230                       l4079 11F0                       l4159 368C  
                     l4271 1B74                       l4263 1B46                       l4239 19C2  
                     l4319 3D5C                       l4415 2DE2                       l4407 2DAE  
                     l4351 2C42                       l4511 3972                       l4503 392C  
                     l4169 3CA6                       l4337 4126                       l4329 4110  
                     l4345 3B76                       l4433 4184                       l4425 3C4A  
                     l3801 3F72                       l3561 38F4                       l3553 38C2  
                     l3545 389C                       l3537 387A                       l3609 3A8A  
                     l3385 27C8                       l3377 2780                       l3369 2722  
                     l3297 250E                       l3289 24E4                       l3625 3B3A  
                     l3617 3AD2                       l3641 349C                       l3633 343E  
                     l3481 22C2                       l3473 2256                       l3465 21E8  
                     l3457 21A2                       l3449 216C                       l3529 3F8A  
                     l3721 384E                       l3713 37F4                       l3705 37B2  
                     l4097 126C                       l4089 1242                       l4265 1B5A  
                     l4249 1A8A                       l4193 174E                       l4441 3EE8  
                     l4417 2DF4                       l4409 2DC0                       l4361 2C62  
                     l4353 2C4A                       l4601 1E50                       l4521 39A2  
                     l4513 397E                       l4505 395A                       l4451 2FB8  
                     l4179 3CD2                       l4187 3CDE                       l4339 4132  
                     l4291 40FA                       l4283 40E4                       l4347 3B78  
                     l4435 4188                       l4427 3C66                       l3571 391A  
                     l3563 38FC                       l3555 38CA                       l3547 38A0  
                     l3539 3882                       l3387 27CE                       l3379 279A  
                     l3299 2524                       l3619 3B00                       l3643 34AA  
                     l3635 346C                       l3491 2302                       l3483 22D0  
                     l3475 228C                       l3467 2204                       l3459 21AE  
                     l3651 403C                       l3731 358A                       l3715 3808  
                     l3707 37C6                       l3811 071A                       l4259 1B14  
                     l4195 1772                       l4275 1B80                       l4443 3EF0  
                     l4419 2DF8                       l4371 2CAE                       l4363 2C70  
                     l4611 1E8E                       l4603 1E5C                       l4531 39B8  
                     l4515 398A                       l4507 3960                       l4453 2FC8  
                     l4189 3CE2                       l4293 40FC                       l4285 40E6  
                     l4437 418C                       l4429 3C6E                       l3573 3922  
                     l3565 38FE                       l3557 38D8                       l3549 38A8  
                     l3581 39F6                       l3389 27D0                       l3645 34FA  
                     l3637 347C                       l3629 3400                       l3493 2330  
                     l3485 22E2                       l3477 229A                       l3469 2210  
                     l3397 2018                       l3653 4052                       l3661 3310  
                     l3733 3596                       l3725 3504                       l3717 380C  
                     l3709 37D4                       l3901 0AC6                       l3821 0768  
                     l3813 0722                       l3805 06F4                       l4277 1BA4  
                     l4269 1B66                       l4197 1780                       l4445 3EF8  
                     l4381 2CFA                       l4373 2CBA                       l4365 2C7C  
                     l4349 2C36                       l4621 1F2C                       l4613 1EAE  
                     l4605 1E62                       l4541 1BE8                       l4533 1BB8  
                     l4701 297A                       l4517 3990                       l4509 3966  
                     ?_pad 0011                       l4471 308E                       l4463 3046  
                     l4455 2FD6                       l4295 4108                       l4287 40EC  
                     l3567 3904                       l3559 38DE                       l3591 3A2A  
                     l3583 39FE                       l3647 3500                       l3639 348A  
                     l3487 22F0                       l3479 22B8                       l3399 2024  
                     l3655 4062                       l3671 3360                       l3743 35F8  
                     l3727 3524                       l3719 383A                       l3751 3DBE  
                     l3911 0B04                       l3903 0ADE                       l3831 07A2  
                     l3823 0778                       l3815 0746                       l3807 06FC  
                     l4199 1792                       l4447 3F14                       l4439 3ED6  
                     l4359 2C4E                       l4631 1F60                       l4623 1F38  
                     l4615 1F10                       l4607 1E6E                       l4551 1C14  
                     l4543 1BF2                       l4535 1BC4                       l4711 29A6  
                     l4703 2980                       l4527 39AC                       l4519 399C  
                     l4481 310E                       l4473 309A                       l4465 304E  
                     l4457 301C                       l4289 40EE                       l4297 3BB6  
                     l3569 390A                       l3593 3A32                       l3585 3A02  
                     l3577 39E4                       l3497 235A                       l3489 22F4  
                     l3681 338A                       l3673 3364                       l3665 3324  
                     l3729 3562                       l3737 35A2                       l3761 2A24  
                     l3921 0B6A                       l3913 0B20                       l3841 0806  
                     l3833 07A6                       l3825 078A                       l3817 074E  
                     l3809 070C                       l4393 2D56                       l4385 2D16  
                     l4377 2CD6                       l4369 2C98                       l4641 1FA2  
                     l4633 1F76                       l4625 1F3A                       l4617 1F12  
                     l4609 1E72                       l4553 1C1A                       l4545 1BFA  
                     l4561 1C9A                       l4537 1BD0                       l4705 298C  
                     l4529 39B2                       l4491 3156                       l4483 3110  
                     l4475 30D6                       l4467 305A                       l4459 3032  
                     l4299 3BBE                       l3595 3A3A                       l3587 3A10  
                     l3579 39E8                       l3499 2366                       l3691 33B2  
                     l3683 3394                       l3675 3372                       l3667 334E  
                     l3659 32FA                       l3739 35B4                       l3763 2A44  
                     l3747 3E7A                       l3755 3DF4                       l3931 0BB2  
                     l3923 0B7C                       l3915 0B56                       l3843 0818  
                     l3827 0796                       l3835 07AC                       l3819 0756  
                     l4387 2D2E                       l4395 2D60                       l4379 2CEE  
                     l4651 1FDC                       l4635 1F7E                       l4643 1FAC  
                     l4627 1F3C                       l4619 1F14                       l4571 1D4A  
                     l4563 1CAE                       l4555 1C2E                       l4547 1BFE  
                     l4539 1BE2                       l4731 2A02                       l4723 29E8  
                     l4715 29BA                       l4707 2992                       l4811 2F42  
                     l4803 2EF6                       l4493 3158                       l4485 3114  
                     l4477 30E2                       l4469 308C                       l3597 3A48  
                     l3589 3A18                       l3693 33BE                       l3685 339E  
                     l3669 3350                       l3781 2BEC                       l3773 2B2C  
                     l3765 2A9A                       l3749 3E8A                       l3757 3E06  
                     l3941 0BFA                       l3933 0BC0                       l3925 0B8E  
                     l3917 0B5E                       l3909 0AF2                       l3861 08E8  
                     l3845 0834                       l3837 07D2                       l3853 087C  
                     l3829 079E                       l4397 2D72                       l4389 2D3A  
                     l4661 1FFC                       l4653 1FDE                       l4637 1F90  
                     l4629 1F54                       l4645 1FB0                       l4581 1DFC  
                     l4573 1D56                       l4565 1CC0                       l4557 1C66  
                     l4549 1C10                       l4733 2A08                       l4725 29EA  
                     l4717 29D0                       l4709 299E                       l4821 2F9E  
                     l4805 2F08                       l4487 3138                       l4479 30F0  
                     l3599 3A5E                       l3695 33CE                       l3783 2C14  
                     l3775 2B68                       l3767 2AAE                       l3951 0D0E  
                     l3943 0C0A                       l3935 0BD8                       l3927 0B9C  
                     l3919 0B62                       l3863 0904                       l3855 08A2  
                     l3871 0920                       l3847 084C                       l4399 2D74  
                     l4655 1FE4                       l4647 1FC4                       l4639 1F96  
                     l4591 1E2C                       l4583 1E08                       l4575 1D6C  
                     l4567 1CCE                       l4559 1C96                       l4727 29F0  
                     l4719 29DC                       l4671 280C                       l4663 27DC  
                     l4807 2F0E                       l4751 2E1A                       l4489 3148  
                     l3793 3F28                       l3697 33DE                       l3785 2C24  
                     l3769 2ABC                       l3777 2B9C                       l3961 0DAA  
                     l3945 0C1E                       l3953 0D12                       l3937 0BEA  
                     l3929 0BA0                       l3881 09A6                       l3873 0938  
                     l3849 0854                       l4657 1FEA                       l4649 1FD6  
                     l4593 1E3E                       l4585 1E14                       l4577 1DC2  
                     l4569 1D3E                       l4729 29F6                       l4681 287C  
                     l4673 2818                       l4665 27E8                       l4497 3E1E  
                     l4817 2F62                       l4809 2F2A                       l4761 2E4A  
                     l4753 2E20                       l4745 2E00                       l3795 3F2C  
                     l4843 3226                       l3699 33EE                       l3779 2BD8  
                     l3971 0E3E                       l3963 0DDC                       l3955 0D30  
                     l3947 0C82                       l3939 0BF2                       l3891 0A7A  
                     l3883 0A00                       l3859 08D6                       l4659 1FF6  
                     l4595 1E42                       l4587 1E24                       l4579 1DF0  
                     l4691 291C                       l4683 2892                       l4675 282A  
                     l4667 27F4                       l4499 3E22                       l4819 2F80  
                     l4771 2E74                       l4763 2E50                       l4755 2E2C  
                     l4747 2E10                       l3789 4074                       l3797 3F40  
                     l3981 0EF4                       l3973 0E50                       l3965 0DEA  
                     l3957 0D64                       l3949 0CDA                       l3893 0A7E  
                     l3885 0A34                       l3877 096E                       l4597 1E44  
                     l4589 1E2C                       l4693 295C                       l4685 28D6  
                     l4677 2864                       l4669 2806                       l4781 2E9E  
                     l4773 2E80                       l4765 2E56                       l4757 2E32  
                     l4749 2E14                       l3799 3F6E                       l3991 0F40  
                     l3983 0F06                       l3975 0E5C                       l3967 0DFA  
                     l3959 0D96                       l3895 0A90                       l3887 0A3A  
                     l3879 09A2                       l4599 1E4A                       l4695 296E  
                     l4687 2904                       l4679 2870                       l4791 2EBA  
                     l4783 2EA4                       l4775 2E86                       l4767 2E62  
                     l4759 2E3E                       l3993 0F4E                       l3985 0F18  
                     l3977 0E80                       l3969 0E2E                       l3897 0AA4  
                     l3889 0A6C                       l4697 2972                       l4689 2910  
                     l4793 2ECC                       l4785 2EB0                       l4777 2E8C  
                     l4769 2E68                       l3995 0F5E                       l3987 0F26  
                     l3979 0EE4                       l3899 0AAC                       l4699 2974  
                     l4795 2ED2                       l4779 2E92                       l3997 0F62  
                     l3989 0F2E                       l4797 2EEE                       l3999 0F68  
                     STR_1 0618                       STR_2 06BB                       STR_3 0672  
                     STR_4 0639                       STR_5 0605                       STR_6 0699  
                     STR_7 06A5                       STR_8 06B0                       STR_9 0629  
                     u3000 1416                       u3010 143E                       u3011 143A  
                     u3100 1576                       u3020 145C                       u3101 1572  
                     u3021 1458                       u3110 15AC                       u3030 147C  
                     u3111 15A8                       u3031 1478                       u3200 1676  
                     u3120 15BC                       u3040 148A                       u4000 33CE  
                     u3201 1672                       u3121 15B8                       u3041 1486  
                     u4001 33CA                       u3210 1690                       u3130 15E8  
                     u3050 149A                       u4010 33DE                       u3211 168C  
                     u3131 15E4                       u3051 1496                       u4011 33DA  
                     u3220 16CA                       u3140 15F8                       u3060 14CC  
                     u4020 37B2                       u3300 4034                       u3221 16C6  
                     u3141 15F4                       u3061 14C8                       u4021 37AE  
                     u3301 402E                       u3230 16DC                       u3150 1614  
                     u3070 14DA                       u4110 35EE                       u4030 37D4  
                     u3310 4036                       u3231 16D8                       u3151 1610  
                     u3071 14D6                       u4111 35E8                       u4031 37D0  
                     u3400 25DA                       u3320 245C                       u3240 16EC  
                     u3160 1624                       u3080 14F8                       u4120 35F0  
                     u4200 2ABC                       u4040 382A                       u5000 17BA  
                     u3401 25D6                       u3321 2458                       u3241 16E8  
                     u3161 1620                       u3081 14F4                       u4105 35C6  
                     u4201 2AB8                       u4041 3826                       u5001 17B6  
                     u3410 25FC                       u3330 246E                       u3250 170C  
                     u3170 1636                       u3090 1530                       u4050 383A  
                     u4130 3EC2                       u5010 17F4                       u3411 25F8  
                     u3331 246A                       u3251 1708                       u3171 1632  
                     u3091 152C                       u4051 3836                       u5011 17F0  
                     u4300 3F40                       u3500 2708                       u3420 2626  
                     u3340 247E                       u3260 171E                       u3180 164C  
                     u4060 3544                       u4220 2B28                       u4140 3ED4  
                     u5100 1A84                       u5020 189C                       u4301 3F3C  
                     u3501 2704                       u3421 2622                       u3341 247A  
                     u3261 171A                       u3181 1648                       u4221 2B24  
                     u4141 3ED0                       u5021 1896                       u4310 3F6E  
                     u3510 2722                       u3430 264A                       u3350 24C2  
                     u3270 173A                       u3190 1662                       u4070 3562  
                     u4230 2B4C                       u4150 3DEE                       u5110 1A9C  
                     u5030 189E                       u4311 3F6A                       u3511 271E  
                     u3431 2646                       u3351 24BE                       u3271 1736  
                     u3191 165E                       u4071 355E                       u4215 2AD0  
                     u4151 3DE8                       u5111 1A98                       u3520 276A  
                     u3440 2660                       u3360 24D4                       u3600 20B6  
                     u4080 358A                       u4240 2B68                       u4216 2ADA  
                     u3280 4002                       u4160 3DF0                       u4400 08A2  
                     u4320 071A                       u5120 1B38                       u5040 18B6  
                     u5200 2C70                       u3521 2766                       u3441 265C  
                     u3361 24D0                       u3601 20B2                       u4081 3586  
                     u4065 353A                       u4241 2B64                       u4217 2AEA  
                     u3281 3FFE                       u4137 3EB8                       u4401 089E  
                     u4321 0716                       u5121 1B34                       u5041 18B2  
                     u5201 2C6C                       u5130 3BD0                       u3530 279A  
                     u3450 267E                       u3370 24E4                       u3610 20EC  
                     u4090 35B4                       u4250 2BBC                       u3290 40D4  
                     u4170 3E06                       u4410 08D0                       u4330 0768  
                     u5050 18E8                       u5210 2C8A                       u5131 3BCC  
                     u3531 2796                       u3451 267A                       u3371 24E0  
                     u3611 20E8                       u4091 35B0                       u4235 2B42  
                     u3291 40D0                       u4171 3E02                       u4411 08CA  
                     u4331 0764                       u5051 18E4                       u5211 2C86  
                     u5140 3BEE                       u3540 27C8                       u3460 269E  
                     u3380 2524                       u3700 2374                       u3620 20FC  
                     u2900 12BA                       u4260 2BD8                       u4180 2A6C  
                     u4500 0AEE                       u4420 08D2                       u4340 0778  
                     u5060 192A                       u5300 2D48                       u5220 2C98  
                     u5141 3BEA                       u3541 27C4                       u3461 269A  
                     u3381 2520                       u3701 2370                       u3621 20F8  
                     u2901 12B6                       u4261 2BD4                       u4501 0AEA  
                     u4341 0774                       u5061 1926                       u5301 2D44  
                     u5221 2C94                       u5150 3C0A                       u3470 26B0  
                     u3390 2564                       u3710 23BC                       u3630 2276  
                     u3550 2032                       u2910 12CA                       u4270 2C14  
                     u4190 2A9A                       u4510 0B04                       u4430 08E8  
                     u4350 078A                       u5070 196E                       u5310 2D56  
                     u5230 2CAE                       u5151 3C06                       u3471 26AC  
                     u3391 2560                       u3711 23B8                       u3551 202E  
                     u2911 12C6                       u4271 2C10                       u4255 2BB2  
                     u4191 2A96                       u4511 0B00                       u4431 08E4  
                     u4351 0786                       u5071 196A                       u5311 2D52  
                     u5231 2CAA                       u5400 3032                       u4280 40A4  
                     u3800 39F6                       u3480 26DE                       u3720 23EA  
                     u3640 22D0                       u3560 2044                       u2920 130C  
                     u4600 0D30                       u4520 0B20                       u4440 096A  
                     u4360 07D2                       u5080 1A1C                       u5160 3DB4  
                     u5320 2D84                       u5240 2CC8                       u5401 302E  
                     u4281 409E                       u3801 39F2                       u3481 26DA  
                     u3721 23E6                       u3641 22CC                       u3561 2040  
                     u2921 1308                       u4185 2A62                       u4601 0D2C  
                     u4521 0B1C                       u4441 0966                       u4361 07CE  
                     u5081 1A18                       u5161 3DB0                       u5321 2D80  
                     u5241 2CC4                       u5410 3088                       u5170 3B72  
                     u4290 40A6                       u3810 3A10                       u3490 26F4  
                     u3730 2424                       u3650 22F0                       u3570 2054  
                     u2930 1322                       u2850 36EA                       u4610 0D96  
                     u4530 0B56                       u4450 09FC                       u4370 0800  
                     u5090 1A82                       u5330 2DAE                       u5250 2CD6  
                     u5411 3084                       u3811 3A0C                       u3491 26F0  
                     u3731 2420                       u3651 22EC                       u3635 226C  
                     u3571 2050                       u2931 131E                       u2851 36E6  
                     u4611 0D92                       u4531 0B52                       u4451 09F8  
                     u4371 07FA                       u5091 1A7C                       u5331 2DAA  
                     u5251 2CD2                       u5420 30D2                       u5180 3BA4  
                     u3740 387A                       u3820 3A2A                       u3900 346C  
                     u3660 2302                       u3580 2094                       u2940 1334  
                     u2860 36FC                       u4700 0F4E                       u4620 0DDC  
                     u4540 0B7C                       u4460 0A6C                       u4380 0802  
                     u5340 2DC0                       u5260 2CEE                       u5500 1C2E  
                     u5421 30CE                       u3741 3876                       u3821 3A26  
                     u3901 3468                       u3661 22FE                       u3581 2090  
                     u2941 1330                       u2861 36F8                       u4701 0F4A  
                     u4621 0DD8                       u4541 0B78                       u4461 0A68  
                     u5341 2DBC                       u5261 2CEA                       u5501 1C2A  
                     u5430 30F0                       u5190 3BB4                       u3750 3894  
                     u3830 3A48                       u3910 348A                       u3670 2330  
                     u3590 20A6                       u2950 1344                       u2870 3724  
                     u4710 0FA6                       u4630 0DEA                       u4550 0B8E  
                     u4470 0A90                       u4390 0818                       u5350 2DD0  
                     u5270 2D08                       u5510 1CAE                       u5431 30EC  
                     u5191 3BB0                       u3751 3890                       u3831 3A44  
                     u3911 3486                       u3671 232C                       u3591 20A2  
                     u2951 1340                       u2871 3720                       u4711 0FA2  
                     u4631 0DE6                       u4551 0B8A                       u4471 0A8C  
                     u4391 0814                       u5351 2DCC                       u5271 2D04  
                     u5511 1CAA                       u5440 3100                       u3760 38BA  
                     u3840 3A5E                       u3920 34AA                       u3680 2346  
                     u2960 1380                       u2880 375A                       u4800 11CC  
                     u4720 1076                       u4640 0E50                       u4560 0B9C  
                     u4480 0AA4                       u5360 2DE0                       u5280 2D16  
                     u5520 1D3E                       u5441 30FC                       u5177 3B68  
                     u3761 38B6                       u3841 3A5A                       u3921 34A6  
                     u3681 2342                       u2961 137C                       u2881 3756  
                     u4801 11C8                       u4721 1072                       u4641 0E4C  
                     u4561 0B98                       u4481 0AA0                       u5361 2DDC  
                     u5281 2D12                       u5521 1D3A                       u5601 2966  
                     u5450 310E                       u3770 38D8                       u3850 3A82  
                     u3930 34FA                       u3690 235A                       u2970 138E  
                     u2890 12A8                       u4810 122A                       u4730 1092  
                     u4650 0EF4                       u4570 0BB2                       u4490 0AC6  
                     u5370 2DF4                       u5290 2D2E                       u5610 29B6  
                     u5451 310A                       u5187 3B9A                       u3771 38D4  
                     u3851 3A7E                       u3931 34F6                       u3691 2356  
                     u2971 138A                       u2891 12A4                       u4811 1224  
                     u4731 108E                       u4651 0EF0                       u4571 0BAE  
                     u4491 0AC2                       u5371 2DF0                       u5291 2D2A  
                     u5531 1E36                       u5611 29B2                       u5460 3148  
                     u5380 2FC8                       u4900 32D4                       u3780 38F4  
                     u3860 3AC2                       u3940 4052                       u2980 13FC  
                     u4820 122C                       u4740 10A4                       u4660 0F06  
                     u4580 0BC0                       u5540 1F76                       u5620 2A22  
                     u5461 3144                       u5381 2FC4                       u4901 32D0  
                     u3781 38F0                       u3861 3ABE                       u3941 404E  
                     u2981 13F8                       u4741 10A0                       u4661 0F02  
                     u4581 0BBC                       u5541 1F72                       u5621 2A1E  
                     u5470 3156                       u5390 2FD6                       u3790 391A  
                     u3870 3B00                       u2990 1414                       u3950 3310  
                     u4830 1242                       u4750 10B4                       u4670 0F18  
                     u4590 0BEA                       u4910 362C                       u5550 1F90  
                     u5630 2EEE                       u5471 3152                       u5391 2FD2  
                     u3791 3916                       u3871 3AFC                       u2991 140E  
                     u3951 330C                       u4831 123E                       u4751 10B0  
                     u4671 0F14                       u4591 0BE6                       u4911 3628  
                     u5551 1F8C                       u5631 2EEA                       u4840 31A2  
                     u3880 3B34                       u3960 3344                       u4760 10EA  
                     u4680 0F26                       u4920 365E                       u5560 1FC4  
                     u5480 39D4                       u5640 2F2A                       u4841 319E  
                     u3881 3B30                       u4761 10E6                       u4681 0F22  
                     u4921 365A                       u5561 1FC0                       u5481 39D0  
                     u5641 2F26                       u4850 31D8                       u3890 342E  
                     u3970 3372                       u4770 1118                       u4690 0F40  
                     u4930 367A                       u5570 1FD6                       u5490 39E2  
                     u5650 2F50                       u4851 31D4                       u3891 342A  
                     u3971 336E                       u4771 1114                       u4691 0F3C  
                     u4931 3676                       u5571 1FD2                       u5491 39DE  
                     u5651 2F4C                       u4860 31F4                       u3980 3386  
                     u4780 119A                       u4940 368C                       u5580 2016  
                     u5660 2F62                       u4861 31F0                       u3981 3382  
                     u3965 333A                       u4781 1196                       u4941 3688  
                     u5581 2012                       u5661 2F5E                       u4870 32AA  
                     u3990 33AE                       u4790 11B4                       u4950 36B4  
                     u5590 2864                       u5670 2F80                       u4871 32A4  
                     u3991 33AA                       u4791 11B0                       u4951 36B0  
                     u5591 2860                       u5671 2F7C                       u4960 3CB6  
                     u4880 32AC                       u5680 2F9E                       u4961 3CB2  
                     u5681 2F9A                       u4970 3CCE                       u4890 32C2  
                     u4971 3CCA                       u4891 32BE                       u4980 3CF8  
                     u4981 3CF4                       u4990 1772                       u4991 176E  
                     _dbuf 0100                       _atoi 316A                       _main 2E00  
                     _prec 00E5                       _nout 00E1                       pad@i 0018  
                     pad@p 0015                       fsr0h 000FEA                       fsr1h 000FE2  
                     indf0 000FEF                       fsr2h 000FDA                       fsr0l 000FE9  
                     indf2 000FDF                       fsr1l 000FE1                       pad@w 001A  
                     fsr2l 000FD9              ___fpclassifyf 3504            ??_encher_tanque 00A4  
                     prodh 000FF4                       prodl 000FF3                       start 0000  
          ___fldiv@new_exp 0012           encher_tanque@num 00CA           encher_tanque@tmp 00D2  
         encher_tanque@vol 007E               ___param_bank 000000      encher_tanque@potencia 00C6  
                    ??_pad 0017              ___fltol@sign1 0022                      ?_atoi 0008  
          __end_of___fladd 174E                      ?_main 0001            __end_of___fldiv 27DC  
          __end_of___awdiv 392C            __end_of___flneg 4074                      STR_10 0667  
                    STR_11 06D7                      STR_20 0667                      STR_12 06EF  
                    STR_21 06A5                      STR_13 068D                      STR_30 0664  
                    STR_22 06B0                      STR_14 06C6                      STR_31 06DC  
                    STR_15 0680                      STR_23 0656                      STR_24 0667  
                    STR_32 06E4                      STR_16 0664                      STR_25 06D7  
                    STR_17 06D7                      STR_41 06EC                      STR_26 06EF  
                    STR_18 06CF                      STR_19 06EF                      STR_35 06E0  
                    STR_27 0648                      STR_28 06C6                      STR_36 06E8  
          __end_of___awmod 3A94                      STR_29 0680                      STR_39 06EC  
          __end_of___flmul 2442            __end_of___flsub 3FC0            __end_of___fltol 3400  
          ___awdiv@divisor 0009   __size_of_esvaziar_tanque 0248            __end_of___lwdiv 3C2A  
          ___awdiv@counter 000B               vfpfcnvrt@fmt 0074           esvaziar_tanque@i 00C6  
         esvaziar_tanque@y 00B8            __end_of_lcd_dat 410C            __end_of_lcd_cmd 4136  
          __end_of_lcd_str 3BB6                      _flags 00E7                      _linha 0601  
                    _fputc 36D8                      _fputs 3FC0            __end_of_isdigit 40AC  
                    atoi@n 0015                      pad@fp 0011                      atoi@s 0008  
                    _width 00E3                      _putch 41AA            __end_of_isspace 3F7A  
          __end_of_isupper 403C                      tablat 000FF5            __end_of_pwmSet1 3C96  
          __end_of_pwmInit 4198          encher_tanque@F355 0164                      plusw1 000FE3  
                    plusw2 000FDB                      status 000FD8            __end_of_sprintf 3F28  
           ?___fpclassifyf 0001            __end_of_tolower 3E1E            __end_of_strncmp 36D8  
          __initialization 3CFA               __end_of_atoi 32FA               __end_of_main 2FB6  
                   ??_atoi 000A                     ??_main 0080              __activetblptr 000002  
          tc_tecla@timeout 0007                     ?_fputc 0001                     ?_fputs 000A  
         ___awdiv@dividend 0007                     ?_putch 0001           __end_of___xxtofl 316A  
  encher_tanque@incremento 00CE     esvaziar_tanque@numeros 00A4               vfprintf@cfmt 007C  
         __end_of_lcd_init 3E7A                     ___flge 3400                     ___fleq 3A94  
                ??___fladd 0017                     ___wmul 415E                  ??___fldiv 0009  
                ??___awdiv 000B                  ??___flneg 0005                  ??___awmod 0005  
                ??___flmul 0009                  ??___flsub 0027                  ??___fltol 001E  
                   _efgtoa 06F4                  ??___lwdiv 0005                     _lcd_wr 41A2  
                   _atraso 00F5                     _floorf 2A24                     clear_0 3D40  
                   clear_1 3D4C           ___awdiv@quotient 000D            ___awmod@divisor 0003  
          ___awmod@counter 0005                     pad@buf 0013                  ??_lcd_dat 0007  
                ??_lcd_cmd 0007           __end_of_tc_tecla 2E00                     _strcpy 3E7A  
                   _strlen 40AC                     _volume 00EB                  ??_lcd_str 000A  
                   fputc@c 0001                     fputs@c 000E                     fputs@i 000F  
                   fputs@s 000A                  ??_isdigit 0003            ___fpclassifyf@e 0009  
          ___fpclassifyf@u 000B            ___fpclassifyf@x 0001               __mediumconst 0000  
                ??_isspace 0003                     tblptrh 000FF7                  ??_isupper 0003  
                   tblptrl 000FF6                     tblptru 000FF8                  ??_pwmSet1 0008  
                ??_pwmInit 0001                     putch@c 0001           __end_of_vfprintf 3DBE  
        ??_esvaziar_tanque 0080                  ??_sprintf 007E                  ??_tolower 0009  
                ??_strncmp 0007                 ___flge@ff1 001F                 ___flge@ff2 0023  
          ??___fpclassifyf 0005         encher_tanque@i_132 00C8               ___xxtofl@arg 000B  
             ___xxtofl@exp 000A               ___xxtofl@val 0001                 ___fleq@ff1 0001  
               ___fleq@ff2 0005                 __accesstop 0080    __end_of__initialization 3D52  
               ___flneg@f1 0001              ___rparam_used 000001         encher_tanque@tempo 00D3  
               ___fltol@f1 001A             __pcstackCOMRAM 0001               __pidataBANK0 4198  
             __pidataBANK1 4136              __end_of_linha 0605              __end_of_fputc 37A2  
            __end_of_fputs 4004              __end_of_putch 41AC           ??_ver_quantidade 0080  
                  ??_fputc 0005                    ??_fputs 000E         __size_of_atraso_ms 0064  
                  ??_putch 0001                 __pbssBANK0 00D9                 __pbssBANK1 0100  
              tc_tecla@ret 000C                tc_tecla@tmp 000B                 _efgtoa$743 0042  
               _efgtoa$737 003E                 _efgtoa$738 0040                 _efgtoa$747 0044  
               _efgtoa$748 0046                 _efgtoa$749 0048                    ?___flge 001F  
                  ?___fleq 0001                    ?___wmul 0001                    ?_efgtoa 002E  
                  ?_lcd_wr 0001                    ?_floorf 001A                    ?_strcpy 0001  
                  ?_strlen 0001                  ?___xxtofl 0001         __size_of_vfpfcnvrt 046A  
                ?_lcd_init 0001                 _atraso_min 00F7         esvaziar_tanque@vol 007E  
                ?_tc_tecla 0007                    __Hparam 0000                    __Lparam 0000  
    __end_of_encher_tanque 2018            __size_of___flge 0104            __size_of___fleq 00AA  
                  ___fladd 128E                    ___fldiv 2442                    ___awdiv 3868  
                  ___flneg 403C                    ___awmod 39E4                    ___flmul 2018  
                  ___flsub 3F7A                    ___fltol 32FA            __size_of___wmul 0026  
                  ___lwdiv 3BB6                  ?_vfprintf 008C          __end_of_atraso_ms 3CFA  
             __psmallconst 0600            __size_of_efgtoa 0B9A            __size_of_lcd_wr 0008  
          __size_of_floorf 0212                    __pcinit 3CFA                    __ramtop 0600  
                  __ptext0 2E00                    __ptext1 392C                    __ptext2 3E1E  
                  __ptext3 27DC                    __ptext4 1BB8                    __ptext5 2C36  
                  __ptext6 3ED6                    __ptext7 3D5C                    __ptext8 174E  
                  __ptext9 3602                    _lcd_dat 40E2                    _lcd_cmd 410C  
                  _lcd_str 3B3E            __size_of_strcpy 005C            __size_of_strlen 0036  
             __size_of_pad 00C6                    _isdigit 4074                 ??___xxtofl 0005  
         ___awmod@dividend 0001                    _isspace 3F28                    _isupper 4004  
                  efgtoa@c 0034                    efgtoa@d 0052                    efgtoa@e 006A  
                  efgtoa@f 0030                    efgtoa@g 0066                    efgtoa@h 005C  
                  efgtoa@i 0064                    efgtoa@l 0060                    efgtoa@m 004E  
                  efgtoa@n 006C                    efgtoa@p 0056                    efgtoa@t 004A  
                  efgtoa@u 006E                    efgtoa@w 0059                    _pwmSet1 3C2A  
                  _pwmInit 4184                    atoi@neg 000E                    _sprintf 3ED6  
                  _tolower 3DBE                 ??_lcd_init 0008                    _strncmp 3602  
     end_of_initialization 3D52                    floorf@e 0028                    floorf@m 0024  
                  floorf@u 002A                    floorf@x 001A                    fputc@fp 0003  
            __Lmediumconst 0000                    fputs@fp 000C                 ??_tc_tecla 0009  
        __end_of_vfpfcnvrt 1BB8                 efgtoa@mode 005B                 efgtoa@sign 0054  
                  postdec1 000FE5                    postdec2 000FDD                    postinc0 000FEE  
                  postinc1 000FE6                    postinc2 000FDE                 ??_vfprintf 007C  
                  strcpy@d 0009                    strlen@a 0003                    strcpy@s 0007  
                  strlen@s 0001            _esvaziar_tanque 27DC                ___fladd@grs 001E  
            ___xxtofl@sign 0009                 lcd_dat@val 0007                 lcd_cmd@val 0007  
              ___fldiv@grs 0014                ___fldiv@rem 000D                ___flmul@grs 000E  
               lcd_str@str 0008             __end_of___flge 3504             __end_of___fleq 3B3E  
               atraso_ms@i 0003                 atraso_ms@j 0005                 atraso_ms@k 0006  
               atraso_ms@t 0001                vfpfcnvrt@ap 0076                vfpfcnvrt@ct 0088  
              vfpfcnvrt@fp 0072             __end_of___wmul 4184       esvaziar_tanque@tempo 00C0  
           __end_of_efgtoa 128E             __end_of_lcd_wr 41AA             __end_of_floorf 2C36  
               floorf@F524 00D9             __end_of_strcpy 3ED6             __end_of_strlen 40E2  
      start_initialization 3CFA                __end_of_pad 3868      __end_of___fpclassifyf 3602  
              vfprintf@fmt 008E    __end_of_esvaziar_tanque 2A24                   ??___flge 0027  
                 ??___fleq 0009                   ??___wmul 0005                   ??_efgtoa 0035  
                 ??_lcd_wr 0001                __pdataBANK0 00EF                __pdataBANK1 0150  
                 ??_floorf 001E                   ??_strcpy 0005                   ??_strlen 0003  
                ___fladd@a 0013                  ___fladd@b 000F                  ___fldiv@a 0005  
                ___fldiv@b 0001                  ___flmul@a 0005                  ___flmul@b 0001  
                ___flsub@a 0023                  ___flsub@b 001F              __pcstackBANK0 0080  
        __size_of___xxtofl 01B4          __size_of_lcd_init 005C                 tc_tecla@to 0009  
         ___lwdiv@dividend 0001          __size_of_tc_tecla 01CA                   ?___fladd 000F  
                 ?___fldiv 0001                   ?___awdiv 0007                   ?___flneg 0001  
                 ?___awmod 0001                   ?___flmul 0001                   ?___flsub 001F  
                 ?___fltol 001A                   ?___lwdiv 0001                   ?_lcd_dat 0001  
                 ?_lcd_cmd 0001          __size_of_vfprintf 0062                   ?_lcd_str 0008  
                _atrasoMed 00F1                  _atrasoMax 00EF                  _atrasoMin 00F3  
                _atraso_ms 3C96                __smallconst 0600                   ?_isdigit 0001  
          ver_quantidade@i 00AC            ver_quantidade@y 00A4                   ?_isspace 0001  
                 ?_isupper 0001                   ?_pwmSet1 0001                   ?_pwmInit 0001  
         ___lwdiv@quotient 0005                   ?_sprintf 0092                   ?_tolower 0007  
  __size_of_ver_quantidade 00B8             __size_of_fputc 00CA             __size_of_fputs 0044  
                 ?_strncmp 0001             __size_of_putch 0002             ___wmul@product 0005  
         ?_esvaziar_tanque 007E                 pwmSet1@val 000B                  _vfpfcnvrt 174E  
        ___wmul@multiplier 0001                 ?_atraso_ms 0001                  lcd_wr@val 0001  
      esvaziar_tanque@F342 0150     __size_of_encher_tanque 0460                 vfpfcnvrt@c 008B  
               vfpfcnvrt@f 0084                  copy_data0 3D0E                  copy_data1 3D2E  
       _encher_tanque$1185 00C4          ver_quantidade@vol 007E                   __Hrparam 0000  
               vfprintf@ap 0090                   __Lrparam 0000                 vfprintf@fp 008C  
         __size_of___fladd 04C0           __size_of___fldiv 039A           __size_of___awdiv 00C4  
         __size_of___flneg 0038           __size_of___awmod 00B0           __size_of___flmul 042A  
         __size_of___flsub 0046           __size_of___fltol 0106                 ?_vfpfcnvrt 0072  
         __size_of___lwdiv 0074            pwmSet1@porcento 000A         ___fpclassifyf@F463 00DD  
         __size_of_lcd_dat 002A           __size_of_lcd_cmd 002A                 sprintf@fmt 0094  
         __size_of_lcd_str 0078                   ___xxtofl 2FB6                   _atoi$801 0010  
                 _atoi$802 0014                   _atoi$803 0012                  tc_tecla@i 000D  
         __size_of_isdigit 0038            ___lwdiv@divisor 0003           __size_of_isspace 0052  
          ___lwdiv@counter 0007                   __ptext10 06F4                   __ptext11 3DBE  
                 __ptext20 3504                   __ptext12 4004                   __ptext21 32FA  
                 __ptext13 3E7A                   __ptext30 3868                   __ptext22 3F7A  
                 __ptext14 37A2                   __ptext31 316A                   __ptext23 128E  
                 __ptext15 40AC                   __ptext40 410C                   __ptext32 3F28  
                 __ptext24 403C                   __ptext16 3FC0                   __ptext41 41A2  
                 __ptext33 4074                   __ptext25 2018                   __ptext17 36D8  
                 __ptext42 3C96                   __ptext34 3C2A                   __ptext26 3400  
                 __ptext18 41AA                   __ptext43 2FB6                   __ptext35 415E  
                 __ptext27 3A94                   __ptext19 2A24                   __ptext36 3BB6  
                 __ptext28 2442                   __ptext37 4184                   __ptext29 39E4  
                 __ptext38 3B3E                   __ptext39 40E2           __size_of_isupper 0038  
         __size_of_pwmSet1 006C           __size_of_pwmInit 0014                   _lcd_init 3E1E  
         __size_of_sprintf 0052           __size_of_tolower 0060                 strcpy@dest 0001  
         __size_of_strncmp 00D6              __size_of_atoi 0190              __size_of_main 01B6  
                 _tc_tecla 2C36                   efgtoa@fp 002E                   efgtoa@ne 0050  
                 efgtoa@pp 004C                   efgtoa@ou 003A              _encher_tanque 1BB8  
                 _vfprintf 3D5C                   lcd_str@i 000C                _isspace$832 0007  
              ??_atraso_ms 0003                   isdigit@c 0001             _ver_quantidade 392C  
                sprintf@ap 009C                   isspace@c 0001                  strcpy@src 0003  
                 isupper@c 0001                  strncmp@_l 0001                  strncmp@_r 0003  
           ?_encher_tanque 007E                efgtoa@nmode 0058                ??_vfpfcnvrt 0078  
            _vfpfcnvrt$763 0080              _vfpfcnvrt$767 0082                   sprintf@f 009E  
                 tolower@c 0007                   sprintf@s 0092     __size_of___fpclassifyf 00FE  
   __end_of_ver_quantidade 39E4                   strncmp@l 0008                   strncmp@n 0005  
                 strncmp@r 000A              ___fladd@signs 001B               ___fladd@aexp 001C  
             ___fladd@bexp 001D  

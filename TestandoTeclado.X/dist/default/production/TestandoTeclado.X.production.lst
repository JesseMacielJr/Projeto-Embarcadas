

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Jul 04 19:56:30 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    60  0000                     
    61                           ; Version 2.20
    62                           ; Generated 12/02/2020 GMT
    63                           ; 
    64                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F4520 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     
    96                           	psect	idataBANK0
    97  003F6C                     __pidataBANK0:
    98                           	callstack 0
    99                           
   100                           ;initializer for _atrasoMax
   101  003F6C  03E8               	dw	1000
   102                           
   103                           ;initializer for _atrasoMed
   104  003F6E  01F4               	dw	500
   105                           
   106                           ;initializer for _atrasoMin
   107  003F70  0014               	dw	20
   108                           
   109                           ;initializer for _atraso
   110  003F72  000F               	dw	15
   111                           
   112                           ;initializer for _atraso_min
   113  003F74  0005               	dw	5
   114                           
   115                           	psect	idataBANK1
   116  003F1E                     __pidataBANK1:
   117                           	callstack 0
   118                           
   119                           ;initializer for esvaziar_tanque@F342
   120  003F1E  003F               	dw	63
   121  003F20  0006               	dw	6
   122  003F22  005B               	dw	91
   123  003F24  004F               	dw	79
   124  003F26  0066               	dw	102
   125  003F28  006D               	dw	109
   126  003F2A  007D               	dw	125
   127  003F2C  0007               	dw	7
   128  003F2E  007F               	dw	127
   129  003F30  006F               	dw	111
   130                           
   131                           ;initializer for encher_tanque@F345
   132  003F32  003F               	dw	63
   133  003F34  0006               	dw	6
   134  003F36  005B               	dw	91
   135  003F38  004F               	dw	79
   136  003F3A  0066               	dw	102
   137  003F3C  006D               	dw	109
   138  003F3E  007D               	dw	125
   139  003F40  0007               	dw	7
   140  003F42  007F               	dw	127
   141  003F44  006F               	dw	111
   142                           
   143                           	psect	smallconst
   144  000600                     __psmallconst:
   145                           	callstack 0
   146  000600  00                 	db	0
   147  000601                     _linha:
   148                           	callstack 0
   149  000601  01                 	db	1
   150  000602  02                 	db	2
   151  000603  04                 	db	4
   152  000604  00                 	db	0
   153  000605                     __end_of_linha:
   154                           	callstack 0
   155  000605                     STR_5:
   156  000605  52                 	db	82	;'R'
   157  000606  42                 	db	66	;'B'
   158  000607  33                 	db	51	;'3'
   159  000608  2D                 	db	45
   160  000609  56                 	db	86	;'V'
   161  00060A  65                 	db	101	;'e'
   162  00060B  72                 	db	114	;'r'
   163  00060C  20                 	db	32
   164  00060D  52                 	db	82	;'R'
   165  00060E  42                 	db	66	;'B'
   166  00060F  34                 	db	52	;'4'
   167  000610  2D                 	db	45
   168  000611  45                 	db	69	;'E'
   169  000612  6E                 	db	110	;'n'
   170  000613  63                 	db	99	;'c'
   171  000614  68                 	db	104	;'h'
   172  000615  65                 	db	101	;'e'
   173  000616  72                 	db	114	;'r'
   174  000617  00                 	db	0
   175  000618                     STR_1:
   176  000618  41                 	db	65	;'A'
   177  000619  62                 	db	98	;'b'
   178  00061A  61                 	db	97	;'a'
   179  00061B  73                 	db	115	;'s'
   180  00061C  74                 	db	116	;'t'
   181  00061D  65                 	db	101	;'e'
   182  00061E  63                 	db	99	;'c'
   183  00061F  69                 	db	105	;'i'
   184  000620  6D                 	db	109	;'m'
   185  000621  65                 	db	101	;'e'
   186  000622  6E                 	db	110	;'n'
   187  000623  74                 	db	116	;'t'
   188  000624  6F                 	db	111	;'o'
   189  000625  20                 	db	32
   190  000626  64                 	db	100	;'d'
   191  000627  65                 	db	101	;'e'
   192  000628  00                 	db	0
   193  000629                     STR_9:
   194  000629  45                 	db	69	;'E'
   195  00062A  52                 	db	82	;'R'
   196  00062B  52                 	db	82	;'R'
   197  00062C  4F                 	db	79	;'O'
   198  00062D  3A                 	db	58	;':'
   199  00062E  20                 	db	32
   200  00062F  76                 	db	118	;'v'
   201  000630  6F                 	db	111	;'o'
   202  000631  6C                 	db	108	;'l'
   203  000632  20                 	db	32
   204  000633  3E                 	db	62	;'>'
   205  000634  20                 	db	32
   206  000635  4D                 	db	77	;'M'
   207  000636  41                 	db	65	;'A'
   208  000637  58                 	db	88	;'X'
   209  000638  00                 	db	0
   210  000639                     STR_4:
   211  000639  56                 	db	86	;'V'
   212  00063A  61                 	db	97	;'a'
   213  00063B  7A                 	db	122	;'z'
   214  00063C  61                 	db	97	;'a'
   215  00063D  6F                 	db	111	;'o'
   216  00063E  3A                 	db	58	;':'
   217  00063F  20                 	db	32
   218  000640  31                 	db	49	;'1'
   219  000641  2E                 	db	46
   220  000642  35                 	db	53	;'5'
   221  000643  20                 	db	32
   222  000644  4C                 	db	76	;'L'
   223  000645  2F                 	db	47
   224  000646  73                 	db	115	;'s'
   225  000647  00                 	db	0
   226  000648                     STR_27:
   227  000648  45                 	db	69	;'E'
   228  000649  73                 	db	115	;'s'
   229  00064A  76                 	db	118	;'v'
   230  00064B  61                 	db	97	;'a'
   231  00064C  7A                 	db	122	;'z'
   232  00064D  69                 	db	105	;'i'
   233  00064E  61                 	db	97	;'a'
   234  00064F  6E                 	db	110	;'n'
   235  000650  64                 	db	100	;'d'
   236  000651  6F                 	db	111	;'o'
   237  000652  2E                 	db	46
   238  000653  2E                 	db	46
   239  000654  2E                 	db	46
   240  000655  00                 	db	0
   241  000656                     STR_23:
   242  000656  45                 	db	69	;'E'
   243  000657  52                 	db	82	;'R'
   244  000658  52                 	db	82	;'R'
   245  000659  4F                 	db	79	;'O'
   246  00065A  3A                 	db	58	;':'
   247  00065B  20                 	db	32
   248  00065C  76                 	db	118	;'v'
   249  00065D  6F                 	db	111	;'o'
   250  00065E  6C                 	db	108	;'l'
   251  00065F  20                 	db	32
   252  000660  3C                 	db	60	;'<'
   253  000661  20                 	db	32
   254  000662  30                 	db	48	;'0'
   255  000663  00                 	db	0
   256  000664                     STR_16:
   257  000664  20                 	db	32
   258  000665  20                 	db	32
   259  000666  20                 	db	32
   260  000667  52                 	db	82	;'R'
   261  000668  42                 	db	66	;'B'
   262  000669  31                 	db	49	;'1'
   263  00066A  2D                 	db	45
   264  00066B  56                 	db	86	;'V'
   265  00066C  6F                 	db	111	;'o'
   266  00066D  6C                 	db	108	;'l'
   267  00066E  74                 	db	116	;'t'
   268  00066F  61                 	db	97	;'a'
   269  000670  72                 	db	114	;'r'
   270  000671  00                 	db	0
   271  000672                     STR_3:
   272  000672  56                 	db	86	;'V'
   273  000673  6F                 	db	111	;'o'
   274  000674  6C                 	db	108	;'l'
   275  000675  20                 	db	32
   276  000676  6D                 	db	109	;'m'
   277  000677  61                 	db	97	;'a'
   278  000678  78                 	db	120	;'x'
   279  000679  20                 	db	32
   280  00067A  3D                 	db	61	;'='
   281  00067B  20                 	db	32
   282  00067C  37                 	db	55	;'7'
   283  00067D  30                 	db	48	;'0'
   284  00067E  4C                 	db	76	;'L'
   285  00067F  00                 	db	0
   286  000680                     STR_15:
   287  000680  20                 	db	32
   288  000681  20                 	db	32
   289  000682  20                 	db	32
   290  000683  20                 	db	32
   291  000684  53                 	db	83	;'S'
   292  000685  55                 	db	85	;'U'
   293  000686  43                 	db	67	;'C'
   294  000687  45                 	db	69	;'E'
   295  000688  53                 	db	83	;'S'
   296  000689  53                 	db	83	;'S'
   297  00068A  4F                 	db	79	;'O'
   298  00068B  21                 	db	33
   299  00068C  00                 	db	0
   300  00068D                     STR_13:
   301  00068D  45                 	db	69	;'E'
   302  00068E  6E                 	db	110	;'n'
   303  00068F  63                 	db	99	;'c'
   304  000690  68                 	db	104	;'h'
   305  000691  65                 	db	101	;'e'
   306  000692  6E                 	db	110	;'n'
   307  000693  64                 	db	100	;'d'
   308  000694  6F                 	db	111	;'o'
   309  000695  2E                 	db	46
   310  000696  2E                 	db	46
   311  000697  2E                 	db	46
   312  000698  00                 	db	0
   313  000699                     STR_6:
   314  000699  52                 	db	82	;'R'
   315  00069A  42                 	db	66	;'B'
   316  00069B  35                 	db	53	;'5'
   317  00069C  2D                 	db	45
   318  00069D  52                 	db	82	;'R'
   319  00069E  65                 	db	101	;'e'
   320  00069F  74                 	db	116	;'t'
   321  0006A0  69                 	db	105	;'i'
   322  0006A1  72                 	db	114	;'r'
   323  0006A2  61                 	db	97	;'a'
   324  0006A3  72                 	db	114	;'r'
   325  0006A4  00                 	db	0
   326  0006A5                     STR_7:
   327  0006A5  51                 	db	81	;'Q'
   328  0006A6  75                 	db	117	;'u'
   329  0006A7  61                 	db	97	;'a'
   330  0006A8  6E                 	db	110	;'n'
   331  0006A9  74                 	db	116	;'t'
   332  0006AA  28                 	db	40
   333  0006AB  4C                 	db	76	;'L'
   334  0006AC  29                 	db	41
   335  0006AD  3A                 	db	58	;':'
   336  0006AE  20                 	db	32
   337  0006AF  00                 	db	0
   338  0006B0                     STR_8:
   339  0006B0  52                 	db	82	;'R'
   340  0006B1  42                 	db	66	;'B'
   341  0006B2  31                 	db	49	;'1'
   342  0006B3  2D                 	db	45
   343  0006B4  76                 	db	118	;'v'
   344  0006B5  6F                 	db	111	;'o'
   345  0006B6  6C                 	db	108	;'l'
   346  0006B7  74                 	db	116	;'t'
   347  0006B8  61                 	db	97	;'a'
   348  0006B9  72                 	db	114	;'r'
   349  0006BA  00                 	db	0
   350  0006BB                     STR_2:
   351  0006BB  20                 	db	32
   352  0006BC  20                 	db	32
   353  0006BD  20                 	db	32
   354  0006BE  20                 	db	32
   355  0006BF  20                 	db	32
   356  0006C0  20                 	db	32
   357  0006C1  61                 	db	97	;'a'
   358  0006C2  67                 	db	103	;'g'
   359  0006C3  75                 	db	117	;'u'
   360  0006C4  61                 	db	97	;'a'
   361  0006C5  00                 	db	0
   362  0006C6                     STR_14:
   363  0006C6  41                 	db	65	;'A'
   364  0006C7  67                 	db	103	;'g'
   365  0006C8  75                 	db	117	;'u'
   366  0006C9  61                 	db	97	;'a'
   367  0006CA  72                 	db	114	;'r'
   368  0006CB  64                 	db	100	;'d'
   369  0006CC  65                 	db	101	;'e'
   370  0006CD  21                 	db	33
   371  0006CE  00                 	db	0
   372  0006CF                     STR_18:
   373  0006CF  41                 	db	65	;'A'
   374  0006D0  74                 	db	116	;'t'
   375  0006D1  75                 	db	117	;'u'
   376  0006D2  61                 	db	97	;'a'
   377  0006D3  6C                 	db	108	;'l'
   378  0006D4  3A                 	db	58	;':'
   379  0006D5  20                 	db	32
   380  0006D6  00                 	db	0
   381  0006D7                     STR_11:
   382  0006D7  25                 	db	37
   383  0006D8  2E                 	db	46
   384  0006D9  31                 	db	49	;'1'
   385  0006DA  66                 	db	102	;'f'
   386  0006DB  00                 	db	0
   387  0006DC                     STR_31:
   388  0006DC  49                 	db	73	;'I'
   389  0006DD  4E                 	db	78	;'N'
   390  0006DE  46                 	db	70	;'F'
   391  0006DF  00                 	db	0
   392  0006E0                     STR_35:
   393  0006E0  4E                 	db	78	;'N'
   394  0006E1  41                 	db	65	;'A'
   395  0006E2  4E                 	db	78	;'N'
   396  0006E3  00                 	db	0
   397  0006E4                     STR_32:
   398  0006E4  69                 	db	105	;'i'
   399  0006E5  6E                 	db	110	;'n'
   400  0006E6  66                 	db	102	;'f'
   401  0006E7  00                 	db	0
   402  0006E8                     STR_36:
   403  0006E8  6E                 	db	110	;'n'
   404  0006E9  61                 	db	97	;'a'
   405  0006EA  6E                 	db	110	;'n'
   406  0006EB  00                 	db	0
   407  0006EC                     STR_39:
   408  0006EC  6C                 	db	108	;'l'
   409  0006ED  66                 	db	102	;'f'
   410  0006EE  00                 	db	0
   411  0006EF                     STR_12:
   412  0006EF  20                 	db	32
   413  0006F0  4C                 	db	76	;'L'
   414  0006F1  00                 	db	0
   415  0006F2  00                 	db	0	; dummy byte at the end
   416  0000                     
   417                           ; #config settings
   418                           
   419                           	psect	cinit
   420  003AE2                     __pcinit:
   421                           	callstack 0
   422  003AE2                     start_initialization:
   423                           	callstack 0
   424  003AE2                     __initialization:
   425                           	callstack 0
   426                           
   427                           ; Initialize objects allocated to BANK1 (40 bytes)
   428                           ; load TBLPTR registers with __pidataBANK1
   429  003AE2  0E1E               	movlw	low __pidataBANK1
   430  003AE4  6EF6               	movwf	tblptrl,c
   431  003AE6  0E3F               	movlw	high __pidataBANK1
   432  003AE8  6EF7               	movwf	tblptrh,c
   433  003AEA  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   434  003AEC  6EF8               	movwf	tblptru,c
   435  003AEE  EE01  F050         	lfsr	0,__pdataBANK1
   436  003AF2  EE10 F028          	lfsr	1,40
   437  003AF6                     copy_data0:
   438  003AF6  0009               	tblrd		*+
   439  003AF8  CFF5 FFEE          	movff	tablat,postinc0
   440  003AFC  50E5               	movf	postdec1,w,c
   441  003AFE  50E1               	movf	fsr1l,w,c
   442  003B00  E1FA               	bnz	copy_data0
   443                           
   444                           ; Initialize objects allocated to BANK0 (10 bytes)
   445                           ; load TBLPTR registers with __pidataBANK0
   446  003B02  0E6C               	movlw	low __pidataBANK0
   447  003B04  6EF6               	movwf	tblptrl,c
   448  003B06  0E3F               	movlw	high __pidataBANK0
   449  003B08  6EF7               	movwf	tblptrh,c
   450  003B0A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   451  003B0C  6EF8               	movwf	tblptru,c
   452  003B0E  EE00  F0E7         	lfsr	0,__pdataBANK0
   453  003B12  EE10 F00A          	lfsr	1,10
   454  003B16                     copy_data1:
   455  003B16  0009               	tblrd		*+
   456  003B18  CFF5 FFEE          	movff	tablat,postinc0
   457  003B1C  50E5               	movf	postdec1,w,c
   458  003B1E  50E1               	movf	fsr1l,w,c
   459  003B20  E1FA               	bnz	copy_data1
   460                           
   461                           ; Clear objects allocated to BANK1 (80 bytes)
   462  003B22  EE01  F000         	lfsr	0,__pbssBANK1
   463  003B26  0E50               	movlw	80
   464  003B28                     clear_0:
   465  003B28  6AEE               	clrf	postinc0,c
   466  003B2A  06E8               	decf	wreg,f,c
   467  003B2C  E1FD               	bnz	clear_0
   468                           
   469                           ; Clear objects allocated to BANK0 (22 bytes)
   470  003B2E  EE00  F0D1         	lfsr	0,__pbssBANK0
   471  003B32  0E16               	movlw	22
   472  003B34                     clear_1:
   473  003B34  6AEE               	clrf	postinc0,c
   474  003B36  06E8               	decf	wreg,f,c
   475  003B38  E1FD               	bnz	clear_1
   476  003B3A                     end_of_initialization:
   477                           	callstack 0
   478  003B3A                     __end_of__initialization:
   479                           	callstack 0
   480  003B3A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   481  003B3C  6EF8               	movwf	tblptru,c
   482  003B3E  0100               	movlb	0
   483  003B40  EF64  F016         	goto	_main	;jump to C main() function
   484                           
   485                           	psect	bssBANK0
   486  0000D1                     __pbssBANK0:
   487                           	callstack 0
   488  0000D1                     floorf@F524:
   489                           	callstack 0
   490  0000D1                     	ds	4
   491  0000D5                     ___fpclassifyf@F463:
   492                           	callstack 0
   493  0000D5                     	ds	4
   494  0000D9                     _nout:
   495                           	callstack 0
   496  0000D9                     	ds	2
   497  0000DB                     _width:
   498                           	callstack 0
   499  0000DB                     	ds	2
   500  0000DD                     _prec:
   501                           	callstack 0
   502  0000DD                     	ds	2
   503  0000DF                     _flags:
   504                           	callstack 0
   505  0000DF                     	ds	2
   506  0000E1                     _i:
   507                           	callstack 0
   508  0000E1                     	ds	2
   509  0000E3                     _volume:
   510                           	callstack 0
   511  0000E3                     	ds	4
   512                           
   513                           	psect	dataBANK0
   514  0000E7                     __pdataBANK0:
   515                           	callstack 0
   516  0000E7                     _atrasoMax:
   517                           	callstack 0
   518  0000E7                     	ds	2
   519  0000E9                     _atrasoMed:
   520                           	callstack 0
   521  0000E9                     	ds	2
   522  0000EB                     _atrasoMin:
   523                           	callstack 0
   524  0000EB                     	ds	2
   525  0000ED                     _atraso:
   526                           	callstack 0
   527  0000ED                     	ds	2
   528  0000EF                     _atraso_min:
   529                           	callstack 0
   530  0000EF                     	ds	2
   531                           
   532                           	psect	bssBANK1
   533  000100                     __pbssBANK1:
   534                           	callstack 0
   535  000100                     _dbuf:
   536                           	callstack 0
   537  000100                     	ds	80
   538                           
   539                           	psect	dataBANK1
   540  000150                     __pdataBANK1:
   541                           	callstack 0
   542  000150                     esvaziar_tanque@F342:
   543                           	callstack 0
   544  000150                     	ds	20
   545  000164                     encher_tanque@F345:
   546                           	callstack 0
   547  000164                     	ds	20
   548                           
   549                           	psect	cstackBANK0
   550  000080                     __pcstackBANK0:
   551                           	callstack 0
   552  000080                     _vfpfcnvrt$756:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x0
   556  000080                     	ds	2
   557  000082                     _vfpfcnvrt$760:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x2
   561  000082                     	ds	2
   562  000084                     vfpfcnvrt@f:
   563                           	callstack 0
   564                           
   565                           ; 4 bytes @ 0x4
   566  000084                     	ds	4
   567  000088                     vfpfcnvrt@ct:
   568                           	callstack 0
   569                           
   570                           ; 3 bytes @ 0x8
   571  000088                     	ds	3
   572  00008B                     vfpfcnvrt@c:
   573                           	callstack 0
   574                           
   575                           ; 1 bytes @ 0xB
   576  00008B                     	ds	1
   577  00008C                     ?_vfprintf:
   578                           	callstack 0
   579  00008C                     vfprintf@fp:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0xC
   583  00008C                     	ds	2
   584  00008E                     vfprintf@fmt:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0xE
   588  00008E                     	ds	2
   589  000090                     vfprintf@ap:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x10
   593  000090                     	ds	2
   594  000092                     ?_sprintf:
   595                           	callstack 0
   596  000092                     sprintf@s:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x12
   600  000092                     	ds	2
   601  000094                     sprintf@fmt:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x14
   605  000094                     	ds	8
   606  00009C                     sprintf@ap:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x1C
   610  00009C                     	ds	2
   611  00009E                     sprintf@f:
   612                           	callstack 0
   613                           
   614                           ; 6 bytes @ 0x1E
   615  00009E                     	ds	6
   616  0000A4                     ??_encher_tanque:
   617  0000A4                     ver_quantidade@y:
   618                           	callstack 0
   619  0000A4                     esvaziar_tanque@numeros:
   620                           	callstack 0
   621                           
   622                           ; 20 bytes @ 0x24
   623  0000A4                     	ds	4
   624  0000A8                     encher_tanque@numeros:
   625                           	callstack 0
   626                           
   627                           ; 20 bytes @ 0x28
   628  0000A8                     	ds	4
   629  0000AC                     ver_quantidade@i:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x2C
   633  0000AC                     	ds	12
   634  0000B8                     esvaziar_tanque@y:
   635                           	callstack 0
   636                           
   637                           ; 8 bytes @ 0x38
   638  0000B8                     	ds	4
   639  0000BC                     encher_tanque@y:
   640                           	callstack 0
   641                           
   642                           ; 8 bytes @ 0x3C
   643  0000BC                     	ds	4
   644  0000C0                     esvaziar_tanque@tempo:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x40
   648  0000C0                     	ds	2
   649  0000C2                     esvaziar_tanque@decremento:
   650                           	callstack 0
   651                           
   652                           ; 4 bytes @ 0x42
   653  0000C2                     	ds	2
   654  0000C4                     encher_tanque@tempo:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x44
   658  0000C4                     	ds	2
   659  0000C6                     esvaziar_tanque@i:
   660                           	callstack 0
   661  0000C6                     encher_tanque@num:
   662                           	callstack 0
   663                           
   664                           ; 4 bytes @ 0x46
   665  0000C6                     	ds	4
   666  0000CA                     encher_tanque@incremento:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x4A
   670  0000CA                     	ds	2
   671  0000CC                     encher_tanque@i_128:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x4C
   675  0000CC                     	ds	2
   676  0000CE                     encher_tanque@tmp:
   677                           	callstack 0
   678                           
   679                           ; 1 bytes @ 0x4E
   680  0000CE                     	ds	1
   681  0000CF                     encher_tanque@i:
   682                           	callstack 0
   683                           
   684                           ; 2 bytes @ 0x4F
   685  0000CF                     	ds	2
   686                           
   687                           	psect	cstackCOMRAM
   688  000001                     __pcstackCOMRAM:
   689                           	callstack 0
   690  000001                     ?_strlen:
   691                           	callstack 0
   692  000001                     ?___fpclassifyf:
   693                           	callstack 0
   694  000001                     ?_isupper:
   695                           	callstack 0
   696  000001                     ?_isdigit:
   697                           	callstack 0
   698  000001                     ?_strncmp:
   699                           	callstack 0
   700  000001                     ?_isspace:
   701                           	callstack 0
   702  000001                     ?___wmul:
   703                           	callstack 0
   704  000001                     ?___awdiv:
   705                           	callstack 0
   706  000001                     ?___awmod:
   707                           	callstack 0
   708  000001                     ?___fldiv:
   709                           	callstack 0
   710  000001                     ?___flmul:
   711                           	callstack 0
   712  000001                     ?___flneg:
   713                           	callstack 0
   714  000001                     ?___xxtofl:
   715                           	callstack 0
   716  000001                     lcd_wr@val:
   717                           	callstack 0
   718  000001                     atraso_ms@t:
   719                           	callstack 0
   720  000001                     ___wmul@multiplier:
   721                           	callstack 0
   722  000001                     ___awdiv@dividend:
   723                           	callstack 0
   724  000001                     ___awmod@dividend:
   725                           	callstack 0
   726  000001                     isdigit@c:
   727                           	callstack 0
   728  000001                     isspace@c:
   729                           	callstack 0
   730  000001                     isupper@c:
   731                           	callstack 0
   732  000001                     fputc@c:
   733                           	callstack 0
   734  000001                     strcpy@dest:
   735                           	callstack 0
   736  000001                     strlen@s:
   737                           	callstack 0
   738  000001                     strncmp@_l:
   739                           	callstack 0
   740  000001                     ___fleq@ff1:
   741                           	callstack 0
   742  000001                     ___flneg@f1:
   743                           	callstack 0
   744  000001                     ___fldiv@b:
   745                           	callstack 0
   746  000001                     ___flmul@b:
   747                           	callstack 0
   748  000001                     ___xxtofl@val:
   749                           	callstack 0
   750  000001                     ___fpclassifyf@x:
   751                           	callstack 0
   752                           
   753                           ; 4 bytes @ 0x0
   754  000001                     	ds	2
   755  000003                     ??_isupper:
   756  000003                     ??_isdigit:
   757  000003                     ??_isspace:
   758  000003                     atraso_ms@i:
   759                           	callstack 0
   760  000003                     ___wmul@multiplicand:
   761                           	callstack 0
   762  000003                     ___awdiv@divisor:
   763                           	callstack 0
   764  000003                     ___awmod@divisor:
   765                           	callstack 0
   766  000003                     fputc@fp:
   767                           	callstack 0
   768  000003                     strcpy@src:
   769                           	callstack 0
   770  000003                     strlen@a:
   771                           	callstack 0
   772  000003                     strncmp@_r:
   773                           	callstack 0
   774                           
   775                           ; 2 bytes @ 0x2
   776  000003                     	ds	2
   777  000005                     ??_fputc:
   778  000005                     ??___fpclassifyf:
   779  000005                     ??_strcpy:
   780  000005                     ??___xxtofl:
   781  000005                     atraso_ms@j:
   782                           	callstack 0
   783  000005                     ___awdiv@counter:
   784                           	callstack 0
   785  000005                     ___awmod@counter:
   786                           	callstack 0
   787  000005                     ___wmul@product:
   788                           	callstack 0
   789  000005                     strncmp@n:
   790                           	callstack 0
   791  000005                     ___fleq@ff2:
   792                           	callstack 0
   793  000005                     ___fldiv@a:
   794                           	callstack 0
   795  000005                     ___flmul@a:
   796                           	callstack 0
   797                           
   798                           ; 4 bytes @ 0x4
   799  000005                     	ds	1
   800  000006                     atraso_ms@k:
   801                           	callstack 0
   802  000006                     ___awdiv@sign:
   803                           	callstack 0
   804  000006                     ___awmod@sign:
   805                           	callstack 0
   806                           
   807                           ; 1 bytes @ 0x5
   808  000006                     	ds	1
   809  000007                     ??_strncmp:
   810  000007                     ?_tolower:
   811                           	callstack 0
   812  000007                     lcd_cmd@val:
   813                           	callstack 0
   814  000007                     lcd_dat@val:
   815                           	callstack 0
   816  000007                     _isspace$825:
   817                           	callstack 0
   818  000007                     tc_tecla@timeout:
   819                           	callstack 0
   820  000007                     ___awdiv@quotient:
   821                           	callstack 0
   822  000007                     strcpy@s:
   823                           	callstack 0
   824  000007                     tolower@c:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0x6
   828  000007                     	ds	1
   829  000008                     ?_atoi:
   830                           	callstack 0
   831  000008                     lcd_str@str:
   832                           	callstack 0
   833  000008                     atoi@s:
   834                           	callstack 0
   835  000008                     strncmp@l:
   836                           	callstack 0
   837                           
   838                           ; 2 bytes @ 0x7
   839  000008                     	ds	1
   840  000009                     ??___fldiv:
   841  000009                     ??___flmul:
   842  000009                     ??_tolower:
   843  000009                     ??___fleq:
   844  000009                     ___xxtofl@sign:
   845                           	callstack 0
   846  000009                     tc_tecla@to:
   847                           	callstack 0
   848  000009                     ___fpclassifyf@e:
   849                           	callstack 0
   850  000009                     strcpy@d:
   851                           	callstack 0
   852                           
   853                           ; 2 bytes @ 0x8
   854  000009                     	ds	1
   855  00000A                     ??_atoi:
   856  00000A                     ??_lcd_str:
   857  00000A                     ___xxtofl@exp:
   858                           	callstack 0
   859  00000A                     fputs@s:
   860                           	callstack 0
   861  00000A                     strncmp@r:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x9
   865  00000A                     	ds	1
   866  00000B                     tc_tecla@tmp:
   867                           	callstack 0
   868  00000B                     ___xxtofl@arg:
   869                           	callstack 0
   870  00000B                     ___fpclassifyf@u:
   871                           	callstack 0
   872                           
   873                           ; 4 bytes @ 0xA
   874  00000B                     	ds	1
   875  00000C                     lcd_str@i:
   876                           	callstack 0
   877  00000C                     tc_tecla@ret:
   878                           	callstack 0
   879  00000C                     fputs@fp:
   880                           	callstack 0
   881                           
   882                           ; 2 bytes @ 0xB
   883  00000C                     	ds	1
   884  00000D                     tc_tecla@i:
   885                           	callstack 0
   886  00000D                     ___flmul@sign:
   887                           	callstack 0
   888  00000D                     _tolower$889:
   889                           	callstack 0
   890  00000D                     ___fldiv@rem:
   891                           	callstack 0
   892                           
   893                           ; 4 bytes @ 0xC
   894  00000D                     	ds	1
   895  00000E                     fputs@c:
   896                           	callstack 0
   897  00000E                     atoi@neg:
   898                           	callstack 0
   899  00000E                     ___flmul@grs:
   900                           	callstack 0
   901                           
   902                           ; 4 bytes @ 0xD
   903  00000E                     	ds	1
   904  00000F                     ?___fladd:
   905                           	callstack 0
   906  00000F                     fputs@i:
   907                           	callstack 0
   908  00000F                     ___fladd@b:
   909                           	callstack 0
   910                           
   911                           ; 4 bytes @ 0xE
   912  00000F                     	ds	1
   913  000010                     _atoi$794:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0xF
   917  000010                     	ds	1
   918  000011                     ?_pad:
   919                           	callstack 0
   920  000011                     ___fldiv@sign:
   921                           	callstack 0
   922  000011                     pad@fp:
   923                           	callstack 0
   924                           
   925                           ; 2 bytes @ 0x10
   926  000011                     	ds	1
   927  000012                     ___flmul@aexp:
   928                           	callstack 0
   929  000012                     ___fldiv@new_exp:
   930                           	callstack 0
   931  000012                     _atoi$796:
   932                           	callstack 0
   933                           
   934                           ; 2 bytes @ 0x11
   935  000012                     	ds	1
   936  000013                     ___flmul@bexp:
   937                           	callstack 0
   938  000013                     pad@buf:
   939                           	callstack 0
   940  000013                     ___fladd@a:
   941                           	callstack 0
   942                           
   943                           ; 4 bytes @ 0x12
   944  000013                     	ds	1
   945  000014                     _atoi$795:
   946                           	callstack 0
   947  000014                     ___fldiv@grs:
   948                           	callstack 0
   949  000014                     ___flmul@prod:
   950                           	callstack 0
   951                           
   952                           ; 4 bytes @ 0x13
   953  000014                     	ds	1
   954  000015                     pad@p:
   955                           	callstack 0
   956  000015                     atoi@n:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0x14
   960  000015                     	ds	2
   961  000017                     ??___fladd:
   962  000017                     ??_pad:
   963                           
   964                           ; 1 bytes @ 0x16
   965  000017                     	ds	1
   966  000018                     ___fldiv@bexp:
   967                           	callstack 0
   968  000018                     ___flmul@temp:
   969                           	callstack 0
   970  000018                     pad@i:
   971                           	callstack 0
   972                           
   973                           ; 2 bytes @ 0x17
   974  000018                     	ds	1
   975  000019                     ___fldiv@aexp:
   976                           	callstack 0
   977                           
   978                           ; 1 bytes @ 0x18
   979  000019                     	ds	1
   980  00001A                     ?_floorf:
   981                           	callstack 0
   982  00001A                     ?___fltol:
   983                           	callstack 0
   984  00001A                     pad@w:
   985                           	callstack 0
   986  00001A                     ___fltol@f1:
   987                           	callstack 0
   988  00001A                     floorf@x:
   989                           	callstack 0
   990                           
   991                           ; 4 bytes @ 0x19
   992  00001A                     	ds	1
   993  00001B                     ___fladd@signs:
   994                           	callstack 0
   995                           
   996                           ; 1 bytes @ 0x1A
   997  00001B                     	ds	1
   998  00001C                     ___fladd@aexp:
   999                           	callstack 0
  1000                           
  1001                           ; 1 bytes @ 0x1B
  1002  00001C                     	ds	1
  1003  00001D                     ___fladd@bexp:
  1004                           	callstack 0
  1005                           
  1006                           ; 1 bytes @ 0x1C
  1007  00001D                     	ds	1
  1008  00001E                     ??_floorf:
  1009  00001E                     ??___fltol:
  1010  00001E                     ___fladd@grs:
  1011                           	callstack 0
  1012                           
  1013                           ; 1 bytes @ 0x1D
  1014  00001E                     	ds	1
  1015  00001F                     ?___flsub:
  1016                           	callstack 0
  1017  00001F                     ___flge@ff1:
  1018                           	callstack 0
  1019  00001F                     ___flsub@b:
  1020                           	callstack 0
  1021                           
  1022                           ; 4 bytes @ 0x1E
  1023  00001F                     	ds	3
  1024  000022                     ___fltol@sign1:
  1025                           	callstack 0
  1026                           
  1027                           ; 1 bytes @ 0x21
  1028  000022                     	ds	1
  1029  000023                     ___fltol@exp1:
  1030                           	callstack 0
  1031  000023                     ___flge@ff2:
  1032                           	callstack 0
  1033  000023                     ___flsub@a:
  1034                           	callstack 0
  1035                           
  1036                           ; 4 bytes @ 0x22
  1037  000023                     	ds	1
  1038  000024                     floorf@m:
  1039                           	callstack 0
  1040                           
  1041                           ; 4 bytes @ 0x23
  1042  000024                     	ds	3
  1043  000027                     ??___flge:
  1044                           
  1045                           ; 1 bytes @ 0x26
  1046  000027                     	ds	1
  1047  000028                     floorf@e:
  1048                           	callstack 0
  1049                           
  1050                           ; 2 bytes @ 0x27
  1051  000028                     	ds	2
  1052  00002A                     floorf@u:
  1053                           	callstack 0
  1054                           
  1055                           ; 4 bytes @ 0x29
  1056  00002A                     	ds	4
  1057  00002E                     ?_efgtoa:
  1058                           	callstack 0
  1059  00002E                     efgtoa@fp:
  1060                           	callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x2D
  1063  00002E                     	ds	2
  1064  000030                     efgtoa@f:
  1065                           	callstack 0
  1066                           
  1067                           ; 4 bytes @ 0x2F
  1068  000030                     	ds	4
  1069  000034                     efgtoa@c:
  1070                           	callstack 0
  1071                           
  1072                           ; 1 bytes @ 0x33
  1073  000034                     	ds	1
  1074  000035                     ??_efgtoa:
  1075                           
  1076                           ; 1 bytes @ 0x34
  1077  000035                     	ds	5
  1078  00003A                     efgtoa@ou:
  1079                           	callstack 0
  1080                           
  1081                           ; 4 bytes @ 0x39
  1082  00003A                     	ds	4
  1083  00003E                     _efgtoa$730:
  1084                           	callstack 0
  1085                           
  1086                           ; 2 bytes @ 0x3D
  1087  00003E                     	ds	2
  1088  000040                     _efgtoa$731:
  1089                           	callstack 0
  1090                           
  1091                           ; 2 bytes @ 0x3F
  1092  000040                     	ds	2
  1093  000042                     _efgtoa$736:
  1094                           	callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x41
  1097  000042                     	ds	2
  1098  000044                     _efgtoa$740:
  1099                           	callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x43
  1102  000044                     	ds	2
  1103  000046                     _efgtoa$741:
  1104                           	callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x45
  1107  000046                     	ds	2
  1108  000048                     _efgtoa$742:
  1109                           	callstack 0
  1110                           
  1111                           ; 2 bytes @ 0x47
  1112  000048                     	ds	2
  1113  00004A                     efgtoa@t:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x49
  1117  00004A                     	ds	2
  1118  00004C                     efgtoa@pp:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x4B
  1122  00004C                     	ds	2
  1123  00004E                     efgtoa@m:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x4D
  1127  00004E                     	ds	2
  1128  000050                     efgtoa@ne:
  1129                           	callstack 0
  1130                           
  1131                           ; 2 bytes @ 0x4F
  1132  000050                     	ds	2
  1133  000052                     efgtoa@d:
  1134                           	callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x51
  1137  000052                     	ds	2
  1138  000054                     efgtoa@sign:
  1139                           	callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x53
  1142  000054                     	ds	2
  1143  000056                     efgtoa@p:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x55
  1147  000056                     	ds	2
  1148  000058                     efgtoa@nmode:
  1149                           	callstack 0
  1150                           
  1151                           ; 1 bytes @ 0x57
  1152  000058                     	ds	1
  1153  000059                     efgtoa@w:
  1154                           	callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x58
  1157  000059                     	ds	2
  1158  00005B                     efgtoa@mode:
  1159                           	callstack 0
  1160                           
  1161                           ; 1 bytes @ 0x5A
  1162  00005B                     	ds	1
  1163  00005C                     efgtoa@h:
  1164                           	callstack 0
  1165                           
  1166                           ; 4 bytes @ 0x5B
  1167  00005C                     	ds	4
  1168  000060                     efgtoa@l:
  1169                           	callstack 0
  1170                           
  1171                           ; 4 bytes @ 0x5F
  1172  000060                     	ds	4
  1173  000064                     efgtoa@i:
  1174                           	callstack 0
  1175                           
  1176                           ; 2 bytes @ 0x63
  1177  000064                     	ds	2
  1178  000066                     efgtoa@g:
  1179                           	callstack 0
  1180                           
  1181                           ; 4 bytes @ 0x65
  1182  000066                     	ds	4
  1183  00006A                     efgtoa@e:
  1184                           	callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x69
  1187  00006A                     	ds	2
  1188  00006C                     efgtoa@n:
  1189                           	callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x6B
  1192  00006C                     	ds	2
  1193  00006E                     efgtoa@u:
  1194                           	callstack 0
  1195                           
  1196                           ; 4 bytes @ 0x6D
  1197  00006E                     	ds	4
  1198  000072                     ?_vfpfcnvrt:
  1199                           	callstack 0
  1200  000072                     vfpfcnvrt@fp:
  1201                           	callstack 0
  1202                           
  1203                           ; 2 bytes @ 0x71
  1204  000072                     	ds	2
  1205  000074                     vfpfcnvrt@fmt:
  1206                           	callstack 0
  1207                           
  1208                           ; 2 bytes @ 0x73
  1209  000074                     	ds	2
  1210  000076                     vfpfcnvrt@ap:
  1211                           	callstack 0
  1212                           
  1213                           ; 2 bytes @ 0x75
  1214  000076                     	ds	2
  1215  000078                     ??_vfpfcnvrt:
  1216                           
  1217                           ; 1 bytes @ 0x77
  1218  000078                     	ds	4
  1219  00007C                     vfprintf@cfmt:
  1220                           	callstack 0
  1221                           
  1222                           ; 2 bytes @ 0x7B
  1223  00007C                     	ds	2
  1224  00007E                     encher_tanque@vol:
  1225                           	callstack 0
  1226  00007E                     ver_quantidade@vol:
  1227                           	callstack 0
  1228  00007E                     esvaziar_tanque@vol:
  1229                           	callstack 0
  1230                           
  1231                           ; 2 bytes @ 0x7D
  1232  00007E                     	ds	2
  1233  000080                     
  1234                           ; 1 bytes @ 0x7F
  1235 ;;
  1236 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1237 ;;
  1238 ;; *************** function _main *****************
  1239 ;; Defined at:
  1240 ;;		line 16 in file "main.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;		None
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;  flag            2    0        int 
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  1    wreg      void 
  1247 ;; Registers used:
  1248 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1254 ;;      Params:         0       0       0       0       0       0       0
  1255 ;;      Locals:         0       2       0       0       0       0       0
  1256 ;;      Temps:          0       0       0       0       0       0       0
  1257 ;;      Totals:         0       2       0       0       0       0       0
  1258 ;;Total ram usage:        2 bytes
  1259 ;; Hardware stack levels required when called:    9
  1260 ;; This function calls:
  1261 ;;		_atraso_ms
  1262 ;;		_encher_tanque
  1263 ;;		_esvaziar_tanque
  1264 ;;		_lcd_cmd
  1265 ;;		_lcd_init
  1266 ;;		_lcd_str
  1267 ;;		_ver_quantidade
  1268 ;; This function is called by:
  1269 ;;		Startup code after reset
  1270 ;; This function uses a non-reentrant model
  1271 ;;
  1272                           
  1273                           	psect	text0
  1274  002CC8                     __ptext0:
  1275                           	callstack 0
  1276  002CC8                     _main:
  1277                           	callstack 22
  1278  002CC8                     
  1279                           ;main.c: 18:     (*(volatile __near unsigned char*)0xFC1) = 0x06;
  1280  002CC8  0E06               	movlw	6
  1281  002CCA  6EC1               	movwf	193,c	;volatile
  1282                           
  1283                           ;main.c: 19:     (*(volatile __near unsigned char*)0xF93) = 0x01;
  1284  002CCC  0E01               	movlw	1
  1285  002CCE  6E93               	movwf	147,c	;volatile
  1286                           
  1287                           ;main.c: 20:     (*(volatile __near unsigned char*)0xF95) = 0x00;
  1288  002CD0  0E00               	movlw	0
  1289  002CD2  6E95               	movwf	149,c	;volatile
  1290                           
  1291                           ;main.c: 21:     (*(volatile __near unsigned char*)0xF96) = 0x00;
  1292  002CD4  0E00               	movlw	0
  1293  002CD6  6E96               	movwf	150,c	;volatile
  1294  002CD8                     
  1295                           ;main.c: 23:     lcd_init();
  1296  002CD8  EC03  F01E         	call	_lcd_init	;wreg free
  1297  002CDC                     
  1298                           ;main.c: 26:     lcd_cmd(0x01);
  1299  002CDC  0E01               	movlw	1
  1300  002CDE  EC7A  F01F         	call	_lcd_cmd
  1301  002CE2                     
  1302                           ;main.c: 27:     lcd_cmd(0x80);
  1303  002CE2  0E80               	movlw	128
  1304  002CE4  EC7A  F01F         	call	_lcd_cmd
  1305  002CE8                     
  1306                           ;main.c: 28:     lcd_str("Abastecimento de");
  1307  002CE8  0E18               	movlw	low STR_1
  1308  002CEA  6E08               	movwf	lcd_str@str^0,c
  1309  002CEC  0E06               	movlw	high STR_1
  1310  002CEE  6E09               	movwf	(lcd_str@str+1)^0,c
  1311  002CF0  EC03  F01D         	call	_lcd_str	;wreg free
  1312  002CF4                     
  1313                           ;main.c: 29:     lcd_cmd(0xC0);
  1314  002CF4  0EC0               	movlw	192
  1315  002CF6  EC7A  F01F         	call	_lcd_cmd
  1316  002CFA                     
  1317                           ;main.c: 30:     lcd_str("      agua");
  1318  002CFA  0EBB               	movlw	low STR_2
  1319  002CFC  6E08               	movwf	lcd_str@str^0,c
  1320  002CFE  0E06               	movlw	high STR_2
  1321  002D00  6E09               	movwf	(lcd_str@str+1)^0,c
  1322  002D02  EC03  F01D         	call	_lcd_str	;wreg free
  1323  002D06                     
  1324                           ;main.c: 31:     atraso_ms(atrasoMin);
  1325  002D06  0E00               	movlw	0
  1326  002D08  6E02               	movwf	(atraso_ms@t+1)^0,c
  1327  002D0A  0E14               	movlw	20
  1328  002D0C  6E01               	movwf	atraso_ms@t^0,c
  1329  002D0E  EC3F  F01D         	call	_atraso_ms	;wreg free
  1330  002D12                     
  1331                           ;main.c: 32:     lcd_cmd(0x01);
  1332  002D12  0E01               	movlw	1
  1333  002D14  EC7A  F01F         	call	_lcd_cmd
  1334  002D18                     
  1335                           ;main.c: 35:     lcd_cmd(0x80);
  1336  002D18  0E80               	movlw	128
  1337  002D1A  EC7A  F01F         	call	_lcd_cmd
  1338  002D1E                     
  1339                           ;main.c: 36:     lcd_str("Vol max = 70L");
  1340  002D1E  0E72               	movlw	low STR_3
  1341  002D20  6E08               	movwf	lcd_str@str^0,c
  1342  002D22  0E06               	movlw	high STR_3
  1343  002D24  6E09               	movwf	(lcd_str@str+1)^0,c
  1344  002D26  EC03  F01D         	call	_lcd_str	;wreg free
  1345  002D2A                     
  1346                           ;main.c: 37:     lcd_cmd(0xC0);
  1347  002D2A  0EC0               	movlw	192
  1348  002D2C  EC7A  F01F         	call	_lcd_cmd
  1349  002D30                     
  1350                           ;main.c: 38:     lcd_str("Vazao: 1.5 L/s");
  1351  002D30  0E39               	movlw	low STR_4
  1352  002D32  6E08               	movwf	lcd_str@str^0,c
  1353  002D34  0E06               	movlw	high STR_4
  1354  002D36  6E09               	movwf	(lcd_str@str+1)^0,c
  1355  002D38  EC03  F01D         	call	_lcd_str	;wreg free
  1356  002D3C                     
  1357                           ;main.c: 39:     atraso_ms(atrasoMin);
  1358  002D3C  0E00               	movlw	0
  1359  002D3E  6E02               	movwf	(atraso_ms@t+1)^0,c
  1360  002D40  0E14               	movlw	20
  1361  002D42  6E01               	movwf	atraso_ms@t^0,c
  1362  002D44  EC3F  F01D         	call	_atraso_ms	;wreg free
  1363  002D48                     
  1364                           ;main.c: 40:     lcd_cmd(0x01);
  1365  002D48  0E01               	movlw	1
  1366  002D4A  EC7A  F01F         	call	_lcd_cmd
  1367  002D4E                     l113:
  1368  002D4E                     
  1369                           ;main.c: 47:         lcd_cmd(0x01);
  1370  002D4E  0E01               	movlw	1
  1371  002D50  EC7A  F01F         	call	_lcd_cmd
  1372  002D54                     
  1373                           ;main.c: 48:         lcd_cmd(0x80);
  1374  002D54  0E80               	movlw	128
  1375  002D56  EC7A  F01F         	call	_lcd_cmd
  1376  002D5A                     
  1377                           ;main.c: 49:         lcd_str("RB3-Ver RB4-Encher");
  1378  002D5A  0E05               	movlw	low STR_5
  1379  002D5C  6E08               	movwf	lcd_str@str^0,c
  1380  002D5E  0E06               	movlw	high STR_5
  1381  002D60  6E09               	movwf	(lcd_str@str+1)^0,c
  1382  002D62  EC03  F01D         	call	_lcd_str	;wreg free
  1383  002D66                     
  1384                           ;main.c: 50:         lcd_cmd(0xC0);
  1385  002D66  0EC0               	movlw	192
  1386  002D68  EC7A  F01F         	call	_lcd_cmd
  1387  002D6C                     
  1388                           ;main.c: 51:         lcd_str("RB5-Retirar");
  1389  002D6C  0E99               	movlw	low STR_6
  1390  002D6E  6E08               	movwf	lcd_str@str^0,c
  1391  002D70  0E06               	movlw	high STR_6
  1392  002D72  6E09               	movwf	(lcd_str@str+1)^0,c
  1393  002D74  EC03  F01D         	call	_lcd_str	;wreg free
  1394  002D78                     
  1395                           ;main.c: 52:         for (i = 0; i < 2; i++) {
  1396  002D78  0E00               	movlw	0
  1397  002D7A  0100               	movlb	0	; () banked
  1398  002D7C  6FE2               	movwf	(_i+1)& (0+255),b
  1399  002D7E  0E00               	movlw	0
  1400  002D80  6FE1               	movwf	_i& (0+255),b
  1401  002D82                     l4660:
  1402                           
  1403                           ; BSR set to: 0
  1404                           ;main.c: 53:             atraso_ms(350);
  1405  002D82  0E01               	movlw	1
  1406  002D84  6E02               	movwf	(atraso_ms@t+1)^0,c
  1407  002D86  0E5E               	movlw	94
  1408  002D88  6E01               	movwf	atraso_ms@t^0,c
  1409  002D8A  EC3F  F01D         	call	_atraso_ms	;wreg free
  1410                           
  1411                           ;main.c: 54:             lcd_cmd(0x18);
  1412  002D8E  0E18               	movlw	24
  1413  002D90  EC7A  F01F         	call	_lcd_cmd
  1414  002D94                     
  1415                           ;main.c: 55:         }
  1416  002D94  0100               	movlb	0	; () banked
  1417  002D96  4BE1               	infsnz	_i& (0+255),f,b
  1418  002D98  2BE2               	incf	(_i+1)& (0+255),f,b
  1419  002D9A                     
  1420                           ; BSR set to: 0
  1421  002D9A  BFE2               	btfsc	(_i+1)& (0+255),7,b
  1422  002D9C  EFD9  F016         	goto	u5511
  1423  002DA0  51E2               	movf	(_i+1)& (0+255),w,b
  1424  002DA2  E109               	bnz	u5510
  1425  002DA4  0E02               	movlw	2
  1426  002DA6  5DE1               	subwf	_i& (0+255),w,b
  1427  002DA8  A0D8               	btfss	status,0,c
  1428  002DAA  EFD9  F016         	goto	u5511
  1429  002DAE  EFDB  F016         	goto	u5510
  1430  002DB2                     u5511:
  1431  002DB2  EFC1  F016         	goto	l4660
  1432  002DB6                     u5510:
  1433  002DB6                     
  1434                           ; BSR set to: 0
  1435                           ;main.c: 56:         for (i = 0; i < 2; i++) {
  1436  002DB6  0E00               	movlw	0
  1437  002DB8  6FE2               	movwf	(_i+1)& (0+255),b
  1438  002DBA  0E00               	movlw	0
  1439  002DBC  6FE1               	movwf	_i& (0+255),b
  1440  002DBE                     l4672:
  1441                           
  1442                           ; BSR set to: 0
  1443                           ;main.c: 57:             atraso_ms(350);
  1444  002DBE  0E01               	movlw	1
  1445  002DC0  6E02               	movwf	(atraso_ms@t+1)^0,c
  1446  002DC2  0E5E               	movlw	94
  1447  002DC4  6E01               	movwf	atraso_ms@t^0,c
  1448  002DC6  EC3F  F01D         	call	_atraso_ms	;wreg free
  1449                           
  1450                           ;main.c: 58:             lcd_cmd(0x1C);
  1451  002DCA  0E1C               	movlw	28
  1452  002DCC  EC7A  F01F         	call	_lcd_cmd
  1453  002DD0                     
  1454                           ;main.c: 59:         }
  1455  002DD0  0100               	movlb	0	; () banked
  1456  002DD2  4BE1               	infsnz	_i& (0+255),f,b
  1457  002DD4  2BE2               	incf	(_i+1)& (0+255),f,b
  1458  002DD6                     
  1459                           ; BSR set to: 0
  1460  002DD6  BFE2               	btfsc	(_i+1)& (0+255),7,b
  1461  002DD8  EFF7  F016         	goto	u5521
  1462  002DDC  51E2               	movf	(_i+1)& (0+255),w,b
  1463  002DDE  E109               	bnz	u5520
  1464  002DE0  0E02               	movlw	2
  1465  002DE2  5DE1               	subwf	_i& (0+255),w,b
  1466  002DE4  A0D8               	btfss	status,0,c
  1467  002DE6  EFF7  F016         	goto	u5521
  1468  002DEA  EFF9  F016         	goto	u5520
  1469  002DEE                     u5521:
  1470  002DEE  EFDF  F016         	goto	l4672
  1471  002DF2                     u5520:
  1472  002DF2                     
  1473                           ; BSR set to: 0
  1474                           ;main.c: 62:         (*(volatile __near unsigned char*)0xF93) = 0xF8;
  1475  002DF2  0EF8               	movlw	248
  1476  002DF4  6E93               	movwf	147,c	;volatile
  1477                           
  1478                           ;main.c: 63:         (*(volatile __near unsigned char*)0xF92) = 0x20;
  1479  002DF6  0E20               	movlw	32
  1480  002DF8  6E92               	movwf	146,c	;volatile
  1481                           
  1482                           ;main.c: 64:         (*(volatile __near unsigned char*)0xF93) = 0x3F;
  1483  002DFA  0E3F               	movlw	63
  1484  002DFC  6E93               	movwf	147,c	;volatile
  1485                           
  1486                           ;main.c: 65:         (*(volatile __near unsigned char*)0xF92) = 0x20;
  1487  002DFE  0E20               	movlw	32
  1488  002E00  6E92               	movwf	146,c	;volatile
  1489                           
  1490                           ;main.c: 66:         (*(volatile __near unsigned char*)0xF93) = 0x3F;
  1491  002E02  0E3F               	movlw	63
  1492  002E04  6E93               	movwf	147,c	;volatile
  1493                           
  1494                           ;main.c: 67:         (*(volatile __near unsigned char*)0xF96) = 0x00;
  1495  002E06  0E00               	movlw	0
  1496  002E08  6E96               	movwf	150,c	;volatile
  1497  002E0A                     l4680:
  1498                           
  1499                           ;main.c: 79:             if (!((((*(volatile __near unsigned char*)0xF81)) & (1<<1)))) {
  1500  002E0A  B281               	btfsc	129,1,c	;volatile
  1501  002E0C  EF0A  F017         	goto	u5531
  1502  002E10  EF0C  F017         	goto	u5530
  1503  002E14                     u5531:
  1504  002E14  EF0E  F017         	goto	l119
  1505  002E18                     u5530:
  1506  002E18  EFA7  F016         	goto	l113
  1507  002E1C                     l119:
  1508  002E1C  B681               	btfsc	129,3,c	;volatile
  1509  002E1E  EF13  F017         	goto	u5541
  1510  002E22  EF15  F017         	goto	u5540
  1511  002E26                     u5541:
  1512  002E26  EF1D  F017         	goto	l122
  1513  002E2A                     u5540:
  1514  002E2A                     
  1515                           ;main.c: 83:                 ver_quantidade(&volume);
  1516  002E2A  0EE3               	movlw	low _volume
  1517  002E2C  6E7E               	movwf	ver_quantidade@vol^0,c
  1518  002E2E  0E00               	movlw	high _volume
  1519  002E30  6E7F               	movwf	(ver_quantidade@vol+1)^0,c
  1520  002E32  ECFA  F01B         	call	_ver_quantidade	;wreg free
  1521                           
  1522                           ;main.c: 84:             }
  1523  002E36  EF05  F017         	goto	l4680
  1524  002E3A                     l122:
  1525  002E3A  B881               	btfsc	129,4,c	;volatile
  1526  002E3C  EF22  F017         	goto	u5551
  1527  002E40  EF24  F017         	goto	u5550
  1528  002E44                     u5551:
  1529  002E44  EF2C  F017         	goto	l124
  1530  002E48                     u5550:
  1531  002E48                     
  1532                           ;main.c: 86:                 encher_tanque(&volume);
  1533  002E48  0EE3               	movlw	low _volume
  1534  002E4A  6E7E               	movwf	encher_tanque@vol^0,c
  1535  002E4C  0E00               	movlw	high _volume
  1536  002E4E  6E7F               	movwf	(encher_tanque@vol+1)^0,c
  1537  002E50  ECBE  F011         	call	_encher_tanque	;wreg free
  1538                           
  1539                           ;main.c: 87:             }
  1540  002E54  EF05  F017         	goto	l4680
  1541  002E58                     l124:
  1542  002E58  BA81               	btfsc	129,5,c	;volatile
  1543  002E5A  EF31  F017         	goto	u5561
  1544  002E5E  EF33  F017         	goto	u5560
  1545  002E62                     u5561:
  1546  002E62  EF3B  F017         	goto	l121
  1547  002E66                     u5560:
  1548  002E66                     
  1549                           ;main.c: 89:                 esvaziar_tanque(&volume);
  1550  002E66  0EE3               	movlw	low _volume
  1551  002E68  6E7E               	movwf	esvaziar_tanque@vol^0,c
  1552  002E6A  0E00               	movlw	high _volume
  1553  002E6C  6E7F               	movwf	(esvaziar_tanque@vol+1)^0,c
  1554  002E6E  EC52  F013         	call	_esvaziar_tanque	;wreg free
  1555  002E72  EF05  F017         	goto	l4680
  1556  002E76                     l121:
  1557  002E76  EF05  F017         	goto	l4680
  1558  002E7A  EF00  F000         	goto	start
  1559  002E7E                     __end_of_main:
  1560                           	callstack 0
  1561                           
  1562 ;; *************** function _ver_quantidade *****************
  1563 ;; Defined at:
  1564 ;;		line 7 in file "ver.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;  vol             2  125[COMRAM] PTR 
  1567 ;;		 -> volume(4), 
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;  y               8   36[BANK0 ] unsigned char [8]
  1570 ;;  i               2   44[BANK0 ] int 
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  1    wreg      void 
  1573 ;; Registers used:
  1574 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1580 ;;      Params:         2       0       0       0       0       0       0
  1581 ;;      Locals:         0      10       0       0       0       0       0
  1582 ;;      Temps:          0       0       0       0       0       0       0
  1583 ;;      Totals:         2      10       0       0       0       0       0
  1584 ;;Total ram usage:       12 bytes
  1585 ;; Hardware stack levels used:    1
  1586 ;; Hardware stack levels required when called:    8
  1587 ;; This function calls:
  1588 ;;		_lcd_cmd
  1589 ;;		_lcd_str
  1590 ;;		_sprintf
  1591 ;; This function is called by:
  1592 ;;		_main
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           	psect	text1
  1597  0037F4                     __ptext1:
  1598                           	callstack 0
  1599  0037F4                     _ver_quantidade:
  1600                           	callstack 22
  1601  0037F4                     
  1602                           ;ver.c: 9:     int i;;ver.c: 10:     char y[8];;ver.c: 11:     sprintf(y, "%.1f", *vol);
  1603  0037F4  0EA4               	movlw	low ver_quantidade@y
  1604  0037F6  0100               	movlb	0	; () banked
  1605  0037F8  6F92               	movwf	sprintf@s& (0+255),b
  1606  0037FA  0E00               	movlw	high ver_quantidade@y
  1607  0037FC  6F93               	movwf	(sprintf@s+1)& (0+255),b
  1608  0037FE  0ED7               	movlw	low STR_11
  1609  003800  6F94               	movwf	sprintf@fmt& (0+255),b
  1610  003802  0E06               	movlw	high STR_11
  1611  003804  6F95               	movwf	(sprintf@fmt+1)& (0+255),b
  1612  003806  C07E  FFD9         	movff	ver_quantidade@vol,fsr2l
  1613  00380A  C07F  FFDA         	movff	ver_quantidade@vol+1,fsr2h
  1614  00380E  CFDE F096          	movff	postinc2,?_sprintf+4
  1615  003812  CFDE F097          	movff	postinc2,?_sprintf+5
  1616  003816  CFDE F098          	movff	postinc2,?_sprintf+6
  1617  00381A  CFDE F099          	movff	postinc2,?_sprintf+7
  1618  00381E  EC5F  F01E         	call	_sprintf	;wreg free
  1619  003822                     
  1620                           ;ver.c: 13:     lcd_cmd(0x01);
  1621  003822  0E01               	movlw	1
  1622  003824  EC7A  F01F         	call	_lcd_cmd
  1623  003828                     
  1624                           ;ver.c: 14:     lcd_cmd(0x80);
  1625  003828  0E80               	movlw	128
  1626  00382A  EC7A  F01F         	call	_lcd_cmd
  1627  00382E                     
  1628                           ;ver.c: 15:     lcd_str("Atual: ");
  1629  00382E  0ECF               	movlw	low STR_18
  1630  003830  6E08               	movwf	lcd_str@str^0,c
  1631  003832  0E06               	movlw	high STR_18
  1632  003834  6E09               	movwf	(lcd_str@str+1)^0,c
  1633  003836  EC03  F01D         	call	_lcd_str	;wreg free
  1634  00383A                     
  1635                           ;ver.c: 16:     lcd_str(y);
  1636  00383A  0EA4               	movlw	low ver_quantidade@y
  1637  00383C  6E08               	movwf	lcd_str@str^0,c
  1638  00383E  0E00               	movlw	high ver_quantidade@y
  1639  003840  6E09               	movwf	(lcd_str@str+1)^0,c
  1640  003842  EC03  F01D         	call	_lcd_str	;wreg free
  1641  003846                     
  1642                           ;ver.c: 17:     lcd_str(" L");
  1643  003846  0EEF               	movlw	low STR_12
  1644  003848  6E08               	movwf	lcd_str@str^0,c
  1645  00384A  0E06               	movlw	high STR_12
  1646  00384C  6E09               	movwf	(lcd_str@str+1)^0,c
  1647  00384E  EC03  F01D         	call	_lcd_str	;wreg free
  1648  003852                     
  1649                           ;ver.c: 18:     lcd_cmd(0xC0);
  1650  003852  0EC0               	movlw	192
  1651  003854  EC7A  F01F         	call	_lcd_cmd
  1652  003858                     
  1653                           ;ver.c: 19:     lcd_str("RB1-Voltar");
  1654  003858  0E67               	movlw	low (STR_16+3)
  1655  00385A  6E08               	movwf	lcd_str@str^0,c
  1656  00385C  0E06               	movlw	high (STR_16+3)
  1657  00385E  6E09               	movwf	(lcd_str@str+1)^0,c
  1658  003860  EC03  F01D         	call	_lcd_str	;wreg free
  1659  003864                     
  1660                           ;ver.c: 20:     lcd_cmd(0xC0);
  1661  003864  0EC0               	movlw	192
  1662  003866  EC7A  F01F         	call	_lcd_cmd
  1663  00386A                     
  1664                           ;ver.c: 22:     for (i = 0; i < 7; i++) {
  1665  00386A  0E00               	movlw	0
  1666  00386C  0100               	movlb	0	; () banked
  1667  00386E  6FAD               	movwf	(ver_quantidade@i+1)& (0+255),b
  1668  003870  0E00               	movlw	0
  1669  003872  6FAC               	movwf	ver_quantidade@i& (0+255),b
  1670  003874                     l4422:
  1671                           
  1672                           ; BSR set to: 0
  1673                           ;ver.c: 23:         lcd_cmd(0x10);
  1674  003874  0E10               	movlw	16
  1675  003876  EC7A  F01F         	call	_lcd_cmd
  1676  00387A                     
  1677                           ;ver.c: 24:     }
  1678  00387A  0100               	movlb	0	; () banked
  1679  00387C  4BAC               	infsnz	ver_quantidade@i& (0+255),f,b
  1680  00387E  2BAD               	incf	(ver_quantidade@i+1)& (0+255),f,b
  1681  003880                     
  1682                           ; BSR set to: 0
  1683  003880  BFAD               	btfsc	(ver_quantidade@i+1)& (0+255),7,b
  1684  003882  EF4C  F01C         	goto	u5391
  1685  003886  51AD               	movf	(ver_quantidade@i+1)& (0+255),w,b
  1686  003888  E109               	bnz	u5390
  1687  00388A  0E07               	movlw	7
  1688  00388C  5DAC               	subwf	ver_quantidade@i& (0+255),w,b
  1689  00388E  A0D8               	btfss	status,0,c
  1690  003890  EF4C  F01C         	goto	u5391
  1691  003894  EF4E  F01C         	goto	u5390
  1692  003898                     u5391:
  1693  003898  EF3A  F01C         	goto	l4422
  1694  00389C                     u5390:
  1695  00389C                     l170:
  1696                           
  1697                           ;ver.c: 31:     while(((((*(volatile __near unsigned char*)0xF81)) & (1<<1)))){
  1698  00389C  B281               	btfsc	129,1,c	;volatile
  1699  00389E  EF53  F01C         	goto	u5401
  1700  0038A2  EF55  F01C         	goto	u5400
  1701  0038A6                     u5401:
  1702  0038A6  EF4E  F01C         	goto	l170
  1703  0038AA                     u5400:
  1704  0038AA  0012               	return		;funcret
  1705  0038AC                     __end_of_ver_quantidade:
  1706                           	callstack 0
  1707                           
  1708 ;; *************** function _lcd_init *****************
  1709 ;; Defined at:
  1710 ;;		line 29 in file "lcd.c"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;		None
  1713 ;; Auto vars:     Size  Location     Type
  1714 ;;		None
  1715 ;; Return value:  Size  Location     Type
  1716 ;;                  1    wreg      void 
  1717 ;; Registers used:
  1718 ;;		wreg, status,2, status,0, cstack
  1719 ;; Tracked objects:
  1720 ;;		On entry : 0/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1724 ;;      Params:         0       0       0       0       0       0       0
  1725 ;;      Locals:         0       0       0       0       0       0       0
  1726 ;;      Temps:          0       0       0       0       0       0       0
  1727 ;;      Totals:         0       0       0       0       0       0       0
  1728 ;;Total ram usage:        0 bytes
  1729 ;; Hardware stack levels used:    1
  1730 ;; Hardware stack levels required when called:    2
  1731 ;; This function calls:
  1732 ;;		_atraso_ms
  1733 ;;		_lcd_cmd
  1734 ;; This function is called by:
  1735 ;;		_main
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           	psect	text2
  1740  003C06                     __ptext2:
  1741                           	callstack 0
  1742  003C06                     _lcd_init:
  1743                           	callstack 28
  1744  003C06                     
  1745                           ;lcd.c: 30:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  1746  003C06  9284               	bcf	132,1,c	;volatile
  1747                           
  1748                           ;lcd.c: 31:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<2));
  1749  003C08  9484               	bcf	132,2,c	;volatile
  1750  003C0A                     
  1751                           ;lcd.c: 32:     atraso_ms(20);
  1752  003C0A  0E00               	movlw	0
  1753  003C0C  6E02               	movwf	(atraso_ms@t+1)^0,c
  1754  003C0E  0E14               	movlw	20
  1755  003C10  6E01               	movwf	atraso_ms@t^0,c
  1756  003C12  EC3F  F01D         	call	_atraso_ms	;wreg free
  1757  003C16                     
  1758                           ;lcd.c: 33:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  1759  003C16  8284               	bsf	132,1,c	;volatile
  1760                           
  1761                           ;lcd.c: 35:     lcd_cmd(0x38);
  1762  003C18  0E38               	movlw	56
  1763  003C1A  EC7A  F01F         	call	_lcd_cmd
  1764                           
  1765                           ;lcd.c: 36:     atraso_ms(5);
  1766  003C1E  0E00               	movlw	0
  1767  003C20  6E02               	movwf	(atraso_ms@t+1)^0,c
  1768  003C22  0E05               	movlw	5
  1769  003C24  6E01               	movwf	atraso_ms@t^0,c
  1770  003C26  EC3F  F01D         	call	_atraso_ms	;wreg free
  1771                           
  1772                           ;lcd.c: 37:     lcd_cmd(0x38);
  1773  003C2A  0E38               	movlw	56
  1774  003C2C  EC7A  F01F         	call	_lcd_cmd
  1775                           
  1776                           ;lcd.c: 38:     atraso_ms(1);
  1777  003C30  0E00               	movlw	0
  1778  003C32  6E02               	movwf	(atraso_ms@t+1)^0,c
  1779  003C34  0E01               	movlw	1
  1780  003C36  6E01               	movwf	atraso_ms@t^0,c
  1781  003C38  EC3F  F01D         	call	_atraso_ms	;wreg free
  1782                           
  1783                           ;lcd.c: 39:     lcd_cmd(0x38);
  1784  003C3C  0E38               	movlw	56
  1785  003C3E  EC7A  F01F         	call	_lcd_cmd
  1786                           
  1787                           ;lcd.c: 40:     lcd_cmd(0x08);
  1788  003C42  0E08               	movlw	8
  1789  003C44  EC7A  F01F         	call	_lcd_cmd
  1790                           
  1791                           ;lcd.c: 41:     lcd_cmd(0x0F);
  1792  003C48  0E0F               	movlw	15
  1793  003C4A  EC7A  F01F         	call	_lcd_cmd
  1794                           
  1795                           ;lcd.c: 42:     lcd_cmd(0x01);
  1796  003C4E  0E01               	movlw	1
  1797  003C50  EC7A  F01F         	call	_lcd_cmd
  1798                           
  1799                           ;lcd.c: 43:     lcd_cmd(0x38);
  1800  003C54  0E38               	movlw	56
  1801  003C56  EC7A  F01F         	call	_lcd_cmd
  1802                           
  1803                           ;lcd.c: 44:     lcd_cmd(0x80);
  1804  003C5A  0E80               	movlw	128
  1805  003C5C  EC7A  F01F         	call	_lcd_cmd
  1806  003C60  0012               	return		;funcret
  1807  003C62                     __end_of_lcd_init:
  1808                           	callstack 0
  1809                           
  1810 ;; *************** function _esvaziar_tanque *****************
  1811 ;; Defined at:
  1812 ;;		line 8 in file "esvaziar.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;  vol             2  125[COMRAM] PTR 
  1815 ;;		 -> volume(4), 
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;  numeros        20   36[BANK0 ] int [10]
  1818 ;;  y               8   56[BANK0 ] unsigned char [8]
  1819 ;;  i               2   70[BANK0 ] int 
  1820 ;;  tempo           2   64[BANK0 ] int 
  1821 ;;  decremento      4   66[BANK0 ] int 
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      void 
  1824 ;; Registers used:
  1825 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1831 ;;      Params:         2       0       0       0       0       0       0
  1832 ;;      Locals:         0      36       0       0       0       0       0
  1833 ;;      Temps:          0       0       0       0       0       0       0
  1834 ;;      Totals:         2      36       0       0       0       0       0
  1835 ;;Total ram usage:       38 bytes
  1836 ;; Hardware stack levels used:    1
  1837 ;; Hardware stack levels required when called:    8
  1838 ;; This function calls:
  1839 ;;		___fldiv
  1840 ;;		___flsub
  1841 ;;		___fltol
  1842 ;;		_atraso_ms
  1843 ;;		_lcd_cmd
  1844 ;;		_lcd_str
  1845 ;;		_sprintf
  1846 ;; This function is called by:
  1847 ;;		_main
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           	psect	text3
  1852  0026A4                     __ptext3:
  1853                           	callstack 0
  1854  0026A4                     _esvaziar_tanque:
  1855                           	callstack 22
  1856  0026A4                     
  1857                           ;esvaziar.c: 11:     lcd_cmd(0x01);
  1858  0026A4  0E01               	movlw	1
  1859  0026A6  EC7A  F01F         	call	_lcd_cmd
  1860                           
  1861                           ;esvaziar.c: 12:     lcd_cmd(0x80);
  1862  0026AA  0E80               	movlw	128
  1863  0026AC  EC7A  F01F         	call	_lcd_cmd
  1864  0026B0                     
  1865                           ;esvaziar.c: 13:     lcd_str("Quant(L): ");
  1866  0026B0  0EA5               	movlw	low STR_7
  1867  0026B2  6E08               	movwf	lcd_str@str^0,c
  1868  0026B4  0E06               	movlw	high STR_7
  1869  0026B6  6E09               	movwf	(lcd_str@str+1)^0,c
  1870  0026B8  EC03  F01D         	call	_lcd_str	;wreg free
  1871  0026BC                     
  1872                           ;esvaziar.c: 14:     lcd_cmd(0xC0);
  1873  0026BC  0EC0               	movlw	192
  1874  0026BE  EC7A  F01F         	call	_lcd_cmd
  1875                           
  1876                           ;esvaziar.c: 15:     lcd_str("RB1-voltar");
  1877  0026C2  0EB0               	movlw	low STR_8
  1878  0026C4  6E08               	movwf	lcd_str@str^0,c
  1879  0026C6  0E06               	movlw	high STR_8
  1880  0026C8  6E09               	movwf	(lcd_str@str+1)^0,c
  1881  0026CA  EC03  F01D         	call	_lcd_str	;wreg free
  1882  0026CE                     
  1883                           ;esvaziar.c: 16:     lcd_cmd(0x80 +10);
  1884  0026CE  0E8A               	movlw	138
  1885  0026D0  EC7A  F01F         	call	_lcd_cmd
  1886  0026D4                     
  1887                           ;esvaziar.c: 17:     atraso_ms(1000);
  1888  0026D4  0E03               	movlw	3
  1889  0026D6  6E02               	movwf	(atraso_ms@t+1)^0,c
  1890  0026D8  0EE8               	movlw	232
  1891  0026DA  6E01               	movwf	atraso_ms@t^0,c
  1892  0026DC  EC3F  F01D         	call	_atraso_ms	;wreg free
  1893  0026E0                     
  1894                           ;esvaziar.c: 19:     double decremento = 5;
  1895  0026E0  0E00               	movlw	0
  1896  0026E2  0100               	movlb	0	; () banked
  1897  0026E4  6FC2               	movwf	esvaziar_tanque@decremento& (0+255),b
  1898  0026E6  0E00               	movlw	0
  1899  0026E8  6FC3               	movwf	(esvaziar_tanque@decremento+1)& (0+255),b
  1900  0026EA  0EA0               	movlw	160
  1901  0026EC  6FC4               	movwf	(esvaziar_tanque@decremento+2)& (0+255),b
  1902  0026EE  0E40               	movlw	64
  1903  0026F0  6FC5               	movwf	(esvaziar_tanque@decremento+3)& (0+255),b
  1904  0026F2                     
  1905                           ; BSR set to: 0
  1906                           ;esvaziar.c: 21:     if (*vol - decremento < 0) {
  1907  0026F2  C07E  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  1908  0026F6  C07F  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  1909  0026FA  CFDE F01F          	movff	postinc2,___flsub@b
  1910  0026FE  CFDE F020          	movff	postinc2,___flsub@b+1
  1911  002702  CFDE F021          	movff	postinc2,___flsub@b+2
  1912  002706  CFDE F022          	movff	postinc2,___flsub@b+3
  1913  00270A  C0C2  F023         	movff	esvaziar_tanque@decremento,___flsub@a
  1914  00270E  C0C3  F024         	movff	esvaziar_tanque@decremento+1,___flsub@a+1
  1915  002712  C0C4  F025         	movff	esvaziar_tanque@decremento+2,___flsub@a+2
  1916  002716  C0C5  F026         	movff	esvaziar_tanque@decremento+3,___flsub@a+3
  1917  00271A  ECB1  F01E         	call	___flsub	;wreg free
  1918  00271E  BE22               	btfsc	(?___flsub+3)^0,7,c
  1919  002720  EF96  F013         	goto	u5470
  1920  002724  EF94  F013         	goto	u5471
  1921  002728                     u5471:
  1922  002728  EFAD  F013         	goto	l4542
  1923  00272C                     u5470:
  1924  00272C                     
  1925                           ;esvaziar.c: 24:         lcd_cmd(0x01);
  1926  00272C  0E01               	movlw	1
  1927  00272E  EC7A  F01F         	call	_lcd_cmd
  1928                           
  1929                           ;esvaziar.c: 25:         lcd_cmd(0x80);
  1930  002732  0E80               	movlw	128
  1931  002734  EC7A  F01F         	call	_lcd_cmd
  1932  002738                     
  1933                           ;esvaziar.c: 26:         lcd_str("ERRO: vol < 0");
  1934  002738  0E56               	movlw	low STR_23
  1935  00273A  6E08               	movwf	lcd_str@str^0,c
  1936  00273C  0E06               	movlw	high STR_23
  1937  00273E  6E09               	movwf	(lcd_str@str+1)^0,c
  1938  002740  EC03  F01D         	call	_lcd_str	;wreg free
  1939  002744                     
  1940                           ;esvaziar.c: 27:         lcd_cmd(0xC0);
  1941  002744  0EC0               	movlw	192
  1942  002746  EC7A  F01F         	call	_lcd_cmd
  1943                           
  1944                           ;esvaziar.c: 28:         lcd_str("RB1-Voltar");
  1945  00274A  0E67               	movlw	low (STR_16+3)
  1946  00274C  6E08               	movwf	lcd_str@str^0,c
  1947  00274E  0E06               	movlw	high (STR_16+3)
  1948  002750  6E09               	movwf	(lcd_str@str+1)^0,c
  1949  002752  EC03  F01D         	call	_lcd_str	;wreg free
  1950                           
  1951                           ;esvaziar.c: 34:     } else {
  1952  002756  EF6E  F014         	goto	l190
  1953  00275A                     l4542:
  1954                           
  1955                           ;esvaziar.c: 36:         *vol -= decremento;
  1956  00275A  C07E  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  1957  00275E  C07F  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  1958  002762  CFDE F01F          	movff	postinc2,___flsub@b
  1959  002766  CFDE F020          	movff	postinc2,___flsub@b+1
  1960  00276A  CFDE F021          	movff	postinc2,___flsub@b+2
  1961  00276E  CFDE F022          	movff	postinc2,___flsub@b+3
  1962  002772  C0C2  F023         	movff	esvaziar_tanque@decremento,___flsub@a
  1963  002776  C0C3  F024         	movff	esvaziar_tanque@decremento+1,___flsub@a+1
  1964  00277A  C0C4  F025         	movff	esvaziar_tanque@decremento+2,___flsub@a+2
  1965  00277E  C0C5  F026         	movff	esvaziar_tanque@decremento+3,___flsub@a+3
  1966  002782  ECB1  F01E         	call	___flsub	;wreg free
  1967  002786  C07E  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  1968  00278A  C07F  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  1969  00278E  C01F  FFDE         	movff	?___flsub,postinc2
  1970  002792  C020  FFDE         	movff	?___flsub+1,postinc2
  1971  002796  C021  FFDE         	movff	?___flsub+2,postinc2
  1972  00279A  C022  FFDE         	movff	?___flsub+3,postinc2
  1973  00279E                     
  1974                           ;esvaziar.c: 37:         char y[8];;esvaziar.c: 38:         sprintf(y, "%.1f", *vol);
  1975  00279E  0EB8               	movlw	low esvaziar_tanque@y
  1976  0027A0  0100               	movlb	0	; () banked
  1977  0027A2  6F92               	movwf	sprintf@s& (0+255),b
  1978  0027A4  0E00               	movlw	high esvaziar_tanque@y
  1979  0027A6  6F93               	movwf	(sprintf@s+1)& (0+255),b
  1980  0027A8  0ED7               	movlw	low STR_11
  1981  0027AA  6F94               	movwf	sprintf@fmt& (0+255),b
  1982  0027AC  0E06               	movlw	high STR_11
  1983  0027AE  6F95               	movwf	(sprintf@fmt+1)& (0+255),b
  1984  0027B0  C07E  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  1985  0027B4  C07F  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  1986  0027B8  CFDE F096          	movff	postinc2,?_sprintf+4
  1987  0027BC  CFDE F097          	movff	postinc2,?_sprintf+5
  1988  0027C0  CFDE F098          	movff	postinc2,?_sprintf+6
  1989  0027C4  CFDE F099          	movff	postinc2,?_sprintf+7
  1990  0027C8  EC5F  F01E         	call	_sprintf	;wreg free
  1991  0027CC                     
  1992                           ;esvaziar.c: 39:         lcd_str(y);
  1993  0027CC  0EB8               	movlw	low esvaziar_tanque@y
  1994  0027CE  6E08               	movwf	lcd_str@str^0,c
  1995  0027D0  0E00               	movlw	high esvaziar_tanque@y
  1996  0027D2  6E09               	movwf	(lcd_str@str+1)^0,c
  1997  0027D4  EC03  F01D         	call	_lcd_str	;wreg free
  1998  0027D8                     
  1999                           ;esvaziar.c: 40:         lcd_str(" L");
  2000  0027D8  0EEF               	movlw	low STR_12
  2001  0027DA  6E08               	movwf	lcd_str@str^0,c
  2002  0027DC  0E06               	movlw	high STR_12
  2003  0027DE  6E09               	movwf	(lcd_str@str+1)^0,c
  2004  0027E0  EC03  F01D         	call	_lcd_str	;wreg free
  2005  0027E4                     
  2006                           ;esvaziar.c: 43:         int tempo = decremento / 2;
  2007  0027E4  0E00               	movlw	0
  2008  0027E6  6E05               	movwf	___fldiv@a^0,c
  2009  0027E8  0E00               	movlw	0
  2010  0027EA  6E06               	movwf	(___fldiv@a+1)^0,c
  2011  0027EC  0E00               	movlw	0
  2012  0027EE  6E07               	movwf	(___fldiv@a+2)^0,c
  2013  0027F0  0E40               	movlw	64
  2014  0027F2  6E08               	movwf	(___fldiv@a+3)^0,c
  2015  0027F4  C0C2  F001         	movff	esvaziar_tanque@decremento,___fldiv@b
  2016  0027F8  C0C3  F002         	movff	esvaziar_tanque@decremento+1,___fldiv@b+1
  2017  0027FC  C0C4  F003         	movff	esvaziar_tanque@decremento+2,___fldiv@b+2
  2018  002800  C0C5  F004         	movff	esvaziar_tanque@decremento+3,___fldiv@b+3
  2019  002804  ECF1  F00F         	call	___fldiv	;wreg free
  2020  002808  C001  F01A         	movff	?___fldiv,___fltol@f1
  2021  00280C  C002  F01B         	movff	?___fldiv+1,___fltol@f1+1
  2022  002810  C003  F01C         	movff	?___fldiv+2,___fltol@f1+2
  2023  002814  C004  F01D         	movff	?___fldiv+3,___fltol@f1+3
  2024  002818  ECE1  F018         	call	___fltol	;wreg free
  2025  00281C  C01A  F0C0         	movff	?___fltol,esvaziar_tanque@tempo
  2026  002820  C01B  F0C1         	movff	?___fltol+1,esvaziar_tanque@tempo+1
  2027  002824                     
  2028                           ;esvaziar.c: 44:         int i;;esvaziar.c: 45:         int numeros[10] = {0x3F, 0x06, 0
      +                          x5B, 0x4F, 0x66, 0x6D, 0x7D,
  2029  002824  EE21  F050         	lfsr	2,esvaziar_tanque@F342
  2030  002828  EE10  F0A4         	lfsr	1,esvaziar_tanque@numeros
  2031  00282C  0E13               	movlw	19
  2032  00282E                     u5481:
  2033  00282E  CFDB FFE3          	movff	plusw2,plusw1
  2034  002832  06E8               	decf	wreg,f,c
  2035  002834  E2FC               	bc	u5481
  2036  002836                     
  2037                           ;esvaziar.c: 48:         (*(volatile __near unsigned char*)0xF92) = 0x00;
  2038  002836  0E00               	movlw	0
  2039  002838  6E92               	movwf	146,c	;volatile
  2040  00283A                     
  2041                           ;esvaziar.c: 49:         (((*(volatile __near unsigned char*)0xF80)) |= (1<<5));
  2042  00283A  8A80               	bsf	128,5,c	;volatile
  2043  00283C                     
  2044                           ;esvaziar.c: 54:         lcd_cmd(0x01);
  2045  00283C  0E01               	movlw	1
  2046  00283E  EC7A  F01F         	call	_lcd_cmd
  2047  002842                     
  2048                           ;esvaziar.c: 55:         lcd_cmd(0x80);
  2049  002842  0E80               	movlw	128
  2050  002844  EC7A  F01F         	call	_lcd_cmd
  2051  002848                     
  2052                           ;esvaziar.c: 56:         lcd_str("Esvaziando...");
  2053  002848  0E48               	movlw	low STR_27
  2054  00284A  6E08               	movwf	lcd_str@str^0,c
  2055  00284C  0E06               	movlw	high STR_27
  2056  00284E  6E09               	movwf	(lcd_str@str+1)^0,c
  2057  002850  EC03  F01D         	call	_lcd_str	;wreg free
  2058  002854                     
  2059                           ;esvaziar.c: 57:         lcd_cmd(0xC0);
  2060  002854  0EC0               	movlw	192
  2061  002856  EC7A  F01F         	call	_lcd_cmd
  2062  00285A                     
  2063                           ;esvaziar.c: 58:         lcd_str("Aguarde!");
  2064  00285A  0EC6               	movlw	low STR_14
  2065  00285C  6E08               	movwf	lcd_str@str^0,c
  2066  00285E  0E06               	movlw	high STR_14
  2067  002860  6E09               	movwf	(lcd_str@str+1)^0,c
  2068  002862  EC03  F01D         	call	_lcd_str	;wreg free
  2069  002866                     
  2070                           ;esvaziar.c: 65:         for (i = tempo; i >= 0; i--) {
  2071  002866  C0C0  F0C6         	movff	esvaziar_tanque@tempo,esvaziar_tanque@i
  2072  00286A  C0C1  F0C7         	movff	esvaziar_tanque@tempo+1,esvaziar_tanque@i+1
  2073  00286E                     l4570:
  2074  00286E  0100               	movlb	0	; () banked
  2075  002870  BFC7               	btfsc	(esvaziar_tanque@i+1)& (0+255),7,b
  2076  002872  EF3F  F014         	goto	u5490
  2077  002876  EF3D  F014         	goto	u5491
  2078  00287A                     u5491:
  2079  00287A  EF41  F014         	goto	l4574
  2080  00287E                     u5490:
  2081  00287E  EF58  F014         	goto	l4582
  2082  002882                     l4574:
  2083                           
  2084                           ; BSR set to: 0
  2085                           ;esvaziar.c: 66:             (*(volatile __near unsigned char*)0xF83) = numeros[i];
  2086  002882  90D8               	bcf	status,0,c
  2087  002884  35C6               	rlcf	esvaziar_tanque@i& (0+255),w,b
  2088  002886  6ED9               	movwf	fsr2l,c
  2089  002888  35C7               	rlcf	(esvaziar_tanque@i+1)& (0+255),w,b
  2090  00288A  6EDA               	movwf	fsr2h,c
  2091  00288C  0EA4               	movlw	low esvaziar_tanque@numeros
  2092  00288E  26D9               	addwf	fsr2l,f,c
  2093  002890  0E00               	movlw	high esvaziar_tanque@numeros
  2094  002892  22DA               	addwfc	fsr2h,f,c
  2095  002894  50DF               	movf	indf2,w,c
  2096  002896  6E83               	movwf	131,c	;volatile
  2097  002898                     
  2098                           ; BSR set to: 0
  2099                           ;esvaziar.c: 67:             atraso_ms(1000);
  2100  002898  0E03               	movlw	3
  2101  00289A  6E02               	movwf	(atraso_ms@t+1)^0,c
  2102  00289C  0EE8               	movlw	232
  2103  00289E  6E01               	movwf	atraso_ms@t^0,c
  2104  0028A0  EC3F  F01D         	call	_atraso_ms	;wreg free
  2105  0028A4                     
  2106                           ;esvaziar.c: 68:         }
  2107  0028A4  0100               	movlb	0	; () banked
  2108  0028A6  07C6               	decf	esvaziar_tanque@i& (0+255),f,b
  2109  0028A8  A0D8               	btfss	status,0,c
  2110  0028AA  07C7               	decf	(esvaziar_tanque@i+1)& (0+255),f,b
  2111  0028AC  EF37  F014         	goto	l4570
  2112  0028B0                     l4582:
  2113                           
  2114                           ; BSR set to: 0
  2115                           ;esvaziar.c: 69:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  2116  0028B0  9A80               	bcf	128,5,c	;volatile
  2117  0028B2                     
  2118                           ; BSR set to: 0
  2119                           ;esvaziar.c: 72:         lcd_cmd(0x01);
  2120  0028B2  0E01               	movlw	1
  2121  0028B4  EC7A  F01F         	call	_lcd_cmd
  2122  0028B8                     
  2123                           ;esvaziar.c: 73:         lcd_cmd(0x80);
  2124  0028B8  0E80               	movlw	128
  2125  0028BA  EC7A  F01F         	call	_lcd_cmd
  2126  0028BE                     
  2127                           ;esvaziar.c: 74:         lcd_str("    SUCESSO!");
  2128  0028BE  0E80               	movlw	low STR_15
  2129  0028C0  6E08               	movwf	lcd_str@str^0,c
  2130  0028C2  0E06               	movlw	high STR_15
  2131  0028C4  6E09               	movwf	(lcd_str@str+1)^0,c
  2132  0028C6  EC03  F01D         	call	_lcd_str	;wreg free
  2133  0028CA                     
  2134                           ;esvaziar.c: 75:         lcd_cmd(0xC0);
  2135  0028CA  0EC0               	movlw	192
  2136  0028CC  EC7A  F01F         	call	_lcd_cmd
  2137  0028D0                     
  2138                           ;esvaziar.c: 76:         lcd_str("   RB1-Voltar");
  2139  0028D0  0E64               	movlw	low STR_16
  2140  0028D2  6E08               	movwf	lcd_str@str^0,c
  2141  0028D4  0E06               	movlw	high STR_16
  2142  0028D6  6E09               	movwf	(lcd_str@str+1)^0,c
  2143  0028D8  EC03  F01D         	call	_lcd_str	;wreg free
  2144  0028DC                     l190:
  2145                           
  2146                           ;esvaziar.c: 94:     while(((((*(volatile __near unsigned char*)0xF81)) & (1<<1)))){
  2147  0028DC  B281               	btfsc	129,1,c	;volatile
  2148  0028DE  EF73  F014         	goto	u5501
  2149  0028E2  EF75  F014         	goto	u5500
  2150  0028E6                     u5501:
  2151  0028E6  EF6E  F014         	goto	l190
  2152  0028EA                     u5500:
  2153  0028EA  0012               	return		;funcret
  2154  0028EC                     __end_of_esvaziar_tanque:
  2155                           	callstack 0
  2156                           
  2157 ;; *************** function _encher_tanque *****************
  2158 ;; Defined at:
  2159 ;;		line 8 in file "encher.c"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;  vol             2  125[COMRAM] PTR 
  2162 ;;		 -> volume(4), 
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;  numeros        20   40[BANK0 ] int [10]
  2165 ;;  y               8   60[BANK0 ] unsigned char [8]
  2166 ;;  i               2   76[BANK0 ] int 
  2167 ;;  tempo           2   68[BANK0 ] int 
  2168 ;;  num             4   70[BANK0 ] unsigned int [2]
  2169 ;;  i               2   79[BANK0 ] unsigned int 
  2170 ;;  incremento      2   74[BANK0 ] unsigned int 
  2171 ;;  tmp             1   78[BANK0 ] unsigned char 
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  1    wreg      void 
  2174 ;; Registers used:
  2175 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2181 ;;      Params:         2       0       0       0       0       0       0
  2182 ;;      Locals:         0      41       0       0       0       0       0
  2183 ;;      Temps:          0       4       0       0       0       0       0
  2184 ;;      Totals:         2      45       0       0       0       0       0
  2185 ;;Total ram usage:       47 bytes
  2186 ;; Hardware stack levels used:    1
  2187 ;; Hardware stack levels required when called:    8
  2188 ;; This function calls:
  2189 ;;		___fladd
  2190 ;;		___flge
  2191 ;;		___wmul
  2192 ;;		___xxtofl
  2193 ;;		_atraso_ms
  2194 ;;		_lcd_cmd
  2195 ;;		_lcd_dat
  2196 ;;		_lcd_str
  2197 ;;		_sprintf
  2198 ;;		_tc_tecla
  2199 ;; This function is called by:
  2200 ;;		_main
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           	psect	text4
  2205  00237C                     __ptext4:
  2206                           	callstack 0
  2207  00237C                     _encher_tanque:
  2208                           	callstack 22
  2209  00237C                     
  2210                           ;encher.c: 11:     lcd_cmd(0x01);
  2211  00237C  0E01               	movlw	1
  2212  00237E  EC7A  F01F         	call	_lcd_cmd
  2213                           
  2214                           ;encher.c: 12:     lcd_cmd(0x80);
  2215  002382  0E80               	movlw	128
  2216  002384  EC7A  F01F         	call	_lcd_cmd
  2217  002388                     
  2218                           ;encher.c: 13:     lcd_str("Quant(L): ");
  2219  002388  0EA5               	movlw	low STR_7
  2220  00238A  6E08               	movwf	lcd_str@str^0,c
  2221  00238C  0E06               	movlw	high STR_7
  2222  00238E  6E09               	movwf	(lcd_str@str+1)^0,c
  2223  002390  EC03  F01D         	call	_lcd_str	;wreg free
  2224  002394                     
  2225                           ;encher.c: 14:     lcd_cmd(0xC0);
  2226  002394  0EC0               	movlw	192
  2227  002396  EC7A  F01F         	call	_lcd_cmd
  2228                           
  2229                           ;encher.c: 15:     lcd_str("RB1-voltar");
  2230  00239A  0EB0               	movlw	low STR_8
  2231  00239C  6E08               	movwf	lcd_str@str^0,c
  2232  00239E  0E06               	movlw	high STR_8
  2233  0023A0  6E09               	movwf	(lcd_str@str+1)^0,c
  2234  0023A2  EC03  F01D         	call	_lcd_str	;wreg free
  2235  0023A6                     
  2236                           ;encher.c: 16:     lcd_cmd(0x80 +10);
  2237  0023A6  0E8A               	movlw	138
  2238  0023A8  EC7A  F01F         	call	_lcd_cmd
  2239  0023AC                     
  2240                           ;encher.c: 21:     unsigned int incremento;;encher.c: 23:     unsigned int i = 0;
  2241  0023AC  0E00               	movlw	0
  2242  0023AE  0100               	movlb	0	; () banked
  2243  0023B0  6FD0               	movwf	(encher_tanque@i+1)& (0+255),b
  2244  0023B2  0E00               	movlw	0
  2245  0023B4  6FCF               	movwf	encher_tanque@i& (0+255),b
  2246  0023B6                     
  2247                           ; BSR set to: 0
  2248                           ;encher.c: 24:     unsigned int num[2];;encher.c: 25:     unsigned char tmp;;encher.c: 2
      +                          7:     (*(volatile __near unsigned char*)0xF93) = 0xF8;
  2249  0023B6  0EF8               	movlw	248
  2250  0023B8  6E93               	movwf	147,c	;volatile
  2251                           
  2252                           ;encher.c: 29:     while (i!=2) {
  2253  0023BA  EF2F  F012         	goto	l4456
  2254  0023BE                     l4440:
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;encher.c: 30:         (*(volatile __near unsigned char*)0xF95) = 0x0F;
  2258  0023BE  0E0F               	movlw	15
  2259  0023C0  6E95               	movwf	149,c	;volatile
  2260  0023C2                     
  2261                           ; BSR set to: 0
  2262                           ;encher.c: 31:         tmp = tc_tecla(0) + 0x30;
  2263  0023C2  0E00               	movlw	0
  2264  0023C4  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  2265  0023C6  0E00               	movlw	0
  2266  0023C8  6E07               	movwf	tc_tecla@timeout^0,c
  2267  0023CA  EC7F  F015         	call	_tc_tecla	;wreg free
  2268  0023CE  0F30               	addlw	48
  2269  0023D0  0100               	movlb	0	; () banked
  2270  0023D2  6FCE               	movwf	encher_tanque@tmp& (0+255),b
  2271  0023D4                     
  2272                           ; BSR set to: 0
  2273                           ;encher.c: 32:         (*(volatile __near unsigned char*)0xF95) = 0x00;
  2274  0023D4  0E00               	movlw	0
  2275  0023D6  6E95               	movwf	149,c	;volatile
  2276  0023D8                     
  2277                           ; BSR set to: 0
  2278                           ;encher.c: 33:         lcd_dat(tmp);
  2279  0023D8  51CE               	movf	encher_tanque@tmp& (0+255),w,b
  2280  0023DA  EC65  F01F         	call	_lcd_dat
  2281  0023DE                     
  2282                           ;encher.c: 34:         if (i == 0) {
  2283  0023DE  0100               	movlb	0	; () banked
  2284  0023E0  51CF               	movf	encher_tanque@i& (0+255),w,b
  2285  0023E2  11D0               	iorwf	(encher_tanque@i+1)& (0+255),w,b
  2286  0023E4  A4D8               	btfss	status,2,c
  2287  0023E6  EFF7  F011         	goto	u5411
  2288  0023EA  EFF9  F011         	goto	u5410
  2289  0023EE                     u5411:
  2290  0023EE  EF15  F012         	goto	l4452
  2291  0023F2                     u5410:
  2292  0023F2                     
  2293                           ; BSR set to: 0
  2294                           ;encher.c: 35:             num[i] = (tmp - '0')*10;
  2295  0023F2  0ED0               	movlw	208
  2296  0023F4  25CE               	addwf	encher_tanque@tmp& (0+255),w,b
  2297  0023F6  6E01               	movwf	___wmul@multiplier^0,c
  2298  0023F8  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2299  0023FA  0EFF               	movlw	255
  2300  0023FC  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  2301  0023FE  0E00               	movlw	0
  2302  002400  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2303  002402  0E0A               	movlw	10
  2304  002404  6E03               	movwf	___wmul@multiplicand^0,c
  2305  002406  ECA3  F01F         	call	___wmul	;wreg free
  2306  00240A  90D8               	bcf	status,0,c
  2307  00240C  0100               	movlb	0	; () banked
  2308  00240E  35CF               	rlcf	encher_tanque@i& (0+255),w,b
  2309  002410  6ED9               	movwf	fsr2l,c
  2310  002412  35D0               	rlcf	(encher_tanque@i+1)& (0+255),w,b
  2311  002414  6EDA               	movwf	fsr2h,c
  2312  002416  0EC6               	movlw	low encher_tanque@num
  2313  002418  26D9               	addwf	fsr2l,f,c
  2314  00241A  0E00               	movlw	high encher_tanque@num
  2315  00241C  22DA               	addwfc	fsr2h,f,c
  2316  00241E  C001  FFDE         	movff	?___wmul,postinc2
  2317  002422  C002  FFDD         	movff	?___wmul+1,postdec2
  2318                           
  2319                           ;encher.c: 36:         } else {
  2320  002426  EF2D  F012         	goto	l4454
  2321  00242A                     l4452:
  2322                           
  2323                           ; BSR set to: 0
  2324                           ;encher.c: 37:             num[i] = (tmp - '0');
  2325  00242A  0ED0               	movlw	208
  2326  00242C  6FA4               	movwf	??_encher_tanque& (0+255),b
  2327  00242E  0EFF               	movlw	255
  2328  002430  6FA5               	movwf	(??_encher_tanque+1)& (0+255),b
  2329  002432  51CE               	movf	encher_tanque@tmp& (0+255),w,b
  2330  002434  6FA6               	movwf	(??_encher_tanque+2)& (0+255),b
  2331  002436  6BA7               	clrf	(??_encher_tanque+3)& (0+255),b
  2332  002438  51A4               	movf	??_encher_tanque& (0+255),w,b
  2333  00243A  27A6               	addwf	(??_encher_tanque+2)& (0+255),f,b
  2334  00243C  51A5               	movf	(??_encher_tanque+1)& (0+255),w,b
  2335  00243E  23A7               	addwfc	(??_encher_tanque+3)& (0+255),f,b
  2336  002440  90D8               	bcf	status,0,c
  2337  002442  35CF               	rlcf	encher_tanque@i& (0+255),w,b
  2338  002444  6ED9               	movwf	fsr2l,c
  2339  002446  35D0               	rlcf	(encher_tanque@i+1)& (0+255),w,b
  2340  002448  6EDA               	movwf	fsr2h,c
  2341  00244A  0EC6               	movlw	low encher_tanque@num
  2342  00244C  26D9               	addwf	fsr2l,f,c
  2343  00244E  0E00               	movlw	high encher_tanque@num
  2344  002450  22DA               	addwfc	fsr2h,f,c
  2345  002452  C0A6  FFDE         	movff	??_encher_tanque+2,postinc2
  2346  002456  C0A7  FFDD         	movff	??_encher_tanque+3,postdec2
  2347  00245A                     l4454:
  2348                           
  2349                           ; BSR set to: 0
  2350                           ;encher.c: 39:         i++;
  2351  00245A  4BCF               	infsnz	encher_tanque@i& (0+255),f,b
  2352  00245C  2BD0               	incf	(encher_tanque@i+1)& (0+255),f,b
  2353  00245E                     l4456:
  2354                           
  2355                           ; BSR set to: 0
  2356                           ;encher.c: 29:     while (i!=2) {
  2357  00245E  0E02               	movlw	2
  2358  002460  19CF               	xorwf	encher_tanque@i& (0+255),w,b
  2359  002462  11D0               	iorwf	(encher_tanque@i+1)& (0+255),w,b
  2360  002464  A4D8               	btfss	status,2,c
  2361  002466  EF37  F012         	goto	u5421
  2362  00246A  EF39  F012         	goto	u5420
  2363  00246E                     u5421:
  2364  00246E  EFDF  F011         	goto	l4440
  2365  002472                     u5420:
  2366  002472                     
  2367                           ; BSR set to: 0
  2368                           ;encher.c: 42:     atraso_ms(500);
  2369  002472  0E01               	movlw	1
  2370  002474  6E02               	movwf	(atraso_ms@t+1)^0,c
  2371  002476  0EF4               	movlw	244
  2372  002478  6E01               	movwf	atraso_ms@t^0,c
  2373  00247A  EC3F  F01D         	call	_atraso_ms	;wreg free
  2374                           
  2375                           ;encher.c: 43:     lcd_cmd(0x01);
  2376  00247E  0E01               	movlw	1
  2377  002480  EC7A  F01F         	call	_lcd_cmd
  2378  002484                     
  2379                           ;encher.c: 45:     incremento = num[0]+num[1];
  2380  002484  0100               	movlb	0	; () banked
  2381  002486  51C6               	movf	encher_tanque@num& (0+255),w,b
  2382  002488  25C8               	addwf	(encher_tanque@num+2)& (0+255),w,b
  2383  00248A  6FCA               	movwf	encher_tanque@incremento& (0+255),b
  2384  00248C  51C7               	movf	(encher_tanque@num+1)& (0+255),w,b
  2385  00248E  21C9               	addwfc	(encher_tanque@num+3)& (0+255),w,b
  2386  002490  6FCB               	movwf	(encher_tanque@incremento+1)& (0+255),b
  2387  002492                     
  2388                           ; BSR set to: 0
  2389                           ;encher.c: 47:     if (*vol + incremento > 70) {
  2390  002492  0E00               	movlw	0
  2391  002494  6E1F               	movwf	___flge@ff1^0,c
  2392  002496  0E00               	movlw	0
  2393  002498  6E20               	movwf	(___flge@ff1+1)^0,c
  2394  00249A  0E8C               	movlw	140
  2395  00249C  6E21               	movwf	(___flge@ff1+2)^0,c
  2396  00249E  0E42               	movlw	66
  2397  0024A0  6E22               	movwf	(___flge@ff1+3)^0,c
  2398  0024A2  C07E  FFD9         	movff	encher_tanque@vol,fsr2l
  2399  0024A6  C07F  FFDA         	movff	encher_tanque@vol+1,fsr2h
  2400  0024AA  CFDE F013          	movff	postinc2,___fladd@a
  2401  0024AE  CFDE F014          	movff	postinc2,___fladd@a+1
  2402  0024B2  CFDE F015          	movff	postinc2,___fladd@a+2
  2403  0024B6  CFDE F016          	movff	postinc2,___fladd@a+3
  2404  0024BA  C0CA  F001         	movff	encher_tanque@incremento,___xxtofl@val
  2405  0024BE  C0CB  F002         	movff	encher_tanque@incremento+1,___xxtofl@val+1
  2406  0024C2  6A03               	clrf	(___xxtofl@val+2)^0,c
  2407  0024C4  6A04               	clrf	(___xxtofl@val+3)^0,c
  2408  0024C6  0E00               	movlw	0
  2409  0024C8  EC3F  F017         	call	___xxtofl
  2410  0024CC  C001  F00F         	movff	?___xxtofl,___fladd@b
  2411  0024D0  C002  F010         	movff	?___xxtofl+1,___fladd@b+1
  2412  0024D4  C003  F011         	movff	?___xxtofl+2,___fladd@b+2
  2413  0024D8  C004  F012         	movff	?___xxtofl+3,___fladd@b+3
  2414  0024DC  EC47  F009         	call	___fladd	;wreg free
  2415  0024E0  C00F  F023         	movff	?___fladd,___flge@ff2
  2416  0024E4  C010  F024         	movff	?___fladd+1,___flge@ff2+1
  2417  0024E8  C011  F025         	movff	?___fladd+2,___flge@ff2+2
  2418  0024EC  C012  F026         	movff	?___fladd+3,___flge@ff2+3
  2419  0024F0  EC64  F019         	call	___flge	;wreg free
  2420  0024F4  B0D8               	btfsc	status,0,c
  2421  0024F6  EF7F  F012         	goto	u5431
  2422  0024FA  EF81  F012         	goto	u5430
  2423  0024FE                     u5431:
  2424  0024FE  EF98  F012         	goto	l4470
  2425  002502                     u5430:
  2426  002502                     
  2427                           ;encher.c: 50:         lcd_cmd(0x01);
  2428  002502  0E01               	movlw	1
  2429  002504  EC7A  F01F         	call	_lcd_cmd
  2430                           
  2431                           ;encher.c: 51:         lcd_cmd(0x80);
  2432  002508  0E80               	movlw	128
  2433  00250A  EC7A  F01F         	call	_lcd_cmd
  2434  00250E                     
  2435                           ;encher.c: 52:         lcd_str("ERRO: vol > MAX");
  2436  00250E  0E29               	movlw	low STR_9
  2437  002510  6E08               	movwf	lcd_str@str^0,c
  2438  002512  0E06               	movlw	high STR_9
  2439  002514  6E09               	movwf	(lcd_str@str+1)^0,c
  2440  002516  EC03  F01D         	call	_lcd_str	;wreg free
  2441  00251A                     
  2442                           ;encher.c: 53:         lcd_cmd(0xC0);
  2443  00251A  0EC0               	movlw	192
  2444  00251C  EC7A  F01F         	call	_lcd_cmd
  2445                           
  2446                           ;encher.c: 54:         lcd_str("RB1-Voltar");
  2447  002520  0E67               	movlw	low (STR_16+3)
  2448  002522  6E08               	movwf	lcd_str@str^0,c
  2449  002524  0E06               	movlw	high (STR_16+3)
  2450  002526  6E09               	movwf	(lcd_str@str+1)^0,c
  2451  002528  EC03  F01D         	call	_lcd_str	;wreg free
  2452                           
  2453                           ;encher.c: 60:     } else {
  2454  00252C  EF4A  F013         	goto	l156
  2455  002530                     l4470:
  2456                           
  2457                           ;encher.c: 62:         *vol += incremento;
  2458  002530  C07E  FFD9         	movff	encher_tanque@vol,fsr2l
  2459  002534  C07F  FFDA         	movff	encher_tanque@vol+1,fsr2h
  2460  002538  CFDE F00F          	movff	postinc2,___fladd@b
  2461  00253C  CFDE F010          	movff	postinc2,___fladd@b+1
  2462  002540  CFDE F011          	movff	postinc2,___fladd@b+2
  2463  002544  CFDE F012          	movff	postinc2,___fladd@b+3
  2464  002548  C0CA  F001         	movff	encher_tanque@incremento,___xxtofl@val
  2465  00254C  C0CB  F002         	movff	encher_tanque@incremento+1,___xxtofl@val+1
  2466  002550  6A03               	clrf	(___xxtofl@val+2)^0,c
  2467  002552  6A04               	clrf	(___xxtofl@val+3)^0,c
  2468  002554  0E00               	movlw	0
  2469  002556  EC3F  F017         	call	___xxtofl
  2470  00255A  C001  F013         	movff	?___xxtofl,___fladd@a
  2471  00255E  C002  F014         	movff	?___xxtofl+1,___fladd@a+1
  2472  002562  C003  F015         	movff	?___xxtofl+2,___fladd@a+2
  2473  002566  C004  F016         	movff	?___xxtofl+3,___fladd@a+3
  2474  00256A  EC47  F009         	call	___fladd	;wreg free
  2475  00256E  C07E  FFD9         	movff	encher_tanque@vol,fsr2l
  2476  002572  C07F  FFDA         	movff	encher_tanque@vol+1,fsr2h
  2477  002576  C00F  FFDE         	movff	?___fladd,postinc2
  2478  00257A  C010  FFDE         	movff	?___fladd+1,postinc2
  2479  00257E  C011  FFDE         	movff	?___fladd+2,postinc2
  2480  002582  C012  FFDE         	movff	?___fladd+3,postinc2
  2481  002586                     
  2482                           ;encher.c: 63:         char y[8];;encher.c: 64:         sprintf(y, "%.1f", *vol);
  2483  002586  0EBC               	movlw	low encher_tanque@y
  2484  002588  0100               	movlb	0	; () banked
  2485  00258A  6F92               	movwf	sprintf@s& (0+255),b
  2486  00258C  0E00               	movlw	high encher_tanque@y
  2487  00258E  6F93               	movwf	(sprintf@s+1)& (0+255),b
  2488  002590  0ED7               	movlw	low STR_11
  2489  002592  6F94               	movwf	sprintf@fmt& (0+255),b
  2490  002594  0E06               	movlw	high STR_11
  2491  002596  6F95               	movwf	(sprintf@fmt+1)& (0+255),b
  2492  002598  C07E  FFD9         	movff	encher_tanque@vol,fsr2l
  2493  00259C  C07F  FFDA         	movff	encher_tanque@vol+1,fsr2h
  2494  0025A0  CFDE F096          	movff	postinc2,?_sprintf+4
  2495  0025A4  CFDE F097          	movff	postinc2,?_sprintf+5
  2496  0025A8  CFDE F098          	movff	postinc2,?_sprintf+6
  2497  0025AC  CFDE F099          	movff	postinc2,?_sprintf+7
  2498  0025B0  EC5F  F01E         	call	_sprintf	;wreg free
  2499  0025B4                     
  2500                           ;encher.c: 65:         lcd_str(y);
  2501  0025B4  0EBC               	movlw	low encher_tanque@y
  2502  0025B6  6E08               	movwf	lcd_str@str^0,c
  2503  0025B8  0E00               	movlw	high encher_tanque@y
  2504  0025BA  6E09               	movwf	(lcd_str@str+1)^0,c
  2505  0025BC  EC03  F01D         	call	_lcd_str	;wreg free
  2506  0025C0                     
  2507                           ;encher.c: 66:         lcd_str(" L");
  2508  0025C0  0EEF               	movlw	low STR_12
  2509  0025C2  6E08               	movwf	lcd_str@str^0,c
  2510  0025C4  0E06               	movlw	high STR_12
  2511  0025C6  6E09               	movwf	(lcd_str@str+1)^0,c
  2512  0025C8  EC03  F01D         	call	_lcd_str	;wreg free
  2513  0025CC                     
  2514                           ;encher.c: 69:         int tempo = incremento / 2;
  2515  0025CC  90D8               	bcf	status,0,c
  2516  0025CE  0100               	movlb	0	; () banked
  2517  0025D0  31CB               	rrcf	(encher_tanque@incremento+1)& (0+255),w,b
  2518  0025D2  6FA4               	movwf	??_encher_tanque& (0+255),b
  2519  0025D4  31CA               	rrcf	encher_tanque@incremento& (0+255),w,b
  2520  0025D6  6FC4               	movwf	encher_tanque@tempo& (0+255),b
  2521  0025D8  C0A4  F0C5         	movff	??_encher_tanque,encher_tanque@tempo+1
  2522  0025DC                     
  2523                           ; BSR set to: 0
  2524                           ;encher.c: 70:         int i;;encher.c: 71:         int numeros[10] = {0x3F, 0x06, 0x5B,
      +                           0x4F, 0x66, 0x6D, 0x7D,
  2525  0025DC  EE21  F064         	lfsr	2,encher_tanque@F345
  2526  0025E0  EE10  F0A8         	lfsr	1,encher_tanque@numeros
  2527  0025E4  0E13               	movlw	19
  2528  0025E6                     u5441:
  2529  0025E6  CFDB FFE3          	movff	plusw2,plusw1
  2530  0025EA  06E8               	decf	wreg,f,c
  2531  0025EC  E2FC               	bc	u5441
  2532  0025EE                     
  2533                           ; BSR set to: 0
  2534                           ;encher.c: 74:         (*(volatile __near unsigned char*)0xF92) = 0x00;
  2535  0025EE  0E00               	movlw	0
  2536  0025F0  6E92               	movwf	146,c	;volatile
  2537  0025F2                     
  2538                           ; BSR set to: 0
  2539                           ;encher.c: 75:         (((*(volatile __near unsigned char*)0xF80)) |= (1<<5));
  2540  0025F2  8A80               	bsf	128,5,c	;volatile
  2541  0025F4                     
  2542                           ; BSR set to: 0
  2543                           ;encher.c: 80:         lcd_cmd(0x01);
  2544  0025F4  0E01               	movlw	1
  2545  0025F6  EC7A  F01F         	call	_lcd_cmd
  2546  0025FA                     
  2547                           ;encher.c: 81:         lcd_cmd(0x80);
  2548  0025FA  0E80               	movlw	128
  2549  0025FC  EC7A  F01F         	call	_lcd_cmd
  2550  002600                     
  2551                           ;encher.c: 82:         lcd_str("Enchendo...");
  2552  002600  0E8D               	movlw	low STR_13
  2553  002602  6E08               	movwf	lcd_str@str^0,c
  2554  002604  0E06               	movlw	high STR_13
  2555  002606  6E09               	movwf	(lcd_str@str+1)^0,c
  2556  002608  EC03  F01D         	call	_lcd_str	;wreg free
  2557  00260C                     
  2558                           ;encher.c: 83:         lcd_cmd(0xC0);
  2559  00260C  0EC0               	movlw	192
  2560  00260E  EC7A  F01F         	call	_lcd_cmd
  2561  002612                     
  2562                           ;encher.c: 84:         lcd_str("Aguarde!");
  2563  002612  0EC6               	movlw	low STR_14
  2564  002614  6E08               	movwf	lcd_str@str^0,c
  2565  002616  0E06               	movlw	high STR_14
  2566  002618  6E09               	movwf	(lcd_str@str+1)^0,c
  2567  00261A  EC03  F01D         	call	_lcd_str	;wreg free
  2568  00261E                     
  2569                           ;encher.c: 91:         for (i = tempo; i >= 0; i--) {
  2570  00261E  C0C4  F0CC         	movff	encher_tanque@tempo,encher_tanque@i_128
  2571  002622  C0C5  F0CD         	movff	encher_tanque@tempo+1,encher_tanque@i_128+1
  2572  002626                     l4498:
  2573  002626  0100               	movlb	0	; () banked
  2574  002628  BFCD               	btfsc	(encher_tanque@i_128+1)& (0+255),7,b
  2575  00262A  EF1B  F013         	goto	u5450
  2576  00262E  EF19  F013         	goto	u5451
  2577  002632                     u5451:
  2578  002632  EF1D  F013         	goto	l4502
  2579  002636                     u5450:
  2580  002636  EF34  F013         	goto	l4510
  2581  00263A                     l4502:
  2582                           
  2583                           ; BSR set to: 0
  2584                           ;encher.c: 92:             (*(volatile __near unsigned char*)0xF83) = numeros[i];
  2585  00263A  90D8               	bcf	status,0,c
  2586  00263C  35CC               	rlcf	encher_tanque@i_128& (0+255),w,b
  2587  00263E  6ED9               	movwf	fsr2l,c
  2588  002640  35CD               	rlcf	(encher_tanque@i_128+1)& (0+255),w,b
  2589  002642  6EDA               	movwf	fsr2h,c
  2590  002644  0EA8               	movlw	low encher_tanque@numeros
  2591  002646  26D9               	addwf	fsr2l,f,c
  2592  002648  0E00               	movlw	high encher_tanque@numeros
  2593  00264A  22DA               	addwfc	fsr2h,f,c
  2594  00264C  50DF               	movf	indf2,w,c
  2595  00264E  6E83               	movwf	131,c	;volatile
  2596  002650                     
  2597                           ; BSR set to: 0
  2598                           ;encher.c: 93:             atraso_ms(1000);
  2599  002650  0E03               	movlw	3
  2600  002652  6E02               	movwf	(atraso_ms@t+1)^0,c
  2601  002654  0EE8               	movlw	232
  2602  002656  6E01               	movwf	atraso_ms@t^0,c
  2603  002658  EC3F  F01D         	call	_atraso_ms	;wreg free
  2604  00265C                     
  2605                           ;encher.c: 94:         }
  2606  00265C  0100               	movlb	0	; () banked
  2607  00265E  07CC               	decf	encher_tanque@i_128& (0+255),f,b
  2608  002660  A0D8               	btfss	status,0,c
  2609  002662  07CD               	decf	(encher_tanque@i_128+1)& (0+255),f,b
  2610  002664  EF13  F013         	goto	l4498
  2611  002668                     l4510:
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;encher.c: 95:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  2615  002668  9A80               	bcf	128,5,c	;volatile
  2616  00266A                     
  2617                           ; BSR set to: 0
  2618                           ;encher.c: 98:         lcd_cmd(0x01);
  2619  00266A  0E01               	movlw	1
  2620  00266C  EC7A  F01F         	call	_lcd_cmd
  2621  002670                     
  2622                           ;encher.c: 99:         lcd_cmd(0x80);
  2623  002670  0E80               	movlw	128
  2624  002672  EC7A  F01F         	call	_lcd_cmd
  2625  002676                     
  2626                           ;encher.c: 100:         lcd_str("    SUCESSO!");
  2627  002676  0E80               	movlw	low STR_15
  2628  002678  6E08               	movwf	lcd_str@str^0,c
  2629  00267A  0E06               	movlw	high STR_15
  2630  00267C  6E09               	movwf	(lcd_str@str+1)^0,c
  2631  00267E  EC03  F01D         	call	_lcd_str	;wreg free
  2632  002682                     
  2633                           ;encher.c: 101:         lcd_cmd(0xC0);
  2634  002682  0EC0               	movlw	192
  2635  002684  EC7A  F01F         	call	_lcd_cmd
  2636  002688                     
  2637                           ;encher.c: 102:         lcd_str("   RB1-Voltar");
  2638  002688  0E64               	movlw	low STR_16
  2639  00268A  6E08               	movwf	lcd_str@str^0,c
  2640  00268C  0E06               	movlw	high STR_16
  2641  00268E  6E09               	movwf	(lcd_str@str+1)^0,c
  2642  002690  EC03  F01D         	call	_lcd_str	;wreg free
  2643  002694                     l156:
  2644                           
  2645                           ;encher.c: 120:     while(((((*(volatile __near unsigned char*)0xF81)) & (1<<1)))){
  2646  002694  B281               	btfsc	129,1,c	;volatile
  2647  002696  EF4F  F013         	goto	u5461
  2648  00269A  EF51  F013         	goto	u5460
  2649  00269E                     u5461:
  2650  00269E  EF4A  F013         	goto	l156
  2651  0026A2                     u5460:
  2652  0026A2  0012               	return		;funcret
  2653  0026A4                     __end_of_encher_tanque:
  2654                           	callstack 0
  2655                           
  2656 ;; *************** function _tc_tecla *****************
  2657 ;; Defined at:
  2658 ;;		line 14 in file "teclado.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;  timeout         2    6[COMRAM] unsigned int 
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;  to              2    8[COMRAM] unsigned int 
  2663 ;;  i               1   12[COMRAM] unsigned char 
  2664 ;;  ret             1   11[COMRAM] unsigned char 
  2665 ;;  tmp             1   10[COMRAM] unsigned char 
  2666 ;; Return value:  Size  Location     Type
  2667 ;;                  1    wreg      unsigned char 
  2668 ;; Registers used:
  2669 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2675 ;;      Params:         2       0       0       0       0       0       0
  2676 ;;      Locals:         5       0       0       0       0       0       0
  2677 ;;      Temps:          0       0       0       0       0       0       0
  2678 ;;      Totals:         7       0       0       0       0       0       0
  2679 ;;Total ram usage:        7 bytes
  2680 ;; Hardware stack levels used:    1
  2681 ;; Hardware stack levels required when called:    1
  2682 ;; This function calls:
  2683 ;;		_atraso_ms
  2684 ;; This function is called by:
  2685 ;;		_encher_tanque
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689                           	psect	text5
  2690  002AFE                     __ptext5:
  2691                           	callstack 0
  2692  002AFE                     _tc_tecla:
  2693                           	callstack 28
  2694  002AFE                     
  2695                           ;teclado.c: 15:     unsigned int to = 0;
  2696  002AFE  0E00               	movlw	0
  2697  002B00  6E0A               	movwf	(tc_tecla@to+1)^0,c
  2698  002B02  0E00               	movlw	0
  2699  002B04  6E09               	movwf	tc_tecla@to^0,c
  2700                           
  2701                           ;teclado.c: 16:     unsigned char i;;teclado.c: 17:     unsigned char ret = 0;
  2702  002B06  0E00               	movlw	0
  2703  002B08  6E0C               	movwf	tc_tecla@ret^0,c
  2704  002B0A                     
  2705                           ;teclado.c: 18:     unsigned char tmp = (*(volatile __near unsigned char*)0xF81);
  2706  002B0A  CF81 F00B          	movff	3969,tc_tecla@tmp	;volatile
  2707                           
  2708                           ;teclado.c: 21:     while (((to < timeout) || (!timeout))&&(!ret)) {
  2709  002B0E  EF30  F016         	goto	l4316
  2710  002B12                     l4264:
  2711                           
  2712                           ;teclado.c: 22:         for (i = 0; i < 3; i++) {
  2713  002B12  0E00               	movlw	0
  2714  002B14  6E0D               	movwf	tc_tecla@i^0,c
  2715  002B16                     l4270:
  2716                           
  2717                           ;teclado.c: 23:             (*(volatile __near unsigned char*)0xF81) |= ~linha[i];
  2718  002B16  0E01               	movlw	low _linha
  2719  002B18  240D               	addwf	tc_tecla@i^0,w,c
  2720  002B1A  6EF6               	movwf	tblptrl,c
  2721  002B1C  6AF7               	clrf	tblptrh,c
  2722  002B1E  0E06               	movlw	high _linha
  2723  002B20  22F7               	addwfc	tblptrh,f,c
  2724  002B22                     	if	0	;There are less than 3 active tblptr bytes
  2725  002B22                     	endif
  2726  002B22  0008               	tblrd		*
  2727  002B24  50F5               	movf	tablat,w,c
  2728  002B26  0AFF               	xorlw	255
  2729  002B28  1281               	iorwf	129,f,c	;volatile
  2730  002B2A                     
  2731                           ;teclado.c: 24:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<3))) 
      +                          {
  2732  002B2A  B683               	btfsc	131,3,c	;volatile
  2733  002B2C  EF9A  F015         	goto	u5111
  2734  002B30  EF9C  F015         	goto	u5110
  2735  002B34                     u5111:
  2736  002B34  EFB4  F015         	goto	l45
  2737  002B38                     u5110:
  2738  002B38                     
  2739                           ;teclado.c: 25:                 atraso_ms(atraso);
  2740  002B38  0E00               	movlw	0
  2741  002B3A  6E02               	movwf	(atraso_ms@t+1)^0,c
  2742  002B3C  0E0F               	movlw	15
  2743  002B3E  6E01               	movwf	atraso_ms@t^0,c
  2744  002B40  EC3F  F01D         	call	_atraso_ms	;wreg free
  2745  002B44                     
  2746                           ;teclado.c: 26:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<3
      +                          ))) {
  2747  002B44  B683               	btfsc	131,3,c	;volatile
  2748  002B46  EFA7  F015         	goto	u5121
  2749  002B4A  EFA9  F015         	goto	u5120
  2750  002B4E                     u5121:
  2751  002B4E  EFB4  F015         	goto	l45
  2752  002B52                     u5120:
  2753  002B52                     l47:
  2754  002B52  A683               	btfss	131,3,c	;volatile
  2755  002B54  EFAE  F015         	goto	u5131
  2756  002B58  EFB0  F015         	goto	u5130
  2757  002B5C                     u5131:
  2758  002B5C  EFA9  F015         	goto	l47
  2759  002B60                     u5130:
  2760  002B60                     
  2761                           ;teclado.c: 28:                     ret = 1 + i;
  2762  002B60  280D               	incf	tc_tecla@i^0,w,c
  2763  002B62  6E0C               	movwf	tc_tecla@ret^0,c
  2764                           
  2765                           ;teclado.c: 29:                     break;
  2766  002B64  EF26  F016         	goto	l4312
  2767  002B68                     l45:
  2768                           
  2769                           ;teclado.c: 32:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<2))) 
      +                          {
  2770  002B68  B483               	btfsc	131,2,c	;volatile
  2771  002B6A  EFB9  F015         	goto	u5141
  2772  002B6E  EFBB  F015         	goto	u5140
  2773  002B72                     u5141:
  2774  002B72  EFD4  F015         	goto	l50
  2775  002B76                     u5140:
  2776  002B76                     
  2777                           ;teclado.c: 33:                 atraso_ms(atraso);
  2778  002B76  0E00               	movlw	0
  2779  002B78  6E02               	movwf	(atraso_ms@t+1)^0,c
  2780  002B7A  0E0F               	movlw	15
  2781  002B7C  6E01               	movwf	atraso_ms@t^0,c
  2782  002B7E  EC3F  F01D         	call	_atraso_ms	;wreg free
  2783  002B82                     
  2784                           ;teclado.c: 34:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<2
      +                          ))) {
  2785  002B82  B483               	btfsc	131,2,c	;volatile
  2786  002B84  EFC6  F015         	goto	u5151
  2787  002B88  EFC8  F015         	goto	u5150
  2788  002B8C                     u5151:
  2789  002B8C  EFD4  F015         	goto	l50
  2790  002B90                     u5150:
  2791  002B90                     l52:
  2792  002B90  A483               	btfss	131,2,c	;volatile
  2793  002B92  EFCD  F015         	goto	u5161
  2794  002B96  EFCF  F015         	goto	u5160
  2795  002B9A                     u5161:
  2796  002B9A  EFC8  F015         	goto	l52
  2797  002B9E                     u5160:
  2798  002B9E                     
  2799                           ;teclado.c: 36:                     ret = 4 + i;
  2800  002B9E  500D               	movf	tc_tecla@i^0,w,c
  2801  002BA0  0F04               	addlw	4
  2802  002BA2  6E0C               	movwf	tc_tecla@ret^0,c
  2803                           
  2804                           ;teclado.c: 37:                     break;
  2805  002BA4  EF26  F016         	goto	l4312
  2806  002BA8                     l50:
  2807                           
  2808                           ;teclado.c: 40:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<1))) 
      +                          {
  2809  002BA8  B283               	btfsc	131,1,c	;volatile
  2810  002BAA  EFD9  F015         	goto	u5171
  2811  002BAE  EFDB  F015         	goto	u5170
  2812  002BB2                     u5171:
  2813  002BB2  EFF4  F015         	goto	l55
  2814  002BB6                     u5170:
  2815  002BB6                     
  2816                           ;teclado.c: 41:                 atraso_ms(atraso);
  2817  002BB6  0E00               	movlw	0
  2818  002BB8  6E02               	movwf	(atraso_ms@t+1)^0,c
  2819  002BBA  0E0F               	movlw	15
  2820  002BBC  6E01               	movwf	atraso_ms@t^0,c
  2821  002BBE  EC3F  F01D         	call	_atraso_ms	;wreg free
  2822  002BC2                     
  2823                           ;teclado.c: 42:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<1
      +                          ))) {
  2824  002BC2  B283               	btfsc	131,1,c	;volatile
  2825  002BC4  EFE6  F015         	goto	u5181
  2826  002BC8  EFE8  F015         	goto	u5180
  2827  002BCC                     u5181:
  2828  002BCC  EFF4  F015         	goto	l55
  2829  002BD0                     u5180:
  2830  002BD0                     l57:
  2831  002BD0  A283               	btfss	131,1,c	;volatile
  2832  002BD2  EFED  F015         	goto	u5191
  2833  002BD6  EFEF  F015         	goto	u5190
  2834  002BDA                     u5191:
  2835  002BDA  EFE8  F015         	goto	l57
  2836  002BDE                     u5190:
  2837  002BDE                     
  2838                           ;teclado.c: 44:                     ret = 7 + i;
  2839  002BDE  500D               	movf	tc_tecla@i^0,w,c
  2840  002BE0  0F07               	addlw	7
  2841  002BE2  6E0C               	movwf	tc_tecla@ret^0,c
  2842                           
  2843                           ;teclado.c: 45:                     break;
  2844  002BE4  EF26  F016         	goto	l4312
  2845  002BE8                     l55:
  2846                           
  2847                           ;teclado.c: 48:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<0))) 
      +                          {
  2848  002BE8  B083               	btfsc	131,0,c	;volatile
  2849  002BEA  EFF9  F015         	goto	u5201
  2850  002BEE  EFFB  F015         	goto	u5200
  2851  002BF2                     u5201:
  2852  002BF2  EF14  F016         	goto	l4306
  2853  002BF6                     u5200:
  2854  002BF6                     
  2855                           ;teclado.c: 49:                 atraso_ms(atraso);
  2856  002BF6  0E00               	movlw	0
  2857  002BF8  6E02               	movwf	(atraso_ms@t+1)^0,c
  2858  002BFA  0E0F               	movlw	15
  2859  002BFC  6E01               	movwf	atraso_ms@t^0,c
  2860  002BFE  EC3F  F01D         	call	_atraso_ms	;wreg free
  2861  002C02                     
  2862                           ;teclado.c: 50:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<0
      +                          ))) {
  2863  002C02  B083               	btfsc	131,0,c	;volatile
  2864  002C04  EF06  F016         	goto	u5211
  2865  002C08  EF08  F016         	goto	u5210
  2866  002C0C                     u5211:
  2867  002C0C  EF14  F016         	goto	l4306
  2868  002C10                     u5210:
  2869  002C10                     l62:
  2870  002C10  A083               	btfss	131,0,c	;volatile
  2871  002C12  EF0D  F016         	goto	u5221
  2872  002C16  EF0F  F016         	goto	u5220
  2873  002C1A                     u5221:
  2874  002C1A  EF08  F016         	goto	l62
  2875  002C1E                     u5220:
  2876  002C1E                     
  2877                           ;teclado.c: 52:                     ret = 10 + i;
  2878  002C1E  500D               	movf	tc_tecla@i^0,w,c
  2879  002C20  0F0A               	addlw	10
  2880  002C22  6E0C               	movwf	tc_tecla@ret^0,c
  2881                           
  2882                           ;teclado.c: 53:                     break;
  2883  002C24  EF26  F016         	goto	l4312
  2884  002C28                     l4306:
  2885                           
  2886                           ;teclado.c: 56:             (*(volatile __near unsigned char*)0xF81) &= linha[i];
  2887  002C28  0E01               	movlw	low _linha
  2888  002C2A  240D               	addwf	tc_tecla@i^0,w,c
  2889  002C2C  6EF6               	movwf	tblptrl,c
  2890  002C2E  6AF7               	clrf	tblptrh,c
  2891  002C30  0E06               	movlw	high _linha
  2892  002C32  22F7               	addwfc	tblptrh,f,c
  2893  002C34                     	if	0	;There are less than 3 active tblptr bytes
  2894  002C34                     	endif
  2895  002C34  0008               	tblrd		*
  2896  002C36  50F5               	movf	tablat,w,c
  2897  002C38  1681               	andwf	129,f,c	;volatile
  2898  002C3A                     
  2899                           ;teclado.c: 57:         };
  2900  002C3A  2A0D               	incf	tc_tecla@i^0,f,c
  2901  002C3C  0E02               	movlw	2
  2902  002C3E  640D               	cpfsgt	tc_tecla@i^0,c
  2903  002C40  EF24  F016         	goto	u5231
  2904  002C44  EF26  F016         	goto	u5230
  2905  002C48                     u5231:
  2906  002C48  EF8B  F015         	goto	l4270
  2907  002C4C                     u5230:
  2908  002C4C                     l4312:
  2909                           
  2910                           ;teclado.c: 58:         atraso_ms(atraso_min);
  2911  002C4C  0E00               	movlw	0
  2912  002C4E  6E02               	movwf	(atraso_ms@t+1)^0,c
  2913  002C50  0E05               	movlw	5
  2914  002C52  6E01               	movwf	atraso_ms@t^0,c
  2915  002C54  EC3F  F01D         	call	_atraso_ms	;wreg free
  2916  002C58                     
  2917                           ;teclado.c: 59:         to += 5;
  2918  002C58  0E05               	movlw	5
  2919  002C5A  2609               	addwf	tc_tecla@to^0,f,c
  2920  002C5C  0E00               	movlw	0
  2921  002C5E  220A               	addwfc	(tc_tecla@to+1)^0,f,c
  2922  002C60                     l4316:
  2923                           
  2924                           ;teclado.c: 21:     while (((to < timeout) || (!timeout))&&(!ret)) {
  2925  002C60  5007               	movf	tc_tecla@timeout^0,w,c
  2926  002C62  5C09               	subwf	tc_tecla@to^0,w,c
  2927  002C64  5008               	movf	(tc_tecla@timeout+1)^0,w,c
  2928  002C66  580A               	subwfb	(tc_tecla@to+1)^0,w,c
  2929  002C68  A0D8               	btfss	status,0,c
  2930  002C6A  EF39  F016         	goto	u5241
  2931  002C6E  EF3B  F016         	goto	u5240
  2932  002C72                     u5241:
  2933  002C72  EF44  F016         	goto	l4320
  2934  002C76                     u5240:
  2935  002C76  5007               	movf	tc_tecla@timeout^0,w,c
  2936  002C78  1008               	iorwf	(tc_tecla@timeout+1)^0,w,c
  2937  002C7A  A4D8               	btfss	status,2,c
  2938  002C7C  EF42  F016         	goto	u5251
  2939  002C80  EF44  F016         	goto	u5250
  2940  002C84                     u5251:
  2941  002C84  EF4C  F016         	goto	l4322
  2942  002C88                     u5250:
  2943  002C88                     l4320:
  2944  002C88  500C               	movf	tc_tecla@ret^0,w,c
  2945  002C8A  B4D8               	btfsc	status,2,c
  2946  002C8C  EF4A  F016         	goto	u5261
  2947  002C90  EF4C  F016         	goto	u5260
  2948  002C94                     u5261:
  2949  002C94  EF89  F015         	goto	l4264
  2950  002C98                     u5260:
  2951  002C98                     l4322:
  2952                           
  2953                           ;teclado.c: 62:     if (!ret)ret = 255;
  2954  002C98  500C               	movf	tc_tecla@ret^0,w,c
  2955  002C9A  A4D8               	btfss	status,2,c
  2956  002C9C  EF52  F016         	goto	u5271
  2957  002CA0  EF54  F016         	goto	u5270
  2958  002CA4                     u5271:
  2959  002CA4  EF55  F016         	goto	l4326
  2960  002CA8                     u5270:
  2961  002CA8  680C               	setf	tc_tecla@ret^0,c
  2962  002CAA                     l4326:
  2963                           
  2964                           ;teclado.c: 63:     if (ret == 11)ret = 0;
  2965  002CAA  0E0B               	movlw	11
  2966  002CAC  180C               	xorwf	tc_tecla@ret^0,w,c
  2967  002CAE  A4D8               	btfss	status,2,c
  2968  002CB0  EF5C  F016         	goto	u5281
  2969  002CB4  EF5E  F016         	goto	u5280
  2970  002CB8                     u5281:
  2971  002CB8  EF60  F016         	goto	l4330
  2972  002CBC                     u5280:
  2973  002CBC  0E00               	movlw	0
  2974  002CBE  6E0C               	movwf	tc_tecla@ret^0,c
  2975  002CC0                     l4330:
  2976                           
  2977                           ;teclado.c: 64:     (*(volatile __near unsigned char*)0xF81) = tmp;
  2978  002CC0  C00B  FF81         	movff	tc_tecla@tmp,3969	;volatile
  2979                           
  2980                           ;teclado.c: 65:     return ret;
  2981  002CC4  500C               	movf	tc_tecla@ret^0,w,c
  2982  002CC6  0012               	return		;funcret
  2983  002CC8                     __end_of_tc_tecla:
  2984                           	callstack 0
  2985                           
  2986 ;; *************** function _sprintf *****************
  2987 ;; Defined at:
  2988 ;;		line 9 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;  s               2   18[BANK0 ] PTR unsigned char 
  2991 ;;		 -> esvaziar_tanque@y(8), ver_quantidade@y(8), encher_tanque@y(8), 
  2992 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
  2993 ;;		 -> STR_25(5), STR_17(5), STR_11(5), 
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;  f               6   30[BANK0 ] struct _IO_FILE
  2996 ;;  ap              2   28[BANK0 ] PTR void [1]
  2997 ;;		 -> ?_sprintf(2), 
  2998 ;;  ret             2    0        int 
  2999 ;; Return value:  Size  Location     Type
  3000 ;;                  2   18[BANK0 ] int 
  3001 ;; Registers used:
  3002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3003 ;; Tracked objects:
  3004 ;;		On entry : 0/0
  3005 ;;		On exit  : 0/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3008 ;;      Params:         0       8       0       0       0       0       0
  3009 ;;      Locals:         0      10       0       0       0       0       0
  3010 ;;      Temps:          0       0       0       0       0       0       0
  3011 ;;      Totals:         0      18       0       0       0       0       0
  3012 ;;Total ram usage:       18 bytes
  3013 ;; Hardware stack levels used:    1
  3014 ;; Hardware stack levels required when called:    7
  3015 ;; This function calls:
  3016 ;;		_vfprintf
  3017 ;; This function is called by:
  3018 ;;		_encher_tanque
  3019 ;;		_ver_quantidade
  3020 ;;		_esvaziar_tanque
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023                           
  3024                           	psect	text6
  3025  003CBE                     __ptext6:
  3026                           	callstack 0
  3027  003CBE                     _sprintf:
  3028                           	callstack 22
  3029  003CBE  0E96               	movlw	low (?_sprintf+4)
  3030  003CC0  0100               	movlb	0	; () banked
  3031  003CC2  6F9C               	movwf	sprintf@ap& (0+255),b
  3032  003CC4  0E00               	movlw	high (?_sprintf+4)
  3033  003CC6  6F9D               	movwf	(sprintf@ap+1)& (0+255),b
  3034  003CC8  C092  F09E         	movff	sprintf@s,sprintf@f
  3035  003CCC  C093  F09F         	movff	sprintf@s+1,sprintf@f+1
  3036  003CD0                     
  3037                           ; BSR set to: 0
  3038  003CD0  0E00               	movlw	0
  3039  003CD2  6FA1               	movwf	(sprintf@f+3)& (0+255),b
  3040  003CD4  0E00               	movlw	0
  3041  003CD6  6FA0               	movwf	(sprintf@f+2)& (0+255),b
  3042  003CD8                     
  3043                           ; BSR set to: 0
  3044  003CD8  0E00               	movlw	0
  3045  003CDA  6FA3               	movwf	(sprintf@f+5)& (0+255),b
  3046  003CDC  0E00               	movlw	0
  3047  003CDE  6FA2               	movwf	(sprintf@f+4)& (0+255),b
  3048  003CE0                     
  3049                           ; BSR set to: 0
  3050  003CE0  0E9E               	movlw	low sprintf@f
  3051  003CE2  6F8C               	movwf	vfprintf@fp& (0+255),b
  3052  003CE4  0E00               	movlw	high sprintf@f
  3053  003CE6  6F8D               	movwf	(vfprintf@fp+1)& (0+255),b
  3054  003CE8  C094  F08E         	movff	sprintf@fmt,vfprintf@fmt
  3055  003CEC  C095  F08F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3056  003CF0  0E9C               	movlw	low sprintf@ap
  3057  003CF2  6F90               	movwf	vfprintf@ap& (0+255),b
  3058  003CF4  0E00               	movlw	high sprintf@ap
  3059  003CF6  6F91               	movwf	(vfprintf@ap+1)& (0+255),b
  3060  003CF8  ECA2  F01D         	call	_vfprintf	;wreg free
  3061  003CFC  0100               	movlb	0	; () banked
  3062  003CFE  51A0               	movf	(sprintf@f+2)& (0+255),w,b
  3063  003D00  2592               	addwf	sprintf@s& (0+255),w,b
  3064  003D02  6ED9               	movwf	fsr2l,c
  3065  003D04  51A1               	movf	(sprintf@f+3)& (0+255),w,b
  3066  003D06  2193               	addwfc	(sprintf@s+1)& (0+255),w,b
  3067  003D08  6EDA               	movwf	fsr2h,c
  3068  003D0A  0E00               	movlw	0
  3069  003D0C  6EDF               	movwf	indf2,c
  3070  003D0E                     
  3071                           ; BSR set to: 0
  3072  003D0E  0012               	return		;funcret
  3073  003D10                     __end_of_sprintf:
  3074                           	callstack 0
  3075                           
  3076 ;; *************** function _vfprintf *****************
  3077 ;; Defined at:
  3078 ;;		line 1368 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  3081 ;;		 -> sprintf@f(6), 
  3082 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  3083 ;;		 -> STR_25(5), STR_17(5), STR_11(5), 
  3084 ;;  ap              2   16[BANK0 ] PTR PTR void 
  3085 ;;		 -> sprintf@ap(2), 
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;  cfmt            2  123[COMRAM] PTR unsigned char 
  3088 ;;		 -> STR_25(5), STR_17(5), STR_11(5), 
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  2   12[BANK0 ] int 
  3091 ;; Registers used:
  3092 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3098 ;;      Params:         0       6       0       0       0       0       0
  3099 ;;      Locals:         2       0       0       0       0       0       0
  3100 ;;      Temps:          0       0       0       0       0       0       0
  3101 ;;      Totals:         2       6       0       0       0       0       0
  3102 ;;Total ram usage:        8 bytes
  3103 ;; Hardware stack levels used:    1
  3104 ;; Hardware stack levels required when called:    6
  3105 ;; This function calls:
  3106 ;;		_vfpfcnvrt
  3107 ;; This function is called by:
  3108 ;;		_sprintf
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           	psect	text7
  3113  003B44                     __ptext7:
  3114                           	callstack 0
  3115  003B44                     _vfprintf:
  3116                           	callstack 22
  3117  003B44                     
  3118                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprintf(FIL
      +                          E *fp, const char *fmt, va_list ap);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1369: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 13
      +                          71:     char *cfmt;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 137
      +                          3:     cfmt = (char *)fmt;
  3119  003B44  C08E  F07C         	movff	vfprintf@fmt,vfprintf@cfmt
  3120  003B48  C08F  F07D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3121  003B4C                     
  3122                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 0;
  3123  003B4C  0E00               	movlw	0
  3124  003B4E  0100               	movlb	0	; () banked
  3125  003B50  6FDA               	movwf	(_nout+1)& (0+255),b
  3126  003B52  0E00               	movlw	0
  3127  003B54  6FD9               	movwf	_nout& (0+255),b
  3128                           
  3129                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt
      +                          ) {
  3130  003B56  EFC0  F01D         	goto	l4236
  3131  003B5A                     l4234:
  3132                           
  3133                           ; BSR set to: 0
  3134                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nout += 
      +                          vfpfcnvrt(fp, &cfmt, ap);
  3135  003B5A  C08C  F072         	movff	vfprintf@fp,vfpfcnvrt@fp
  3136  003B5E  C08D  F073         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3137  003B62  0E7C               	movlw	low vfprintf@cfmt
  3138  003B64  6E74               	movwf	vfpfcnvrt@fmt^0,c
  3139  003B66  0E00               	movlw	high vfprintf@cfmt
  3140  003B68  6E75               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3141  003B6A  C090  F076         	movff	vfprintf@ap,vfpfcnvrt@ap
  3142  003B6E  C091  F077         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3143  003B72  ECA7  F00B         	call	_vfpfcnvrt	;wreg free
  3144  003B76  5072               	movf	?_vfpfcnvrt^0,w,c
  3145  003B78  0100               	movlb	0	; () banked
  3146  003B7A  27D9               	addwf	_nout& (0+255),f,b
  3147  003B7C  5073               	movf	(?_vfpfcnvrt+1)^0,w,c
  3148  003B7E  23DA               	addwfc	(_nout+1)& (0+255),f,b
  3149  003B80                     l4236:
  3150                           
  3151                           ; BSR set to: 0
  3152                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt
      +                          ) {
  3153  003B80  C07C  FFF6         	movff	vfprintf@cfmt,tblptrl
  3154  003B84  C07D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3155  003B88                     	if	0	;tblptru may be non-zero
  3156  003B88                     	endif
  3157  003B88                     	if	0	;tblptru may be non-zero
  3158  003B88                     	endif
  3159  003B88  0008               	tblrd		*
  3160  003B8A  50F5               	movf	tablat,w,c
  3161  003B8C  0900               	iorlw	0
  3162  003B8E  A4D8               	btfss	status,2,c
  3163  003B90  EFCC  F01D         	goto	u5071
  3164  003B94  EFCE  F01D         	goto	u5070
  3165  003B98                     u5071:
  3166  003B98  EFAD  F01D         	goto	l4234
  3167  003B9C                     u5070:
  3168  003B9C                     
  3169                           ; BSR set to: 0
  3170                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return nout;
  3171  003B9C  C0D9  F08C         	movff	_nout,?_vfprintf
  3172  003BA0  C0DA  F08D         	movff	_nout+1,?_vfprintf+1
  3173  003BA4                     
  3174                           ; BSR set to: 0
  3175  003BA4  0012               	return		;funcret
  3176  003BA6                     __end_of_vfprintf:
  3177                           	callstack 0
  3178                           
  3179 ;; *************** function _vfpfcnvrt *****************
  3180 ;; Defined at:
  3181 ;;		line 670 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;  fp              2  113[COMRAM] PTR struct _IO_FILE
  3184 ;;		 -> sprintf@f(6), 
  3185 ;;  fmt             2  115[COMRAM] PTR PTR unsigned char 
  3186 ;;		 -> vfprintf@cfmt(2), 
  3187 ;;  ap              2  117[COMRAM] PTR PTR void 
  3188 ;;		 -> sprintf@ap(2), 
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;  llu             8    0        unsigned long long 
  3191 ;;  ll              8    0        long long 
  3192 ;;  f               4    4[BANK0 ] long long 
  3193 ;;  ct              3    8[BANK0 ] unsigned char [3]
  3194 ;;  vp              3    0        PTR void 
  3195 ;;  cp              3    0        PTR unsigned char 
  3196 ;;  i               2    0        int 
  3197 ;;  done            2    0        int 
  3198 ;;  c               1   11[BANK0 ] unsigned char 
  3199 ;; Return value:  Size  Location     Type
  3200 ;;                  2  113[COMRAM] int 
  3201 ;; Registers used:
  3202 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3203 ;; Tracked objects:
  3204 ;;		On entry : 0/0
  3205 ;;		On exit  : 0/0
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3208 ;;      Params:         6       0       0       0       0       0       0
  3209 ;;      Locals:         0      12       0       0       0       0       0
  3210 ;;      Temps:          4       0       0       0       0       0       0
  3211 ;;      Totals:        10      12       0       0       0       0       0
  3212 ;;Total ram usage:       22 bytes
  3213 ;; Hardware stack levels used:    1
  3214 ;; Hardware stack levels required when called:    5
  3215 ;; This function calls:
  3216 ;;		_atoi
  3217 ;;		_efgtoa
  3218 ;;		_fputc
  3219 ;;		_isdigit
  3220 ;;		_isupper
  3221 ;;		_strncmp
  3222 ;;		_tolower
  3223 ;; This function is called by:
  3224 ;;		_vfprintf
  3225 ;; This function uses a non-reentrant model
  3226 ;;
  3227                           
  3228                           	psect	text8
  3229  00174E                     __ptext8:
  3230                           	callstack 0
  3231  00174E                     _vfpfcnvrt:
  3232                           	callstack 22
  3233  00174E                     
  3234                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int vfpfcn
      +                          vrt(FILE *fp, char *fmt[], va_list ap);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\c
      +                          ommon\doprnt.c: 671: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          672:     char c, *cp, ct[3];;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\dopr
      +                          nt.c: 673:     int done, i;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 674:     long long ll;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 675:     unsigned long long llu;
  3235  00174E  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3236  001752  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3237  001756  CFDE FFF6          	movff	postinc2,tblptrl
  3238  00175A  CFDD FFF7          	movff	postdec2,tblptrh
  3239  00175E                     	if	0	;tblptru may be non-zero
  3240  00175E                     	endif
  3241  00175E                     	if	0	;tblptru may be non-zero
  3242  00175E                     	endif
  3243  00175E  0008               	tblrd		*
  3244  001760  50F5               	movf	tablat,w,c
  3245  001762  0A25               	xorlw	37
  3246  001764  A4D8               	btfss	status,2,c
  3247  001766  EFB7  F00B         	goto	u4931
  3248  00176A  EFB9  F00B         	goto	u4930
  3249  00176E                     u4931:
  3250  00176E  EFC0  F00D         	goto	l4208
  3251  001772                     u4930:
  3252  001772                     
  3253                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*fmt;
  3254  001772  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3255  001776  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3256  00177A  2ADE               	incf	postinc2,f,c
  3257  00177C  0E00               	movlw	0
  3258  00177E  22DD               	addwfc	postdec2,f,c
  3259  001780                     
  3260                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flags = w
      +                          idth = 0;
  3261  001780  0E00               	movlw	0
  3262  001782  0100               	movlb	0	; () banked
  3263  001784  6FDC               	movwf	(_width+1)& (0+255),b
  3264  001786  0E00               	movlw	0
  3265  001788  6FDB               	movwf	_width& (0+255),b
  3266  00178A  C0DB  F0DF         	movff	_width,_flags
  3267  00178E  C0DC  F0E0         	movff	_width+1,_flags+1
  3268  001792                     
  3269                           ; BSR set to: 0
  3270                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec = -1
      +                          ;
  3271  001792  69DD               	setf	_prec& (0+255),b
  3272  001794  69DE               	setf	(_prec+1)& (0+255),b
  3273  001796                     
  3274                           ; BSR set to: 0
  3275                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if ((*fmt
      +                          )[0] == '.') {
  3276  001796  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3277  00179A  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3278  00179E  CFDE FFF6          	movff	postinc2,tblptrl
  3279  0017A2  CFDD FFF7          	movff	postdec2,tblptrh
  3280  0017A6                     	if	0	;tblptru may be non-zero
  3281  0017A6                     	endif
  3282  0017A6                     	if	0	;tblptru may be non-zero
  3283  0017A6                     	endif
  3284  0017A6  0008               	tblrd		*
  3285  0017A8  50F5               	movf	tablat,w,c
  3286  0017AA  0A2E               	xorlw	46
  3287  0017AC  A4D8               	btfss	status,2,c
  3288  0017AE  EFDB  F00B         	goto	u4941
  3289  0017B2  EFDD  F00B         	goto	u4940
  3290  0017B6                     u4941:
  3291  0017B6  EF5B  F00C         	goto	l4154
  3292  0017BA                     u4940:
  3293  0017BA                     
  3294                           ; BSR set to: 0
  3295                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             prec 
      +                          = 0;
  3296  0017BA  0E00               	movlw	0
  3297  0017BC  6FDE               	movwf	(_prec+1)& (0+255),b
  3298  0017BE  0E00               	movlw	0
  3299  0017C0  6FDD               	movwf	_prec& (0+255),b
  3300  0017C2                     
  3301                           ; BSR set to: 0
  3302                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             ++*fm
      +                          t;
  3303  0017C2  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3304  0017C6  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3305  0017CA  2ADE               	incf	postinc2,f,c
  3306  0017CC  0E00               	movlw	0
  3307  0017CE  22DD               	addwfc	postdec2,f,c
  3308  0017D0                     
  3309                           ; BSR set to: 0
  3310                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             if ((
      +                          *fmt)[0] == '*') {
  3311  0017D0  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3312  0017D4  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3313  0017D8  CFDE FFF6          	movff	postinc2,tblptrl
  3314  0017DC  CFDD FFF7          	movff	postdec2,tblptrh
  3315  0017E0                     	if	0	;tblptru may be non-zero
  3316  0017E0                     	endif
  3317  0017E0                     	if	0	;tblptru may be non-zero
  3318  0017E0                     	endif
  3319  0017E0  0008               	tblrd		*
  3320  0017E2  50F5               	movf	tablat,w,c
  3321  0017E4  0A2A               	xorlw	42
  3322  0017E6  A4D8               	btfss	status,2,c
  3323  0017E8  EFF8  F00B         	goto	u4951
  3324  0017EC  EFFA  F00B         	goto	u4950
  3325  0017F0                     u4951:
  3326  0017F0  EF17  F00C         	goto	l4144
  3327  0017F4                     u4950:
  3328  0017F4                     
  3329                           ; BSR set to: 0
  3330                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:                 +
      +                          +*fmt;
  3331  0017F4  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3332  0017F8  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3333  0017FC  2ADE               	incf	postinc2,f,c
  3334  0017FE  0E00               	movlw	0
  3335  001800  22DD               	addwfc	postdec2,f,c
  3336                           
  3337                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:                 p
      +                          rec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3338  001802  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3339  001806  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3340  00180A  CFDF F078          	movff	indf2,??_vfpfcnvrt
  3341  00180E  0E02               	movlw	2
  3342  001810  26DE               	addwf	postinc2,f,c
  3343  001812  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  3344  001816  0E00               	movlw	0
  3345  001818  22DD               	addwfc	postdec2,f,c
  3346  00181A  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3347  00181E  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3348  001822  CFDE F0DD          	movff	postinc2,_prec
  3349  001826  CFDD F0DE          	movff	postdec2,_prec+1
  3350                           
  3351                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             } els
      +                          e {
  3352  00182A  EF5B  F00C         	goto	l4154
  3353  00182E                     l4144:
  3354                           
  3355                           ; BSR set to: 0
  3356                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:                 p
      +                          rec = atoi(*fmt);
  3357  00182E  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3358  001832  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3359  001836  CFDE F008          	movff	postinc2,atoi@s
  3360  00183A  CFDD F009          	movff	postdec2,atoi@s+1
  3361  00183E  EC19  F018         	call	_atoi	;wreg free
  3362  001842  C008  F0DD         	movff	?_atoi,_prec
  3363  001846  C009  F0DE         	movff	?_atoi+1,_prec+1
  3364                           
  3365                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:                 w
      +                          hile ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3366  00184A  EF2E  F00C         	goto	l4148
  3367  00184E                     l4146:
  3368                           
  3369                           ; BSR set to: 0
  3370                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:                  
      +                             ++*fmt;
  3371  00184E  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3372  001852  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3373  001856  2ADE               	incf	postinc2,f,c
  3374  001858  0E00               	movlw	0
  3375  00185A  22DD               	addwfc	postdec2,f,c
  3376  00185C                     l4148:
  3377  00185C  0ED0               	movlw	208
  3378  00185E  6E78               	movwf	??_vfpfcnvrt^0,c
  3379  001860  0EFF               	movlw	255
  3380  001862  6E79               	movwf	(??_vfpfcnvrt+1)^0,c
  3381  001864  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3382  001868  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3383  00186C  CFDE FFF6          	movff	postinc2,tblptrl
  3384  001870  CFDD FFF7          	movff	postdec2,tblptrh
  3385  001874                     	if	0	;tblptru may be non-zero
  3386  001874                     	endif
  3387  001874                     	if	0	;tblptru may be non-zero
  3388  001874                     	endif
  3389  001874  0008               	tblrd		*
  3390  001876  50F5               	movf	tablat,w,c
  3391  001878  6E7A               	movwf	(??_vfpfcnvrt+2)^0,c
  3392  00187A  6A7B               	clrf	(??_vfpfcnvrt+3)^0,c
  3393  00187C  5078               	movf	??_vfpfcnvrt^0,w,c
  3394  00187E  267A               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3395  001880  5079               	movf	(??_vfpfcnvrt+1)^0,w,c
  3396  001882  227B               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3397  001884  507B               	movf	(??_vfpfcnvrt+3)^0,w,c
  3398  001886  E10A               	bnz	u4960
  3399  001888  0E0A               	movlw	10
  3400  00188A  5C7A               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3401  00188C  A0D8               	btfss	status,0,c
  3402  00188E  EF4B  F00C         	goto	u4961
  3403  001892  EF4E  F00C         	goto	u4960
  3404  001896                     u4961:
  3405  001896  0E01               	movlw	1
  3406  001898  EF4F  F00C         	goto	u4970
  3407  00189C                     u4960:
  3408  00189C  0E00               	movlw	0
  3409  00189E                     u4970:
  3410  00189E  0100               	movlb	0	; () banked
  3411  0018A0  6F80               	movwf	_vfpfcnvrt$756& (0+255),b
  3412  0018A2  6B81               	clrf	(_vfpfcnvrt$756+1)& (0+255),b
  3413  0018A4                     
  3414                           ; BSR set to: 0
  3415  0018A4  5180               	movf	_vfpfcnvrt$756& (0+255),w,b
  3416  0018A6  1181               	iorwf	(_vfpfcnvrt$756+1)& (0+255),w,b
  3417  0018A8  A4D8               	btfss	status,2,c
  3418  0018AA  EF59  F00C         	goto	u4981
  3419  0018AE  EF5B  F00C         	goto	u4980
  3420  0018B2                     u4981:
  3421  0018B2  EF27  F00C         	goto	l4146
  3422  0018B6                     u4980:
  3423  0018B6                     l4154:
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0] = t
      +                          olower((int)(*fmt)[0]);
  3427  0018B6  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3428  0018BA  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3429  0018BE  CFDE FFF6          	movff	postinc2,tblptrl
  3430  0018C2  CFDD FFF7          	movff	postdec2,tblptrh
  3431  0018C6                     	if	0	;tblptru may be non-zero
  3432  0018C6                     	endif
  3433  0018C6                     	if	0	;tblptru may be non-zero
  3434  0018C6                     	endif
  3435  0018C6  0008               	tblrd		*
  3436  0018C8  50F5               	movf	tablat,w,c
  3437  0018CA  6E07               	movwf	tolower@c^0,c
  3438  0018CC  6A08               	clrf	(tolower@c+1)^0,c
  3439  0018CE  ECD3  F01D         	call	_tolower	;wreg free
  3440  0018D2  5007               	movf	?_tolower^0,w,c
  3441  0018D4  0100               	movlb	0	; () banked
  3442  0018D6  6F88               	movwf	vfpfcnvrt@ct& (0+255),b
  3443  0018D8                     
  3444                           ; BSR set to: 0
  3445                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (ct[0]
      +                          ) {
  3446  0018D8  5188               	movf	vfpfcnvrt@ct& (0+255),w,b
  3447  0018DA  B4D8               	btfsc	status,2,c
  3448  0018DC  EF72  F00C         	goto	u4991
  3449  0018E0  EF74  F00C         	goto	u4990
  3450  0018E4                     u4991:
  3451  0018E4  EFAE  F00C         	goto	l4164
  3452  0018E8                     u4990:
  3453  0018E8                     
  3454                           ; BSR set to: 0
  3455                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             ct[1]
      +                           = tolower((int)(*fmt)[1]);
  3456  0018E8  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3457  0018EC  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3458  0018F0  CFDE F078          	movff	postinc2,??_vfpfcnvrt
  3459  0018F4  CFDD F079          	movff	postdec2,??_vfpfcnvrt+1
  3460  0018F8  0E01               	movlw	1
  3461  0018FA  2678               	addwf	??_vfpfcnvrt^0,f,c
  3462  0018FC  0E00               	movlw	0
  3463  0018FE  2279               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3464  001900  C078  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3465  001904  C079  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3466  001908                     	if	0	;tblptru may be non-zero
  3467  001908                     	endif
  3468  001908                     	if	0	;tblptru may be non-zero
  3469  001908                     	endif
  3470  001908  0008               	tblrd		*
  3471  00190A  50F5               	movf	tablat,w,c
  3472  00190C  6E07               	movwf	tolower@c^0,c
  3473  00190E  6A08               	clrf	(tolower@c+1)^0,c
  3474  001910  ECD3  F01D         	call	_tolower	;wreg free
  3475  001914  5007               	movf	?_tolower^0,w,c
  3476  001916  0100               	movlb	0	; () banked
  3477  001918  6F89               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3478  00191A                     
  3479                           ; BSR set to: 0
  3480                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             if (c
      +                          t[1]) {
  3481  00191A  5189               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3482  00191C  B4D8               	btfsc	status,2,c
  3483  00191E  EF93  F00C         	goto	u5001
  3484  001922  EF95  F00C         	goto	u5000
  3485  001926                     u5001:
  3486  001926  EFAE  F00C         	goto	l4164
  3487  00192A                     u5000:
  3488  00192A                     
  3489                           ; BSR set to: 0
  3490                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:                 c
      +                          t[2] = tolower((int)(*fmt)[2]);
  3491  00192A  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3492  00192E  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3493  001932  CFDE F078          	movff	postinc2,??_vfpfcnvrt
  3494  001936  CFDD F079          	movff	postdec2,??_vfpfcnvrt+1
  3495  00193A  0E02               	movlw	2
  3496  00193C  2678               	addwf	??_vfpfcnvrt^0,f,c
  3497  00193E  0E00               	movlw	0
  3498  001940  2279               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3499  001942  C078  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3500  001946  C079  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3501  00194A                     	if	0	;tblptru may be non-zero
  3502  00194A                     	endif
  3503  00194A                     	if	0	;tblptru may be non-zero
  3504  00194A                     	endif
  3505  00194A  0008               	tblrd		*
  3506  00194C  50F5               	movf	tablat,w,c
  3507  00194E  6E07               	movwf	tolower@c^0,c
  3508  001950  6A08               	clrf	(tolower@c+1)^0,c
  3509  001952  ECD3  F01D         	call	_tolower	;wreg free
  3510  001956  5007               	movf	?_tolower^0,w,c
  3511  001958  0100               	movlb	0	; () banked
  3512  00195A  6F8A               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3513  00195C                     l4164:
  3514                           
  3515                           ; BSR set to: 0
  3516                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (ct[0]
      +                           == 'f') {
  3517  00195C  0E66               	movlw	102
  3518  00195E  1988               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3519  001960  A4D8               	btfss	status,2,c
  3520  001962  EFB5  F00C         	goto	u5011
  3521  001966  EFB7  F00C         	goto	u5010
  3522  00196A                     u5011:
  3523  00196A  EFF7  F00C         	goto	l4176
  3524  00196E                     u5010:
  3525  00196E                     
  3526                           ; BSR set to: 0
  3527                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             c = (
      +                          *fmt)[0];
  3528  00196E  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3529  001972  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3530  001976  CFDE FFF6          	movff	postinc2,tblptrl
  3531  00197A  CFDD FFF7          	movff	postdec2,tblptrh
  3532  00197E                     	if	0	;tblptru may be non-zero
  3533  00197E                     	endif
  3534  00197E                     	if	0	;tblptru may be non-zero
  3535  00197E                     	endif
  3536  00197E  0008               	tblrd		*
  3537  001980  CFF5 F08B          	movff	tablat,vfpfcnvrt@c
  3538  001984                     
  3539                           ; BSR set to: 0
  3540                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             ++*fm
      +                          t;
  3541  001984  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3542  001988  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3543  00198C  2ADE               	incf	postinc2,f,c
  3544  00198E  0E00               	movlw	0
  3545  001990  22DD               	addwfc	postdec2,f,c
  3546  001992                     
  3547                           ; BSR set to: 0
  3548                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             f = (
      +                          long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3549  001992  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3550  001996  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3551  00199A  CFDF F078          	movff	indf2,??_vfpfcnvrt
  3552  00199E  0E04               	movlw	4
  3553  0019A0  26DE               	addwf	postinc2,f,c
  3554  0019A2  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  3555  0019A6  0E00               	movlw	0
  3556  0019A8  22DD               	addwfc	postdec2,f,c
  3557  0019AA  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3558  0019AE  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3559  0019B2  CFDE F084          	movff	postinc2,vfpfcnvrt@f
  3560  0019B6  CFDE F085          	movff	postinc2,vfpfcnvrt@f+1
  3561  0019BA  CFDE F086          	movff	postinc2,vfpfcnvrt@f+2
  3562  0019BE  CFDE F087          	movff	postinc2,vfpfcnvrt@f+3
  3563  0019C2                     l4172:
  3564                           
  3565                           ; BSR set to: 0
  3566                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             retur
      +                          n efgtoa(fp, f, c);
  3567  0019C2  C072  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  3568  0019C6  C073  F02F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3569  0019CA  C084  F030         	movff	vfpfcnvrt@f,efgtoa@f
  3570  0019CE  C085  F031         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3571  0019D2  C086  F032         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3572  0019D6  C087  F033         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3573  0019DA  C08B  F034         	movff	vfpfcnvrt@c,efgtoa@c
  3574  0019DE  EC7A  F003         	call	_efgtoa	;wreg free
  3575  0019E2  C02E  F072         	movff	?_efgtoa,?_vfpfcnvrt
  3576  0019E6  C02F  F073         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3577  0019EA  EFDB  F00D         	goto	l1028
  3578  0019EE                     l4176:
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (!strn
      +                          cmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3582  0019EE  0E88               	movlw	low vfpfcnvrt@ct
  3583  0019F0  6E01               	movwf	strncmp@_l^0,c
  3584  0019F2  0E00               	movlw	high vfpfcnvrt@ct
  3585  0019F4  6E02               	movwf	(strncmp@_l+1)^0,c
  3586  0019F6  0EEC               	movlw	low STR_39
  3587  0019F8  6E03               	movwf	strncmp@_r^0,c
  3588  0019FA  0E06               	movlw	high STR_39
  3589  0019FC  6E04               	movwf	(strncmp@_r+1)^0,c
  3590  0019FE  0E00               	movlw	0
  3591  001A00  6E06               	movwf	(strncmp@n+1)^0,c
  3592  001A02  0E02               	movlw	2
  3593  001A04  6E05               	movwf	strncmp@n^0,c
  3594  001A06  EC65  F01A         	call	_strncmp	;wreg free
  3595  001A0A  5001               	movf	?_strncmp^0,w,c
  3596  001A0C  1002               	iorwf	(?_strncmp+1)^0,w,c
  3597  001A0E  A4D8               	btfss	status,2,c
  3598  001A10  EF0C  F00D         	goto	u5021
  3599  001A14  EF0E  F00D         	goto	u5020
  3600  001A18                     u5021:
  3601  001A18  EF8A  F00D         	goto	l4192
  3602  001A1C                     u5020:
  3603  001A1C                     
  3604                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             if ((
      +                          0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3605  001A1C  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3606  001A20  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3607  001A24  CFDE F078          	movff	postinc2,??_vfpfcnvrt
  3608  001A28  CFDD F079          	movff	postdec2,??_vfpfcnvrt+1
  3609  001A2C  0E01               	movlw	1
  3610  001A2E  2678               	addwf	??_vfpfcnvrt^0,f,c
  3611  001A30  0E00               	movlw	0
  3612  001A32  2279               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3613  001A34  C078  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3614  001A38  C079  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3615  001A3C                     	if	0	;tblptru may be non-zero
  3616  001A3C                     	endif
  3617  001A3C                     	if	0	;tblptru may be non-zero
  3618  001A3C                     	endif
  3619  001A3C  0008               	tblrd		*
  3620  001A3E  CFF5 F08B          	movff	tablat,vfpfcnvrt@c
  3621  001A42  0EBF               	movlw	191
  3622  001A44  6E78               	movwf	??_vfpfcnvrt^0,c
  3623  001A46  0EFF               	movlw	255
  3624  001A48  6E79               	movwf	(??_vfpfcnvrt+1)^0,c
  3625  001A4A  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3626  001A4E  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3627  001A52  CFDE FFF6          	movff	postinc2,tblptrl
  3628  001A56  CFDD FFF7          	movff	postdec2,tblptrh
  3629  001A5A                     	if	0	;tblptru may be non-zero
  3630  001A5A                     	endif
  3631  001A5A                     	if	0	;tblptru may be non-zero
  3632  001A5A                     	endif
  3633  001A5A  0008               	tblrd		*
  3634  001A5C  50F5               	movf	tablat,w,c
  3635  001A5E  6E7A               	movwf	(??_vfpfcnvrt+2)^0,c
  3636  001A60  6A7B               	clrf	(??_vfpfcnvrt+3)^0,c
  3637  001A62  5078               	movf	??_vfpfcnvrt^0,w,c
  3638  001A64  267A               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3639  001A66  5079               	movf	(??_vfpfcnvrt+1)^0,w,c
  3640  001A68  227B               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3641  001A6A  507B               	movf	(??_vfpfcnvrt+3)^0,w,c
  3642  001A6C  E10A               	bnz	u5030
  3643  001A6E  0E1A               	movlw	26
  3644  001A70  5C7A               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3645  001A72  A0D8               	btfss	status,0,c
  3646  001A74  EF3E  F00D         	goto	u5031
  3647  001A78  EF41  F00D         	goto	u5030
  3648  001A7C                     u5031:
  3649  001A7C  0E01               	movlw	1
  3650  001A7E  EF42  F00D         	goto	u5040
  3651  001A82                     u5030:
  3652  001A82  0E00               	movlw	0
  3653  001A84                     u5040:
  3654  001A84  0100               	movlb	0	; () banked
  3655  001A86  6F82               	movwf	_vfpfcnvrt$760& (0+255),b
  3656  001A88  6B83               	clrf	(_vfpfcnvrt$760+1)& (0+255),b
  3657  001A8A                     
  3658                           ; BSR set to: 0
  3659  001A8A  5182               	movf	_vfpfcnvrt$760& (0+255),w,b
  3660  001A8C  1183               	iorwf	(_vfpfcnvrt$760+1)& (0+255),w,b
  3661  001A8E  B4D8               	btfsc	status,2,c
  3662  001A90  EF4C  F00D         	goto	u5051
  3663  001A94  EF4E  F00D         	goto	u5050
  3664  001A98                     u5051:
  3665  001A98  EF68  F00D         	goto	l4186
  3666  001A9C                     u5050:
  3667  001A9C                     
  3668                           ; BSR set to: 0
  3669                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:                 f
      +                           = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3670  001A9C  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3671  001AA0  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3672  001AA4  CFDF F078          	movff	indf2,??_vfpfcnvrt
  3673  001AA8  0E04               	movlw	4
  3674  001AAA  26DE               	addwf	postinc2,f,c
  3675  001AAC  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  3676  001AB0  0E00               	movlw	0
  3677  001AB2  22DD               	addwfc	postdec2,f,c
  3678  001AB4  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3679  001AB8  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3680  001ABC  CFDE F084          	movff	postinc2,vfpfcnvrt@f
  3681  001AC0  CFDE F085          	movff	postinc2,vfpfcnvrt@f+1
  3682  001AC4  CFDE F086          	movff	postinc2,vfpfcnvrt@f+2
  3683  001AC8  CFDE F087          	movff	postinc2,vfpfcnvrt@f+3
  3684                           
  3685                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             } els
      +                          e {
  3686  001ACC  EF80  F00D         	goto	l1035
  3687  001AD0                     l4186:
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:                 f
      +                           = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3691  001AD0  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3692  001AD4  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3693  001AD8  CFDF F078          	movff	indf2,??_vfpfcnvrt
  3694  001ADC  0E04               	movlw	4
  3695  001ADE  26DE               	addwf	postinc2,f,c
  3696  001AE0  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  3697  001AE4  0E00               	movlw	0
  3698  001AE6  22DD               	addwfc	postdec2,f,c
  3699  001AE8  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3700  001AEC  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3701  001AF0  CFDE F084          	movff	postinc2,vfpfcnvrt@f
  3702  001AF4  CFDE F085          	movff	postinc2,vfpfcnvrt@f+1
  3703  001AF8  CFDE F086          	movff	postinc2,vfpfcnvrt@f+2
  3704  001AFC  CFDE F087          	movff	postinc2,vfpfcnvrt@f+3
  3705  001B00                     l1035:
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             *fmt 
      +                          += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3709  001B00  0E02               	movlw	2
  3710  001B02  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3711  001B06  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3712  001B0A  26DE               	addwf	postinc2,f,c
  3713  001B0C  0E00               	movlw	0
  3714  001B0E  22DD               	addwfc	postdec2,f,c
  3715  001B10  EFE1  F00C         	goto	l4172
  3716  001B14                     l4192:
  3717                           
  3718                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if ((*fm
      +                          t)[0] == '%') {
  3719  001B14  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3720  001B18  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3721  001B1C  CFDE FFF6          	movff	postinc2,tblptrl
  3722  001B20  CFDD FFF7          	movff	postdec2,tblptrh
  3723  001B24                     	if	0	;tblptru may be non-zero
  3724  001B24                     	endif
  3725  001B24                     	if	0	;tblptru may be non-zero
  3726  001B24                     	endif
  3727  001B24  0008               	tblrd		*
  3728  001B26  50F5               	movf	tablat,w,c
  3729  001B28  0A25               	xorlw	37
  3730  001B2A  A4D8               	btfss	status,2,c
  3731  001B2C  EF9A  F00D         	goto	u5061
  3732  001B30  EF9C  F00D         	goto	u5060
  3733  001B34                     u5061:
  3734  001B34  EFB3  F00D         	goto	l4202
  3735  001B38                     u5060:
  3736  001B38                     
  3737                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:             ++*f
      +                          mt;
  3738  001B38  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3739  001B3C  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3740  001B40  2ADE               	incf	postinc2,f,c
  3741  001B42  0E00               	movlw	0
  3742  001B44  22DD               	addwfc	postdec2,f,c
  3743  001B46                     
  3744                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:             fput
      +                          c((int)'%', fp);
  3745  001B46  0E00               	movlw	0
  3746  001B48  6E02               	movwf	(fputc@c+1)^0,c
  3747  001B4A  0E25               	movlw	37
  3748  001B4C  6E01               	movwf	fputc@c^0,c
  3749  001B4E  C072  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3750  001B52  C073  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3751  001B56  ECD0  F01A         	call	_fputc	;wreg free
  3752  001B5A                     l4198:
  3753                           
  3754                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:             retu
      +                          rn 1;
  3755  001B5A  0E00               	movlw	0
  3756  001B5C  6E73               	movwf	(?_vfpfcnvrt+1)^0,c
  3757  001B5E  0E01               	movlw	1
  3758  001B60  6E72               	movwf	?_vfpfcnvrt^0,c
  3759  001B62  EFDB  F00D         	goto	l1028
  3760  001B66                     l4202:
  3761                           
  3762                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*fmt;
  3763  001B66  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3764  001B6A  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3765  001B6E  2ADE               	incf	postinc2,f,c
  3766  001B70  0E00               	movlw	0
  3767  001B72  22DD               	addwfc	postdec2,f,c
  3768  001B74                     
  3769                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         return 0
      +                          ;
  3770  001B74  0E00               	movlw	0
  3771  001B76  6E73               	movwf	(?_vfpfcnvrt+1)^0,c
  3772  001B78  0E00               	movlw	0
  3773  001B7A  6E72               	movwf	?_vfpfcnvrt^0,c
  3774  001B7C  EFDB  F00D         	goto	l1028
  3775  001B80                     l4208:
  3776                           
  3777                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((int)(
      +                          *fmt)[0], fp);
  3778  001B80  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3779  001B84  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3780  001B88  CFDE FFF6          	movff	postinc2,tblptrl
  3781  001B8C  CFDD FFF7          	movff	postdec2,tblptrh
  3782  001B90                     	if	0	;tblptru may be non-zero
  3783  001B90                     	endif
  3784  001B90                     	if	0	;tblptru may be non-zero
  3785  001B90                     	endif
  3786  001B90  0008               	tblrd		*
  3787  001B92  50F5               	movf	tablat,w,c
  3788  001B94  6E01               	movwf	fputc@c^0,c
  3789  001B96  6A02               	clrf	(fputc@c+1)^0,c
  3790  001B98  C072  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3791  001B9C  C073  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3792  001BA0  ECD0  F01A         	call	_fputc	;wreg free
  3793  001BA4                     
  3794                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  3795  001BA4  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3796  001BA8  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3797  001BAC  2ADE               	incf	postinc2,f,c
  3798  001BAE  0E00               	movlw	0
  3799  001BB0  22DD               	addwfc	postdec2,f,c
  3800  001BB2  EFAD  F00D         	goto	l4198
  3801  001BB6                     l1028:
  3802  001BB6  0012               	return		;funcret
  3803  001BB8                     __end_of_vfpfcnvrt:
  3804                           	callstack 0
  3805                           
  3806 ;; *************** function _strncmp *****************
  3807 ;; Defined at:
  3808 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  3811 ;;		 -> vfpfcnvrt@ct(3), 
  3812 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  3813 ;;		 -> STR_41(3), 
  3814 ;;  n               2    4[COMRAM] unsigned int 
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;  r               2    9[COMRAM] PTR const unsigned char 
  3817 ;;		 -> STR_41(3), 
  3818 ;;  l               2    7[COMRAM] PTR const unsigned char 
  3819 ;;		 -> vfpfcnvrt@ct(3), 
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  2    0[COMRAM] int 
  3822 ;; Registers used:
  3823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3829 ;;      Params:         6       0       0       0       0       0       0
  3830 ;;      Locals:         4       0       0       0       0       0       0
  3831 ;;      Temps:          1       0       0       0       0       0       0
  3832 ;;      Totals:        11       0       0       0       0       0       0
  3833 ;;Total ram usage:       11 bytes
  3834 ;; Hardware stack levels used:    1
  3835 ;; This function calls:
  3836 ;;		Nothing
  3837 ;; This function is called by:
  3838 ;;		_vfpfcnvrt
  3839 ;; This function uses a non-reentrant model
  3840 ;;
  3841                           
  3842                           	psect	text9
  3843  0034CA                     __ptext9:
  3844                           	callstack 0
  3845  0034CA                     _strncmp:
  3846                           	callstack 26
  3847  0034CA  C001  F008         	movff	strncmp@_l,strncmp@l
  3848  0034CE  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  3849  0034D2  C003  F00A         	movff	strncmp@_r,strncmp@r
  3850  0034D6  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  3851  0034DA  0605               	decf	strncmp@n^0,f,c
  3852  0034DC  A0D8               	btfss	status,0,c
  3853  0034DE  0606               	decf	(strncmp@n+1)^0,f,c
  3854  0034E0  2805               	incf	strncmp@n^0,w,c
  3855  0034E2  E106               	bnz	u4851
  3856  0034E4  2806               	incf	(strncmp@n+1)^0,w,c
  3857  0034E6  A4D8               	btfss	status,2,c
  3858  0034E8  EF78  F01A         	goto	u4851
  3859  0034EC  EF7A  F01A         	goto	u4850
  3860  0034F0                     u4851:
  3861  0034F0  EF87  F01A         	goto	l4086
  3862  0034F4                     u4850:
  3863  0034F4  0E00               	movlw	0
  3864  0034F6  6E02               	movwf	(?_strncmp+1)^0,c
  3865  0034F8  0E00               	movlw	0
  3866  0034FA  6E01               	movwf	?_strncmp^0,c
  3867  0034FC  EFCF  F01A         	goto	l1156
  3868  003500                     l4084:
  3869  003500  4A08               	infsnz	strncmp@l^0,f,c
  3870  003502  2A09               	incf	(strncmp@l+1)^0,f,c
  3871  003504  4A0A               	infsnz	strncmp@r^0,f,c
  3872  003506  2A0B               	incf	(strncmp@r+1)^0,f,c
  3873  003508  0605               	decf	strncmp@n^0,f,c
  3874  00350A  A0D8               	btfss	status,0,c
  3875  00350C  0606               	decf	(strncmp@n+1)^0,f,c
  3876  00350E                     l4086:
  3877  00350E  C008  FFD9         	movff	strncmp@l,fsr2l
  3878  003512  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3879  003516  50DF               	movf	indf2,w,c
  3880  003518  B4D8               	btfsc	status,2,c
  3881  00351A  EF91  F01A         	goto	u4861
  3882  00351E  EF93  F01A         	goto	u4860
  3883  003522                     u4861:
  3884  003522  EFBE  F01A         	goto	l4094
  3885  003526                     u4860:
  3886  003526  C00A  FFF6         	movff	strncmp@r,tblptrl
  3887  00352A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3888  00352E                     	if	0	;tblptru may be non-zero
  3889  00352E                     	endif
  3890  00352E                     	if	0	;tblptru may be non-zero
  3891  00352E                     	endif
  3892  00352E  0008               	tblrd		*
  3893  003530  50F5               	movf	tablat,w,c
  3894  003532  0900               	iorlw	0
  3895  003534  B4D8               	btfsc	status,2,c
  3896  003536  EF9F  F01A         	goto	u4871
  3897  00353A  EFA1  F01A         	goto	u4870
  3898  00353E                     u4871:
  3899  00353E  EFBE  F01A         	goto	l4094
  3900  003542                     u4870:
  3901  003542  5005               	movf	strncmp@n^0,w,c
  3902  003544  1006               	iorwf	(strncmp@n+1)^0,w,c
  3903  003546  B4D8               	btfsc	status,2,c
  3904  003548  EFA8  F01A         	goto	u4881
  3905  00354C  EFAA  F01A         	goto	u4880
  3906  003550                     u4881:
  3907  003550  EFBE  F01A         	goto	l4094
  3908  003554                     u4880:
  3909  003554  C008  FFD9         	movff	strncmp@l,fsr2l
  3910  003558  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3911  00355C  50DF               	movf	indf2,w,c
  3912  00355E  6E07               	movwf	??_strncmp^0,c
  3913  003560  C00A  FFF6         	movff	strncmp@r,tblptrl
  3914  003564  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3915  003568                     	if	0	;tblptru may be non-zero
  3916  003568                     	endif
  3917  003568                     	if	0	;tblptru may be non-zero
  3918  003568                     	endif
  3919  003568  0008               	tblrd		*
  3920  00356A  50F5               	movf	tablat,w,c
  3921  00356C  1807               	xorwf	??_strncmp^0,w,c
  3922  00356E  B4D8               	btfsc	status,2,c
  3923  003570  EFBC  F01A         	goto	u4891
  3924  003574  EFBE  F01A         	goto	u4890
  3925  003578                     u4891:
  3926  003578  EF80  F01A         	goto	l4084
  3927  00357C                     u4890:
  3928  00357C                     l4094:
  3929  00357C  C008  FFD9         	movff	strncmp@l,fsr2l
  3930  003580  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3931  003584  50DF               	movf	indf2,w,c
  3932  003586  6E07               	movwf	??_strncmp^0,c
  3933  003588  C00A  FFF6         	movff	strncmp@r,tblptrl
  3934  00358C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3935  003590                     	if	0	;tblptru may be non-zero
  3936  003590                     	endif
  3937  003590                     	if	0	;tblptru may be non-zero
  3938  003590                     	endif
  3939  003590  0008               	tblrd		*
  3940  003592  50F5               	movf	tablat,w,c
  3941  003594  5C07               	subwf	??_strncmp^0,w,c
  3942  003596  6E01               	movwf	?_strncmp^0,c
  3943  003598  6A02               	clrf	(?_strncmp+1)^0,c
  3944  00359A  A0D8               	btfss	status,0,c
  3945  00359C  0602               	decf	(?_strncmp+1)^0,f,c
  3946  00359E                     l1156:
  3947  00359E  0012               	return		;funcret
  3948  0035A0                     __end_of_strncmp:
  3949                           	callstack 0
  3950                           
  3951 ;; *************** function _efgtoa *****************
  3952 ;; Defined at:
  3953 ;;		line 319 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3954 ;; Parameters:    Size  Location     Type
  3955 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  3956 ;;		 -> sprintf@f(6), 
  3957 ;;  f               4   47[COMRAM] PTR struct _IO_FILE
  3958 ;;  c               1   51[COMRAM] unsigned char 
  3959 ;; Auto vars:     Size  Location     Type
  3960 ;;  u               4  109[COMRAM] unsigned char 
  3961 ;;  g               4  101[COMRAM] unsigned char 
  3962 ;;  l               4   95[COMRAM] unsigned char 
  3963 ;;  h               4   91[COMRAM] unsigned char 
  3964 ;;  ou              4   57[COMRAM] unsigned char 
  3965 ;;  n               2  107[COMRAM] int 
  3966 ;;  e               2  105[COMRAM] int 
  3967 ;;  i               2   99[COMRAM] int 
  3968 ;;  w               2   88[COMRAM] int 
  3969 ;;  p               2   85[COMRAM] int 
  3970 ;;  sign            2   83[COMRAM] int 
  3971 ;;  d               2   81[COMRAM] int 
  3972 ;;  ne              2   79[COMRAM] int 
  3973 ;;  m               2   77[COMRAM] int 
  3974 ;;  pp              2   75[COMRAM] int 
  3975 ;;  t               2   73[COMRAM] int 
  3976 ;;  mode            1   90[COMRAM] unsigned char 
  3977 ;;  nmode           1   87[COMRAM] unsigned char 
  3978 ;; Return value:  Size  Location     Type
  3979 ;;                  2   45[COMRAM] int 
  3980 ;; Registers used:
  3981 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3982 ;; Tracked objects:
  3983 ;;		On entry : 0/0
  3984 ;;		On exit  : 0/0
  3985 ;;		Unchanged: 0/0
  3986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3987 ;;      Params:         7       0       0       0       0       0       0
  3988 ;;      Locals:        56       0       0       0       0       0       0
  3989 ;;      Temps:          5       0       0       0       0       0       0
  3990 ;;      Totals:        68       0       0       0       0       0       0
  3991 ;;Total ram usage:       68 bytes
  3992 ;; Hardware stack levels used:    1
  3993 ;; Hardware stack levels required when called:    4
  3994 ;; This function calls:
  3995 ;;		___awdiv
  3996 ;;		___awmod
  3997 ;;		___fladd
  3998 ;;		___fldiv
  3999 ;;		___fleq
  4000 ;;		___flge
  4001 ;;		___flmul
  4002 ;;		___flneg
  4003 ;;		___flsub
  4004 ;;		___fltol
  4005 ;;		___fpclassifyf
  4006 ;;		_floorf
  4007 ;;		_isupper
  4008 ;;		_pad
  4009 ;;		_strcpy
  4010 ;;		_tolower
  4011 ;; This function is called by:
  4012 ;;		_vfpfcnvrt
  4013 ;; This function uses a non-reentrant model
  4014 ;;
  4015                           
  4016                           	psect	text10
  4017  0006F4                     __ptext10:
  4018                           	callstack 0
  4019  0006F4                     _efgtoa:
  4020                           	callstack 22
  4021  0006F4                     
  4022                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int efgtoa
      +                          (FILE *fp, long double f, char c);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common
      +                          \doprnt.c: 320: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 321: 
      +                              char mode, nmode;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 3
      +                          22:     int d, e, i, m, n, ne, p, pp, sign, t, w;;D:\Programs\Microship\xc8\v2.20\pic\so
      +                          urces\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;;D:\Programs\Microship\xc
      +                          8\v2.20\pic\sources\c99\common\doprnt.c: 326:     sign = 0;
  4023  0006F4  0E00               	movlw	0
  4024  0006F6  6E55               	movwf	(efgtoa@sign+1)^0,c
  4025  0006F8  0E00               	movlw	0
  4026  0006FA  6E54               	movwf	efgtoa@sign^0,c
  4027  0006FC                     
  4028                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  4029  0006FC  C030  F066         	movff	efgtoa@f,efgtoa@g
  4030  000700  C031  F067         	movff	efgtoa@f+1,efgtoa@g+1
  4031  000704  C032  F068         	movff	efgtoa@f+2,efgtoa@g+2
  4032  000708  C033  F069         	movff	efgtoa@f+3,efgtoa@g+3
  4033  00070C                     
  4034                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 0.0) 
      +                          {
  4035  00070C  BE69               	btfsc	(efgtoa@g+3)^0,7,c
  4036  00070E  EF8D  F003         	goto	u4260
  4037  000712  EF8B  F003         	goto	u4261
  4038  000716                     u4261:
  4039  000716  EFA3  F003         	goto	l3748
  4040  00071A                     u4260:
  4041  00071A                     
  4042                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign = 1;
  4043  00071A  0E00               	movlw	0
  4044  00071C  6E55               	movwf	(efgtoa@sign+1)^0,c
  4045  00071E  0E01               	movlw	1
  4046  000720  6E54               	movwf	efgtoa@sign^0,c
  4047  000722                     
  4048                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = -g;
  4049  000722  C066  F001         	movff	efgtoa@g,___flneg@f1
  4050  000726  C067  F002         	movff	efgtoa@g+1,___flneg@f1+1
  4051  00072A  C068  F003         	movff	efgtoa@g+2,___flneg@f1+2
  4052  00072E  C069  F004         	movff	efgtoa@g+3,___flneg@f1+3
  4053  000732  EC12  F01F         	call	___flneg	;wreg free
  4054  000736  C001  F066         	movff	?___flneg,efgtoa@g
  4055  00073A  C002  F067         	movff	?___flneg+1,efgtoa@g+1
  4056  00073E  C003  F068         	movff	?___flneg+2,efgtoa@g+2
  4057  000742  C004  F069         	movff	?___flneg+3,efgtoa@g+3
  4058  000746                     l3748:
  4059                           
  4060                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  4061  000746  0E00               	movlw	0
  4062  000748  6E6D               	movwf	(efgtoa@n+1)^0,c
  4063  00074A  0E00               	movlw	0
  4064  00074C  6E6C               	movwf	efgtoa@n^0,c
  4065  00074E                     
  4066                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = width;
  4067  00074E  C0DB  F059         	movff	_width,efgtoa@w
  4068  000752  C0DC  F05A         	movff	_width+1,efgtoa@w+1
  4069  000756                     
  4070                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign || (
      +                          flags & (1 << 2))) {
  4071  000756  5054               	movf	efgtoa@sign^0,w,c
  4072  000758  1055               	iorwf	(efgtoa@sign+1)^0,w,c
  4073  00075A  A4D8               	btfss	status,2,c
  4074  00075C  EFB2  F003         	goto	u4271
  4075  000760  EFB4  F003         	goto	u4270
  4076  000764                     u4271:
  4077  000764  EFBC  F003         	goto	l3756
  4078  000768                     u4270:
  4079  000768  0100               	movlb	0	; () banked
  4080  00076A  A5DF               	btfss	_flags& (0+255),2,b
  4081  00076C  EFBA  F003         	goto	u4281
  4082  000770  EFBC  F003         	goto	u4280
  4083  000774                     u4281:
  4084  000774  EFD6  F003         	goto	l3768
  4085  000778                     u4280:
  4086  000778                     l3756:
  4087                           
  4088                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf[n] =
      +                           sign ? '-' : '+';
  4089  000778  5054               	movf	efgtoa@sign^0,w,c
  4090  00077A  1055               	iorwf	(efgtoa@sign+1)^0,w,c
  4091  00077C  A4D8               	btfss	status,2,c
  4092  00077E  EFC3  F003         	goto	u4291
  4093  000782  EFC5  F003         	goto	u4290
  4094  000786                     u4291:
  4095  000786  EFCB  F003         	goto	l3760
  4096  00078A                     u4290:
  4097  00078A  0E00               	movlw	0
  4098  00078C  6E3F               	movwf	(_efgtoa$730+1)^0,c
  4099  00078E  0E2B               	movlw	43
  4100  000790  6E3E               	movwf	_efgtoa$730^0,c
  4101  000792  EFCF  F003         	goto	l3762
  4102  000796                     l3760:
  4103  000796  0E00               	movlw	0
  4104  000798  6E3F               	movwf	(_efgtoa$730+1)^0,c
  4105  00079A  0E2D               	movlw	45
  4106  00079C  6E3E               	movwf	_efgtoa$730^0,c
  4107  00079E                     l3762:
  4108  00079E  C03E  F100         	movff	_efgtoa$730,_dbuf
  4109  0007A2                     
  4110                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  4111  0007A2  4A6C               	infsnz	efgtoa@n^0,f,c
  4112  0007A4  2A6D               	incf	(efgtoa@n+1)^0,f,c
  4113  0007A6                     
  4114                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  4115  0007A6  0659               	decf	efgtoa@w^0,f,c
  4116  0007A8  A0D8               	btfss	status,0,c
  4117  0007AA  065A               	decf	(efgtoa@w+1)^0,f,c
  4118  0007AC                     l3768:
  4119                           
  4120                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if ((0 ? 
      +                          isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4121  0007AC  C066  F001         	movff	efgtoa@g,___fpclassifyf@x
  4122  0007B0  C067  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4123  0007B4  C068  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4124  0007B8  C069  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4125  0007BC  ECE6  F019         	call	___fpclassifyf	;wreg free
  4126  0007C0  0401               	decf	?___fpclassifyf^0,w,c
  4127  0007C2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4128  0007C4  A4D8               	btfss	status,2,c
  4129  0007C6  EFE7  F003         	goto	u4301
  4130  0007CA  EFE9  F003         	goto	u4300
  4131  0007CE                     u4301:
  4132  0007CE  EF3E  F004         	goto	l3786
  4133  0007D2                     u4300:
  4134  0007D2  0EBF               	movlw	191
  4135  0007D4  6E35               	movwf	??_efgtoa^0,c
  4136  0007D6  0EFF               	movlw	255
  4137  0007D8  6E36               	movwf	(??_efgtoa+1)^0,c
  4138  0007DA  5034               	movf	efgtoa@c^0,w,c
  4139  0007DC  6E37               	movwf	(??_efgtoa+2)^0,c
  4140  0007DE  6A38               	clrf	(??_efgtoa+3)^0,c
  4141  0007E0  5035               	movf	??_efgtoa^0,w,c
  4142  0007E2  2637               	addwf	(??_efgtoa+2)^0,f,c
  4143  0007E4  5036               	movf	(??_efgtoa+1)^0,w,c
  4144  0007E6  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4145  0007E8  5038               	movf	(??_efgtoa+3)^0,w,c
  4146  0007EA  E10A               	bnz	u4310
  4147  0007EC  0E1A               	movlw	26
  4148  0007EE  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4149  0007F0  A0D8               	btfss	status,0,c
  4150  0007F2  EFFD  F003         	goto	u4311
  4151  0007F6  EF00  F004         	goto	u4310
  4152  0007FA                     u4311:
  4153  0007FA  0E01               	movlw	1
  4154  0007FC  EF01  F004         	goto	u4320
  4155  000800                     u4310:
  4156  000800  0E00               	movlw	0
  4157  000802                     u4320:
  4158  000802  6E40               	movwf	_efgtoa$731^0,c
  4159  000804  6A41               	clrf	(_efgtoa$731+1)^0,c
  4160  000806  5040               	movf	_efgtoa$731^0,w,c
  4161  000808  1041               	iorwf	(_efgtoa$731+1)^0,w,c
  4162  00080A  B4D8               	btfsc	status,2,c
  4163  00080C  EF0A  F004         	goto	u4331
  4164  000810  EF0C  F004         	goto	u4330
  4165  000814                     u4331:
  4166  000814  EF1A  F004         	goto	l3778
  4167  000818                     u4330:
  4168  000818                     
  4169                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             strcp
      +                          y(&dbuf[n], "INF");
  4170  000818  0E00               	movlw	low _dbuf
  4171  00081A  246C               	addwf	efgtoa@n^0,w,c
  4172  00081C  6E01               	movwf	strcpy@dest^0,c
  4173  00081E  0E01               	movlw	high _dbuf
  4174  000820  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4175  000822  6E02               	movwf	(strcpy@dest+1)^0,c
  4176  000824  0EDC               	movlw	low STR_31
  4177  000826  6E03               	movwf	strcpy@src^0,c
  4178  000828  0E06               	movlw	high STR_31
  4179  00082A  6E04               	movwf	(strcpy@src+1)^0,c
  4180  00082C  EC31  F01E         	call	_strcpy	;wreg free
  4181                           
  4182                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } else {
  4183  000830  EF26  F004         	goto	l3780
  4184  000834                     l3778:
  4185                           
  4186                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             strcp
      +                          y(&dbuf[n], "inf");
  4187  000834  0E00               	movlw	low _dbuf
  4188  000836  246C               	addwf	efgtoa@n^0,w,c
  4189  000838  6E01               	movwf	strcpy@dest^0,c
  4190  00083A  0E01               	movlw	high _dbuf
  4191  00083C  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4192  00083E  6E02               	movwf	(strcpy@dest+1)^0,c
  4193  000840  0EE4               	movlw	low STR_32
  4194  000842  6E03               	movwf	strcpy@src^0,c
  4195  000844  0E06               	movlw	high STR_32
  4196  000846  6E04               	movwf	(strcpy@src+1)^0,c
  4197  000848  EC31  F01E         	call	_strcpy	;wreg free
  4198  00084C                     l3780:
  4199                           
  4200                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -= ((si
      +                          zeof("inf")/sizeof("inf"[0]))-1);
  4201  00084C  0EFD               	movlw	253
  4202  00084E  2659               	addwf	efgtoa@w^0,f,c
  4203  000850  0EFF               	movlw	255
  4204  000852  225A               	addwfc	(efgtoa@w+1)^0,f,c
  4205  000854                     l3782:
  4206                           
  4207                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         return pa
      +                          d(fp, &dbuf[0], w);
  4208  000854  C02E  F011         	movff	efgtoa@fp,pad@fp
  4209  000858  C02F  F012         	movff	efgtoa@fp+1,pad@fp+1
  4210  00085C  0E00               	movlw	low _dbuf
  4211  00085E  6E13               	movwf	pad@buf^0,c
  4212  000860  0E01               	movlw	high _dbuf
  4213  000862  6E14               	movwf	(pad@buf+1)^0,c
  4214  000864  C059  F015         	movff	efgtoa@w,pad@p
  4215  000868  C05A  F016         	movff	efgtoa@w+1,pad@p+1
  4216  00086C  EC35  F01B         	call	_pad	;wreg free
  4217  000870  C011  F02E         	movff	?_pad,?_efgtoa
  4218  000874  C012  F02F         	movff	?_pad+1,?_efgtoa+1
  4219  000878  EF46  F009         	goto	l938
  4220  00087C                     l3786:
  4221                           
  4222                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if ((0 ? 
      +                          isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4223  00087C  C066  F001         	movff	efgtoa@g,___fpclassifyf@x
  4224  000880  C067  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4225  000884  C068  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4226  000888  C069  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4227  00088C  ECE6  F019         	call	___fpclassifyf	;wreg free
  4228  000890  5001               	movf	?___fpclassifyf^0,w,c
  4229  000892  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4230  000894  A4D8               	btfss	status,2,c
  4231  000896  EF4F  F004         	goto	u4341
  4232  00089A  EF51  F004         	goto	u4340
  4233  00089E                     u4341:
  4234  00089E  EF90  F004         	goto	l3804
  4235  0008A2                     u4340:
  4236  0008A2  0EBF               	movlw	191
  4237  0008A4  6E35               	movwf	??_efgtoa^0,c
  4238  0008A6  0EFF               	movlw	255
  4239  0008A8  6E36               	movwf	(??_efgtoa+1)^0,c
  4240  0008AA  5034               	movf	efgtoa@c^0,w,c
  4241  0008AC  6E37               	movwf	(??_efgtoa+2)^0,c
  4242  0008AE  6A38               	clrf	(??_efgtoa+3)^0,c
  4243  0008B0  5035               	movf	??_efgtoa^0,w,c
  4244  0008B2  2637               	addwf	(??_efgtoa+2)^0,f,c
  4245  0008B4  5036               	movf	(??_efgtoa+1)^0,w,c
  4246  0008B6  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4247  0008B8  5038               	movf	(??_efgtoa+3)^0,w,c
  4248  0008BA  E10A               	bnz	u4350
  4249  0008BC  0E1A               	movlw	26
  4250  0008BE  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4251  0008C0  A0D8               	btfss	status,0,c
  4252  0008C2  EF65  F004         	goto	u4351
  4253  0008C6  EF68  F004         	goto	u4350
  4254  0008CA                     u4351:
  4255  0008CA  0E01               	movlw	1
  4256  0008CC  EF69  F004         	goto	u4360
  4257  0008D0                     u4350:
  4258  0008D0  0E00               	movlw	0
  4259  0008D2                     u4360:
  4260  0008D2  6E42               	movwf	_efgtoa$736^0,c
  4261  0008D4  6A43               	clrf	(_efgtoa$736+1)^0,c
  4262  0008D6  5042               	movf	_efgtoa$736^0,w,c
  4263  0008D8  1043               	iorwf	(_efgtoa$736+1)^0,w,c
  4264  0008DA  B4D8               	btfsc	status,2,c
  4265  0008DC  EF72  F004         	goto	u4371
  4266  0008E0  EF74  F004         	goto	u4370
  4267  0008E4                     u4371:
  4268  0008E4  EF82  F004         	goto	l3796
  4269  0008E8                     u4370:
  4270  0008E8                     
  4271                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             strcp
      +                          y(&dbuf[n], "NAN");
  4272  0008E8  0E00               	movlw	low _dbuf
  4273  0008EA  246C               	addwf	efgtoa@n^0,w,c
  4274  0008EC  6E01               	movwf	strcpy@dest^0,c
  4275  0008EE  0E01               	movlw	high _dbuf
  4276  0008F0  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4277  0008F2  6E02               	movwf	(strcpy@dest+1)^0,c
  4278  0008F4  0EE0               	movlw	low STR_35
  4279  0008F6  6E03               	movwf	strcpy@src^0,c
  4280  0008F8  0E06               	movlw	high STR_35
  4281  0008FA  6E04               	movwf	(strcpy@src+1)^0,c
  4282  0008FC  EC31  F01E         	call	_strcpy	;wreg free
  4283                           
  4284                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } else {
  4285  000900  EF26  F004         	goto	l3780
  4286  000904                     l3796:
  4287                           
  4288                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             strcp
      +                          y(&dbuf[n], "nan");
  4289  000904  0E00               	movlw	low _dbuf
  4290  000906  246C               	addwf	efgtoa@n^0,w,c
  4291  000908  6E01               	movwf	strcpy@dest^0,c
  4292  00090A  0E01               	movlw	high _dbuf
  4293  00090C  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4294  00090E  6E02               	movwf	(strcpy@dest+1)^0,c
  4295  000910  0EE8               	movlw	low STR_36
  4296  000912  6E03               	movwf	strcpy@src^0,c
  4297  000914  0E06               	movlw	high STR_36
  4298  000916  6E04               	movwf	(strcpy@src+1)^0,c
  4299  000918  EC31  F01E         	call	_strcpy	;wreg free
  4300  00091C  EF26  F004         	goto	l3780
  4301  000920                     l3804:
  4302                           
  4303                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  4304  000920  0E00               	movlw	0
  4305  000922  6E6E               	movwf	efgtoa@u^0,c
  4306  000924  0E00               	movlw	0
  4307  000926  6E6F               	movwf	(efgtoa@u+1)^0,c
  4308  000928  0E80               	movlw	128
  4309  00092A  6E70               	movwf	(efgtoa@u+2)^0,c
  4310  00092C  0E3F               	movlw	63
  4311  00092E  6E71               	movwf	(efgtoa@u+3)^0,c
  4312                           
  4313                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  4314  000930  0E00               	movlw	0
  4315  000932  6E6B               	movwf	(efgtoa@e+1)^0,c
  4316  000934  0E00               	movlw	0
  4317  000936  6E6A               	movwf	efgtoa@e^0,c
  4318  000938                     
  4319                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g == 0.
      +                          0)) {
  4320  000938  C066  F001         	movff	efgtoa@g,___fleq@ff1
  4321  00093C  C067  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  4322  000940  C068  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  4323  000944  C069  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  4324  000948  0E00               	movlw	0
  4325  00094A  6E05               	movwf	___fleq@ff2^0,c
  4326  00094C  0E00               	movlw	0
  4327  00094E  6E06               	movwf	(___fleq@ff2+1)^0,c
  4328  000950  0E00               	movlw	0
  4329  000952  6E07               	movwf	(___fleq@ff2+2)^0,c
  4330  000954  0E00               	movlw	0
  4331  000956  6E08               	movwf	(___fleq@ff2+3)^0,c
  4332  000958  ECAE  F01C         	call	___fleq	;wreg free
  4333  00095C  B0D8               	btfsc	status,0,c
  4334  00095E  EFB3  F004         	goto	u4381
  4335  000962  EFB5  F004         	goto	u4380
  4336  000966                     u4381:
  4337  000966  EF36  F005         	goto	l3822
  4338  00096A                     u4380:
  4339  00096A  EFD3  F004         	goto	l3814
  4340  00096E                     l3810:
  4341                           
  4342                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             u = u
      +                          *10.0;
  4343  00096E  C06E  F001         	movff	efgtoa@u,___flmul@b
  4344  000972  C06F  F002         	movff	efgtoa@u+1,___flmul@b+1
  4345  000976  C070  F003         	movff	efgtoa@u+2,___flmul@b+2
  4346  00097A  C071  F004         	movff	efgtoa@u+3,___flmul@b+3
  4347  00097E  0E00               	movlw	0
  4348  000980  6E05               	movwf	___flmul@a^0,c
  4349  000982  0E00               	movlw	0
  4350  000984  6E06               	movwf	(___flmul@a+1)^0,c
  4351  000986  0E20               	movlw	32
  4352  000988  6E07               	movwf	(___flmul@a+2)^0,c
  4353  00098A  0E41               	movlw	65
  4354  00098C  6E08               	movwf	(___flmul@a+3)^0,c
  4355  00098E  ECDC  F00D         	call	___flmul	;wreg free
  4356  000992  C001  F06E         	movff	?___flmul,efgtoa@u
  4357  000996  C002  F06F         	movff	?___flmul+1,efgtoa@u+1
  4358  00099A  C003  F070         	movff	?___flmul+2,efgtoa@u+2
  4359  00099E  C004  F071         	movff	?___flmul+3,efgtoa@u+3
  4360  0009A2                     
  4361                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             ++e;
  4362  0009A2  4A6A               	infsnz	efgtoa@e^0,f,c
  4363  0009A4  2A6B               	incf	(efgtoa@e+1)^0,f,c
  4364  0009A6                     l3814:
  4365                           
  4366                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         while (!(
      +                          g < (u*10.0))) {
  4367  0009A6  C066  F01F         	movff	efgtoa@g,___flge@ff1
  4368  0009AA  C067  F020         	movff	efgtoa@g+1,___flge@ff1+1
  4369  0009AE  C068  F021         	movff	efgtoa@g+2,___flge@ff1+2
  4370  0009B2  C069  F022         	movff	efgtoa@g+3,___flge@ff1+3
  4371  0009B6  0E00               	movlw	0
  4372  0009B8  6E05               	movwf	___flmul@a^0,c
  4373  0009BA  0E00               	movlw	0
  4374  0009BC  6E06               	movwf	(___flmul@a+1)^0,c
  4375  0009BE  0E20               	movlw	32
  4376  0009C0  6E07               	movwf	(___flmul@a+2)^0,c
  4377  0009C2  0E41               	movlw	65
  4378  0009C4  6E08               	movwf	(___flmul@a+3)^0,c
  4379  0009C6  C06E  F001         	movff	efgtoa@u,___flmul@b
  4380  0009CA  C06F  F002         	movff	efgtoa@u+1,___flmul@b+1
  4381  0009CE  C070  F003         	movff	efgtoa@u+2,___flmul@b+2
  4382  0009D2  C071  F004         	movff	efgtoa@u+3,___flmul@b+3
  4383  0009D6  ECDC  F00D         	call	___flmul	;wreg free
  4384  0009DA  C001  F023         	movff	?___flmul,___flge@ff2
  4385  0009DE  C002  F024         	movff	?___flmul+1,___flge@ff2+1
  4386  0009E2  C003  F025         	movff	?___flmul+2,___flge@ff2+2
  4387  0009E6  C004  F026         	movff	?___flmul+3,___flge@ff2+3
  4388  0009EA  EC64  F019         	call	___flge	;wreg free
  4389  0009EE  B0D8               	btfsc	status,0,c
  4390  0009F0  EFFC  F004         	goto	u4391
  4391  0009F4  EFFE  F004         	goto	u4390
  4392  0009F8                     u4391:
  4393  0009F8  EFB7  F004         	goto	l3810
  4394  0009FC                     u4390:
  4395  0009FC  EF1D  F005         	goto	l3820
  4396  000A00                     l3816:
  4397                           
  4398                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             u = u
      +                          /10.0;
  4399  000A00  C06E  F001         	movff	efgtoa@u,___fldiv@b
  4400  000A04  C06F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4401  000A08  C070  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4402  000A0C  C071  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4403  000A10  0E00               	movlw	0
  4404  000A12  6E05               	movwf	___fldiv@a^0,c
  4405  000A14  0E00               	movlw	0
  4406  000A16  6E06               	movwf	(___fldiv@a+1)^0,c
  4407  000A18  0E20               	movlw	32
  4408  000A1A  6E07               	movwf	(___fldiv@a+2)^0,c
  4409  000A1C  0E41               	movlw	65
  4410  000A1E  6E08               	movwf	(___fldiv@a+3)^0,c
  4411  000A20  ECF1  F00F         	call	___fldiv	;wreg free
  4412  000A24  C001  F06E         	movff	?___fldiv,efgtoa@u
  4413  000A28  C002  F06F         	movff	?___fldiv+1,efgtoa@u+1
  4414  000A2C  C003  F070         	movff	?___fldiv+2,efgtoa@u+2
  4415  000A30  C004  F071         	movff	?___fldiv+3,efgtoa@u+3
  4416  000A34                     
  4417                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             --e;
  4418  000A34  066A               	decf	efgtoa@e^0,f,c
  4419  000A36  A0D8               	btfss	status,0,c
  4420  000A38  066B               	decf	(efgtoa@e+1)^0,f,c
  4421  000A3A                     l3820:
  4422                           
  4423                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         while (g 
      +                          < u) {
  4424  000A3A  C066  F01F         	movff	efgtoa@g,___flge@ff1
  4425  000A3E  C067  F020         	movff	efgtoa@g+1,___flge@ff1+1
  4426  000A42  C068  F021         	movff	efgtoa@g+2,___flge@ff1+2
  4427  000A46  C069  F022         	movff	efgtoa@g+3,___flge@ff1+3
  4428  000A4A  C06E  F023         	movff	efgtoa@u,___flge@ff2
  4429  000A4E  C06F  F024         	movff	efgtoa@u+1,___flge@ff2+1
  4430  000A52  C070  F025         	movff	efgtoa@u+2,___flge@ff2+2
  4431  000A56  C071  F026         	movff	efgtoa@u+3,___flge@ff2+3
  4432  000A5A  EC64  F019         	call	___flge	;wreg free
  4433  000A5E  A0D8               	btfss	status,0,c
  4434  000A60  EF34  F005         	goto	u4401
  4435  000A64  EF36  F005         	goto	u4400
  4436  000A68                     u4401:
  4437  000A68  EF00  F005         	goto	l3816
  4438  000A6C                     u4400:
  4439  000A6C                     l3822:
  4440                           
  4441                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = tolowe
      +                          r((int)c);
  4442  000A6C  C034  F007         	movff	efgtoa@c,tolower@c
  4443  000A70  6A08               	clrf	(tolower@c+1)^0,c
  4444  000A72  ECD3  F01D         	call	_tolower	;wreg free
  4445  000A76  5007               	movf	?_tolower^0,w,c
  4446  000A78  6E5B               	movwf	efgtoa@mode^0,c
  4447  000A7A                     
  4448                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = mode;
  4449  000A7A  C05B  F058         	movff	efgtoa@mode,efgtoa@nmode
  4450  000A7E                     
  4451                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode == '
      +                          g') {
  4452  000A7E  0E67               	movlw	103
  4453  000A80  185B               	xorwf	efgtoa@mode^0,w,c
  4454  000A82  A4D8               	btfss	status,2,c
  4455  000A84  EF46  F005         	goto	u4411
  4456  000A88  EF48  F005         	goto	u4410
  4457  000A8C                     u4411:
  4458  000A8C  EF6F  F005         	goto	l3836
  4459  000A90                     u4410:
  4460  000A90                     
  4461                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec == 0) 
      +                          {
  4462  000A90  0100               	movlb	0	; () banked
  4463  000A92  51DD               	movf	_prec& (0+255),w,b
  4464  000A94  11DE               	iorwf	(_prec+1)& (0+255),w,b
  4465  000A96  A4D8               	btfss	status,2,c
  4466  000A98  EF50  F005         	goto	u4421
  4467  000A9C  EF52  F005         	goto	u4420
  4468  000AA0                     u4421:
  4469  000AA0  EF56  F005         	goto	l3832
  4470  000AA4                     u4420:
  4471  000AA4                     
  4472                           ; BSR set to: 0
  4473                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  4474  000AA4  0E00               	movlw	0
  4475  000AA6  6FDE               	movwf	(_prec+1)& (0+255),b
  4476  000AA8  0E01               	movlw	1
  4477  000AAA  6FDD               	movwf	_prec& (0+255),b
  4478  000AAC                     l3832:
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = (0 < 
      +                          prec) ? prec : 6;
  4482  000AAC  BFDE               	btfsc	(_prec+1)& (0+255),7,b
  4483  000AAE  EF63  F005         	goto	u4430
  4484  000AB2  51DE               	movf	(_prec+1)& (0+255),w,b
  4485  000AB4  E106               	bnz	u4431
  4486  000AB6  05DD               	decf	_prec& (0+255),w,b
  4487  000AB8  B0D8               	btfsc	status,0,c
  4488  000ABA  EF61  F005         	goto	u4431
  4489  000ABE  EF63  F005         	goto	u4430
  4490  000AC2                     u4431:
  4491  000AC2  EF69  F005         	goto	l956
  4492  000AC6                     u4430:
  4493  000AC6                     l3834:
  4494                           
  4495                           ; BSR set to: 0
  4496  000AC6  0E00               	movlw	0
  4497  000AC8  6E57               	movwf	(efgtoa@p+1)^0,c
  4498  000ACA  0E06               	movlw	6
  4499  000ACC  6E56               	movwf	efgtoa@p^0,c
  4500  000ACE  EF79  F005         	goto	l3842
  4501  000AD2                     l956:
  4502                           
  4503                           ; BSR set to: 0
  4504  000AD2  C0DD  F056         	movff	_prec,efgtoa@p
  4505  000AD6  C0DE  F057         	movff	_prec+1,efgtoa@p+1
  4506  000ADA  EF79  F005         	goto	l3842
  4507  000ADE                     l3836:
  4508                           
  4509                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = (prec
      +                           < 0) ? 6 : prec;
  4510  000ADE  0100               	movlb	0	; () banked
  4511  000AE0  BFDE               	btfsc	(_prec+1)& (0+255),7,b
  4512  000AE2  EF75  F005         	goto	u4441
  4513  000AE6  EF77  F005         	goto	u4440
  4514  000AEA                     u4441:
  4515  000AEA  EF63  F005         	goto	l3834
  4516  000AEE                     u4440:
  4517  000AEE  EF69  F005         	goto	l956
  4518  000AF2                     l3842:
  4519                           
  4520                           ; BSR set to: 0
  4521                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode == '
      +                          g') {
  4522  000AF2  0E67               	movlw	103
  4523  000AF4  185B               	xorwf	efgtoa@mode^0,w,c
  4524  000AF6  A4D8               	btfss	status,2,c
  4525  000AF8  EF80  F005         	goto	u4451
  4526  000AFC  EF82  F005         	goto	u4450
  4527  000B00                     u4451:
  4528  000B00  EFB1  F005         	goto	l3852
  4529  000B04                     u4450:
  4530  000B04                     
  4531                           ; BSR set to: 0
  4532                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (!(e <
      +                           -4) && !((p - 1) < e)) {
  4533  000B04  AE6B               	btfss	(efgtoa@e+1)^0,7,c
  4534  000B06  EF90  F005         	goto	u4460
  4535  000B0A  0EFC               	movlw	252
  4536  000B0C  5C6A               	subwf	efgtoa@e^0,w,c
  4537  000B0E  0EFF               	movlw	255
  4538  000B10  586B               	subwfb	(efgtoa@e+1)^0,w,c
  4539  000B12  A0D8               	btfss	status,0,c
  4540  000B14  EF8E  F005         	goto	u4461
  4541  000B18  EF90  F005         	goto	u4460
  4542  000B1C                     u4461:
  4543  000B1C  EFAF  F005         	goto	l3850
  4544  000B20                     u4460:
  4545  000B20                     
  4546                           ; BSR set to: 0
  4547  000B20  0EFF               	movlw	255
  4548  000B22  6E35               	movwf	??_efgtoa^0,c
  4549  000B24  0EFF               	movlw	255
  4550  000B26  6E36               	movwf	(??_efgtoa+1)^0,c
  4551  000B28  C056  F037         	movff	efgtoa@p,??_efgtoa+2
  4552  000B2C  C057  F038         	movff	efgtoa@p+1,??_efgtoa+3
  4553  000B30  5035               	movf	??_efgtoa^0,w,c
  4554  000B32  2637               	addwf	(??_efgtoa+2)^0,f,c
  4555  000B34  5036               	movf	(??_efgtoa+1)^0,w,c
  4556  000B36  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4557  000B38  506A               	movf	efgtoa@e^0,w,c
  4558  000B3A  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4559  000B3C  5038               	movf	(??_efgtoa+3)^0,w,c
  4560  000B3E  0A80               	xorlw	128
  4561  000B40  6E39               	movwf	(??_efgtoa+4)^0,c
  4562  000B42  506B               	movf	(efgtoa@e+1)^0,w,c
  4563  000B44  0A80               	xorlw	128
  4564  000B46  5839               	subwfb	(??_efgtoa+4)^0,w,c
  4565  000B48  A0D8               	btfss	status,0,c
  4566  000B4A  EFA9  F005         	goto	u4471
  4567  000B4E  EFAB  F005         	goto	u4470
  4568  000B52                     u4471:
  4569  000B52  EFAF  F005         	goto	l3850
  4570  000B56                     u4470:
  4571  000B56                     
  4572                           ; BSR set to: 0
  4573                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             nmode
      +                           = 'f';
  4574  000B56  0E66               	movlw	102
  4575  000B58  6E58               	movwf	efgtoa@nmode^0,c
  4576                           
  4577                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } else {
  4578  000B5A  EFB1  F005         	goto	l3852
  4579  000B5E                     l3850:
  4580                           
  4581                           ; BSR set to: 0
  4582                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             nmode
      +                           = 'e';
  4583  000B5E  0E65               	movlw	101
  4584  000B60  6E58               	movwf	efgtoa@nmode^0,c
  4585  000B62                     l3852:
  4586                           
  4587                           ; BSR set to: 0
  4588                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  4589  000B62  C056  F04E         	movff	efgtoa@p,efgtoa@m
  4590  000B66  C057  F04F         	movff	efgtoa@p+1,efgtoa@m+1
  4591  000B6A                     
  4592                           ; BSR set to: 0
  4593                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mode ==
      +                           'g') || ((nmode == 'f') && (e < 0))) {
  4594  000B6A  0E67               	movlw	103
  4595  000B6C  185B               	xorwf	efgtoa@mode^0,w,c
  4596  000B6E  A4D8               	btfss	status,2,c
  4597  000B70  EFBC  F005         	goto	u4481
  4598  000B74  EFBE  F005         	goto	u4480
  4599  000B78                     u4481:
  4600  000B78  EFCE  F005         	goto	l3860
  4601  000B7C                     u4480:
  4602  000B7C                     
  4603                           ; BSR set to: 0
  4604  000B7C  0E66               	movlw	102
  4605  000B7E  1858               	xorwf	efgtoa@nmode^0,w,c
  4606  000B80  A4D8               	btfss	status,2,c
  4607  000B82  EFC5  F005         	goto	u4491
  4608  000B86  EFC7  F005         	goto	u4490
  4609  000B8A                     u4491:
  4610  000B8A  EFD0  F005         	goto	l3862
  4611  000B8E                     u4490:
  4612  000B8E                     
  4613                           ; BSR set to: 0
  4614  000B8E  BE6B               	btfsc	(efgtoa@e+1)^0,7,c
  4615  000B90  EFCE  F005         	goto	u4500
  4616  000B94  EFCC  F005         	goto	u4501
  4617  000B98                     u4501:
  4618  000B98  EFD0  F005         	goto	l3862
  4619  000B9C                     u4500:
  4620  000B9C                     l3860:
  4621                           
  4622                           ; BSR set to: 0
  4623                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  4624  000B9C  4A4E               	infsnz	efgtoa@m^0,f,c
  4625  000B9E  2A4F               	incf	(efgtoa@m+1)^0,f,c
  4626  000BA0                     l3862:
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmode == 
      +                          'f') {
  4630  000BA0  0E66               	movlw	102
  4631  000BA2  1858               	xorwf	efgtoa@nmode^0,w,c
  4632  000BA4  A4D8               	btfss	status,2,c
  4633  000BA6  EFD7  F005         	goto	u4511
  4634  000BAA  EFD9  F005         	goto	u4510
  4635  000BAE                     u4511:
  4636  000BAE  EFF9  F005         	goto	l3872
  4637  000BB2                     u4510:
  4638  000BB2                     
  4639                           ; BSR set to: 0
  4640                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (e < 0
      +                          ) {
  4641  000BB2  BE6B               	btfsc	(efgtoa@e+1)^0,7,c
  4642  000BB4  EFE0  F005         	goto	u4520
  4643  000BB8  EFDE  F005         	goto	u4521
  4644  000BBC                     u4521:
  4645  000BBC  EFEC  F005         	goto	l3868
  4646  000BC0                     u4520:
  4647  000BC0                     
  4648                           ; BSR set to: 0
  4649                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             u = 1
      +                          .0;
  4650  000BC0  0E00               	movlw	0
  4651  000BC2  6E6E               	movwf	efgtoa@u^0,c
  4652  000BC4  0E00               	movlw	0
  4653  000BC6  6E6F               	movwf	(efgtoa@u+1)^0,c
  4654  000BC8  0E80               	movlw	128
  4655  000BCA  6E70               	movwf	(efgtoa@u+2)^0,c
  4656  000BCC  0E3F               	movlw	63
  4657  000BCE  6E71               	movwf	(efgtoa@u+3)^0,c
  4658                           
  4659                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             e = 0
      +                          ;
  4660  000BD0  0E00               	movlw	0
  4661  000BD2  6E6B               	movwf	(efgtoa@e+1)^0,c
  4662  000BD4  0E00               	movlw	0
  4663  000BD6  6E6A               	movwf	efgtoa@e^0,c
  4664  000BD8                     l3868:
  4665                           
  4666                           ; BSR set to: 0
  4667                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (!(mod
      +                          e == 'g')) {
  4668  000BD8  0E67               	movlw	103
  4669  000BDA  185B               	xorwf	efgtoa@mode^0,w,c
  4670  000BDC  B4D8               	btfsc	status,2,c
  4671  000BDE  EFF3  F005         	goto	u4531
  4672  000BE2  EFF5  F005         	goto	u4530
  4673  000BE6                     u4531:
  4674  000BE6  EFF9  F005         	goto	l3872
  4675  000BEA                     u4530:
  4676  000BEA                     
  4677                           ; BSR set to: 0
  4678                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             m += 
      +                          e;
  4679  000BEA  506A               	movf	efgtoa@e^0,w,c
  4680  000BEC  264E               	addwf	efgtoa@m^0,f,c
  4681  000BEE  506B               	movf	(efgtoa@e+1)^0,w,c
  4682  000BF0  224F               	addwfc	(efgtoa@m+1)^0,f,c
  4683  000BF2                     l3872:
  4684                           
  4685                           ; BSR set to: 0
  4686                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  4687  000BF2  0E00               	movlw	0
  4688  000BF4  6E65               	movwf	(efgtoa@i+1)^0,c
  4689  000BF6  0E00               	movlw	0
  4690  000BF8  6E64               	movwf	efgtoa@i^0,c
  4691  000BFA                     
  4692                           ; BSR set to: 0
  4693                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  4694  000BFA  C066  F05C         	movff	efgtoa@g,efgtoa@h
  4695  000BFE  C067  F05D         	movff	efgtoa@g+1,efgtoa@h+1
  4696  000C02  C068  F05E         	movff	efgtoa@g+2,efgtoa@h+2
  4697  000C06  C069  F05F         	movff	efgtoa@g+3,efgtoa@h+3
  4698  000C0A                     
  4699                           ; BSR set to: 0
  4700                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  4701  000C0A  C06E  F03A         	movff	efgtoa@u,efgtoa@ou
  4702  000C0E  C06F  F03B         	movff	efgtoa@u+1,efgtoa@ou+1
  4703  000C12  C070  F03C         	movff	efgtoa@u+2,efgtoa@ou+2
  4704  000C16  C071  F03D         	movff	efgtoa@u+3,efgtoa@ou+3
  4705                           
  4706                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i < m)
      +                           {
  4707  000C1A  EF89  F006         	goto	l3886
  4708  000C1E                     l3878:
  4709                           
  4710                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = floor
      +                          f(h/u);
  4711  000C1E  C05C  F001         	movff	efgtoa@h,___fldiv@b
  4712  000C22  C05D  F002         	movff	efgtoa@h+1,___fldiv@b+1
  4713  000C26  C05E  F003         	movff	efgtoa@h+2,___fldiv@b+2
  4714  000C2A  C05F  F004         	movff	efgtoa@h+3,___fldiv@b+3
  4715  000C2E  C06E  F005         	movff	efgtoa@u,___fldiv@a
  4716  000C32  C06F  F006         	movff	efgtoa@u+1,___fldiv@a+1
  4717  000C36  C070  F007         	movff	efgtoa@u+2,___fldiv@a+2
  4718  000C3A  C071  F008         	movff	efgtoa@u+3,___fldiv@a+3
  4719  000C3E  ECF1  F00F         	call	___fldiv	;wreg free
  4720  000C42  C001  F01A         	movff	?___fldiv,floorf@x
  4721  000C46  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  4722  000C4A  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  4723  000C4E  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  4724  000C52  EC76  F014         	call	_floorf	;wreg free
  4725  000C56  C01A  F060         	movff	?_floorf,efgtoa@l
  4726  000C5A  C01B  F061         	movff	?_floorf+1,efgtoa@l+1
  4727  000C5E  C01C  F062         	movff	?_floorf+2,efgtoa@l+2
  4728  000C62  C01D  F063         	movff	?_floorf+3,efgtoa@l+3
  4729                           
  4730                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = (int)
      +                          l;
  4731  000C66  C060  F01A         	movff	efgtoa@l,___fltol@f1
  4732  000C6A  C061  F01B         	movff	efgtoa@l+1,___fltol@f1+1
  4733  000C6E  C062  F01C         	movff	efgtoa@l+2,___fltol@f1+2
  4734  000C72  C063  F01D         	movff	efgtoa@l+3,___fltol@f1+3
  4735  000C76  ECE1  F018         	call	___fltol	;wreg free
  4736  000C7A  C01A  F052         	movff	?___fltol,efgtoa@d
  4737  000C7E  C01B  F053         	movff	?___fltol+1,efgtoa@d+1
  4738  000C82                     
  4739                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -= l*u;
  4740  000C82  C05C  F01F         	movff	efgtoa@h,___flsub@b
  4741  000C86  C05D  F020         	movff	efgtoa@h+1,___flsub@b+1
  4742  000C8A  C05E  F021         	movff	efgtoa@h+2,___flsub@b+2
  4743  000C8E  C05F  F022         	movff	efgtoa@h+3,___flsub@b+3
  4744  000C92  C06E  F005         	movff	efgtoa@u,___flmul@a
  4745  000C96  C06F  F006         	movff	efgtoa@u+1,___flmul@a+1
  4746  000C9A  C070  F007         	movff	efgtoa@u+2,___flmul@a+2
  4747  000C9E  C071  F008         	movff	efgtoa@u+3,___flmul@a+3
  4748  000CA2  C060  F001         	movff	efgtoa@l,___flmul@b
  4749  000CA6  C061  F002         	movff	efgtoa@l+1,___flmul@b+1
  4750  000CAA  C062  F003         	movff	efgtoa@l+2,___flmul@b+2
  4751  000CAE  C063  F004         	movff	efgtoa@l+3,___flmul@b+3
  4752  000CB2  ECDC  F00D         	call	___flmul	;wreg free
  4753  000CB6  C001  F023         	movff	?___flmul,___flsub@a
  4754  000CBA  C002  F024         	movff	?___flmul+1,___flsub@a+1
  4755  000CBE  C003  F025         	movff	?___flmul+2,___flsub@a+2
  4756  000CC2  C004  F026         	movff	?___flmul+3,___flsub@a+3
  4757  000CC6  ECB1  F01E         	call	___flsub	;wreg free
  4758  000CCA  C01F  F05C         	movff	?___flsub,efgtoa@h
  4759  000CCE  C020  F05D         	movff	?___flsub+1,efgtoa@h+1
  4760  000CD2  C021  F05E         	movff	?___flsub+2,efgtoa@h+2
  4761  000CD6  C022  F05F         	movff	?___flsub+3,efgtoa@h+3
  4762  000CDA                     
  4763                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = u/10.
      +                          0;
  4764  000CDA  C06E  F001         	movff	efgtoa@u,___fldiv@b
  4765  000CDE  C06F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4766  000CE2  C070  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4767  000CE6  C071  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4768  000CEA  0E00               	movlw	0
  4769  000CEC  6E05               	movwf	___fldiv@a^0,c
  4770  000CEE  0E00               	movlw	0
  4771  000CF0  6E06               	movwf	(___fldiv@a+1)^0,c
  4772  000CF2  0E20               	movlw	32
  4773  000CF4  6E07               	movwf	(___fldiv@a+2)^0,c
  4774  000CF6  0E41               	movlw	65
  4775  000CF8  6E08               	movwf	(___fldiv@a+3)^0,c
  4776  000CFA  ECF1  F00F         	call	___fldiv	;wreg free
  4777  000CFE  C001  F06E         	movff	?___fldiv,efgtoa@u
  4778  000D02  C002  F06F         	movff	?___fldiv+1,efgtoa@u+1
  4779  000D06  C003  F070         	movff	?___fldiv+2,efgtoa@u+2
  4780  000D0A  C004  F071         	movff	?___fldiv+3,efgtoa@u+3
  4781  000D0E                     
  4782                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  4783  000D0E  4A64               	infsnz	efgtoa@i^0,f,c
  4784  000D10  2A65               	incf	(efgtoa@i+1)^0,f,c
  4785  000D12                     l3886:
  4786                           
  4787                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i < m)
      +                           {
  4788  000D12  504E               	movf	efgtoa@m^0,w,c
  4789  000D14  5C64               	subwf	efgtoa@i^0,w,c
  4790  000D16  5065               	movf	(efgtoa@i+1)^0,w,c
  4791  000D18  0A80               	xorlw	128
  4792  000D1A  6E35               	movwf	??_efgtoa^0,c
  4793  000D1C  504F               	movf	(efgtoa@m+1)^0,w,c
  4794  000D1E  0A80               	xorlw	128
  4795  000D20  5835               	subwfb	??_efgtoa^0,w,c
  4796  000D22  A0D8               	btfss	status,0,c
  4797  000D24  EF96  F006         	goto	u4541
  4798  000D28  EF98  F006         	goto	u4540
  4799  000D2C                     u4541:
  4800  000D2C  EF0F  F006         	goto	l3878
  4801  000D30                     u4540:
  4802  000D30                     
  4803                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.0;
  4804  000D30  C06E  F001         	movff	efgtoa@u,___flmul@b
  4805  000D34  C06F  F002         	movff	efgtoa@u+1,___flmul@b+1
  4806  000D38  C070  F003         	movff	efgtoa@u+2,___flmul@b+2
  4807  000D3C  C071  F004         	movff	efgtoa@u+3,___flmul@b+3
  4808  000D40  0E00               	movlw	0
  4809  000D42  6E05               	movwf	___flmul@a^0,c
  4810  000D44  0E00               	movlw	0
  4811  000D46  6E06               	movwf	(___flmul@a+1)^0,c
  4812  000D48  0EA0               	movlw	160
  4813  000D4A  6E07               	movwf	(___flmul@a+2)^0,c
  4814  000D4C  0E40               	movlw	64
  4815  000D4E  6E08               	movwf	(___flmul@a+3)^0,c
  4816  000D50  ECDC  F00D         	call	___flmul	;wreg free
  4817  000D54  C001  F060         	movff	?___flmul,efgtoa@l
  4818  000D58  C002  F061         	movff	?___flmul+1,efgtoa@l+1
  4819  000D5C  C003  F062         	movff	?___flmul+2,efgtoa@l+2
  4820  000D60  C004  F063         	movff	?___flmul+3,efgtoa@l+3
  4821  000D64                     
  4822                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < l) {
  4823  000D64  C05C  F01F         	movff	efgtoa@h,___flge@ff1
  4824  000D68  C05D  F020         	movff	efgtoa@h+1,___flge@ff1+1
  4825  000D6C  C05E  F021         	movff	efgtoa@h+2,___flge@ff1+2
  4826  000D70  C05F  F022         	movff	efgtoa@h+3,___flge@ff1+3
  4827  000D74  C060  F023         	movff	efgtoa@l,___flge@ff2
  4828  000D78  C061  F024         	movff	efgtoa@l+1,___flge@ff2+1
  4829  000D7C  C062  F025         	movff	efgtoa@l+2,___flge@ff2+2
  4830  000D80  C063  F026         	movff	efgtoa@l+3,___flge@ff2+3
  4831  000D84  EC64  F019         	call	___flge	;wreg free
  4832  000D88  B0D8               	btfsc	status,0,c
  4833  000D8A  EFC9  F006         	goto	u4551
  4834  000D8E  EFCB  F006         	goto	u4550
  4835  000D92                     u4551:
  4836  000D92  EFD5  F006         	goto	l3894
  4837  000D96                     u4550:
  4838  000D96                     
  4839                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 0.0;
  4840  000D96  0E00               	movlw	0
  4841  000D98  6E60               	movwf	efgtoa@l^0,c
  4842  000D9A  0E00               	movlw	0
  4843  000D9C  6E61               	movwf	(efgtoa@l+1)^0,c
  4844  000D9E  0E00               	movlw	0
  4845  000DA0  6E62               	movwf	(efgtoa@l+2)^0,c
  4846  000DA2  0E00               	movlw	0
  4847  000DA4  6E63               	movwf	(efgtoa@l+3)^0,c
  4848                           
  4849                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  4850  000DA6  EFFD  F006         	goto	l3900
  4851  000DAA                     l3894:
  4852                           
  4853                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if ((h ==
      +                           l) && !(d % 2)) {
  4854  000DAA  C05C  F001         	movff	efgtoa@h,___fleq@ff1
  4855  000DAE  C05D  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4856  000DB2  C05E  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4857  000DB6  C05F  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4858  000DBA  C060  F005         	movff	efgtoa@l,___fleq@ff2
  4859  000DBE  C061  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4860  000DC2  C062  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4861  000DC6  C063  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4862  000DCA  ECAE  F01C         	call	___fleq	;wreg free
  4863  000DCE  A0D8               	btfss	status,0,c
  4864  000DD0  EFEC  F006         	goto	u4561
  4865  000DD4  EFEE  F006         	goto	u4560
  4866  000DD8                     u4561:
  4867  000DD8  EFFD  F006         	goto	l3900
  4868  000DDC                     u4560:
  4869  000DDC  B052               	btfsc	efgtoa@d^0,0,c
  4870  000DDE  EFF3  F006         	goto	u4571
  4871  000DE2  EFF5  F006         	goto	u4570
  4872  000DE6                     u4571:
  4873  000DE6  EFFD  F006         	goto	l3900
  4874  000DEA                     u4570:
  4875  000DEA                     
  4876                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             l = 0
      +                          .0;
  4877  000DEA  0E00               	movlw	0
  4878  000DEC  6E60               	movwf	efgtoa@l^0,c
  4879  000DEE  0E00               	movlw	0
  4880  000DF0  6E61               	movwf	(efgtoa@l+1)^0,c
  4881  000DF2  0E00               	movlw	0
  4882  000DF4  6E62               	movwf	(efgtoa@l+2)^0,c
  4883  000DF6  0E00               	movlw	0
  4884  000DF8  6E63               	movwf	(efgtoa@l+3)^0,c
  4885  000DFA                     l3900:
  4886                           
  4887                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + l;
  4888  000DFA  C066  F00F         	movff	efgtoa@g,___fladd@b
  4889  000DFE  C067  F010         	movff	efgtoa@g+1,___fladd@b+1
  4890  000E02  C068  F011         	movff	efgtoa@g+2,___fladd@b+2
  4891  000E06  C069  F012         	movff	efgtoa@g+3,___fladd@b+3
  4892  000E0A  C060  F013         	movff	efgtoa@l,___fladd@a
  4893  000E0E  C061  F014         	movff	efgtoa@l+1,___fladd@a+1
  4894  000E12  C062  F015         	movff	efgtoa@l+2,___fladd@a+2
  4895  000E16  C063  F016         	movff	efgtoa@l+3,___fladd@a+3
  4896  000E1A  EC47  F009         	call	___fladd	;wreg free
  4897  000E1E  C00F  F05C         	movff	?___fladd,efgtoa@h
  4898  000E22  C010  F05D         	movff	?___fladd+1,efgtoa@h+1
  4899  000E26  C011  F05E         	movff	?___fladd+2,efgtoa@h+2
  4900  000E2A  C012  F05F         	movff	?___fladd+3,efgtoa@h+3
  4901  000E2E                     
  4902                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  4903  000E2E  C03A  F06E         	movff	efgtoa@ou,efgtoa@u
  4904  000E32  C03B  F06F         	movff	efgtoa@ou+1,efgtoa@u+1
  4905  000E36  C03C  F070         	movff	efgtoa@ou+2,efgtoa@u+2
  4906  000E3A  C03D  F071         	movff	efgtoa@ou+3,efgtoa@u+3
  4907  000E3E                     
  4908                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nmode =
      +                          = 'e') ? 0 : e;
  4909  000E3E  0E65               	movlw	101
  4910  000E40  1858               	xorwf	efgtoa@nmode^0,w,c
  4911  000E42  B4D8               	btfsc	status,2,c
  4912  000E44  EF26  F007         	goto	u4581
  4913  000E48  EF28  F007         	goto	u4580
  4914  000E4C                     u4581:
  4915  000E4C  EF2E  F007         	goto	l3908
  4916  000E50                     u4580:
  4917  000E50  C06A  F050         	movff	efgtoa@e,efgtoa@ne
  4918  000E54  C06B  F051         	movff	efgtoa@e+1,efgtoa@ne+1
  4919  000E58  EF32  F007         	goto	l982
  4920  000E5C                     l3908:
  4921  000E5C  0E00               	movlw	0
  4922  000E5E  6E51               	movwf	(efgtoa@ne+1)^0,c
  4923  000E60  0E00               	movlw	0
  4924  000E62  6E50               	movwf	efgtoa@ne^0,c
  4925  000E64                     l982:
  4926                           
  4927                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  4928  000E64  0E00               	movlw	0
  4929  000E66  6E4D               	movwf	(efgtoa@pp+1)^0,c
  4930  000E68  0E00               	movlw	0
  4931  000E6A  6E4C               	movwf	efgtoa@pp^0,c
  4932                           
  4933                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  4934  000E6C  0E00               	movlw	0
  4935  000E6E  6E4B               	movwf	(efgtoa@t+1)^0,c
  4936  000E70  0E00               	movlw	0
  4937  000E72  6E4A               	movwf	efgtoa@t^0,c
  4938                           
  4939                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  4940  000E74  0E00               	movlw	0
  4941  000E76  6E65               	movwf	(efgtoa@i+1)^0,c
  4942  000E78  0E00               	movlw	0
  4943  000E7A  6E64               	movwf	efgtoa@i^0,c
  4944                           
  4945                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((i < m
      +                          ) && (n < (80 - 5))) {
  4946  000E7C  EF2C  F008         	goto	l3958
  4947  000E80                     l3910:
  4948                           
  4949                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = floor
      +                          f(h/u);
  4950  000E80  C05C  F001         	movff	efgtoa@h,___fldiv@b
  4951  000E84  C05D  F002         	movff	efgtoa@h+1,___fldiv@b+1
  4952  000E88  C05E  F003         	movff	efgtoa@h+2,___fldiv@b+2
  4953  000E8C  C05F  F004         	movff	efgtoa@h+3,___fldiv@b+3
  4954  000E90  C06E  F005         	movff	efgtoa@u,___fldiv@a
  4955  000E94  C06F  F006         	movff	efgtoa@u+1,___fldiv@a+1
  4956  000E98  C070  F007         	movff	efgtoa@u+2,___fldiv@a+2
  4957  000E9C  C071  F008         	movff	efgtoa@u+3,___fldiv@a+3
  4958  000EA0  ECF1  F00F         	call	___fldiv	;wreg free
  4959  000EA4  C001  F01A         	movff	?___fldiv,floorf@x
  4960  000EA8  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  4961  000EAC  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  4962  000EB0  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  4963  000EB4  EC76  F014         	call	_floorf	;wreg free
  4964  000EB8  C01A  F060         	movff	?_floorf,efgtoa@l
  4965  000EBC  C01B  F061         	movff	?_floorf+1,efgtoa@l+1
  4966  000EC0  C01C  F062         	movff	?_floorf+2,efgtoa@l+2
  4967  000EC4  C01D  F063         	movff	?_floorf+3,efgtoa@l+3
  4968                           
  4969                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = (int)
      +                          l;
  4970  000EC8  C060  F01A         	movff	efgtoa@l,___fltol@f1
  4971  000ECC  C061  F01B         	movff	efgtoa@l+1,___fltol@f1+1
  4972  000ED0  C062  F01C         	movff	efgtoa@l+2,___fltol@f1+2
  4973  000ED4  C063  F01D         	movff	efgtoa@l+3,___fltol@f1+3
  4974  000ED8  ECE1  F018         	call	___fltol	;wreg free
  4975  000EDC  C01A  F052         	movff	?___fltol,efgtoa@d
  4976  000EE0  C01B  F053         	movff	?___fltol+1,efgtoa@d+1
  4977  000EE4                     
  4978                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (!(fla
      +                          gs & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4979  000EE4  0100               	movlb	0	; () banked
  4980  000EE6  B9DF               	btfsc	_flags& (0+255),4,b
  4981  000EE8  EF78  F007         	goto	u4591
  4982  000EEC  EF7A  F007         	goto	u4590
  4983  000EF0                     u4591:
  4984  000EF0  EF97  F007         	goto	l3922
  4985  000EF4                     u4590:
  4986  000EF4                     
  4987                           ; BSR set to: 0
  4988  000EF4  5052               	movf	efgtoa@d^0,w,c
  4989  000EF6  1053               	iorwf	(efgtoa@d+1)^0,w,c
  4990  000EF8  A4D8               	btfss	status,2,c
  4991  000EFA  EF81  F007         	goto	u4601
  4992  000EFE  EF83  F007         	goto	u4600
  4993  000F02                     u4601:
  4994  000F02  EF97  F007         	goto	l3922
  4995  000F06                     u4600:
  4996  000F06                     
  4997                           ; BSR set to: 0
  4998  000F06  0E67               	movlw	103
  4999  000F08  185B               	xorwf	efgtoa@mode^0,w,c
  5000  000F0A  A4D8               	btfss	status,2,c
  5001  000F0C  EF8A  F007         	goto	u4611
  5002  000F10  EF8C  F007         	goto	u4610
  5003  000F14                     u4611:
  5004  000F14  EF97  F007         	goto	l3922
  5005  000F18                     u4610:
  5006  000F18                     
  5007                           ; BSR set to: 0
  5008  000F18  BE51               	btfsc	(efgtoa@ne+1)^0,7,c
  5009  000F1A  EF93  F007         	goto	u4620
  5010  000F1E  EF91  F007         	goto	u4621
  5011  000F22                     u4621:
  5012  000F22  EF97  F007         	goto	l3922
  5013  000F26                     u4620:
  5014  000F26                     
  5015                           ; BSR set to: 0
  5016                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             ++t;
  5017  000F26  4A4A               	infsnz	efgtoa@t^0,f,c
  5018  000F28  2A4B               	incf	(efgtoa@t+1)^0,f,c
  5019                           
  5020                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } else {
  5021  000F2A  EFE1  F007         	goto	l3950
  5022  000F2E                     l3922:
  5023                           
  5024                           ; BSR set to: 0
  5025                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             if (!
      +                          pp && (ne < 0)) {
  5026  000F2E  504C               	movf	efgtoa@pp^0,w,c
  5027  000F30  104D               	iorwf	(efgtoa@pp+1)^0,w,c
  5028  000F32  A4D8               	btfss	status,2,c
  5029  000F34  EF9E  F007         	goto	u4631
  5030  000F38  EFA0  F007         	goto	u4630
  5031  000F3C                     u4631:
  5032  000F3C  EFCA  F007         	goto	l3942
  5033  000F40                     u4630:
  5034  000F40                     
  5035                           ; BSR set to: 0
  5036  000F40  BE51               	btfsc	(efgtoa@ne+1)^0,7,c
  5037  000F42  EFA7  F007         	goto	u4640
  5038  000F46  EFA5  F007         	goto	u4641
  5039  000F4A                     u4641:
  5040  000F4A  EFCA  F007         	goto	l3942
  5041  000F4E                     u4640:
  5042  000F4E                     
  5043                           ; BSR set to: 0
  5044                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:                 d
      +                          buf[n++] = '.';
  5045  000F4E  0E00               	movlw	low _dbuf
  5046  000F50  246C               	addwf	efgtoa@n^0,w,c
  5047  000F52  6ED9               	movwf	fsr2l,c
  5048  000F54  0E01               	movlw	high _dbuf
  5049  000F56  206D               	addwfc	(efgtoa@n+1)^0,w,c
  5050  000F58  6EDA               	movwf	fsr2h,c
  5051  000F5A  0E2E               	movlw	46
  5052  000F5C  6EDF               	movwf	indf2,c
  5053  000F5E                     
  5054                           ; BSR set to: 0
  5055  000F5E  4A6C               	infsnz	efgtoa@n^0,f,c
  5056  000F60  2A6D               	incf	(efgtoa@n+1)^0,f,c
  5057  000F62                     
  5058                           ; BSR set to: 0
  5059                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:                 -
      +                          -w;
  5060  000F62  0659               	decf	efgtoa@w^0,f,c
  5061  000F64  A0D8               	btfss	status,0,c
  5062  000F66  065A               	decf	(efgtoa@w+1)^0,f,c
  5063  000F68                     
  5064                           ; BSR set to: 0
  5065                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:                 p
      +                          p = 1;
  5066  000F68  0E00               	movlw	0
  5067  000F6A  6E4D               	movwf	(efgtoa@pp+1)^0,c
  5068  000F6C  0E01               	movlw	1
  5069  000F6E  6E4C               	movwf	efgtoa@pp^0,c
  5070  000F70  EFCA  F007         	goto	l3942
  5071  000F74                     l3934:
  5072                           
  5073                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:                 d
      +                          buf[n++] = '0';
  5074  000F74  0E00               	movlw	low _dbuf
  5075  000F76  246C               	addwf	efgtoa@n^0,w,c
  5076  000F78  6ED9               	movwf	fsr2l,c
  5077  000F7A  0E01               	movlw	high _dbuf
  5078  000F7C  206D               	addwfc	(efgtoa@n+1)^0,w,c
  5079  000F7E  6EDA               	movwf	fsr2h,c
  5080  000F80  0E30               	movlw	48
  5081  000F82  6EDF               	movwf	indf2,c
  5082  000F84  4A6C               	infsnz	efgtoa@n^0,f,c
  5083  000F86  2A6D               	incf	(efgtoa@n+1)^0,f,c
  5084  000F88                     
  5085                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:                 -
      +                          -w;
  5086  000F88  0659               	decf	efgtoa@w^0,f,c
  5087  000F8A  A0D8               	btfss	status,0,c
  5088  000F8C  065A               	decf	(efgtoa@w+1)^0,f,c
  5089  000F8E                     
  5090                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:                 -
      +                          -t;
  5091  000F8E  064A               	decf	efgtoa@t^0,f,c
  5092  000F90  A0D8               	btfss	status,0,c
  5093  000F92  064B               	decf	(efgtoa@t+1)^0,f,c
  5094  000F94                     l3942:
  5095                           
  5096                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             while
      +                           (t) {
  5097  000F94  504A               	movf	efgtoa@t^0,w,c
  5098  000F96  104B               	iorwf	(efgtoa@t+1)^0,w,c
  5099  000F98  A4D8               	btfss	status,2,c
  5100  000F9A  EFD1  F007         	goto	u4651
  5101  000F9E  EFD3  F007         	goto	u4650
  5102  000FA2                     u4651:
  5103  000FA2  EFBA  F007         	goto	l3934
  5104  000FA6                     u4650:
  5105  000FA6                     
  5106                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             dbuf[
      +                          n++] = '0' + d;
  5107  000FA6  0E00               	movlw	low _dbuf
  5108  000FA8  246C               	addwf	efgtoa@n^0,w,c
  5109  000FAA  6ED9               	movwf	fsr2l,c
  5110  000FAC  0E01               	movlw	high _dbuf
  5111  000FAE  206D               	addwfc	(efgtoa@n+1)^0,w,c
  5112  000FB0  6EDA               	movwf	fsr2h,c
  5113  000FB2  5052               	movf	efgtoa@d^0,w,c
  5114  000FB4  0F30               	addlw	48
  5115  000FB6  6EDF               	movwf	indf2,c
  5116  000FB8  4A6C               	infsnz	efgtoa@n^0,f,c
  5117  000FBA  2A6D               	incf	(efgtoa@n+1)^0,f,c
  5118  000FBC                     
  5119                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             --w;
  5120  000FBC  0659               	decf	efgtoa@w^0,f,c
  5121  000FBE  A0D8               	btfss	status,0,c
  5122  000FC0  065A               	decf	(efgtoa@w+1)^0,f,c
  5123  000FC2                     l3950:
  5124                           
  5125                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -= l*u;
  5126  000FC2  C05C  F01F         	movff	efgtoa@h,___flsub@b
  5127  000FC6  C05D  F020         	movff	efgtoa@h+1,___flsub@b+1
  5128  000FCA  C05E  F021         	movff	efgtoa@h+2,___flsub@b+2
  5129  000FCE  C05F  F022         	movff	efgtoa@h+3,___flsub@b+3
  5130  000FD2  C06E  F005         	movff	efgtoa@u,___flmul@a
  5131  000FD6  C06F  F006         	movff	efgtoa@u+1,___flmul@a+1
  5132  000FDA  C070  F007         	movff	efgtoa@u+2,___flmul@a+2
  5133  000FDE  C071  F008         	movff	efgtoa@u+3,___flmul@a+3
  5134  000FE2  C060  F001         	movff	efgtoa@l,___flmul@b
  5135  000FE6  C061  F002         	movff	efgtoa@l+1,___flmul@b+1
  5136  000FEA  C062  F003         	movff	efgtoa@l+2,___flmul@b+2
  5137  000FEE  C063  F004         	movff	efgtoa@l+3,___flmul@b+3
  5138  000FF2  ECDC  F00D         	call	___flmul	;wreg free
  5139  000FF6  C001  F023         	movff	?___flmul,___flsub@a
  5140  000FFA  C002  F024         	movff	?___flmul+1,___flsub@a+1
  5141  000FFE  C003  F025         	movff	?___flmul+2,___flsub@a+2
  5142  001002  C004  F026         	movff	?___flmul+3,___flsub@a+3
  5143  001006  ECB1  F01E         	call	___flsub	;wreg free
  5144  00100A  C01F  F05C         	movff	?___flsub,efgtoa@h
  5145  00100E  C020  F05D         	movff	?___flsub+1,efgtoa@h+1
  5146  001012  C021  F05E         	movff	?___flsub+2,efgtoa@h+2
  5147  001016  C022  F05F         	movff	?___flsub+3,efgtoa@h+3
  5148  00101A                     
  5149                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = u/10.
      +                          0;
  5150  00101A  C06E  F001         	movff	efgtoa@u,___fldiv@b
  5151  00101E  C06F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  5152  001022  C070  F003         	movff	efgtoa@u+2,___fldiv@b+2
  5153  001026  C071  F004         	movff	efgtoa@u+3,___fldiv@b+3
  5154  00102A  0E00               	movlw	0
  5155  00102C  6E05               	movwf	___fldiv@a^0,c
  5156  00102E  0E00               	movlw	0
  5157  001030  6E06               	movwf	(___fldiv@a+1)^0,c
  5158  001032  0E20               	movlw	32
  5159  001034  6E07               	movwf	(___fldiv@a+2)^0,c
  5160  001036  0E41               	movlw	65
  5161  001038  6E08               	movwf	(___fldiv@a+3)^0,c
  5162  00103A  ECF1  F00F         	call	___fldiv	;wreg free
  5163  00103E  C001  F06E         	movff	?___fldiv,efgtoa@u
  5164  001042  C002  F06F         	movff	?___fldiv+1,efgtoa@u+1
  5165  001046  C003  F070         	movff	?___fldiv+2,efgtoa@u+2
  5166  00104A  C004  F071         	movff	?___fldiv+3,efgtoa@u+3
  5167  00104E                     
  5168                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne;
  5169  00104E  0650               	decf	efgtoa@ne^0,f,c
  5170  001050  A0D8               	btfss	status,0,c
  5171  001052  0651               	decf	(efgtoa@ne+1)^0,f,c
  5172  001054                     
  5173                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  5174  001054  4A64               	infsnz	efgtoa@i^0,f,c
  5175  001056  2A65               	incf	(efgtoa@i+1)^0,f,c
  5176  001058                     l3958:
  5177                           
  5178                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((i < m
      +                          ) && (n < (80 - 5))) {
  5179  001058  504E               	movf	efgtoa@m^0,w,c
  5180  00105A  5C64               	subwf	efgtoa@i^0,w,c
  5181  00105C  5065               	movf	(efgtoa@i+1)^0,w,c
  5182  00105E  0A80               	xorlw	128
  5183  001060  6E35               	movwf	??_efgtoa^0,c
  5184  001062  504F               	movf	(efgtoa@m+1)^0,w,c
  5185  001064  0A80               	xorlw	128
  5186  001066  5835               	subwfb	??_efgtoa^0,w,c
  5187  001068  B0D8               	btfsc	status,0,c
  5188  00106A  EF39  F008         	goto	u4661
  5189  00106E  EF3B  F008         	goto	u4660
  5190  001072                     u4661:
  5191  001072  EF49  F008         	goto	l3962
  5192  001076                     u4660:
  5193  001076  BE6D               	btfsc	(efgtoa@n+1)^0,7,c
  5194  001078  EF47  F008         	goto	u4671
  5195  00107C  506D               	movf	(efgtoa@n+1)^0,w,c
  5196  00107E  E109               	bnz	u4670
  5197  001080  0E4B               	movlw	75
  5198  001082  5C6C               	subwf	efgtoa@n^0,w,c
  5199  001084  A0D8               	btfss	status,0,c
  5200  001086  EF47  F008         	goto	u4671
  5201  00108A  EF49  F008         	goto	u4670
  5202  00108E                     u4671:
  5203  00108E  EF40  F007         	goto	l3910
  5204  001092                     u4670:
  5205  001092                     l3962:
  5206                           
  5207                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp && (f
      +                          lags & (1 << 4))) {
  5208  001092  504C               	movf	efgtoa@pp^0,w,c
  5209  001094  104D               	iorwf	(efgtoa@pp+1)^0,w,c
  5210  001096  A4D8               	btfss	status,2,c
  5211  001098  EF50  F008         	goto	u4681
  5212  00109C  EF52  F008         	goto	u4680
  5213  0010A0                     u4681:
  5214  0010A0  EF64  F008         	goto	l3970
  5215  0010A4                     u4680:
  5216  0010A4  0100               	movlb	0	; () banked
  5217  0010A6  A9DF               	btfss	_flags& (0+255),4,b
  5218  0010A8  EF58  F008         	goto	u4691
  5219  0010AC  EF5A  F008         	goto	u4690
  5220  0010B0                     u4691:
  5221  0010B0  EF64  F008         	goto	l3970
  5222  0010B4                     u4690:
  5223  0010B4                     
  5224                           ; BSR set to: 0
  5225                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf[n++]
      +                           = '.';
  5226  0010B4  0E00               	movlw	low _dbuf
  5227  0010B6  246C               	addwf	efgtoa@n^0,w,c
  5228  0010B8  6ED9               	movwf	fsr2l,c
  5229  0010BA  0E01               	movlw	high _dbuf
  5230  0010BC  206D               	addwfc	(efgtoa@n+1)^0,w,c
  5231  0010BE  6EDA               	movwf	fsr2h,c
  5232  0010C0  0E2E               	movlw	46
  5233  0010C2  6EDF               	movwf	indf2,c
  5234  0010C4                     
  5235                           ; BSR set to: 0
  5236  0010C4  4A6C               	infsnz	efgtoa@n^0,f,c
  5237  0010C6  2A6D               	incf	(efgtoa@n+1)^0,f,c
  5238  0010C8                     l3970:
  5239                           
  5240                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] = '\0
      +                          ';
  5241  0010C8  0E00               	movlw	low _dbuf
  5242  0010CA  246C               	addwf	efgtoa@n^0,w,c
  5243  0010CC  6ED9               	movwf	fsr2l,c
  5244  0010CE  0E01               	movlw	high _dbuf
  5245  0010D0  206D               	addwfc	(efgtoa@n+1)^0,w,c
  5246  0010D2  6EDA               	movwf	fsr2h,c
  5247  0010D4  0E00               	movlw	0
  5248  0010D6  6EDF               	movwf	indf2,c
  5249  0010D8                     
  5250                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmode == 
      +                          'e') {
  5251  0010D8  0E65               	movlw	101
  5252  0010DA  1858               	xorwf	efgtoa@nmode^0,w,c
  5253  0010DC  A4D8               	btfss	status,2,c
  5254  0010DE  EF73  F008         	goto	u4701
  5255  0010E2  EF75  F008         	goto	u4700
  5256  0010E6                     u4701:
  5257  0010E6  EF2A  F004         	goto	l3782
  5258  0010EA                     u4700:
  5259  0010EA                     
  5260                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = sizeo
      +                          f(dbuf) - 1;
  5261  0010EA  0E00               	movlw	0
  5262  0010EC  6E65               	movwf	(efgtoa@i+1)^0,c
  5263  0010EE  0E4F               	movlw	79
  5264  0010F0  6E64               	movwf	efgtoa@i^0,c
  5265  0010F2                     
  5266                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf[i] =
      +                           '\0';
  5267  0010F2  0E00               	movlw	low _dbuf
  5268  0010F4  2464               	addwf	efgtoa@i^0,w,c
  5269  0010F6  6ED9               	movwf	fsr2l,c
  5270  0010F8  0E01               	movlw	high _dbuf
  5271  0010FA  2065               	addwfc	(efgtoa@i+1)^0,w,c
  5272  0010FC  6EDA               	movwf	fsr2h,c
  5273  0010FE  0E00               	movlw	0
  5274  001100  6EDF               	movwf	indf2,c
  5275  001102                     
  5276                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign = 0;
  5277  001102  0E00               	movlw	0
  5278  001104  6E55               	movwf	(efgtoa@sign+1)^0,c
  5279  001106  0E00               	movlw	0
  5280  001108  6E54               	movwf	efgtoa@sign^0,c
  5281  00110A                     
  5282                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (e < 0
      +                          ) {
  5283  00110A  BE6B               	btfsc	(efgtoa@e+1)^0,7,c
  5284  00110C  EF8C  F008         	goto	u4710
  5285  001110  EF8A  F008         	goto	u4711
  5286  001114                     u4711:
  5287  001114  EF94  F008         	goto	l3986
  5288  001118                     u4710:
  5289  001118                     
  5290                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             sign 
      +                          = 1;
  5291  001118  0E00               	movlw	0
  5292  00111A  6E55               	movwf	(efgtoa@sign+1)^0,c
  5293  00111C  0E01               	movlw	1
  5294  00111E  6E54               	movwf	efgtoa@sign^0,c
  5295  001120                     
  5296                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             e = -
      +                          e;
  5297  001120  6C6A               	negf	efgtoa@e^0,c
  5298  001122  1E6B               	comf	(efgtoa@e+1)^0,f,c
  5299  001124  B0D8               	btfsc	status,0,c
  5300  001126  2A6B               	incf	(efgtoa@e+1)^0,f,c
  5301  001128                     l3986:
  5302                           
  5303                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 2;
  5304  001128  0E00               	movlw	0
  5305  00112A  6E57               	movwf	(efgtoa@p+1)^0,c
  5306  00112C  0E02               	movlw	2
  5307  00112E  6E56               	movwf	efgtoa@p^0,c
  5308                           
  5309                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         while (e 
      +                          || (0 < p)) {
  5310  001130  EFC4  F008         	goto	l3998
  5311  001134                     l3988:
  5312                           
  5313                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             --i;
  5314  001134  0664               	decf	efgtoa@i^0,f,c
  5315  001136  A0D8               	btfss	status,0,c
  5316  001138  0665               	decf	(efgtoa@i+1)^0,f,c
  5317  00113A                     
  5318                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             dbuf[
      +                          i] = '0' + (e % 10);
  5319  00113A  0E00               	movlw	low _dbuf
  5320  00113C  2464               	addwf	efgtoa@i^0,w,c
  5321  00113E  6ED9               	movwf	fsr2l,c
  5322  001140  0E01               	movlw	high _dbuf
  5323  001142  2065               	addwfc	(efgtoa@i+1)^0,w,c
  5324  001144  6EDA               	movwf	fsr2h,c
  5325  001146  C06A  F001         	movff	efgtoa@e,___awmod@dividend
  5326  00114A  C06B  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  5327  00114E  0E00               	movlw	0
  5328  001150  6E04               	movwf	(___awmod@divisor+1)^0,c
  5329  001152  0E0A               	movlw	10
  5330  001154  6E03               	movwf	___awmod@divisor^0,c
  5331  001156  EC56  F01C         	call	___awmod	;wreg free
  5332  00115A  5001               	movf	?___awmod^0,w,c
  5333  00115C  0F30               	addlw	48
  5334  00115E  6EDF               	movwf	indf2,c
  5335  001160                     
  5336                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             e = e
      +                           / 10;
  5337  001160  C06A  F001         	movff	efgtoa@e,___awdiv@dividend
  5338  001164  C06B  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  5339  001168  0E00               	movlw	0
  5340  00116A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5341  00116C  0E0A               	movlw	10
  5342  00116E  6E03               	movwf	___awdiv@divisor^0,c
  5343  001170  EC98  F01B         	call	___awdiv	;wreg free
  5344  001174  C001  F06A         	movff	?___awdiv,efgtoa@e
  5345  001178  C002  F06B         	movff	?___awdiv+1,efgtoa@e+1
  5346  00117C                     
  5347                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             --p;
  5348  00117C  0656               	decf	efgtoa@p^0,f,c
  5349  00117E  A0D8               	btfss	status,0,c
  5350  001180  0657               	decf	(efgtoa@p+1)^0,f,c
  5351  001182                     
  5352                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             --w;
  5353  001182  0659               	decf	efgtoa@w^0,f,c
  5354  001184  A0D8               	btfss	status,0,c
  5355  001186  065A               	decf	(efgtoa@w+1)^0,f,c
  5356  001188                     l3998:
  5357                           
  5358                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         while (e 
      +                          || (0 < p)) {
  5359  001188  506A               	movf	efgtoa@e^0,w,c
  5360  00118A  106B               	iorwf	(efgtoa@e+1)^0,w,c
  5361  00118C  A4D8               	btfss	status,2,c
  5362  00118E  EFCB  F008         	goto	u4721
  5363  001192  EFCD  F008         	goto	u4720
  5364  001196                     u4721:
  5365  001196  EF9A  F008         	goto	l3988
  5366  00119A                     u4720:
  5367  00119A  BE57               	btfsc	(efgtoa@p+1)^0,7,c
  5368  00119C  EFDA  F008         	goto	u4730
  5369  0011A0  5057               	movf	(efgtoa@p+1)^0,w,c
  5370  0011A2  E106               	bnz	u4731
  5371  0011A4  0456               	decf	efgtoa@p^0,w,c
  5372  0011A6  B0D8               	btfsc	status,0,c
  5373  0011A8  EFD8  F008         	goto	u4731
  5374  0011AC  EFDA  F008         	goto	u4730
  5375  0011B0                     u4731:
  5376  0011B0  EF9A  F008         	goto	l3988
  5377  0011B4                     u4730:
  5378  0011B4                     
  5379                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  5380  0011B4  0664               	decf	efgtoa@i^0,f,c
  5381  0011B6  A0D8               	btfss	status,0,c
  5382  0011B8  0665               	decf	(efgtoa@i+1)^0,f,c
  5383  0011BA                     
  5384                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf[i] =
      +                           sign ? '-' : '+';
  5385  0011BA  5054               	movf	efgtoa@sign^0,w,c
  5386  0011BC  1055               	iorwf	(efgtoa@sign+1)^0,w,c
  5387  0011BE  A4D8               	btfss	status,2,c
  5388  0011C0  EFE4  F008         	goto	u4741
  5389  0011C4  EFE6  F008         	goto	u4740
  5390  0011C8                     u4741:
  5391  0011C8  EFEC  F008         	goto	l4008
  5392  0011CC                     u4740:
  5393  0011CC  0E00               	movlw	0
  5394  0011CE  6E45               	movwf	(_efgtoa$740+1)^0,c
  5395  0011D0  0E2B               	movlw	43
  5396  0011D2  6E44               	movwf	_efgtoa$740^0,c
  5397  0011D4  EFF0  F008         	goto	l4010
  5398  0011D8                     l4008:
  5399  0011D8  0E00               	movlw	0
  5400  0011DA  6E45               	movwf	(_efgtoa$740+1)^0,c
  5401  0011DC  0E2D               	movlw	45
  5402  0011DE  6E44               	movwf	_efgtoa$740^0,c
  5403  0011E0                     l4010:
  5404  0011E0  0E00               	movlw	low _dbuf
  5405  0011E2  2464               	addwf	efgtoa@i^0,w,c
  5406  0011E4  6ED9               	movwf	fsr2l,c
  5407  0011E6  0E01               	movlw	high _dbuf
  5408  0011E8  2065               	addwfc	(efgtoa@i+1)^0,w,c
  5409  0011EA  6EDA               	movwf	fsr2h,c
  5410  0011EC  C044  FFDF         	movff	_efgtoa$740,indf2
  5411  0011F0                     
  5412                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  5413  0011F0  0659               	decf	efgtoa@w^0,f,c
  5414  0011F2  A0D8               	btfss	status,0,c
  5415  0011F4  065A               	decf	(efgtoa@w+1)^0,f,c
  5416  0011F6                     
  5417                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf[i] =
      +                           (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5418  0011F6  0664               	decf	efgtoa@i^0,f,c
  5419  0011F8  A0D8               	btfss	status,0,c
  5420  0011FA  0665               	decf	(efgtoa@i+1)^0,f,c
  5421  0011FC  0EBF               	movlw	191
  5422  0011FE  6E35               	movwf	??_efgtoa^0,c
  5423  001200  0EFF               	movlw	255
  5424  001202  6E36               	movwf	(??_efgtoa+1)^0,c
  5425  001204  5034               	movf	efgtoa@c^0,w,c
  5426  001206  6E37               	movwf	(??_efgtoa+2)^0,c
  5427  001208  6A38               	clrf	(??_efgtoa+3)^0,c
  5428  00120A  5035               	movf	??_efgtoa^0,w,c
  5429  00120C  2637               	addwf	(??_efgtoa+2)^0,f,c
  5430  00120E  5036               	movf	(??_efgtoa+1)^0,w,c
  5431  001210  2238               	addwfc	(??_efgtoa+3)^0,f,c
  5432  001212  5038               	movf	(??_efgtoa+3)^0,w,c
  5433  001214  E10A               	bnz	u4750
  5434  001216  0E1A               	movlw	26
  5435  001218  5C37               	subwf	(??_efgtoa+2)^0,w,c
  5436  00121A  A0D8               	btfss	status,0,c
  5437  00121C  EF12  F009         	goto	u4751
  5438  001220  EF15  F009         	goto	u4750
  5439  001224                     u4751:
  5440  001224  0E01               	movlw	1
  5441  001226  EF16  F009         	goto	u4760
  5442  00122A                     u4750:
  5443  00122A  0E00               	movlw	0
  5444  00122C                     u4760:
  5445  00122C  6E48               	movwf	_efgtoa$742^0,c
  5446  00122E  6A49               	clrf	(_efgtoa$742+1)^0,c
  5447  001230  5048               	movf	_efgtoa$742^0,w,c
  5448  001232  1049               	iorwf	(_efgtoa$742+1)^0,w,c
  5449  001234  A4D8               	btfss	status,2,c
  5450  001236  EF1F  F009         	goto	u4771
  5451  00123A  EF21  F009         	goto	u4770
  5452  00123E                     u4771:
  5453  00123E  EF27  F009         	goto	l4024
  5454  001242                     u4770:
  5455  001242  0E00               	movlw	0
  5456  001244  6E47               	movwf	(_efgtoa$741+1)^0,c
  5457  001246  0E65               	movlw	101
  5458  001248  6E46               	movwf	_efgtoa$741^0,c
  5459  00124A  EF2B  F009         	goto	l4026
  5460  00124E                     l4024:
  5461  00124E  0E00               	movlw	0
  5462  001250  6E47               	movwf	(_efgtoa$741+1)^0,c
  5463  001252  0E45               	movlw	69
  5464  001254  6E46               	movwf	_efgtoa$741^0,c
  5465  001256                     l4026:
  5466  001256  0E00               	movlw	low _dbuf
  5467  001258  2464               	addwf	efgtoa@i^0,w,c
  5468  00125A  6ED9               	movwf	fsr2l,c
  5469  00125C  0E01               	movlw	high _dbuf
  5470  00125E  2065               	addwfc	(efgtoa@i+1)^0,w,c
  5471  001260  6EDA               	movwf	fsr2h,c
  5472  001262  C046  FFDF         	movff	_efgtoa$741,indf2
  5473  001266                     
  5474                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  5475  001266  0659               	decf	efgtoa@w^0,f,c
  5476  001268  A0D8               	btfss	status,0,c
  5477  00126A  065A               	decf	(efgtoa@w+1)^0,f,c
  5478  00126C                     
  5479                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strcpy(&d
      +                          buf[n], &dbuf[i]);
  5480  00126C  0E00               	movlw	low _dbuf
  5481  00126E  246C               	addwf	efgtoa@n^0,w,c
  5482  001270  6E01               	movwf	strcpy@dest^0,c
  5483  001272  0E01               	movlw	high _dbuf
  5484  001274  206D               	addwfc	(efgtoa@n+1)^0,w,c
  5485  001276  6E02               	movwf	(strcpy@dest+1)^0,c
  5486  001278  0E00               	movlw	low _dbuf
  5487  00127A  2464               	addwf	efgtoa@i^0,w,c
  5488  00127C  6E03               	movwf	strcpy@src^0,c
  5489  00127E  0E01               	movlw	high _dbuf
  5490  001280  2065               	addwfc	(efgtoa@i+1)^0,w,c
  5491  001282  6E04               	movwf	(strcpy@src+1)^0,c
  5492  001284  EC31  F01E         	call	_strcpy	;wreg free
  5493  001288  EF2A  F004         	goto	l3782
  5494  00128C                     l938:
  5495  00128C  0012               	return		;funcret
  5496  00128E                     __end_of_efgtoa:
  5497                           	callstack 0
  5498                           
  5499 ;; *************** function _tolower *****************
  5500 ;; Defined at:
  5501 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\tolower.c"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;  c               2    6[COMRAM] int 
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;		None
  5506 ;; Return value:  Size  Location     Type
  5507 ;;                  2    6[COMRAM] int 
  5508 ;; Registers used:
  5509 ;;		wreg, status,2, status,0
  5510 ;; Tracked objects:
  5511 ;;		On entry : 0/0
  5512 ;;		On exit  : 0/0
  5513 ;;		Unchanged: 0/0
  5514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5515 ;;      Params:         2       0       0       0       0       0       0
  5516 ;;      Locals:         2       0       0       0       0       0       0
  5517 ;;      Temps:          4       0       0       0       0       0       0
  5518 ;;      Totals:         8       0       0       0       0       0       0
  5519 ;;Total ram usage:        8 bytes
  5520 ;; Hardware stack levels used:    1
  5521 ;; Hardware stack levels required when called:    1
  5522 ;; This function calls:
  5523 ;;		_isupper
  5524 ;; This function is called by:
  5525 ;;		_efgtoa
  5526 ;;		_vfpfcnvrt
  5527 ;; This function uses a non-reentrant model
  5528 ;;
  5529                           
  5530                           	psect	text11
  5531  003BA6                     __ptext11:
  5532                           	callstack 0
  5533  003BA6                     _tolower:
  5534                           	callstack 25
  5535  003BA6  0EBF               	movlw	191
  5536  003BA8  6E09               	movwf	??_tolower^0,c
  5537  003BAA  0EFF               	movlw	255
  5538  003BAC  6E0A               	movwf	(??_tolower+1)^0,c
  5539  003BAE  C007  F00B         	movff	tolower@c,??_tolower+2
  5540  003BB2  C008  F00C         	movff	tolower@c+1,??_tolower+3
  5541  003BB6  5009               	movf	??_tolower^0,w,c
  5542  003BB8  260B               	addwf	(??_tolower+2)^0,f,c
  5543  003BBA  500A               	movf	(??_tolower+1)^0,w,c
  5544  003BBC  220C               	addwfc	(??_tolower+3)^0,f,c
  5545  003BBE  500C               	movf	(??_tolower+3)^0,w,c
  5546  003BC0  E10A               	bnz	u4090
  5547  003BC2  0E1A               	movlw	26
  5548  003BC4  5C0B               	subwf	(??_tolower+2)^0,w,c
  5549  003BC6  A0D8               	btfss	status,0,c
  5550  003BC8  EFE8  F01D         	goto	u4091
  5551  003BCC  EFEB  F01D         	goto	u4090
  5552  003BD0                     u4091:
  5553  003BD0  0E01               	movlw	1
  5554  003BD2  EFEC  F01D         	goto	u4100
  5555  003BD6                     u4090:
  5556  003BD6  0E00               	movlw	0
  5557  003BD8                     u4100:
  5558  003BD8  6E0D               	movwf	_tolower$889^0,c
  5559  003BDA  6A0E               	clrf	(_tolower$889+1)^0,c
  5560  003BDC  500D               	movf	_tolower$889^0,w,c
  5561  003BDE  100E               	iorwf	(_tolower$889+1)^0,w,c
  5562  003BE0  B4D8               	btfsc	status,2,c
  5563  003BE2  EFF5  F01D         	goto	u4111
  5564  003BE6  EFF7  F01D         	goto	u4110
  5565  003BEA                     u4111:
  5566  003BEA  EFFE  F01D         	goto	l1166
  5567  003BEE                     u4110:
  5568  003BEE  0E20               	movlw	32
  5569  003BF0  1007               	iorwf	tolower@c^0,w,c
  5570  003BF2  6E07               	movwf	?_tolower^0,c
  5571  003BF4  5008               	movf	(tolower@c+1)^0,w,c
  5572  003BF6  6E08               	movwf	(?_tolower+1)^0,c
  5573  003BF8  EF02  F01E         	goto	l1171
  5574  003BFC                     l1166:
  5575  003BFC  C007  F007         	movff	tolower@c,?_tolower
  5576  003C00  C008  F008         	movff	tolower@c+1,?_tolower+1
  5577  003C04                     l1171:
  5578  003C04  0012               	return		;funcret
  5579  003C06                     __end_of_tolower:
  5580                           	callstack 0
  5581                           
  5582 ;; *************** function _isupper *****************
  5583 ;; Defined at:
  5584 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\isupper.c"
  5585 ;; Parameters:    Size  Location     Type
  5586 ;;  c               2    0[COMRAM] int 
  5587 ;; Auto vars:     Size  Location     Type
  5588 ;;		None
  5589 ;; Return value:  Size  Location     Type
  5590 ;;                  2    0[COMRAM] int 
  5591 ;; Registers used:
  5592 ;;		wreg, status,2, status,0
  5593 ;; Tracked objects:
  5594 ;;		On entry : 0/0
  5595 ;;		On exit  : 0/0
  5596 ;;		Unchanged: 0/0
  5597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5598 ;;      Params:         2       0       0       0       0       0       0
  5599 ;;      Locals:         0       0       0       0       0       0       0
  5600 ;;      Temps:          4       0       0       0       0       0       0
  5601 ;;      Totals:         6       0       0       0       0       0       0
  5602 ;;Total ram usage:        6 bytes
  5603 ;; Hardware stack levels used:    1
  5604 ;; This function calls:
  5605 ;;		Nothing
  5606 ;; This function is called by:
  5607 ;;		_efgtoa
  5608 ;;		_vfpfcnvrt
  5609 ;;		_tolower
  5610 ;; This function uses a non-reentrant model
  5611 ;;
  5612                           
  5613                           	psect	text12
  5614  003DEC                     __ptext12:
  5615                           	callstack 0
  5616  003DEC                     _isupper:
  5617                           	callstack 25
  5618  003DEC  0EBF               	movlw	191
  5619  003DEE  6E03               	movwf	??_isupper^0,c
  5620  003DF0  0EFF               	movlw	255
  5621  003DF2  6E04               	movwf	(??_isupper+1)^0,c
  5622  003DF4  C001  F005         	movff	isupper@c,??_isupper+2
  5623  003DF8  C002  F006         	movff	isupper@c+1,??_isupper+3
  5624  003DFC  5003               	movf	??_isupper^0,w,c
  5625  003DFE  2605               	addwf	(??_isupper+2)^0,f,c
  5626  003E00  5004               	movf	(??_isupper+1)^0,w,c
  5627  003E02  2206               	addwfc	(??_isupper+3)^0,f,c
  5628  003E04  5006               	movf	(??_isupper+3)^0,w,c
  5629  003E06  E10A               	bnz	u3240
  5630  003E08  0E1A               	movlw	26
  5631  003E0A  5C05               	subwf	(??_isupper+2)^0,w,c
  5632  003E0C  A0D8               	btfss	status,0,c
  5633  003E0E  EF0B  F01F         	goto	u3241
  5634  003E12  EF0E  F01F         	goto	u3240
  5635  003E16                     u3241:
  5636  003E16  0E01               	movlw	1
  5637  003E18  EF0F  F01F         	goto	u3250
  5638  003E1C                     u3240:
  5639  003E1C  0E00               	movlw	0
  5640  003E1E                     u3250:
  5641  003E1E  6E01               	movwf	?_isupper^0,c
  5642  003E20  6A02               	clrf	(?_isupper+1)^0,c
  5643  003E22  0012               	return		;funcret
  5644  003E24                     __end_of_isupper:
  5645                           	callstack 0
  5646                           
  5647 ;; *************** function _strcpy *****************
  5648 ;; Defined at:
  5649 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  5650 ;; Parameters:    Size  Location     Type
  5651 ;;  dest            2    0[COMRAM] PTR unsigned char 
  5652 ;;		 -> dbuf(80), 
  5653 ;;  src             2    2[COMRAM] PTR const unsigned char 
  5654 ;;		 -> STR_36(4), STR_35(4), STR_32(4), STR_31(4), 
  5655 ;;		 -> dbuf(80), 
  5656 ;; Auto vars:     Size  Location     Type
  5657 ;;  d               2    8[COMRAM] PTR unsigned char 
  5658 ;;		 -> dbuf(80), 
  5659 ;;  s               2    6[COMRAM] PTR const unsigned char 
  5660 ;;		 -> STR_36(4), STR_35(4), STR_32(4), STR_31(4), 
  5661 ;;		 -> dbuf(80), 
  5662 ;; Return value:  Size  Location     Type
  5663 ;;                  2    0[COMRAM] PTR unsigned char 
  5664 ;; Registers used:
  5665 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5666 ;; Tracked objects:
  5667 ;;		On entry : 0/0
  5668 ;;		On exit  : 0/0
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5671 ;;      Params:         4       0       0       0       0       0       0
  5672 ;;      Locals:         4       0       0       0       0       0       0
  5673 ;;      Temps:          2       0       0       0       0       0       0
  5674 ;;      Totals:        10       0       0       0       0       0       0
  5675 ;;Total ram usage:       10 bytes
  5676 ;; Hardware stack levels used:    1
  5677 ;; This function calls:
  5678 ;;		Nothing
  5679 ;; This function is called by:
  5680 ;;		_efgtoa
  5681 ;; This function uses a non-reentrant model
  5682 ;;
  5683                           
  5684                           	psect	text13
  5685  003C62                     __ptext13:
  5686                           	callstack 0
  5687  003C62                     _strcpy:
  5688                           	callstack 25
  5689  003C62  C003  F007         	movff	strcpy@src,strcpy@s
  5690  003C66  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  5691  003C6A  C001  F009         	movff	strcpy@dest,strcpy@d
  5692  003C6E  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  5693  003C72                     l3682:
  5694  003C72  5007               	movf	strcpy@s^0,w,c
  5695  003C74  6E05               	movwf	??_strcpy^0,c
  5696  003C76  5008               	movf	(strcpy@s+1)^0,w,c
  5697  003C78  6E06               	movwf	(??_strcpy+1)^0,c
  5698  003C7A  4A07               	infsnz	strcpy@s^0,f,c
  5699  003C7C  2A08               	incf	(strcpy@s+1)^0,f,c
  5700  003C7E  C005  FFF6         	movff	??_strcpy,tblptrl
  5701  003C82  C006  FFF7         	movff	??_strcpy+1,tblptrh
  5702  003C86  6AF8               	clrf	tblptru,c
  5703  003C88  C009  FFD9         	movff	strcpy@d,fsr2l
  5704  003C8C  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  5705  003C90  4A09               	infsnz	strcpy@d^0,f,c
  5706  003C92  2A0A               	incf	(strcpy@d+1)^0,f,c
  5707  003C94  0E05               	movlw	(high __ramtop+-1)
  5708  003C96  64F7               	cpfsgt	tblptrh,c
  5709  003C98  D003               	bra	u4077
  5710  003C9A  0008               	tblrd		*
  5711  003C9C  50F5               	movf	tablat,w,c
  5712  003C9E  D005               	bra	u4070
  5713  003CA0                     u4077:
  5714  003CA0  CFF6 FFE9          	movff	tblptrl,fsr0l
  5715  003CA4  CFF7 FFEA          	movff	tblptrh,fsr0h
  5716  003CA8  50EF               	movf	indf0,w,c
  5717  003CAA                     u4070:
  5718  003CAA  6EDF               	movwf	indf2,c
  5719  003CAC  50DF               	movf	indf2,w,c
  5720  003CAE  A4D8               	btfss	status,2,c
  5721  003CB0  EF5C  F01E         	goto	u4081
  5722  003CB4  EF5E  F01E         	goto	u4080
  5723  003CB8                     u4081:
  5724  003CB8  EF39  F01E         	goto	l3682
  5725  003CBC                     u4080:
  5726  003CBC  0012               	return		;funcret
  5727  003CBE                     __end_of_strcpy:
  5728                           	callstack 0
  5729                           
  5730 ;; *************** function _pad *****************
  5731 ;; Defined at:
  5732 ;;		line 72 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5733 ;; Parameters:    Size  Location     Type
  5734 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5735 ;;		 -> sprintf@f(6), 
  5736 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5737 ;;		 -> dbuf(80), 
  5738 ;;  p               2   20[COMRAM] int 
  5739 ;; Auto vars:     Size  Location     Type
  5740 ;;  w               2   25[COMRAM] int 
  5741 ;;  i               2   23[COMRAM] int 
  5742 ;; Return value:  Size  Location     Type
  5743 ;;                  2   16[COMRAM] int 
  5744 ;; Registers used:
  5745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5746 ;; Tracked objects:
  5747 ;;		On entry : 0/0
  5748 ;;		On exit  : 0/0
  5749 ;;		Unchanged: 0/0
  5750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5751 ;;      Params:         6       0       0       0       0       0       0
  5752 ;;      Locals:         4       0       0       0       0       0       0
  5753 ;;      Temps:          1       0       0       0       0       0       0
  5754 ;;      Totals:        11       0       0       0       0       0       0
  5755 ;;Total ram usage:       11 bytes
  5756 ;; Hardware stack levels used:    1
  5757 ;; Hardware stack levels required when called:    3
  5758 ;; This function calls:
  5759 ;;		_fputc
  5760 ;;		_fputs
  5761 ;;		_strlen
  5762 ;; This function is called by:
  5763 ;;		_efgtoa
  5764 ;; This function uses a non-reentrant model
  5765 ;;
  5766                           
  5767                           	psect	text14
  5768  00366A                     __ptext14:
  5769                           	callstack 0
  5770  00366A                     _pad:
  5771                           	callstack 22
  5772  00366A                     
  5773                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pad(FIL
      +                          E *fp, char *buf, int p);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c
      +                          : 73: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 74:     int i, 
      +                          w;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 77:     if (flags & 
      +                          (1 << 0)) {
  5774  00366A  0100               	movlb	0	; () banked
  5775  00366C  A1DF               	btfss	_flags& (0+255),0,b
  5776  00366E  EF3B  F01B         	goto	u3961
  5777  003672  EF3D  F01B         	goto	u3960
  5778  003676                     u3961:
  5779  003676  EF47  F01B         	goto	l3640
  5780  00367A                     u3960:
  5781  00367A                     
  5782                           ; BSR set to: 0
  5783                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs((con
      +                          st char *)buf, fp);
  5784  00367A  C013  F00A         	movff	pad@buf,fputs@s
  5785  00367E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5786  003682  C011  F00C         	movff	pad@fp,fputs@fp
  5787  003686  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5788  00368A  ECD4  F01E         	call	_fputs	;wreg free
  5789  00368E                     l3640:
  5790                           
  5791                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ? 
      +                          0 : p;
  5792  00368E  BE16               	btfsc	(pad@p+1)^0,7,c
  5793  003690  EF4C  F01B         	goto	u3971
  5794  003694  EF4E  F01B         	goto	u3970
  5795  003698                     u3971:
  5796  003698  EF54  F01B         	goto	l3644
  5797  00369C                     u3970:
  5798  00369C  C015  F01A         	movff	pad@p,pad@w
  5799  0036A0  C016  F01B         	movff	pad@p+1,pad@w+1
  5800  0036A4  EF58  F01B         	goto	l915
  5801  0036A8                     l3644:
  5802  0036A8  0E00               	movlw	0
  5803  0036AA  6E1B               	movwf	(pad@w+1)^0,c
  5804  0036AC  0E00               	movlw	0
  5805  0036AE  6E1A               	movwf	pad@w^0,c
  5806  0036B0                     l915:
  5807                           
  5808                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5809  0036B0  0E00               	movlw	0
  5810  0036B2  6E19               	movwf	(pad@i+1)^0,c
  5811  0036B4  0E00               	movlw	0
  5812  0036B6  6E18               	movwf	pad@i^0,c
  5813                           
  5814                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  5815  0036B8  EF6A  F01B         	goto	l3650
  5816  0036BC                     l3646:
  5817                           
  5818                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc(' ',
      +                           fp);
  5819  0036BC  0E00               	movlw	0
  5820  0036BE  6E02               	movwf	(fputc@c+1)^0,c
  5821  0036C0  0E20               	movlw	32
  5822  0036C2  6E01               	movwf	fputc@c^0,c
  5823  0036C4  C011  F003         	movff	pad@fp,fputc@fp
  5824  0036C8  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5825  0036CC  ECD0  F01A         	call	_fputc	;wreg free
  5826  0036D0                     
  5827                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5828  0036D0  4A18               	infsnz	pad@i^0,f,c
  5829  0036D2  2A19               	incf	(pad@i+1)^0,f,c
  5830  0036D4                     l3650:
  5831                           
  5832                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  5833  0036D4  501A               	movf	pad@w^0,w,c
  5834  0036D6  5C18               	subwf	pad@i^0,w,c
  5835  0036D8  5019               	movf	(pad@i+1)^0,w,c
  5836  0036DA  0A80               	xorlw	128
  5837  0036DC  6E17               	movwf	??_pad^0,c
  5838  0036DE  501B               	movf	(pad@w+1)^0,w,c
  5839  0036E0  0A80               	xorlw	128
  5840  0036E2  5817               	subwfb	??_pad^0,w,c
  5841  0036E4  A0D8               	btfss	status,0,c
  5842  0036E6  EF77  F01B         	goto	u3981
  5843  0036EA  EF79  F01B         	goto	u3980
  5844  0036EE                     u3981:
  5845  0036EE  EF5E  F01B         	goto	l3646
  5846  0036F2                     u3980:
  5847  0036F2                     
  5848                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(flags & 
      +                          (1 << 0))) {
  5849  0036F2  0100               	movlb	0	; () banked
  5850  0036F4  B1DF               	btfsc	_flags& (0+255),0,b
  5851  0036F6  EF7F  F01B         	goto	u3991
  5852  0036FA  EF81  F01B         	goto	u3990
  5853  0036FE                     u3991:
  5854  0036FE  EF8B  F01B         	goto	l3654
  5855  003702                     u3990:
  5856  003702                     
  5857                           ; BSR set to: 0
  5858                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs((con
      +                          st char *)buf, fp);
  5859  003702  C013  F00A         	movff	pad@buf,fputs@s
  5860  003706  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5861  00370A  C011  F00C         	movff	pad@fp,fputs@fp
  5862  00370E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5863  003712  ECD4  F01E         	call	_fputs	;wreg free
  5864  003716                     l3654:
  5865                           
  5866                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return strlen(
      +                          buf) + w;
  5867  003716  C013  F001         	movff	pad@buf,strlen@s
  5868  00371A  C014  F002         	movff	pad@buf+1,strlen@s+1
  5869  00371E  EC4A  F01F         	call	_strlen	;wreg free
  5870  003722  501A               	movf	pad@w^0,w,c
  5871  003724  2401               	addwf	?_strlen^0,w,c
  5872  003726  6E11               	movwf	?_pad^0,c
  5873  003728  501B               	movf	(pad@w+1)^0,w,c
  5874  00372A  2002               	addwfc	(?_strlen+1)^0,w,c
  5875  00372C  6E12               	movwf	(?_pad+1)^0,c
  5876  00372E  0012               	return		;funcret
  5877  003730                     __end_of_pad:
  5878                           	callstack 0
  5879                           
  5880 ;; *************** function _strlen *****************
  5881 ;; Defined at:
  5882 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strlen.c"
  5883 ;; Parameters:    Size  Location     Type
  5884 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5885 ;;		 -> dbuf(80), 
  5886 ;; Auto vars:     Size  Location     Type
  5887 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5888 ;;		 -> dbuf(80), 
  5889 ;; Return value:  Size  Location     Type
  5890 ;;                  2    0[COMRAM] unsigned int 
  5891 ;; Registers used:
  5892 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5893 ;; Tracked objects:
  5894 ;;		On entry : 0/0
  5895 ;;		On exit  : 0/0
  5896 ;;		Unchanged: 0/0
  5897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5898 ;;      Params:         2       0       0       0       0       0       0
  5899 ;;      Locals:         2       0       0       0       0       0       0
  5900 ;;      Temps:          0       0       0       0       0       0       0
  5901 ;;      Totals:         4       0       0       0       0       0       0
  5902 ;;Total ram usage:        4 bytes
  5903 ;; Hardware stack levels used:    1
  5904 ;; This function calls:
  5905 ;;		Nothing
  5906 ;; This function is called by:
  5907 ;;		_pad
  5908 ;; This function uses a non-reentrant model
  5909 ;;
  5910                           
  5911                           	psect	text15
  5912  003E94                     __ptext15:
  5913                           	callstack 0
  5914  003E94                     _strlen:
  5915                           	callstack 24
  5916  003E94  C001  F003         	movff	strlen@s,strlen@a
  5917  003E98  C002  F004         	movff	strlen@s+1,strlen@a+1
  5918  003E9C  EF52  F01F         	goto	l3176
  5919  003EA0                     l3174:
  5920  003EA0  4A01               	infsnz	strlen@s^0,f,c
  5921  003EA2  2A02               	incf	(strlen@s+1)^0,f,c
  5922  003EA4                     l3176:
  5923  003EA4  C001  FFD9         	movff	strlen@s,fsr2l
  5924  003EA8  C002  FFDA         	movff	strlen@s+1,fsr2h
  5925  003EAC  50DF               	movf	indf2,w,c
  5926  003EAE  A4D8               	btfss	status,2,c
  5927  003EB0  EF5C  F01F         	goto	u3231
  5928  003EB4  EF5E  F01F         	goto	u3230
  5929  003EB8                     u3231:
  5930  003EB8  EF50  F01F         	goto	l3174
  5931  003EBC                     u3230:
  5932  003EBC  5003               	movf	strlen@a^0,w,c
  5933  003EBE  5C01               	subwf	strlen@s^0,w,c
  5934  003EC0  6E01               	movwf	?_strlen^0,c
  5935  003EC2  5004               	movf	(strlen@a+1)^0,w,c
  5936  003EC4  5802               	subwfb	(strlen@s+1)^0,w,c
  5937  003EC6  6E02               	movwf	(?_strlen+1)^0,c
  5938  003EC8  0012               	return		;funcret
  5939  003ECA                     __end_of_strlen:
  5940                           	callstack 0
  5941                           
  5942 ;; *************** function _fputs *****************
  5943 ;; Defined at:
  5944 ;;		line 8 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  5945 ;; Parameters:    Size  Location     Type
  5946 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5947 ;;		 -> dbuf(80), 
  5948 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5949 ;;		 -> sprintf@f(6), 
  5950 ;; Auto vars:     Size  Location     Type
  5951 ;;  i               2   14[COMRAM] int 
  5952 ;;  c               1   13[COMRAM] unsigned char 
  5953 ;; Return value:  Size  Location     Type
  5954 ;;                  2    9[COMRAM] int 
  5955 ;; Registers used:
  5956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5957 ;; Tracked objects:
  5958 ;;		On entry : 0/0
  5959 ;;		On exit  : 0/0
  5960 ;;		Unchanged: 0/0
  5961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5962 ;;      Params:         4       0       0       0       0       0       0
  5963 ;;      Locals:         3       0       0       0       0       0       0
  5964 ;;      Temps:          0       0       0       0       0       0       0
  5965 ;;      Totals:         7       0       0       0       0       0       0
  5966 ;;Total ram usage:        7 bytes
  5967 ;; Hardware stack levels used:    1
  5968 ;; Hardware stack levels required when called:    2
  5969 ;; This function calls:
  5970 ;;		_fputc
  5971 ;; This function is called by:
  5972 ;;		_pad
  5973 ;; This function uses a non-reentrant model
  5974 ;;
  5975                           
  5976                           	psect	text16
  5977  003DA8                     __ptext16:
  5978                           	callstack 0
  5979  003DA8                     _fputs:
  5980                           	callstack 22
  5981  003DA8  0E00               	movlw	0
  5982  003DAA  6E10               	movwf	(fputs@i+1)^0,c
  5983  003DAC  0E00               	movlw	0
  5984  003DAE  6E0F               	movwf	fputs@i^0,c
  5985  003DB0  EFE5  F01E         	goto	l3170
  5986  003DB4                     l3166:
  5987  003DB4  C00E  F001         	movff	fputs@c,fputc@c
  5988  003DB8  6A02               	clrf	(fputc@c+1)^0,c
  5989  003DBA  C00C  F003         	movff	fputs@fp,fputc@fp
  5990  003DBE  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5991  003DC2  ECD0  F01A         	call	_fputc	;wreg free
  5992  003DC6  4A0F               	infsnz	fputs@i^0,f,c
  5993  003DC8  2A10               	incf	(fputs@i+1)^0,f,c
  5994  003DCA                     l3170:
  5995  003DCA  500F               	movf	fputs@i^0,w,c
  5996  003DCC  240A               	addwf	fputs@s^0,w,c
  5997  003DCE  6ED9               	movwf	fsr2l,c
  5998  003DD0  5010               	movf	(fputs@i+1)^0,w,c
  5999  003DD2  200B               	addwfc	(fputs@s+1)^0,w,c
  6000  003DD4  6EDA               	movwf	fsr2h,c
  6001  003DD6  50DF               	movf	indf2,w,c
  6002  003DD8  6E0E               	movwf	fputs@c^0,c
  6003  003DDA  500E               	movf	fputs@c^0,w,c
  6004  003DDC  A4D8               	btfss	status,2,c
  6005  003DDE  EFF3  F01E         	goto	u3221
  6006  003DE2  EFF5  F01E         	goto	u3220
  6007  003DE6                     u3221:
  6008  003DE6  EFDA  F01E         	goto	l3166
  6009  003DEA                     u3220:
  6010  003DEA  0012               	return		;funcret
  6011  003DEC                     __end_of_fputs:
  6012                           	callstack 0
  6013                           
  6014 ;; *************** function _fputc *****************
  6015 ;; Defined at:
  6016 ;;		line 8 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  6017 ;; Parameters:    Size  Location     Type
  6018 ;;  c               2    0[COMRAM] int 
  6019 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6020 ;;		 -> sprintf@f(6), 
  6021 ;; Auto vars:     Size  Location     Type
  6022 ;;		None
  6023 ;; Return value:  Size  Location     Type
  6024 ;;                  2    0[COMRAM] int 
  6025 ;; Registers used:
  6026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6027 ;; Tracked objects:
  6028 ;;		On entry : 0/0
  6029 ;;		On exit  : 0/0
  6030 ;;		Unchanged: 0/0
  6031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6032 ;;      Params:         4       0       0       0       0       0       0
  6033 ;;      Locals:         0       0       0       0       0       0       0
  6034 ;;      Temps:          5       0       0       0       0       0       0
  6035 ;;      Totals:         9       0       0       0       0       0       0
  6036 ;;Total ram usage:        9 bytes
  6037 ;; Hardware stack levels used:    1
  6038 ;; Hardware stack levels required when called:    1
  6039 ;; This function calls:
  6040 ;;		_putch
  6041 ;; This function is called by:
  6042 ;;		_pad
  6043 ;;		_vfpfcnvrt
  6044 ;;		_fputs
  6045 ;; This function uses a non-reentrant model
  6046 ;;
  6047                           
  6048                           	psect	text17
  6049  0035A0                     __ptext17:
  6050                           	callstack 0
  6051  0035A0                     _fputc:
  6052                           	callstack 25
  6053  0035A0  5003               	movf	fputc@fp^0,w,c
  6054  0035A2  1004               	iorwf	(fputc@fp+1)^0,w,c
  6055  0035A4  B4D8               	btfsc	status,2,c
  6056  0035A6  EFD7  F01A         	goto	u2791
  6057  0035AA  EFD9  F01A         	goto	u2790
  6058  0035AE                     u2791:
  6059  0035AE  EFE2  F01A         	goto	l2952
  6060  0035B2                     u2790:
  6061  0035B2  5003               	movf	fputc@fp^0,w,c
  6062  0035B4  1004               	iorwf	(fputc@fp+1)^0,w,c
  6063  0035B6  A4D8               	btfss	status,2,c
  6064  0035B8  EFE0  F01A         	goto	u2801
  6065  0035BC  EFE2  F01A         	goto	u2800
  6066  0035C0                     u2801:
  6067  0035C0  EFE7  F01A         	goto	l2954
  6068  0035C4                     u2800:
  6069  0035C4                     l2952:
  6070  0035C4  5001               	movf	fputc@c^0,w,c
  6071  0035C6  ECBF  F01F         	call	_putch
  6072  0035CA  EF34  F01B         	goto	l1129
  6073  0035CE                     l2954:
  6074  0035CE  EE20 F004          	lfsr	2,4
  6075  0035D2  5003               	movf	fputc@fp^0,w,c
  6076  0035D4  26D9               	addwf	fsr2l,f,c
  6077  0035D6  5004               	movf	(fputc@fp+1)^0,w,c
  6078  0035D8  22DA               	addwfc	fsr2h,f,c
  6079  0035DA  50DE               	movf	postinc2,w,c
  6080  0035DC  10DE               	iorwf	postinc2,w,c
  6081  0035DE  B4D8               	btfsc	status,2,c
  6082  0035E0  EFF4  F01A         	goto	u2811
  6083  0035E4  EFF6  F01A         	goto	u2810
  6084  0035E8                     u2811:
  6085  0035E8  EF11  F01B         	goto	l2958
  6086  0035EC                     u2810:
  6087  0035EC  EE20 F004          	lfsr	2,4
  6088  0035F0  5003               	movf	fputc@fp^0,w,c
  6089  0035F2  26D9               	addwf	fsr2l,f,c
  6090  0035F4  5004               	movf	(fputc@fp+1)^0,w,c
  6091  0035F6  22DA               	addwfc	fsr2h,f,c
  6092  0035F8  EE10 F002          	lfsr	1,2
  6093  0035FC  5003               	movf	fputc@fp^0,w,c
  6094  0035FE  26E1               	addwf	fsr1l,f,c
  6095  003600  5004               	movf	(fputc@fp+1)^0,w,c
  6096  003602  22E2               	addwfc	fsr1h,f,c
  6097  003604  50DE               	movf	postinc2,w,c
  6098  003606  5CE6               	subwf	postinc1,w,c
  6099  003608  50E6               	movf	postinc1,w,c
  6100  00360A  0A80               	xorlw	128
  6101  00360C  6E09               	movwf	(??_fputc+4)^0,c
  6102  00360E  50DE               	movf	postinc2,w,c
  6103  003610  0A80               	xorlw	128
  6104  003612  5809               	subwfb	(??_fputc+4)^0,w,c
  6105  003614  B0D8               	btfsc	status,0,c
  6106  003616  EF0F  F01B         	goto	u2821
  6107  00361A  EF11  F01B         	goto	u2820
  6108  00361E                     u2821:
  6109  00361E  EF34  F01B         	goto	l1129
  6110  003622                     u2820:
  6111  003622                     l2958:
  6112  003622  EE20 F002          	lfsr	2,2
  6113  003626  5003               	movf	fputc@fp^0,w,c
  6114  003628  26D9               	addwf	fsr2l,f,c
  6115  00362A  5004               	movf	(fputc@fp+1)^0,w,c
  6116  00362C  22DA               	addwfc	fsr2h,f,c
  6117  00362E  CFDE F005          	movff	postinc2,??_fputc
  6118  003632  CFDD F006          	movff	postdec2,??_fputc+1
  6119  003636  C003  FFD9         	movff	fputc@fp,fsr2l
  6120  00363A  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6121  00363E  CFDE F007          	movff	postinc2,??_fputc+2
  6122  003642  CFDD F008          	movff	postdec2,??_fputc+3
  6123  003646  5005               	movf	??_fputc^0,w,c
  6124  003648  2407               	addwf	(??_fputc+2)^0,w,c
  6125  00364A  6ED9               	movwf	fsr2l,c
  6126  00364C  5006               	movf	(??_fputc+1)^0,w,c
  6127  00364E  2008               	addwfc	(??_fputc+3)^0,w,c
  6128  003650  6EDA               	movwf	fsr2h,c
  6129  003652  C001  FFDF         	movff	fputc@c,indf2
  6130  003656  EE20 F002          	lfsr	2,2
  6131  00365A  5003               	movf	fputc@fp^0,w,c
  6132  00365C  26D9               	addwf	fsr2l,f,c
  6133  00365E  5004               	movf	(fputc@fp+1)^0,w,c
  6134  003660  22DA               	addwfc	fsr2h,f,c
  6135  003662  2ADE               	incf	postinc2,f,c
  6136  003664  0E00               	movlw	0
  6137  003666  22DD               	addwfc	postdec2,f,c
  6138  003668                     l1129:
  6139  003668  0012               	return		;funcret
  6140  00366A                     __end_of_fputc:
  6141                           	callstack 0
  6142                           
  6143 ;; *************** function _putch *****************
  6144 ;; Defined at:
  6145 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\putch.c"
  6146 ;; Parameters:    Size  Location     Type
  6147 ;;  c               1    wreg     unsigned char 
  6148 ;; Auto vars:     Size  Location     Type
  6149 ;;  c               1    0[COMRAM] unsigned char 
  6150 ;; Return value:  Size  Location     Type
  6151 ;;                  1    wreg      void 
  6152 ;; Registers used:
  6153 ;;		wreg
  6154 ;; Tracked objects:
  6155 ;;		On entry : 0/0
  6156 ;;		On exit  : 0/0
  6157 ;;		Unchanged: 0/0
  6158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6159 ;;      Params:         0       0       0       0       0       0       0
  6160 ;;      Locals:         0       0       0       0       0       0       0
  6161 ;;      Temps:          0       0       0       0       0       0       0
  6162 ;;      Totals:         0       0       0       0       0       0       0
  6163 ;;Total ram usage:        0 bytes
  6164 ;; Hardware stack levels used:    1
  6165 ;; This function calls:
  6166 ;;		Nothing
  6167 ;; This function is called by:
  6168 ;;		_fputc
  6169 ;; This function uses a non-reentrant model
  6170 ;;
  6171                           
  6172                           	psect	text18
  6173  003F7E                     __ptext18:
  6174                           	callstack 0
  6175  003F7E                     _putch:
  6176                           	callstack 25
  6177  003F7E  0012               	return		;funcret
  6178  003F80                     __end_of_putch:
  6179                           	callstack 0
  6180                           
  6181 ;; *************** function _floorf *****************
  6182 ;; Defined at:
  6183 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\floorf.c"
  6184 ;; Parameters:    Size  Location     Type
  6185 ;;  x               4   25[COMRAM] float 
  6186 ;; Auto vars:     Size  Location     Type
  6187 ;;  u               4   41[COMRAM] struct .
  6188 ;;  m               4   35[COMRAM] unsigned long 
  6189 ;;  e               2   39[COMRAM] int 
  6190 ;; Return value:  Size  Location     Type
  6191 ;;                  4   25[COMRAM] float 
  6192 ;; Registers used:
  6193 ;;		wreg, status,2, status,0
  6194 ;; Tracked objects:
  6195 ;;		On entry : 0/0
  6196 ;;		On exit  : 0/0
  6197 ;;		Unchanged: 0/0
  6198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6199 ;;      Params:         4       0       0       0       0       0       0
  6200 ;;      Locals:        10       0       0       0       0       0       0
  6201 ;;      Temps:          6       0       0       0       0       0       0
  6202 ;;      Totals:        20       0       0       0       0       0       0
  6203 ;;Total ram usage:       20 bytes
  6204 ;; Hardware stack levels used:    1
  6205 ;; This function calls:
  6206 ;;		Nothing
  6207 ;; This function is called by:
  6208 ;;		_efgtoa
  6209 ;; This function uses a non-reentrant model
  6210 ;;
  6211                           
  6212                           	psect	text19
  6213  0028EC                     __ptext19:
  6214                           	callstack 0
  6215  0028EC                     _floorf:
  6216                           	callstack 25
  6217  0028EC  C0D1  F02A         	movff	floorf@F524,floorf@u
  6218  0028F0  C0D2  F02B         	movff	floorf@F524+1,floorf@u+1
  6219  0028F4  C0D3  F02C         	movff	floorf@F524+2,floorf@u+2
  6220  0028F8  C0D4  F02D         	movff	floorf@F524+3,floorf@u+3
  6221  0028FC  C01A  F02A         	movff	floorf@x,floorf@u
  6222  002900  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  6223  002904  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  6224  002908  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  6225  00290C  0E81               	movlw	129
  6226  00290E  6E1E               	movwf	??_floorf^0,c
  6227  002910  0EFF               	movlw	255
  6228  002912  6E1F               	movwf	(??_floorf+1)^0,c
  6229  002914  C02A  F020         	movff	floorf@u,??_floorf+2
  6230  002918  C02B  F021         	movff	floorf@u+1,??_floorf+3
  6231  00291C  C02C  F022         	movff	floorf@u+2,??_floorf+4
  6232  002920  C02D  F023         	movff	floorf@u+3,??_floorf+5
  6233  002924  0E18               	movlw	24
  6234  002926  EF9A  F014         	goto	u4120
  6235  00292A                     u4125:
  6236  00292A  90D8               	bcf	status,0,c
  6237  00292C  3223               	rrcf	(??_floorf+5)^0,f,c
  6238  00292E  3222               	rrcf	(??_floorf+4)^0,f,c
  6239  002930  3221               	rrcf	(??_floorf+3)^0,f,c
  6240  002932  3220               	rrcf	(??_floorf+2)^0,f,c
  6241  002934                     u4120:
  6242  002934  2EE8               	decfsz	wreg,f,c
  6243  002936  EF95  F014         	goto	u4125
  6244  00293A  5020               	movf	(??_floorf+2)^0,w,c
  6245  00293C  241E               	addwf	??_floorf^0,w,c
  6246  00293E  6E28               	movwf	floorf@e^0,c
  6247  002940  0E00               	movlw	0
  6248  002942  201F               	addwfc	(??_floorf+1)^0,w,c
  6249  002944  6E29               	movwf	(floorf@e+1)^0,c
  6250  002946  BE29               	btfsc	(floorf@e+1)^0,7,c
  6251  002948  EFAF  F014         	goto	u4131
  6252  00294C  5029               	movf	(floorf@e+1)^0,w,c
  6253  00294E  E109               	bnz	u4130
  6254  002950  0E17               	movlw	23
  6255  002952  5C28               	subwf	floorf@e^0,w,c
  6256  002954  A0D8               	btfss	status,0,c
  6257  002956  EFAF  F014         	goto	u4131
  6258  00295A  EFB1  F014         	goto	u4130
  6259  00295E                     u4131:
  6260  00295E  EFBB  F014         	goto	l3700
  6261  002962                     u4130:
  6262  002962                     l3698:
  6263  002962  C01A  F01A         	movff	floorf@x,?_floorf
  6264  002966  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  6265  00296A  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  6266  00296E  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  6267  002972  EF7E  F015         	goto	l1090
  6268  002976                     l3700:
  6269  002976  BE29               	btfsc	(floorf@e+1)^0,7,c
  6270  002978  EFC0  F014         	goto	u4141
  6271  00297C  EFC2  F014         	goto	u4140
  6272  002980                     u4141:
  6273  002980  EF32  F015         	goto	l3710
  6274  002984                     u4140:
  6275  002984  C028  F01E         	movff	floorf@e,??_floorf
  6276  002988  0EFF               	movlw	255
  6277  00298A  6E1F               	movwf	(??_floorf+1)^0,c
  6278  00298C  0EFF               	movlw	255
  6279  00298E  6E20               	movwf	(??_floorf+2)^0,c
  6280  002990  0E7F               	movlw	127
  6281  002992  6E21               	movwf	(??_floorf+3)^0,c
  6282  002994  0E00               	movlw	0
  6283  002996  6E22               	movwf	(??_floorf+4)^0,c
  6284  002998                     u4155:
  6285  002998  661E               	tstfsz	??_floorf^0,c
  6286  00299A  EFD1  F014         	goto	u4156
  6287  00299E  EFD9  F014         	goto	u4157
  6288  0029A2                     u4156:
  6289  0029A2  3422               	rlcf	(??_floorf+4)^0,w,c
  6290  0029A4  3222               	rrcf	(??_floorf+4)^0,f,c
  6291  0029A6  3221               	rrcf	(??_floorf+3)^0,f,c
  6292  0029A8  3220               	rrcf	(??_floorf+2)^0,f,c
  6293  0029AA  321F               	rrcf	(??_floorf+1)^0,f,c
  6294  0029AC  2E1E               	decfsz	??_floorf^0,f,c
  6295  0029AE  EFCC  F014         	goto	u4155
  6296  0029B2                     u4157:
  6297  0029B2  C01F  F024         	movff	??_floorf+1,floorf@m
  6298  0029B6  C020  F025         	movff	??_floorf+2,floorf@m+1
  6299  0029BA  C021  F026         	movff	??_floorf+3,floorf@m+2
  6300  0029BE  C022  F027         	movff	??_floorf+4,floorf@m+3
  6301  0029C2  5024               	movf	floorf@m^0,w,c
  6302  0029C4  142A               	andwf	floorf@u^0,w,c
  6303  0029C6  6E1E               	movwf	??_floorf^0,c
  6304  0029C8  5025               	movf	(floorf@m+1)^0,w,c
  6305  0029CA  142B               	andwf	(floorf@u+1)^0,w,c
  6306  0029CC  6E1F               	movwf	(??_floorf+1)^0,c
  6307  0029CE  5026               	movf	(floorf@m+2)^0,w,c
  6308  0029D0  142C               	andwf	(floorf@u+2)^0,w,c
  6309  0029D2  6E20               	movwf	(??_floorf+2)^0,c
  6310  0029D4  5027               	movf	(floorf@m+3)^0,w,c
  6311  0029D6  142D               	andwf	(floorf@u+3)^0,w,c
  6312  0029D8  6E21               	movwf	(??_floorf+3)^0,c
  6313  0029DA  501E               	movf	??_floorf^0,w,c
  6314  0029DC  101F               	iorwf	(??_floorf+1)^0,w,c
  6315  0029DE  1020               	iorwf	(??_floorf+2)^0,w,c
  6316  0029E0  1021               	iorwf	(??_floorf+3)^0,w,c
  6317  0029E2  A4D8               	btfss	status,2,c
  6318  0029E4  EFF6  F014         	goto	u4161
  6319  0029E8  EFF8  F014         	goto	u4160
  6320  0029EC                     u4161:
  6321  0029EC  EFFA  F014         	goto	l3706
  6322  0029F0                     u4160:
  6323  0029F0  EFB1  F014         	goto	l3698
  6324  0029F4                     l3706:
  6325  0029F4  C02A  F01E         	movff	floorf@u,??_floorf
  6326  0029F8  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  6327  0029FC  C02C  F020         	movff	floorf@u+2,??_floorf+2
  6328  002A00  C02D  F021         	movff	floorf@u+3,??_floorf+3
  6329  002A04  0E20               	movlw	32
  6330  002A06  EF0A  F015         	goto	u4170
  6331  002A0A                     u4175:
  6332  002A0A  90D8               	bcf	status,0,c
  6333  002A0C  3221               	rrcf	(??_floorf+3)^0,f,c
  6334  002A0E  3220               	rrcf	(??_floorf+2)^0,f,c
  6335  002A10  321F               	rrcf	(??_floorf+1)^0,f,c
  6336  002A12  321E               	rrcf	??_floorf^0,f,c
  6337  002A14                     u4170:
  6338  002A14  2EE8               	decfsz	wreg,f,c
  6339  002A16  EF05  F015         	goto	u4175
  6340  002A1A  501E               	movf	??_floorf^0,w,c
  6341  002A1C  101F               	iorwf	(??_floorf+1)^0,w,c
  6342  002A1E  1020               	iorwf	(??_floorf+2)^0,w,c
  6343  002A20  1021               	iorwf	(??_floorf+3)^0,w,c
  6344  002A22  B4D8               	btfsc	status,2,c
  6345  002A24  EF16  F015         	goto	u4181
  6346  002A28  EF18  F015         	goto	u4180
  6347  002A2C                     u4181:
  6348  002A2C  EF20  F015         	goto	l1093
  6349  002A30                     u4180:
  6350  002A30  5024               	movf	floorf@m^0,w,c
  6351  002A32  262A               	addwf	floorf@u^0,f,c
  6352  002A34  5025               	movf	(floorf@m+1)^0,w,c
  6353  002A36  222B               	addwfc	(floorf@u+1)^0,f,c
  6354  002A38  5026               	movf	(floorf@m+2)^0,w,c
  6355  002A3A  222C               	addwfc	(floorf@u+2)^0,f,c
  6356  002A3C  5027               	movf	(floorf@m+3)^0,w,c
  6357  002A3E  222D               	addwfc	(floorf@u+3)^0,f,c
  6358  002A40                     l1093:
  6359  002A40  1C24               	comf	floorf@m^0,w,c
  6360  002A42  6E1E               	movwf	??_floorf^0,c
  6361  002A44  1C25               	comf	(floorf@m+1)^0,w,c
  6362  002A46  6E1F               	movwf	(??_floorf+1)^0,c
  6363  002A48  1C26               	comf	(floorf@m+2)^0,w,c
  6364  002A4A  6E20               	movwf	(??_floorf+2)^0,c
  6365  002A4C  1C27               	comf	(floorf@m+3)^0,w,c
  6366  002A4E  6E21               	movwf	(??_floorf+3)^0,c
  6367  002A50  501E               	movf	??_floorf^0,w,c
  6368  002A52  162A               	andwf	floorf@u^0,f,c
  6369  002A54  501F               	movf	(??_floorf+1)^0,w,c
  6370  002A56  162B               	andwf	(floorf@u+1)^0,f,c
  6371  002A58  5020               	movf	(??_floorf+2)^0,w,c
  6372  002A5A  162C               	andwf	(floorf@u+2)^0,f,c
  6373  002A5C  5021               	movf	(??_floorf+3)^0,w,c
  6374  002A5E  162D               	andwf	(floorf@u+3)^0,f,c
  6375  002A60  EF76  F015         	goto	l3718
  6376  002A64                     l3710:
  6377  002A64  C02A  F01E         	movff	floorf@u,??_floorf
  6378  002A68  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  6379  002A6C  C02C  F020         	movff	floorf@u+2,??_floorf+2
  6380  002A70  C02D  F021         	movff	floorf@u+3,??_floorf+3
  6381  002A74  0E20               	movlw	32
  6382  002A76  EF42  F015         	goto	u4190
  6383  002A7A                     u4195:
  6384  002A7A  90D8               	bcf	status,0,c
  6385  002A7C  3221               	rrcf	(??_floorf+3)^0,f,c
  6386  002A7E  3220               	rrcf	(??_floorf+2)^0,f,c
  6387  002A80  321F               	rrcf	(??_floorf+1)^0,f,c
  6388  002A82  321E               	rrcf	??_floorf^0,f,c
  6389  002A84                     u4190:
  6390  002A84  2EE8               	decfsz	wreg,f,c
  6391  002A86  EF3D  F015         	goto	u4195
  6392  002A8A  501E               	movf	??_floorf^0,w,c
  6393  002A8C  101F               	iorwf	(??_floorf+1)^0,w,c
  6394  002A8E  1020               	iorwf	(??_floorf+2)^0,w,c
  6395  002A90  1021               	iorwf	(??_floorf+3)^0,w,c
  6396  002A92  A4D8               	btfss	status,2,c
  6397  002A94  EF4E  F015         	goto	u4201
  6398  002A98  EF50  F015         	goto	u4200
  6399  002A9C                     u4201:
  6400  002A9C  EF5A  F015         	goto	l3714
  6401  002AA0                     u4200:
  6402  002AA0  0E00               	movlw	0
  6403  002AA2  6E2A               	movwf	floorf@u^0,c
  6404  002AA4  0E00               	movlw	0
  6405  002AA6  6E2B               	movwf	(floorf@u+1)^0,c
  6406  002AA8  0E00               	movlw	0
  6407  002AAA  6E2C               	movwf	(floorf@u+2)^0,c
  6408  002AAC  0E00               	movlw	0
  6409  002AAE  6E2D               	movwf	(floorf@u+3)^0,c
  6410  002AB0  EF76  F015         	goto	l3718
  6411  002AB4                     l3714:
  6412  002AB4  90D8               	bcf	status,0,c
  6413  002AB6  342A               	rlcf	floorf@u^0,w,c
  6414  002AB8  6E1E               	movwf	??_floorf^0,c
  6415  002ABA  342B               	rlcf	(floorf@u+1)^0,w,c
  6416  002ABC  6E1F               	movwf	(??_floorf+1)^0,c
  6417  002ABE  342C               	rlcf	(floorf@u+2)^0,w,c
  6418  002AC0  6E20               	movwf	(??_floorf+2)^0,c
  6419  002AC2  342D               	rlcf	(floorf@u+3)^0,w,c
  6420  002AC4  6E21               	movwf	(??_floorf+3)^0,c
  6421  002AC6  501E               	movf	??_floorf^0,w,c
  6422  002AC8  101F               	iorwf	(??_floorf+1)^0,w,c
  6423  002ACA  1020               	iorwf	(??_floorf+2)^0,w,c
  6424  002ACC  1021               	iorwf	(??_floorf+3)^0,w,c
  6425  002ACE  B4D8               	btfsc	status,2,c
  6426  002AD0  EF6C  F015         	goto	u4211
  6427  002AD4  EF6E  F015         	goto	u4210
  6428  002AD8                     u4211:
  6429  002AD8  EF76  F015         	goto	l3718
  6430  002ADC                     u4210:
  6431  002ADC  0E00               	movlw	0
  6432  002ADE  6E2A               	movwf	floorf@u^0,c
  6433  002AE0  0E00               	movlw	0
  6434  002AE2  6E2B               	movwf	(floorf@u+1)^0,c
  6435  002AE4  0E80               	movlw	128
  6436  002AE6  6E2C               	movwf	(floorf@u+2)^0,c
  6437  002AE8  0EBF               	movlw	191
  6438  002AEA  6E2D               	movwf	(floorf@u+3)^0,c
  6439  002AEC                     l3718:
  6440  002AEC  C02A  F01A         	movff	floorf@u,?_floorf
  6441  002AF0  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  6442  002AF4  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  6443  002AF8  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  6444  002AFC                     l1090:
  6445  002AFC  0012               	return		;funcret
  6446  002AFE                     __end_of_floorf:
  6447                           	callstack 0
  6448                           
  6449 ;; *************** function ___fpclassifyf *****************
  6450 ;; Defined at:
  6451 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  6452 ;; Parameters:    Size  Location     Type
  6453 ;;  x               4    0[COMRAM] float 
  6454 ;; Auto vars:     Size  Location     Type
  6455 ;;  u               4   10[COMRAM] struct .
  6456 ;;  e               2    8[COMRAM] int 
  6457 ;; Return value:  Size  Location     Type
  6458 ;;                  2    0[COMRAM] int 
  6459 ;; Registers used:
  6460 ;;		wreg, status,2, status,0
  6461 ;; Tracked objects:
  6462 ;;		On entry : 0/0
  6463 ;;		On exit  : 0/0
  6464 ;;		Unchanged: 0/0
  6465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6466 ;;      Params:         4       0       0       0       0       0       0
  6467 ;;      Locals:         6       0       0       0       0       0       0
  6468 ;;      Temps:          4       0       0       0       0       0       0
  6469 ;;      Totals:        14       0       0       0       0       0       0
  6470 ;;Total ram usage:       14 bytes
  6471 ;; Hardware stack levels used:    1
  6472 ;; This function calls:
  6473 ;;		Nothing
  6474 ;; This function is called by:
  6475 ;;		_efgtoa
  6476 ;; This function uses a non-reentrant model
  6477 ;;
  6478                           
  6479                           	psect	text20
  6480  0033CC                     __ptext20:
  6481                           	callstack 0
  6482  0033CC                     ___fpclassifyf:
  6483                           	callstack 25
  6484  0033CC  C0D5  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  6485  0033D0  C0D6  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  6486  0033D4  C0D7  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  6487  0033D8  C0D8  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  6488  0033DC  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  6489  0033E0  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6490  0033E4  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6491  0033E8  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6492  0033EC  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6493  0033F0  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6494  0033F4  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6495  0033F8  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6496  0033FC  0E18               	movlw	24
  6497  0033FE  EF06  F01A         	goto	u4000
  6498  003402                     u4005:
  6499  003402  90D8               	bcf	status,0,c
  6500  003404  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  6501  003406  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  6502  003408  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  6503  00340A  3205               	rrcf	??___fpclassifyf^0,f,c
  6504  00340C                     u4000:
  6505  00340C  2EE8               	decfsz	wreg,f,c
  6506  00340E  EF01  F01A         	goto	u4005
  6507  003412  5005               	movf	??___fpclassifyf^0,w,c
  6508  003414  6E09               	movwf	___fpclassifyf@e^0,c
  6509  003416  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  6510  003418  5009               	movf	___fpclassifyf@e^0,w,c
  6511  00341A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6512  00341C  A4D8               	btfss	status,2,c
  6513  00341E  EF13  F01A         	goto	u4011
  6514  003422  EF15  F01A         	goto	u4010
  6515  003426                     u4011:
  6516  003426  EF35  F01A         	goto	l3670
  6517  00342A                     u4010:
  6518  00342A  90D8               	bcf	status,0,c
  6519  00342C  340B               	rlcf	___fpclassifyf@u^0,w,c
  6520  00342E  6E05               	movwf	??___fpclassifyf^0,c
  6521  003430  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6522  003432  6E06               	movwf	(??___fpclassifyf+1)^0,c
  6523  003434  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6524  003436  6E07               	movwf	(??___fpclassifyf+2)^0,c
  6525  003438  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6526  00343A  6E08               	movwf	(??___fpclassifyf+3)^0,c
  6527  00343C  5005               	movf	??___fpclassifyf^0,w,c
  6528  00343E  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6529  003440  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6530  003442  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6531  003444  A4D8               	btfss	status,2,c
  6532  003446  EF27  F01A         	goto	u4021
  6533  00344A  EF29  F01A         	goto	u4020
  6534  00344E                     u4021:
  6535  00344E  EF2F  F01A         	goto	l3666
  6536  003452                     u4020:
  6537  003452  0E00               	movlw	0
  6538  003454  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6539  003456  0E02               	movlw	2
  6540  003458  6E01               	movwf	?___fpclassifyf^0,c
  6541  00345A  EF64  F01A         	goto	l1052
  6542  00345E                     l3666:
  6543  00345E  0E00               	movlw	0
  6544  003460  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6545  003462  0E03               	movlw	3
  6546  003464  6E01               	movwf	?___fpclassifyf^0,c
  6547  003466  EF64  F01A         	goto	l1052
  6548  00346A                     l3670:
  6549  00346A  2809               	incf	___fpclassifyf@e^0,w,c
  6550  00346C  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6551  00346E  A4D8               	btfss	status,2,c
  6552  003470  EF3C  F01A         	goto	u4031
  6553  003474  EF3E  F01A         	goto	u4030
  6554  003478                     u4031:
  6555  003478  EF60  F01A         	goto	l3676
  6556  00347C                     u4030:
  6557  00347C  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6558  003480  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6559  003484  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6560  003488  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6561  00348C  0E09               	movlw	9
  6562  00348E                     u4045:
  6563  00348E  90D8               	bcf	status,0,c
  6564  003490  3605               	rlcf	??___fpclassifyf^0,f,c
  6565  003492  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  6566  003494  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  6567  003496  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  6568  003498  2EE8               	decfsz	wreg,f,c
  6569  00349A  EF47  F01A         	goto	u4045
  6570  00349E  5005               	movf	??___fpclassifyf^0,w,c
  6571  0034A0  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6572  0034A2  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6573  0034A4  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6574  0034A6  B4D8               	btfsc	status,2,c
  6575  0034A8  EF58  F01A         	goto	u4051
  6576  0034AC  EF5B  F01A         	goto	u4050
  6577  0034B0                     u4051:
  6578  0034B0  0E01               	movlw	1
  6579  0034B2  EF5C  F01A         	goto	u4060
  6580  0034B6                     u4050:
  6581  0034B6  0E00               	movlw	0
  6582  0034B8                     u4060:
  6583  0034B8  6E01               	movwf	?___fpclassifyf^0,c
  6584  0034BA  6A02               	clrf	(?___fpclassifyf+1)^0,c
  6585  0034BC  EF64  F01A         	goto	l1052
  6586  0034C0                     l3676:
  6587  0034C0  0E00               	movlw	0
  6588  0034C2  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6589  0034C4  0E04               	movlw	4
  6590  0034C6  6E01               	movwf	?___fpclassifyf^0,c
  6591  0034C8                     l1052:
  6592  0034C8  0012               	return		;funcret
  6593  0034CA                     __end_of___fpclassifyf:
  6594                           	callstack 0
  6595                           
  6596 ;; *************** function ___fltol *****************
  6597 ;; Defined at:
  6598 ;;		line 43 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\fltol.c"
  6599 ;; Parameters:    Size  Location     Type
  6600 ;;  f1              4   25[COMRAM] int 
  6601 ;; Auto vars:     Size  Location     Type
  6602 ;;  exp1            1   34[COMRAM] unsigned char 
  6603 ;;  sign1           1   33[COMRAM] unsigned char 
  6604 ;; Return value:  Size  Location     Type
  6605 ;;                  4   25[COMRAM] long 
  6606 ;; Registers used:
  6607 ;;		wreg, status,2, status,0
  6608 ;; Tracked objects:
  6609 ;;		On entry : 0/0
  6610 ;;		On exit  : 0/0
  6611 ;;		Unchanged: 0/0
  6612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6613 ;;      Params:         4       0       0       0       0       0       0
  6614 ;;      Locals:         2       0       0       0       0       0       0
  6615 ;;      Temps:          4       0       0       0       0       0       0
  6616 ;;      Totals:        10       0       0       0       0       0       0
  6617 ;;Total ram usage:       10 bytes
  6618 ;; Hardware stack levels used:    1
  6619 ;; This function calls:
  6620 ;;		Nothing
  6621 ;; This function is called by:
  6622 ;;		_esvaziar_tanque
  6623 ;;		_efgtoa
  6624 ;; This function uses a non-reentrant model
  6625 ;;
  6626                           
  6627                           	psect	text21
  6628  0031C2                     __ptext21:
  6629                           	callstack 0
  6630  0031C2                     ___fltol:
  6631                           	callstack 25
  6632  0031C2  341C               	rlcf	(___fltol@f1+2)^0,w,c
  6633  0031C4  341D               	rlcf	(___fltol@f1+3)^0,w,c
  6634  0031C6  6E23               	movwf	___fltol@exp1^0,c
  6635  0031C8  5023               	movf	___fltol@exp1^0,w,c
  6636  0031CA  A4D8               	btfss	status,2,c
  6637  0031CC  EFEA  F018         	goto	u3891
  6638  0031D0  EFEC  F018         	goto	u3890
  6639  0031D4                     u3891:
  6640  0031D4  EFF6  F018         	goto	l3598
  6641  0031D8                     u3890:
  6642  0031D8                     l3594:
  6643  0031D8  0E00               	movlw	0
  6644  0031DA  6E1A               	movwf	?___fltol^0,c
  6645  0031DC  0E00               	movlw	0
  6646  0031DE  6E1B               	movwf	(?___fltol+1)^0,c
  6647  0031E0  0E00               	movlw	0
  6648  0031E2  6E1C               	movwf	(?___fltol+2)^0,c
  6649  0031E4  0E00               	movlw	0
  6650  0031E6  6E1D               	movwf	(?___fltol+3)^0,c
  6651  0031E8  EF63  F019         	goto	l493
  6652  0031EC                     l3598:
  6653  0031EC  C01A  F01E         	movff	___fltol@f1,??___fltol
  6654  0031F0  C01B  F01F         	movff	___fltol@f1+1,??___fltol+1
  6655  0031F4  C01C  F020         	movff	___fltol@f1+2,??___fltol+2
  6656  0031F8  C01D  F021         	movff	___fltol@f1+3,??___fltol+3
  6657  0031FC  0E20               	movlw	32
  6658  0031FE  EF06  F019         	goto	u3900
  6659  003202                     u3905:
  6660  003202  90D8               	bcf	status,0,c
  6661  003204  3221               	rrcf	(??___fltol+3)^0,f,c
  6662  003206  3220               	rrcf	(??___fltol+2)^0,f,c
  6663  003208  321F               	rrcf	(??___fltol+1)^0,f,c
  6664  00320A  321E               	rrcf	??___fltol^0,f,c
  6665  00320C                     u3900:
  6666  00320C  2EE8               	decfsz	wreg,f,c
  6667  00320E  EF01  F019         	goto	u3905
  6668  003212  501E               	movf	??___fltol^0,w,c
  6669  003214  6E22               	movwf	___fltol@sign1^0,c
  6670  003216  8E1C               	bsf	(___fltol@f1+2)^0,7,c
  6671  003218  0EFF               	movlw	255
  6672  00321A  161A               	andwf	___fltol@f1^0,f,c
  6673  00321C  0EFF               	movlw	255
  6674  00321E  161B               	andwf	(___fltol@f1+1)^0,f,c
  6675  003220  0EFF               	movlw	255
  6676  003222  161C               	andwf	(___fltol@f1+2)^0,f,c
  6677  003224  0E00               	movlw	0
  6678  003226  161D               	andwf	(___fltol@f1+3)^0,f,c
  6679  003228  0E96               	movlw	150
  6680  00322A  5E23               	subwf	___fltol@exp1^0,f,c
  6681  00322C  BE23               	btfsc	___fltol@exp1^0,7,c
  6682  00322E  EF1D  F019         	goto	u3910
  6683  003232  EF1B  F019         	goto	u3911
  6684  003236                     u3911:
  6685  003236  EF33  F019         	goto	l3618
  6686  00323A                     u3910:
  6687  00323A  5023               	movf	___fltol@exp1^0,w,c
  6688  00323C  0A80               	xorlw	128
  6689  00323E  0F97               	addlw	151
  6690  003240  B0D8               	btfsc	status,0,c
  6691  003242  EF25  F019         	goto	u3921
  6692  003246  EF27  F019         	goto	u3920
  6693  00324A                     u3921:
  6694  00324A  EF29  F019         	goto	l3614
  6695  00324E                     u3920:
  6696  00324E  EFEC  F018         	goto	l3594
  6697  003252                     l3614:
  6698  003252  90D8               	bcf	status,0,c
  6699  003254  321D               	rrcf	(___fltol@f1+3)^0,f,c
  6700  003256  321C               	rrcf	(___fltol@f1+2)^0,f,c
  6701  003258  321B               	rrcf	(___fltol@f1+1)^0,f,c
  6702  00325A  321A               	rrcf	___fltol@f1^0,f,c
  6703  00325C  3E23               	incfsz	___fltol@exp1^0,f,c
  6704  00325E  EF29  F019         	goto	l3614
  6705  003262  EF4B  F019         	goto	l3628
  6706  003266                     l3618:
  6707  003266  0E1F               	movlw	31
  6708  003268  6423               	cpfsgt	___fltol@exp1^0,c
  6709  00326A  EF39  F019         	goto	u3931
  6710  00326E  EF3B  F019         	goto	u3930
  6711  003272                     u3931:
  6712  003272  EF43  F019         	goto	l3626
  6713  003276                     u3930:
  6714  003276  EFEC  F018         	goto	l3594
  6715  00327A                     l3624:
  6716  00327A  90D8               	bcf	status,0,c
  6717  00327C  361A               	rlcf	___fltol@f1^0,f,c
  6718  00327E  361B               	rlcf	(___fltol@f1+1)^0,f,c
  6719  003280  361C               	rlcf	(___fltol@f1+2)^0,f,c
  6720  003282  361D               	rlcf	(___fltol@f1+3)^0,f,c
  6721  003284  0623               	decf	___fltol@exp1^0,f,c
  6722  003286                     l3626:
  6723  003286  5023               	movf	___fltol@exp1^0,w,c
  6724  003288  A4D8               	btfss	status,2,c
  6725  00328A  EF49  F019         	goto	u3941
  6726  00328E  EF4B  F019         	goto	u3940
  6727  003292                     u3941:
  6728  003292  EF3D  F019         	goto	l3624
  6729  003296                     u3940:
  6730  003296                     l3628:
  6731  003296  5022               	movf	___fltol@sign1^0,w,c
  6732  003298  B4D8               	btfsc	status,2,c
  6733  00329A  EF51  F019         	goto	u3951
  6734  00329E  EF53  F019         	goto	u3950
  6735  0032A2                     u3951:
  6736  0032A2  EF5B  F019         	goto	l3632
  6737  0032A6                     u3950:
  6738  0032A6  1E1D               	comf	(___fltol@f1+3)^0,f,c
  6739  0032A8  1E1C               	comf	(___fltol@f1+2)^0,f,c
  6740  0032AA  1E1B               	comf	(___fltol@f1+1)^0,f,c
  6741  0032AC  6C1A               	negf	___fltol@f1^0,c
  6742  0032AE  0E00               	movlw	0
  6743  0032B0  221B               	addwfc	(___fltol@f1+1)^0,f,c
  6744  0032B2  221C               	addwfc	(___fltol@f1+2)^0,f,c
  6745  0032B4  221D               	addwfc	(___fltol@f1+3)^0,f,c
  6746  0032B6                     l3632:
  6747  0032B6  C01A  F01A         	movff	___fltol@f1,?___fltol
  6748  0032BA  C01B  F01B         	movff	___fltol@f1+1,?___fltol+1
  6749  0032BE  C01C  F01C         	movff	___fltol@f1+2,?___fltol+2
  6750  0032C2  C01D  F01D         	movff	___fltol@f1+3,?___fltol+3
  6751  0032C6                     l493:
  6752  0032C6  0012               	return		;funcret
  6753  0032C8                     __end_of___fltol:
  6754                           	callstack 0
  6755                           
  6756 ;; *************** function ___flsub *****************
  6757 ;; Defined at:
  6758 ;;		line 245 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  6759 ;; Parameters:    Size  Location     Type
  6760 ;;  b               4   30[COMRAM] long 
  6761 ;;  a               4   34[COMRAM] long 
  6762 ;; Auto vars:     Size  Location     Type
  6763 ;;		None
  6764 ;; Return value:  Size  Location     Type
  6765 ;;                  4   30[COMRAM] long 
  6766 ;; Registers used:
  6767 ;;		wreg, status,2, status,0, cstack
  6768 ;; Tracked objects:
  6769 ;;		On entry : 0/0
  6770 ;;		On exit  : 0/0
  6771 ;;		Unchanged: 0/0
  6772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6773 ;;      Params:         8       0       0       0       0       0       0
  6774 ;;      Locals:         0       0       0       0       0       0       0
  6775 ;;      Temps:          0       0       0       0       0       0       0
  6776 ;;      Totals:         8       0       0       0       0       0       0
  6777 ;;Total ram usage:        8 bytes
  6778 ;; Hardware stack levels used:    1
  6779 ;; Hardware stack levels required when called:    1
  6780 ;; This function calls:
  6781 ;;		___fladd
  6782 ;; This function is called by:
  6783 ;;		_esvaziar_tanque
  6784 ;;		_efgtoa
  6785 ;; This function uses a non-reentrant model
  6786 ;;
  6787                           
  6788                           	psect	text22
  6789  003D62                     __ptext22:
  6790                           	callstack 0
  6791  003D62                     ___flsub:
  6792                           	callstack 24
  6793  003D62  0E00               	movlw	0
  6794  003D64  1A23               	xorwf	___flsub@a^0,f,c
  6795  003D66  0E00               	movlw	0
  6796  003D68  1A24               	xorwf	(___flsub@a+1)^0,f,c
  6797  003D6A  0E00               	movlw	0
  6798  003D6C  1A25               	xorwf	(___flsub@a+2)^0,f,c
  6799  003D6E  0E80               	movlw	128
  6800  003D70  1A26               	xorwf	(___flsub@a+3)^0,f,c
  6801  003D72  C01F  F00F         	movff	___flsub@b,___fladd@b
  6802  003D76  C020  F010         	movff	___flsub@b+1,___fladd@b+1
  6803  003D7A  C021  F011         	movff	___flsub@b+2,___fladd@b+2
  6804  003D7E  C022  F012         	movff	___flsub@b+3,___fladd@b+3
  6805  003D82  C023  F013         	movff	___flsub@a,___fladd@a
  6806  003D86  C024  F014         	movff	___flsub@a+1,___fladd@a+1
  6807  003D8A  C025  F015         	movff	___flsub@a+2,___fladd@a+2
  6808  003D8E  C026  F016         	movff	___flsub@a+3,___fladd@a+3
  6809  003D92  EC47  F009         	call	___fladd	;wreg free
  6810  003D96  C00F  F01F         	movff	?___fladd,?___flsub
  6811  003D9A  C010  F020         	movff	?___fladd+1,?___flsub+1
  6812  003D9E  C011  F021         	movff	?___fladd+2,?___flsub+2
  6813  003DA2  C012  F022         	movff	?___fladd+3,?___flsub+3
  6814  003DA6  0012               	return		;funcret
  6815  003DA8                     __end_of___flsub:
  6816                           	callstack 0
  6817                           
  6818 ;; *************** function ___fladd *****************
  6819 ;; Defined at:
  6820 ;;		line 10 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  6821 ;; Parameters:    Size  Location     Type
  6822 ;;  b               4   14[COMRAM] long 
  6823 ;;  a               4   18[COMRAM] long 
  6824 ;; Auto vars:     Size  Location     Type
  6825 ;;  grs             1   29[COMRAM] unsigned char 
  6826 ;;  bexp            1   28[COMRAM] unsigned char 
  6827 ;;  aexp            1   27[COMRAM] unsigned char 
  6828 ;;  signs           1   26[COMRAM] unsigned char 
  6829 ;; Return value:  Size  Location     Type
  6830 ;;                  4   14[COMRAM] unsigned char 
  6831 ;; Registers used:
  6832 ;;		wreg, status,2, status,0
  6833 ;; Tracked objects:
  6834 ;;		On entry : 0/0
  6835 ;;		On exit  : 0/0
  6836 ;;		Unchanged: 0/0
  6837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6838 ;;      Params:         8       0       0       0       0       0       0
  6839 ;;      Locals:         4       0       0       0       0       0       0
  6840 ;;      Temps:          4       0       0       0       0       0       0
  6841 ;;      Totals:        16       0       0       0       0       0       0
  6842 ;;Total ram usage:       16 bytes
  6843 ;; Hardware stack levels used:    1
  6844 ;; This function calls:
  6845 ;;		Nothing
  6846 ;; This function is called by:
  6847 ;;		_encher_tanque
  6848 ;;		___flsub
  6849 ;;		_efgtoa
  6850 ;; This function uses a non-reentrant model
  6851 ;;
  6852                           
  6853                           	psect	text23
  6854  00128E                     __ptext23:
  6855                           	callstack 0
  6856  00128E                     ___fladd:
  6857                           	callstack 24
  6858  00128E  5012               	movf	(___fladd@b+3)^0,w,c
  6859  001290  0B80               	andlw	128
  6860  001292  6E1B               	movwf	___fladd@signs^0,c
  6861  001294  5012               	movf	(___fladd@b+3)^0,w,c
  6862  001296  2412               	addwf	(___fladd@b+3)^0,w,c
  6863  001298  6E1D               	movwf	___fladd@bexp^0,c
  6864  00129A  AE11               	btfss	(___fladd@b+2)^0,7,c
  6865  00129C  EF52  F009         	goto	u2831
  6866  0012A0  EF54  F009         	goto	u2830
  6867  0012A4                     u2831:
  6868  0012A4  EF55  F009         	goto	l2968
  6869  0012A8                     u2830:
  6870  0012A8  801D               	bsf	___fladd@bexp^0,0,c
  6871  0012AA                     l2968:
  6872  0012AA  501D               	movf	___fladd@bexp^0,w,c
  6873  0012AC  B4D8               	btfsc	status,2,c
  6874  0012AE  EF5B  F009         	goto	u2841
  6875  0012B2  EF5D  F009         	goto	u2840
  6876  0012B6                     u2841:
  6877  0012B6  EF72  F009         	goto	l2978
  6878  0012BA                     u2840:
  6879  0012BA  281D               	incf	___fladd@bexp^0,w,c
  6880  0012BC  A4D8               	btfss	status,2,c
  6881  0012BE  EF63  F009         	goto	u2851
  6882  0012C2  EF65  F009         	goto	u2850
  6883  0012C6                     u2851:
  6884  0012C6  EF6D  F009         	goto	l2974
  6885  0012CA                     u2850:
  6886  0012CA  0E00               	movlw	0
  6887  0012CC  6E0F               	movwf	___fladd@b^0,c
  6888  0012CE  0E00               	movlw	0
  6889  0012D0  6E10               	movwf	(___fladd@b+1)^0,c
  6890  0012D2  0E00               	movlw	0
  6891  0012D4  6E11               	movwf	(___fladd@b+2)^0,c
  6892  0012D6  0E00               	movlw	0
  6893  0012D8  6E12               	movwf	(___fladd@b+3)^0,c
  6894  0012DA                     l2974:
  6895  0012DA  8E11               	bsf	(___fladd@b+2)^0,7,c
  6896  0012DC  0E00               	movlw	0
  6897  0012DE  6E12               	movwf	(___fladd@b+3)^0,c
  6898  0012E0  EF7A  F009         	goto	l2980
  6899  0012E4                     l2978:
  6900  0012E4  0E00               	movlw	0
  6901  0012E6  6E0F               	movwf	___fladd@b^0,c
  6902  0012E8  0E00               	movlw	0
  6903  0012EA  6E10               	movwf	(___fladd@b+1)^0,c
  6904  0012EC  0E00               	movlw	0
  6905  0012EE  6E11               	movwf	(___fladd@b+2)^0,c
  6906  0012F0  0E00               	movlw	0
  6907  0012F2  6E12               	movwf	(___fladd@b+3)^0,c
  6908  0012F4                     l2980:
  6909  0012F4  5016               	movf	(___fladd@a+3)^0,w,c
  6910  0012F6  0B80               	andlw	128
  6911  0012F8  6E1C               	movwf	___fladd@aexp^0,c
  6912  0012FA  501B               	movf	___fladd@signs^0,w,c
  6913  0012FC  181C               	xorwf	___fladd@aexp^0,w,c
  6914  0012FE  B4D8               	btfsc	status,2,c
  6915  001300  EF84  F009         	goto	u2861
  6916  001304  EF86  F009         	goto	u2860
  6917  001308                     u2861:
  6918  001308  EF87  F009         	goto	l2986
  6919  00130C                     u2860:
  6920  00130C  8C1B               	bsf	___fladd@signs^0,6,c
  6921  00130E                     l2986:
  6922  00130E  5016               	movf	(___fladd@a+3)^0,w,c
  6923  001310  2416               	addwf	(___fladd@a+3)^0,w,c
  6924  001312  6E1C               	movwf	___fladd@aexp^0,c
  6925  001314  AE15               	btfss	(___fladd@a+2)^0,7,c
  6926  001316  EF8F  F009         	goto	u2871
  6927  00131A  EF91  F009         	goto	u2870
  6928  00131E                     u2871:
  6929  00131E  EF92  F009         	goto	l2992
  6930  001322                     u2870:
  6931  001322  801C               	bsf	___fladd@aexp^0,0,c
  6932  001324                     l2992:
  6933  001324  501C               	movf	___fladd@aexp^0,w,c
  6934  001326  B4D8               	btfsc	status,2,c
  6935  001328  EF98  F009         	goto	u2881
  6936  00132C  EF9A  F009         	goto	u2880
  6937  001330                     u2881:
  6938  001330  EFAF  F009         	goto	l3002
  6939  001334                     u2880:
  6940  001334  281C               	incf	___fladd@aexp^0,w,c
  6941  001336  A4D8               	btfss	status,2,c
  6942  001338  EFA0  F009         	goto	u2891
  6943  00133C  EFA2  F009         	goto	u2890
  6944  001340                     u2891:
  6945  001340  EFAA  F009         	goto	l2998
  6946  001344                     u2890:
  6947  001344  0E00               	movlw	0
  6948  001346  6E13               	movwf	___fladd@a^0,c
  6949  001348  0E00               	movlw	0
  6950  00134A  6E14               	movwf	(___fladd@a+1)^0,c
  6951  00134C  0E00               	movlw	0
  6952  00134E  6E15               	movwf	(___fladd@a+2)^0,c
  6953  001350  0E00               	movlw	0
  6954  001352  6E16               	movwf	(___fladd@a+3)^0,c
  6955  001354                     l2998:
  6956  001354  8E15               	bsf	(___fladd@a+2)^0,7,c
  6957  001356  0E00               	movlw	0
  6958  001358  6E16               	movwf	(___fladd@a+3)^0,c
  6959  00135A  EFB7  F009         	goto	l3004
  6960  00135E                     l3002:
  6961  00135E  0E00               	movlw	0
  6962  001360  6E13               	movwf	___fladd@a^0,c
  6963  001362  0E00               	movlw	0
  6964  001364  6E14               	movwf	(___fladd@a+1)^0,c
  6965  001366  0E00               	movlw	0
  6966  001368  6E15               	movwf	(___fladd@a+2)^0,c
  6967  00136A  0E00               	movlw	0
  6968  00136C  6E16               	movwf	(___fladd@a+3)^0,c
  6969  00136E                     l3004:
  6970  00136E  501D               	movf	___fladd@bexp^0,w,c
  6971  001370  5C1C               	subwf	___fladd@aexp^0,w,c
  6972  001372  B0D8               	btfsc	status,0,c
  6973  001374  EFBE  F009         	goto	u2901
  6974  001378  EFC0  F009         	goto	u2900
  6975  00137C                     u2901:
  6976  00137C  EFE7  F009         	goto	l3040
  6977  001380                     u2900:
  6978  001380  AC1B               	btfss	___fladd@signs^0,6,c
  6979  001382  EFC5  F009         	goto	u2911
  6980  001386  EFC7  F009         	goto	u2910
  6981  00138A                     u2911:
  6982  00138A  EFC9  F009         	goto	l3010
  6983  00138E                     u2910:
  6984  00138E  0E80               	movlw	128
  6985  001390  1A1B               	xorwf	___fladd@signs^0,f,c
  6986  001392                     l3010:
  6987  001392  C01D  F01E         	movff	___fladd@bexp,___fladd@grs
  6988  001396  C01C  F01D         	movff	___fladd@aexp,___fladd@bexp
  6989  00139A  C01E  F01C         	movff	___fladd@grs,___fladd@aexp
  6990  00139E  C00F  F01E         	movff	___fladd@b,___fladd@grs
  6991  0013A2  C013  F00F         	movff	___fladd@a,___fladd@b
  6992  0013A6  C01E  F013         	movff	___fladd@grs,___fladd@a
  6993  0013AA  C010  F01E         	movff	___fladd@b+1,___fladd@grs
  6994  0013AE  C014  F010         	movff	___fladd@a+1,___fladd@b+1
  6995  0013B2  C01E  F014         	movff	___fladd@grs,___fladd@a+1
  6996  0013B6  C011  F01E         	movff	___fladd@b+2,___fladd@grs
  6997  0013BA  C015  F011         	movff	___fladd@a+2,___fladd@b+2
  6998  0013BE  C01E  F015         	movff	___fladd@grs,___fladd@a+2
  6999  0013C2  C012  F01E         	movff	___fladd@b+3,___fladd@grs
  7000  0013C6  C016  F012         	movff	___fladd@a+3,___fladd@b+3
  7001  0013CA  C01E  F016         	movff	___fladd@grs,___fladd@a+3
  7002  0013CE                     l3040:
  7003  0013CE  0E00               	movlw	0
  7004  0013D0  6E1E               	movwf	___fladd@grs^0,c
  7005  0013D2  501D               	movf	___fladd@bexp^0,w,c
  7006  0013D4  C01C  F017         	movff	___fladd@aexp,??___fladd
  7007  0013D8  6A18               	clrf	(??___fladd+1)^0,c
  7008  0013DA  5E17               	subwf	??___fladd^0,f,c
  7009  0013DC  0E00               	movlw	0
  7010  0013DE  5A18               	subwfb	(??___fladd+1)^0,f,c
  7011  0013E0  BE18               	btfsc	(??___fladd+1)^0,7,c
  7012  0013E2  EFFC  F009         	goto	u2921
  7013  0013E6  5018               	movf	(??___fladd+1)^0,w,c
  7014  0013E8  E109               	bnz	u2920
  7015  0013EA  0E1A               	movlw	26
  7016  0013EC  5C17               	subwf	??___fladd^0,w,c
  7017  0013EE  A0D8               	btfss	status,0,c
  7018  0013F0  EFFC  F009         	goto	u2921
  7019  0013F4  EFFE  F009         	goto	u2920
  7020  0013F8                     u2921:
  7021  0013F8  EF35  F00A         	goto	l725
  7022  0013FC                     u2920:
  7023  0013FC  500F               	movf	___fladd@b^0,w,c
  7024  0013FE  1010               	iorwf	(___fladd@b+1)^0,w,c
  7025  001400  1011               	iorwf	(___fladd@b+2)^0,w,c
  7026  001402  1012               	iorwf	(___fladd@b+3)^0,w,c
  7027  001404  A4D8               	btfss	status,2,c
  7028  001406  EF07  F00A         	goto	u2931
  7029  00140A  EF0A  F00A         	goto	u2930
  7030  00140E                     u2931:
  7031  00140E  0E01               	movlw	1
  7032  001410  EF0B  F00A         	goto	u2940
  7033  001414                     u2930:
  7034  001414  0E00               	movlw	0
  7035  001416                     u2940:
  7036  001416  6E1E               	movwf	___fladd@grs^0,c
  7037  001418  0E00               	movlw	0
  7038  00141A  6E0F               	movwf	___fladd@b^0,c
  7039  00141C  0E00               	movlw	0
  7040  00141E  6E10               	movwf	(___fladd@b+1)^0,c
  7041  001420  0E00               	movlw	0
  7042  001422  6E11               	movwf	(___fladd@b+2)^0,c
  7043  001424  0E00               	movlw	0
  7044  001426  6E12               	movwf	(___fladd@b+3)^0,c
  7045  001428  C01C  F01D         	movff	___fladd@aexp,___fladd@bexp
  7046  00142C  EF3E  F00A         	goto	l724
  7047  001430                     l726:
  7048  001430  A01E               	btfss	___fladd@grs^0,0,c
  7049  001432  EF1D  F00A         	goto	u2951
  7050  001436  EF1F  F00A         	goto	u2950
  7051  00143A                     u2951:
  7052  00143A  EF25  F00A         	goto	l3052
  7053  00143E                     u2950:
  7054  00143E  90D8               	bcf	status,0,c
  7055  001440  301E               	rrcf	___fladd@grs^0,w,c
  7056  001442  0901               	iorlw	1
  7057  001444  6E1E               	movwf	___fladd@grs^0,c
  7058  001446  EF27  F00A         	goto	l3054
  7059  00144A                     l3052:
  7060  00144A  90D8               	bcf	status,0,c
  7061  00144C  321E               	rrcf	___fladd@grs^0,f,c
  7062  00144E                     l3054:
  7063  00144E  A00F               	btfss	___fladd@b^0,0,c
  7064  001450  EF2C  F00A         	goto	u2961
  7065  001454  EF2E  F00A         	goto	u2960
  7066  001458                     u2961:
  7067  001458  EF2F  F00A         	goto	l3058
  7068  00145C                     u2960:
  7069  00145C  8E1E               	bsf	___fladd@grs^0,7,c
  7070  00145E                     l3058:
  7071  00145E  3412               	rlcf	(___fladd@b+3)^0,w,c
  7072  001460  3212               	rrcf	(___fladd@b+3)^0,f,c
  7073  001462  3211               	rrcf	(___fladd@b+2)^0,f,c
  7074  001464  3210               	rrcf	(___fladd@b+1)^0,f,c
  7075  001466  320F               	rrcf	___fladd@b^0,f,c
  7076  001468  2A1D               	incf	___fladd@bexp^0,f,c
  7077  00146A                     l725:
  7078  00146A  501C               	movf	___fladd@aexp^0,w,c
  7079  00146C  5C1D               	subwf	___fladd@bexp^0,w,c
  7080  00146E  A0D8               	btfss	status,0,c
  7081  001470  EF3C  F00A         	goto	u2971
  7082  001474  EF3E  F00A         	goto	u2970
  7083  001478                     u2971:
  7084  001478  EF18  F00A         	goto	l726
  7085  00147C                     u2970:
  7086  00147C                     l724:
  7087  00147C  BC1B               	btfsc	___fladd@signs^0,6,c
  7088  00147E  EF43  F00A         	goto	u2981
  7089  001482  EF45  F00A         	goto	u2980
  7090  001486                     u2981:
  7091  001486  EF85  F00A         	goto	l3086
  7092  00148A                     u2980:
  7093  00148A  501D               	movf	___fladd@bexp^0,w,c
  7094  00148C  A4D8               	btfss	status,2,c
  7095  00148E  EF4B  F00A         	goto	u2991
  7096  001492  EF4D  F00A         	goto	u2990
  7097  001496                     u2991:
  7098  001496  EF57  F00A         	goto	l3068
  7099  00149A                     u2990:
  7100  00149A  0E00               	movlw	0
  7101  00149C  6E0F               	movwf	?___fladd^0,c
  7102  00149E  0E00               	movlw	0
  7103  0014A0  6E10               	movwf	(?___fladd+1)^0,c
  7104  0014A2  0E00               	movlw	0
  7105  0014A4  6E11               	movwf	(?___fladd+2)^0,c
  7106  0014A6  0E00               	movlw	0
  7107  0014A8  6E12               	movwf	(?___fladd+3)^0,c
  7108  0014AA  EFA6  F00B         	goto	l733
  7109  0014AE                     l3068:
  7110  0014AE  5013               	movf	___fladd@a^0,w,c
  7111  0014B0  260F               	addwf	___fladd@b^0,f,c
  7112  0014B2  5014               	movf	(___fladd@a+1)^0,w,c
  7113  0014B4  2210               	addwfc	(___fladd@b+1)^0,f,c
  7114  0014B6  5015               	movf	(___fladd@a+2)^0,w,c
  7115  0014B8  2211               	addwfc	(___fladd@b+2)^0,f,c
  7116  0014BA  5016               	movf	(___fladd@a+3)^0,w,c
  7117  0014BC  2212               	addwfc	(___fladd@b+3)^0,f,c
  7118  0014BE  A012               	btfss	(___fladd@b+3)^0,0,c
  7119  0014C0  EF64  F00A         	goto	u3001
  7120  0014C4  EF66  F00A         	goto	u3000
  7121  0014C8                     u3001:
  7122  0014C8  EF12  F00B         	goto	l3122
  7123  0014CC                     u3000:
  7124  0014CC  A01E               	btfss	___fladd@grs^0,0,c
  7125  0014CE  EF6B  F00A         	goto	u3011
  7126  0014D2  EF6D  F00A         	goto	u3010
  7127  0014D6                     u3011:
  7128  0014D6  EF73  F00A         	goto	l3076
  7129  0014DA                     u3010:
  7130  0014DA  90D8               	bcf	status,0,c
  7131  0014DC  301E               	rrcf	___fladd@grs^0,w,c
  7132  0014DE  0901               	iorlw	1
  7133  0014E0  6E1E               	movwf	___fladd@grs^0,c
  7134  0014E2  EF75  F00A         	goto	l3078
  7135  0014E6                     l3076:
  7136  0014E6  90D8               	bcf	status,0,c
  7137  0014E8  321E               	rrcf	___fladd@grs^0,f,c
  7138  0014EA                     l3078:
  7139  0014EA  A00F               	btfss	___fladd@b^0,0,c
  7140  0014EC  EF7A  F00A         	goto	u3021
  7141  0014F0  EF7C  F00A         	goto	u3020
  7142  0014F4                     u3021:
  7143  0014F4  EF7D  F00A         	goto	l3082
  7144  0014F8                     u3020:
  7145  0014F8  8E1E               	bsf	___fladd@grs^0,7,c
  7146  0014FA                     l3082:
  7147  0014FA  3412               	rlcf	(___fladd@b+3)^0,w,c
  7148  0014FC  3212               	rrcf	(___fladd@b+3)^0,f,c
  7149  0014FE  3211               	rrcf	(___fladd@b+2)^0,f,c
  7150  001500  3210               	rrcf	(___fladd@b+1)^0,f,c
  7151  001502  320F               	rrcf	___fladd@b^0,f,c
  7152  001504  2A1D               	incf	___fladd@bexp^0,f,c
  7153  001506  EF12  F00B         	goto	l3122
  7154  00150A                     l3086:
  7155  00150A  5013               	movf	___fladd@a^0,w,c
  7156  00150C  5C0F               	subwf	___fladd@b^0,w,c
  7157  00150E  5014               	movf	(___fladd@a+1)^0,w,c
  7158  001510  5810               	subwfb	(___fladd@b+1)^0,w,c
  7159  001512  5015               	movf	(___fladd@a+2)^0,w,c
  7160  001514  5811               	subwfb	(___fladd@b+2)^0,w,c
  7161  001516  5012               	movf	(___fladd@b+3)^0,w,c
  7162  001518  0A80               	xorlw	128
  7163  00151A  6E17               	movwf	??___fladd^0,c
  7164  00151C  5016               	movf	(___fladd@a+3)^0,w,c
  7165  00151E  0A80               	xorlw	128
  7166  001520  5817               	subwfb	??___fladd^0,w,c
  7167  001522  B0D8               	btfsc	status,0,c
  7168  001524  EF96  F00A         	goto	u3031
  7169  001528  EF98  F00A         	goto	u3030
  7170  00152C                     u3031:
  7171  00152C  EFC3  F00A         	goto	l3096
  7172  001530                     u3030:
  7173  001530  500F               	movf	___fladd@b^0,w,c
  7174  001532  5C13               	subwf	___fladd@a^0,w,c
  7175  001534  6E17               	movwf	??___fladd^0,c
  7176  001536  5010               	movf	(___fladd@b+1)^0,w,c
  7177  001538  5814               	subwfb	(___fladd@a+1)^0,w,c
  7178  00153A  6E18               	movwf	(??___fladd+1)^0,c
  7179  00153C  5011               	movf	(___fladd@b+2)^0,w,c
  7180  00153E  5815               	subwfb	(___fladd@a+2)^0,w,c
  7181  001540  6E19               	movwf	(??___fladd+2)^0,c
  7182  001542  5012               	movf	(___fladd@b+3)^0,w,c
  7183  001544  5816               	subwfb	(___fladd@a+3)^0,w,c
  7184  001546  6E1A               	movwf	(??___fladd+3)^0,c
  7185  001548  0EFF               	movlw	255
  7186  00154A  2417               	addwf	??___fladd^0,w,c
  7187  00154C  6E0F               	movwf	___fladd@b^0,c
  7188  00154E  0EFF               	movlw	255
  7189  001550  2018               	addwfc	(??___fladd+1)^0,w,c
  7190  001552  6E10               	movwf	(___fladd@b+1)^0,c
  7191  001554  0EFF               	movlw	255
  7192  001556  2019               	addwfc	(??___fladd+2)^0,w,c
  7193  001558  6E11               	movwf	(___fladd@b+2)^0,c
  7194  00155A  0EFF               	movlw	255
  7195  00155C  201A               	addwfc	(??___fladd+3)^0,w,c
  7196  00155E  6E12               	movwf	(___fladd@b+3)^0,c
  7197  001560  0E80               	movlw	128
  7198  001562  1A1B               	xorwf	___fladd@signs^0,f,c
  7199  001564  6C1E               	negf	___fladd@grs^0,c
  7200  001566  501E               	movf	___fladd@grs^0,w,c
  7201  001568  A4D8               	btfss	status,2,c
  7202  00156A  EFB9  F00A         	goto	u3041
  7203  00156E  EFBB  F00A         	goto	u3040
  7204  001572                     u3041:
  7205  001572  EFCB  F00A         	goto	l741
  7206  001576                     u3040:
  7207  001576  0E01               	movlw	1
  7208  001578  260F               	addwf	___fladd@b^0,f,c
  7209  00157A  0E00               	movlw	0
  7210  00157C  2210               	addwfc	(___fladd@b+1)^0,f,c
  7211  00157E  2211               	addwfc	(___fladd@b+2)^0,f,c
  7212  001580  2212               	addwfc	(___fladd@b+3)^0,f,c
  7213  001582  EFCB  F00A         	goto	l741
  7214  001586                     l3096:
  7215  001586  5013               	movf	___fladd@a^0,w,c
  7216  001588  5E0F               	subwf	___fladd@b^0,f,c
  7217  00158A  5014               	movf	(___fladd@a+1)^0,w,c
  7218  00158C  5A10               	subwfb	(___fladd@b+1)^0,f,c
  7219  00158E  5015               	movf	(___fladd@a+2)^0,w,c
  7220  001590  5A11               	subwfb	(___fladd@b+2)^0,f,c
  7221  001592  5016               	movf	(___fladd@a+3)^0,w,c
  7222  001594  5A12               	subwfb	(___fladd@b+3)^0,f,c
  7223  001596                     l741:
  7224  001596  500F               	movf	___fladd@b^0,w,c
  7225  001598  1010               	iorwf	(___fladd@b+1)^0,w,c
  7226  00159A  1011               	iorwf	(___fladd@b+2)^0,w,c
  7227  00159C  1012               	iorwf	(___fladd@b+3)^0,w,c
  7228  00159E  A4D8               	btfss	status,2,c
  7229  0015A0  EFD4  F00A         	goto	u3051
  7230  0015A4  EFD6  F00A         	goto	u3050
  7231  0015A8                     u3051:
  7232  0015A8  EF0B  F00B         	goto	l3120
  7233  0015AC                     u3050:
  7234  0015AC  501E               	movf	___fladd@grs^0,w,c
  7235  0015AE  A4D8               	btfss	status,2,c
  7236  0015B0  EFDC  F00A         	goto	u3061
  7237  0015B4  EFDE  F00A         	goto	u3060
  7238  0015B8                     u3061:
  7239  0015B8  EF0B  F00B         	goto	l3120
  7240  0015BC                     u3060:
  7241  0015BC  0E00               	movlw	0
  7242  0015BE  6E0F               	movwf	?___fladd^0,c
  7243  0015C0  0E00               	movlw	0
  7244  0015C2  6E10               	movwf	(?___fladd+1)^0,c
  7245  0015C4  0E00               	movlw	0
  7246  0015C6  6E11               	movwf	(?___fladd+2)^0,c
  7247  0015C8  0E00               	movlw	0
  7248  0015CA  6E12               	movwf	(?___fladd+3)^0,c
  7249  0015CC  EFA6  F00B         	goto	l733
  7250  0015D0                     l3104:
  7251  0015D0  90D8               	bcf	status,0,c
  7252  0015D2  360F               	rlcf	___fladd@b^0,f,c
  7253  0015D4  3610               	rlcf	(___fladd@b+1)^0,f,c
  7254  0015D6  3611               	rlcf	(___fladd@b+2)^0,f,c
  7255  0015D8  3612               	rlcf	(___fladd@b+3)^0,f,c
  7256  0015DA  AE1E               	btfss	___fladd@grs^0,7,c
  7257  0015DC  EFF2  F00A         	goto	u3071
  7258  0015E0  EFF4  F00A         	goto	u3070
  7259  0015E4                     u3071:
  7260  0015E4  EFF5  F00A         	goto	l3110
  7261  0015E8                     u3070:
  7262  0015E8  800F               	bsf	___fladd@b^0,0,c
  7263  0015EA                     l3110:
  7264  0015EA  A01E               	btfss	___fladd@grs^0,0,c
  7265  0015EC  EFFA  F00A         	goto	u3081
  7266  0015F0  EFFC  F00A         	goto	u3080
  7267  0015F4                     u3081:
  7268  0015F4  EF00  F00B         	goto	l3114
  7269  0015F8                     u3080:
  7270  0015F8  80D8               	bsf	status,0,c
  7271  0015FA  361E               	rlcf	___fladd@grs^0,f,c
  7272  0015FC  EF02  F00B         	goto	l3116
  7273  001600                     l3114:
  7274  001600  90D8               	bcf	status,0,c
  7275  001602  361E               	rlcf	___fladd@grs^0,f,c
  7276  001604                     l3116:
  7277  001604  501D               	movf	___fladd@bexp^0,w,c
  7278  001606  B4D8               	btfsc	status,2,c
  7279  001608  EF08  F00B         	goto	u3091
  7280  00160C  EF0A  F00B         	goto	u3090
  7281  001610                     u3091:
  7282  001610  EF0B  F00B         	goto	l3120
  7283  001614                     u3090:
  7284  001614  061D               	decf	___fladd@bexp^0,f,c
  7285  001616                     l3120:
  7286  001616  AE11               	btfss	(___fladd@b+2)^0,7,c
  7287  001618  EF10  F00B         	goto	u3101
  7288  00161C  EF12  F00B         	goto	u3100
  7289  001620                     u3101:
  7290  001620  EFE8  F00A         	goto	l3104
  7291  001624                     u3100:
  7292  001624                     l3122:
  7293  001624  0E00               	movlw	0
  7294  001626  6E1C               	movwf	___fladd@aexp^0,c
  7295  001628  AE1E               	btfss	___fladd@grs^0,7,c
  7296  00162A  EF19  F00B         	goto	u3111
  7297  00162E  EF1B  F00B         	goto	u3110
  7298  001632                     u3111:
  7299  001632  EF33  F00B         	goto	l750
  7300  001636                     u3110:
  7301  001636  C01E  F017         	movff	___fladd@grs,??___fladd
  7302  00163A  0E7F               	movlw	127
  7303  00163C  1617               	andwf	??___fladd^0,f,c
  7304  00163E  B4D8               	btfsc	status,2,c
  7305  001640  EF24  F00B         	goto	u3121
  7306  001644  EF26  F00B         	goto	u3120
  7307  001648                     u3121:
  7308  001648  EF2A  F00B         	goto	l751
  7309  00164C                     u3120:
  7310  00164C                     l3128:
  7311  00164C  0E01               	movlw	1
  7312  00164E  6E1C               	movwf	___fladd@aexp^0,c
  7313  001650  EF33  F00B         	goto	l750
  7314  001654                     l751:
  7315  001654  A00F               	btfss	___fladd@b^0,0,c
  7316  001656  EF2F  F00B         	goto	u3131
  7317  00165A  EF31  F00B         	goto	u3130
  7318  00165E                     u3131:
  7319  00165E  EF33  F00B         	goto	l750
  7320  001662                     u3130:
  7321  001662  EF26  F00B         	goto	l3128
  7322  001666                     l750:
  7323  001666  501C               	movf	___fladd@aexp^0,w,c
  7324  001668  B4D8               	btfsc	status,2,c
  7325  00166A  EF39  F00B         	goto	u3141
  7326  00166E  EF3B  F00B         	goto	u3140
  7327  001672                     u3141:
  7328  001672  EF66  F00B         	goto	l3140
  7329  001676                     u3140:
  7330  001676  0E01               	movlw	1
  7331  001678  260F               	addwf	___fladd@b^0,f,c
  7332  00167A  0E00               	movlw	0
  7333  00167C  2210               	addwfc	(___fladd@b+1)^0,f,c
  7334  00167E  2211               	addwfc	(___fladd@b+2)^0,f,c
  7335  001680  2212               	addwfc	(___fladd@b+3)^0,f,c
  7336  001682  A012               	btfss	(___fladd@b+3)^0,0,c
  7337  001684  EF46  F00B         	goto	u3151
  7338  001688  EF48  F00B         	goto	u3150
  7339  00168C                     u3151:
  7340  00168C  EF66  F00B         	goto	l3140
  7341  001690                     u3150:
  7342  001690  C00F  F017         	movff	___fladd@b,??___fladd
  7343  001694  C010  F018         	movff	___fladd@b+1,??___fladd+1
  7344  001698  C011  F019         	movff	___fladd@b+2,??___fladd+2
  7345  00169C  C012  F01A         	movff	___fladd@b+3,??___fladd+3
  7346  0016A0  341A               	rlcf	(??___fladd+3)^0,w,c
  7347  0016A2  321A               	rrcf	(??___fladd+3)^0,f,c
  7348  0016A4  3219               	rrcf	(??___fladd+2)^0,f,c
  7349  0016A6  3218               	rrcf	(??___fladd+1)^0,f,c
  7350  0016A8  3217               	rrcf	??___fladd^0,f,c
  7351  0016AA  C017  F00F         	movff	??___fladd,___fladd@b
  7352  0016AE  C018  F010         	movff	??___fladd+1,___fladd@b+1
  7353  0016B2  C019  F011         	movff	??___fladd+2,___fladd@b+2
  7354  0016B6  C01A  F012         	movff	??___fladd+3,___fladd@b+3
  7355  0016BA  281D               	incf	___fladd@bexp^0,w,c
  7356  0016BC  B4D8               	btfsc	status,2,c
  7357  0016BE  EF63  F00B         	goto	u3161
  7358  0016C2  EF65  F00B         	goto	u3160
  7359  0016C6                     u3161:
  7360  0016C6  EF66  F00B         	goto	l3140
  7361  0016CA                     u3160:
  7362  0016CA  2A1D               	incf	___fladd@bexp^0,f,c
  7363  0016CC                     l3140:
  7364  0016CC  281D               	incf	___fladd@bexp^0,w,c
  7365  0016CE  B4D8               	btfsc	status,2,c
  7366  0016D0  EF6C  F00B         	goto	u3171
  7367  0016D4  EF6E  F00B         	goto	u3170
  7368  0016D8                     u3171:
  7369  0016D8  EF76  F00B         	goto	l3144
  7370  0016DC                     u3170:
  7371  0016DC  501D               	movf	___fladd@bexp^0,w,c
  7372  0016DE  A4D8               	btfss	status,2,c
  7373  0016E0  EF74  F00B         	goto	u3181
  7374  0016E4  EF76  F00B         	goto	u3180
  7375  0016E8                     u3181:
  7376  0016E8  EF88  F00B         	goto	l3148
  7377  0016EC                     u3180:
  7378  0016EC                     l3144:
  7379  0016EC  0E00               	movlw	0
  7380  0016EE  6E0F               	movwf	___fladd@b^0,c
  7381  0016F0  0E00               	movlw	0
  7382  0016F2  6E10               	movwf	(___fladd@b+1)^0,c
  7383  0016F4  0E00               	movlw	0
  7384  0016F6  6E11               	movwf	(___fladd@b+2)^0,c
  7385  0016F8  0E00               	movlw	0
  7386  0016FA  6E12               	movwf	(___fladd@b+3)^0,c
  7387  0016FC  501D               	movf	___fladd@bexp^0,w,c
  7388  0016FE  A4D8               	btfss	status,2,c
  7389  001700  EF84  F00B         	goto	u3191
  7390  001704  EF86  F00B         	goto	u3190
  7391  001708                     u3191:
  7392  001708  EF88  F00B         	goto	l3148
  7393  00170C                     u3190:
  7394  00170C  0E00               	movlw	0
  7395  00170E  6E1B               	movwf	___fladd@signs^0,c
  7396  001710                     l3148:
  7397  001710  A01D               	btfss	___fladd@bexp^0,0,c
  7398  001712  EF8D  F00B         	goto	u3201
  7399  001716  EF8F  F00B         	goto	u3200
  7400  00171A                     u3201:
  7401  00171A  EF92  F00B         	goto	l3152
  7402  00171E                     u3200:
  7403  00171E  8E11               	bsf	(___fladd@b+2)^0,7,c
  7404  001720  EF93  F00B         	goto	l3154
  7405  001724                     l3152:
  7406  001724  9E11               	bcf	(___fladd@b+2)^0,7,c
  7407  001726                     l3154:
  7408  001726  90D8               	bcf	status,0,c
  7409  001728  301D               	rrcf	___fladd@bexp^0,w,c
  7410  00172A  6E12               	movwf	(___fladd@b+3)^0,c
  7411  00172C  AE1B               	btfss	___fladd@signs^0,7,c
  7412  00172E  EF9B  F00B         	goto	u3211
  7413  001732  EF9D  F00B         	goto	u3210
  7414  001736                     u3211:
  7415  001736  EF9E  F00B         	goto	l3160
  7416  00173A                     u3210:
  7417  00173A  8E12               	bsf	(___fladd@b+3)^0,7,c
  7418  00173C                     l3160:
  7419  00173C  C00F  F00F         	movff	___fladd@b,?___fladd
  7420  001740  C010  F010         	movff	___fladd@b+1,?___fladd+1
  7421  001744  C011  F011         	movff	___fladd@b+2,?___fladd+2
  7422  001748  C012  F012         	movff	___fladd@b+3,?___fladd+3
  7423  00174C                     l733:
  7424  00174C  0012               	return		;funcret
  7425  00174E                     __end_of___fladd:
  7426                           	callstack 0
  7427                           
  7428 ;; *************** function ___flneg *****************
  7429 ;; Defined at:
  7430 ;;		line 15 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\flneg.c"
  7431 ;; Parameters:    Size  Location     Type
  7432 ;;  f1              4    0[COMRAM] unsigned char 
  7433 ;; Auto vars:     Size  Location     Type
  7434 ;;		None
  7435 ;; Return value:  Size  Location     Type
  7436 ;;                  4    0[COMRAM] unsigned char 
  7437 ;; Registers used:
  7438 ;;		wreg, status,2, status,0
  7439 ;; Tracked objects:
  7440 ;;		On entry : 0/0
  7441 ;;		On exit  : 0/0
  7442 ;;		Unchanged: 0/0
  7443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7444 ;;      Params:         4       0       0       0       0       0       0
  7445 ;;      Locals:         0       0       0       0       0       0       0
  7446 ;;      Temps:          0       0       0       0       0       0       0
  7447 ;;      Totals:         4       0       0       0       0       0       0
  7448 ;;Total ram usage:        4 bytes
  7449 ;; Hardware stack levels used:    1
  7450 ;; This function calls:
  7451 ;;		Nothing
  7452 ;; This function is called by:
  7453 ;;		_efgtoa
  7454 ;; This function uses a non-reentrant model
  7455 ;;
  7456                           
  7457                           	psect	text24
  7458  003E24                     __ptext24:
  7459                           	callstack 0
  7460  003E24                     ___flneg:
  7461                           	callstack 25
  7462  003E24  5001               	movf	___flneg@f1^0,w,c
  7463  003E26  1002               	iorwf	(___flneg@f1+1)^0,w,c
  7464  003E28  1003               	iorwf	(___flneg@f1+2)^0,w,c
  7465  003E2A  1004               	iorwf	(___flneg@f1+3)^0,w,c
  7466  003E2C  B4D8               	btfsc	status,2,c
  7467  003E2E  EF1B  F01F         	goto	u3881
  7468  003E32  EF1D  F01F         	goto	u3880
  7469  003E36                     u3881:
  7470  003E36  EF25  F01F         	goto	l3588
  7471  003E3A                     u3880:
  7472  003E3A  0E00               	movlw	0
  7473  003E3C  1A01               	xorwf	___flneg@f1^0,f,c
  7474  003E3E  0E00               	movlw	0
  7475  003E40  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  7476  003E42  0E00               	movlw	0
  7477  003E44  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  7478  003E46  0E80               	movlw	128
  7479  003E48  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  7480  003E4A                     l3588:
  7481  003E4A  C001  F001         	movff	___flneg@f1,?___flneg
  7482  003E4E  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  7483  003E52  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  7484  003E56  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  7485  003E5A  0012               	return		;funcret
  7486  003E5C                     __end_of___flneg:
  7487                           	callstack 0
  7488                           
  7489 ;; *************** function ___flmul *****************
  7490 ;; Defined at:
  7491 ;;		line 8 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
  7492 ;; Parameters:    Size  Location     Type
  7493 ;;  b               4    0[COMRAM] unsigned char 
  7494 ;;  a               4    4[COMRAM] unsigned char 
  7495 ;; Auto vars:     Size  Location     Type
  7496 ;;  prod            4   19[COMRAM] struct .
  7497 ;;  grs             4   13[COMRAM] unsigned long 
  7498 ;;  temp            2   23[COMRAM] struct .
  7499 ;;  bexp            1   18[COMRAM] unsigned char 
  7500 ;;  aexp            1   17[COMRAM] unsigned char 
  7501 ;;  sign            1   12[COMRAM] unsigned char 
  7502 ;; Return value:  Size  Location     Type
  7503 ;;                  4    0[COMRAM] unsigned char 
  7504 ;; Registers used:
  7505 ;;		wreg, status,2, status,0, prodl, prodh
  7506 ;; Tracked objects:
  7507 ;;		On entry : 0/0
  7508 ;;		On exit  : 0/0
  7509 ;;		Unchanged: 0/0
  7510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7511 ;;      Params:         8       0       0       0       0       0       0
  7512 ;;      Locals:        13       0       0       0       0       0       0
  7513 ;;      Temps:          4       0       0       0       0       0       0
  7514 ;;      Totals:        25       0       0       0       0       0       0
  7515 ;;Total ram usage:       25 bytes
  7516 ;; Hardware stack levels used:    1
  7517 ;; This function calls:
  7518 ;;		Nothing
  7519 ;; This function is called by:
  7520 ;;		_efgtoa
  7521 ;; This function uses a non-reentrant model
  7522 ;;
  7523                           
  7524                           	psect	text25
  7525  001BB8                     __ptext25:
  7526                           	callstack 0
  7527  001BB8                     ___flmul:
  7528                           	callstack 25
  7529  001BB8  5004               	movf	(___flmul@b+3)^0,w,c
  7530  001BBA  0B80               	andlw	128
  7531  001BBC  6E0D               	movwf	___flmul@sign^0,c
  7532  001BBE  5004               	movf	(___flmul@b+3)^0,w,c
  7533  001BC0  2404               	addwf	(___flmul@b+3)^0,w,c
  7534  001BC2  6E13               	movwf	___flmul@bexp^0,c
  7535  001BC4  AE03               	btfss	(___flmul@b+2)^0,7,c
  7536  001BC6  EFE7  F00D         	goto	u3491
  7537  001BCA  EFE9  F00D         	goto	u3490
  7538  001BCE                     u3491:
  7539  001BCE  EFEA  F00D         	goto	l3336
  7540  001BD2                     u3490:
  7541  001BD2  8013               	bsf	___flmul@bexp^0,0,c
  7542  001BD4                     l3336:
  7543  001BD4  5013               	movf	___flmul@bexp^0,w,c
  7544  001BD6  B4D8               	btfsc	status,2,c
  7545  001BD8  EFF0  F00D         	goto	u3501
  7546  001BDC  EFF2  F00D         	goto	u3500
  7547  001BE0                     u3501:
  7548  001BE0  EF05  F00E         	goto	l3344
  7549  001BE4                     u3500:
  7550  001BE4  2813               	incf	___flmul@bexp^0,w,c
  7551  001BE6  A4D8               	btfss	status,2,c
  7552  001BE8  EFF8  F00D         	goto	u3511
  7553  001BEC  EFFA  F00D         	goto	u3510
  7554  001BF0                     u3511:
  7555  001BF0  EF02  F00E         	goto	l3342
  7556  001BF4                     u3510:
  7557  001BF4  0E00               	movlw	0
  7558  001BF6  6E01               	movwf	___flmul@b^0,c
  7559  001BF8  0E00               	movlw	0
  7560  001BFA  6E02               	movwf	(___flmul@b+1)^0,c
  7561  001BFC  0E00               	movlw	0
  7562  001BFE  6E03               	movwf	(___flmul@b+2)^0,c
  7563  001C00  0E00               	movlw	0
  7564  001C02  6E04               	movwf	(___flmul@b+3)^0,c
  7565  001C04                     l3342:
  7566  001C04  8E03               	bsf	(___flmul@b+2)^0,7,c
  7567  001C06  EF0D  F00E         	goto	l3346
  7568  001C0A                     l3344:
  7569  001C0A  0E00               	movlw	0
  7570  001C0C  6E01               	movwf	___flmul@b^0,c
  7571  001C0E  0E00               	movlw	0
  7572  001C10  6E02               	movwf	(___flmul@b+1)^0,c
  7573  001C12  0E00               	movlw	0
  7574  001C14  6E03               	movwf	(___flmul@b+2)^0,c
  7575  001C16  0E00               	movlw	0
  7576  001C18  6E04               	movwf	(___flmul@b+3)^0,c
  7577  001C1A                     l3346:
  7578  001C1A  5008               	movf	(___flmul@a+3)^0,w,c
  7579  001C1C  0B80               	andlw	128
  7580  001C1E  1A0D               	xorwf	___flmul@sign^0,f,c
  7581  001C20  5008               	movf	(___flmul@a+3)^0,w,c
  7582  001C22  2408               	addwf	(___flmul@a+3)^0,w,c
  7583  001C24  6E12               	movwf	___flmul@aexp^0,c
  7584  001C26  AE07               	btfss	(___flmul@a+2)^0,7,c
  7585  001C28  EF18  F00E         	goto	u3521
  7586  001C2C  EF1A  F00E         	goto	u3520
  7587  001C30                     u3521:
  7588  001C30  EF1B  F00E         	goto	l3354
  7589  001C34                     u3520:
  7590  001C34  8012               	bsf	___flmul@aexp^0,0,c
  7591  001C36                     l3354:
  7592  001C36  5012               	movf	___flmul@aexp^0,w,c
  7593  001C38  B4D8               	btfsc	status,2,c
  7594  001C3A  EF21  F00E         	goto	u3531
  7595  001C3E  EF23  F00E         	goto	u3530
  7596  001C42                     u3531:
  7597  001C42  EF36  F00E         	goto	l3362
  7598  001C46                     u3530:
  7599  001C46  2812               	incf	___flmul@aexp^0,w,c
  7600  001C48  A4D8               	btfss	status,2,c
  7601  001C4A  EF29  F00E         	goto	u3541
  7602  001C4E  EF2B  F00E         	goto	u3540
  7603  001C52                     u3541:
  7604  001C52  EF33  F00E         	goto	l3360
  7605  001C56                     u3540:
  7606  001C56  0E00               	movlw	0
  7607  001C58  6E05               	movwf	___flmul@a^0,c
  7608  001C5A  0E00               	movlw	0
  7609  001C5C  6E06               	movwf	(___flmul@a+1)^0,c
  7610  001C5E  0E00               	movlw	0
  7611  001C60  6E07               	movwf	(___flmul@a+2)^0,c
  7612  001C62  0E00               	movlw	0
  7613  001C64  6E08               	movwf	(___flmul@a+3)^0,c
  7614  001C66                     l3360:
  7615  001C66  8E07               	bsf	(___flmul@a+2)^0,7,c
  7616  001C68  EF3E  F00E         	goto	l810
  7617  001C6C                     l3362:
  7618  001C6C  0E00               	movlw	0
  7619  001C6E  6E05               	movwf	___flmul@a^0,c
  7620  001C70  0E00               	movlw	0
  7621  001C72  6E06               	movwf	(___flmul@a+1)^0,c
  7622  001C74  0E00               	movlw	0
  7623  001C76  6E07               	movwf	(___flmul@a+2)^0,c
  7624  001C78  0E00               	movlw	0
  7625  001C7A  6E08               	movwf	(___flmul@a+3)^0,c
  7626  001C7C                     l810:
  7627  001C7C  5012               	movf	___flmul@aexp^0,w,c
  7628  001C7E  B4D8               	btfsc	status,2,c
  7629  001C80  EF44  F00E         	goto	u3551
  7630  001C84  EF46  F00E         	goto	u3550
  7631  001C88                     u3551:
  7632  001C88  EF4E  F00E         	goto	l3366
  7633  001C8C                     u3550:
  7634  001C8C  5013               	movf	___flmul@bexp^0,w,c
  7635  001C8E  A4D8               	btfss	status,2,c
  7636  001C90  EF4C  F00E         	goto	u3561
  7637  001C94  EF4E  F00E         	goto	u3560
  7638  001C98                     u3561:
  7639  001C98  EF58  F00E         	goto	l3370
  7640  001C9C                     u3560:
  7641  001C9C                     l3366:
  7642  001C9C  0E00               	movlw	0
  7643  001C9E  6E01               	movwf	?___flmul^0,c
  7644  001CA0  0E00               	movlw	0
  7645  001CA2  6E02               	movwf	(?___flmul+1)^0,c
  7646  001CA4  0E00               	movlw	0
  7647  001CA6  6E03               	movwf	(?___flmul+2)^0,c
  7648  001CA8  0E00               	movlw	0
  7649  001CAA  6E04               	movwf	(?___flmul+3)^0,c
  7650  001CAC  EFF0  F00F         	goto	l814
  7651  001CB0                     l3370:
  7652  001CB0  5007               	movf	(___flmul@a+2)^0,w,c
  7653  001CB2  0201               	mulwf	___flmul@b^0,c
  7654  001CB4  CFF3 F018          	movff	prodl,___flmul@temp
  7655  001CB8  CFF4 F019          	movff	prodh,___flmul@temp+1
  7656  001CBC  5018               	movf	___flmul@temp^0,w,c
  7657  001CBE  6E0E               	movwf	___flmul@grs^0,c
  7658  001CC0  6A0F               	clrf	(___flmul@grs+1)^0,c
  7659  001CC2  6A10               	clrf	(___flmul@grs+2)^0,c
  7660  001CC4  6A11               	clrf	(___flmul@grs+3)^0,c
  7661  001CC6  5019               	movf	(___flmul@temp+1)^0,w,c
  7662  001CC8  6E14               	movwf	___flmul@prod^0,c
  7663  001CCA  6A15               	clrf	(___flmul@prod+1)^0,c
  7664  001CCC  6A16               	clrf	(___flmul@prod+2)^0,c
  7665  001CCE  6A17               	clrf	(___flmul@prod+3)^0,c
  7666  001CD0  5006               	movf	(___flmul@a+1)^0,w,c
  7667  001CD2  0202               	mulwf	(___flmul@b+1)^0,c
  7668  001CD4  CFF3 F018          	movff	prodl,___flmul@temp
  7669  001CD8  CFF4 F019          	movff	prodh,___flmul@temp+1
  7670  001CDC  5018               	movf	___flmul@temp^0,w,c
  7671  001CDE  260E               	addwf	___flmul@grs^0,f,c
  7672  001CE0  0E00               	movlw	0
  7673  001CE2  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7674  001CE4  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7675  001CE6  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7676  001CE8  5019               	movf	(___flmul@temp+1)^0,w,c
  7677  001CEA  2614               	addwf	___flmul@prod^0,f,c
  7678  001CEC  0E00               	movlw	0
  7679  001CEE  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7680  001CF0  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7681  001CF2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7682  001CF4  5005               	movf	___flmul@a^0,w,c
  7683  001CF6  0203               	mulwf	(___flmul@b+2)^0,c
  7684  001CF8  CFF3 F018          	movff	prodl,___flmul@temp
  7685  001CFC  CFF4 F019          	movff	prodh,___flmul@temp+1
  7686  001D00  5018               	movf	___flmul@temp^0,w,c
  7687  001D02  260E               	addwf	___flmul@grs^0,f,c
  7688  001D04  0E00               	movlw	0
  7689  001D06  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7690  001D08  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7691  001D0A  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7692  001D0C  5019               	movf	(___flmul@temp+1)^0,w,c
  7693  001D0E  2614               	addwf	___flmul@prod^0,f,c
  7694  001D10  0E00               	movlw	0
  7695  001D12  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7696  001D14  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7697  001D16  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7698  001D18  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7699  001D1C  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7700  001D20  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7701  001D24  6A0E               	clrf	___flmul@grs^0,c
  7702  001D26  5005               	movf	___flmul@a^0,w,c
  7703  001D28  0202               	mulwf	(___flmul@b+1)^0,c
  7704  001D2A  CFF3 F018          	movff	prodl,___flmul@temp
  7705  001D2E  CFF4 F019          	movff	prodh,___flmul@temp+1
  7706  001D32  5018               	movf	___flmul@temp^0,w,c
  7707  001D34  260E               	addwf	___flmul@grs^0,f,c
  7708  001D36  5019               	movf	(___flmul@temp+1)^0,w,c
  7709  001D38  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7710  001D3A  0E00               	movlw	0
  7711  001D3C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7712  001D3E  0E00               	movlw	0
  7713  001D40  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7714  001D42  5006               	movf	(___flmul@a+1)^0,w,c
  7715  001D44  0201               	mulwf	___flmul@b^0,c
  7716  001D46  CFF3 F018          	movff	prodl,___flmul@temp
  7717  001D4A  CFF4 F019          	movff	prodh,___flmul@temp+1
  7718  001D4E  5018               	movf	___flmul@temp^0,w,c
  7719  001D50  260E               	addwf	___flmul@grs^0,f,c
  7720  001D52  5019               	movf	(___flmul@temp+1)^0,w,c
  7721  001D54  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7722  001D56  0E00               	movlw	0
  7723  001D58  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7724  001D5A  0E00               	movlw	0
  7725  001D5C  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7726  001D5E  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7727  001D62  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7728  001D66  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7729  001D6A  6A0E               	clrf	___flmul@grs^0,c
  7730  001D6C  5005               	movf	___flmul@a^0,w,c
  7731  001D6E  0201               	mulwf	___flmul@b^0,c
  7732  001D70  CFF3 F018          	movff	prodl,___flmul@temp
  7733  001D74  CFF4 F019          	movff	prodh,___flmul@temp+1
  7734  001D78  5018               	movf	___flmul@temp^0,w,c
  7735  001D7A  260E               	addwf	___flmul@grs^0,f,c
  7736  001D7C  5019               	movf	(___flmul@temp+1)^0,w,c
  7737  001D7E  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7738  001D80  0E00               	movlw	0
  7739  001D82  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7740  001D84  0E00               	movlw	0
  7741  001D86  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7742  001D88  5007               	movf	(___flmul@a+2)^0,w,c
  7743  001D8A  0202               	mulwf	(___flmul@b+1)^0,c
  7744  001D8C  CFF3 F018          	movff	prodl,___flmul@temp
  7745  001D90  CFF4 F019          	movff	prodh,___flmul@temp+1
  7746  001D94  5018               	movf	___flmul@temp^0,w,c
  7747  001D96  2614               	addwf	___flmul@prod^0,f,c
  7748  001D98  5019               	movf	(___flmul@temp+1)^0,w,c
  7749  001D9A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7750  001D9C  0E00               	movlw	0
  7751  001D9E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7752  001DA0  0E00               	movlw	0
  7753  001DA2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7754  001DA4  5006               	movf	(___flmul@a+1)^0,w,c
  7755  001DA6  0203               	mulwf	(___flmul@b+2)^0,c
  7756  001DA8  CFF3 F018          	movff	prodl,___flmul@temp
  7757  001DAC  CFF4 F019          	movff	prodh,___flmul@temp+1
  7758  001DB0  5018               	movf	___flmul@temp^0,w,c
  7759  001DB2  2614               	addwf	___flmul@prod^0,f,c
  7760  001DB4  5019               	movf	(___flmul@temp+1)^0,w,c
  7761  001DB6  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7762  001DB8  0E00               	movlw	0
  7763  001DBA  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7764  001DBC  0E00               	movlw	0
  7765  001DBE  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7766  001DC0  5007               	movf	(___flmul@a+2)^0,w,c
  7767  001DC2  0203               	mulwf	(___flmul@b+2)^0,c
  7768  001DC4  CFF3 F018          	movff	prodl,___flmul@temp
  7769  001DC8  CFF4 F019          	movff	prodh,___flmul@temp+1
  7770  001DCC  5018               	movf	___flmul@temp^0,w,c
  7771  001DCE  6E09               	movwf	??___flmul^0,c
  7772  001DD0  5019               	movf	(___flmul@temp+1)^0,w,c
  7773  001DD2  6E0A               	movwf	(??___flmul+1)^0,c
  7774  001DD4  6A0B               	clrf	(??___flmul+2)^0,c
  7775  001DD6  6A0C               	clrf	(??___flmul+3)^0,c
  7776  001DD8  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  7777  001DDC  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  7778  001DE0  C009  F00A         	movff	??___flmul,??___flmul+1
  7779  001DE4  6A09               	clrf	??___flmul^0,c
  7780  001DE6  5009               	movf	??___flmul^0,w,c
  7781  001DE8  2614               	addwf	___flmul@prod^0,f,c
  7782  001DEA  500A               	movf	(??___flmul+1)^0,w,c
  7783  001DEC  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7784  001DEE  500B               	movf	(??___flmul+2)^0,w,c
  7785  001DF0  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7786  001DF2  500C               	movf	(??___flmul+3)^0,w,c
  7787  001DF4  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7788  001DF6  C00E  F009         	movff	___flmul@grs,??___flmul
  7789  001DFA  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  7790  001DFE  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  7791  001E02  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  7792  001E06  0E19               	movlw	25
  7793  001E08  EF0B  F00F         	goto	u3570
  7794  001E0C                     u3575:
  7795  001E0C  90D8               	bcf	status,0,c
  7796  001E0E  320C               	rrcf	(??___flmul+3)^0,f,c
  7797  001E10  320B               	rrcf	(??___flmul+2)^0,f,c
  7798  001E12  320A               	rrcf	(??___flmul+1)^0,f,c
  7799  001E14  3209               	rrcf	??___flmul^0,f,c
  7800  001E16                     u3570:
  7801  001E16  2EE8               	decfsz	wreg,f,c
  7802  001E18  EF06  F00F         	goto	u3575
  7803  001E1C  5009               	movf	??___flmul^0,w,c
  7804  001E1E  2614               	addwf	___flmul@prod^0,f,c
  7805  001E20  500A               	movf	(??___flmul+1)^0,w,c
  7806  001E22  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7807  001E24  500B               	movf	(??___flmul+2)^0,w,c
  7808  001E26  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7809  001E28  500C               	movf	(??___flmul+3)^0,w,c
  7810  001E2A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7811  001E2C  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7812  001E30  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7813  001E34  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7814  001E38  6A0E               	clrf	___flmul@grs^0,c
  7815  001E3A  5012               	movf	___flmul@aexp^0,w,c
  7816  001E3C  C013  F009         	movff	___flmul@bexp,??___flmul
  7817  001E40  6A0A               	clrf	(??___flmul+1)^0,c
  7818  001E42  2609               	addwf	??___flmul^0,f,c
  7819  001E44  0E00               	movlw	0
  7820  001E46  220A               	addwfc	(??___flmul+1)^0,f,c
  7821  001E48  0E82               	movlw	130
  7822  001E4A  2409               	addwf	??___flmul^0,w,c
  7823  001E4C  6E18               	movwf	___flmul@temp^0,c
  7824  001E4E  0EFF               	movlw	255
  7825  001E50  200A               	addwfc	(??___flmul+1)^0,w,c
  7826  001E52  6E19               	movwf	(___flmul@temp+1)^0,c
  7827  001E54  EF41  F00F         	goto	l3418
  7828  001E58                     l3412:
  7829  001E58  90D8               	bcf	status,0,c
  7830  001E5A  3614               	rlcf	___flmul@prod^0,f,c
  7831  001E5C  3615               	rlcf	(___flmul@prod+1)^0,f,c
  7832  001E5E  3616               	rlcf	(___flmul@prod+2)^0,f,c
  7833  001E60  3617               	rlcf	(___flmul@prod+3)^0,f,c
  7834  001E62  AE11               	btfss	(___flmul@grs+3)^0,7,c
  7835  001E64  EF36  F00F         	goto	u3581
  7836  001E68  EF38  F00F         	goto	u3580
  7837  001E6C                     u3581:
  7838  001E6C  EF39  F00F         	goto	l817
  7839  001E70                     u3580:
  7840  001E70  8014               	bsf	___flmul@prod^0,0,c
  7841  001E72                     l817:
  7842  001E72  90D8               	bcf	status,0,c
  7843  001E74  360E               	rlcf	___flmul@grs^0,f,c
  7844  001E76  360F               	rlcf	(___flmul@grs+1)^0,f,c
  7845  001E78  3610               	rlcf	(___flmul@grs+2)^0,f,c
  7846  001E7A  3611               	rlcf	(___flmul@grs+3)^0,f,c
  7847  001E7C  0618               	decf	___flmul@temp^0,f,c
  7848  001E7E  A0D8               	btfss	status,0,c
  7849  001E80  0619               	decf	(___flmul@temp+1)^0,f,c
  7850  001E82                     l3418:
  7851  001E82  AE16               	btfss	(___flmul@prod+2)^0,7,c
  7852  001E84  EF46  F00F         	goto	u3591
  7853  001E88  EF48  F00F         	goto	u3590
  7854  001E8C                     u3591:
  7855  001E8C  EF2C  F00F         	goto	l3412
  7856  001E90                     u3590:
  7857  001E90  0E00               	movlw	0
  7858  001E92  6E12               	movwf	___flmul@aexp^0,c
  7859  001E94  AE11               	btfss	(___flmul@grs+3)^0,7,c
  7860  001E96  EF4F  F00F         	goto	u3601
  7861  001E9A  EF51  F00F         	goto	u3600
  7862  001E9E                     u3601:
  7863  001E9E  EF75  F00F         	goto	l819
  7864  001EA2                     u3600:
  7865  001EA2  0EFF               	movlw	255
  7866  001EA4  140E               	andwf	___flmul@grs^0,w,c
  7867  001EA6  6E09               	movwf	??___flmul^0,c
  7868  001EA8  0EFF               	movlw	255
  7869  001EAA  140F               	andwf	(___flmul@grs+1)^0,w,c
  7870  001EAC  6E0A               	movwf	(??___flmul+1)^0,c
  7871  001EAE  0EFF               	movlw	255
  7872  001EB0  1410               	andwf	(___flmul@grs+2)^0,w,c
  7873  001EB2  6E0B               	movwf	(??___flmul+2)^0,c
  7874  001EB4  0E7F               	movlw	127
  7875  001EB6  1411               	andwf	(___flmul@grs+3)^0,w,c
  7876  001EB8  6E0C               	movwf	(??___flmul+3)^0,c
  7877  001EBA  5009               	movf	??___flmul^0,w,c
  7878  001EBC  100A               	iorwf	(??___flmul+1)^0,w,c
  7879  001EBE  100B               	iorwf	(??___flmul+2)^0,w,c
  7880  001EC0  100C               	iorwf	(??___flmul+3)^0,w,c
  7881  001EC2  B4D8               	btfsc	status,2,c
  7882  001EC4  EF66  F00F         	goto	u3611
  7883  001EC8  EF68  F00F         	goto	u3610
  7884  001ECC                     u3611:
  7885  001ECC  EF6C  F00F         	goto	l820
  7886  001ED0                     u3610:
  7887  001ED0                     l3426:
  7888  001ED0  0E01               	movlw	1
  7889  001ED2  6E12               	movwf	___flmul@aexp^0,c
  7890  001ED4  EF75  F00F         	goto	l819
  7891  001ED8                     l820:
  7892  001ED8  A014               	btfss	___flmul@prod^0,0,c
  7893  001EDA  EF71  F00F         	goto	u3621
  7894  001EDE  EF73  F00F         	goto	u3620
  7895  001EE2                     u3621:
  7896  001EE2  EF75  F00F         	goto	l819
  7897  001EE6                     u3620:
  7898  001EE6  EF68  F00F         	goto	l3426
  7899  001EEA                     l819:
  7900  001EEA  5012               	movf	___flmul@aexp^0,w,c
  7901  001EEC  B4D8               	btfsc	status,2,c
  7902  001EEE  EF7B  F00F         	goto	u3631
  7903  001EF2  EF7D  F00F         	goto	u3630
  7904  001EF6                     u3631:
  7905  001EF6  EFA1  F00F         	goto	l3438
  7906  001EFA                     u3630:
  7907  001EFA  0E01               	movlw	1
  7908  001EFC  2614               	addwf	___flmul@prod^0,f,c
  7909  001EFE  0E00               	movlw	0
  7910  001F00  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7911  001F02  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7912  001F04  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7913  001F06  A017               	btfss	(___flmul@prod+3)^0,0,c
  7914  001F08  EF88  F00F         	goto	u3641
  7915  001F0C  EF8A  F00F         	goto	u3640
  7916  001F10                     u3641:
  7917  001F10  EFA1  F00F         	goto	l3438
  7918  001F14                     u3640:
  7919  001F14  C014  F009         	movff	___flmul@prod,??___flmul
  7920  001F18  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  7921  001F1C  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  7922  001F20  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  7923  001F24  340C               	rlcf	(??___flmul+3)^0,w,c
  7924  001F26  320C               	rrcf	(??___flmul+3)^0,f,c
  7925  001F28  320B               	rrcf	(??___flmul+2)^0,f,c
  7926  001F2A  320A               	rrcf	(??___flmul+1)^0,f,c
  7927  001F2C  3209               	rrcf	??___flmul^0,f,c
  7928  001F2E  C009  F014         	movff	??___flmul,___flmul@prod
  7929  001F32  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  7930  001F36  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  7931  001F3A  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  7932  001F3E  4A18               	infsnz	___flmul@temp^0,f,c
  7933  001F40  2A19               	incf	(___flmul@temp+1)^0,f,c
  7934  001F42                     l3438:
  7935  001F42  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  7936  001F44  EFAC  F00F         	goto	u3651
  7937  001F48  5019               	movf	(___flmul@temp+1)^0,w,c
  7938  001F4A  E108               	bnz	u3650
  7939  001F4C  2818               	incf	___flmul@temp^0,w,c
  7940  001F4E  A0D8               	btfss	status,0,c
  7941  001F50  EFAC  F00F         	goto	u3651
  7942  001F54  EFAE  F00F         	goto	u3650
  7943  001F58                     u3651:
  7944  001F58  EFB8  F00F         	goto	l3442
  7945  001F5C                     u3650:
  7946  001F5C  0E00               	movlw	0
  7947  001F5E  6E14               	movwf	___flmul@prod^0,c
  7948  001F60  0E00               	movlw	0
  7949  001F62  6E15               	movwf	(___flmul@prod+1)^0,c
  7950  001F64  0E80               	movlw	128
  7951  001F66  6E16               	movwf	(___flmul@prod+2)^0,c
  7952  001F68  0E7F               	movlw	127
  7953  001F6A  6E17               	movwf	(___flmul@prod+3)^0,c
  7954  001F6C  EFE6  F00F         	goto	l3454
  7955  001F70                     l3442:
  7956  001F70  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  7957  001F72  EFC5  F00F         	goto	u3660
  7958  001F76  5019               	movf	(___flmul@temp+1)^0,w,c
  7959  001F78  E106               	bnz	u3661
  7960  001F7A  0418               	decf	___flmul@temp^0,w,c
  7961  001F7C  B0D8               	btfsc	status,0,c
  7962  001F7E  EFC3  F00F         	goto	u3661
  7963  001F82  EFC5  F00F         	goto	u3660
  7964  001F86                     u3661:
  7965  001F86  EFD1  F00F         	goto	l827
  7966  001F8A                     u3660:
  7967  001F8A  0E00               	movlw	0
  7968  001F8C  6E14               	movwf	___flmul@prod^0,c
  7969  001F8E  0E00               	movlw	0
  7970  001F90  6E15               	movwf	(___flmul@prod+1)^0,c
  7971  001F92  0E00               	movlw	0
  7972  001F94  6E16               	movwf	(___flmul@prod+2)^0,c
  7973  001F96  0E00               	movlw	0
  7974  001F98  6E17               	movwf	(___flmul@prod+3)^0,c
  7975  001F9A  0E00               	movlw	0
  7976  001F9C  6E0D               	movwf	___flmul@sign^0,c
  7977  001F9E  EFE6  F00F         	goto	l3454
  7978  001FA2                     l827:
  7979  001FA2  C018  F013         	movff	___flmul@temp,___flmul@bexp
  7980  001FA6  0EFF               	movlw	255
  7981  001FA8  1614               	andwf	___flmul@prod^0,f,c
  7982  001FAA  0EFF               	movlw	255
  7983  001FAC  1615               	andwf	(___flmul@prod+1)^0,f,c
  7984  001FAE  0E7F               	movlw	127
  7985  001FB0  1616               	andwf	(___flmul@prod+2)^0,f,c
  7986  001FB2  0E00               	movlw	0
  7987  001FB4  1617               	andwf	(___flmul@prod+3)^0,f,c
  7988  001FB6  A013               	btfss	___flmul@bexp^0,0,c
  7989  001FB8  EFE0  F00F         	goto	u3671
  7990  001FBC  EFE2  F00F         	goto	u3670
  7991  001FC0                     u3671:
  7992  001FC0  EFE3  F00F         	goto	l3452
  7993  001FC4                     u3670:
  7994  001FC4  8E16               	bsf	(___flmul@prod+2)^0,7,c
  7995  001FC6                     l3452:
  7996  001FC6  90D8               	bcf	status,0,c
  7997  001FC8  3013               	rrcf	___flmul@bexp^0,w,c
  7998  001FCA  6E17               	movwf	(___flmul@prod+3)^0,c
  7999  001FCC                     l3454:
  8000  001FCC  500D               	movf	___flmul@sign^0,w,c
  8001  001FCE  1217               	iorwf	(___flmul@prod+3)^0,f,c
  8002  001FD0  C014  F001         	movff	___flmul@prod,?___flmul
  8003  001FD4  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  8004  001FD8  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  8005  001FDC  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  8006  001FE0                     l814:
  8007  001FE0  0012               	return		;funcret
  8008  001FE2                     __end_of___flmul:
  8009                           	callstack 0
  8010                           
  8011 ;; *************** function ___flge *****************
  8012 ;; Defined at:
  8013 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\flge.c"
  8014 ;; Parameters:    Size  Location     Type
  8015 ;;  ff1             4   30[COMRAM] unsigned char 
  8016 ;;  ff2             4   34[COMRAM] unsigned char 
  8017 ;; Auto vars:     Size  Location     Type
  8018 ;;		None
  8019 ;; Return value:  Size  Location     Type
  8020 ;;		None               void
  8021 ;; Registers used:
  8022 ;;		wreg, status,2, status,0
  8023 ;; Tracked objects:
  8024 ;;		On entry : 0/0
  8025 ;;		On exit  : 0/0
  8026 ;;		Unchanged: 0/0
  8027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8028 ;;      Params:         8       0       0       0       0       0       0
  8029 ;;      Locals:         0       0       0       0       0       0       0
  8030 ;;      Temps:          4       0       0       0       0       0       0
  8031 ;;      Totals:        12       0       0       0       0       0       0
  8032 ;;Total ram usage:       12 bytes
  8033 ;; Hardware stack levels used:    1
  8034 ;; This function calls:
  8035 ;;		Nothing
  8036 ;; This function is called by:
  8037 ;;		_encher_tanque
  8038 ;;		_efgtoa
  8039 ;; This function uses a non-reentrant model
  8040 ;;
  8041                           
  8042                           	psect	text26
  8043  0032C8                     __ptext26:
  8044                           	callstack 0
  8045  0032C8                     ___flge:
  8046                           	callstack 25
  8047  0032C8  0E00               	movlw	0
  8048  0032CA  141F               	andwf	___flge@ff1^0,w,c
  8049  0032CC  6E27               	movwf	??___flge^0,c
  8050  0032CE  0E00               	movlw	0
  8051  0032D0  1420               	andwf	(___flge@ff1+1)^0,w,c
  8052  0032D2  6E28               	movwf	(??___flge+1)^0,c
  8053  0032D4  0E80               	movlw	128
  8054  0032D6  1421               	andwf	(___flge@ff1+2)^0,w,c
  8055  0032D8  6E29               	movwf	(??___flge+2)^0,c
  8056  0032DA  0E7F               	movlw	127
  8057  0032DC  1422               	andwf	(___flge@ff1+3)^0,w,c
  8058  0032DE  6E2A               	movwf	(??___flge+3)^0,c
  8059  0032E0  5027               	movf	??___flge^0,w,c
  8060  0032E2  1028               	iorwf	(??___flge+1)^0,w,c
  8061  0032E4  1029               	iorwf	(??___flge+2)^0,w,c
  8062  0032E6  102A               	iorwf	(??___flge+3)^0,w,c
  8063  0032E8  A4D8               	btfss	status,2,c
  8064  0032EA  EF79  F019         	goto	u3831
  8065  0032EE  EF7B  F019         	goto	u3830
  8066  0032F2                     u3831:
  8067  0032F2  EF83  F019         	goto	l3566
  8068  0032F6                     u3830:
  8069  0032F6  0E00               	movlw	0
  8070  0032F8  6E1F               	movwf	___flge@ff1^0,c
  8071  0032FA  0E00               	movlw	0
  8072  0032FC  6E20               	movwf	(___flge@ff1+1)^0,c
  8073  0032FE  0E00               	movlw	0
  8074  003300  6E21               	movwf	(___flge@ff1+2)^0,c
  8075  003302  0E00               	movlw	0
  8076  003304  6E22               	movwf	(___flge@ff1+3)^0,c
  8077  003306                     l3566:
  8078  003306  0E00               	movlw	0
  8079  003308  1423               	andwf	___flge@ff2^0,w,c
  8080  00330A  6E27               	movwf	??___flge^0,c
  8081  00330C  0E00               	movlw	0
  8082  00330E  1424               	andwf	(___flge@ff2+1)^0,w,c
  8083  003310  6E28               	movwf	(??___flge+1)^0,c
  8084  003312  0E80               	movlw	128
  8085  003314  1425               	andwf	(___flge@ff2+2)^0,w,c
  8086  003316  6E29               	movwf	(??___flge+2)^0,c
  8087  003318  0E7F               	movlw	127
  8088  00331A  1426               	andwf	(___flge@ff2+3)^0,w,c
  8089  00331C  6E2A               	movwf	(??___flge+3)^0,c
  8090  00331E  5027               	movf	??___flge^0,w,c
  8091  003320  1028               	iorwf	(??___flge+1)^0,w,c
  8092  003322  1029               	iorwf	(??___flge+2)^0,w,c
  8093  003324  102A               	iorwf	(??___flge+3)^0,w,c
  8094  003326  A4D8               	btfss	status,2,c
  8095  003328  EF98  F019         	goto	u3841
  8096  00332C  EF9A  F019         	goto	u3840
  8097  003330                     u3841:
  8098  003330  EFA2  F019         	goto	l3570
  8099  003334                     u3840:
  8100  003334  0E00               	movlw	0
  8101  003336  6E23               	movwf	___flge@ff2^0,c
  8102  003338  0E00               	movlw	0
  8103  00333A  6E24               	movwf	(___flge@ff2+1)^0,c
  8104  00333C  0E00               	movlw	0
  8105  00333E  6E25               	movwf	(___flge@ff2+2)^0,c
  8106  003340  0E00               	movlw	0
  8107  003342  6E26               	movwf	(___flge@ff2+3)^0,c
  8108  003344                     l3570:
  8109  003344  AE22               	btfss	(___flge@ff1+3)^0,7,c
  8110  003346  EFA7  F019         	goto	u3851
  8111  00334A  EFA9  F019         	goto	u3850
  8112  00334E                     u3851:
  8113  00334E  EFB2  F019         	goto	l3574
  8114  003352                     u3850:
  8115  003352  6C1F               	negf	___flge@ff1^0,c
  8116  003354  1E20               	comf	(___flge@ff1+1)^0,f,c
  8117  003356  B0D8               	btfsc	status,0,c
  8118  003358  2A20               	incf	(___flge@ff1+1)^0,f,c
  8119  00335A  1E21               	comf	(___flge@ff1+2)^0,f,c
  8120  00335C  B0D8               	btfsc	status,0,c
  8121  00335E  2A21               	incf	(___flge@ff1+2)^0,f,c
  8122  003360  0E80               	movlw	128
  8123  003362  5622               	subfwb	(___flge@ff1+3)^0,f,c
  8124  003364                     l3574:
  8125  003364  AE26               	btfss	(___flge@ff2+3)^0,7,c
  8126  003366  EFB7  F019         	goto	u3861
  8127  00336A  EFB9  F019         	goto	u3860
  8128  00336E                     u3861:
  8129  00336E  EFC2  F019         	goto	l461
  8130  003372                     u3860:
  8131  003372  6C23               	negf	___flge@ff2^0,c
  8132  003374  1E24               	comf	(___flge@ff2+1)^0,f,c
  8133  003376  B0D8               	btfsc	status,0,c
  8134  003378  2A24               	incf	(___flge@ff2+1)^0,f,c
  8135  00337A  1E25               	comf	(___flge@ff2+2)^0,f,c
  8136  00337C  B0D8               	btfsc	status,0,c
  8137  00337E  2A25               	incf	(___flge@ff2+2)^0,f,c
  8138  003380  0E80               	movlw	128
  8139  003382  5626               	subfwb	(___flge@ff2+3)^0,f,c
  8140  003384                     l461:
  8141  003384  0E00               	movlw	0
  8142  003386  1A1F               	xorwf	___flge@ff1^0,f,c
  8143  003388  0E00               	movlw	0
  8144  00338A  1A20               	xorwf	(___flge@ff1+1)^0,f,c
  8145  00338C  0E00               	movlw	0
  8146  00338E  1A21               	xorwf	(___flge@ff1+2)^0,f,c
  8147  003390  0E80               	movlw	128
  8148  003392  1A22               	xorwf	(___flge@ff1+3)^0,f,c
  8149  003394  0E00               	movlw	0
  8150  003396  1A23               	xorwf	___flge@ff2^0,f,c
  8151  003398  0E00               	movlw	0
  8152  00339A  1A24               	xorwf	(___flge@ff2+1)^0,f,c
  8153  00339C  0E00               	movlw	0
  8154  00339E  1A25               	xorwf	(___flge@ff2+2)^0,f,c
  8155  0033A0  0E80               	movlw	128
  8156  0033A2  1A26               	xorwf	(___flge@ff2+3)^0,f,c
  8157  0033A4  5023               	movf	___flge@ff2^0,w,c
  8158  0033A6  5C1F               	subwf	___flge@ff1^0,w,c
  8159  0033A8  5024               	movf	(___flge@ff2+1)^0,w,c
  8160  0033AA  5820               	subwfb	(___flge@ff1+1)^0,w,c
  8161  0033AC  5025               	movf	(___flge@ff2+2)^0,w,c
  8162  0033AE  5821               	subwfb	(___flge@ff1+2)^0,w,c
  8163  0033B0  5026               	movf	(___flge@ff2+3)^0,w,c
  8164  0033B2  5822               	subwfb	(___flge@ff1+3)^0,w,c
  8165  0033B4  B0D8               	btfsc	status,0,c
  8166  0033B6  EFDF  F019         	goto	u3871
  8167  0033BA  EFE1  F019         	goto	u3870
  8168  0033BE                     u3871:
  8169  0033BE  EFE4  F019         	goto	l3580
  8170  0033C2                     u3870:
  8171  0033C2  90D8               	bcf	status,0,c
  8172  0033C4  EFE5  F019         	goto	l466
  8173  0033C8                     l3580:
  8174  0033C8  80D8               	bsf	status,0,c
  8175  0033CA                     l466:
  8176  0033CA  0012               	return		;funcret
  8177  0033CC                     __end_of___flge:
  8178                           	callstack 0
  8179                           
  8180 ;; *************** function ___fleq *****************
  8181 ;; Defined at:
  8182 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\fleq.c"
  8183 ;; Parameters:    Size  Location     Type
  8184 ;;  ff1             4    0[COMRAM] unsigned char 
  8185 ;;  ff2             4    4[COMRAM] unsigned char 
  8186 ;; Auto vars:     Size  Location     Type
  8187 ;;		None
  8188 ;; Return value:  Size  Location     Type
  8189 ;;		None               void
  8190 ;; Registers used:
  8191 ;;		wreg, status,2, status,0
  8192 ;; Tracked objects:
  8193 ;;		On entry : 0/0
  8194 ;;		On exit  : 0/0
  8195 ;;		Unchanged: 0/0
  8196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8197 ;;      Params:         8       0       0       0       0       0       0
  8198 ;;      Locals:         0       0       0       0       0       0       0
  8199 ;;      Temps:          4       0       0       0       0       0       0
  8200 ;;      Totals:        12       0       0       0       0       0       0
  8201 ;;Total ram usage:       12 bytes
  8202 ;; Hardware stack levels used:    1
  8203 ;; This function calls:
  8204 ;;		Nothing
  8205 ;; This function is called by:
  8206 ;;		_efgtoa
  8207 ;; This function uses a non-reentrant model
  8208 ;;
  8209                           
  8210                           	psect	text27
  8211  00395C                     __ptext27:
  8212                           	callstack 0
  8213  00395C                     ___fleq:
  8214                           	callstack 25
  8215  00395C  0E00               	movlw	0
  8216  00395E  1401               	andwf	___fleq@ff1^0,w,c
  8217  003960  6E09               	movwf	??___fleq^0,c
  8218  003962  0E00               	movlw	0
  8219  003964  1402               	andwf	(___fleq@ff1+1)^0,w,c
  8220  003966  6E0A               	movwf	(??___fleq+1)^0,c
  8221  003968  0E80               	movlw	128
  8222  00396A  1403               	andwf	(___fleq@ff1+2)^0,w,c
  8223  00396C  6E0B               	movwf	(??___fleq+2)^0,c
  8224  00396E  0E7F               	movlw	127
  8225  003970  1404               	andwf	(___fleq@ff1+3)^0,w,c
  8226  003972  6E0C               	movwf	(??___fleq+3)^0,c
  8227  003974  5009               	movf	??___fleq^0,w,c
  8228  003976  100A               	iorwf	(??___fleq+1)^0,w,c
  8229  003978  100B               	iorwf	(??___fleq+2)^0,w,c
  8230  00397A  100C               	iorwf	(??___fleq+3)^0,w,c
  8231  00397C  A4D8               	btfss	status,2,c
  8232  00397E  EFC3  F01C         	goto	u3801
  8233  003982  EFC5  F01C         	goto	u3800
  8234  003986                     u3801:
  8235  003986  EFCD  F01C         	goto	l3550
  8236  00398A                     u3800:
  8237  00398A  0E00               	movlw	0
  8238  00398C  6E01               	movwf	___fleq@ff1^0,c
  8239  00398E  0E00               	movlw	0
  8240  003990  6E02               	movwf	(___fleq@ff1+1)^0,c
  8241  003992  0E00               	movlw	0
  8242  003994  6E03               	movwf	(___fleq@ff1+2)^0,c
  8243  003996  0E00               	movlw	0
  8244  003998  6E04               	movwf	(___fleq@ff1+3)^0,c
  8245  00399A                     l3550:
  8246  00399A  0E00               	movlw	0
  8247  00399C  1405               	andwf	___fleq@ff2^0,w,c
  8248  00399E  6E09               	movwf	??___fleq^0,c
  8249  0039A0  0E00               	movlw	0
  8250  0039A2  1406               	andwf	(___fleq@ff2+1)^0,w,c
  8251  0039A4  6E0A               	movwf	(??___fleq+1)^0,c
  8252  0039A6  0E80               	movlw	128
  8253  0039A8  1407               	andwf	(___fleq@ff2+2)^0,w,c
  8254  0039AA  6E0B               	movwf	(??___fleq+2)^0,c
  8255  0039AC  0E7F               	movlw	127
  8256  0039AE  1408               	andwf	(___fleq@ff2+3)^0,w,c
  8257  0039B0  6E0C               	movwf	(??___fleq+3)^0,c
  8258  0039B2  5009               	movf	??___fleq^0,w,c
  8259  0039B4  100A               	iorwf	(??___fleq+1)^0,w,c
  8260  0039B6  100B               	iorwf	(??___fleq+2)^0,w,c
  8261  0039B8  100C               	iorwf	(??___fleq+3)^0,w,c
  8262  0039BA  A4D8               	btfss	status,2,c
  8263  0039BC  EFE2  F01C         	goto	u3811
  8264  0039C0  EFE4  F01C         	goto	u3810
  8265  0039C4                     u3811:
  8266  0039C4  EFEC  F01C         	goto	l3554
  8267  0039C8                     u3810:
  8268  0039C8  0E00               	movlw	0
  8269  0039CA  6E05               	movwf	___fleq@ff2^0,c
  8270  0039CC  0E00               	movlw	0
  8271  0039CE  6E06               	movwf	(___fleq@ff2+1)^0,c
  8272  0039D0  0E00               	movlw	0
  8273  0039D2  6E07               	movwf	(___fleq@ff2+2)^0,c
  8274  0039D4  0E00               	movlw	0
  8275  0039D6  6E08               	movwf	(___fleq@ff2+3)^0,c
  8276  0039D8                     l3554:
  8277  0039D8  5005               	movf	___fleq@ff2^0,w,c
  8278  0039DA  1801               	xorwf	___fleq@ff1^0,w,c
  8279  0039DC  E10F               	bnz	u3820
  8280  0039DE  5006               	movf	(___fleq@ff2+1)^0,w,c
  8281  0039E0  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  8282  0039E2  E10C               	bnz	u3820
  8283  0039E4  5007               	movf	(___fleq@ff2+2)^0,w,c
  8284  0039E6  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  8285  0039E8  E109               	bnz	u3820
  8286  0039EA  5008               	movf	(___fleq@ff2+3)^0,w,c
  8287  0039EC  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  8288  0039EE  B4D8               	btfsc	status,2,c
  8289  0039F0  EFFC  F01C         	goto	u3821
  8290  0039F4  EFFE  F01C         	goto	u3820
  8291  0039F8                     u3821:
  8292  0039F8  EF01  F01D         	goto	l3558
  8293  0039FC                     u3820:
  8294  0039FC  90D8               	bcf	status,0,c
  8295  0039FE  EF02  F01D         	goto	l455
  8296  003A02                     l3558:
  8297  003A02  80D8               	bsf	status,0,c
  8298  003A04                     l455:
  8299  003A04  0012               	return		;funcret
  8300  003A06                     __end_of___fleq:
  8301                           	callstack 0
  8302                           
  8303 ;; *************** function ___fldiv *****************
  8304 ;; Defined at:
  8305 ;;		line 11 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
  8306 ;; Parameters:    Size  Location     Type
  8307 ;;  b               4    0[COMRAM] unsigned char 
  8308 ;;  a               4    4[COMRAM] unsigned char 
  8309 ;; Auto vars:     Size  Location     Type
  8310 ;;  grs             4   19[COMRAM] unsigned long 
  8311 ;;  rem             4   12[COMRAM] unsigned long 
  8312 ;;  new_exp         2   17[COMRAM] short 
  8313 ;;  aexp            1   24[COMRAM] unsigned char 
  8314 ;;  bexp            1   23[COMRAM] unsigned char 
  8315 ;;  sign            1   16[COMRAM] unsigned char 
  8316 ;; Return value:  Size  Location     Type
  8317 ;;                  4    0[COMRAM] unsigned char 
  8318 ;; Registers used:
  8319 ;;		wreg, status,2, status,0
  8320 ;; Tracked objects:
  8321 ;;		On entry : 0/0
  8322 ;;		On exit  : 0/0
  8323 ;;		Unchanged: 0/0
  8324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8325 ;;      Params:         8       0       0       0       0       0       0
  8326 ;;      Locals:        13       0       0       0       0       0       0
  8327 ;;      Temps:          4       0       0       0       0       0       0
  8328 ;;      Totals:        25       0       0       0       0       0       0
  8329 ;;Total ram usage:       25 bytes
  8330 ;; Hardware stack levels used:    1
  8331 ;; This function calls:
  8332 ;;		Nothing
  8333 ;; This function is called by:
  8334 ;;		_esvaziar_tanque
  8335 ;;		_efgtoa
  8336 ;; This function uses a non-reentrant model
  8337 ;;
  8338                           
  8339                           	psect	text28
  8340  001FE2                     __ptext28:
  8341                           	callstack 0
  8342  001FE2                     ___fldiv:
  8343                           	callstack 25
  8344  001FE2  5004               	movf	(___fldiv@b+3)^0,w,c
  8345  001FE4  0B80               	andlw	128
  8346  001FE6  6E11               	movwf	___fldiv@sign^0,c
  8347  001FE8  5004               	movf	(___fldiv@b+3)^0,w,c
  8348  001FEA  2404               	addwf	(___fldiv@b+3)^0,w,c
  8349  001FEC  6E18               	movwf	___fldiv@bexp^0,c
  8350  001FEE  AE03               	btfss	(___fldiv@b+2)^0,7,c
  8351  001FF0  EFFC  F00F         	goto	u3261
  8352  001FF4  EFFE  F00F         	goto	u3260
  8353  001FF8                     u3261:
  8354  001FF8  EFFF  F00F         	goto	l3198
  8355  001FFC                     u3260:
  8356  001FFC  8018               	bsf	___fldiv@bexp^0,0,c
  8357  001FFE                     l3198:
  8358  001FFE  5018               	movf	___fldiv@bexp^0,w,c
  8359  002000  B4D8               	btfsc	status,2,c
  8360  002002  EF05  F010         	goto	u3271
  8361  002006  EF07  F010         	goto	u3270
  8362  00200A                     u3271:
  8363  00200A  EF1C  F010         	goto	l3208
  8364  00200E                     u3270:
  8365  00200E  2818               	incf	___fldiv@bexp^0,w,c
  8366  002010  A4D8               	btfss	status,2,c
  8367  002012  EF0D  F010         	goto	u3281
  8368  002016  EF0F  F010         	goto	u3280
  8369  00201A                     u3281:
  8370  00201A  EF17  F010         	goto	l3204
  8371  00201E                     u3280:
  8372  00201E  0E00               	movlw	0
  8373  002020  6E01               	movwf	___fldiv@b^0,c
  8374  002022  0E00               	movlw	0
  8375  002024  6E02               	movwf	(___fldiv@b+1)^0,c
  8376  002026  0E00               	movlw	0
  8377  002028  6E03               	movwf	(___fldiv@b+2)^0,c
  8378  00202A  0E00               	movlw	0
  8379  00202C  6E04               	movwf	(___fldiv@b+3)^0,c
  8380  00202E                     l3204:
  8381  00202E  8E03               	bsf	(___fldiv@b+2)^0,7,c
  8382  002030  0E00               	movlw	0
  8383  002032  6E04               	movwf	(___fldiv@b+3)^0,c
  8384  002034  EF24  F010         	goto	l3210
  8385  002038                     l3208:
  8386  002038  0E00               	movlw	0
  8387  00203A  6E01               	movwf	___fldiv@b^0,c
  8388  00203C  0E00               	movlw	0
  8389  00203E  6E02               	movwf	(___fldiv@b+1)^0,c
  8390  002040  0E00               	movlw	0
  8391  002042  6E03               	movwf	(___fldiv@b+2)^0,c
  8392  002044  0E00               	movlw	0
  8393  002046  6E04               	movwf	(___fldiv@b+3)^0,c
  8394  002048                     l3210:
  8395  002048  5008               	movf	(___fldiv@a+3)^0,w,c
  8396  00204A  0B80               	andlw	128
  8397  00204C  1A11               	xorwf	___fldiv@sign^0,f,c
  8398  00204E  5008               	movf	(___fldiv@a+3)^0,w,c
  8399  002050  2408               	addwf	(___fldiv@a+3)^0,w,c
  8400  002052  6E19               	movwf	___fldiv@aexp^0,c
  8401  002054  AE07               	btfss	(___fldiv@a+2)^0,7,c
  8402  002056  EF2F  F010         	goto	u3291
  8403  00205A  EF31  F010         	goto	u3290
  8404  00205E                     u3291:
  8405  00205E  EF32  F010         	goto	l3218
  8406  002062                     u3290:
  8407  002062  8019               	bsf	___fldiv@aexp^0,0,c
  8408  002064                     l3218:
  8409  002064  5019               	movf	___fldiv@aexp^0,w,c
  8410  002066  B4D8               	btfsc	status,2,c
  8411  002068  EF38  F010         	goto	u3301
  8412  00206C  EF3A  F010         	goto	u3300
  8413  002070                     u3301:
  8414  002070  EF4F  F010         	goto	l3228
  8415  002074                     u3300:
  8416  002074  2819               	incf	___fldiv@aexp^0,w,c
  8417  002076  A4D8               	btfss	status,2,c
  8418  002078  EF40  F010         	goto	u3311
  8419  00207C  EF42  F010         	goto	u3310
  8420  002080                     u3311:
  8421  002080  EF4A  F010         	goto	l3224
  8422  002084                     u3310:
  8423  002084  0E00               	movlw	0
  8424  002086  6E05               	movwf	___fldiv@a^0,c
  8425  002088  0E00               	movlw	0
  8426  00208A  6E06               	movwf	(___fldiv@a+1)^0,c
  8427  00208C  0E00               	movlw	0
  8428  00208E  6E07               	movwf	(___fldiv@a+2)^0,c
  8429  002090  0E00               	movlw	0
  8430  002092  6E08               	movwf	(___fldiv@a+3)^0,c
  8431  002094                     l3224:
  8432  002094  8E07               	bsf	(___fldiv@a+2)^0,7,c
  8433  002096  0E00               	movlw	0
  8434  002098  6E08               	movwf	(___fldiv@a+3)^0,c
  8435  00209A  EF57  F010         	goto	l3230
  8436  00209E                     l3228:
  8437  00209E  0E00               	movlw	0
  8438  0020A0  6E05               	movwf	___fldiv@a^0,c
  8439  0020A2  0E00               	movlw	0
  8440  0020A4  6E06               	movwf	(___fldiv@a+1)^0,c
  8441  0020A6  0E00               	movlw	0
  8442  0020A8  6E07               	movwf	(___fldiv@a+2)^0,c
  8443  0020AA  0E00               	movlw	0
  8444  0020AC  6E08               	movwf	(___fldiv@a+3)^0,c
  8445  0020AE                     l3230:
  8446  0020AE  5005               	movf	___fldiv@a^0,w,c
  8447  0020B0  1006               	iorwf	(___fldiv@a+1)^0,w,c
  8448  0020B2  1007               	iorwf	(___fldiv@a+2)^0,w,c
  8449  0020B4  1008               	iorwf	(___fldiv@a+3)^0,w,c
  8450  0020B6  A4D8               	btfss	status,2,c
  8451  0020B8  EF60  F010         	goto	u3321
  8452  0020BC  EF62  F010         	goto	u3320
  8453  0020C0                     u3321:
  8454  0020C0  EF7A  F010         	goto	l3242
  8455  0020C4                     u3320:
  8456  0020C4  0E00               	movlw	0
  8457  0020C6  6E01               	movwf	___fldiv@b^0,c
  8458  0020C8  0E00               	movlw	0
  8459  0020CA  6E02               	movwf	(___fldiv@b+1)^0,c
  8460  0020CC  0E00               	movlw	0
  8461  0020CE  6E03               	movwf	(___fldiv@b+2)^0,c
  8462  0020D0  0E00               	movlw	0
  8463  0020D2  6E04               	movwf	(___fldiv@b+3)^0,c
  8464  0020D4  0E80               	movlw	128
  8465  0020D6  1203               	iorwf	(___fldiv@b+2)^0,f,c
  8466  0020D8  0E7F               	movlw	127
  8467  0020DA  1204               	iorwf	(___fldiv@b+3)^0,f,c
  8468  0020DC                     l3236:
  8469  0020DC  5011               	movf	___fldiv@sign^0,w,c
  8470  0020DE  1204               	iorwf	(___fldiv@b+3)^0,f,c
  8471  0020E0  C001  F001         	movff	___fldiv@b,?___fldiv
  8472  0020E4  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  8473  0020E8  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  8474  0020EC  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  8475  0020F0  EFBD  F011         	goto	l778
  8476  0020F4                     l3242:
  8477  0020F4  5018               	movf	___fldiv@bexp^0,w,c
  8478  0020F6  A4D8               	btfss	status,2,c
  8479  0020F8  EF80  F010         	goto	u3331
  8480  0020FC  EF82  F010         	goto	u3330
  8481  002100                     u3331:
  8482  002100  EF8C  F010         	goto	l3250
  8483  002104                     u3330:
  8484  002104  0E00               	movlw	0
  8485  002106  6E01               	movwf	?___fldiv^0,c
  8486  002108  0E00               	movlw	0
  8487  00210A  6E02               	movwf	(?___fldiv+1)^0,c
  8488  00210C  0E00               	movlw	0
  8489  00210E  6E03               	movwf	(?___fldiv+2)^0,c
  8490  002110  0E00               	movlw	0
  8491  002112  6E04               	movwf	(?___fldiv+3)^0,c
  8492  002114  EFBD  F011         	goto	l778
  8493  002118                     l3250:
  8494  002118  5019               	movf	___fldiv@aexp^0,w,c
  8495  00211A  C018  F009         	movff	___fldiv@bexp,??___fldiv
  8496  00211E  6A0A               	clrf	(??___fldiv+1)^0,c
  8497  002120  5E09               	subwf	??___fldiv^0,f,c
  8498  002122  0E00               	movlw	0
  8499  002124  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  8500  002126  0E7F               	movlw	127
  8501  002128  2409               	addwf	??___fldiv^0,w,c
  8502  00212A  6E12               	movwf	___fldiv@new_exp^0,c
  8503  00212C  0E00               	movlw	0
  8504  00212E  200A               	addwfc	(??___fldiv+1)^0,w,c
  8505  002130  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8506  002132  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  8507  002136  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  8508  00213A  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  8509  00213E  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  8510  002142  0E00               	movlw	0
  8511  002144  6E01               	movwf	___fldiv@b^0,c
  8512  002146  0E00               	movlw	0
  8513  002148  6E02               	movwf	(___fldiv@b+1)^0,c
  8514  00214A  0E00               	movlw	0
  8515  00214C  6E03               	movwf	(___fldiv@b+2)^0,c
  8516  00214E  0E00               	movlw	0
  8517  002150  6E04               	movwf	(___fldiv@b+3)^0,c
  8518  002152  0E00               	movlw	0
  8519  002154  6E14               	movwf	___fldiv@grs^0,c
  8520  002156  0E00               	movlw	0
  8521  002158  6E15               	movwf	(___fldiv@grs+1)^0,c
  8522  00215A  0E00               	movlw	0
  8523  00215C  6E16               	movwf	(___fldiv@grs+2)^0,c
  8524  00215E  0E00               	movlw	0
  8525  002160  6E17               	movwf	(___fldiv@grs+3)^0,c
  8526  002162  0E00               	movlw	0
  8527  002164  6E19               	movwf	___fldiv@aexp^0,c
  8528  002166  EFED  F010         	goto	l780
  8529  00216A                     l3260:
  8530  00216A  5019               	movf	___fldiv@aexp^0,w,c
  8531  00216C  B4D8               	btfsc	status,2,c
  8532  00216E  EFBB  F010         	goto	u3341
  8533  002172  EFBD  F010         	goto	u3340
  8534  002176                     u3341:
  8535  002176  EFD4  F010         	goto	l3268
  8536  00217A                     u3340:
  8537  00217A  90D8               	bcf	status,0,c
  8538  00217C  360D               	rlcf	___fldiv@rem^0,f,c
  8539  00217E  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  8540  002180  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  8541  002182  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  8542  002184  90D8               	bcf	status,0,c
  8543  002186  3601               	rlcf	___fldiv@b^0,f,c
  8544  002188  3602               	rlcf	(___fldiv@b+1)^0,f,c
  8545  00218A  3603               	rlcf	(___fldiv@b+2)^0,f,c
  8546  00218C  3604               	rlcf	(___fldiv@b+3)^0,f,c
  8547  00218E  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8548  002190  EFCC  F010         	goto	u3351
  8549  002194  EFCE  F010         	goto	u3350
  8550  002198                     u3351:
  8551  002198  EFCF  F010         	goto	l783
  8552  00219C                     u3350:
  8553  00219C  8001               	bsf	___fldiv@b^0,0,c
  8554  00219E                     l783:
  8555  00219E  90D8               	bcf	status,0,c
  8556  0021A0  3614               	rlcf	___fldiv@grs^0,f,c
  8557  0021A2  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  8558  0021A4  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  8559  0021A6  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  8560  0021A8                     l3268:
  8561  0021A8  5005               	movf	___fldiv@a^0,w,c
  8562  0021AA  5C0D               	subwf	___fldiv@rem^0,w,c
  8563  0021AC  5006               	movf	(___fldiv@a+1)^0,w,c
  8564  0021AE  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  8565  0021B0  5007               	movf	(___fldiv@a+2)^0,w,c
  8566  0021B2  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  8567  0021B4  5008               	movf	(___fldiv@a+3)^0,w,c
  8568  0021B6  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  8569  0021B8  A0D8               	btfss	status,0,c
  8570  0021BA  EFE1  F010         	goto	u3361
  8571  0021BE  EFE3  F010         	goto	u3360
  8572  0021C2                     u3361:
  8573  0021C2  EFEC  F010         	goto	l3274
  8574  0021C6                     u3360:
  8575  0021C6  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  8576  0021C8  5005               	movf	___fldiv@a^0,w,c
  8577  0021CA  5E0D               	subwf	___fldiv@rem^0,f,c
  8578  0021CC  5006               	movf	(___fldiv@a+1)^0,w,c
  8579  0021CE  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  8580  0021D0  5007               	movf	(___fldiv@a+2)^0,w,c
  8581  0021D2  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  8582  0021D4  5008               	movf	(___fldiv@a+3)^0,w,c
  8583  0021D6  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  8584  0021D8                     l3274:
  8585  0021D8  2A19               	incf	___fldiv@aexp^0,f,c
  8586  0021DA                     l780:
  8587  0021DA  0E19               	movlw	25
  8588  0021DC  6419               	cpfsgt	___fldiv@aexp^0,c
  8589  0021DE  EFF3  F010         	goto	u3371
  8590  0021E2  EFF5  F010         	goto	u3370
  8591  0021E6                     u3371:
  8592  0021E6  EFB5  F010         	goto	l3260
  8593  0021EA                     u3370:
  8594  0021EA  500D               	movf	___fldiv@rem^0,w,c
  8595  0021EC  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  8596  0021EE  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  8597  0021F0  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  8598  0021F2  B4D8               	btfsc	status,2,c
  8599  0021F4  EFFE  F010         	goto	u3381
  8600  0021F8  EF00  F011         	goto	u3380
  8601  0021FC                     u3381:
  8602  0021FC  EF18  F011         	goto	l3286
  8603  002200                     u3380:
  8604  002200  8014               	bsf	___fldiv@grs^0,0,c
  8605  002202  EF18  F011         	goto	l3286
  8606  002206                     l3280:
  8607  002206  90D8               	bcf	status,0,c
  8608  002208  3601               	rlcf	___fldiv@b^0,f,c
  8609  00220A  3602               	rlcf	(___fldiv@b+1)^0,f,c
  8610  00220C  3603               	rlcf	(___fldiv@b+2)^0,f,c
  8611  00220E  3604               	rlcf	(___fldiv@b+3)^0,f,c
  8612  002210  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8613  002212  EF0D  F011         	goto	u3391
  8614  002216  EF0F  F011         	goto	u3390
  8615  00221A                     u3391:
  8616  00221A  EF10  F011         	goto	l789
  8617  00221E                     u3390:
  8618  00221E  8001               	bsf	___fldiv@b^0,0,c
  8619  002220                     l789:
  8620  002220  90D8               	bcf	status,0,c
  8621  002222  3614               	rlcf	___fldiv@grs^0,f,c
  8622  002224  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  8623  002226  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  8624  002228  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  8625  00222A  0612               	decf	___fldiv@new_exp^0,f,c
  8626  00222C  A0D8               	btfss	status,0,c
  8627  00222E  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  8628  002230                     l3286:
  8629  002230  AE03               	btfss	(___fldiv@b+2)^0,7,c
  8630  002232  EF1D  F011         	goto	u3401
  8631  002236  EF1F  F011         	goto	u3400
  8632  00223A                     u3401:
  8633  00223A  EF03  F011         	goto	l3280
  8634  00223E                     u3400:
  8635  00223E  0E00               	movlw	0
  8636  002240  6E19               	movwf	___fldiv@aexp^0,c
  8637  002242  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8638  002244  EF26  F011         	goto	u3411
  8639  002248  EF28  F011         	goto	u3410
  8640  00224C                     u3411:
  8641  00224C  EF4C  F011         	goto	l791
  8642  002250                     u3410:
  8643  002250  0EFF               	movlw	255
  8644  002252  1414               	andwf	___fldiv@grs^0,w,c
  8645  002254  6E09               	movwf	??___fldiv^0,c
  8646  002256  0EFF               	movlw	255
  8647  002258  1415               	andwf	(___fldiv@grs+1)^0,w,c
  8648  00225A  6E0A               	movwf	(??___fldiv+1)^0,c
  8649  00225C  0EFF               	movlw	255
  8650  00225E  1416               	andwf	(___fldiv@grs+2)^0,w,c
  8651  002260  6E0B               	movwf	(??___fldiv+2)^0,c
  8652  002262  0E7F               	movlw	127
  8653  002264  1417               	andwf	(___fldiv@grs+3)^0,w,c
  8654  002266  6E0C               	movwf	(??___fldiv+3)^0,c
  8655  002268  5009               	movf	??___fldiv^0,w,c
  8656  00226A  100A               	iorwf	(??___fldiv+1)^0,w,c
  8657  00226C  100B               	iorwf	(??___fldiv+2)^0,w,c
  8658  00226E  100C               	iorwf	(??___fldiv+3)^0,w,c
  8659  002270  B4D8               	btfsc	status,2,c
  8660  002272  EF3D  F011         	goto	u3421
  8661  002276  EF3F  F011         	goto	u3420
  8662  00227A                     u3421:
  8663  00227A  EF43  F011         	goto	l792
  8664  00227E                     u3420:
  8665  00227E                     l3294:
  8666  00227E  0E01               	movlw	1
  8667  002280  6E19               	movwf	___fldiv@aexp^0,c
  8668  002282  EF4C  F011         	goto	l791
  8669  002286                     l792:
  8670  002286  A001               	btfss	___fldiv@b^0,0,c
  8671  002288  EF48  F011         	goto	u3431
  8672  00228C  EF4A  F011         	goto	u3430
  8673  002290                     u3431:
  8674  002290  EF4C  F011         	goto	l791
  8675  002294                     u3430:
  8676  002294  EF3F  F011         	goto	l3294
  8677  002298                     l791:
  8678  002298  5019               	movf	___fldiv@aexp^0,w,c
  8679  00229A  B4D8               	btfsc	status,2,c
  8680  00229C  EF52  F011         	goto	u3441
  8681  0022A0  EF54  F011         	goto	u3440
  8682  0022A4                     u3441:
  8683  0022A4  EF78  F011         	goto	l3306
  8684  0022A8                     u3440:
  8685  0022A8  0E01               	movlw	1
  8686  0022AA  2601               	addwf	___fldiv@b^0,f,c
  8687  0022AC  0E00               	movlw	0
  8688  0022AE  2202               	addwfc	(___fldiv@b+1)^0,f,c
  8689  0022B0  2203               	addwfc	(___fldiv@b+2)^0,f,c
  8690  0022B2  2204               	addwfc	(___fldiv@b+3)^0,f,c
  8691  0022B4  A004               	btfss	(___fldiv@b+3)^0,0,c
  8692  0022B6  EF5F  F011         	goto	u3451
  8693  0022BA  EF61  F011         	goto	u3450
  8694  0022BE                     u3451:
  8695  0022BE  EF78  F011         	goto	l3306
  8696  0022C2                     u3450:
  8697  0022C2  C001  F009         	movff	___fldiv@b,??___fldiv
  8698  0022C6  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  8699  0022CA  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  8700  0022CE  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  8701  0022D2  340C               	rlcf	(??___fldiv+3)^0,w,c
  8702  0022D4  320C               	rrcf	(??___fldiv+3)^0,f,c
  8703  0022D6  320B               	rrcf	(??___fldiv+2)^0,f,c
  8704  0022D8  320A               	rrcf	(??___fldiv+1)^0,f,c
  8705  0022DA  3209               	rrcf	??___fldiv^0,f,c
  8706  0022DC  C009  F001         	movff	??___fldiv,___fldiv@b
  8707  0022E0  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  8708  0022E4  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  8709  0022E8  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  8710  0022EC  4A12               	infsnz	___fldiv@new_exp^0,f,c
  8711  0022EE  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  8712  0022F0                     l3306:
  8713  0022F0  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8714  0022F2  EF83  F011         	goto	u3461
  8715  0022F6  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  8716  0022F8  E108               	bnz	u3460
  8717  0022FA  2812               	incf	___fldiv@new_exp^0,w,c
  8718  0022FC  A0D8               	btfss	status,0,c
  8719  0022FE  EF83  F011         	goto	u3461
  8720  002302  EF85  F011         	goto	u3460
  8721  002306                     u3461:
  8722  002306  EF90  F011         	goto	l3310
  8723  00230A                     u3460:
  8724  00230A  0E00               	movlw	0
  8725  00230C  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8726  00230E  6812               	setf	___fldiv@new_exp^0,c
  8727  002310  0E00               	movlw	0
  8728  002312  6E01               	movwf	___fldiv@b^0,c
  8729  002314  0E00               	movlw	0
  8730  002316  6E02               	movwf	(___fldiv@b+1)^0,c
  8731  002318  0E00               	movlw	0
  8732  00231A  6E03               	movwf	(___fldiv@b+2)^0,c
  8733  00231C  0E00               	movlw	0
  8734  00231E  6E04               	movwf	(___fldiv@b+3)^0,c
  8735  002320                     l3310:
  8736  002320  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8737  002322  EF9D  F011         	goto	u3470
  8738  002326  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  8739  002328  E106               	bnz	u3471
  8740  00232A  0412               	decf	___fldiv@new_exp^0,w,c
  8741  00232C  B0D8               	btfsc	status,0,c
  8742  00232E  EF9B  F011         	goto	u3471
  8743  002332  EF9D  F011         	goto	u3470
  8744  002336                     u3471:
  8745  002336  EFAB  F011         	goto	l3314
  8746  00233A                     u3470:
  8747  00233A  0E00               	movlw	0
  8748  00233C  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8749  00233E  0E00               	movlw	0
  8750  002340  6E12               	movwf	___fldiv@new_exp^0,c
  8751  002342  0E00               	movlw	0
  8752  002344  6E01               	movwf	___fldiv@b^0,c
  8753  002346  0E00               	movlw	0
  8754  002348  6E02               	movwf	(___fldiv@b+1)^0,c
  8755  00234A  0E00               	movlw	0
  8756  00234C  6E03               	movwf	(___fldiv@b+2)^0,c
  8757  00234E  0E00               	movlw	0
  8758  002350  6E04               	movwf	(___fldiv@b+3)^0,c
  8759  002352  0E00               	movlw	0
  8760  002354  6E11               	movwf	___fldiv@sign^0,c
  8761  002356                     l3314:
  8762  002356  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  8763  00235A  A018               	btfss	___fldiv@bexp^0,0,c
  8764  00235C  EFB2  F011         	goto	u3481
  8765  002360  EFB4  F011         	goto	u3480
  8766  002364                     u3481:
  8767  002364  EFB7  F011         	goto	l3320
  8768  002368                     u3480:
  8769  002368  8E03               	bsf	(___fldiv@b+2)^0,7,c
  8770  00236A  EFB8  F011         	goto	l3322
  8771  00236E                     l3320:
  8772  00236E  9E03               	bcf	(___fldiv@b+2)^0,7,c
  8773  002370                     l3322:
  8774  002370  90D8               	bcf	status,0,c
  8775  002372  3018               	rrcf	___fldiv@bexp^0,w,c
  8776  002374  6E04               	movwf	(___fldiv@b+3)^0,c
  8777  002376  EF6E  F010         	goto	l3236
  8778  00237A                     l778:
  8779  00237A  0012               	return		;funcret
  8780  00237C                     __end_of___fldiv:
  8781                           	callstack 0
  8782                           
  8783 ;; *************** function ___awmod *****************
  8784 ;; Defined at:
  8785 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\awmod.c"
  8786 ;; Parameters:    Size  Location     Type
  8787 ;;  dividend        2    0[COMRAM] int 
  8788 ;;  divisor         2    2[COMRAM] int 
  8789 ;; Auto vars:     Size  Location     Type
  8790 ;;  sign            1    5[COMRAM] unsigned char 
  8791 ;;  counter         1    4[COMRAM] unsigned char 
  8792 ;; Return value:  Size  Location     Type
  8793 ;;                  2    0[COMRAM] int 
  8794 ;; Registers used:
  8795 ;;		wreg, status,2, status,0
  8796 ;; Tracked objects:
  8797 ;;		On entry : 0/0
  8798 ;;		On exit  : 0/0
  8799 ;;		Unchanged: 0/0
  8800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8801 ;;      Params:         4       0       0       0       0       0       0
  8802 ;;      Locals:         2       0       0       0       0       0       0
  8803 ;;      Temps:          0       0       0       0       0       0       0
  8804 ;;      Totals:         6       0       0       0       0       0       0
  8805 ;;Total ram usage:        6 bytes
  8806 ;; Hardware stack levels used:    1
  8807 ;; This function calls:
  8808 ;;		Nothing
  8809 ;; This function is called by:
  8810 ;;		_efgtoa
  8811 ;; This function uses a non-reentrant model
  8812 ;;
  8813                           
  8814                           	psect	text29
  8815  0038AC                     __ptext29:
  8816                           	callstack 0
  8817  0038AC                     ___awmod:
  8818                           	callstack 25
  8819  0038AC  0E00               	movlw	0
  8820  0038AE  6E06               	movwf	___awmod@sign^0,c
  8821  0038B0  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  8822  0038B2  EF5F  F01C         	goto	u3740
  8823  0038B6  EF5D  F01C         	goto	u3741
  8824  0038BA                     u3741:
  8825  0038BA  EF65  F01C         	goto	l3518
  8826  0038BE                     u3740:
  8827  0038BE  6C01               	negf	___awmod@dividend^0,c
  8828  0038C0  1E02               	comf	(___awmod@dividend+1)^0,f,c
  8829  0038C2  B0D8               	btfsc	status,0,c
  8830  0038C4  2A02               	incf	(___awmod@dividend+1)^0,f,c
  8831  0038C6  0E01               	movlw	1
  8832  0038C8  6E06               	movwf	___awmod@sign^0,c
  8833  0038CA                     l3518:
  8834  0038CA  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  8835  0038CC  EF6C  F01C         	goto	u3750
  8836  0038D0  EF6A  F01C         	goto	u3751
  8837  0038D4                     u3751:
  8838  0038D4  EF70  F01C         	goto	l3522
  8839  0038D8                     u3750:
  8840  0038D8  6C03               	negf	___awmod@divisor^0,c
  8841  0038DA  1E04               	comf	(___awmod@divisor+1)^0,f,c
  8842  0038DC  B0D8               	btfsc	status,0,c
  8843  0038DE  2A04               	incf	(___awmod@divisor+1)^0,f,c
  8844  0038E0                     l3522:
  8845  0038E0  5003               	movf	___awmod@divisor^0,w,c
  8846  0038E2  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  8847  0038E4  B4D8               	btfsc	status,2,c
  8848  0038E6  EF77  F01C         	goto	u3761
  8849  0038EA  EF79  F01C         	goto	u3760
  8850  0038EE                     u3761:
  8851  0038EE  EF9D  F01C         	goto	l3538
  8852  0038F2                     u3760:
  8853  0038F2  0E01               	movlw	1
  8854  0038F4  6E05               	movwf	___awmod@counter^0,c
  8855  0038F6  EF81  F01C         	goto	l3528
  8856  0038FA                     l3526:
  8857  0038FA  90D8               	bcf	status,0,c
  8858  0038FC  3603               	rlcf	___awmod@divisor^0,f,c
  8859  0038FE  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  8860  003900  2A05               	incf	___awmod@counter^0,f,c
  8861  003902                     l3528:
  8862  003902  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  8863  003904  EF86  F01C         	goto	u3771
  8864  003908  EF88  F01C         	goto	u3770
  8865  00390C                     u3771:
  8866  00390C  EF7D  F01C         	goto	l3526
  8867  003910                     u3770:
  8868  003910                     l3530:
  8869  003910  5003               	movf	___awmod@divisor^0,w,c
  8870  003912  5C01               	subwf	___awmod@dividend^0,w,c
  8871  003914  5004               	movf	(___awmod@divisor+1)^0,w,c
  8872  003916  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  8873  003918  A0D8               	btfss	status,0,c
  8874  00391A  EF91  F01C         	goto	u3781
  8875  00391E  EF93  F01C         	goto	u3780
  8876  003922                     u3781:
  8877  003922  EF97  F01C         	goto	l3534
  8878  003926                     u3780:
  8879  003926  5003               	movf	___awmod@divisor^0,w,c
  8880  003928  5E01               	subwf	___awmod@dividend^0,f,c
  8881  00392A  5004               	movf	(___awmod@divisor+1)^0,w,c
  8882  00392C  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  8883  00392E                     l3534:
  8884  00392E  90D8               	bcf	status,0,c
  8885  003930  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  8886  003932  3203               	rrcf	___awmod@divisor^0,f,c
  8887  003934  2E05               	decfsz	___awmod@counter^0,f,c
  8888  003936  EF88  F01C         	goto	l3530
  8889  00393A                     l3538:
  8890  00393A  5006               	movf	___awmod@sign^0,w,c
  8891  00393C  B4D8               	btfsc	status,2,c
  8892  00393E  EFA3  F01C         	goto	u3791
  8893  003942  EFA5  F01C         	goto	u3790
  8894  003946                     u3791:
  8895  003946  EFA9  F01C         	goto	l3542
  8896  00394A                     u3790:
  8897  00394A  6C01               	negf	___awmod@dividend^0,c
  8898  00394C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  8899  00394E  B0D8               	btfsc	status,0,c
  8900  003950  2A02               	incf	(___awmod@dividend+1)^0,f,c
  8901  003952                     l3542:
  8902  003952  C001  F001         	movff	___awmod@dividend,?___awmod
  8903  003956  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  8904  00395A  0012               	return		;funcret
  8905  00395C                     __end_of___awmod:
  8906                           	callstack 0
  8907                           
  8908 ;; *************** function ___awdiv *****************
  8909 ;; Defined at:
  8910 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  8911 ;; Parameters:    Size  Location     Type
  8912 ;;  dividend        2    0[COMRAM] int 
  8913 ;;  divisor         2    2[COMRAM] int 
  8914 ;; Auto vars:     Size  Location     Type
  8915 ;;  quotient        2    6[COMRAM] int 
  8916 ;;  sign            1    5[COMRAM] unsigned char 
  8917 ;;  counter         1    4[COMRAM] unsigned char 
  8918 ;; Return value:  Size  Location     Type
  8919 ;;                  2    0[COMRAM] int 
  8920 ;; Registers used:
  8921 ;;		wreg, status,2, status,0
  8922 ;; Tracked objects:
  8923 ;;		On entry : 0/0
  8924 ;;		On exit  : 0/0
  8925 ;;		Unchanged: 0/0
  8926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8927 ;;      Params:         4       0       0       0       0       0       0
  8928 ;;      Locals:         4       0       0       0       0       0       0
  8929 ;;      Temps:          0       0       0       0       0       0       0
  8930 ;;      Totals:         8       0       0       0       0       0       0
  8931 ;;Total ram usage:        8 bytes
  8932 ;; Hardware stack levels used:    1
  8933 ;; This function calls:
  8934 ;;		Nothing
  8935 ;; This function is called by:
  8936 ;;		_efgtoa
  8937 ;; This function uses a non-reentrant model
  8938 ;;
  8939                           
  8940                           	psect	text30
  8941  003730                     __ptext30:
  8942                           	callstack 0
  8943  003730                     ___awdiv:
  8944                           	callstack 25
  8945  003730  0E00               	movlw	0
  8946  003732  6E06               	movwf	___awdiv@sign^0,c
  8947  003734  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  8948  003736  EFA1  F01B         	goto	u3680
  8949  00373A  EF9F  F01B         	goto	u3681
  8950  00373E                     u3681:
  8951  00373E  EFA7  F01B         	goto	l3474
  8952  003742                     u3680:
  8953  003742  6C03               	negf	___awdiv@divisor^0,c
  8954  003744  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  8955  003746  B0D8               	btfsc	status,0,c
  8956  003748  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  8957  00374A  0E01               	movlw	1
  8958  00374C  6E06               	movwf	___awdiv@sign^0,c
  8959  00374E                     l3474:
  8960  00374E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  8961  003750  EFAE  F01B         	goto	u3690
  8962  003754  EFAC  F01B         	goto	u3691
  8963  003758                     u3691:
  8964  003758  EFB4  F01B         	goto	l3480
  8965  00375C                     u3690:
  8966  00375C  6C01               	negf	___awdiv@dividend^0,c
  8967  00375E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  8968  003760  B0D8               	btfsc	status,0,c
  8969  003762  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  8970  003764  0E01               	movlw	1
  8971  003766  1A06               	xorwf	___awdiv@sign^0,f,c
  8972  003768                     l3480:
  8973  003768  0E00               	movlw	0
  8974  00376A  6E08               	movwf	(___awdiv@quotient+1)^0,c
  8975  00376C  0E00               	movlw	0
  8976  00376E  6E07               	movwf	___awdiv@quotient^0,c
  8977  003770  5003               	movf	___awdiv@divisor^0,w,c
  8978  003772  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  8979  003774  B4D8               	btfsc	status,2,c
  8980  003776  EFBF  F01B         	goto	u3701
  8981  00377A  EFC1  F01B         	goto	u3700
  8982  00377E                     u3701:
  8983  00377E  EFE9  F01B         	goto	l3502
  8984  003782                     u3700:
  8985  003782  0E01               	movlw	1
  8986  003784  6E05               	movwf	___awdiv@counter^0,c
  8987  003786  EFC9  F01B         	goto	l3488
  8988  00378A                     l3486:
  8989  00378A  90D8               	bcf	status,0,c
  8990  00378C  3603               	rlcf	___awdiv@divisor^0,f,c
  8991  00378E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  8992  003790  2A05               	incf	___awdiv@counter^0,f,c
  8993  003792                     l3488:
  8994  003792  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  8995  003794  EFCE  F01B         	goto	u3711
  8996  003798  EFD0  F01B         	goto	u3710
  8997  00379C                     u3711:
  8998  00379C  EFC5  F01B         	goto	l3486
  8999  0037A0                     u3710:
  9000  0037A0                     l3490:
  9001  0037A0  90D8               	bcf	status,0,c
  9002  0037A2  3607               	rlcf	___awdiv@quotient^0,f,c
  9003  0037A4  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  9004  0037A6  5003               	movf	___awdiv@divisor^0,w,c
  9005  0037A8  5C01               	subwf	___awdiv@dividend^0,w,c
  9006  0037AA  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9007  0037AC  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  9008  0037AE  A0D8               	btfss	status,0,c
  9009  0037B0  EFDC  F01B         	goto	u3721
  9010  0037B4  EFDE  F01B         	goto	u3720
  9011  0037B8                     u3721:
  9012  0037B8  EFE3  F01B         	goto	l3498
  9013  0037BC                     u3720:
  9014  0037BC  5003               	movf	___awdiv@divisor^0,w,c
  9015  0037BE  5E01               	subwf	___awdiv@dividend^0,f,c
  9016  0037C0  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9017  0037C2  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  9018  0037C4  8007               	bsf	___awdiv@quotient^0,0,c
  9019  0037C6                     l3498:
  9020  0037C6  90D8               	bcf	status,0,c
  9021  0037C8  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  9022  0037CA  3203               	rrcf	___awdiv@divisor^0,f,c
  9023  0037CC  2E05               	decfsz	___awdiv@counter^0,f,c
  9024  0037CE  EFD0  F01B         	goto	l3490
  9025  0037D2                     l3502:
  9026  0037D2  5006               	movf	___awdiv@sign^0,w,c
  9027  0037D4  B4D8               	btfsc	status,2,c
  9028  0037D6  EFEF  F01B         	goto	u3731
  9029  0037DA  EFF1  F01B         	goto	u3730
  9030  0037DE                     u3731:
  9031  0037DE  EFF5  F01B         	goto	l3506
  9032  0037E2                     u3730:
  9033  0037E2  6C07               	negf	___awdiv@quotient^0,c
  9034  0037E4  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  9035  0037E6  B0D8               	btfsc	status,0,c
  9036  0037E8  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  9037  0037EA                     l3506:
  9038  0037EA  C007  F001         	movff	___awdiv@quotient,?___awdiv
  9039  0037EE  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  9040  0037F2  0012               	return		;funcret
  9041  0037F4                     __end_of___awdiv:
  9042                           	callstack 0
  9043                           
  9044 ;; *************** function _atoi *****************
  9045 ;; Defined at:
  9046 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\atoi.c"
  9047 ;; Parameters:    Size  Location     Type
  9048 ;;  s               2    7[COMRAM] PTR const unsigned char 
  9049 ;;		 -> STR_25(5), STR_17(5), STR_11(5), 
  9050 ;; Auto vars:     Size  Location     Type
  9051 ;;  n               2   20[COMRAM] int 
  9052 ;;  neg             2   13[COMRAM] int 
  9053 ;; Return value:  Size  Location     Type
  9054 ;;                  2    7[COMRAM] int 
  9055 ;; Registers used:
  9056 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9057 ;; Tracked objects:
  9058 ;;		On entry : 0/0
  9059 ;;		On exit  : 0/0
  9060 ;;		Unchanged: 0/0
  9061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9062 ;;      Params:         2       0       0       0       0       0       0
  9063 ;;      Locals:         9       0       0       0       0       0       0
  9064 ;;      Temps:          4       0       0       0       0       0       0
  9065 ;;      Totals:        15       0       0       0       0       0       0
  9066 ;;Total ram usage:       15 bytes
  9067 ;; Hardware stack levels used:    1
  9068 ;; Hardware stack levels required when called:    1
  9069 ;; This function calls:
  9070 ;;		___wmul
  9071 ;;		_isdigit
  9072 ;;		_isspace
  9073 ;; This function is called by:
  9074 ;;		_vfpfcnvrt
  9075 ;; This function uses a non-reentrant model
  9076 ;;
  9077                           
  9078                           	psect	text31
  9079  003032                     __ptext31:
  9080                           	callstack 0
  9081  003032                     _atoi:
  9082                           	callstack 25
  9083  003032  0E00               	movlw	0
  9084  003034  6E16               	movwf	(atoi@n+1)^0,c
  9085  003036  0E00               	movlw	0
  9086  003038  6E15               	movwf	atoi@n^0,c
  9087  00303A  0E00               	movlw	0
  9088  00303C  6E0F               	movwf	(atoi@neg+1)^0,c
  9089  00303E  0E00               	movlw	0
  9090  003040  6E0E               	movwf	atoi@neg^0,c
  9091  003042  EF25  F018         	goto	l4040
  9092  003046                     l4038:
  9093  003046  4A08               	infsnz	atoi@s^0,f,c
  9094  003048  2A09               	incf	(atoi@s+1)^0,f,c
  9095  00304A                     l4040:
  9096  00304A  0E01               	movlw	1
  9097  00304C  6E14               	movwf	_atoi$795^0,c
  9098  00304E  C008  FFF6         	movff	atoi@s,tblptrl
  9099  003052  C009  FFF7         	movff	atoi@s+1,tblptrh
  9100  003056                     	if	0	;tblptru may be non-zero
  9101  003056                     	endif
  9102  003056                     	if	0	;tblptru may be non-zero
  9103  003056                     	endif
  9104  003056  0008               	tblrd		*
  9105  003058  50F5               	movf	tablat,w,c
  9106  00305A  0A20               	xorlw	32
  9107  00305C  B4D8               	btfsc	status,2,c
  9108  00305E  EF33  F018         	goto	u4781
  9109  003062  EF35  F018         	goto	u4780
  9110  003066                     u4781:
  9111  003066  EF52  F018         	goto	l4048
  9112  00306A                     u4780:
  9113  00306A  0EF7               	movlw	247
  9114  00306C  6E0A               	movwf	??_atoi^0,c
  9115  00306E  0EFF               	movlw	255
  9116  003070  6E0B               	movwf	(??_atoi+1)^0,c
  9117  003072  C008  FFF6         	movff	atoi@s,tblptrl
  9118  003076  C009  FFF7         	movff	atoi@s+1,tblptrh
  9119  00307A                     	if	0	;tblptru may be non-zero
  9120  00307A                     	endif
  9121  00307A                     	if	0	;tblptru may be non-zero
  9122  00307A                     	endif
  9123  00307A  0008               	tblrd		*
  9124  00307C  50F5               	movf	tablat,w,c
  9125  00307E  6E0C               	movwf	(??_atoi+2)^0,c
  9126  003080  6A0D               	clrf	(??_atoi+3)^0,c
  9127  003082  500A               	movf	??_atoi^0,w,c
  9128  003084  260C               	addwf	(??_atoi+2)^0,f,c
  9129  003086  500B               	movf	(??_atoi+1)^0,w,c
  9130  003088  220D               	addwfc	(??_atoi+3)^0,f,c
  9131  00308A  500D               	movf	(??_atoi+3)^0,w,c
  9132  00308C  E109               	bnz	u4790
  9133  00308E  0E05               	movlw	5
  9134  003090  5C0C               	subwf	(??_atoi+2)^0,w,c
  9135  003092  A0D8               	btfss	status,0,c
  9136  003094  EF4E  F018         	goto	u4791
  9137  003098  EF50  F018         	goto	u4790
  9138  00309C                     u4791:
  9139  00309C  EF52  F018         	goto	l4048
  9140  0030A0                     u4790:
  9141  0030A0  0E00               	movlw	0
  9142  0030A2  6E14               	movwf	_atoi$795^0,c
  9143  0030A4                     l4048:
  9144  0030A4  C014  F010         	movff	_atoi$795,_atoi$794
  9145  0030A8  6A11               	clrf	(_atoi$794+1)^0,c
  9146  0030AA  5010               	movf	_atoi$794^0,w,c
  9147  0030AC  1011               	iorwf	(_atoi$794+1)^0,w,c
  9148  0030AE  A4D8               	btfss	status,2,c
  9149  0030B0  EF5C  F018         	goto	u4801
  9150  0030B4  EF5E  F018         	goto	u4800
  9151  0030B8                     u4801:
  9152  0030B8  EF23  F018         	goto	l4038
  9153  0030BC                     u4800:
  9154  0030BC  EF68  F018         	goto	l4058
  9155  0030C0                     l4054:
  9156  0030C0  0E00               	movlw	0
  9157  0030C2  6E0F               	movwf	(atoi@neg+1)^0,c
  9158  0030C4  0E01               	movlw	1
  9159  0030C6  6E0E               	movwf	atoi@neg^0,c
  9160  0030C8                     l4056:
  9161  0030C8  4A08               	infsnz	atoi@s^0,f,c
  9162  0030CA  2A09               	incf	(atoi@s+1)^0,f,c
  9163  0030CC  EF9D  F018         	goto	l4064
  9164  0030D0                     l4058:
  9165  0030D0  C008  FFF6         	movff	atoi@s,tblptrl
  9166  0030D4  C009  FFF7         	movff	atoi@s+1,tblptrh
  9167  0030D8                     	if	0	;tblptru may be non-zero
  9168  0030D8                     	endif
  9169  0030D8                     	if	0	;tblptru may be non-zero
  9170  0030D8                     	endif
  9171  0030D8  0008               	tblrd		*
  9172  0030DA  50F5               	movf	tablat,w,c
  9173  0030DC  6E0A               	movwf	??_atoi^0,c
  9174  0030DE  6A0B               	clrf	(??_atoi+1)^0,c
  9175                           
  9176                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9177                           ; Switch size 1, requested type "simple"
  9178                           ; Number of cases is 1, Range of values is 0 to 0
  9179                           ; switch strategies available:
  9180                           ; Name         Instructions Cycles
  9181                           ; simple_byte            4     3 (average)
  9182                           ;	Chosen strategy is simple_byte
  9183  0030E0  500B               	movf	(??_atoi+1)^0,w,c
  9184  0030E2  0A00               	xorlw	0	; case 0
  9185  0030E4  B4D8               	btfsc	status,2,c
  9186  0030E6  EF77  F018         	goto	l4712
  9187  0030EA  EF9D  F018         	goto	l4064
  9188  0030EE                     l4712:
  9189                           
  9190                           ; Switch size 1, requested type "simple"
  9191                           ; Number of cases is 2, Range of values is 43 to 45
  9192                           ; switch strategies available:
  9193                           ; Name         Instructions Cycles
  9194                           ; simple_byte            7     4 (average)
  9195                           ;	Chosen strategy is simple_byte
  9196  0030EE  500A               	movf	??_atoi^0,w,c
  9197  0030F0  0A2B               	xorlw	43	; case 43
  9198  0030F2  B4D8               	btfsc	status,2,c
  9199  0030F4  EF64  F018         	goto	l4056
  9200  0030F8  0A06               	xorlw	6	; case 45
  9201  0030FA  B4D8               	btfsc	status,2,c
  9202  0030FC  EF60  F018         	goto	l4054
  9203  003100  EF9D  F018         	goto	l4064
  9204  003104                     l4060:
  9205  003104  C015  F001         	movff	atoi@n,___wmul@multiplier
  9206  003108  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  9207  00310C  0E00               	movlw	0
  9208  00310E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9209  003110  0E0A               	movlw	10
  9210  003112  6E03               	movwf	___wmul@multiplicand^0,c
  9211  003114  ECA3  F01F         	call	___wmul	;wreg free
  9212  003118  C008  FFF6         	movff	atoi@s,tblptrl
  9213  00311C  C009  FFF7         	movff	atoi@s+1,tblptrh
  9214  003120                     	if	0	;tblptru may be non-zero
  9215  003120                     	endif
  9216  003120                     	if	0	;tblptru may be non-zero
  9217  003120                     	endif
  9218  003120  0008               	tblrd		*
  9219  003122  50F5               	movf	tablat,w,c
  9220  003124  5E01               	subwf	?___wmul^0,f,c
  9221  003126  0E00               	movlw	0
  9222  003128  5A02               	subwfb	(?___wmul+1)^0,f,c
  9223  00312A  0E30               	movlw	48
  9224  00312C  2401               	addwf	?___wmul^0,w,c
  9225  00312E  6E15               	movwf	atoi@n^0,c
  9226  003130  0E00               	movlw	0
  9227  003132  2002               	addwfc	(?___wmul+1)^0,w,c
  9228  003134  6E16               	movwf	(atoi@n+1)^0,c
  9229  003136  EF64  F018         	goto	l4056
  9230  00313A                     l4064:
  9231  00313A  0ED0               	movlw	208
  9232  00313C  6E0A               	movwf	??_atoi^0,c
  9233  00313E  0EFF               	movlw	255
  9234  003140  6E0B               	movwf	(??_atoi+1)^0,c
  9235  003142  C008  FFF6         	movff	atoi@s,tblptrl
  9236  003146  C009  FFF7         	movff	atoi@s+1,tblptrh
  9237  00314A                     	if	0	;tblptru may be non-zero
  9238  00314A                     	endif
  9239  00314A                     	if	0	;tblptru may be non-zero
  9240  00314A                     	endif
  9241  00314A  0008               	tblrd		*
  9242  00314C  50F5               	movf	tablat,w,c
  9243  00314E  6E0C               	movwf	(??_atoi+2)^0,c
  9244  003150  6A0D               	clrf	(??_atoi+3)^0,c
  9245  003152  500A               	movf	??_atoi^0,w,c
  9246  003154  260C               	addwf	(??_atoi+2)^0,f,c
  9247  003156  500B               	movf	(??_atoi+1)^0,w,c
  9248  003158  220D               	addwfc	(??_atoi+3)^0,f,c
  9249  00315A  500D               	movf	(??_atoi+3)^0,w,c
  9250  00315C  E10A               	bnz	u4810
  9251  00315E  0E0A               	movlw	10
  9252  003160  5C0C               	subwf	(??_atoi+2)^0,w,c
  9253  003162  A0D8               	btfss	status,0,c
  9254  003164  EFB6  F018         	goto	u4811
  9255  003168  EFB9  F018         	goto	u4810
  9256  00316C                     u4811:
  9257  00316C  0E01               	movlw	1
  9258  00316E  EFBA  F018         	goto	u4820
  9259  003172                     u4810:
  9260  003172  0E00               	movlw	0
  9261  003174                     u4820:
  9262  003174  6E12               	movwf	_atoi$796^0,c
  9263  003176  6A13               	clrf	(_atoi$796+1)^0,c
  9264  003178  5012               	movf	_atoi$796^0,w,c
  9265  00317A  1013               	iorwf	(_atoi$796+1)^0,w,c
  9266  00317C  A4D8               	btfss	status,2,c
  9267  00317E  EFC3  F018         	goto	u4831
  9268  003182  EFC5  F018         	goto	u4830
  9269  003186                     u4831:
  9270  003186  EF82  F018         	goto	l4060
  9271  00318A                     u4830:
  9272  00318A  500E               	movf	atoi@neg^0,w,c
  9273  00318C  100F               	iorwf	(atoi@neg+1)^0,w,c
  9274  00318E  A4D8               	btfss	status,2,c
  9275  003190  EFCC  F018         	goto	u4841
  9276  003194  EFCE  F018         	goto	u4840
  9277  003198                     u4841:
  9278  003198  EFDC  F018         	goto	l1081
  9279  00319C                     u4840:
  9280  00319C  C015  F00A         	movff	atoi@n,??_atoi
  9281  0031A0  C016  F00B         	movff	atoi@n+1,??_atoi+1
  9282  0031A4  1E0A               	comf	??_atoi^0,f,c
  9283  0031A6  1E0B               	comf	(??_atoi+1)^0,f,c
  9284  0031A8  4A0A               	infsnz	??_atoi^0,f,c
  9285  0031AA  2A0B               	incf	(??_atoi+1)^0,f,c
  9286  0031AC  C00A  F008         	movff	??_atoi,?_atoi
  9287  0031B0  C00B  F009         	movff	??_atoi+1,?_atoi+1
  9288  0031B4  EFE0  F018         	goto	l1084
  9289  0031B8                     l1081:
  9290  0031B8  C015  F008         	movff	atoi@n,?_atoi
  9291  0031BC  C016  F009         	movff	atoi@n+1,?_atoi+1
  9292  0031C0                     l1084:
  9293  0031C0  0012               	return		;funcret
  9294  0031C2                     __end_of_atoi:
  9295                           	callstack 0
  9296                           
  9297 ;; *************** function _isspace *****************
  9298 ;; Defined at:
  9299 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\isspace.c"
  9300 ;; Parameters:    Size  Location     Type
  9301 ;;  c               2    0[COMRAM] int 
  9302 ;; Auto vars:     Size  Location     Type
  9303 ;;		None
  9304 ;; Return value:  Size  Location     Type
  9305 ;;                  2    0[COMRAM] int 
  9306 ;; Registers used:
  9307 ;;		wreg, status,2, status,0
  9308 ;; Tracked objects:
  9309 ;;		On entry : 0/0
  9310 ;;		On exit  : 0/0
  9311 ;;		Unchanged: 0/0
  9312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9313 ;;      Params:         2       0       0       0       0       0       0
  9314 ;;      Locals:         1       0       0       0       0       0       0
  9315 ;;      Temps:          4       0       0       0       0       0       0
  9316 ;;      Totals:         7       0       0       0       0       0       0
  9317 ;;Total ram usage:        7 bytes
  9318 ;; Hardware stack levels used:    1
  9319 ;; This function calls:
  9320 ;;		Nothing
  9321 ;; This function is called by:
  9322 ;;		_atoi
  9323 ;; This function uses a non-reentrant model
  9324 ;;
  9325                           
  9326                           	psect	text32
  9327  003D10                     __ptext32:
  9328                           	callstack 0
  9329  003D10                     _isspace:
  9330                           	callstack 25
  9331  003D10  0E01               	movlw	1
  9332  003D12  6E07               	movwf	_isspace$825^0,c
  9333  003D14  0E20               	movlw	32
  9334  003D16  1801               	xorwf	isspace@c^0,w,c
  9335  003D18  1002               	iorwf	(isspace@c+1)^0,w,c
  9336  003D1A  B4D8               	btfsc	status,2,c
  9337  003D1C  EF92  F01E         	goto	u4241
  9338  003D20  EF94  F01E         	goto	u4240
  9339  003D24                     u4241:
  9340  003D24  EFAD  F01E         	goto	l3734
  9341  003D28                     u4240:
  9342  003D28  0EF7               	movlw	247
  9343  003D2A  6E03               	movwf	??_isspace^0,c
  9344  003D2C  0EFF               	movlw	255
  9345  003D2E  6E04               	movwf	(??_isspace+1)^0,c
  9346  003D30  C001  F005         	movff	isspace@c,??_isspace+2
  9347  003D34  C002  F006         	movff	isspace@c+1,??_isspace+3
  9348  003D38  5003               	movf	??_isspace^0,w,c
  9349  003D3A  2605               	addwf	(??_isspace+2)^0,f,c
  9350  003D3C  5004               	movf	(??_isspace+1)^0,w,c
  9351  003D3E  2206               	addwfc	(??_isspace+3)^0,f,c
  9352  003D40  5006               	movf	(??_isspace+3)^0,w,c
  9353  003D42  E109               	bnz	u4250
  9354  003D44  0E05               	movlw	5
  9355  003D46  5C05               	subwf	(??_isspace+2)^0,w,c
  9356  003D48  A0D8               	btfss	status,0,c
  9357  003D4A  EFA9  F01E         	goto	u4251
  9358  003D4E  EFAB  F01E         	goto	u4250
  9359  003D52                     u4251:
  9360  003D52  EFAD  F01E         	goto	l3734
  9361  003D56                     u4250:
  9362  003D56  0E00               	movlw	0
  9363  003D58  6E07               	movwf	_isspace$825^0,c
  9364  003D5A                     l3734:
  9365  003D5A  C007  F001         	movff	_isspace$825,?_isspace
  9366  003D5E  6A02               	clrf	(?_isspace+1)^0,c
  9367  003D60  0012               	return		;funcret
  9368  003D62                     __end_of_isspace:
  9369                           	callstack 0
  9370                           
  9371 ;; *************** function _isdigit *****************
  9372 ;; Defined at:
  9373 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\isdigit.c"
  9374 ;; Parameters:    Size  Location     Type
  9375 ;;  c               2    0[COMRAM] int 
  9376 ;; Auto vars:     Size  Location     Type
  9377 ;;		None
  9378 ;; Return value:  Size  Location     Type
  9379 ;;                  2    0[COMRAM] int 
  9380 ;; Registers used:
  9381 ;;		wreg, status,2, status,0
  9382 ;; Tracked objects:
  9383 ;;		On entry : 0/0
  9384 ;;		On exit  : 0/0
  9385 ;;		Unchanged: 0/0
  9386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9387 ;;      Params:         2       0       0       0       0       0       0
  9388 ;;      Locals:         0       0       0       0       0       0       0
  9389 ;;      Temps:          4       0       0       0       0       0       0
  9390 ;;      Totals:         6       0       0       0       0       0       0
  9391 ;;Total ram usage:        6 bytes
  9392 ;; Hardware stack levels used:    1
  9393 ;; This function calls:
  9394 ;;		Nothing
  9395 ;; This function is called by:
  9396 ;;		_vfpfcnvrt
  9397 ;;		_atoi
  9398 ;; This function uses a non-reentrant model
  9399 ;;
  9400                           
  9401                           	psect	text33
  9402  003E5C                     __ptext33:
  9403                           	callstack 0
  9404  003E5C                     _isdigit:
  9405                           	callstack 26
  9406  003E5C  0ED0               	movlw	208
  9407  003E5E  6E03               	movwf	??_isdigit^0,c
  9408  003E60  0EFF               	movlw	255
  9409  003E62  6E04               	movwf	(??_isdigit+1)^0,c
  9410  003E64  C001  F005         	movff	isdigit@c,??_isdigit+2
  9411  003E68  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  9412  003E6C  5003               	movf	??_isdigit^0,w,c
  9413  003E6E  2605               	addwf	(??_isdigit+2)^0,f,c
  9414  003E70  5004               	movf	(??_isdigit+1)^0,w,c
  9415  003E72  2206               	addwfc	(??_isdigit+3)^0,f,c
  9416  003E74  5006               	movf	(??_isdigit+3)^0,w,c
  9417  003E76  E10A               	bnz	u4220
  9418  003E78  0E0A               	movlw	10
  9419  003E7A  5C05               	subwf	(??_isdigit+2)^0,w,c
  9420  003E7C  A0D8               	btfss	status,0,c
  9421  003E7E  EF43  F01F         	goto	u4221
  9422  003E82  EF46  F01F         	goto	u4220
  9423  003E86                     u4221:
  9424  003E86  0E01               	movlw	1
  9425  003E88  EF47  F01F         	goto	u4230
  9426  003E8C                     u4220:
  9427  003E8C  0E00               	movlw	0
  9428  003E8E                     u4230:
  9429  003E8E  6E01               	movwf	?_isdigit^0,c
  9430  003E90  6A02               	clrf	(?_isdigit+1)^0,c
  9431  003E92  0012               	return		;funcret
  9432  003E94                     __end_of_isdigit:
  9433                           	callstack 0
  9434                           
  9435 ;; *************** function ___wmul *****************
  9436 ;; Defined at:
  9437 ;;		line 15 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  9438 ;; Parameters:    Size  Location     Type
  9439 ;;  multiplier      2    0[COMRAM] unsigned int 
  9440 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9441 ;; Auto vars:     Size  Location     Type
  9442 ;;  product         2    4[COMRAM] unsigned int 
  9443 ;; Return value:  Size  Location     Type
  9444 ;;                  2    0[COMRAM] unsigned int 
  9445 ;; Registers used:
  9446 ;;		wreg, status,2, status,0, prodl, prodh
  9447 ;; Tracked objects:
  9448 ;;		On entry : 0/0
  9449 ;;		On exit  : 0/0
  9450 ;;		Unchanged: 0/0
  9451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9452 ;;      Params:         4       0       0       0       0       0       0
  9453 ;;      Locals:         2       0       0       0       0       0       0
  9454 ;;      Temps:          0       0       0       0       0       0       0
  9455 ;;      Totals:         6       0       0       0       0       0       0
  9456 ;;Total ram usage:        6 bytes
  9457 ;; Hardware stack levels used:    1
  9458 ;; This function calls:
  9459 ;;		Nothing
  9460 ;; This function is called by:
  9461 ;;		_encher_tanque
  9462 ;;		_atoi
  9463 ;;		_pwmSet1
  9464 ;;		_pwmSet2
  9465 ;; This function uses a non-reentrant model
  9466 ;;
  9467                           
  9468                           	psect	text34
  9469  003F46                     __ptext34:
  9470                           	callstack 0
  9471  003F46                     ___wmul:
  9472                           	callstack 25
  9473  003F46  5001               	movf	___wmul@multiplier^0,w,c
  9474  003F48  0203               	mulwf	___wmul@multiplicand^0,c
  9475  003F4A  CFF3 F005          	movff	prodl,___wmul@product
  9476  003F4E  CFF4 F006          	movff	prodh,___wmul@product+1
  9477  003F52  5001               	movf	___wmul@multiplier^0,w,c
  9478  003F54  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9479  003F56  50F3               	movf	243,w,c
  9480  003F58  2606               	addwf	(___wmul@product+1)^0,f,c
  9481  003F5A  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9482  003F5C  0203               	mulwf	___wmul@multiplicand^0,c
  9483  003F5E  50F3               	movf	243,w,c
  9484  003F60  2606               	addwf	(___wmul@product+1)^0,f,c
  9485  003F62  C005  F001         	movff	___wmul@product,?___wmul
  9486  003F66  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9487  003F6A  0012               	return		;funcret
  9488  003F6C                     __end_of___wmul:
  9489                           	callstack 0
  9490                           
  9491 ;; *************** function _lcd_str *****************
  9492 ;; Defined at:
  9493 ;;		line 47 in file "lcd.c"
  9494 ;; Parameters:    Size  Location     Type
  9495 ;;  str             2    7[COMRAM] PTR const unsigned char 
  9496 ;;		 -> STR_30(14), STR_29(13), STR_28(9), STR_27(14), 
  9497 ;;		 -> STR_26(3), esvaziar_tanque@y(8), STR_24(11), STR_23(14), 
  9498 ;;		 -> STR_22(11), STR_21(11), STR_20(11), STR_19(3), 
  9499 ;;		 -> STR_18(8), ver_quantidade@y(8), STR_16(14), STR_15(13), 
  9500 ;;		 -> STR_14(9), STR_13(12), STR_12(3), encher_tanque@y(8), 
  9501 ;;		 -> STR_10(11), STR_9(16), STR_8(11), STR_7(11), 
  9502 ;;		 -> STR_6(12), STR_5(19), STR_4(15), STR_3(14), 
  9503 ;;		 -> STR_2(11), STR_1(17), 
  9504 ;; Auto vars:     Size  Location     Type
  9505 ;;  i               1   11[COMRAM] unsigned char 
  9506 ;; Return value:  Size  Location     Type
  9507 ;;                  1    wreg      void 
  9508 ;; Registers used:
  9509 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9510 ;; Tracked objects:
  9511 ;;		On entry : 0/0
  9512 ;;		On exit  : 0/0
  9513 ;;		Unchanged: 0/0
  9514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9515 ;;      Params:         2       0       0       0       0       0       0
  9516 ;;      Locals:         1       0       0       0       0       0       0
  9517 ;;      Temps:          2       0       0       0       0       0       0
  9518 ;;      Totals:         5       0       0       0       0       0       0
  9519 ;;Total ram usage:        5 bytes
  9520 ;; Hardware stack levels used:    1
  9521 ;; Hardware stack levels required when called:    2
  9522 ;; This function calls:
  9523 ;;		_lcd_dat
  9524 ;; This function is called by:
  9525 ;;		_main
  9526 ;;		_encher_tanque
  9527 ;;		_ver_quantidade
  9528 ;;		_esvaziar_tanque
  9529 ;; This function uses a non-reentrant model
  9530 ;;
  9531                           
  9532                           	psect	text35
  9533  003A06                     __ptext35:
  9534                           	callstack 0
  9535  003A06                     _lcd_str:
  9536                           	callstack 27
  9537  003A06                     
  9538                           ;lcd.c: 48:     unsigned char i = 0;
  9539  003A06  0E00               	movlw	0
  9540  003A08  6E0C               	movwf	lcd_str@i^0,c
  9541                           
  9542                           ;lcd.c: 50:     while (str[i] != 0) {
  9543  003A0A  EF20  F01D         	goto	l4258
  9544  003A0E                     l4254:
  9545                           
  9546                           ;lcd.c: 51:         lcd_dat(str[i]);
  9547  003A0E  500C               	movf	lcd_str@i^0,w,c
  9548  003A10  2408               	addwf	lcd_str@str^0,w,c
  9549  003A12  6E0A               	movwf	??_lcd_str^0,c
  9550  003A14  0E00               	movlw	0
  9551  003A16  2009               	addwfc	(lcd_str@str+1)^0,w,c
  9552  003A18  6E0B               	movwf	(??_lcd_str+1)^0,c
  9553  003A1A  C00A  FFF6         	movff	??_lcd_str,tblptrl
  9554  003A1E  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
  9555  003A22  6AF8               	clrf	tblptru,c
  9556  003A24  0E05               	movlw	(high __ramtop+-1)
  9557  003A26  64F7               	cpfsgt	tblptrh,c
  9558  003A28  D003               	bra	u5087
  9559  003A2A  0008               	tblrd		*
  9560  003A2C  50F5               	movf	tablat,w,c
  9561  003A2E  D005               	bra	u5080
  9562  003A30                     u5087:
  9563  003A30  CFF6 FFE9          	movff	tblptrl,fsr0l
  9564  003A34  CFF7 FFEA          	movff	tblptrh,fsr0h
  9565  003A38  50EF               	movf	indf0,w,c
  9566  003A3A                     u5080:
  9567  003A3A  EC65  F01F         	call	_lcd_dat
  9568  003A3E                     
  9569                           ;lcd.c: 52:         i++;
  9570  003A3E  2A0C               	incf	lcd_str@i^0,f,c
  9571  003A40                     l4258:
  9572                           
  9573                           ;lcd.c: 50:     while (str[i] != 0) {
  9574  003A40  500C               	movf	lcd_str@i^0,w,c
  9575  003A42  2408               	addwf	lcd_str@str^0,w,c
  9576  003A44  6E0A               	movwf	??_lcd_str^0,c
  9577  003A46  0E00               	movlw	0
  9578  003A48  2009               	addwfc	(lcd_str@str+1)^0,w,c
  9579  003A4A  6E0B               	movwf	(??_lcd_str+1)^0,c
  9580  003A4C  C00A  FFF6         	movff	??_lcd_str,tblptrl
  9581  003A50  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
  9582  003A54  6AF8               	clrf	tblptru,c
  9583  003A56  0E05               	movlw	(high __ramtop+-1)
  9584  003A58  64F7               	cpfsgt	tblptrh,c
  9585  003A5A  D003               	bra	u5097
  9586  003A5C  0008               	tblrd		*
  9587  003A5E  50F5               	movf	tablat,w,c
  9588  003A60  D005               	bra	u5090
  9589  003A62                     u5097:
  9590  003A62  CFF6 FFE9          	movff	tblptrl,fsr0l
  9591  003A66  CFF7 FFEA          	movff	tblptrh,fsr0h
  9592  003A6A  50EF               	movf	indf0,w,c
  9593  003A6C                     u5090:
  9594  003A6C  0900               	iorlw	0
  9595  003A6E  A4D8               	btfss	status,2,c
  9596  003A70  EF3C  F01D         	goto	u5101
  9597  003A74  EF3E  F01D         	goto	u5100
  9598  003A78                     u5101:
  9599  003A78  EF07  F01D         	goto	l4254
  9600  003A7C                     u5100:
  9601  003A7C  0012               	return		;funcret
  9602  003A7E                     __end_of_lcd_str:
  9603                           	callstack 0
  9604                           
  9605 ;; *************** function _lcd_dat *****************
  9606 ;; Defined at:
  9607 ;;		line 19 in file "lcd.c"
  9608 ;; Parameters:    Size  Location     Type
  9609 ;;  val             1    wreg     unsigned char 
  9610 ;; Auto vars:     Size  Location     Type
  9611 ;;  val             1    6[COMRAM] unsigned char 
  9612 ;; Return value:  Size  Location     Type
  9613 ;;                  1    wreg      void 
  9614 ;; Registers used:
  9615 ;;		wreg, status,2, status,0, cstack
  9616 ;; Tracked objects:
  9617 ;;		On entry : 0/0
  9618 ;;		On exit  : 0/0
  9619 ;;		Unchanged: 0/0
  9620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9621 ;;      Params:         0       0       0       0       0       0       0
  9622 ;;      Locals:         1       0       0       0       0       0       0
  9623 ;;      Temps:          0       0       0       0       0       0       0
  9624 ;;      Totals:         1       0       0       0       0       0       0
  9625 ;;Total ram usage:        1 bytes
  9626 ;; Hardware stack levels used:    1
  9627 ;; Hardware stack levels required when called:    1
  9628 ;; This function calls:
  9629 ;;		_atraso_ms
  9630 ;;		_lcd_wr
  9631 ;; This function is called by:
  9632 ;;		_lcd_str
  9633 ;;		_encher_tanque
  9634 ;; This function uses a non-reentrant model
  9635 ;;
  9636                           
  9637                           	psect	text36
  9638  003ECA                     __ptext36:
  9639                           	callstack 0
  9640  003ECA                     _lcd_dat:
  9641                           	callstack 27
  9642                           
  9643                           ;incstack = 0
  9644                           ;lcd_dat@val stored from wreg
  9645  003ECA  6E07               	movwf	lcd_dat@val^0,c
  9646  003ECC                     
  9647                           ;lcd.c: 20:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  9648  003ECC  8284               	bsf	132,1,c	;volatile
  9649  003ECE                     
  9650                           ;lcd.c: 21:     lcd_wr(val);
  9651  003ECE  5007               	movf	lcd_dat@val^0,w,c
  9652  003ED0  ECBB  F01F         	call	_lcd_wr
  9653  003ED4                     
  9654                           ;lcd.c: 22:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<2));
  9655  003ED4  8484               	bsf	132,2,c	;volatile
  9656  003ED6                     
  9657                           ;lcd.c: 23:     atraso_ms(3);
  9658  003ED6  0E00               	movlw	0
  9659  003ED8  6E02               	movwf	(atraso_ms@t+1)^0,c
  9660  003EDA  0E03               	movlw	3
  9661  003EDC  6E01               	movwf	atraso_ms@t^0,c
  9662  003EDE  EC3F  F01D         	call	_atraso_ms	;wreg free
  9663  003EE2                     
  9664                           ;lcd.c: 24:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  9665  003EE2  9284               	bcf	132,1,c	;volatile
  9666  003EE4                     
  9667                           ;lcd.c: 25:     atraso_ms(3);
  9668  003EE4  0E00               	movlw	0
  9669  003EE6  6E02               	movwf	(atraso_ms@t+1)^0,c
  9670  003EE8  0E03               	movlw	3
  9671  003EEA  6E01               	movwf	atraso_ms@t^0,c
  9672  003EEC  EC3F  F01D         	call	_atraso_ms	;wreg free
  9673  003EF0                     
  9674                           ;lcd.c: 26:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  9675  003EF0  8284               	bsf	132,1,c	;volatile
  9676  003EF2  0012               	return		;funcret
  9677  003EF4                     __end_of_lcd_dat:
  9678                           	callstack 0
  9679                           
  9680 ;; *************** function _lcd_cmd *****************
  9681 ;; Defined at:
  9682 ;;		line 9 in file "lcd.c"
  9683 ;; Parameters:    Size  Location     Type
  9684 ;;  val             1    wreg     unsigned char 
  9685 ;; Auto vars:     Size  Location     Type
  9686 ;;  val             1    6[COMRAM] unsigned char 
  9687 ;; Return value:  Size  Location     Type
  9688 ;;                  1    wreg      void 
  9689 ;; Registers used:
  9690 ;;		wreg, status,2, status,0, cstack
  9691 ;; Tracked objects:
  9692 ;;		On entry : 0/0
  9693 ;;		On exit  : 0/0
  9694 ;;		Unchanged: 0/0
  9695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9696 ;;      Params:         0       0       0       0       0       0       0
  9697 ;;      Locals:         1       0       0       0       0       0       0
  9698 ;;      Temps:          0       0       0       0       0       0       0
  9699 ;;      Totals:         1       0       0       0       0       0       0
  9700 ;;Total ram usage:        1 bytes
  9701 ;; Hardware stack levels used:    1
  9702 ;; Hardware stack levels required when called:    1
  9703 ;; This function calls:
  9704 ;;		_atraso_ms
  9705 ;;		_lcd_wr
  9706 ;; This function is called by:
  9707 ;;		_lcd_init
  9708 ;;		_main
  9709 ;;		_encher_tanque
  9710 ;;		_ver_quantidade
  9711 ;;		_esvaziar_tanque
  9712 ;; This function uses a non-reentrant model
  9713 ;;
  9714                           
  9715                           	psect	text37
  9716  003EF4                     __ptext37:
  9717                           	callstack 0
  9718  003EF4                     _lcd_cmd:
  9719                           	callstack 28
  9720                           
  9721                           ;incstack = 0
  9722                           ;lcd_cmd@val stored from wreg
  9723  003EF4  6E07               	movwf	lcd_cmd@val^0,c
  9724  003EF6                     
  9725                           ;lcd.c: 10:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  9726  003EF6  8284               	bsf	132,1,c	;volatile
  9727  003EF8                     
  9728                           ;lcd.c: 11:     lcd_wr(val);
  9729  003EF8  5007               	movf	lcd_cmd@val^0,w,c
  9730  003EFA  ECBB  F01F         	call	_lcd_wr
  9731  003EFE                     
  9732                           ;lcd.c: 12:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<2));
  9733  003EFE  9484               	bcf	132,2,c	;volatile
  9734  003F00                     
  9735                           ;lcd.c: 13:     atraso_ms(3);
  9736  003F00  0E00               	movlw	0
  9737  003F02  6E02               	movwf	(atraso_ms@t+1)^0,c
  9738  003F04  0E03               	movlw	3
  9739  003F06  6E01               	movwf	atraso_ms@t^0,c
  9740  003F08  EC3F  F01D         	call	_atraso_ms	;wreg free
  9741  003F0C                     
  9742                           ;lcd.c: 14:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  9743  003F0C  9284               	bcf	132,1,c	;volatile
  9744  003F0E                     
  9745                           ;lcd.c: 15:     atraso_ms(3);
  9746  003F0E  0E00               	movlw	0
  9747  003F10  6E02               	movwf	(atraso_ms@t+1)^0,c
  9748  003F12  0E03               	movlw	3
  9749  003F14  6E01               	movwf	atraso_ms@t^0,c
  9750  003F16  EC3F  F01D         	call	_atraso_ms	;wreg free
  9751  003F1A                     
  9752                           ;lcd.c: 16:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  9753  003F1A  8284               	bsf	132,1,c	;volatile
  9754  003F1C  0012               	return		;funcret
  9755  003F1E                     __end_of_lcd_cmd:
  9756                           	callstack 0
  9757                           
  9758 ;; *************** function _lcd_wr *****************
  9759 ;; Defined at:
  9760 ;;		line 5 in file "lcd.c"
  9761 ;; Parameters:    Size  Location     Type
  9762 ;;  val             1    wreg     unsigned char 
  9763 ;; Auto vars:     Size  Location     Type
  9764 ;;  val             1    0[COMRAM] unsigned char 
  9765 ;; Return value:  Size  Location     Type
  9766 ;;                  1    wreg      void 
  9767 ;; Registers used:
  9768 ;;		wreg
  9769 ;; Tracked objects:
  9770 ;;		On entry : 0/0
  9771 ;;		On exit  : 0/0
  9772 ;;		Unchanged: 0/0
  9773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9774 ;;      Params:         0       0       0       0       0       0       0
  9775 ;;      Locals:         1       0       0       0       0       0       0
  9776 ;;      Temps:          0       0       0       0       0       0       0
  9777 ;;      Totals:         1       0       0       0       0       0       0
  9778 ;;Total ram usage:        1 bytes
  9779 ;; Hardware stack levels used:    1
  9780 ;; This function calls:
  9781 ;;		Nothing
  9782 ;; This function is called by:
  9783 ;;		_lcd_cmd
  9784 ;;		_lcd_dat
  9785 ;; This function uses a non-reentrant model
  9786 ;;
  9787                           
  9788                           	psect	text38
  9789  003F76                     __ptext38:
  9790                           	callstack 0
  9791  003F76                     _lcd_wr:
  9792                           	callstack 27
  9793                           
  9794                           ;incstack = 0
  9795                           ;lcd_wr@val stored from wreg
  9796  003F76  6E01               	movwf	lcd_wr@val^0,c
  9797  003F78                     
  9798                           ;lcd.c: 6:     (*(volatile __near unsigned char*)0xF83) = val;
  9799  003F78  C001  FF83         	movff	lcd_wr@val,3971	;volatile
  9800  003F7C  0012               	return		;funcret
  9801  003F7E                     __end_of_lcd_wr:
  9802                           	callstack 0
  9803                           
  9804 ;; *************** function _atraso_ms *****************
  9805 ;; Defined at:
  9806 ;;		line 3 in file "delay.c"
  9807 ;; Parameters:    Size  Location     Type
  9808 ;;  t               2    0[COMRAM] int 
  9809 ;; Auto vars:     Size  Location     Type
  9810 ;;  i               2    2[COMRAM] volatile unsigned int 
  9811 ;;  k               1    5[COMRAM] volatile unsigned char 
  9812 ;;  j               1    4[COMRAM] volatile unsigned char 
  9813 ;; Return value:  Size  Location     Type
  9814 ;;                  1    wreg      void 
  9815 ;; Registers used:
  9816 ;;		wreg, status,2, status,0
  9817 ;; Tracked objects:
  9818 ;;		On entry : 0/0
  9819 ;;		On exit  : 0/0
  9820 ;;		Unchanged: 0/0
  9821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9822 ;;      Params:         2       0       0       0       0       0       0
  9823 ;;      Locals:         4       0       0       0       0       0       0
  9824 ;;      Temps:          0       0       0       0       0       0       0
  9825 ;;      Totals:         6       0       0       0       0       0       0
  9826 ;;Total ram usage:        6 bytes
  9827 ;; Hardware stack levels used:    1
  9828 ;; This function calls:
  9829 ;;		Nothing
  9830 ;; This function is called by:
  9831 ;;		_lcd_cmd
  9832 ;;		_lcd_dat
  9833 ;;		_lcd_init
  9834 ;;		_tc_tecla
  9835 ;;		_main
  9836 ;;		_encher_tanque
  9837 ;;		_esvaziar_tanque
  9838 ;; This function uses a non-reentrant model
  9839 ;;
  9840                           
  9841                           	psect	text39
  9842  003A7E                     __ptext39:
  9843                           	callstack 0
  9844  003A7E                     _atraso_ms:
  9845                           	callstack 27
  9846  003A7E                     
  9847                           ;delay.c: 4:     volatile unsigned char j, k;;delay.c: 5:     volatile unsigned int i;;d
      +                          elay.c: 7:     for (i = 0; i < (t); i++) {
  9848  003A7E  0E00               	movlw	0
  9849  003A80  6E04               	movwf	(atraso_ms@i+1)^0,c	;volatile
  9850  003A82  0E00               	movlw	0
  9851  003A84  6E03               	movwf	atraso_ms@i^0,c	;volatile
  9852  003A86  EF65  F01D         	goto	l4122
  9853  003A8A                     l4100:
  9854                           
  9855                           ;delay.c: 8:         for (j = 0; j < 41; j++) {
  9856  003A8A  0E00               	movlw	0
  9857  003A8C  6E05               	movwf	atraso_ms@j^0,c	;volatile
  9858  003A8E                     l4102:
  9859  003A8E  0E28               	movlw	40
  9860  003A90  6405               	cpfsgt	atraso_ms@j^0,c	;volatile
  9861  003A92  EF4D  F01D         	goto	u4901
  9862  003A96  EF4F  F01D         	goto	u4900
  9863  003A9A                     u4901:
  9864  003A9A  EF51  F01D         	goto	l4106
  9865  003A9E                     u4900:
  9866  003A9E  EF63  F01D         	goto	l4120
  9867  003AA2                     l4106:
  9868                           
  9869                           ;delay.c: 9:             for (k = 0; k < 3; k++);
  9870  003AA2  0E00               	movlw	0
  9871  003AA4  6E06               	movwf	atraso_ms@k^0,c	;volatile
  9872  003AA6                     l4108:
  9873  003AA6  0E02               	movlw	2
  9874  003AA8  6406               	cpfsgt	atraso_ms@k^0,c	;volatile
  9875  003AAA  EF59  F01D         	goto	u4911
  9876  003AAE  EF5B  F01D         	goto	u4910
  9877  003AB2                     u4911:
  9878  003AB2  EF5D  F01D         	goto	l4112
  9879  003AB6                     u4910:
  9880  003AB6  EF60  F01D         	goto	l4116
  9881  003ABA                     l4112:
  9882  003ABA  2A06               	incf	atraso_ms@k^0,f,c	;volatile
  9883  003ABC  EF53  F01D         	goto	l4108
  9884  003AC0                     l4116:
  9885                           
  9886                           ;delay.c: 10:         }
  9887  003AC0  2A05               	incf	atraso_ms@j^0,f,c	;volatile
  9888  003AC2  EF47  F01D         	goto	l4102
  9889  003AC6                     l4120:
  9890                           
  9891                           ;delay.c: 11:     }
  9892  003AC6  4A03               	infsnz	atraso_ms@i^0,f,c	;volatile
  9893  003AC8  2A04               	incf	(atraso_ms@i+1)^0,f,c	;volatile
  9894  003ACA                     l4122:
  9895  003ACA  5001               	movf	atraso_ms@t^0,w,c
  9896  003ACC  5C03               	subwf	atraso_ms@i^0,w,c	;volatile
  9897  003ACE  5002               	movf	(atraso_ms@t+1)^0,w,c
  9898  003AD0  5804               	subwfb	(atraso_ms@i+1)^0,w,c	;volatile
  9899  003AD2  A0D8               	btfss	status,0,c
  9900  003AD4  EF6E  F01D         	goto	u4921
  9901  003AD8  EF70  F01D         	goto	u4920
  9902  003ADC                     u4921:
  9903  003ADC  EF45  F01D         	goto	l4100
  9904  003AE0                     u4920:
  9905  003AE0  0012               	return		;funcret
  9906  003AE2                     __end_of_atraso_ms:
  9907                           	callstack 0
  9908                           
  9909 ;; *************** function ___xxtofl *****************
  9910 ;; Defined at:
  9911 ;;		line 10 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
  9912 ;; Parameters:    Size  Location     Type
  9913 ;;  sign            1    wreg     unsigned char 
  9914 ;;  val             4    0[COMRAM] long 
  9915 ;; Auto vars:     Size  Location     Type
  9916 ;;  sign            1    8[COMRAM] unsigned char 
  9917 ;;  arg             4   10[COMRAM] unsigned long 
  9918 ;;  exp             1    9[COMRAM] unsigned char 
  9919 ;; Return value:  Size  Location     Type
  9920 ;;                  4    0[COMRAM] unsigned char 
  9921 ;; Registers used:
  9922 ;;		wreg, status,2, status,0
  9923 ;; Tracked objects:
  9924 ;;		On entry : 0/0
  9925 ;;		On exit  : 0/0
  9926 ;;		Unchanged: 0/0
  9927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9928 ;;      Params:         4       0       0       0       0       0       0
  9929 ;;      Locals:         6       0       0       0       0       0       0
  9930 ;;      Temps:          4       0       0       0       0       0       0
  9931 ;;      Totals:        14       0       0       0       0       0       0
  9932 ;;Total ram usage:       14 bytes
  9933 ;; Hardware stack levels used:    1
  9934 ;; This function calls:
  9935 ;;		Nothing
  9936 ;; This function is called by:
  9937 ;;		_encher_tanque
  9938 ;; This function uses a non-reentrant model
  9939 ;;
  9940                           
  9941                           	psect	text40
  9942  002E7E                     __ptext40:
  9943                           	callstack 0
  9944  002E7E                     ___xxtofl:
  9945                           	callstack 29
  9946                           
  9947                           ;incstack = 0
  9948                           ;___xxtofl@sign stored from wreg
  9949  002E7E  6E09               	movwf	___xxtofl@sign^0,c
  9950  002E80  5009               	movf	___xxtofl@sign^0,w,c
  9951  002E82  B4D8               	btfsc	status,2,c
  9952  002E84  EF46  F017         	goto	u5291
  9953  002E88  EF48  F017         	goto	u5290
  9954  002E8C                     u5291:
  9955  002E8C  EF6A  F017         	goto	l851
  9956  002E90                     u5290:
  9957  002E90  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9958  002E92  EF4F  F017         	goto	u5300
  9959  002E96  EF4D  F017         	goto	u5301
  9960  002E9A                     u5301:
  9961  002E9A  EF6A  F017         	goto	l851
  9962  002E9E                     u5300:
  9963  002E9E  C001  F005         	movff	___xxtofl@val,??___xxtofl
  9964  002EA2  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  9965  002EA6  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  9966  002EAA  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  9967  002EAE  1E05               	comf	??___xxtofl^0,f,c
  9968  002EB0  1E06               	comf	(??___xxtofl+1)^0,f,c
  9969  002EB2  1E07               	comf	(??___xxtofl+2)^0,f,c
  9970  002EB4  1E08               	comf	(??___xxtofl+3)^0,f,c
  9971  002EB6  2A05               	incf	??___xxtofl^0,f,c
  9972  002EB8  0E00               	movlw	0
  9973  002EBA  2206               	addwfc	(??___xxtofl+1)^0,f,c
  9974  002EBC  2207               	addwfc	(??___xxtofl+2)^0,f,c
  9975  002EBE  2208               	addwfc	(??___xxtofl+3)^0,f,c
  9976  002EC0  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  9977  002EC4  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  9978  002EC8  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  9979  002ECC  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  9980  002ED0  EF72  F017         	goto	l4352
  9981  002ED4                     l851:
  9982  002ED4  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  9983  002ED8  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9984  002EDC  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9985  002EE0  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9986  002EE4                     l4352:
  9987  002EE4  5001               	movf	___xxtofl@val^0,w,c
  9988  002EE6  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  9989  002EE8  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  9990  002EEA  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  9991  002EEC  A4D8               	btfss	status,2,c
  9992  002EEE  EF7B  F017         	goto	u5311
  9993  002EF2  EF7D  F017         	goto	u5310
  9994  002EF6                     u5311:
  9995  002EF6  EF87  F017         	goto	l4358
  9996  002EFA                     u5310:
  9997  002EFA  0E00               	movlw	0
  9998  002EFC  6E01               	movwf	?___xxtofl^0,c
  9999  002EFE  0E00               	movlw	0
 10000  002F00  6E02               	movwf	(?___xxtofl+1)^0,c
 10001  002F02  0E00               	movlw	0
 10002  002F04  6E03               	movwf	(?___xxtofl+2)^0,c
 10003  002F06  0E00               	movlw	0
 10004  002F08  6E04               	movwf	(?___xxtofl+3)^0,c
 10005  002F0A  EF18  F018         	goto	l854
 10006  002F0E                     l4358:
 10007  002F0E  0E96               	movlw	150
 10008  002F10  6E0A               	movwf	___xxtofl@exp^0,c
 10009  002F12  EF91  F017         	goto	l4362
 10010  002F16                     l4360:
 10011  002F16  2A0A               	incf	___xxtofl@exp^0,f,c
 10012  002F18  90D8               	bcf	status,0,c
 10013  002F1A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 10014  002F1C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 10015  002F1E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 10016  002F20  320B               	rrcf	___xxtofl@arg^0,f,c
 10017  002F22                     l4362:
 10018  002F22  0E00               	movlw	0
 10019  002F24  140B               	andwf	___xxtofl@arg^0,w,c
 10020  002F26  6E05               	movwf	??___xxtofl^0,c
 10021  002F28  0E00               	movlw	0
 10022  002F2A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 10023  002F2C  6E06               	movwf	(??___xxtofl+1)^0,c
 10024  002F2E  0E00               	movlw	0
 10025  002F30  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 10026  002F32  6E07               	movwf	(??___xxtofl+2)^0,c
 10027  002F34  0EFE               	movlw	254
 10028  002F36  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 10029  002F38  6E08               	movwf	(??___xxtofl+3)^0,c
 10030  002F3A  5005               	movf	??___xxtofl^0,w,c
 10031  002F3C  1006               	iorwf	(??___xxtofl+1)^0,w,c
 10032  002F3E  1007               	iorwf	(??___xxtofl+2)^0,w,c
 10033  002F40  1008               	iorwf	(??___xxtofl+3)^0,w,c
 10034  002F42  A4D8               	btfss	status,2,c
 10035  002F44  EFA6  F017         	goto	u5321
 10036  002F48  EFA8  F017         	goto	u5320
 10037  002F4C                     u5321:
 10038  002F4C  EF8B  F017         	goto	l4360
 10039  002F50                     u5320:
 10040  002F50  EFB6  F017         	goto	l858
 10041  002F54                     l4364:
 10042  002F54  2A0A               	incf	___xxtofl@exp^0,f,c
 10043  002F56  0E01               	movlw	1
 10044  002F58  260B               	addwf	___xxtofl@arg^0,f,c
 10045  002F5A  0E00               	movlw	0
 10046  002F5C  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 10047  002F5E  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 10048  002F60  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 10049  002F62  90D8               	bcf	status,0,c
 10050  002F64  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 10051  002F66  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 10052  002F68  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 10053  002F6A  320B               	rrcf	___xxtofl@arg^0,f,c
 10054  002F6C                     l858:
 10055  002F6C  0E00               	movlw	0
 10056  002F6E  140B               	andwf	___xxtofl@arg^0,w,c
 10057  002F70  6E05               	movwf	??___xxtofl^0,c
 10058  002F72  0E00               	movlw	0
 10059  002F74  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 10060  002F76  6E06               	movwf	(??___xxtofl+1)^0,c
 10061  002F78  0E00               	movlw	0
 10062  002F7A  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 10063  002F7C  6E07               	movwf	(??___xxtofl+2)^0,c
 10064  002F7E  0EFF               	movlw	255
 10065  002F80  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 10066  002F82  6E08               	movwf	(??___xxtofl+3)^0,c
 10067  002F84  5005               	movf	??___xxtofl^0,w,c
 10068  002F86  1006               	iorwf	(??___xxtofl+1)^0,w,c
 10069  002F88  1007               	iorwf	(??___xxtofl+2)^0,w,c
 10070  002F8A  1008               	iorwf	(??___xxtofl+3)^0,w,c
 10071  002F8C  A4D8               	btfss	status,2,c
 10072  002F8E  EFCB  F017         	goto	u5331
 10073  002F92  EFCD  F017         	goto	u5330
 10074  002F96                     u5331:
 10075  002F96  EFAA  F017         	goto	l4364
 10076  002F9A                     u5330:
 10077  002F9A  EFD5  F017         	goto	l4372
 10078  002F9E                     l4370:
 10079  002F9E  060A               	decf	___xxtofl@exp^0,f,c
 10080  002FA0  90D8               	bcf	status,0,c
 10081  002FA2  360B               	rlcf	___xxtofl@arg^0,f,c
 10082  002FA4  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 10083  002FA6  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 10084  002FA8  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 10085  002FAA                     l4372:
 10086  002FAA  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 10087  002FAC  EFDA  F017         	goto	u5341
 10088  002FB0  EFDC  F017         	goto	u5340
 10089  002FB4                     u5341:
 10090  002FB4  EFE4  F017         	goto	l865
 10091  002FB8                     u5340:
 10092  002FB8  0E02               	movlw	2
 10093  002FBA  600A               	cpfslt	___xxtofl@exp^0,c
 10094  002FBC  EFE2  F017         	goto	u5351
 10095  002FC0  EFE4  F017         	goto	u5350
 10096  002FC4                     u5351:
 10097  002FC4  EFCF  F017         	goto	l4370
 10098  002FC8                     u5350:
 10099  002FC8                     l865:
 10100  002FC8  B00A               	btfsc	___xxtofl@exp^0,0,c
 10101  002FCA  EFE9  F017         	goto	u5361
 10102  002FCE  EFEB  F017         	goto	u5360
 10103  002FD2                     u5361:
 10104  002FD2  EFEC  F017         	goto	l4378
 10105  002FD6                     u5360:
 10106  002FD6  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 10107  002FD8                     l4378:
 10108  002FD8  90D8               	bcf	status,0,c
 10109  002FDA  320A               	rrcf	___xxtofl@exp^0,f,c
 10110  002FDC  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 10111  002FE0  6A06               	clrf	(??___xxtofl+1)^0,c
 10112  002FE2  6A07               	clrf	(??___xxtofl+2)^0,c
 10113  002FE4  6A08               	clrf	(??___xxtofl+3)^0,c
 10114  002FE6  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 10115  002FEA  6A07               	clrf	(??___xxtofl+2)^0,c
 10116  002FEC  6A06               	clrf	(??___xxtofl+1)^0,c
 10117  002FEE  6A05               	clrf	??___xxtofl^0,c
 10118  002FF0  5005               	movf	??___xxtofl^0,w,c
 10119  002FF2  120B               	iorwf	___xxtofl@arg^0,f,c
 10120  002FF4  5006               	movf	(??___xxtofl+1)^0,w,c
 10121  002FF6  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 10122  002FF8  5007               	movf	(??___xxtofl+2)^0,w,c
 10123  002FFA  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 10124  002FFC  5008               	movf	(??___xxtofl+3)^0,w,c
 10125  002FFE  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 10126  003000  5009               	movf	___xxtofl@sign^0,w,c
 10127  003002  B4D8               	btfsc	status,2,c
 10128  003004  EF06  F018         	goto	u5371
 10129  003008  EF08  F018         	goto	u5370
 10130  00300C                     u5371:
 10131  00300C  EF10  F018         	goto	l4388
 10132  003010                     u5370:
 10133  003010  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 10134  003012  EF0F  F018         	goto	u5380
 10135  003016  EF0D  F018         	goto	u5381
 10136  00301A                     u5381:
 10137  00301A  EF10  F018         	goto	l4388
 10138  00301E                     u5380:
 10139  00301E  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 10140  003020                     l4388:
 10141  003020  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 10142  003024  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 10143  003028  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 10144  00302C  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 10145  003030                     l854:
 10146  003030  0012               	return		;funcret
 10147  003032                     __end_of___xxtofl:
 10148                           	callstack 0
 10149                           
 10150                           	psect	rparam
 10151  0000                     
 10152                           	psect	idloc
 10153                           
 10154                           ;Config register IDLOC0 @ 0x200000
 10155                           ;	unspecified, using default values
 10156  200000                     	org	2097152
 10157  200000  FF                 	db	255
 10158                           
 10159                           ;Config register IDLOC1 @ 0x200001
 10160                           ;	unspecified, using default values
 10161  200001                     	org	2097153
 10162  200001  FF                 	db	255
 10163                           
 10164                           ;Config register IDLOC2 @ 0x200002
 10165                           ;	unspecified, using default values
 10166  200002                     	org	2097154
 10167  200002  FF                 	db	255
 10168                           
 10169                           ;Config register IDLOC3 @ 0x200003
 10170                           ;	unspecified, using default values
 10171  200003                     	org	2097155
 10172  200003  FF                 	db	255
 10173                           
 10174                           ;Config register IDLOC4 @ 0x200004
 10175                           ;	unspecified, using default values
 10176  200004                     	org	2097156
 10177  200004  FF                 	db	255
 10178                           
 10179                           ;Config register IDLOC5 @ 0x200005
 10180                           ;	unspecified, using default values
 10181  200005                     	org	2097157
 10182  200005  FF                 	db	255
 10183                           
 10184                           ;Config register IDLOC6 @ 0x200006
 10185                           ;	unspecified, using default values
 10186  200006                     	org	2097158
 10187  200006  FF                 	db	255
 10188                           
 10189                           ;Config register IDLOC7 @ 0x200007
 10190                           ;	unspecified, using default values
 10191  200007                     	org	2097159
 10192  200007  FF                 	db	255
 10193                           
 10194                           	psect	config
 10195                           
 10196                           ; Padding undefined space
 10197  300000                     	org	3145728
 10198  300000  FF                 	db	255
 10199                           
 10200                           ;Config register CONFIG1H @ 0x300001
 10201                           ;	Oscillator Selection bits
 10202                           ;	OSC = HS, HS oscillator
 10203                           ;	Fail-Safe Clock Monitor Enable bit
 10204                           ;	FCMEN = 0x0, unprogrammed default
 10205                           ;	Internal/External Oscillator Switchover bit
 10206                           ;	IESO = 0x0, unprogrammed default
 10207  300001                     	org	3145729
 10208  300001  02                 	db	2
 10209                           
 10210                           ;Config register CONFIG2L @ 0x300002
 10211                           ;	unspecified, using default values
 10212                           ;	Power-up Timer Enable bit
 10213                           ;	PWRT = 0x1, unprogrammed default
 10214                           ;	Brown-out Reset Enable bits
 10215                           ;	BOREN = 0x3, unprogrammed default
 10216                           ;	Brown Out Reset Voltage bits
 10217                           ;	BORV = 0x3, unprogrammed default
 10218  300002                     	org	3145730
 10219  300002  1F                 	db	31
 10220                           
 10221                           ;Config register CONFIG2H @ 0x300003
 10222                           ;	Watchdog Timer Enable bit
 10223                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10224                           ;	Watchdog Timer Postscale Select bits
 10225                           ;	WDTPS = 1, 1:1
 10226  300003                     	org	3145731
 10227  300003  00                 	db	0
 10228                           
 10229                           ; Padding undefined space
 10230  300004                     	org	3145732
 10231  300004  FF                 	db	255
 10232                           
 10233                           ;Config register CONFIG3H @ 0x300005
 10234                           ;	unspecified, using default values
 10235                           ;	CCP2 MUX bit
 10236                           ;	CCP2MX = 0x1, unprogrammed default
 10237                           ;	PORTB A/D Enable bit
 10238                           ;	PBADEN = 0x1, unprogrammed default
 10239                           ;	Low-Power Timer1 Oscillator Enable bit
 10240                           ;	LPT1OSC = 0x0, unprogrammed default
 10241                           ;	MCLR Pin Enable bit
 10242                           ;	MCLRE = 0x1, unprogrammed default
 10243  300005                     	org	3145733
 10244  300005  83                 	db	131
 10245                           
 10246                           ;Config register CONFIG4L @ 0x300006
 10247                           ;	Stack Full/Underflow Reset Enable bit
 10248                           ;	STVREN = 0x1, unprogrammed default
 10249                           ;	Single-Supply ICSP Enable bit
 10250                           ;	LVP = OFF, Single-Supply ICSP disabled
 10251                           ;	Extended Instruction Set Enable bit
 10252                           ;	XINST = 0x0, unprogrammed default
 10253                           ;	Background Debugger Enable bit
 10254                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 10255  300006                     	org	3145734
 10256  300006  81                 	db	129
 10257                           
 10258                           ; Padding undefined space
 10259  300007                     	org	3145735
 10260  300007  FF                 	db	255
 10261                           
 10262                           ;Config register CONFIG5L @ 0x300008
 10263                           ;	unspecified, using default values
 10264                           ;	Code Protection bit
 10265                           ;	CP0 = 0x1, unprogrammed default
 10266                           ;	Code Protection bit
 10267                           ;	CP1 = 0x1, unprogrammed default
 10268                           ;	Code Protection bit
 10269                           ;	CP2 = 0x1, unprogrammed default
 10270                           ;	Code Protection bit
 10271                           ;	CP3 = 0x1, unprogrammed default
 10272  300008                     	org	3145736
 10273  300008  0F                 	db	15
 10274                           
 10275                           ;Config register CONFIG5H @ 0x300009
 10276                           ;	unspecified, using default values
 10277                           ;	Boot Block Code Protection bit
 10278                           ;	CPB = 0x1, unprogrammed default
 10279                           ;	Data EEPROM Code Protection bit
 10280                           ;	CPD = 0x1, unprogrammed default
 10281  300009                     	org	3145737
 10282  300009  C0                 	db	192
 10283                           
 10284                           ;Config register CONFIG6L @ 0x30000A
 10285                           ;	unspecified, using default values
 10286                           ;	Write Protection bit
 10287                           ;	WRT0 = 0x1, unprogrammed default
 10288                           ;	Write Protection bit
 10289                           ;	WRT1 = 0x1, unprogrammed default
 10290                           ;	Write Protection bit
 10291                           ;	WRT2 = 0x1, unprogrammed default
 10292                           ;	Write Protection bit
 10293                           ;	WRT3 = 0x1, unprogrammed default
 10294  30000A                     	org	3145738
 10295  30000A  0F                 	db	15
 10296                           
 10297                           ;Config register CONFIG6H @ 0x30000B
 10298                           ;	unspecified, using default values
 10299                           ;	Configuration Register Write Protection bit
 10300                           ;	WRTC = 0x1, unprogrammed default
 10301                           ;	Boot Block Write Protection bit
 10302                           ;	WRTB = 0x1, unprogrammed default
 10303                           ;	Data EEPROM Write Protection bit
 10304                           ;	WRTD = 0x1, unprogrammed default
 10305  30000B                     	org	3145739
 10306  30000B  E0                 	db	224
 10307                           
 10308                           ;Config register CONFIG7L @ 0x30000C
 10309                           ;	unspecified, using default values
 10310                           ;	Table Read Protection bit
 10311                           ;	EBTR0 = 0x1, unprogrammed default
 10312                           ;	Table Read Protection bit
 10313                           ;	EBTR1 = 0x1, unprogrammed default
 10314                           ;	Table Read Protection bit
 10315                           ;	EBTR2 = 0x1, unprogrammed default
 10316                           ;	Table Read Protection bit
 10317                           ;	EBTR3 = 0x1, unprogrammed default
 10318  30000C                     	org	3145740
 10319  30000C  0F                 	db	15
 10320                           
 10321                           ;Config register CONFIG7H @ 0x30000D
 10322                           ;	unspecified, using default values
 10323                           ;	Boot Block Table Read Protection bit
 10324                           ;	EBTRB = 0x1, unprogrammed default
 10325  30000D                     	org	3145741
 10326  30000D  40                 	db	64
 10327                           tosu	equ	0xFFF
 10328                           tosh	equ	0xFFE
 10329                           tosl	equ	0xFFD
 10330                           stkptr	equ	0xFFC
 10331                           pclatu	equ	0xFFB
 10332                           pclath	equ	0xFFA
 10333                           pcl	equ	0xFF9
 10334                           tblptru	equ	0xFF8
 10335                           tblptrh	equ	0xFF7
 10336                           tblptrl	equ	0xFF6
 10337                           tablat	equ	0xFF5
 10338                           prodh	equ	0xFF4
 10339                           prodl	equ	0xFF3
 10340                           indf0	equ	0xFEF
 10341                           postinc0	equ	0xFEE
 10342                           postdec0	equ	0xFED
 10343                           preinc0	equ	0xFEC
 10344                           plusw0	equ	0xFEB
 10345                           fsr0h	equ	0xFEA
 10346                           fsr0l	equ	0xFE9
 10347                           wreg	equ	0xFE8
 10348                           indf1	equ	0xFE7
 10349                           postinc1	equ	0xFE6
 10350                           postdec1	equ	0xFE5
 10351                           preinc1	equ	0xFE4
 10352                           plusw1	equ	0xFE3
 10353                           fsr1h	equ	0xFE2
 10354                           fsr1l	equ	0xFE1
 10355                           bsr	equ	0xFE0
 10356                           indf2	equ	0xFDF
 10357                           postinc2	equ	0xFDE
 10358                           postdec2	equ	0xFDD
 10359                           preinc2	equ	0xFDC
 10360                           plusw2	equ	0xFDB
 10361                           fsr2h	equ	0xFDA
 10362                           fsr2l	equ	0xFD9
 10363                           status	equ	0xFD8

Data Sizes:
    Strings     237
    Constant    4
    Data        50
    BSS         102
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    127     127
    BANK0           128     83     115
    BANK1           256      0     120
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_41(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_41(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_36(CODE[4]), STR_35(CODE[4]), STR_32(CODE[4]), STR_31(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_36(CODE[4]), STR_35(CODE[4]), STR_32(CODE[4]), STR_31(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> esvaziar_tanque@y(BANK0[8]), ver_quantidade@y(BANK0[8]), encher_tanque@y(BANK0[8]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_25(CODE[5]), STR_17(CODE[5]), STR_11(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_25(CODE[5]), STR_17(CODE[5]), STR_11(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_25(CODE[5]), STR_17(CODE[5]), STR_11(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_25(CODE[5]), STR_17(CODE[5]), STR_11(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 8
		 -> esvaziar_tanque@y(BANK0[8]), ver_quantidade@y(BANK0[8]), encher_tanque@y(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S605_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 8
		 -> esvaziar_tanque@y(BANK0[8]), ver_quantidade@y(BANK0[8]), encher_tanque@y(BANK0[8]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> esvaziar_tanque@y(BANK0[8]), ver_quantidade@y(BANK0[8]), encher_tanque@y(BANK0[8]), 

    esvaziar_tanque@vol	PTR  size(2) Largest target is 4
		 -> volume(BANK0[4]), 

    ver_quantidade@vol	PTR  size(2) Largest target is 4
		 -> volume(BANK0[4]), 

    encher_tanque@vol	PTR  size(2) Largest target is 4
		 -> volume(BANK0[4]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_30(CODE[14]), STR_29(CODE[13]), STR_28(CODE[9]), STR_27(CODE[14]), 
		 -> STR_26(CODE[3]), esvaziar_tanque@y(BANK0[8]), STR_24(CODE[11]), STR_23(CODE[14]), 
		 -> STR_22(CODE[11]), STR_21(CODE[11]), STR_20(CODE[11]), STR_19(CODE[3]), 
		 -> STR_18(CODE[8]), ver_quantidade@y(BANK0[8]), STR_16(CODE[14]), STR_15(CODE[13]), 
		 -> STR_14(CODE[9]), STR_13(CODE[12]), STR_12(CODE[3]), encher_tanque@y(BANK0[8]), 
		 -> STR_10(CODE[11]), STR_9(CODE[16]), STR_8(CODE[11]), STR_7(CODE[11]), 
		 -> STR_6(CODE[12]), STR_5(CODE[19]), STR_4(CODE[15]), STR_3(CODE[14]), 
		 -> STR_2(CODE[11]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_encher_tanque
    _main->_esvaziar_tanque
    _main->_ver_quantidade
    _lcd_init->_lcd_cmd
    _tc_tecla->_atraso_ms
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___fltol->___fldiv
    ___flsub->___fladd
    ___fladd->___xxtofl
    ___flge->___fladd
    _atoi->_isspace
    _lcd_str->_lcd_dat
    _lcd_dat->_atraso_ms
    _lcd_cmd->_atraso_ms

Critical Paths under _main in BANK0

    _main->_encher_tanque
    _ver_quantidade->_sprintf
    _esvaziar_tanque->_sprintf
    _encher_tanque->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  136193
                                             81 BANK0      2     2      0
                          _atraso_ms
                      _encher_tanque
                    _esvaziar_tanque
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                     _ver_quantidade
 ---------------------------------------------------------------------------------
 (1) _ver_quantidade                                      12    10      2   35589
                                            125 COMRAM     2     0      2
                                             36 BANK0     10    10      0
                            _lcd_cmd
                            _lcd_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    3360
                          _atraso_ms
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _esvaziar_tanque                                     38    36      2   43562
                                            125 COMRAM     2     0      2
                                             36 BANK0     36    36      0
                            ___fldiv
                            ___flsub
                            ___fltol
                          _atraso_ms
                            _lcd_cmd
                            _lcd_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _encher_tanque                                       47    45      2   46248
                                            125 COMRAM     2     0      2
                                             36 BANK0     45    45      0
                            ___fladd
                             ___flge
                             ___wmul
                           ___xxtofl
                          _atraso_ms
                            _lcd_cmd
                            _lcd_dat
                            _lcd_str
                            _sprintf
                           _tc_tecla
 ---------------------------------------------------------------------------------
 (2) _tc_tecla                                             7     5      2    2098
                                              6 COMRAM     7     5      2
                          _atraso_ms
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   29621
                                             18 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   28960
                                            123 COMRAM     2     2      0
                                             12 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   28588
                                            113 COMRAM    10     4      6
                                              0 BANK0     12    12      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   22833
                                             45 COMRAM    68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     457
                                             25 COMRAM    10     6      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    3497
                                             30 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2718
                                             14 COMRAM    16     8      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2352
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     790
                                             30 COMRAM    12     4      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2159
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1608
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     767
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcd_str                                              5     3      2    4072
                                              7 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (3) _lcd_dat                                              1     1      0    1702
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0    1702
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (4) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _atraso_ms                                            6     4      2    1658
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atraso_ms
   _encher_tanque
     ___fladd
       ___xxtofl (ARG)
     ___flge
       ___fladd (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___wmul
     ___xxtofl
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_dat
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
                 ___xxtofl (ARG)
               ___flmul (ARG)
             ___fltol
               ___fldiv (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
     _tc_tecla
       _atraso_ms
   _esvaziar_tanque
     ___fldiv
     ___flsub
       ___fladd
         ___xxtofl (ARG)
       ___flmul (ARG)
     ___fltol
       ___fldiv (ARG)
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
                 ___xxtofl (ARG)
               ___flmul (ARG)
             ___fltol
               ___fldiv (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
   _lcd_cmd
     _atraso_ms
     _lcd_wr
   _lcd_init
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
   _lcd_str
     _lcd_dat
       _atraso_ms
       _lcd_wr
   _ver_quantidade
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
                 ___xxtofl (ARG)
               ___flmul (ARG)
             ___fltol
               ___fldiv (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      78       7       46.9%
BITBANK0            80      0       0       4        0.0%
BANK0               80     53      73       5       89.8%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7F      7F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     16A      15        0.0%
DATA                 0      0     16A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Jul 04 19:56:30 2020

             ___fldiv@aexp 0019  esvaziar_tanque@decremento 00C2               ___fldiv@bexp 0018  
                        _i 00E1               ___fldiv@sign 0011                         l10 3AE0  
                       l21 3EF2                         l30 3A7C                         l15 3F7C  
                       l24 3C60                         l18 3F1C                         l50 2BA8  
                       l52 2B90                         l45 2B68                         l62 2C10  
                       l55 2BE8                         l47 2B52                         l72 2CC6  
                       l57 2BD0               ___awdiv@sign 0006        ___wmul@multiplicand 0003  
           encher_tanque@i 00CF             encher_tanque@y 00BC                        l121 2E76  
                      l113 2D4E                        l122 2E3A                        l124 2E58  
                      l119 2E1C                        l170 389C                        l156 2694  
                      l173 38AA                        l190 28DC                        l159 26A2  
                      l440 395A                        l193 28EA                        l427 37F2  
                      l196 3F6A                        l461 3384                        l470 3E5A  
                      l455 3A04                        l466 33CA                        l810 1C7C  
                      l820 1ED8                        l724 147C                        l741 1596  
                      l733 174C                        l725 146A                        l493 32C6  
                      l814 1FE0                        l750 1666                        l726 1430  
                      l751 1654                        l920 372E                        l817 1E72  
                      l851 2ED4                        l827 1FA2                        l819 1EEA  
                      l915 36B0                        l780 21DA                        l854 3030  
                      l766 3DA6                        l918 36F2                        l791 2298  
                      l783 219E                        l792 2286                        l865 2FC8  
                      l858 2F6C                        l778 237A                        l938 128C  
                      l874 3D0E                        l956 0AD2                        l789 2220  
                      l982 0E64                        _pad 366A               ___awmod@sign 0006  
                      wreg 000FE8            ?_ver_quantidade 007E               ___flmul@aexp 0012  
             ___flmul@bexp 0013                _tolower$889 000D               ___flmul@sign 000D  
             ___flmul@temp 0018               ___flmul@prod 0014       encher_tanque@numeros 00A8  
             ___fltol@exp1 0023                       l1100 3E92                       l1041 3B9C  
                     l1114 3E22                       l1042 3BA4                       l1035 1B00  
                     l1108 3D60                       l1052 34C8                       l1140 3F7E  
                     l1028 1BB6                       l3000 1356                       l1152 3EC8  
                     l1081 31B8                       l1129 3668                       l1137 3DEA  
                     l3010 1392                       l3002 135E                       l1090 2AFC  
                     l1146 3CBC                       l1171 3C04                       l1084 31C0  
                     l3100 15BC                       l3020 13A6                       l3012 1396  
                     l3004 136E                       l1156 359E                       l1093 2A40  
                     l3110 15EA                       l3030 13BA                       l3022 13AA  
                     l3014 139A                       l3006 1380                       l1166 3BFC  
                     l3200 200E                       l3112 15F8                       l3104 15D0  
                     l3120 1616                       l3032 13BE                       l3024 13AE  
                     l3016 139E                       l3008 138E                       l3040 13CE  
                     l4000 119A                       l3210 2048                       l3202 201E  
                     l3114 1600                       l3106 15DA                       l3122 1624  
                     l3050 143E                       l3042 13D2                       l3034 13C2  
                     l3026 13B2                       l3018 13A2                       l4010 11E0  
                     l4002 11B4                       l4100 3A8A                       l3300 22B4  
                     l3220 2074                       l3212 204E                       l3204 202E  
                     l3132 1676                       l3140 16CC                       l3124 1628  
                     l3116 1604                       l3108 15E8                       l3060 1468  
                     l3052 144A                       l3044 13FC                       l3036 13C6  
                     l3028 13B6                       l4020 1230                       l4012 11F0  
                     l4004 11BA                       l4102 3A8E                       l3310 2320  
                     l3302 22C2                       l3230 20AE                       l3222 2084  
                     l3214 2054                       l3206 2030                       l3150 171E  
                     l3142 16DC                       l3134 1682                       l3126 1636  
                     l3118 1614                       l3070 14BE                       l3062 148A  
                     l3054 144E                       l3046 1418                       l3038 13CA  
                     l4030 126C                       l4022 1242                       l4014 11F6  
                     l4006 11CC                       l4112 3ABA                       l4120 3AC6  
                     l4040 304A                       l3320 236E                       l3312 233A  
                     l3304 22EC                       l3232 20C4                       l3224 2094  
                     l3216 2062                       l3208 2038                       l3400 1DA4  
                     l3160 173C                       l3152 1724                       l3144 16EC  
                     l3136 1690                       l3128 164C                       l3080 14F8  
                     l3072 14CC                       l3064 149A                       l3056 145C  
                     l3048 1428                       l4024 124E                       l4016 11FC  
                     l4008 11D8                       l4106 3AA2                       l4122 3ACA  
                     l4042 304E                       l3322 2370                       l3314 2356  
                     l3306 22F0                       l3250 2118                       l3234 20D4  
                     l3242 20F4                       l3226 2096                       l3218 2064  
                     l3410 1E3A                       l3402 1DB0                       l3330 1BB8  
                     l3154 1726                       l3146 170C                       l3138 16CA  
                     l3090 1564                       l3082 14FA                       l3074 14DA  
                     l3058 145E                       l3170 3DCA                       l4026 1256  
                     l4210 1BA4                       l4202 1B66                       l4130 1780  
                     l4116 3AC0                       l4108 3AA6                       l4124 3F78  
                     l4220 3ED4                       l4060 3104                       l4052 30AA  
                     l4044 306A                       l4036 3032                       l3500 37CC  
                     l3316 235A                       l3308 230A                       l3260 216A  
                     l3252 2132                       l3244 2104                       l3236 20DC  
                     l3228 209E                       l3420 1E90                       l3412 1E58  
                     l3404 1DCC                       l3340 1BF4                       l3332 1BC4  
                     l3156 172C                       l3148 1710                       l3092 1566  
                     l3084 1504                       l3076 14E6                       l3068 14AE  
                     l3164 3DA8                       l3172 3E94                       l4028 1266  
                     l4204 1B74                       l4140 17D0                       l4132 1792  
                     l4300 2C02                       l4222 3ED6                       l4070 318A  
                     l4054 30C0                       l4046 30A0                       l4038 3046  
                     l3502 37D2                       l3510 38AC                       l3318 2368  
                     l3270 21C6                       l3262 217A                       l3254 2142  
                     l3246 2104                       l3238 20E0                       l3430 1EFA  
                     l3422 1E94                       l3414 1E62                       l3406 1DF6  
                     l3350 1C26                       l3342 1C04                       l3334 1BD2  
                     l3158 173A                       l3094 1576                       l3078 14EA  
                     l3086 150A                       l3166 3DB4                       l3174 3EA0  
                     l3182 3DEC                       l4142 17F4                       l4134 1796  
                     l4126 174E                       l4230 3B44                       l4310 2C3C  
                     l4240 3EF8                       l4224 3EE2                       l4216 3ECC  
                     l4072 319C                       l4064 313A                       l4056 30C8  
                     l4048 30A4                       l3504 37E2                       l3520 38D8  
                     l3512 38B0                       l3280 2206                       l3272 21C8  
                     l3264 218E                       l3256 2152                       l3192 1FE2  
                     l3440 1F5C                       l3432 1F06                       l3424 1EA2  
                     l3416 1E70                       l3408 1E2C                       l3360 1C66  
                     l3352 1C34                       l3344 1C0A                       l3336 1BD4  
                     l3088 1530                       l3096 1586                       l3600 3216  
                     l3168 3DC6                       l3176 3EA4                       l4080 34F4  
                     l4160 191A                       l4152 18A4                       l4144 182E  
                     l4136 17BA                       l4128 1772                       l4208 1B80  
                     l4232 3B4C                       l4320 2C88                       l4304 2C1E  
                     l4312 2C4C                       l4400 3822                       l4250 3F1A  
                     l4242 3EFE                       l4226 3EE4                       l4218 3ECE  
                     l3186 3F46                       l4058 30D0                       l3506 37EA  
                     l3530 3910                       l3522 38E0                       l3514 38BE  
                     l3290 2242                       l3282 2210                       l3274 21D8  
                     l3266 219C                       l3258 2162                       l3194 1FEE  
                     l3450 1FC4                       l3442 1F70                       l3434 1F14  
                     l3426 1ED0                       l3418 1E82                       l3370 1CB0  
                     l3362 1C6C                       l3354 1C36                       l3346 1C1A  
                     l3338 1BE4                       l3098 15AC                       l3602 3218  
                     l3178 3EBC                       l4090 3542                       l4170 1992  
                     l4162 192A                       l4146 184E                       l4138 17C2  
                     l4154 18B6                       l4234 3B5A                       l4330 2CC0  
                     l4322 2C98                       l4314 2C58                       l4306 2C28  
                     l4410 3852                       l4402 3828                       l4244 3F00  
                     l4228 3EF0                       l4252 3A06                       l3188 3F62  
                     l4068 3178                       l3540 394A                       l3532 3926  
                     l3524 38F2                       l3516 38C6                       l3292 2250  
                     l3284 221E                       l3276 21EA                       l3268 21A8  
                     l3196 1FFC                       l3452 1FC6                       l3444 1F8A  
                     l3436 1F3E                       l3380 1D00                       l3372 1CBC  
                     l3364 1C8C                       l3356 1C46                       l3348 1C20  
                     l3460 3D62                       l3604 3228                       l3700 2976  
                     l4092 3554                       l4084 3500                       l4172 19C2  
                     l4164 195C                       l4156 18D8                       l4148 185C  
                     l4236 3B80                       l4340 3CE0                       l4324 2CA8  
                     l4308 2C3A                       l4316 2C60                       l4260 2AFE  
                     l4412 3858                       l4404 382E                       l4350 2E9E  
                     l4246 3F0C                       l4238 3EF6                       l4254 3A0E  
                     l3470 3742                       l3542 3952                       l3534 392E  
                     l3526 38FA                       l3518 38CA                       l3294 227E  
                     l3278 2200                       l3286 2230                       l3198 1FFE  
                     l3550 399A                       l3446 1FA6                       l3454 1FCC  
                     l3438 1F42                       l3390 1D42                       l3382 1D0C  
                     l3374 1CC6                       l3366 1C9C                       l3358 1C56  
                     l3462 3D72                       l3630 32A6                       l3614 3252  
                     l3606 322C                       l3702 2984                       l3710 2A64  
                     l4094 357C                       l4086 350E                       l4078 34CA  
                     l4182 1A8A                       l4166 196E                       l4158 18E8  
                     l4342 3CFC                       l4334 3CBE                       l4326 2CAA  
                     l4318 2C76                       l4270 2B16                       l4262 2B0A  
                     l4510 2668                       l4502 263A                       l4430 2388  
                     l4422 3874                       l4414 3864                       l4406 383A  
                     l4360 2F16                       l4352 2EE4                       l4248 3F0E  
                     l4256 3A3E                       l3480 3768                       l3472 374A  
                     l3536 3934                       l3528 3902                       l3288 223E  
                     l3552 39C8                       l3456 1FD0                       l3448 1FB6  
                     l3392 1D4E                       l3384 1D18                       l3376 1CDC  
                     l3632 32B6                       l3624 327A                       l3616 325C  
                     l3608 323A                       l3712 2AA0                       l3640 368E  
                     l4088 3526                       l4184 1A9C                       l4192 1B14  
                     l4168 1984                       l4176 19EE                       l4336 3CD0  
                     l4328 2CBC                       l4280 2B60                       l4272 2B2A  
                     l4264 2B12                       l4520 2688                       l4512 266A  
                     l4504 2650                       l4440 23BE                       l4432 2394  
                     l4424 387A                       l4416 386A                       l4408 3846  
                     l4370 2F9E                       l4362 2F22                       l4354 2EFA  
                     l4346 2E80                       l4098 3A7E                       l4258 3A40  
                     l3722 3E5C                       l3730 3D28                       l3490 37A0  
                     l3482 3770                       l3474 374E                       l3466 3730  
                     l3538 393A                       l3298 22A8                       l3554 39D8  
                     l3546 395C                       l3570 3344                       l3562 32C8  
                     l3394 1D5E                       l3386 1D26                       l3378 1CE8  
                     l3626 3286                       l3618 3266                       l3714 2AB4  
                     l3706 29F4                       l3650 36D4                       l3642 369C  
                     l3810 096E                       l4194 1B38                       l4186 1AD0  
                     l4178 1A1C                       l4338 3CD8                       l4290 2BB6  
                     l4282 2B76                       l4274 2B38                       l4514 2670  
                     l4506 265C                       l4450 23F2                       l4442 23C2  
                     l4434 23A6                       l4530 26D4                       l4522 26A4  
                     l4426 3880                       l4380 2FDC                       l4372 2FAA  
                     l4364 2F54                       l4348 2E90                       l3732 3D56  
                     l3492 37A6                       l3484 3782                       l3476 375C  
                     l3468 3734                       l3556 39FC                       l3548 398A  
                     l3580 33C8                       l3572 3352                       l3564 32F6  
                     l3396 1D78                       l3388 1D32                       l3628 3296  
                     l3660 33EC                       l3716 2ADC                       l3708 2A30  
                     l3652 3702                       l3644 36A8                       l3636 366A  
                     l3900 0DFA                       l3820 0A3A                       l3812 09A2  
                     l3804 0920                       l3740 06FC                       l4196 1B46  
                     l4292 2BC2                       l4284 2B82                       l4276 2B44  
                     l4516 2676                       l4460 2484                       l4452 242A  
                     l4444 23D4                       l4436 23AC                       l4428 237C  
                     l4540 2744                       l4532 26E0                       l4524 26B0  
                     l4620 2CE2                       l4382 3000                       l4374 2FB8  
                     l4366 2F56                       l4358 2F0E                       l3734 3D5A  
                     l3726 3D10                       l3494 37BC                       l3486 378A  
                     l3478 3764                       l3558 3A02                       l3574 3364  
                     l3566 3306                       l3398 1D88                       l3662 342A  
                     l3670 346A                       l3718 2AEC                       l2950 35B2  
                     l3654 3716                       l3646 36BC                       l3638 367A  
                     l3910 0E80                       l3902 0E2E                       l3830 0AA4  
                     l3814 09A6                       l3822 0A6C                       l3806 0938  
                     l3750 074E                       l3742 070C                       l4198 1B5A  
                     l4518 2682                       l4470 2530                       l4462 2492  
                     l4454 245A                       l4446 23D8                       l4438 23B6  
                     l4550 27E4                       l4542 275A                       l4534 26F2  
                     l4526 26BC                       l4630 2D12                       l4622 2CE8  
                     l4614 2CC8                       ?_pad 0011                       l4384 3010  
                     l4376 2FD6                       l4368 2F62                       l3728 3D14  
                     l4712 30EE                       l3496 37C4                       l3488 3792  
                     l3576 3372                       l3568 3334                       l3584 3E24  
                     l3592 31C2                       l3672 347C                       l3664 3452  
                     l2952 35C4                       l3648 36D0                       l3680 3C62  
                     l3920 0F26                       l3912 0EE4                       l3904 0E3E  
                     l3832 0AAC                       l3824 0A7A                       l3816 0A00  
                     l3760 0796                       l3752 0756                       l3744 071A  
                     l4296 2BDE                       l4288 2B9E                       l4480 25DC  
                     l4472 2586                       l4464 2502                       l4448 23DE  
                     l4456 245E                       l4560 2842                       l4552 2824  
                     l4544 279E                       l4536 272C                       l4528 26CE  
                     l4392 3C06                       l4640 2D3C                       l4632 2D18  
                     l4624 2CF4                       l4616 2CD8                       l4386 301E  
                     l4378 2FD8                       l3498 37C6                       l3578 33C2  
                     l3586 3E3A                       l2970 12BA                       l2962 128E  
                     l3594 31D8                       l3666 345E                       l3658 33CC  
                     l2954 35CE                       l3682 3C72                       l3690 3BEE  
                     l3930 0F62                       l3914 0EF4                       l3922 0F2E  
                     l3906 0E50                       l3850 0B5E                       l3842 0AF2  
                     l3834 0AC6                       l3826 0A7E                       l3818 0A34  
                     l3770 07D2                       l3762 079E                       l3754 0768  
                     l3746 0722                       l3738 06F4                       l4298 2BF6  
                     l4490 2600                       l4482 25EE                       l4474 25B4  
                     l4466 250E                       l4458 2472                       l4570 286E  
                     l4562 2848                       l4554 2836                       l4546 27CC  
                     l4538 2738                       l4394 3C0A                       l4650 2D66  
                     l4642 2D48                       l4634 2D1E                       l4626 2CFA  
                     l4618 2CDC                       l4388 3020                       l3588 3E4A  
                     l2980 12F4                       l2972 12CA                       l2964 129A  
                     l3676 34C0                       l2956 35EC                       l2948 35A0  
                     l3684 3BA6                       l3940 0F8E                       l3932 0F68  
                     l3924 0F40                       l3916 0F06                       l3908 0E5C  
                     l3860 0B9C                       l3844 0B04                       l3852 0B62  
                     l3828 0A90                       l3836 0ADE                       l3780 084C  
                     l3764 07A2                       l3756 0778                       l3748 0746  
                     l4492 260C                       l4484 25F2                       l4476 25C0  
                     l4468 251A                       l4564 2854                       l4556 283A  
                     l4548 27D8                       l4396 3C16                       l4660 2D82  
                     l4652 2D6C                       l4644 2D4E                       l4636 2D2A  
                     l4628 2D06                       l2990 1322                       l2982 12FA  
                     l2974 12DA                       l2966 12A8                       l3598 31EC  
                     l3694 28EC                       l2958 3622                       l3934 0F74  
                     l3926 0F4E                       l3942 0F94                       l3950 0FC2  
                     l3918 0F18                       l3870 0BEA                       l3862 0BA0  
                     l3854 0B6A                       l3846 0B20                       l3782 0854  
                     l3774 0806                       l3766 07A6                       l3758 078A  
                     l4494 2612                       l4486 25F4                       l4478 25CC  
                     l4590 28CA                       l4582 28B0                       l4574 2882  
                     l4566 285A                       l4558 283C                       l4398 37F4  
                     l4662 2D94                       l4654 2D78                       l4646 2D54  
                     l4638 2D30                       l2992 1324                       l2984 130C  
                     l2976 12DC                       l2968 12AA                       l3696 290C  
                     l3688 3BDC                       l3960 1076                       l3952 101A  
                     l3944 0FA6                       l3936 0F84                       l3928 0F5E  
                     l3880 0C82                       l3864 0BB2                       l3872 0BF2  
                     l3856 0B7C                       l3848 0B56                       l3792 08D6  
                     l3776 0818                       l3768 07AC                       l4496 261E  
                     l4488 25FA                       l4592 28D0                       l4584 28B2  
                     l4576 2898                       l4568 2866                       l4680 2E0A  
                     l4672 2DBE                       l4664 2D9A                       l4648 2D5A  
                     l2994 1334                       l2986 130E                       l2978 12E4  
                     l3698 2962                       l3970 10C8                       l3962 1092  
                     l3954 104E                       l3946 0FB8                       l3938 0F88  
                     l3890 0D64                       l3882 0CDA                       l3874 0BFA  
                     l3866 0BC0                       l3858 0B8E                       l3794 08E8  
                     l3778 0834                       l3786 087C                       l4498 2626  
                     l4586 28B8                       l4578 28A4                       l4690 2E66  
                     l4674 2DD0                       l4666 2DB6                       l2996 1344  
                     l2988 1314                       l3980 110A                       l3972 10D8  
                     l3964 10A4                       l3956 1054                       l3948 0FBC  
                     l3892 0D96                       l3884 0D0E                       l3876 0C0A  
                     l3868 0BD8                       l3796 0904                       l3788 08A2  
                     l4588 28BE                       l4676 2DD6                       l2998 1354  
                     l3990 113A                       l3982 1118                       l3974 10EA  
                     l3966 10B4                       l3958 1058                       l3894 0DAA  
                     l3878 0C1E                       l3886 0D12                       l4686 2E2A  
                     l4678 2DF2                       l3992 1160                       l3984 1120  
                     l3976 10F2                       l3968 10C4                       l3896 0DDC  
                     l3888 0D30                       l4688 2E48                       l3994 117C  
                     l3986 1128                       l3978 1102                       l3898 0DEA  
                     l3996 1182                       l3988 1134                       l3998 1188  
                     STR_1 0618                       STR_2 06BB                       STR_3 0672  
                     STR_4 0639                       STR_5 0605                       STR_6 0699  
                     STR_7 06A5                       STR_8 06B0                       STR_9 0629  
                     u3000 14CC                       u3001 14C8                       u3010 14DA  
                     u3011 14D6                       u3100 1624                       u3020 14F8  
                     u3101 1620                       u3021 14F4                       u3110 1636  
                     u3030 1530                       u3111 1632                       u3031 152C  
                     u3200 171E                       u3120 164C                       u3040 1576  
                     u4000 340C                       u3201 171A                       u3121 1648  
                     u3041 1572                       u3210 173A                       u3130 1662  
                     u3050 15AC                       u4010 342A                       u3211 1736  
                     u3131 165E                       u3051 15A8                       u4011 3426  
                     u3300 2074                       u3140 1676                       u3060 15BC  
                     u4020 3452                       u3220 3DEA                       u4100 3BD8  
                     u3301 2070                       u3141 1672                       u3061 15B8  
                     u4021 344E                       u4005 3402                       u3221 3DE6  
                     u3310 2084                       u3150 1690                       u3070 15E8  
                     u4030 347C                       u3230 3EBC                       u4110 3BEE  
                     u3311 2080                       u3151 168C                       u3071 15E4  
                     u4031 3478                       u3231 3EB8                       u4111 3BEA  
                     u3400 223E                       u3320 20C4                       u3160 16CA  
                     u3080 15F8                       u4200 2AA0                       u4120 2934  
                     u3240 3E1C                       u5000 192A                       u3401 223A  
                     u3321 20C0                       u3161 16C6                       u3081 15F4  
                     u4201 2A9C                       u3241 3E16                       u5001 1926  
                     u3410 2250                       u3330 2104                       u3170 16DC  
                     u3090 1614                       u4050 34B6                       u4210 2ADC  
                     u4130 2962                       u3250 3E1E                       u5010 196E  
                     u3411 224C                       u3331 2100                       u3171 16D8  
                     u3091 1610                       u4051 34B0                       u4211 2AD8  
                     u4131 295E                       u5011 196A                       u5100 3A7C  
                     u4220 3E8C                       u3420 227E                       u3340 217A  
                     u3260 1FFC                       u3500 1BE4                       u3180 16EC  
                     u4060 34B8                       u4140 2984                       u4300 07D2  
                     u5020 1A1C                       u5101 3A78                       u4221 3E86  
                     u3421 227A                       u3341 2176                       u3261 1FF8  
                     u3501 1BE0                       u3181 16E8                       u4045 348E  
                     u4141 2980                       u4125 292A                       u4301 07CE  
                     u5021 1A18                       u4230 3E8E                       u3430 2294  
                     u3350 219C                       u3270 200E                       u3510 1BF4  
                     u3190 170C                       u4070 3CAA                       u4310 0800  
                     u5030 1A82                       u5110 2B38                       u3431 2290  
                     u3351 2198                       u3271 200A                       u3511 1BF0  
                     u3191 1708                       u4311 07FA                       u5031 1A7C  
                     u5111 2B34                       u4240 3D28                       u3440 22A8  
                     u3360 21C6                       u3280 201E                       u3600 1EA2  
                     u3520 1C34                       u4160 29F0                       u2800 35C4  
                     u4080 3CBC                       u4400 0A6C                       u4320 0802  
                     u5040 1A84                       u5200 2BF6                       u5120 2B52  
                     u4241 3D24                       u3441 22A4                       u3361 21C2  
                     u3281 201A                       u3601 1E9E                       u3521 1C30  
                     u4161 29EC                       u2801 35C0                       u4081 3CB8  
                     u4401 0A68                       u5201 2BF2                       u5121 2B4E  
                     u4250 3D56                       u3450 22C2                       u3370 21EA  
                     u3290 2062                       u3610 1ED0                       u3530 1C46  
                     u4170 2A14                       u2810 35EC                       u4090 3BD6  
                     u4410 0A90                       u4330 0818                       u5050 1A9C  
                     u5210 2C10                       u5130 2B60                       u4251 3D52  
                     u3451 22BE                       u3371 21E6                       u3291 205E  
                     u3611 1ECC                       u3531 1C42                       u4155 2998  
                     u2811 35E8                       u4091 3BD0                       u4411 0A8C  
                     u4331 0814                       u5051 1A98                       u5211 2C0C  
                     u5131 2B5C                       u5300 2E9E                       u3700 3782  
                     u3460 230A                       u3380 2200                       u3620 1EE6  
                     u3540 1C56                       u2900 1380                       u4180 2A30  
                     u4156 29A2                       u2820 3622                       u4500 0B9C  
                     u4420 0AA4                       u4340 08A2                       u4260 071A  
                     u5060 1B38                       u5220 2C1E                       u5140 2B76  
                     u5301 2E9A                       u3701 377E                       u3461 2306  
                     u3381 21FC                       u3621 1EE2                       u3541 1C52  
                     u2901 137C                       u4181 2A2C                       u4157 29B2  
                     u2821 361E                       u4077 3CA0                       u4501 0B98  
                     u4421 0AA0                       u4341 089E                       u4261 0716  
                     u5061 1B34                       u5221 2C1A                       u5141 2B72  
                     u5310 2EFA                       u3710 37A0                       u3470 233A  
                     u3390 221E                       u3630 1EFA                       u3550 1C8C  
                     u2910 138E                       u2830 12A8                       u4190 2A84  
                     u4510 0BB2                       u4430 0AC6                       u4350 08D0  
                     u4270 0768                       u5070 3B9C                       u5230 2C4C  
                     u5150 2B90                       u5311 2EF6                       u3711 379C  
                     u3471 2336                       u3391 221A                       u3631 1EF6  
                     u3551 1C88                       u2911 138A                       u2831 12A4  
                     u4175 2A0A                       u4511 0BAE                       u4431 0AC2  
                     u4351 08CA                       u4271 0764                       u5071 3B98  
                     u5231 2C48                       u5151 2B8C                       u5320 2F50  
                     u5080 3A3A                       u3720 37BC                       u3480 2368  
                     u3800 398A                       u3640 1F14                       u3560 1C9C  
                     u2920 13FC                       u2840 12BA                       u4600 0F06  
                     u4520 0BC0                       u4440 0AEE                       u4360 08D2  
                     u4280 0778                       u5240 2C76                       u5160 2B9E  
                     u5400 38AA                       u5321 2F4C                       u3721 37B8  
                     u3481 2364                       u3801 3986                       u3641 1F10  
                     u3561 1C98                       u2921 13F8                       u2841 12B6  
                     u4601 0F02                       u4521 0BBC                       u4441 0AEA  
                     u4281 0774                       u5241 2C72                       u5161 2B9A  
                     u5401 38A6                       u5330 2F9A                       u5090 3A6C  
                     u3730 37E2                       u3810 39C8                       u3650 1F5C  
                     u3570 1E16                       u3490 1BD2                       u2930 1414  
                     u2850 12CA                       u4610 0F18                       u4530 0BEA  
                     u4450 0B04                       u4370 08E8                       u4290 078A  
                     u5250 2C88                       u5170 2BB6                       u5410 23F2  
                     u5331 2F96                       u3731 37DE                       u3811 39C4  
                     u3651 1F58                       u3491 1BCE                       u2931 140E  
                     u2851 12C6                       u4195 2A7A                       u4611 0F14  
                     u4531 0BE6                       u4451 0B00                       u4371 08E4  
                     u4291 0786                       u5251 2C84                       u5171 2BB2  
                     u5411 23EE                       u5340 2FB8                       u3740 38BE  
                     u3820 39FC                       u3660 1F8A                       u3580 1E70  
                     u2940 1416                       u2860 130C                       u3900 320C  
                     u4700 10EA                       u4620 0F26                       u4540 0D30  
                     u4460 0B20                       u4380 096A                       u5260 2C98  
                     u5180 2BD0                       u5420 2472                       u5500 28EA  
                     u5341 2FB4                       u3741 38BA                       u3821 39F8  
                     u3661 1F86                       u3581 1E6C                       u2861 1308  
                     u4701 10E6                       u4621 0F22                       u4541 0D2C  
                     u4461 0B1C                       u4381 0966                       u5261 2C94  
                     u5181 2BCC                       u5421 246E                       u5501 28E6  
                     u5350 2FC8                       u3750 38D8                       u3830 32F6  
                     u3670 1FC4                       u3590 1E90                       u2950 143E  
                     u2870 1322                       u3910 323A                       u2790 35B2  
                     u4710 1118                       u4630 0F40                       u4550 0D96  
                     u4470 0B56                       u4390 09FC                       u5270 2CA8  
                     u5190 2BDE                       u5430 2502                       u5510 2DB6  
                     u5351 2FC4                       u5087 3A30                       u3751 38D4  
                     u3831 32F2                       u3671 1FC0                       u3591 1E8C  
                     u3575 1E0C                       u2951 143A                       u2871 131E  
                     u3911 3236                       u2791 35AE                       u4711 1114  
                     u4631 0F3C                       u4551 0D92                       u4471 0B52  
                     u4391 09F8                       u5271 2CA4                       u5191 2BDA  
                     u5431 24FE                       u5511 2DB2                       u5360 2FD6  
                     u4800 30BC                       u3680 3742                       u3760 38F2  
                     u3840 3334                       u2960 145C                       u2880 1334  
                     u3920 324E                       u4720 119A                       u4640 0F4E  
                     u4560 0DDC                       u4480 0B7C                       u5280 2CBC  
                     u5520 2DF2                       u5361 2FD2                       u5097 3A62  
                     u4801 30B8                       u3681 373E                       u3761 38EE  
                     u3841 3330                       u2961 1458                       u2881 1330  
                     u3921 324A                       u3905 3202                       u4721 1196  
                     u4641 0F4A                       u4561 0DD8                       u4481 0B78  
                     u5281 2CB8                       u5441 25E6                       u5521 2DEE  
                     u5370 3010                       u5290 2E90                       u4810 3172  
                     u3690 375C                       u3770 3910                       u3850 3352  
                     u2970 147C                       u2890 1344                       u3930 3276  
                     u4730 11B4                       u4650 0FA6                       u4570 0DEA  
                     u4490 0B8E                       u5450 2636                       u5530 2E18  
                     u5371 300C                       u5291 2E8C                       u4811 316C  
                     u3691 3758                       u3771 390C                       u3851 334E  
                     u2971 1478                       u2891 1340                       u3931 3272  
                     u4731 11B0                       u4651 0FA2                       u4571 0DE6  
                     u4491 0B8A                       u5451 2632                       u5531 2E14  
                     u5380 301E                       u4900 3A9E                       u4820 3174  
                     u3780 3926                       u3860 3372                       u2980 148A  
                     u3940 3296                       u4740 11CC                       u4660 1076  
                     u4580 0E50                       u5460 26A2                       u5540 2E2A  
                     u5381 301A                       u4901 3A9A                       u3781 3922  
                     u3861 336E                       u2981 1486                       u3941 3292  
                     u4741 11C8                       u4661 1072                       u4581 0E4C  
                     u5461 269E                       u5541 2E26                       u4910 3AB6  
                     u4830 318A                       u3790 394A                       u3870 33C2  
                     u2990 149A                       u3950 32A6                       u4750 122A  
                     u4670 1092                       u4590 0EF4                       u5470 272C  
                     u5390 389C                       u5550 2E48                       u4911 3AB2  
                     u4831 3186                       u3791 3946                       u3871 33BE  
                     u2991 1496                       u3951 32A2                       u4751 1224  
                     u4671 108E                       u4591 0EF0                       u5471 2728  
                     u5391 3898                       u5551 2E44                       u4920 3AE0  
                     u4840 319C                       u3880 3E3A                       u3960 367A  
                     u4760 122C                       u4680 10A4                       u5560 2E66  
                     u4921 3ADC                       u4841 3198                       u3881 3E36  
                     u3961 3676                       u4681 10A0                       u5481 282E  
                     u5561 2E62                       u3890 31D8                       u3970 369C  
                     u4770 1242                       u4690 10B4                       u4850 34F4  
                     u4930 1772                       u5490 287E                       u3891 31D4  
                     u3971 3698                       u4771 123E                       u4691 10B0  
                     u4851 34F0                       u4931 176E                       u5491 287A  
                     u4780 306A                       u3980 36F2                       u4860 3526  
                     u4940 17BA                       u4781 3066                       u3981 36EE  
                     u4861 3522                       u4941 17B6                       u4790 30A0  
                     u3990 3702                       u4870 3542                       u4950 17F4  
                     u4791 309C                       u3991 36FE                       u4871 353E  
                     u4951 17F0                       u4880 3554                       u4960 189C  
                     u4881 3550                       u4961 1896                       u4890 357C  
                     u4970 189E                       u4891 3578                       u4980 18B6  
                     u4981 18B2                       u4990 18E8                       u4991 18E4  
                     _dbuf 0100                       _atoi 3032                       _main 2CC8  
                     _prec 00DD                       _nout 00D9                       pad@i 0018  
                     pad@p 0015                       fsr0h 000FEA                       fsr1h 000FE2  
                     indf0 000FEF                       fsr2h 000FDA                       fsr0l 000FE9  
                     indf2 000FDF                       fsr1l 000FE1                       pad@w 001A  
                     fsr2l 000FD9              ___fpclassifyf 33CC            ??_encher_tanque 00A4  
                     prodh 000FF4                       prodl 000FF3                       start 0000  
          ___fldiv@new_exp 0012           encher_tanque@num 00C6           encher_tanque@tmp 00CE  
         encher_tanque@vol 007E               ___param_bank 000000                      ??_pad 0017  
            ___fltol@sign1 0022                      ?_atoi 0008            __end_of___fladd 174E  
                    ?_main 0001            __end_of___fldiv 237C            __end_of___awdiv 37F4  
          __end_of___flneg 3E5C                      STR_10 0667                      STR_11 06D7  
                    STR_20 0667                      STR_12 06EF                      STR_21 06A5  
                    STR_13 068D                      STR_30 0664                      STR_22 06B0  
                    STR_14 06C6                      STR_31 06DC                      STR_15 0680  
                    STR_23 0656                      STR_24 0667                      STR_32 06E4  
                    STR_16 0664                      STR_25 06D7                      STR_17 06D7  
                    STR_41 06EC                      STR_26 06EF                      STR_18 06CF  
                    STR_19 06EF                      STR_35 06E0                      STR_27 0648  
                    STR_28 06C6                      STR_36 06E8            __end_of___awmod 395C  
                    STR_29 0680                      STR_39 06EC            __end_of___flmul 1FE2  
          __end_of___flsub 3DA8            __end_of___fltol 32C8            ___awdiv@divisor 0003  
 __size_of_esvaziar_tanque 0248            ___awdiv@counter 0005               vfpfcnvrt@fmt 0074  
         esvaziar_tanque@i 00C6           esvaziar_tanque@y 00B8            __end_of_lcd_dat 3EF4  
          __end_of_lcd_cmd 3F1E            __end_of_lcd_str 3A7E                      _flags 00DF  
                    _linha 0601                      _fputc 35A0                      _fputs 3DA8  
          __end_of_isdigit 3E94                      atoi@n 0015                      pad@fp 0011  
                    atoi@s 0008                      _width 00DB                      _putch 3F7E  
          __end_of_isspace 3D62            __end_of_isupper 3E24                      tablat 000FF5  
        encher_tanque@F345 0164                      plusw1 000FE3                      plusw2 000FDB  
                    status 000FD8            __end_of_sprintf 3D10             ?___fpclassifyf 0001  
          __end_of_tolower 3C06            __end_of_strncmp 35A0            __initialization 3AE2  
             __end_of_atoi 31C2               __end_of_main 2E7E                     ??_atoi 000A  
                   ??_main 0080              __activetblptr 000002            tc_tecla@timeout 0007  
                   ?_fputc 0001                     ?_fputs 000A           ___awdiv@dividend 0001  
                   ?_putch 0001           __end_of___xxtofl 3032    encher_tanque@incremento 00CA  
   esvaziar_tanque@numeros 00A4               vfprintf@cfmt 007C           __end_of_lcd_init 3C62  
                   ___flge 32C8                     ___fleq 395C                  ??___fladd 0017  
                   ___wmul 3F46                  ??___fldiv 0009                  ??___awdiv 0005  
                ??___flneg 0005                  ??___awmod 0005                  ??___flmul 0009  
                ??___flsub 0027                  ??___fltol 001E                     _efgtoa 06F4  
                   _lcd_wr 3F76                     _atraso 00ED                     _floorf 28EC  
                   clear_0 3B28                     clear_1 3B34           ___awdiv@quotient 0007  
          ___awmod@divisor 0003            ___awmod@counter 0005                     pad@buf 0013  
                ??_lcd_dat 0007                  ??_lcd_cmd 0007           __end_of_tc_tecla 2CC8  
                   _strcpy 3C62                     _strlen 3E94                     _volume 00E3  
                ??_lcd_str 000A                     fputc@c 0001                     fputs@c 000E  
                   fputs@i 000F                     fputs@s 000A                  ??_isdigit 0003  
          ___fpclassifyf@e 0009            ___fpclassifyf@u 000B            ___fpclassifyf@x 0001  
             __mediumconst 0000                  ??_isspace 0003                     tblptrh 000FF7  
                ??_isupper 0003                     tblptrl 000FF6                     tblptru 000FF8  
                   putch@c 0001           __end_of_vfprintf 3BA6          ??_esvaziar_tanque 0080  
                ??_sprintf 007E                  ??_tolower 0009                  ??_strncmp 0007  
               ___flge@ff1 001F                 ___flge@ff2 0023            ??___fpclassifyf 0005  
             ___xxtofl@arg 000B         encher_tanque@i_128 00CC               ___xxtofl@exp 000A  
             ___xxtofl@val 0001                 ___fleq@ff1 0001                 ___fleq@ff2 0005  
               __accesstop 0080    __end_of__initialization 3B3A                 ___flneg@f1 0001  
            ___rparam_used 000001         encher_tanque@tempo 00C4                 ___fltol@f1 001A  
           __pcstackCOMRAM 0001               __pidataBANK0 3F6C               __pidataBANK1 3F1E  
            __end_of_linha 0605              __end_of_fputc 366A              __end_of_fputs 3DEC  
            __end_of_putch 3F80           ??_ver_quantidade 0080                    ??_fputc 0005  
                  ??_fputs 000E         __size_of_atraso_ms 0064                    ??_putch 0001  
               __pbssBANK0 00D1                 __pbssBANK1 0100                tc_tecla@ret 000C  
              tc_tecla@tmp 000B                 _efgtoa$730 003E                 _efgtoa$731 0040  
               _efgtoa$740 0044                 _efgtoa$741 0046                 _efgtoa$742 0048  
               _efgtoa$736 0042                    ?___flge 001F                    ?___fleq 0001  
                  ?___wmul 0001                    ?_efgtoa 002E                    ?_lcd_wr 0001  
                  ?_floorf 001A                    ?_strcpy 0001                    ?_strlen 0001  
                ?___xxtofl 0001         __size_of_vfpfcnvrt 046A                  ?_lcd_init 0001  
               _atraso_min 00EF         esvaziar_tanque@vol 007E                  ?_tc_tecla 0007  
                  __Hparam 0000                    __Lparam 0000      __end_of_encher_tanque 26A4  
          __size_of___flge 0104            __size_of___fleq 00AA                    ___fladd 128E  
                  ___fldiv 1FE2                    ___awdiv 3730                    ___flneg 3E24  
                  ___awmod 38AC                    ___flmul 1BB8                    ___flsub 3D62  
                  ___fltol 31C2            __size_of___wmul 0026                  ?_vfprintf 008C  
        __end_of_atraso_ms 3AE2               __psmallconst 0600            __size_of_efgtoa 0B9A  
          __size_of_lcd_wr 0008            __size_of_floorf 0212                    __pcinit 3AE2  
                  __ramtop 0600                    __ptext0 2CC8                    __ptext1 37F4  
                  __ptext2 3C06                    __ptext3 26A4                    __ptext4 237C  
                  __ptext5 2AFE                    __ptext6 3CBE                    __ptext7 3B44  
                  __ptext8 174E                    __ptext9 34CA                    _lcd_dat 3ECA  
                  _lcd_cmd 3EF4                    _lcd_str 3A06            __size_of_strcpy 005C  
          __size_of_strlen 0036               __size_of_pad 00C6                    _isdigit 3E5C  
               ??___xxtofl 0005           ___awmod@dividend 0001                    _isspace 3D10  
                  _isupper 3DEC                    efgtoa@c 0034                    efgtoa@d 0052  
                  efgtoa@e 006A                    efgtoa@f 0030                    efgtoa@g 0066  
                  efgtoa@h 005C                    efgtoa@i 0064                    efgtoa@l 0060  
                  efgtoa@m 004E                    efgtoa@n 006C                    efgtoa@p 0056  
                  efgtoa@t 004A                    efgtoa@u 006E                    efgtoa@w 0059  
                  atoi@neg 000E                    _sprintf 3CBE                    _tolower 3BA6  
               ??_lcd_init 0008                    _strncmp 34CA       end_of_initialization 3B3A  
                  floorf@e 0028                    floorf@m 0024                    floorf@u 002A  
                  floorf@x 001A                    fputc@fp 0003              __Lmediumconst 0000  
                  fputs@fp 000C                 ??_tc_tecla 0009          __end_of_vfpfcnvrt 1BB8  
               efgtoa@mode 005B                 efgtoa@sign 0054                    postdec1 000FE5  
                  postdec2 000FDD                    postinc0 000FEE                    postinc1 000FE6  
                  postinc2 000FDE                 ??_vfprintf 007C                    strcpy@d 0009  
                  strlen@a 0003                    strcpy@s 0007                    strlen@s 0001  
          _esvaziar_tanque 26A4                ___fladd@grs 001E              ___xxtofl@sign 0009  
               lcd_dat@val 0007                 lcd_cmd@val 0007                ___fldiv@grs 0014  
              ___fldiv@rem 000D                ___flmul@grs 000E                 lcd_str@str 0008  
           __end_of___flge 33CC             __end_of___fleq 3A06                 atraso_ms@i 0003  
               atraso_ms@j 0005                 atraso_ms@k 0006                 atraso_ms@t 0001  
              vfpfcnvrt@ap 0076                vfpfcnvrt@ct 0088                vfpfcnvrt@fp 0072  
           __end_of___wmul 3F6C       esvaziar_tanque@tempo 00C0             __end_of_efgtoa 128E  
           __end_of_lcd_wr 3F7E             __end_of_floorf 2AFE                 floorf@F524 00D1  
           __end_of_strcpy 3CBE             __end_of_strlen 3ECA        start_initialization 3AE2  
              __end_of_pad 3730      __end_of___fpclassifyf 34CA                vfprintf@fmt 008E  
  __end_of_esvaziar_tanque 28EC                   ??___flge 0027                   ??___fleq 0009  
                 ??___wmul 0005                   ??_efgtoa 0035                   ??_lcd_wr 0001  
              __pdataBANK0 00E7                __pdataBANK1 0150                   ??_floorf 001E  
                 ??_strcpy 0005                   ??_strlen 0003                  ___fladd@a 0013  
                ___fladd@b 000F                  ___fldiv@a 0005                  ___fldiv@b 0001  
                ___flmul@a 0005                  ___flmul@b 0001                  ___flsub@a 0023  
                ___flsub@b 001F              __pcstackBANK0 0080          __size_of___xxtofl 01B4  
        __size_of_lcd_init 005C                 tc_tecla@to 0009          __size_of_tc_tecla 01CA  
                 ?___fladd 000F                   ?___fldiv 0001                   ?___awdiv 0001  
                 ?___flneg 0001                   ?___awmod 0001                   ?___flmul 0001  
                 ?___flsub 001F                   ?___fltol 001A                   ?_lcd_dat 0001  
                 ?_lcd_cmd 0001          __size_of_vfprintf 0062                   ?_lcd_str 0008  
                _atrasoMed 00E9                  _atrasoMax 00E7                  _atrasoMin 00EB  
                _atraso_ms 3A7E                __smallconst 0600                   ?_isdigit 0001  
          ver_quantidade@i 00AC            ver_quantidade@y 00A4                   ?_isspace 0001  
                 ?_isupper 0001                   ?_sprintf 0092                   ?_tolower 0007  
  __size_of_ver_quantidade 00B8             __size_of_fputc 00CA             __size_of_fputs 0044  
                 ?_strncmp 0001             __size_of_putch 0002             ___wmul@product 0005  
         ?_esvaziar_tanque 007E                  _vfpfcnvrt 174E          ___wmul@multiplier 0001  
               ?_atraso_ms 0001                  lcd_wr@val 0001        esvaziar_tanque@F342 0150  
   __size_of_encher_tanque 0328                 vfpfcnvrt@c 008B                 vfpfcnvrt@f 0084  
                copy_data0 3AF6                  copy_data1 3B16          ver_quantidade@vol 007E  
                 __Hrparam 0000                 vfprintf@ap 0090                   __Lrparam 0000  
               vfprintf@fp 008C           __size_of___fladd 04C0           __size_of___fldiv 039A  
         __size_of___awdiv 00C4           __size_of___flneg 0038           __size_of___awmod 00B0  
         __size_of___flmul 042A           __size_of___flsub 0046           __size_of___fltol 0106  
               ?_vfpfcnvrt 0072         ___fpclassifyf@F463 00D5           __size_of_lcd_dat 002A  
         __size_of_lcd_cmd 002A                 sprintf@fmt 0094           __size_of_lcd_str 0078  
                 ___xxtofl 2E7E                   _atoi$794 0010                   _atoi$795 0014  
                 _atoi$796 0012                  tc_tecla@i 000D           __size_of_isdigit 0038  
         __size_of_isspace 0052                   __ptext10 06F4                   __ptext11 3BA6  
                 __ptext20 33CC                   __ptext12 3DEC                   __ptext21 31C2  
                 __ptext13 3C62                   __ptext30 3730                   __ptext22 3D62  
                 __ptext14 366A                   __ptext31 3032                   __ptext23 128E  
                 __ptext15 3E94                   __ptext40 2E7E                   __ptext32 3D10  
                 __ptext24 3E24                   __ptext16 3DA8                   __ptext33 3E5C  
                 __ptext25 1BB8                   __ptext17 35A0                   __ptext34 3F46  
                 __ptext26 32C8                   __ptext18 3F7E                   __ptext35 3A06  
                 __ptext27 395C                   __ptext19 28EC                   __ptext36 3ECA  
                 __ptext28 1FE2                   __ptext37 3EF4                   __ptext29 38AC  
                 __ptext38 3F76                   __ptext39 3A7E           __size_of_isupper 0038  
                 _lcd_init 3C06           __size_of_sprintf 0052           __size_of_tolower 0060  
               strcpy@dest 0001           __size_of_strncmp 00D6              __size_of_atoi 0190  
            __size_of_main 01B6                   _tc_tecla 2AFE                   efgtoa@fp 002E  
                 efgtoa@ne 0050                   efgtoa@pp 004C                   efgtoa@ou 003A  
            _encher_tanque 237C                   _vfprintf 3B44                   lcd_str@i 000C  
              _isspace$825 0007                ??_atraso_ms 0003                   isdigit@c 0001  
           _ver_quantidade 37F4                  sprintf@ap 009C                   isspace@c 0001  
                strcpy@src 0003                   isupper@c 0001                  strncmp@_l 0001  
                strncmp@_r 0003             ?_encher_tanque 007E                efgtoa@nmode 0058  
              ??_vfpfcnvrt 0078              _vfpfcnvrt$760 0082              _vfpfcnvrt$756 0080  
                 sprintf@f 009E                   tolower@c 0007                   sprintf@s 0092  
   __size_of___fpclassifyf 00FE     __end_of_ver_quantidade 38AC                   strncmp@l 0008  
                 strncmp@n 0005                   strncmp@r 000A              ___fladd@signs 001B  
             ___fladd@aexp 001C               ___fladd@bexp 001D  



Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Jul 04 18:51:21 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58  0000                     
    59                           ; Version 2.20
    60                           ; Generated 12/02/2020 GMT
    61                           ; 
    62                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F4520 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     
    94                           	psect	idataBANK0
    95  003B0A                     __pidataBANK0:
    96                           	callstack 0
    97                           
    98                           ;initializer for encher_tanque@F342
    99  003B0A  003F               	dw	63
   100  003B0C  0006               	dw	6
   101  003B0E  005B               	dw	91
   102  003B10  004F               	dw	79
   103  003B12  0066               	dw	102
   104  003B14  006D               	dw	109
   105  003B16  007D               	dw	125
   106  003B18  0007               	dw	7
   107  003B1A  007F               	dw	127
   108  003B1C  006F               	dw	111
   109                           
   110                           ;initializer for _atrasoMax
   111  003B1E  03E8               	dw	1000
   112                           
   113                           ;initializer for _atrasoMed
   114  003B20  01F4               	dw	500
   115                           
   116                           ;initializer for _atrasoMin
   117  003B22  0014               	dw	20
   118                           
   119                           ;initializer for _atraso
   120  003B24  000F               	dw	15
   121                           
   122                           ;initializer for _atraso_min
   123  003B26  0005               	dw	5
   124                           
   125                           	psect	idataBANK1
   126  003B28                     __pidataBANK1:
   127                           	callstack 0
   128                           
   129                           ;initializer for esvaziar_tanque@F342
   130  003B28  003F               	dw	63
   131  003B2A  0006               	dw	6
   132  003B2C  005B               	dw	91
   133  003B2E  004F               	dw	79
   134  003B30  0066               	dw	102
   135  003B32  006D               	dw	109
   136  003B34  007D               	dw	125
   137  003B36  0007               	dw	7
   138  003B38  007F               	dw	127
   139  003B3A  006F               	dw	111
   140                           
   141                           	psect	smallconst
   142  000600                     __psmallconst:
   143                           	callstack 0
   144  000600  00                 	db	0
   145  000601                     _linha:
   146                           	callstack 0
   147  000601  01                 	db	1
   148  000602  02                 	db	2
   149  000603  04                 	db	4
   150  000604  00                 	db	0
   151  000605                     __end_of_linha:
   152                           	callstack 0
   153  000605                     STR_5:
   154  000605  52                 	db	82	;'R'
   155  000606  42                 	db	66	;'B'
   156  000607  33                 	db	51	;'3'
   157  000608  2D                 	db	45
   158  000609  56                 	db	86	;'V'
   159  00060A  65                 	db	101	;'e'
   160  00060B  72                 	db	114	;'r'
   161  00060C  20                 	db	32
   162  00060D  52                 	db	82	;'R'
   163  00060E  42                 	db	66	;'B'
   164  00060F  34                 	db	52	;'4'
   165  000610  2D                 	db	45
   166  000611  45                 	db	69	;'E'
   167  000612  6E                 	db	110	;'n'
   168  000613  63                 	db	99	;'c'
   169  000614  68                 	db	104	;'h'
   170  000615  65                 	db	101	;'e'
   171  000616  72                 	db	114	;'r'
   172  000617  00                 	db	0
   173  000618                     STR_1:
   174  000618  41                 	db	65	;'A'
   175  000619  62                 	db	98	;'b'
   176  00061A  61                 	db	97	;'a'
   177  00061B  73                 	db	115	;'s'
   178  00061C  74                 	db	116	;'t'
   179  00061D  65                 	db	101	;'e'
   180  00061E  63                 	db	99	;'c'
   181  00061F  69                 	db	105	;'i'
   182  000620  6D                 	db	109	;'m'
   183  000621  65                 	db	101	;'e'
   184  000622  6E                 	db	110	;'n'
   185  000623  74                 	db	116	;'t'
   186  000624  6F                 	db	111	;'o'
   187  000625  20                 	db	32
   188  000626  64                 	db	100	;'d'
   189  000627  65                 	db	101	;'e'
   190  000628  00                 	db	0
   191  000629                     STR_9:
   192  000629  45                 	db	69	;'E'
   193  00062A  52                 	db	82	;'R'
   194  00062B  52                 	db	82	;'R'
   195  00062C  4F                 	db	79	;'O'
   196  00062D  3A                 	db	58	;':'
   197  00062E  20                 	db	32
   198  00062F  76                 	db	118	;'v'
   199  000630  6F                 	db	111	;'o'
   200  000631  6C                 	db	108	;'l'
   201  000632  20                 	db	32
   202  000633  3E                 	db	62	;'>'
   203  000634  20                 	db	32
   204  000635  4D                 	db	77	;'M'
   205  000636  41                 	db	65	;'A'
   206  000637  58                 	db	88	;'X'
   207  000638  00                 	db	0
   208  000639                     STR_4:
   209  000639  56                 	db	86	;'V'
   210  00063A  61                 	db	97	;'a'
   211  00063B  7A                 	db	122	;'z'
   212  00063C  61                 	db	97	;'a'
   213  00063D  6F                 	db	111	;'o'
   214  00063E  3A                 	db	58	;':'
   215  00063F  20                 	db	32
   216  000640  31                 	db	49	;'1'
   217  000641  2E                 	db	46
   218  000642  35                 	db	53	;'5'
   219  000643  20                 	db	32
   220  000644  4C                 	db	76	;'L'
   221  000645  2F                 	db	47
   222  000646  73                 	db	115	;'s'
   223  000647  00                 	db	0
   224  000648                     STR_27:
   225  000648  45                 	db	69	;'E'
   226  000649  73                 	db	115	;'s'
   227  00064A  76                 	db	118	;'v'
   228  00064B  61                 	db	97	;'a'
   229  00064C  7A                 	db	122	;'z'
   230  00064D  69                 	db	105	;'i'
   231  00064E  61                 	db	97	;'a'
   232  00064F  6E                 	db	110	;'n'
   233  000650  64                 	db	100	;'d'
   234  000651  6F                 	db	111	;'o'
   235  000652  2E                 	db	46
   236  000653  2E                 	db	46
   237  000654  2E                 	db	46
   238  000655  00                 	db	0
   239  000656                     STR_23:
   240  000656  45                 	db	69	;'E'
   241  000657  52                 	db	82	;'R'
   242  000658  52                 	db	82	;'R'
   243  000659  4F                 	db	79	;'O'
   244  00065A  3A                 	db	58	;':'
   245  00065B  20                 	db	32
   246  00065C  76                 	db	118	;'v'
   247  00065D  6F                 	db	111	;'o'
   248  00065E  6C                 	db	108	;'l'
   249  00065F  20                 	db	32
   250  000660  3C                 	db	60	;'<'
   251  000661  20                 	db	32
   252  000662  30                 	db	48	;'0'
   253  000663  00                 	db	0
   254  000664                     STR_16:
   255  000664  20                 	db	32
   256  000665  20                 	db	32
   257  000666  20                 	db	32
   258  000667  52                 	db	82	;'R'
   259  000668  42                 	db	66	;'B'
   260  000669  31                 	db	49	;'1'
   261  00066A  2D                 	db	45
   262  00066B  56                 	db	86	;'V'
   263  00066C  6F                 	db	111	;'o'
   264  00066D  6C                 	db	108	;'l'
   265  00066E  74                 	db	116	;'t'
   266  00066F  61                 	db	97	;'a'
   267  000670  72                 	db	114	;'r'
   268  000671  00                 	db	0
   269  000672                     STR_3:
   270  000672  56                 	db	86	;'V'
   271  000673  6F                 	db	111	;'o'
   272  000674  6C                 	db	108	;'l'
   273  000675  20                 	db	32
   274  000676  6D                 	db	109	;'m'
   275  000677  61                 	db	97	;'a'
   276  000678  78                 	db	120	;'x'
   277  000679  20                 	db	32
   278  00067A  3D                 	db	61	;'='
   279  00067B  20                 	db	32
   280  00067C  37                 	db	55	;'7'
   281  00067D  30                 	db	48	;'0'
   282  00067E  4C                 	db	76	;'L'
   283  00067F  00                 	db	0
   284  000680                     STR_15:
   285  000680  20                 	db	32
   286  000681  20                 	db	32
   287  000682  20                 	db	32
   288  000683  20                 	db	32
   289  000684  53                 	db	83	;'S'
   290  000685  55                 	db	85	;'U'
   291  000686  43                 	db	67	;'C'
   292  000687  45                 	db	69	;'E'
   293  000688  53                 	db	83	;'S'
   294  000689  53                 	db	83	;'S'
   295  00068A  4F                 	db	79	;'O'
   296  00068B  21                 	db	33
   297  00068C  00                 	db	0
   298  00068D                     STR_13:
   299  00068D  45                 	db	69	;'E'
   300  00068E  6E                 	db	110	;'n'
   301  00068F  63                 	db	99	;'c'
   302  000690  68                 	db	104	;'h'
   303  000691  65                 	db	101	;'e'
   304  000692  6E                 	db	110	;'n'
   305  000693  64                 	db	100	;'d'
   306  000694  6F                 	db	111	;'o'
   307  000695  2E                 	db	46
   308  000696  2E                 	db	46
   309  000697  2E                 	db	46
   310  000698  00                 	db	0
   311  000699                     STR_6:
   312  000699  52                 	db	82	;'R'
   313  00069A  42                 	db	66	;'B'
   314  00069B  35                 	db	53	;'5'
   315  00069C  2D                 	db	45
   316  00069D  52                 	db	82	;'R'
   317  00069E  65                 	db	101	;'e'
   318  00069F  74                 	db	116	;'t'
   319  0006A0  69                 	db	105	;'i'
   320  0006A1  72                 	db	114	;'r'
   321  0006A2  61                 	db	97	;'a'
   322  0006A3  72                 	db	114	;'r'
   323  0006A4  00                 	db	0
   324  0006A5                     STR_7:
   325  0006A5  51                 	db	81	;'Q'
   326  0006A6  75                 	db	117	;'u'
   327  0006A7  61                 	db	97	;'a'
   328  0006A8  6E                 	db	110	;'n'
   329  0006A9  74                 	db	116	;'t'
   330  0006AA  28                 	db	40
   331  0006AB  4C                 	db	76	;'L'
   332  0006AC  29                 	db	41
   333  0006AD  3A                 	db	58	;':'
   334  0006AE  20                 	db	32
   335  0006AF  00                 	db	0
   336  0006B0                     STR_8:
   337  0006B0  52                 	db	82	;'R'
   338  0006B1  42                 	db	66	;'B'
   339  0006B2  31                 	db	49	;'1'
   340  0006B3  2D                 	db	45
   341  0006B4  76                 	db	118	;'v'
   342  0006B5  6F                 	db	111	;'o'
   343  0006B6  6C                 	db	108	;'l'
   344  0006B7  74                 	db	116	;'t'
   345  0006B8  61                 	db	97	;'a'
   346  0006B9  72                 	db	114	;'r'
   347  0006BA  00                 	db	0
   348  0006BB                     STR_2:
   349  0006BB  20                 	db	32
   350  0006BC  20                 	db	32
   351  0006BD  20                 	db	32
   352  0006BE  20                 	db	32
   353  0006BF  20                 	db	32
   354  0006C0  20                 	db	32
   355  0006C1  61                 	db	97	;'a'
   356  0006C2  67                 	db	103	;'g'
   357  0006C3  75                 	db	117	;'u'
   358  0006C4  61                 	db	97	;'a'
   359  0006C5  00                 	db	0
   360  0006C6                     STR_14:
   361  0006C6  41                 	db	65	;'A'
   362  0006C7  67                 	db	103	;'g'
   363  0006C8  75                 	db	117	;'u'
   364  0006C9  61                 	db	97	;'a'
   365  0006CA  72                 	db	114	;'r'
   366  0006CB  64                 	db	100	;'d'
   367  0006CC  65                 	db	101	;'e'
   368  0006CD  21                 	db	33
   369  0006CE  00                 	db	0
   370  0006CF                     STR_18:
   371  0006CF  41                 	db	65	;'A'
   372  0006D0  74                 	db	116	;'t'
   373  0006D1  75                 	db	117	;'u'
   374  0006D2  61                 	db	97	;'a'
   375  0006D3  6C                 	db	108	;'l'
   376  0006D4  3A                 	db	58	;':'
   377  0006D5  20                 	db	32
   378  0006D6  00                 	db	0
   379  0006D7                     STR_11:
   380  0006D7  25                 	db	37
   381  0006D8  2E                 	db	46
   382  0006D9  31                 	db	49	;'1'
   383  0006DA  66                 	db	102	;'f'
   384  0006DB  00                 	db	0
   385  0006DC                     STR_31:
   386  0006DC  49                 	db	73	;'I'
   387  0006DD  4E                 	db	78	;'N'
   388  0006DE  46                 	db	70	;'F'
   389  0006DF  00                 	db	0
   390  0006E0                     STR_35:
   391  0006E0  4E                 	db	78	;'N'
   392  0006E1  41                 	db	65	;'A'
   393  0006E2  4E                 	db	78	;'N'
   394  0006E3  00                 	db	0
   395  0006E4                     STR_32:
   396  0006E4  69                 	db	105	;'i'
   397  0006E5  6E                 	db	110	;'n'
   398  0006E6  66                 	db	102	;'f'
   399  0006E7  00                 	db	0
   400  0006E8                     STR_36:
   401  0006E8  6E                 	db	110	;'n'
   402  0006E9  61                 	db	97	;'a'
   403  0006EA  6E                 	db	110	;'n'
   404  0006EB  00                 	db	0
   405  0006EC                     STR_39:
   406  0006EC  6C                 	db	108	;'l'
   407  0006ED  66                 	db	102	;'f'
   408  0006EE  00                 	db	0
   409  0006EF                     STR_12:
   410  0006EF  20                 	db	32
   411  0006F0  4C                 	db	76	;'L'
   412  0006F1  00                 	db	0
   413  0006F2  00                 	db	0	; dummy byte at the end
   414  0000                     
   415                           ; #config settings
   416                           
   417                           	psect	cinit
   418  0036A8                     __pcinit:
   419                           	callstack 0
   420  0036A8                     start_initialization:
   421                           	callstack 0
   422  0036A8                     __initialization:
   423                           	callstack 0
   424                           
   425                           ; Initialize objects allocated to BANK1 (20 bytes)
   426                           ; load TBLPTR registers with __pidataBANK1
   427  0036A8  0E28               	movlw	low __pidataBANK1
   428  0036AA  6EF6               	movwf	tblptrl,c
   429  0036AC  0E3B               	movlw	high __pidataBANK1
   430  0036AE  6EF7               	movwf	tblptrh,c
   431  0036B0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   432  0036B2  6EF8               	movwf	tblptru,c
   433  0036B4  EE01  F050         	lfsr	0,__pdataBANK1
   434  0036B8  EE10 F014          	lfsr	1,20
   435  0036BC                     copy_data0:
   436  0036BC  0009               	tblrd		*+
   437  0036BE  CFF5 FFEE          	movff	tablat,postinc0
   438  0036C2  50E5               	movf	postdec1,w,c
   439  0036C4  50E1               	movf	fsr1l,w,c
   440  0036C6  E1FA               	bnz	copy_data0
   441                           
   442                           ; Initialize objects allocated to BANK0 (30 bytes)
   443                           ; load TBLPTR registers with __pidataBANK0
   444  0036C8  0E0A               	movlw	low __pidataBANK0
   445  0036CA  6EF6               	movwf	tblptrl,c
   446  0036CC  0E3B               	movlw	high __pidataBANK0
   447  0036CE  6EF7               	movwf	tblptrh,c
   448  0036D0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   449  0036D2  6EF8               	movwf	tblptru,c
   450  0036D4  EE00  F0C8         	lfsr	0,__pdataBANK0
   451  0036D8  EE10 F01E          	lfsr	1,30
   452  0036DC                     copy_data1:
   453  0036DC  0009               	tblrd		*+
   454  0036DE  CFF5 FFEE          	movff	tablat,postinc0
   455  0036E2  50E5               	movf	postdec1,w,c
   456  0036E4  50E1               	movf	fsr1l,w,c
   457  0036E6  E1FA               	bnz	copy_data1
   458                           
   459                           ; Clear objects allocated to BANK1 (80 bytes)
   460  0036E8  EE01  F000         	lfsr	0,__pbssBANK1
   461  0036EC  0E50               	movlw	80
   462  0036EE                     clear_0:
   463  0036EE  6AEE               	clrf	postinc0,c
   464  0036F0  06E8               	decf	wreg,f,c
   465  0036F2  E1FD               	bnz	clear_0
   466                           
   467                           ; Clear objects allocated to BANK0 (22 bytes)
   468  0036F4  EE00  F0E6         	lfsr	0,__pbssBANK0
   469  0036F8  0E16               	movlw	22
   470  0036FA                     clear_1:
   471  0036FA  6AEE               	clrf	postinc0,c
   472  0036FC  06E8               	decf	wreg,f,c
   473  0036FE  E1FD               	bnz	clear_1
   474  003700                     end_of_initialization:
   475                           	callstack 0
   476  003700                     __end_of__initialization:
   477                           	callstack 0
   478  003700  0E00               	movlw	low (__Lmediumconst shr (0+16))
   479  003702  6EF8               	movwf	tblptru,c
   480  003704  0100               	movlb	0
   481  003706  EF21  F015         	goto	_main	;jump to C main() function
   482                           
   483                           	psect	bssBANK0
   484  0000E6                     __pbssBANK0:
   485                           	callstack 0
   486  0000E6                     floorf@F524:
   487                           	callstack 0
   488  0000E6                     	ds	4
   489  0000EA                     ___fpclassifyf@F463:
   490                           	callstack 0
   491  0000EA                     	ds	4
   492  0000EE                     _nout:
   493                           	callstack 0
   494  0000EE                     	ds	2
   495  0000F0                     _width:
   496                           	callstack 0
   497  0000F0                     	ds	2
   498  0000F2                     _prec:
   499                           	callstack 0
   500  0000F2                     	ds	2
   501  0000F4                     _flags:
   502                           	callstack 0
   503  0000F4                     	ds	2
   504  0000F6                     _i:
   505                           	callstack 0
   506  0000F6                     	ds	2
   507  0000F8                     _volume:
   508                           	callstack 0
   509  0000F8                     	ds	4
   510                           
   511                           	psect	dataBANK0
   512  0000C8                     __pdataBANK0:
   513                           	callstack 0
   514  0000C8                     encher_tanque@F342:
   515                           	callstack 0
   516  0000C8                     	ds	20
   517  0000DC                     _atrasoMax:
   518                           	callstack 0
   519  0000DC                     	ds	2
   520  0000DE                     _atrasoMed:
   521                           	callstack 0
   522  0000DE                     	ds	2
   523  0000E0                     _atrasoMin:
   524                           	callstack 0
   525  0000E0                     	ds	2
   526  0000E2                     _atraso:
   527                           	callstack 0
   528  0000E2                     	ds	2
   529  0000E4                     _atraso_min:
   530                           	callstack 0
   531  0000E4                     	ds	2
   532                           
   533                           	psect	bssBANK1
   534  000100                     __pbssBANK1:
   535                           	callstack 0
   536  000100                     _dbuf:
   537                           	callstack 0
   538  000100                     	ds	80
   539                           
   540                           	psect	dataBANK1
   541  000150                     __pdataBANK1:
   542                           	callstack 0
   543  000150                     esvaziar_tanque@F342:
   544                           	callstack 0
   545  000150                     	ds	20
   546                           
   547                           	psect	cstackBANK0
   548  000080                     __pcstackBANK0:
   549                           	callstack 0
   550  000080                     _vfpfcnvrt$750:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x0
   554  000080                     	ds	2
   555  000082                     _vfpfcnvrt$754:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x2
   559  000082                     	ds	2
   560  000084                     vfpfcnvrt@f:
   561                           	callstack 0
   562                           
   563                           ; 4 bytes @ 0x4
   564  000084                     	ds	4
   565  000088                     vfpfcnvrt@ct:
   566                           	callstack 0
   567                           
   568                           ; 3 bytes @ 0x8
   569  000088                     	ds	3
   570  00008B                     vfpfcnvrt@c:
   571                           	callstack 0
   572                           
   573                           ; 1 bytes @ 0xB
   574  00008B                     	ds	1
   575  00008C                     ?_vfprintf:
   576                           	callstack 0
   577  00008C                     vfprintf@fp:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0xC
   581  00008C                     	ds	2
   582  00008E                     vfprintf@fmt:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0xE
   586  00008E                     	ds	2
   587  000090                     vfprintf@ap:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x10
   591  000090                     	ds	2
   592  000092                     ?_sprintf:
   593                           	callstack 0
   594  000092                     sprintf@s:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x12
   598  000092                     	ds	2
   599  000094                     sprintf@fmt:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x14
   603  000094                     	ds	8
   604  00009C                     sprintf@ap:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x1C
   608  00009C                     	ds	2
   609  00009E                     sprintf@f:
   610                           	callstack 0
   611                           
   612                           ; 6 bytes @ 0x1E
   613  00009E                     	ds	6
   614  0000A4                     ver_quantidade@y:
   615                           	callstack 0
   616  0000A4                     encher_tanque@numeros:
   617                           	callstack 0
   618  0000A4                     esvaziar_tanque@numeros:
   619                           	callstack 0
   620                           
   621                           ; 20 bytes @ 0x24
   622  0000A4                     	ds	8
   623  0000AC                     ver_quantidade@i:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0x2C
   627  0000AC                     	ds	12
   628  0000B8                     encher_tanque@y:
   629                           	callstack 0
   630  0000B8                     esvaziar_tanque@y:
   631                           	callstack 0
   632                           
   633                           ; 8 bytes @ 0x38
   634  0000B8                     	ds	8
   635  0000C0                     encher_tanque@tempo:
   636                           	callstack 0
   637  0000C0                     esvaziar_tanque@tempo:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x40
   641  0000C0                     	ds	2
   642  0000C2                     encher_tanque@incremento:
   643                           	callstack 0
   644  0000C2                     esvaziar_tanque@decremento:
   645                           	callstack 0
   646                           
   647                           ; 4 bytes @ 0x42
   648  0000C2                     	ds	4
   649  0000C6                     encher_tanque@i:
   650                           	callstack 0
   651  0000C6                     esvaziar_tanque@i:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x46
   655  0000C6                     	ds	2
   656                           
   657                           	psect	cstackCOMRAM
   658  000001                     __pcstackCOMRAM:
   659                           	callstack 0
   660  000001                     ?_strlen:
   661                           	callstack 0
   662  000001                     ?___fpclassifyf:
   663                           	callstack 0
   664  000001                     ?_isupper:
   665                           	callstack 0
   666  000001                     ?_isdigit:
   667                           	callstack 0
   668  000001                     ?_strncmp:
   669                           	callstack 0
   670  000001                     ?_isspace:
   671                           	callstack 0
   672  000001                     ?___wmul:
   673                           	callstack 0
   674  000001                     ?___awdiv:
   675                           	callstack 0
   676  000001                     ?___awmod:
   677                           	callstack 0
   678  000001                     ?___fladd:
   679                           	callstack 0
   680  000001                     ?___fldiv:
   681                           	callstack 0
   682  000001                     ?___flmul:
   683                           	callstack 0
   684  000001                     ?___flneg:
   685                           	callstack 0
   686  000001                     lcd_wr@val:
   687                           	callstack 0
   688  000001                     atraso_ms@t:
   689                           	callstack 0
   690  000001                     ___wmul@multiplier:
   691                           	callstack 0
   692  000001                     ___awdiv@dividend:
   693                           	callstack 0
   694  000001                     ___awmod@dividend:
   695                           	callstack 0
   696  000001                     isdigit@c:
   697                           	callstack 0
   698  000001                     isspace@c:
   699                           	callstack 0
   700  000001                     isupper@c:
   701                           	callstack 0
   702  000001                     fputc@c:
   703                           	callstack 0
   704  000001                     strcpy@dest:
   705                           	callstack 0
   706  000001                     strlen@s:
   707                           	callstack 0
   708  000001                     strncmp@_l:
   709                           	callstack 0
   710  000001                     ___fleq@ff1:
   711                           	callstack 0
   712  000001                     ___flneg@f1:
   713                           	callstack 0
   714  000001                     ___fladd@b:
   715                           	callstack 0
   716  000001                     ___fldiv@b:
   717                           	callstack 0
   718  000001                     ___flmul@b:
   719                           	callstack 0
   720  000001                     ___fpclassifyf@x:
   721                           	callstack 0
   722                           
   723                           ; 4 bytes @ 0x0
   724  000001                     	ds	2
   725  000003                     ??_isupper:
   726  000003                     ??_isdigit:
   727  000003                     ??_isspace:
   728  000003                     atraso_ms@i:
   729                           	callstack 0
   730  000003                     ___wmul@multiplicand:
   731                           	callstack 0
   732  000003                     ___awdiv@divisor:
   733                           	callstack 0
   734  000003                     ___awmod@divisor:
   735                           	callstack 0
   736  000003                     fputc@fp:
   737                           	callstack 0
   738  000003                     strcpy@src:
   739                           	callstack 0
   740  000003                     strlen@a:
   741                           	callstack 0
   742  000003                     strncmp@_r:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x2
   746  000003                     	ds	2
   747  000005                     ??_fputc:
   748  000005                     ??___fpclassifyf:
   749  000005                     ??_strcpy:
   750  000005                     atraso_ms@j:
   751                           	callstack 0
   752  000005                     ___awdiv@counter:
   753                           	callstack 0
   754  000005                     ___awmod@counter:
   755                           	callstack 0
   756  000005                     ___wmul@product:
   757                           	callstack 0
   758  000005                     strncmp@n:
   759                           	callstack 0
   760  000005                     ___fleq@ff2:
   761                           	callstack 0
   762  000005                     ___fladd@a:
   763                           	callstack 0
   764  000005                     ___fldiv@a:
   765                           	callstack 0
   766  000005                     ___flmul@a:
   767                           	callstack 0
   768                           
   769                           ; 4 bytes @ 0x4
   770  000005                     	ds	1
   771  000006                     atraso_ms@k:
   772                           	callstack 0
   773  000006                     ___awdiv@sign:
   774                           	callstack 0
   775  000006                     ___awmod@sign:
   776                           	callstack 0
   777                           
   778                           ; 1 bytes @ 0x5
   779  000006                     	ds	1
   780  000007                     ??_strncmp:
   781  000007                     ?_tolower:
   782                           	callstack 0
   783  000007                     lcd_cmd@val:
   784                           	callstack 0
   785  000007                     lcd_dat@val:
   786                           	callstack 0
   787  000007                     _isspace$819:
   788                           	callstack 0
   789  000007                     ___awdiv@quotient:
   790                           	callstack 0
   791  000007                     strcpy@s:
   792                           	callstack 0
   793  000007                     tolower@c:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0x6
   797  000007                     	ds	1
   798  000008                     ?_atoi:
   799                           	callstack 0
   800  000008                     lcd_str@str:
   801                           	callstack 0
   802  000008                     atoi@s:
   803                           	callstack 0
   804  000008                     strncmp@l:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0x7
   808  000008                     	ds	1
   809  000009                     ??___fladd:
   810  000009                     ??___fldiv:
   811  000009                     ??___flmul:
   812  000009                     ??_tolower:
   813  000009                     ??___fleq:
   814  000009                     ___fpclassifyf@e:
   815                           	callstack 0
   816  000009                     strcpy@d:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x8
   820  000009                     	ds	1
   821  00000A                     ??_atoi:
   822  00000A                     ??_lcd_str:
   823  00000A                     fputs@s:
   824                           	callstack 0
   825  00000A                     strncmp@r:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x9
   829  00000A                     	ds	1
   830  00000B                     ___fpclassifyf@u:
   831                           	callstack 0
   832                           
   833                           ; 4 bytes @ 0xA
   834  00000B                     	ds	1
   835  00000C                     lcd_str@i:
   836                           	callstack 0
   837  00000C                     fputs@fp:
   838                           	callstack 0
   839                           
   840                           ; 2 bytes @ 0xB
   841  00000C                     	ds	1
   842  00000D                     ___fladd@signs:
   843                           	callstack 0
   844  00000D                     ___flmul@sign:
   845                           	callstack 0
   846  00000D                     _tolower$883:
   847                           	callstack 0
   848  00000D                     ___fldiv@rem:
   849                           	callstack 0
   850                           
   851                           ; 4 bytes @ 0xC
   852  00000D                     	ds	1
   853  00000E                     ___fladd@aexp:
   854                           	callstack 0
   855  00000E                     fputs@c:
   856                           	callstack 0
   857  00000E                     atoi@neg:
   858                           	callstack 0
   859  00000E                     ___flmul@grs:
   860                           	callstack 0
   861                           
   862                           ; 4 bytes @ 0xD
   863  00000E                     	ds	1
   864  00000F                     ___fladd@bexp:
   865                           	callstack 0
   866  00000F                     fputs@i:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0xE
   870  00000F                     	ds	1
   871  000010                     ___fladd@grs:
   872                           	callstack 0
   873  000010                     _atoi$788:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0xF
   877  000010                     	ds	1
   878  000011                     ?_pad:
   879                           	callstack 0
   880  000011                     ___fldiv@sign:
   881                           	callstack 0
   882  000011                     pad@fp:
   883                           	callstack 0
   884                           
   885                           ; 2 bytes @ 0x10
   886  000011                     	ds	1
   887  000012                     ___flmul@aexp:
   888                           	callstack 0
   889  000012                     ___fldiv@new_exp:
   890                           	callstack 0
   891  000012                     _atoi$790:
   892                           	callstack 0
   893                           
   894                           ; 2 bytes @ 0x11
   895  000012                     	ds	1
   896  000013                     ___flmul@bexp:
   897                           	callstack 0
   898  000013                     pad@buf:
   899                           	callstack 0
   900                           
   901                           ; 2 bytes @ 0x12
   902  000013                     	ds	1
   903  000014                     _atoi$789:
   904                           	callstack 0
   905  000014                     ___fldiv@grs:
   906                           	callstack 0
   907  000014                     ___flmul@prod:
   908                           	callstack 0
   909                           
   910                           ; 4 bytes @ 0x13
   911  000014                     	ds	1
   912  000015                     pad@p:
   913                           	callstack 0
   914  000015                     atoi@n:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x14
   918  000015                     	ds	2
   919  000017                     ??_pad:
   920                           
   921                           ; 1 bytes @ 0x16
   922  000017                     	ds	1
   923  000018                     ___fldiv@bexp:
   924                           	callstack 0
   925  000018                     ___flmul@temp:
   926                           	callstack 0
   927  000018                     pad@i:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0x17
   931  000018                     	ds	1
   932  000019                     ___fldiv@aexp:
   933                           	callstack 0
   934                           
   935                           ; 1 bytes @ 0x18
   936  000019                     	ds	1
   937  00001A                     ?___flsub:
   938                           	callstack 0
   939  00001A                     ?_floorf:
   940                           	callstack 0
   941  00001A                     ?___fltol:
   942                           	callstack 0
   943  00001A                     pad@w:
   944                           	callstack 0
   945  00001A                     ___flge@ff1:
   946                           	callstack 0
   947  00001A                     ___fltol@f1:
   948                           	callstack 0
   949  00001A                     ___flsub@b:
   950                           	callstack 0
   951  00001A                     floorf@x:
   952                           	callstack 0
   953                           
   954                           ; 4 bytes @ 0x19
   955  00001A                     	ds	4
   956  00001E                     ??_floorf:
   957  00001E                     ??___fltol:
   958  00001E                     ___flge@ff2:
   959                           	callstack 0
   960  00001E                     ___flsub@a:
   961                           	callstack 0
   962                           
   963                           ; 4 bytes @ 0x1D
   964  00001E                     	ds	4
   965  000022                     ??___flge:
   966  000022                     ___fltol@sign1:
   967                           	callstack 0
   968                           
   969                           ; 1 bytes @ 0x21
   970  000022                     	ds	1
   971  000023                     ___fltol@exp1:
   972                           	callstack 0
   973                           
   974                           ; 1 bytes @ 0x22
   975  000023                     	ds	1
   976  000024                     floorf@m:
   977                           	callstack 0
   978                           
   979                           ; 4 bytes @ 0x23
   980  000024                     	ds	4
   981  000028                     floorf@e:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0x27
   985  000028                     	ds	2
   986  00002A                     floorf@u:
   987                           	callstack 0
   988                           
   989                           ; 4 bytes @ 0x29
   990  00002A                     	ds	4
   991  00002E                     ?_efgtoa:
   992                           	callstack 0
   993  00002E                     efgtoa@fp:
   994                           	callstack 0
   995                           
   996                           ; 2 bytes @ 0x2D
   997  00002E                     	ds	2
   998  000030                     efgtoa@f:
   999                           	callstack 0
  1000                           
  1001                           ; 4 bytes @ 0x2F
  1002  000030                     	ds	4
  1003  000034                     efgtoa@c:
  1004                           	callstack 0
  1005                           
  1006                           ; 1 bytes @ 0x33
  1007  000034                     	ds	1
  1008  000035                     ??_efgtoa:
  1009                           
  1010                           ; 1 bytes @ 0x34
  1011  000035                     	ds	5
  1012  00003A                     efgtoa@ou:
  1013                           	callstack 0
  1014                           
  1015                           ; 4 bytes @ 0x39
  1016  00003A                     	ds	4
  1017  00003E                     _efgtoa$724:
  1018                           	callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x3D
  1021  00003E                     	ds	2
  1022  000040                     _efgtoa$725:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x3F
  1026  000040                     	ds	2
  1027  000042                     _efgtoa$730:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x41
  1031  000042                     	ds	2
  1032  000044                     _efgtoa$734:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x43
  1036  000044                     	ds	2
  1037  000046                     _efgtoa$735:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0x45
  1041  000046                     	ds	2
  1042  000048                     _efgtoa$736:
  1043                           	callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x47
  1046  000048                     	ds	2
  1047  00004A                     efgtoa@t:
  1048                           	callstack 0
  1049                           
  1050                           ; 2 bytes @ 0x49
  1051  00004A                     	ds	2
  1052  00004C                     efgtoa@pp:
  1053                           	callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x4B
  1056  00004C                     	ds	2
  1057  00004E                     efgtoa@m:
  1058                           	callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x4D
  1061  00004E                     	ds	2
  1062  000050                     efgtoa@ne:
  1063                           	callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x4F
  1066  000050                     	ds	2
  1067  000052                     efgtoa@d:
  1068                           	callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x51
  1071  000052                     	ds	2
  1072  000054                     efgtoa@sign:
  1073                           	callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x53
  1076  000054                     	ds	2
  1077  000056                     efgtoa@p:
  1078                           	callstack 0
  1079                           
  1080                           ; 2 bytes @ 0x55
  1081  000056                     	ds	2
  1082  000058                     efgtoa@nmode:
  1083                           	callstack 0
  1084                           
  1085                           ; 1 bytes @ 0x57
  1086  000058                     	ds	1
  1087  000059                     efgtoa@w:
  1088                           	callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x58
  1091  000059                     	ds	2
  1092  00005B                     efgtoa@mode:
  1093                           	callstack 0
  1094                           
  1095                           ; 1 bytes @ 0x5A
  1096  00005B                     	ds	1
  1097  00005C                     efgtoa@h:
  1098                           	callstack 0
  1099                           
  1100                           ; 4 bytes @ 0x5B
  1101  00005C                     	ds	4
  1102  000060                     efgtoa@l:
  1103                           	callstack 0
  1104                           
  1105                           ; 4 bytes @ 0x5F
  1106  000060                     	ds	4
  1107  000064                     efgtoa@i:
  1108                           	callstack 0
  1109                           
  1110                           ; 2 bytes @ 0x63
  1111  000064                     	ds	2
  1112  000066                     efgtoa@g:
  1113                           	callstack 0
  1114                           
  1115                           ; 4 bytes @ 0x65
  1116  000066                     	ds	4
  1117  00006A                     efgtoa@e:
  1118                           	callstack 0
  1119                           
  1120                           ; 2 bytes @ 0x69
  1121  00006A                     	ds	2
  1122  00006C                     efgtoa@n:
  1123                           	callstack 0
  1124                           
  1125                           ; 2 bytes @ 0x6B
  1126  00006C                     	ds	2
  1127  00006E                     efgtoa@u:
  1128                           	callstack 0
  1129                           
  1130                           ; 4 bytes @ 0x6D
  1131  00006E                     	ds	4
  1132  000072                     ?_vfpfcnvrt:
  1133                           	callstack 0
  1134  000072                     vfpfcnvrt@fp:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x71
  1138  000072                     	ds	2
  1139  000074                     vfpfcnvrt@fmt:
  1140                           	callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x73
  1143  000074                     	ds	2
  1144  000076                     vfpfcnvrt@ap:
  1145                           	callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x75
  1148  000076                     	ds	2
  1149  000078                     ??_vfpfcnvrt:
  1150                           
  1151                           ; 1 bytes @ 0x77
  1152  000078                     	ds	4
  1153  00007C                     vfprintf@cfmt:
  1154                           	callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x7B
  1157  00007C                     	ds	2
  1158  00007E                     encher_tanque@vol:
  1159                           	callstack 0
  1160  00007E                     ver_quantidade@vol:
  1161                           	callstack 0
  1162  00007E                     esvaziar_tanque@vol:
  1163                           	callstack 0
  1164                           
  1165                           ; 2 bytes @ 0x7D
  1166  00007E                     	ds	2
  1167  000080                     
  1168                           ; 1 bytes @ 0x7F
  1169 ;;
  1170 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1171 ;;
  1172 ;; *************** function _main *****************
  1173 ;; Defined at:
  1174 ;;		line 16 in file "main.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;		None
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;  flag            2    0        int 
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  1    wreg      void 
  1181 ;; Registers used:
  1182 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1188 ;;      Params:         0       0       0       0       0       0       0
  1189 ;;      Locals:         0       2       0       0       0       0       0
  1190 ;;      Temps:          0       0       0       0       0       0       0
  1191 ;;      Totals:         0       2       0       0       0       0       0
  1192 ;;Total ram usage:        2 bytes
  1193 ;; Hardware stack levels required when called:    9
  1194 ;; This function calls:
  1195 ;;		_atraso_ms
  1196 ;;		_encher_tanque
  1197 ;;		_esvaziar_tanque
  1198 ;;		_lcd_cmd
  1199 ;;		_lcd_init
  1200 ;;		_lcd_str
  1201 ;;		_ver_quantidade
  1202 ;; This function is called by:
  1203 ;;		Startup code after reset
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207                           	psect	text0
  1208  002A42                     __ptext0:
  1209                           	callstack 0
  1210  002A42                     _main:
  1211                           	callstack 22
  1212  002A42                     
  1213                           ;main.c: 18:     (*(volatile __near unsigned char*)0xFC1) = 0x06;
  1214  002A42  0E06               	movlw	6
  1215  002A44  6EC1               	movwf	193,c	;volatile
  1216                           
  1217                           ;main.c: 19:     (*(volatile __near unsigned char*)0xF93) = 0x01;
  1218  002A46  0E01               	movlw	1
  1219  002A48  6E93               	movwf	147,c	;volatile
  1220                           
  1221                           ;main.c: 20:     (*(volatile __near unsigned char*)0xF95) = 0x00;
  1222  002A4A  0E00               	movlw	0
  1223  002A4C  6E95               	movwf	149,c	;volatile
  1224                           
  1225                           ;main.c: 21:     (*(volatile __near unsigned char*)0xF96) = 0x00;
  1226  002A4E  0E00               	movlw	0
  1227  002A50  6E96               	movwf	150,c	;volatile
  1228  002A52                     
  1229                           ;main.c: 23:     lcd_init();
  1230  002A52  ECE6  F01B         	call	_lcd_init	;wreg free
  1231  002A56                     
  1232                           ;main.c: 26:     lcd_cmd(0x01);
  1233  002A56  0E01               	movlw	1
  1234  002A58  EC5D  F01D         	call	_lcd_cmd
  1235  002A5C                     
  1236                           ;main.c: 27:     lcd_cmd(0x80);
  1237  002A5C  0E80               	movlw	128
  1238  002A5E  EC5D  F01D         	call	_lcd_cmd
  1239  002A62                     
  1240                           ;main.c: 28:     lcd_str("Abastecimento de");
  1241  002A62  0E18               	movlw	low STR_1
  1242  002A64  6E08               	movwf	lcd_str@str^0,c
  1243  002A66  0E06               	movlw	high STR_1
  1244  002A68  6E09               	movwf	(lcd_str@str+1)^0,c
  1245  002A6A  ECE6  F01A         	call	_lcd_str	;wreg free
  1246  002A6E                     
  1247                           ;main.c: 29:     lcd_cmd(0xC0);
  1248  002A6E  0EC0               	movlw	192
  1249  002A70  EC5D  F01D         	call	_lcd_cmd
  1250  002A74                     
  1251                           ;main.c: 30:     lcd_str("      agua");
  1252  002A74  0EBB               	movlw	low STR_2
  1253  002A76  6E08               	movwf	lcd_str@str^0,c
  1254  002A78  0E06               	movlw	high STR_2
  1255  002A7A  6E09               	movwf	(lcd_str@str+1)^0,c
  1256  002A7C  ECE6  F01A         	call	_lcd_str	;wreg free
  1257  002A80                     
  1258                           ;main.c: 31:     atraso_ms(1000);
  1259  002A80  0E03               	movlw	3
  1260  002A82  6E02               	movwf	(atraso_ms@t+1)^0,c
  1261  002A84  0EE8               	movlw	232
  1262  002A86  6E01               	movwf	atraso_ms@t^0,c
  1263  002A88  EC22  F01B         	call	_atraso_ms	;wreg free
  1264  002A8C                     
  1265                           ;main.c: 32:     lcd_cmd(0x01);
  1266  002A8C  0E01               	movlw	1
  1267  002A8E  EC5D  F01D         	call	_lcd_cmd
  1268  002A92                     
  1269                           ;main.c: 35:     lcd_cmd(0x80);
  1270  002A92  0E80               	movlw	128
  1271  002A94  EC5D  F01D         	call	_lcd_cmd
  1272  002A98                     
  1273                           ;main.c: 36:     lcd_str("Vol max = 70L");
  1274  002A98  0E72               	movlw	low STR_3
  1275  002A9A  6E08               	movwf	lcd_str@str^0,c
  1276  002A9C  0E06               	movlw	high STR_3
  1277  002A9E  6E09               	movwf	(lcd_str@str+1)^0,c
  1278  002AA0  ECE6  F01A         	call	_lcd_str	;wreg free
  1279  002AA4                     
  1280                           ;main.c: 37:     lcd_cmd(0xC0);
  1281  002AA4  0EC0               	movlw	192
  1282  002AA6  EC5D  F01D         	call	_lcd_cmd
  1283  002AAA                     
  1284                           ;main.c: 38:     lcd_str("Vazao: 1.5 L/s");
  1285  002AAA  0E39               	movlw	low STR_4
  1286  002AAC  6E08               	movwf	lcd_str@str^0,c
  1287  002AAE  0E06               	movlw	high STR_4
  1288  002AB0  6E09               	movwf	(lcd_str@str+1)^0,c
  1289  002AB2  ECE6  F01A         	call	_lcd_str	;wreg free
  1290  002AB6                     
  1291                           ;main.c: 39:     atraso_ms(2000);
  1292  002AB6  0E07               	movlw	7
  1293  002AB8  6E02               	movwf	(atraso_ms@t+1)^0,c
  1294  002ABA  0ED0               	movlw	208
  1295  002ABC  6E01               	movwf	atraso_ms@t^0,c
  1296  002ABE  EC22  F01B         	call	_atraso_ms	;wreg free
  1297  002AC2                     
  1298                           ;main.c: 40:     lcd_cmd(0x01);
  1299  002AC2  0E01               	movlw	1
  1300  002AC4  EC5D  F01D         	call	_lcd_cmd
  1301  002AC8                     l113:
  1302  002AC8                     
  1303                           ;main.c: 47:         lcd_cmd(0x01);
  1304  002AC8  0E01               	movlw	1
  1305  002ACA  EC5D  F01D         	call	_lcd_cmd
  1306  002ACE                     
  1307                           ;main.c: 48:         lcd_cmd(0x80);
  1308  002ACE  0E80               	movlw	128
  1309  002AD0  EC5D  F01D         	call	_lcd_cmd
  1310  002AD4                     
  1311                           ;main.c: 49:         lcd_str("RB3-Ver RB4-Encher");
  1312  002AD4  0E05               	movlw	low STR_5
  1313  002AD6  6E08               	movwf	lcd_str@str^0,c
  1314  002AD8  0E06               	movlw	high STR_5
  1315  002ADA  6E09               	movwf	(lcd_str@str+1)^0,c
  1316  002ADC  ECE6  F01A         	call	_lcd_str	;wreg free
  1317  002AE0                     
  1318                           ;main.c: 50:         lcd_cmd(0xC0);
  1319  002AE0  0EC0               	movlw	192
  1320  002AE2  EC5D  F01D         	call	_lcd_cmd
  1321  002AE6                     
  1322                           ;main.c: 51:         lcd_str("RB5-Retirar");
  1323  002AE6  0E99               	movlw	low STR_6
  1324  002AE8  6E08               	movwf	lcd_str@str^0,c
  1325  002AEA  0E06               	movlw	high STR_6
  1326  002AEC  6E09               	movwf	(lcd_str@str+1)^0,c
  1327  002AEE  ECE6  F01A         	call	_lcd_str	;wreg free
  1328  002AF2                     
  1329                           ;main.c: 52:         for (i = 0; i < 2; i++) {
  1330  002AF2  0E00               	movlw	0
  1331  002AF4  0100               	movlb	0	; () banked
  1332  002AF6  6FF7               	movwf	(_i+1)& (0+255),b
  1333  002AF8  0E00               	movlw	0
  1334  002AFA  6FF6               	movwf	_i& (0+255),b
  1335  002AFC                     l4515:
  1336                           
  1337                           ; BSR set to: 0
  1338                           ;main.c: 53:             atraso_ms(350);
  1339  002AFC  0E01               	movlw	1
  1340  002AFE  6E02               	movwf	(atraso_ms@t+1)^0,c
  1341  002B00  0E5E               	movlw	94
  1342  002B02  6E01               	movwf	atraso_ms@t^0,c
  1343  002B04  EC22  F01B         	call	_atraso_ms	;wreg free
  1344                           
  1345                           ;main.c: 54:             lcd_cmd(0x18);
  1346  002B08  0E18               	movlw	24
  1347  002B0A  EC5D  F01D         	call	_lcd_cmd
  1348  002B0E                     
  1349                           ;main.c: 55:         }
  1350  002B0E  0100               	movlb	0	; () banked
  1351  002B10  4BF6               	infsnz	_i& (0+255),f,b
  1352  002B12  2BF7               	incf	(_i+1)& (0+255),f,b
  1353  002B14                     
  1354                           ; BSR set to: 0
  1355  002B14  BFF7               	btfsc	(_i+1)& (0+255),7,b
  1356  002B16  EF96  F015         	goto	u5271
  1357  002B1A  51F7               	movf	(_i+1)& (0+255),w,b
  1358  002B1C  E109               	bnz	u5270
  1359  002B1E  0E02               	movlw	2
  1360  002B20  5DF6               	subwf	_i& (0+255),w,b
  1361  002B22  A0D8               	btfss	status,0,c
  1362  002B24  EF96  F015         	goto	u5271
  1363  002B28  EF98  F015         	goto	u5270
  1364  002B2C                     u5271:
  1365  002B2C  EF7E  F015         	goto	l4515
  1366  002B30                     u5270:
  1367  002B30                     
  1368                           ; BSR set to: 0
  1369                           ;main.c: 56:         for (i = 0; i < 2; i++) {
  1370  002B30  0E00               	movlw	0
  1371  002B32  6FF7               	movwf	(_i+1)& (0+255),b
  1372  002B34  0E00               	movlw	0
  1373  002B36  6FF6               	movwf	_i& (0+255),b
  1374  002B38                     l4527:
  1375                           
  1376                           ; BSR set to: 0
  1377                           ;main.c: 57:             atraso_ms(350);
  1378  002B38  0E01               	movlw	1
  1379  002B3A  6E02               	movwf	(atraso_ms@t+1)^0,c
  1380  002B3C  0E5E               	movlw	94
  1381  002B3E  6E01               	movwf	atraso_ms@t^0,c
  1382  002B40  EC22  F01B         	call	_atraso_ms	;wreg free
  1383                           
  1384                           ;main.c: 58:             lcd_cmd(0x1C);
  1385  002B44  0E1C               	movlw	28
  1386  002B46  EC5D  F01D         	call	_lcd_cmd
  1387  002B4A                     
  1388                           ;main.c: 59:         }
  1389  002B4A  0100               	movlb	0	; () banked
  1390  002B4C  4BF6               	infsnz	_i& (0+255),f,b
  1391  002B4E  2BF7               	incf	(_i+1)& (0+255),f,b
  1392  002B50                     
  1393                           ; BSR set to: 0
  1394  002B50  BFF7               	btfsc	(_i+1)& (0+255),7,b
  1395  002B52  EFB4  F015         	goto	u5281
  1396  002B56  51F7               	movf	(_i+1)& (0+255),w,b
  1397  002B58  E109               	bnz	u5280
  1398  002B5A  0E02               	movlw	2
  1399  002B5C  5DF6               	subwf	_i& (0+255),w,b
  1400  002B5E  A0D8               	btfss	status,0,c
  1401  002B60  EFB4  F015         	goto	u5281
  1402  002B64  EFB6  F015         	goto	u5280
  1403  002B68                     u5281:
  1404  002B68  EF9C  F015         	goto	l4527
  1405  002B6C                     u5280:
  1406  002B6C                     
  1407                           ; BSR set to: 0
  1408                           ;main.c: 62:         (*(volatile __near unsigned char*)0xF93) = 0xF8;
  1409  002B6C  0EF8               	movlw	248
  1410  002B6E  6E93               	movwf	147,c	;volatile
  1411                           
  1412                           ;main.c: 63:         (*(volatile __near unsigned char*)0xF92) = 0x20;
  1413  002B70  0E20               	movlw	32
  1414  002B72  6E92               	movwf	146,c	;volatile
  1415                           
  1416                           ;main.c: 64:         (*(volatile __near unsigned char*)0xF93) = 0x3F;
  1417  002B74  0E3F               	movlw	63
  1418  002B76  6E93               	movwf	147,c	;volatile
  1419                           
  1420                           ;main.c: 65:         (*(volatile __near unsigned char*)0xF92) = 0x20;
  1421  002B78  0E20               	movlw	32
  1422  002B7A  6E92               	movwf	146,c	;volatile
  1423                           
  1424                           ;main.c: 66:         (*(volatile __near unsigned char*)0xF93) = 0x3F;
  1425  002B7C  0E3F               	movlw	63
  1426  002B7E  6E93               	movwf	147,c	;volatile
  1427                           
  1428                           ;main.c: 67:         (*(volatile __near unsigned char*)0xF96) = 0x00;
  1429  002B80  0E00               	movlw	0
  1430  002B82  6E96               	movwf	150,c	;volatile
  1431  002B84                     l4535:
  1432                           
  1433                           ;main.c: 79:             if (!((((*(volatile __near unsigned char*)0xF81)) & (1<<1)))) {
  1434  002B84  B281               	btfsc	129,1,c	;volatile
  1435  002B86  EFC7  F015         	goto	u5291
  1436  002B8A  EFC9  F015         	goto	u5290
  1437  002B8E                     u5291:
  1438  002B8E  EFCB  F015         	goto	l119
  1439  002B92                     u5290:
  1440  002B92  EF64  F015         	goto	l113
  1441  002B96                     l119:
  1442  002B96  B681               	btfsc	129,3,c	;volatile
  1443  002B98  EFD0  F015         	goto	u5301
  1444  002B9C  EFD2  F015         	goto	u5300
  1445  002BA0                     u5301:
  1446  002BA0  EFDA  F015         	goto	l122
  1447  002BA4                     u5300:
  1448  002BA4                     
  1449                           ;main.c: 83:                 ver_quantidade(&volume);
  1450  002BA4  0EF8               	movlw	low _volume
  1451  002BA6  6E7E               	movwf	ver_quantidade@vol^0,c
  1452  002BA8  0E00               	movlw	high _volume
  1453  002BAA  6E7F               	movwf	(ver_quantidade@vol+1)^0,c
  1454  002BAC  ECDD  F019         	call	_ver_quantidade	;wreg free
  1455                           
  1456                           ;main.c: 84:             }
  1457  002BB0  EFC2  F015         	goto	l4535
  1458  002BB4                     l122:
  1459  002BB4  B881               	btfsc	129,4,c	;volatile
  1460  002BB6  EFDF  F015         	goto	u5311
  1461  002BBA  EFE1  F015         	goto	u5310
  1462  002BBE                     u5311:
  1463  002BBE  EFE9  F015         	goto	l124
  1464  002BC2                     u5310:
  1465  002BC2                     
  1466                           ;main.c: 86:                 encher_tanque(&volume);
  1467  002BC2  0EF8               	movlw	low _volume
  1468  002BC4  6E7E               	movwf	encher_tanque@vol^0,c
  1469  002BC6  0E00               	movlw	high _volume
  1470  002BC8  6E7F               	movwf	(encher_tanque@vol+1)^0,c
  1471  002BCA  ECBE  F011         	call	_encher_tanque	;wreg free
  1472                           
  1473                           ;main.c: 87:             }
  1474  002BCE  EFC2  F015         	goto	l4535
  1475  002BD2                     l124:
  1476  002BD2  BA81               	btfsc	129,5,c	;volatile
  1477  002BD4  EFEE  F015         	goto	u5321
  1478  002BD8  EFF0  F015         	goto	u5320
  1479  002BDC                     u5321:
  1480  002BDC  EFF8  F015         	goto	l121
  1481  002BE0                     u5320:
  1482  002BE0                     
  1483                           ;main.c: 89:                 esvaziar_tanque(&volume);
  1484  002BE0  0EF8               	movlw	low _volume
  1485  002BE2  6E7E               	movwf	esvaziar_tanque@vol^0,c
  1486  002BE4  0E00               	movlw	high _volume
  1487  002BE6  6E7F               	movwf	(esvaziar_tanque@vol+1)^0,c
  1488  002BE8  ECF4  F012         	call	_esvaziar_tanque	;wreg free
  1489  002BEC  EFC2  F015         	goto	l4535
  1490  002BF0                     l121:
  1491  002BF0  EFC2  F015         	goto	l4535
  1492  002BF4  EF00  F000         	goto	start
  1493  002BF8                     __end_of_main:
  1494                           	callstack 0
  1495                           
  1496 ;; *************** function _ver_quantidade *****************
  1497 ;; Defined at:
  1498 ;;		line 7 in file "ver.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;  vol             2  125[COMRAM] PTR 
  1501 ;;		 -> volume(4), 
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;  y               8   36[BANK0 ] unsigned char [8]
  1504 ;;  i               2   44[BANK0 ] int 
  1505 ;; Return value:  Size  Location     Type
  1506 ;;                  1    wreg      void 
  1507 ;; Registers used:
  1508 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1514 ;;      Params:         2       0       0       0       0       0       0
  1515 ;;      Locals:         0      10       0       0       0       0       0
  1516 ;;      Temps:          0       0       0       0       0       0       0
  1517 ;;      Totals:         2      10       0       0       0       0       0
  1518 ;;Total ram usage:       12 bytes
  1519 ;; Hardware stack levels used:    1
  1520 ;; Hardware stack levels required when called:    8
  1521 ;; This function calls:
  1522 ;;		_lcd_cmd
  1523 ;;		_lcd_str
  1524 ;;		_sprintf
  1525 ;; This function is called by:
  1526 ;;		_main
  1527 ;; This function uses a non-reentrant model
  1528 ;;
  1529                           
  1530                           	psect	text1
  1531  0033BA                     __ptext1:
  1532                           	callstack 0
  1533  0033BA                     _ver_quantidade:
  1534                           	callstack 22
  1535  0033BA                     
  1536                           ;ver.c: 9:     int i;;ver.c: 10:     char y[8];;ver.c: 11:     sprintf(y, "%.1f", *vol);
  1537  0033BA  0EA4               	movlw	low ver_quantidade@y
  1538  0033BC  0100               	movlb	0	; () banked
  1539  0033BE  6F92               	movwf	sprintf@s& (0+255),b
  1540  0033C0  0E00               	movlw	high ver_quantidade@y
  1541  0033C2  6F93               	movwf	(sprintf@s+1)& (0+255),b
  1542  0033C4  0ED7               	movlw	low STR_11
  1543  0033C6  6F94               	movwf	sprintf@fmt& (0+255),b
  1544  0033C8  0E06               	movlw	high STR_11
  1545  0033CA  6F95               	movwf	(sprintf@fmt+1)& (0+255),b
  1546  0033CC  C07E  FFD9         	movff	ver_quantidade@vol,fsr2l
  1547  0033D0  C07F  FFDA         	movff	ver_quantidade@vol+1,fsr2h
  1548  0033D4  CFDE F096          	movff	postinc2,?_sprintf+4
  1549  0033D8  CFDE F097          	movff	postinc2,?_sprintf+5
  1550  0033DC  CFDE F098          	movff	postinc2,?_sprintf+6
  1551  0033E0  CFDE F099          	movff	postinc2,?_sprintf+7
  1552  0033E4  EC42  F01C         	call	_sprintf	;wreg free
  1553  0033E8                     
  1554                           ;ver.c: 13:     lcd_cmd(0x01);
  1555  0033E8  0E01               	movlw	1
  1556  0033EA  EC5D  F01D         	call	_lcd_cmd
  1557  0033EE                     
  1558                           ;ver.c: 14:     lcd_cmd(0x80);
  1559  0033EE  0E80               	movlw	128
  1560  0033F0  EC5D  F01D         	call	_lcd_cmd
  1561  0033F4                     
  1562                           ;ver.c: 15:     lcd_str("Atual: ");
  1563  0033F4  0ECF               	movlw	low STR_18
  1564  0033F6  6E08               	movwf	lcd_str@str^0,c
  1565  0033F8  0E06               	movlw	high STR_18
  1566  0033FA  6E09               	movwf	(lcd_str@str+1)^0,c
  1567  0033FC  ECE6  F01A         	call	_lcd_str	;wreg free
  1568  003400                     
  1569                           ;ver.c: 16:     lcd_str(y);
  1570  003400  0EA4               	movlw	low ver_quantidade@y
  1571  003402  6E08               	movwf	lcd_str@str^0,c
  1572  003404  0E00               	movlw	high ver_quantidade@y
  1573  003406  6E09               	movwf	(lcd_str@str+1)^0,c
  1574  003408  ECE6  F01A         	call	_lcd_str	;wreg free
  1575  00340C                     
  1576                           ;ver.c: 17:     lcd_str(" L");
  1577  00340C  0EEF               	movlw	low STR_12
  1578  00340E  6E08               	movwf	lcd_str@str^0,c
  1579  003410  0E06               	movlw	high STR_12
  1580  003412  6E09               	movwf	(lcd_str@str+1)^0,c
  1581  003414  ECE6  F01A         	call	_lcd_str	;wreg free
  1582  003418                     
  1583                           ;ver.c: 18:     lcd_cmd(0xC0);
  1584  003418  0EC0               	movlw	192
  1585  00341A  EC5D  F01D         	call	_lcd_cmd
  1586  00341E                     
  1587                           ;ver.c: 19:     lcd_str("RB1-Voltar");
  1588  00341E  0E67               	movlw	low (STR_16+3)
  1589  003420  6E08               	movwf	lcd_str@str^0,c
  1590  003422  0E06               	movlw	high (STR_16+3)
  1591  003424  6E09               	movwf	(lcd_str@str+1)^0,c
  1592  003426  ECE6  F01A         	call	_lcd_str	;wreg free
  1593  00342A                     
  1594                           ;ver.c: 20:     lcd_cmd(0xC0);
  1595  00342A  0EC0               	movlw	192
  1596  00342C  EC5D  F01D         	call	_lcd_cmd
  1597  003430                     
  1598                           ;ver.c: 22:     for (i = 0; i < 7; i++) {
  1599  003430  0E00               	movlw	0
  1600  003432  0100               	movlb	0	; () banked
  1601  003434  6FAD               	movwf	(ver_quantidade@i+1)& (0+255),b
  1602  003436  0E00               	movlw	0
  1603  003438  6FAC               	movwf	ver_quantidade@i& (0+255),b
  1604  00343A                     l4225:
  1605                           
  1606                           ; BSR set to: 0
  1607                           ;ver.c: 23:         lcd_cmd(0x10);
  1608  00343A  0E10               	movlw	16
  1609  00343C  EC5D  F01D         	call	_lcd_cmd
  1610  003440                     
  1611                           ;ver.c: 24:     }
  1612  003440  0100               	movlb	0	; () banked
  1613  003442  4BAC               	infsnz	ver_quantidade@i& (0+255),f,b
  1614  003444  2BAD               	incf	(ver_quantidade@i+1)& (0+255),f,b
  1615  003446                     
  1616                           ; BSR set to: 0
  1617  003446  BFAD               	btfsc	(ver_quantidade@i+1)& (0+255),7,b
  1618  003448  EF2F  F01A         	goto	u4991
  1619  00344C  51AD               	movf	(ver_quantidade@i+1)& (0+255),w,b
  1620  00344E  E109               	bnz	u4990
  1621  003450  0E07               	movlw	7
  1622  003452  5DAC               	subwf	ver_quantidade@i& (0+255),w,b
  1623  003454  A0D8               	btfss	status,0,c
  1624  003456  EF2F  F01A         	goto	u4991
  1625  00345A  EF31  F01A         	goto	u4990
  1626  00345E                     u4991:
  1627  00345E  EF1D  F01A         	goto	l4225
  1628  003462                     u4990:
  1629  003462                     l161:
  1630                           
  1631                           ;ver.c: 31:     while(((((*(volatile __near unsigned char*)0xF81)) & (1<<1)))){
  1632  003462  B281               	btfsc	129,1,c	;volatile
  1633  003464  EF36  F01A         	goto	u5001
  1634  003468  EF38  F01A         	goto	u5000
  1635  00346C                     u5001:
  1636  00346C  EF31  F01A         	goto	l161
  1637  003470                     u5000:
  1638  003470  0012               	return		;funcret
  1639  003472                     __end_of_ver_quantidade:
  1640                           	callstack 0
  1641                           
  1642 ;; *************** function _lcd_init *****************
  1643 ;; Defined at:
  1644 ;;		line 29 in file "lcd.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;		None
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;		None
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  1    wreg      void 
  1651 ;; Registers used:
  1652 ;;		wreg, status,2, status,0, cstack
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1658 ;;      Params:         0       0       0       0       0       0       0
  1659 ;;      Locals:         0       0       0       0       0       0       0
  1660 ;;      Temps:          0       0       0       0       0       0       0
  1661 ;;      Totals:         0       0       0       0       0       0       0
  1662 ;;Total ram usage:        0 bytes
  1663 ;; Hardware stack levels used:    1
  1664 ;; Hardware stack levels required when called:    2
  1665 ;; This function calls:
  1666 ;;		_atraso_ms
  1667 ;;		_lcd_cmd
  1668 ;; This function is called by:
  1669 ;;		_main
  1670 ;; This function uses a non-reentrant model
  1671 ;;
  1672                           
  1673                           	psect	text2
  1674  0037CC                     __ptext2:
  1675                           	callstack 0
  1676  0037CC                     _lcd_init:
  1677                           	callstack 28
  1678  0037CC                     
  1679                           ;lcd.c: 30:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  1680  0037CC  9284               	bcf	132,1,c	;volatile
  1681                           
  1682                           ;lcd.c: 31:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<2));
  1683  0037CE  9484               	bcf	132,2,c	;volatile
  1684  0037D0                     
  1685                           ;lcd.c: 32:     atraso_ms(20);
  1686  0037D0  0E00               	movlw	0
  1687  0037D2  6E02               	movwf	(atraso_ms@t+1)^0,c
  1688  0037D4  0E14               	movlw	20
  1689  0037D6  6E01               	movwf	atraso_ms@t^0,c
  1690  0037D8  EC22  F01B         	call	_atraso_ms	;wreg free
  1691  0037DC                     
  1692                           ;lcd.c: 33:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  1693  0037DC  8284               	bsf	132,1,c	;volatile
  1694                           
  1695                           ;lcd.c: 35:     lcd_cmd(0x38);
  1696  0037DE  0E38               	movlw	56
  1697  0037E0  EC5D  F01D         	call	_lcd_cmd
  1698                           
  1699                           ;lcd.c: 36:     atraso_ms(5);
  1700  0037E4  0E00               	movlw	0
  1701  0037E6  6E02               	movwf	(atraso_ms@t+1)^0,c
  1702  0037E8  0E05               	movlw	5
  1703  0037EA  6E01               	movwf	atraso_ms@t^0,c
  1704  0037EC  EC22  F01B         	call	_atraso_ms	;wreg free
  1705                           
  1706                           ;lcd.c: 37:     lcd_cmd(0x38);
  1707  0037F0  0E38               	movlw	56
  1708  0037F2  EC5D  F01D         	call	_lcd_cmd
  1709                           
  1710                           ;lcd.c: 38:     atraso_ms(1);
  1711  0037F6  0E00               	movlw	0
  1712  0037F8  6E02               	movwf	(atraso_ms@t+1)^0,c
  1713  0037FA  0E01               	movlw	1
  1714  0037FC  6E01               	movwf	atraso_ms@t^0,c
  1715  0037FE  EC22  F01B         	call	_atraso_ms	;wreg free
  1716                           
  1717                           ;lcd.c: 39:     lcd_cmd(0x38);
  1718  003802  0E38               	movlw	56
  1719  003804  EC5D  F01D         	call	_lcd_cmd
  1720                           
  1721                           ;lcd.c: 40:     lcd_cmd(0x08);
  1722  003808  0E08               	movlw	8
  1723  00380A  EC5D  F01D         	call	_lcd_cmd
  1724                           
  1725                           ;lcd.c: 41:     lcd_cmd(0x0F);
  1726  00380E  0E0F               	movlw	15
  1727  003810  EC5D  F01D         	call	_lcd_cmd
  1728                           
  1729                           ;lcd.c: 42:     lcd_cmd(0x01);
  1730  003814  0E01               	movlw	1
  1731  003816  EC5D  F01D         	call	_lcd_cmd
  1732                           
  1733                           ;lcd.c: 43:     lcd_cmd(0x38);
  1734  00381A  0E38               	movlw	56
  1735  00381C  EC5D  F01D         	call	_lcd_cmd
  1736                           
  1737                           ;lcd.c: 44:     lcd_cmd(0x80);
  1738  003820  0E80               	movlw	128
  1739  003822  EC5D  F01D         	call	_lcd_cmd
  1740  003826  0012               	return		;funcret
  1741  003828                     __end_of_lcd_init:
  1742                           	callstack 0
  1743                           
  1744 ;; *************** function _esvaziar_tanque *****************
  1745 ;; Defined at:
  1746 ;;		line 8 in file "esvaziar.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;  vol             2  125[COMRAM] PTR 
  1749 ;;		 -> volume(4), 
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;  numeros        20   36[BANK0 ] int [10]
  1752 ;;  y               8   56[BANK0 ] unsigned char [8]
  1753 ;;  i               2   70[BANK0 ] int 
  1754 ;;  tempo           2   64[BANK0 ] int 
  1755 ;;  decremento      4   66[BANK0 ] int 
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  1    wreg      void 
  1758 ;; Registers used:
  1759 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1765 ;;      Params:         2       0       0       0       0       0       0
  1766 ;;      Locals:         0      36       0       0       0       0       0
  1767 ;;      Temps:          0       0       0       0       0       0       0
  1768 ;;      Totals:         2      36       0       0       0       0       0
  1769 ;;Total ram usage:       38 bytes
  1770 ;; Hardware stack levels used:    1
  1771 ;; Hardware stack levels required when called:    8
  1772 ;; This function calls:
  1773 ;;		___fldiv
  1774 ;;		___flsub
  1775 ;;		___fltol
  1776 ;;		_atraso_ms
  1777 ;;		_lcd_cmd
  1778 ;;		_lcd_str
  1779 ;;		_sprintf
  1780 ;; This function is called by:
  1781 ;;		_main
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           	psect	text3
  1786  0025E8                     __ptext3:
  1787                           	callstack 0
  1788  0025E8                     _esvaziar_tanque:
  1789                           	callstack 22
  1790  0025E8                     
  1791                           ;esvaziar.c: 11:     lcd_cmd(0x01);
  1792  0025E8  0E01               	movlw	1
  1793  0025EA  EC5D  F01D         	call	_lcd_cmd
  1794                           
  1795                           ;esvaziar.c: 12:     lcd_cmd(0x80);
  1796  0025EE  0E80               	movlw	128
  1797  0025F0  EC5D  F01D         	call	_lcd_cmd
  1798  0025F4                     
  1799                           ;esvaziar.c: 13:     lcd_str("Quant(L): ");
  1800  0025F4  0EA5               	movlw	low STR_7
  1801  0025F6  6E08               	movwf	lcd_str@str^0,c
  1802  0025F8  0E06               	movlw	high STR_7
  1803  0025FA  6E09               	movwf	(lcd_str@str+1)^0,c
  1804  0025FC  ECE6  F01A         	call	_lcd_str	;wreg free
  1805  002600                     
  1806                           ;esvaziar.c: 14:     lcd_cmd(0xC0);
  1807  002600  0EC0               	movlw	192
  1808  002602  EC5D  F01D         	call	_lcd_cmd
  1809                           
  1810                           ;esvaziar.c: 15:     lcd_str("RB1-voltar");
  1811  002606  0EB0               	movlw	low STR_8
  1812  002608  6E08               	movwf	lcd_str@str^0,c
  1813  00260A  0E06               	movlw	high STR_8
  1814  00260C  6E09               	movwf	(lcd_str@str+1)^0,c
  1815  00260E  ECE6  F01A         	call	_lcd_str	;wreg free
  1816  002612                     
  1817                           ;esvaziar.c: 16:     lcd_cmd(0x80 +10);
  1818  002612  0E8A               	movlw	138
  1819  002614  EC5D  F01D         	call	_lcd_cmd
  1820  002618                     
  1821                           ;esvaziar.c: 17:     atraso_ms(1000);
  1822  002618  0E03               	movlw	3
  1823  00261A  6E02               	movwf	(atraso_ms@t+1)^0,c
  1824  00261C  0EE8               	movlw	232
  1825  00261E  6E01               	movwf	atraso_ms@t^0,c
  1826  002620  EC22  F01B         	call	_atraso_ms	;wreg free
  1827  002624                     
  1828                           ;esvaziar.c: 19:     double decremento = 5;
  1829  002624  0E00               	movlw	0
  1830  002626  0100               	movlb	0	; () banked
  1831  002628  6FC2               	movwf	esvaziar_tanque@decremento& (0+255),b
  1832  00262A  0E00               	movlw	0
  1833  00262C  6FC3               	movwf	(esvaziar_tanque@decremento+1)& (0+255),b
  1834  00262E  0EA0               	movlw	160
  1835  002630  6FC4               	movwf	(esvaziar_tanque@decremento+2)& (0+255),b
  1836  002632  0E40               	movlw	64
  1837  002634  6FC5               	movwf	(esvaziar_tanque@decremento+3)& (0+255),b
  1838  002636                     
  1839                           ; BSR set to: 0
  1840                           ;esvaziar.c: 21:     if (*vol - decremento < 0) {
  1841  002636  C07E  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  1842  00263A  C07F  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  1843  00263E  CFDE F01A          	movff	postinc2,___flsub@b
  1844  002642  CFDE F01B          	movff	postinc2,___flsub@b+1
  1845  002646  CFDE F01C          	movff	postinc2,___flsub@b+2
  1846  00264A  CFDE F01D          	movff	postinc2,___flsub@b+3
  1847  00264E  C0C2  F01E         	movff	esvaziar_tanque@decremento,___flsub@a
  1848  002652  C0C3  F01F         	movff	esvaziar_tanque@decremento+1,___flsub@a+1
  1849  002656  C0C4  F020         	movff	esvaziar_tanque@decremento+2,___flsub@a+2
  1850  00265A  C0C5  F021         	movff	esvaziar_tanque@decremento+3,___flsub@a+3
  1851  00265E  EC94  F01C         	call	___flsub	;wreg free
  1852  002662  BE1D               	btfsc	(?___flsub+3)^0,7,c
  1853  002664  EF38  F013         	goto	u5050
  1854  002668  EF36  F013         	goto	u5051
  1855  00266C                     u5051:
  1856  00266C  EF4F  F013         	goto	l4323
  1857  002670                     u5050:
  1858  002670                     
  1859                           ;esvaziar.c: 24:         lcd_cmd(0x01);
  1860  002670  0E01               	movlw	1
  1861  002672  EC5D  F01D         	call	_lcd_cmd
  1862                           
  1863                           ;esvaziar.c: 25:         lcd_cmd(0x80);
  1864  002676  0E80               	movlw	128
  1865  002678  EC5D  F01D         	call	_lcd_cmd
  1866  00267C                     
  1867                           ;esvaziar.c: 26:         lcd_str("ERRO: vol < 0");
  1868  00267C  0E56               	movlw	low STR_23
  1869  00267E  6E08               	movwf	lcd_str@str^0,c
  1870  002680  0E06               	movlw	high STR_23
  1871  002682  6E09               	movwf	(lcd_str@str+1)^0,c
  1872  002684  ECE6  F01A         	call	_lcd_str	;wreg free
  1873  002688                     
  1874                           ;esvaziar.c: 27:         lcd_cmd(0xC0);
  1875  002688  0EC0               	movlw	192
  1876  00268A  EC5D  F01D         	call	_lcd_cmd
  1877                           
  1878                           ;esvaziar.c: 28:         lcd_str("RB1-Voltar");
  1879  00268E  0E67               	movlw	low (STR_16+3)
  1880  002690  6E08               	movwf	lcd_str@str^0,c
  1881  002692  0E06               	movlw	high (STR_16+3)
  1882  002694  6E09               	movwf	(lcd_str@str+1)^0,c
  1883  002696  ECE6  F01A         	call	_lcd_str	;wreg free
  1884                           
  1885                           ;esvaziar.c: 34:     } else {
  1886  00269A  EF10  F014         	goto	l181
  1887  00269E                     l4323:
  1888                           
  1889                           ;esvaziar.c: 36:         *vol -= decremento;
  1890  00269E  C07E  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  1891  0026A2  C07F  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  1892  0026A6  CFDE F01A          	movff	postinc2,___flsub@b
  1893  0026AA  CFDE F01B          	movff	postinc2,___flsub@b+1
  1894  0026AE  CFDE F01C          	movff	postinc2,___flsub@b+2
  1895  0026B2  CFDE F01D          	movff	postinc2,___flsub@b+3
  1896  0026B6  C0C2  F01E         	movff	esvaziar_tanque@decremento,___flsub@a
  1897  0026BA  C0C3  F01F         	movff	esvaziar_tanque@decremento+1,___flsub@a+1
  1898  0026BE  C0C4  F020         	movff	esvaziar_tanque@decremento+2,___flsub@a+2
  1899  0026C2  C0C5  F021         	movff	esvaziar_tanque@decremento+3,___flsub@a+3
  1900  0026C6  EC94  F01C         	call	___flsub	;wreg free
  1901  0026CA  C07E  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  1902  0026CE  C07F  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  1903  0026D2  C01A  FFDE         	movff	?___flsub,postinc2
  1904  0026D6  C01B  FFDE         	movff	?___flsub+1,postinc2
  1905  0026DA  C01C  FFDE         	movff	?___flsub+2,postinc2
  1906  0026DE  C01D  FFDE         	movff	?___flsub+3,postinc2
  1907  0026E2                     
  1908                           ;esvaziar.c: 37:         char y[8];;esvaziar.c: 38:         sprintf(y, "%.1f", *vol);
  1909  0026E2  0EB8               	movlw	low esvaziar_tanque@y
  1910  0026E4  0100               	movlb	0	; () banked
  1911  0026E6  6F92               	movwf	sprintf@s& (0+255),b
  1912  0026E8  0E00               	movlw	high esvaziar_tanque@y
  1913  0026EA  6F93               	movwf	(sprintf@s+1)& (0+255),b
  1914  0026EC  0ED7               	movlw	low STR_11
  1915  0026EE  6F94               	movwf	sprintf@fmt& (0+255),b
  1916  0026F0  0E06               	movlw	high STR_11
  1917  0026F2  6F95               	movwf	(sprintf@fmt+1)& (0+255),b
  1918  0026F4  C07E  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  1919  0026F8  C07F  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  1920  0026FC  CFDE F096          	movff	postinc2,?_sprintf+4
  1921  002700  CFDE F097          	movff	postinc2,?_sprintf+5
  1922  002704  CFDE F098          	movff	postinc2,?_sprintf+6
  1923  002708  CFDE F099          	movff	postinc2,?_sprintf+7
  1924  00270C  EC42  F01C         	call	_sprintf	;wreg free
  1925  002710                     
  1926                           ;esvaziar.c: 39:         lcd_str(y);
  1927  002710  0EB8               	movlw	low esvaziar_tanque@y
  1928  002712  6E08               	movwf	lcd_str@str^0,c
  1929  002714  0E00               	movlw	high esvaziar_tanque@y
  1930  002716  6E09               	movwf	(lcd_str@str+1)^0,c
  1931  002718  ECE6  F01A         	call	_lcd_str	;wreg free
  1932  00271C                     
  1933                           ;esvaziar.c: 40:         lcd_str(" L");
  1934  00271C  0EEF               	movlw	low STR_12
  1935  00271E  6E08               	movwf	lcd_str@str^0,c
  1936  002720  0E06               	movlw	high STR_12
  1937  002722  6E09               	movwf	(lcd_str@str+1)^0,c
  1938  002724  ECE6  F01A         	call	_lcd_str	;wreg free
  1939  002728                     
  1940                           ;esvaziar.c: 43:         int tempo = decremento / 2;
  1941  002728  0E00               	movlw	0
  1942  00272A  6E05               	movwf	___fldiv@a^0,c
  1943  00272C  0E00               	movlw	0
  1944  00272E  6E06               	movwf	(___fldiv@a+1)^0,c
  1945  002730  0E00               	movlw	0
  1946  002732  6E07               	movwf	(___fldiv@a+2)^0,c
  1947  002734  0E40               	movlw	64
  1948  002736  6E08               	movwf	(___fldiv@a+3)^0,c
  1949  002738  C0C2  F001         	movff	esvaziar_tanque@decremento,___fldiv@b
  1950  00273C  C0C3  F002         	movff	esvaziar_tanque@decremento+1,___fldiv@b+1
  1951  002740  C0C4  F003         	movff	esvaziar_tanque@decremento+2,___fldiv@b+2
  1952  002744  C0C5  F004         	movff	esvaziar_tanque@decremento+3,___fldiv@b+3
  1953  002748  ECF1  F00F         	call	___fldiv	;wreg free
  1954  00274C  C001  F01A         	movff	?___fldiv,___fltol@f1
  1955  002750  C002  F01B         	movff	?___fldiv+1,___fltol@f1+1
  1956  002754  C003  F01C         	movff	?___fldiv+2,___fltol@f1+2
  1957  002758  C004  F01D         	movff	?___fldiv+3,___fltol@f1+3
  1958  00275C  ECC4  F016         	call	___fltol	;wreg free
  1959  002760  C01A  F0C0         	movff	?___fltol,esvaziar_tanque@tempo
  1960  002764  C01B  F0C1         	movff	?___fltol+1,esvaziar_tanque@tempo+1
  1961  002768                     
  1962                           ;esvaziar.c: 44:         int i;;esvaziar.c: 45:         int numeros[10] = {0x3F, 0x06, 0
      +                          x5B, 0x4F, 0x66, 0x6D, 0x7D,
  1963  002768  EE21  F050         	lfsr	2,esvaziar_tanque@F342
  1964  00276C  EE10  F0A4         	lfsr	1,esvaziar_tanque@numeros
  1965  002770  0E13               	movlw	19
  1966  002772                     u5061:
  1967  002772  CFDB FFE3          	movff	plusw2,plusw1
  1968  002776  06E8               	decf	wreg,f,c
  1969  002778  E2FC               	bc	u5061
  1970  00277A                     
  1971                           ;esvaziar.c: 48:         (*(volatile __near unsigned char*)0xF92) = 0x00;
  1972  00277A  0E00               	movlw	0
  1973  00277C  6E92               	movwf	146,c	;volatile
  1974  00277E                     
  1975                           ;esvaziar.c: 49:         (((*(volatile __near unsigned char*)0xF80)) |= (1<<5));
  1976  00277E  8A80               	bsf	128,5,c	;volatile
  1977  002780                     
  1978                           ;esvaziar.c: 54:         lcd_cmd(0x01);
  1979  002780  0E01               	movlw	1
  1980  002782  EC5D  F01D         	call	_lcd_cmd
  1981  002786                     
  1982                           ;esvaziar.c: 55:         lcd_cmd(0x80);
  1983  002786  0E80               	movlw	128
  1984  002788  EC5D  F01D         	call	_lcd_cmd
  1985  00278C                     
  1986                           ;esvaziar.c: 56:         lcd_str("Esvaziando...");
  1987  00278C  0E48               	movlw	low STR_27
  1988  00278E  6E08               	movwf	lcd_str@str^0,c
  1989  002790  0E06               	movlw	high STR_27
  1990  002792  6E09               	movwf	(lcd_str@str+1)^0,c
  1991  002794  ECE6  F01A         	call	_lcd_str	;wreg free
  1992  002798                     
  1993                           ;esvaziar.c: 57:         lcd_cmd(0xC0);
  1994  002798  0EC0               	movlw	192
  1995  00279A  EC5D  F01D         	call	_lcd_cmd
  1996  00279E                     
  1997                           ;esvaziar.c: 58:         lcd_str("Aguarde!");
  1998  00279E  0EC6               	movlw	low STR_14
  1999  0027A0  6E08               	movwf	lcd_str@str^0,c
  2000  0027A2  0E06               	movlw	high STR_14
  2001  0027A4  6E09               	movwf	(lcd_str@str+1)^0,c
  2002  0027A6  ECE6  F01A         	call	_lcd_str	;wreg free
  2003  0027AA                     
  2004                           ;esvaziar.c: 65:         for (i = tempo; i >= 0; i--) {
  2005  0027AA  C0C0  F0C6         	movff	esvaziar_tanque@tempo,esvaziar_tanque@i
  2006  0027AE  C0C1  F0C7         	movff	esvaziar_tanque@tempo+1,esvaziar_tanque@i+1
  2007  0027B2                     l4351:
  2008  0027B2  0100               	movlb	0	; () banked
  2009  0027B4  BFC7               	btfsc	(esvaziar_tanque@i+1)& (0+255),7,b
  2010  0027B6  EFE1  F013         	goto	u5070
  2011  0027BA  EFDF  F013         	goto	u5071
  2012  0027BE                     u5071:
  2013  0027BE  EFE3  F013         	goto	l4355
  2014  0027C2                     u5070:
  2015  0027C2  EFFA  F013         	goto	l4363
  2016  0027C6                     l4355:
  2017                           
  2018                           ; BSR set to: 0
  2019                           ;esvaziar.c: 66:             (*(volatile __near unsigned char*)0xF83) = numeros[i];
  2020  0027C6  90D8               	bcf	status,0,c
  2021  0027C8  35C6               	rlcf	esvaziar_tanque@i& (0+255),w,b
  2022  0027CA  6ED9               	movwf	fsr2l,c
  2023  0027CC  35C7               	rlcf	(esvaziar_tanque@i+1)& (0+255),w,b
  2024  0027CE  6EDA               	movwf	fsr2h,c
  2025  0027D0  0EA4               	movlw	low esvaziar_tanque@numeros
  2026  0027D2  26D9               	addwf	fsr2l,f,c
  2027  0027D4  0E00               	movlw	high esvaziar_tanque@numeros
  2028  0027D6  22DA               	addwfc	fsr2h,f,c
  2029  0027D8  50DF               	movf	indf2,w,c
  2030  0027DA  6E83               	movwf	131,c	;volatile
  2031  0027DC                     
  2032                           ; BSR set to: 0
  2033                           ;esvaziar.c: 67:             atraso_ms(1000);
  2034  0027DC  0E03               	movlw	3
  2035  0027DE  6E02               	movwf	(atraso_ms@t+1)^0,c
  2036  0027E0  0EE8               	movlw	232
  2037  0027E2  6E01               	movwf	atraso_ms@t^0,c
  2038  0027E4  EC22  F01B         	call	_atraso_ms	;wreg free
  2039  0027E8                     
  2040                           ;esvaziar.c: 68:         }
  2041  0027E8  0100               	movlb	0	; () banked
  2042  0027EA  07C6               	decf	esvaziar_tanque@i& (0+255),f,b
  2043  0027EC  A0D8               	btfss	status,0,c
  2044  0027EE  07C7               	decf	(esvaziar_tanque@i+1)& (0+255),f,b
  2045  0027F0  EFD9  F013         	goto	l4351
  2046  0027F4                     l4363:
  2047                           
  2048                           ; BSR set to: 0
  2049                           ;esvaziar.c: 69:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  2050  0027F4  9A80               	bcf	128,5,c	;volatile
  2051  0027F6                     
  2052                           ; BSR set to: 0
  2053                           ;esvaziar.c: 72:         lcd_cmd(0x01);
  2054  0027F6  0E01               	movlw	1
  2055  0027F8  EC5D  F01D         	call	_lcd_cmd
  2056  0027FC                     
  2057                           ;esvaziar.c: 73:         lcd_cmd(0x80);
  2058  0027FC  0E80               	movlw	128
  2059  0027FE  EC5D  F01D         	call	_lcd_cmd
  2060  002802                     
  2061                           ;esvaziar.c: 74:         lcd_str("    SUCESSO!");
  2062  002802  0E80               	movlw	low STR_15
  2063  002804  6E08               	movwf	lcd_str@str^0,c
  2064  002806  0E06               	movlw	high STR_15
  2065  002808  6E09               	movwf	(lcd_str@str+1)^0,c
  2066  00280A  ECE6  F01A         	call	_lcd_str	;wreg free
  2067  00280E                     
  2068                           ;esvaziar.c: 75:         lcd_cmd(0xC0);
  2069  00280E  0EC0               	movlw	192
  2070  002810  EC5D  F01D         	call	_lcd_cmd
  2071  002814                     
  2072                           ;esvaziar.c: 76:         lcd_str("   RB1-Voltar");
  2073  002814  0E64               	movlw	low STR_16
  2074  002816  6E08               	movwf	lcd_str@str^0,c
  2075  002818  0E06               	movlw	high STR_16
  2076  00281A  6E09               	movwf	(lcd_str@str+1)^0,c
  2077  00281C  ECE6  F01A         	call	_lcd_str	;wreg free
  2078  002820                     l181:
  2079                           
  2080                           ;esvaziar.c: 94:     while(((((*(volatile __near unsigned char*)0xF81)) & (1<<1)))){
  2081  002820  B281               	btfsc	129,1,c	;volatile
  2082  002822  EF15  F014         	goto	u5081
  2083  002826  EF17  F014         	goto	u5080
  2084  00282A                     u5081:
  2085  00282A  EF10  F014         	goto	l181
  2086  00282E                     u5080:
  2087  00282E  0012               	return		;funcret
  2088  002830                     __end_of_esvaziar_tanque:
  2089                           	callstack 0
  2090                           
  2091 ;; *************** function _encher_tanque *****************
  2092 ;; Defined at:
  2093 ;;		line 8 in file "encher.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;  vol             2  125[COMRAM] PTR 
  2096 ;;		 -> volume(4), 
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;  numeros        20   36[BANK0 ] int [10]
  2099 ;;  y               8   56[BANK0 ] unsigned char [8]
  2100 ;;  i               2   70[BANK0 ] int 
  2101 ;;  tempo           2   64[BANK0 ] int 
  2102 ;;  incremento      4   66[BANK0 ] int 
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      void 
  2105 ;; Registers used:
  2106 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2112 ;;      Params:         2       0       0       0       0       0       0
  2113 ;;      Locals:         0      36       0       0       0       0       0
  2114 ;;      Temps:          0       0       0       0       0       0       0
  2115 ;;      Totals:         2      36       0       0       0       0       0
  2116 ;;Total ram usage:       38 bytes
  2117 ;; Hardware stack levels used:    1
  2118 ;; Hardware stack levels required when called:    8
  2119 ;; This function calls:
  2120 ;;		___fladd
  2121 ;;		___fldiv
  2122 ;;		___flge
  2123 ;;		___fltol
  2124 ;;		_atraso_ms
  2125 ;;		_lcd_cmd
  2126 ;;		_lcd_str
  2127 ;;		_sprintf
  2128 ;; This function is called by:
  2129 ;;		_main
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           	psect	text4
  2134  00237C                     __ptext4:
  2135                           	callstack 0
  2136  00237C                     _encher_tanque:
  2137                           	callstack 22
  2138  00237C                     
  2139                           ;encher.c: 11:     lcd_cmd(0x01);
  2140  00237C  0E01               	movlw	1
  2141  00237E  EC5D  F01D         	call	_lcd_cmd
  2142                           
  2143                           ;encher.c: 12:     lcd_cmd(0x80);
  2144  002382  0E80               	movlw	128
  2145  002384  EC5D  F01D         	call	_lcd_cmd
  2146  002388                     
  2147                           ;encher.c: 13:     lcd_str("Quant(L): ");
  2148  002388  0EA5               	movlw	low STR_7
  2149  00238A  6E08               	movwf	lcd_str@str^0,c
  2150  00238C  0E06               	movlw	high STR_7
  2151  00238E  6E09               	movwf	(lcd_str@str+1)^0,c
  2152  002390  ECE6  F01A         	call	_lcd_str	;wreg free
  2153  002394                     
  2154                           ;encher.c: 14:     lcd_cmd(0xC0);
  2155  002394  0EC0               	movlw	192
  2156  002396  EC5D  F01D         	call	_lcd_cmd
  2157                           
  2158                           ;encher.c: 15:     lcd_str("RB1-voltar");
  2159  00239A  0EB0               	movlw	low STR_8
  2160  00239C  6E08               	movwf	lcd_str@str^0,c
  2161  00239E  0E06               	movlw	high STR_8
  2162  0023A0  6E09               	movwf	(lcd_str@str+1)^0,c
  2163  0023A2  ECE6  F01A         	call	_lcd_str	;wreg free
  2164  0023A6                     
  2165                           ;encher.c: 16:     lcd_cmd(0x80 +10);
  2166  0023A6  0E8A               	movlw	138
  2167  0023A8  EC5D  F01D         	call	_lcd_cmd
  2168  0023AC                     
  2169                           ;encher.c: 17:     atraso_ms(1000);
  2170  0023AC  0E03               	movlw	3
  2171  0023AE  6E02               	movwf	(atraso_ms@t+1)^0,c
  2172  0023B0  0EE8               	movlw	232
  2173  0023B2  6E01               	movwf	atraso_ms@t^0,c
  2174  0023B4  EC22  F01B         	call	_atraso_ms	;wreg free
  2175  0023B8                     
  2176                           ;encher.c: 19:     double incremento = 10;
  2177  0023B8  0E00               	movlw	0
  2178  0023BA  0100               	movlb	0	; () banked
  2179  0023BC  6FC2               	movwf	encher_tanque@incremento& (0+255),b
  2180  0023BE  0E00               	movlw	0
  2181  0023C0  6FC3               	movwf	(encher_tanque@incremento+1)& (0+255),b
  2182  0023C2  0E20               	movlw	32
  2183  0023C4  6FC4               	movwf	(encher_tanque@incremento+2)& (0+255),b
  2184  0023C6  0E41               	movlw	65
  2185  0023C8  6FC5               	movwf	(encher_tanque@incremento+3)& (0+255),b
  2186  0023CA                     
  2187                           ; BSR set to: 0
  2188                           ;encher.c: 21:     if (*vol + incremento > 70) {
  2189  0023CA  0E00               	movlw	0
  2190  0023CC  6E1A               	movwf	___flge@ff1^0,c
  2191  0023CE  0E00               	movlw	0
  2192  0023D0  6E1B               	movwf	(___flge@ff1+1)^0,c
  2193  0023D2  0E8C               	movlw	140
  2194  0023D4  6E1C               	movwf	(___flge@ff1+2)^0,c
  2195  0023D6  0E42               	movlw	66
  2196  0023D8  6E1D               	movwf	(___flge@ff1+3)^0,c
  2197  0023DA  C0C2  F005         	movff	encher_tanque@incremento,___fladd@a
  2198  0023DE  C0C3  F006         	movff	encher_tanque@incremento+1,___fladd@a+1
  2199  0023E2  C0C4  F007         	movff	encher_tanque@incremento+2,___fladd@a+2
  2200  0023E6  C0C5  F008         	movff	encher_tanque@incremento+3,___fladd@a+3
  2201  0023EA  C07E  FFD9         	movff	encher_tanque@vol,fsr2l
  2202  0023EE  C07F  FFDA         	movff	encher_tanque@vol+1,fsr2h
  2203  0023F2  CFDE F001          	movff	postinc2,___fladd@b
  2204  0023F6  CFDE F002          	movff	postinc2,___fladd@b+1
  2205  0023FA  CFDE F003          	movff	postinc2,___fladd@b+2
  2206  0023FE  CFDE F004          	movff	postinc2,___fladd@b+3
  2207  002402  EC47  F009         	call	___fladd	;wreg free
  2208  002406  C001  F01E         	movff	?___fladd,___flge@ff2
  2209  00240A  C002  F01F         	movff	?___fladd+1,___flge@ff2+1
  2210  00240E  C003  F020         	movff	?___fladd+2,___flge@ff2+2
  2211  002412  C004  F021         	movff	?___fladd+3,___flge@ff2+3
  2212  002416  EC47  F017         	call	___flge	;wreg free
  2213  00241A  B0D8               	btfsc	status,0,c
  2214  00241C  EF12  F012         	goto	u5011
  2215  002420  EF14  F012         	goto	u5010
  2216  002424                     u5011:
  2217  002424  EF2B  F012         	goto	l4251
  2218  002428                     u5010:
  2219  002428                     
  2220                           ;encher.c: 24:         lcd_cmd(0x01);
  2221  002428  0E01               	movlw	1
  2222  00242A  EC5D  F01D         	call	_lcd_cmd
  2223                           
  2224                           ;encher.c: 25:         lcd_cmd(0x80);
  2225  00242E  0E80               	movlw	128
  2226  002430  EC5D  F01D         	call	_lcd_cmd
  2227  002434                     
  2228                           ;encher.c: 26:         lcd_str("ERRO: vol > MAX");
  2229  002434  0E29               	movlw	low STR_9
  2230  002436  6E08               	movwf	lcd_str@str^0,c
  2231  002438  0E06               	movlw	high STR_9
  2232  00243A  6E09               	movwf	(lcd_str@str+1)^0,c
  2233  00243C  ECE6  F01A         	call	_lcd_str	;wreg free
  2234  002440                     
  2235                           ;encher.c: 27:         lcd_cmd(0xC0);
  2236  002440  0EC0               	movlw	192
  2237  002442  EC5D  F01D         	call	_lcd_cmd
  2238                           
  2239                           ;encher.c: 28:         lcd_str("RB1-Voltar");
  2240  002446  0E67               	movlw	low (STR_16+3)
  2241  002448  6E08               	movwf	lcd_str@str^0,c
  2242  00244A  0E06               	movlw	high (STR_16+3)
  2243  00244C  6E09               	movwf	(lcd_str@str+1)^0,c
  2244  00244E  ECE6  F01A         	call	_lcd_str	;wreg free
  2245                           
  2246                           ;encher.c: 34:     } else {
  2247  002452  EFEC  F012         	goto	l147
  2248  002456                     l4251:
  2249                           
  2250                           ;encher.c: 36:         *vol += incremento;
  2251  002456  C07E  FFD9         	movff	encher_tanque@vol,fsr2l
  2252  00245A  C07F  FFDA         	movff	encher_tanque@vol+1,fsr2h
  2253  00245E  CFDE F001          	movff	postinc2,___fladd@b
  2254  002462  CFDE F002          	movff	postinc2,___fladd@b+1
  2255  002466  CFDE F003          	movff	postinc2,___fladd@b+2
  2256  00246A  CFDE F004          	movff	postinc2,___fladd@b+3
  2257  00246E  C0C2  F005         	movff	encher_tanque@incremento,___fladd@a
  2258  002472  C0C3  F006         	movff	encher_tanque@incremento+1,___fladd@a+1
  2259  002476  C0C4  F007         	movff	encher_tanque@incremento+2,___fladd@a+2
  2260  00247A  C0C5  F008         	movff	encher_tanque@incremento+3,___fladd@a+3
  2261  00247E  EC47  F009         	call	___fladd	;wreg free
  2262  002482  C07E  FFD9         	movff	encher_tanque@vol,fsr2l
  2263  002486  C07F  FFDA         	movff	encher_tanque@vol+1,fsr2h
  2264  00248A  C001  FFDE         	movff	?___fladd,postinc2
  2265  00248E  C002  FFDE         	movff	?___fladd+1,postinc2
  2266  002492  C003  FFDE         	movff	?___fladd+2,postinc2
  2267  002496  C004  FFDE         	movff	?___fladd+3,postinc2
  2268  00249A                     
  2269                           ;encher.c: 37:         char y[8];;encher.c: 38:         sprintf(y, "%.1f", *vol);
  2270  00249A  0EB8               	movlw	low encher_tanque@y
  2271  00249C  0100               	movlb	0	; () banked
  2272  00249E  6F92               	movwf	sprintf@s& (0+255),b
  2273  0024A0  0E00               	movlw	high encher_tanque@y
  2274  0024A2  6F93               	movwf	(sprintf@s+1)& (0+255),b
  2275  0024A4  0ED7               	movlw	low STR_11
  2276  0024A6  6F94               	movwf	sprintf@fmt& (0+255),b
  2277  0024A8  0E06               	movlw	high STR_11
  2278  0024AA  6F95               	movwf	(sprintf@fmt+1)& (0+255),b
  2279  0024AC  C07E  FFD9         	movff	encher_tanque@vol,fsr2l
  2280  0024B0  C07F  FFDA         	movff	encher_tanque@vol+1,fsr2h
  2281  0024B4  CFDE F096          	movff	postinc2,?_sprintf+4
  2282  0024B8  CFDE F097          	movff	postinc2,?_sprintf+5
  2283  0024BC  CFDE F098          	movff	postinc2,?_sprintf+6
  2284  0024C0  CFDE F099          	movff	postinc2,?_sprintf+7
  2285  0024C4  EC42  F01C         	call	_sprintf	;wreg free
  2286  0024C8                     
  2287                           ;encher.c: 39:         lcd_str(y);
  2288  0024C8  0EB8               	movlw	low encher_tanque@y
  2289  0024CA  6E08               	movwf	lcd_str@str^0,c
  2290  0024CC  0E00               	movlw	high encher_tanque@y
  2291  0024CE  6E09               	movwf	(lcd_str@str+1)^0,c
  2292  0024D0  ECE6  F01A         	call	_lcd_str	;wreg free
  2293  0024D4                     
  2294                           ;encher.c: 40:         lcd_str(" L");
  2295  0024D4  0EEF               	movlw	low STR_12
  2296  0024D6  6E08               	movwf	lcd_str@str^0,c
  2297  0024D8  0E06               	movlw	high STR_12
  2298  0024DA  6E09               	movwf	(lcd_str@str+1)^0,c
  2299  0024DC  ECE6  F01A         	call	_lcd_str	;wreg free
  2300  0024E0                     
  2301                           ;encher.c: 43:         int tempo = incremento / 2;
  2302  0024E0  0E00               	movlw	0
  2303  0024E2  6E05               	movwf	___fldiv@a^0,c
  2304  0024E4  0E00               	movlw	0
  2305  0024E6  6E06               	movwf	(___fldiv@a+1)^0,c
  2306  0024E8  0E00               	movlw	0
  2307  0024EA  6E07               	movwf	(___fldiv@a+2)^0,c
  2308  0024EC  0E40               	movlw	64
  2309  0024EE  6E08               	movwf	(___fldiv@a+3)^0,c
  2310  0024F0  C0C2  F001         	movff	encher_tanque@incremento,___fldiv@b
  2311  0024F4  C0C3  F002         	movff	encher_tanque@incremento+1,___fldiv@b+1
  2312  0024F8  C0C4  F003         	movff	encher_tanque@incremento+2,___fldiv@b+2
  2313  0024FC  C0C5  F004         	movff	encher_tanque@incremento+3,___fldiv@b+3
  2314  002500  ECF1  F00F         	call	___fldiv	;wreg free
  2315  002504  C001  F01A         	movff	?___fldiv,___fltol@f1
  2316  002508  C002  F01B         	movff	?___fldiv+1,___fltol@f1+1
  2317  00250C  C003  F01C         	movff	?___fldiv+2,___fltol@f1+2
  2318  002510  C004  F01D         	movff	?___fldiv+3,___fltol@f1+3
  2319  002514  ECC4  F016         	call	___fltol	;wreg free
  2320  002518  C01A  F0C0         	movff	?___fltol,encher_tanque@tempo
  2321  00251C  C01B  F0C1         	movff	?___fltol+1,encher_tanque@tempo+1
  2322  002520                     
  2323                           ;encher.c: 44:         int i;;encher.c: 45:         int numeros[10] = {0x3F, 0x06, 0x5B,
      +                           0x4F, 0x66, 0x6D, 0x7D,
  2324  002520  EE20  F0C8         	lfsr	2,encher_tanque@F342
  2325  002524  EE10  F0A4         	lfsr	1,encher_tanque@numeros
  2326  002528  0E13               	movlw	19
  2327  00252A                     u5021:
  2328  00252A  CFDB FFE3          	movff	plusw2,plusw1
  2329  00252E  06E8               	decf	wreg,f,c
  2330  002530  E2FC               	bc	u5021
  2331  002532                     
  2332                           ;encher.c: 48:         (*(volatile __near unsigned char*)0xF92) = 0x00;
  2333  002532  0E00               	movlw	0
  2334  002534  6E92               	movwf	146,c	;volatile
  2335  002536                     
  2336                           ;encher.c: 49:         (((*(volatile __near unsigned char*)0xF80)) |= (1<<5));
  2337  002536  8A80               	bsf	128,5,c	;volatile
  2338  002538                     
  2339                           ;encher.c: 54:         lcd_cmd(0x01);
  2340  002538  0E01               	movlw	1
  2341  00253A  EC5D  F01D         	call	_lcd_cmd
  2342  00253E                     
  2343                           ;encher.c: 55:         lcd_cmd(0x80);
  2344  00253E  0E80               	movlw	128
  2345  002540  EC5D  F01D         	call	_lcd_cmd
  2346  002544                     
  2347                           ;encher.c: 56:         lcd_str("Enchendo...");
  2348  002544  0E8D               	movlw	low STR_13
  2349  002546  6E08               	movwf	lcd_str@str^0,c
  2350  002548  0E06               	movlw	high STR_13
  2351  00254A  6E09               	movwf	(lcd_str@str+1)^0,c
  2352  00254C  ECE6  F01A         	call	_lcd_str	;wreg free
  2353  002550                     
  2354                           ;encher.c: 57:         lcd_cmd(0xC0);
  2355  002550  0EC0               	movlw	192
  2356  002552  EC5D  F01D         	call	_lcd_cmd
  2357  002556                     
  2358                           ;encher.c: 58:         lcd_str("Aguarde!");
  2359  002556  0EC6               	movlw	low STR_14
  2360  002558  6E08               	movwf	lcd_str@str^0,c
  2361  00255A  0E06               	movlw	high STR_14
  2362  00255C  6E09               	movwf	(lcd_str@str+1)^0,c
  2363  00255E  ECE6  F01A         	call	_lcd_str	;wreg free
  2364  002562                     
  2365                           ;encher.c: 65:         for (i = tempo; i >= 0; i--) {
  2366  002562  C0C0  F0C6         	movff	encher_tanque@tempo,encher_tanque@i
  2367  002566  C0C1  F0C7         	movff	encher_tanque@tempo+1,encher_tanque@i+1
  2368  00256A                     l4279:
  2369  00256A  0100               	movlb	0	; () banked
  2370  00256C  BFC7               	btfsc	(encher_tanque@i+1)& (0+255),7,b
  2371  00256E  EFBD  F012         	goto	u5030
  2372  002572  EFBB  F012         	goto	u5031
  2373  002576                     u5031:
  2374  002576  EFBF  F012         	goto	l4283
  2375  00257A                     u5030:
  2376  00257A  EFD6  F012         	goto	l4291
  2377  00257E                     l4283:
  2378                           
  2379                           ; BSR set to: 0
  2380                           ;encher.c: 66:             (*(volatile __near unsigned char*)0xF83) = numeros[i];
  2381  00257E  90D8               	bcf	status,0,c
  2382  002580  35C6               	rlcf	encher_tanque@i& (0+255),w,b
  2383  002582  6ED9               	movwf	fsr2l,c
  2384  002584  35C7               	rlcf	(encher_tanque@i+1)& (0+255),w,b
  2385  002586  6EDA               	movwf	fsr2h,c
  2386  002588  0EA4               	movlw	low encher_tanque@numeros
  2387  00258A  26D9               	addwf	fsr2l,f,c
  2388  00258C  0E00               	movlw	high encher_tanque@numeros
  2389  00258E  22DA               	addwfc	fsr2h,f,c
  2390  002590  50DF               	movf	indf2,w,c
  2391  002592  6E83               	movwf	131,c	;volatile
  2392  002594                     
  2393                           ; BSR set to: 0
  2394                           ;encher.c: 67:             atraso_ms(1000);
  2395  002594  0E03               	movlw	3
  2396  002596  6E02               	movwf	(atraso_ms@t+1)^0,c
  2397  002598  0EE8               	movlw	232
  2398  00259A  6E01               	movwf	atraso_ms@t^0,c
  2399  00259C  EC22  F01B         	call	_atraso_ms	;wreg free
  2400  0025A0                     
  2401                           ;encher.c: 68:         }
  2402  0025A0  0100               	movlb	0	; () banked
  2403  0025A2  07C6               	decf	encher_tanque@i& (0+255),f,b
  2404  0025A4  A0D8               	btfss	status,0,c
  2405  0025A6  07C7               	decf	(encher_tanque@i+1)& (0+255),f,b
  2406  0025A8  EFB5  F012         	goto	l4279
  2407  0025AC                     l4291:
  2408                           
  2409                           ; BSR set to: 0
  2410                           ;encher.c: 69:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  2411  0025AC  9A80               	bcf	128,5,c	;volatile
  2412  0025AE                     
  2413                           ; BSR set to: 0
  2414                           ;encher.c: 72:         lcd_cmd(0x01);
  2415  0025AE  0E01               	movlw	1
  2416  0025B0  EC5D  F01D         	call	_lcd_cmd
  2417  0025B4                     
  2418                           ;encher.c: 73:         lcd_cmd(0x80);
  2419  0025B4  0E80               	movlw	128
  2420  0025B6  EC5D  F01D         	call	_lcd_cmd
  2421  0025BA                     
  2422                           ;encher.c: 74:         lcd_str("    SUCESSO!");
  2423  0025BA  0E80               	movlw	low STR_15
  2424  0025BC  6E08               	movwf	lcd_str@str^0,c
  2425  0025BE  0E06               	movlw	high STR_15
  2426  0025C0  6E09               	movwf	(lcd_str@str+1)^0,c
  2427  0025C2  ECE6  F01A         	call	_lcd_str	;wreg free
  2428  0025C6                     
  2429                           ;encher.c: 75:         lcd_cmd(0xC0);
  2430  0025C6  0EC0               	movlw	192
  2431  0025C8  EC5D  F01D         	call	_lcd_cmd
  2432  0025CC                     
  2433                           ;encher.c: 76:         lcd_str("   RB1-Voltar");
  2434  0025CC  0E64               	movlw	low STR_16
  2435  0025CE  6E08               	movwf	lcd_str@str^0,c
  2436  0025D0  0E06               	movlw	high STR_16
  2437  0025D2  6E09               	movwf	(lcd_str@str+1)^0,c
  2438  0025D4  ECE6  F01A         	call	_lcd_str	;wreg free
  2439  0025D8                     l147:
  2440                           
  2441                           ;encher.c: 94:     while(((((*(volatile __near unsigned char*)0xF81)) & (1<<1)))){
  2442  0025D8  B281               	btfsc	129,1,c	;volatile
  2443  0025DA  EFF1  F012         	goto	u5041
  2444  0025DE  EFF3  F012         	goto	u5040
  2445  0025E2                     u5041:
  2446  0025E2  EFEC  F012         	goto	l147
  2447  0025E6                     u5040:
  2448  0025E6  0012               	return		;funcret
  2449  0025E8                     __end_of_encher_tanque:
  2450                           	callstack 0
  2451                           
  2452 ;; *************** function _sprintf *****************
  2453 ;; Defined at:
  2454 ;;		line 9 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;  s               2   18[BANK0 ] PTR unsigned char 
  2457 ;;		 -> esvaziar_tanque@y(8), ver_quantidade@y(8), encher_tanque@y(8), 
  2458 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
  2459 ;;		 -> STR_25(5), STR_17(5), STR_11(5), 
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;  f               6   30[BANK0 ] struct _IO_FILE
  2462 ;;  ap              2   28[BANK0 ] PTR void [1]
  2463 ;;		 -> ?_sprintf(2), 
  2464 ;;  ret             2    0        int 
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  2   18[BANK0 ] int 
  2467 ;; Registers used:
  2468 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2474 ;;      Params:         0       8       0       0       0       0       0
  2475 ;;      Locals:         0      10       0       0       0       0       0
  2476 ;;      Temps:          0       0       0       0       0       0       0
  2477 ;;      Totals:         0      18       0       0       0       0       0
  2478 ;;Total ram usage:       18 bytes
  2479 ;; Hardware stack levels used:    1
  2480 ;; Hardware stack levels required when called:    7
  2481 ;; This function calls:
  2482 ;;		_vfprintf
  2483 ;; This function is called by:
  2484 ;;		_encher_tanque
  2485 ;;		_ver_quantidade
  2486 ;;		_esvaziar_tanque
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           	psect	text5
  2491  003884                     __ptext5:
  2492                           	callstack 0
  2493  003884                     _sprintf:
  2494                           	callstack 22
  2495  003884  0E96               	movlw	low (?_sprintf+4)
  2496  003886  0100               	movlb	0	; () banked
  2497  003888  6F9C               	movwf	sprintf@ap& (0+255),b
  2498  00388A  0E00               	movlw	high (?_sprintf+4)
  2499  00388C  6F9D               	movwf	(sprintf@ap+1)& (0+255),b
  2500  00388E  C092  F09E         	movff	sprintf@s,sprintf@f
  2501  003892  C093  F09F         	movff	sprintf@s+1,sprintf@f+1
  2502  003896                     
  2503                           ; BSR set to: 0
  2504  003896  0E00               	movlw	0
  2505  003898  6FA1               	movwf	(sprintf@f+3)& (0+255),b
  2506  00389A  0E00               	movlw	0
  2507  00389C  6FA0               	movwf	(sprintf@f+2)& (0+255),b
  2508  00389E                     
  2509                           ; BSR set to: 0
  2510  00389E  0E00               	movlw	0
  2511  0038A0  6FA3               	movwf	(sprintf@f+5)& (0+255),b
  2512  0038A2  0E00               	movlw	0
  2513  0038A4  6FA2               	movwf	(sprintf@f+4)& (0+255),b
  2514  0038A6                     
  2515                           ; BSR set to: 0
  2516  0038A6  0E9E               	movlw	low sprintf@f
  2517  0038A8  6F8C               	movwf	vfprintf@fp& (0+255),b
  2518  0038AA  0E00               	movlw	high sprintf@f
  2519  0038AC  6F8D               	movwf	(vfprintf@fp+1)& (0+255),b
  2520  0038AE  C094  F08E         	movff	sprintf@fmt,vfprintf@fmt
  2521  0038B2  C095  F08F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2522  0038B6  0E9C               	movlw	low sprintf@ap
  2523  0038B8  6F90               	movwf	vfprintf@ap& (0+255),b
  2524  0038BA  0E00               	movlw	high sprintf@ap
  2525  0038BC  6F91               	movwf	(vfprintf@ap+1)& (0+255),b
  2526  0038BE  EC85  F01B         	call	_vfprintf	;wreg free
  2527  0038C2  0100               	movlb	0	; () banked
  2528  0038C4  51A0               	movf	(sprintf@f+2)& (0+255),w,b
  2529  0038C6  2592               	addwf	sprintf@s& (0+255),w,b
  2530  0038C8  6ED9               	movwf	fsr2l,c
  2531  0038CA  51A1               	movf	(sprintf@f+3)& (0+255),w,b
  2532  0038CC  2193               	addwfc	(sprintf@s+1)& (0+255),w,b
  2533  0038CE  6EDA               	movwf	fsr2h,c
  2534  0038D0  0E00               	movlw	0
  2535  0038D2  6EDF               	movwf	indf2,c
  2536  0038D4                     
  2537                           ; BSR set to: 0
  2538  0038D4  0012               	return		;funcret
  2539  0038D6                     __end_of_sprintf:
  2540                           	callstack 0
  2541                           
  2542 ;; *************** function _vfprintf *****************
  2543 ;; Defined at:
  2544 ;;		line 1368 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  2547 ;;		 -> sprintf@f(6), 
  2548 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  2549 ;;		 -> STR_25(5), STR_17(5), STR_11(5), 
  2550 ;;  ap              2   16[BANK0 ] PTR PTR void 
  2551 ;;		 -> sprintf@ap(2), 
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;  cfmt            2  123[COMRAM] PTR unsigned char 
  2554 ;;		 -> STR_25(5), STR_17(5), STR_11(5), 
  2555 ;; Return value:  Size  Location     Type
  2556 ;;                  2   12[BANK0 ] int 
  2557 ;; Registers used:
  2558 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2564 ;;      Params:         0       6       0       0       0       0       0
  2565 ;;      Locals:         2       0       0       0       0       0       0
  2566 ;;      Temps:          0       0       0       0       0       0       0
  2567 ;;      Totals:         2       6       0       0       0       0       0
  2568 ;;Total ram usage:        8 bytes
  2569 ;; Hardware stack levels used:    1
  2570 ;; Hardware stack levels required when called:    6
  2571 ;; This function calls:
  2572 ;;		_vfpfcnvrt
  2573 ;; This function is called by:
  2574 ;;		_sprintf
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           	psect	text6
  2579  00370A                     __ptext6:
  2580                           	callstack 0
  2581  00370A                     _vfprintf:
  2582                           	callstack 22
  2583  00370A                     
  2584                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprintf(FIL
      +                          E *fp, const char *fmt, va_list ap);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1369: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 13
      +                          71:     char *cfmt;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 137
      +                          3:     cfmt = (char *)fmt;
  2585  00370A  C08E  F07C         	movff	vfprintf@fmt,vfprintf@cfmt
  2586  00370E  C08F  F07D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2587  003712                     
  2588                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 0;
  2589  003712  0E00               	movlw	0
  2590  003714  0100               	movlb	0	; () banked
  2591  003716  6FEF               	movwf	(_nout+1)& (0+255),b
  2592  003718  0E00               	movlw	0
  2593  00371A  6FEE               	movwf	_nout& (0+255),b
  2594                           
  2595                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt
      +                          ) {
  2596  00371C  EFA3  F01B         	goto	l4159
  2597  003720                     l4157:
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nout += 
      +                          vfpfcnvrt(fp, &cfmt, ap);
  2601  003720  C08C  F072         	movff	vfprintf@fp,vfpfcnvrt@fp
  2602  003724  C08D  F073         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2603  003728  0E7C               	movlw	low vfprintf@cfmt
  2604  00372A  6E74               	movwf	vfpfcnvrt@fmt^0,c
  2605  00372C  0E00               	movlw	high vfprintf@cfmt
  2606  00372E  6E75               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2607  003730  C090  F076         	movff	vfprintf@ap,vfpfcnvrt@ap
  2608  003734  C091  F077         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2609  003738  ECA7  F00B         	call	_vfpfcnvrt	;wreg free
  2610  00373C  5072               	movf	?_vfpfcnvrt^0,w,c
  2611  00373E  0100               	movlb	0	; () banked
  2612  003740  27EE               	addwf	_nout& (0+255),f,b
  2613  003742  5073               	movf	(?_vfpfcnvrt+1)^0,w,c
  2614  003744  23EF               	addwfc	(_nout+1)& (0+255),f,b
  2615  003746                     l4159:
  2616                           
  2617                           ; BSR set to: 0
  2618                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt
      +                          ) {
  2619  003746  C07C  FFF6         	movff	vfprintf@cfmt,tblptrl
  2620  00374A  C07D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2621  00374E                     	if	0	;tblptru may be non-zero
  2622  00374E                     	endif
  2623  00374E                     	if	0	;tblptru may be non-zero
  2624  00374E                     	endif
  2625  00374E  0008               	tblrd		*
  2626  003750  50F5               	movf	tablat,w,c
  2627  003752  0900               	iorlw	0
  2628  003754  A4D8               	btfss	status,2,c
  2629  003756  EFAF  F01B         	goto	u4951
  2630  00375A  EFB1  F01B         	goto	u4950
  2631  00375E                     u4951:
  2632  00375E  EF90  F01B         	goto	l4157
  2633  003762                     u4950:
  2634  003762                     
  2635                           ; BSR set to: 0
  2636                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return nout;
  2637  003762  C0EE  F08C         	movff	_nout,?_vfprintf
  2638  003766  C0EF  F08D         	movff	_nout+1,?_vfprintf+1
  2639  00376A                     
  2640                           ; BSR set to: 0
  2641  00376A  0012               	return		;funcret
  2642  00376C                     __end_of_vfprintf:
  2643                           	callstack 0
  2644                           
  2645 ;; *************** function _vfpfcnvrt *****************
  2646 ;; Defined at:
  2647 ;;		line 670 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;  fp              2  113[COMRAM] PTR struct _IO_FILE
  2650 ;;		 -> sprintf@f(6), 
  2651 ;;  fmt             2  115[COMRAM] PTR PTR unsigned char 
  2652 ;;		 -> vfprintf@cfmt(2), 
  2653 ;;  ap              2  117[COMRAM] PTR PTR void 
  2654 ;;		 -> sprintf@ap(2), 
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;  llu             8    0        unsigned long long 
  2657 ;;  ll              8    0        long long 
  2658 ;;  f               4    4[BANK0 ] long long 
  2659 ;;  ct              3    8[BANK0 ] unsigned char [3]
  2660 ;;  vp              3    0        PTR void 
  2661 ;;  cp              3    0        PTR unsigned char 
  2662 ;;  i               2    0        int 
  2663 ;;  done            2    0        int 
  2664 ;;  c               1   11[BANK0 ] unsigned char 
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  2  113[COMRAM] int 
  2667 ;; Registers used:
  2668 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2674 ;;      Params:         6       0       0       0       0       0       0
  2675 ;;      Locals:         0      12       0       0       0       0       0
  2676 ;;      Temps:          4       0       0       0       0       0       0
  2677 ;;      Totals:        10      12       0       0       0       0       0
  2678 ;;Total ram usage:       22 bytes
  2679 ;; Hardware stack levels used:    1
  2680 ;; Hardware stack levels required when called:    5
  2681 ;; This function calls:
  2682 ;;		_atoi
  2683 ;;		_efgtoa
  2684 ;;		_fputc
  2685 ;;		_isdigit
  2686 ;;		_isupper
  2687 ;;		_strncmp
  2688 ;;		_tolower
  2689 ;; This function is called by:
  2690 ;;		_vfprintf
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           	psect	text7
  2695  00174E                     __ptext7:
  2696                           	callstack 0
  2697  00174E                     _vfpfcnvrt:
  2698                           	callstack 22
  2699  00174E                     
  2700                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int vfpfcn
      +                          vrt(FILE *fp, char *fmt[], va_list ap);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\c
      +                          ommon\doprnt.c: 671: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          672:     char c, *cp, ct[3];;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\dopr
      +                          nt.c: 673:     int done, i;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 674:     long long ll;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 675:     unsigned long long llu;
  2701  00174E  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2702  001752  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2703  001756  CFDE FFF6          	movff	postinc2,tblptrl
  2704  00175A  CFDD FFF7          	movff	postdec2,tblptrh
  2705  00175E                     	if	0	;tblptru may be non-zero
  2706  00175E                     	endif
  2707  00175E                     	if	0	;tblptru may be non-zero
  2708  00175E                     	endif
  2709  00175E  0008               	tblrd		*
  2710  001760  50F5               	movf	tablat,w,c
  2711  001762  0A25               	xorlw	37
  2712  001764  A4D8               	btfss	status,2,c
  2713  001766  EFB7  F00B         	goto	u4811
  2714  00176A  EFB9  F00B         	goto	u4810
  2715  00176E                     u4811:
  2716  00176E  EFC0  F00D         	goto	l4131
  2717  001772                     u4810:
  2718  001772                     
  2719                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*fmt;
  2720  001772  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2721  001776  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2722  00177A  2ADE               	incf	postinc2,f,c
  2723  00177C  0E00               	movlw	0
  2724  00177E  22DD               	addwfc	postdec2,f,c
  2725  001780                     
  2726                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flags = w
      +                          idth = 0;
  2727  001780  0E00               	movlw	0
  2728  001782  0100               	movlb	0	; () banked
  2729  001784  6FF1               	movwf	(_width+1)& (0+255),b
  2730  001786  0E00               	movlw	0
  2731  001788  6FF0               	movwf	_width& (0+255),b
  2732  00178A  C0F0  F0F4         	movff	_width,_flags
  2733  00178E  C0F1  F0F5         	movff	_width+1,_flags+1
  2734  001792                     
  2735                           ; BSR set to: 0
  2736                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec = -1
      +                          ;
  2737  001792  69F2               	setf	_prec& (0+255),b
  2738  001794  69F3               	setf	(_prec+1)& (0+255),b
  2739  001796                     
  2740                           ; BSR set to: 0
  2741                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if ((*fmt
      +                          )[0] == '.') {
  2742  001796  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2743  00179A  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2744  00179E  CFDE FFF6          	movff	postinc2,tblptrl
  2745  0017A2  CFDD FFF7          	movff	postdec2,tblptrh
  2746  0017A6                     	if	0	;tblptru may be non-zero
  2747  0017A6                     	endif
  2748  0017A6                     	if	0	;tblptru may be non-zero
  2749  0017A6                     	endif
  2750  0017A6  0008               	tblrd		*
  2751  0017A8  50F5               	movf	tablat,w,c
  2752  0017AA  0A2E               	xorlw	46
  2753  0017AC  A4D8               	btfss	status,2,c
  2754  0017AE  EFDB  F00B         	goto	u4821
  2755  0017B2  EFDD  F00B         	goto	u4820
  2756  0017B6                     u4821:
  2757  0017B6  EF5B  F00C         	goto	l4077
  2758  0017BA                     u4820:
  2759  0017BA                     
  2760                           ; BSR set to: 0
  2761                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             prec 
      +                          = 0;
  2762  0017BA  0E00               	movlw	0
  2763  0017BC  6FF3               	movwf	(_prec+1)& (0+255),b
  2764  0017BE  0E00               	movlw	0
  2765  0017C0  6FF2               	movwf	_prec& (0+255),b
  2766  0017C2                     
  2767                           ; BSR set to: 0
  2768                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             ++*fm
      +                          t;
  2769  0017C2  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2770  0017C6  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2771  0017CA  2ADE               	incf	postinc2,f,c
  2772  0017CC  0E00               	movlw	0
  2773  0017CE  22DD               	addwfc	postdec2,f,c
  2774  0017D0                     
  2775                           ; BSR set to: 0
  2776                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             if ((
      +                          *fmt)[0] == '*') {
  2777  0017D0  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2778  0017D4  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2779  0017D8  CFDE FFF6          	movff	postinc2,tblptrl
  2780  0017DC  CFDD FFF7          	movff	postdec2,tblptrh
  2781  0017E0                     	if	0	;tblptru may be non-zero
  2782  0017E0                     	endif
  2783  0017E0                     	if	0	;tblptru may be non-zero
  2784  0017E0                     	endif
  2785  0017E0  0008               	tblrd		*
  2786  0017E2  50F5               	movf	tablat,w,c
  2787  0017E4  0A2A               	xorlw	42
  2788  0017E6  A4D8               	btfss	status,2,c
  2789  0017E8  EFF8  F00B         	goto	u4831
  2790  0017EC  EFFA  F00B         	goto	u4830
  2791  0017F0                     u4831:
  2792  0017F0  EF17  F00C         	goto	l4067
  2793  0017F4                     u4830:
  2794  0017F4                     
  2795                           ; BSR set to: 0
  2796                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:                 +
      +                          +*fmt;
  2797  0017F4  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2798  0017F8  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2799  0017FC  2ADE               	incf	postinc2,f,c
  2800  0017FE  0E00               	movlw	0
  2801  001800  22DD               	addwfc	postdec2,f,c
  2802                           
  2803                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:                 p
      +                          rec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2804  001802  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2805  001806  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2806  00180A  CFDF F078          	movff	indf2,??_vfpfcnvrt
  2807  00180E  0E02               	movlw	2
  2808  001810  26DE               	addwf	postinc2,f,c
  2809  001812  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  2810  001816  0E00               	movlw	0
  2811  001818  22DD               	addwfc	postdec2,f,c
  2812  00181A  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2813  00181E  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2814  001822  CFDE F0F2          	movff	postinc2,_prec
  2815  001826  CFDD F0F3          	movff	postdec2,_prec+1
  2816                           
  2817                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             } els
      +                          e {
  2818  00182A  EF5B  F00C         	goto	l4077
  2819  00182E                     l4067:
  2820                           
  2821                           ; BSR set to: 0
  2822                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:                 p
      +                          rec = atoi(*fmt);
  2823  00182E  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2824  001832  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2825  001836  CFDE F008          	movff	postinc2,atoi@s
  2826  00183A  CFDD F009          	movff	postdec2,atoi@s+1
  2827  00183E  ECFC  F015         	call	_atoi	;wreg free
  2828  001842  C008  F0F2         	movff	?_atoi,_prec
  2829  001846  C009  F0F3         	movff	?_atoi+1,_prec+1
  2830                           
  2831                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:                 w
      +                          hile ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2832  00184A  EF2E  F00C         	goto	l4071
  2833  00184E                     l4069:
  2834                           
  2835                           ; BSR set to: 0
  2836                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:                  
      +                             ++*fmt;
  2837  00184E  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2838  001852  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2839  001856  2ADE               	incf	postinc2,f,c
  2840  001858  0E00               	movlw	0
  2841  00185A  22DD               	addwfc	postdec2,f,c
  2842  00185C                     l4071:
  2843  00185C  0ED0               	movlw	208
  2844  00185E  6E78               	movwf	??_vfpfcnvrt^0,c
  2845  001860  0EFF               	movlw	255
  2846  001862  6E79               	movwf	(??_vfpfcnvrt+1)^0,c
  2847  001864  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2848  001868  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2849  00186C  CFDE FFF6          	movff	postinc2,tblptrl
  2850  001870  CFDD FFF7          	movff	postdec2,tblptrh
  2851  001874                     	if	0	;tblptru may be non-zero
  2852  001874                     	endif
  2853  001874                     	if	0	;tblptru may be non-zero
  2854  001874                     	endif
  2855  001874  0008               	tblrd		*
  2856  001876  50F5               	movf	tablat,w,c
  2857  001878  6E7A               	movwf	(??_vfpfcnvrt+2)^0,c
  2858  00187A  6A7B               	clrf	(??_vfpfcnvrt+3)^0,c
  2859  00187C  5078               	movf	??_vfpfcnvrt^0,w,c
  2860  00187E  267A               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2861  001880  5079               	movf	(??_vfpfcnvrt+1)^0,w,c
  2862  001882  227B               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2863  001884  507B               	movf	(??_vfpfcnvrt+3)^0,w,c
  2864  001886  E10A               	bnz	u4840
  2865  001888  0E0A               	movlw	10
  2866  00188A  5C7A               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2867  00188C  A0D8               	btfss	status,0,c
  2868  00188E  EF4B  F00C         	goto	u4841
  2869  001892  EF4E  F00C         	goto	u4840
  2870  001896                     u4841:
  2871  001896  0E01               	movlw	1
  2872  001898  EF4F  F00C         	goto	u4850
  2873  00189C                     u4840:
  2874  00189C  0E00               	movlw	0
  2875  00189E                     u4850:
  2876  00189E  0100               	movlb	0	; () banked
  2877  0018A0  6F80               	movwf	_vfpfcnvrt$750& (0+255),b
  2878  0018A2  6B81               	clrf	(_vfpfcnvrt$750+1)& (0+255),b
  2879  0018A4                     
  2880                           ; BSR set to: 0
  2881  0018A4  5180               	movf	_vfpfcnvrt$750& (0+255),w,b
  2882  0018A6  1181               	iorwf	(_vfpfcnvrt$750+1)& (0+255),w,b
  2883  0018A8  A4D8               	btfss	status,2,c
  2884  0018AA  EF59  F00C         	goto	u4861
  2885  0018AE  EF5B  F00C         	goto	u4860
  2886  0018B2                     u4861:
  2887  0018B2  EF27  F00C         	goto	l4069
  2888  0018B6                     u4860:
  2889  0018B6                     l4077:
  2890                           
  2891                           ; BSR set to: 0
  2892                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0] = t
      +                          olower((int)(*fmt)[0]);
  2893  0018B6  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2894  0018BA  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2895  0018BE  CFDE FFF6          	movff	postinc2,tblptrl
  2896  0018C2  CFDD FFF7          	movff	postdec2,tblptrh
  2897  0018C6                     	if	0	;tblptru may be non-zero
  2898  0018C6                     	endif
  2899  0018C6                     	if	0	;tblptru may be non-zero
  2900  0018C6                     	endif
  2901  0018C6  0008               	tblrd		*
  2902  0018C8  50F5               	movf	tablat,w,c
  2903  0018CA  6E07               	movwf	tolower@c^0,c
  2904  0018CC  6A08               	clrf	(tolower@c+1)^0,c
  2905  0018CE  ECB6  F01B         	call	_tolower	;wreg free
  2906  0018D2  5007               	movf	?_tolower^0,w,c
  2907  0018D4  0100               	movlb	0	; () banked
  2908  0018D6  6F88               	movwf	vfpfcnvrt@ct& (0+255),b
  2909  0018D8                     
  2910                           ; BSR set to: 0
  2911                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (ct[0]
      +                          ) {
  2912  0018D8  5188               	movf	vfpfcnvrt@ct& (0+255),w,b
  2913  0018DA  B4D8               	btfsc	status,2,c
  2914  0018DC  EF72  F00C         	goto	u4871
  2915  0018E0  EF74  F00C         	goto	u4870
  2916  0018E4                     u4871:
  2917  0018E4  EFAE  F00C         	goto	l4087
  2918  0018E8                     u4870:
  2919  0018E8                     
  2920                           ; BSR set to: 0
  2921                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             ct[1]
      +                           = tolower((int)(*fmt)[1]);
  2922  0018E8  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2923  0018EC  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2924  0018F0  CFDE F078          	movff	postinc2,??_vfpfcnvrt
  2925  0018F4  CFDD F079          	movff	postdec2,??_vfpfcnvrt+1
  2926  0018F8  0E01               	movlw	1
  2927  0018FA  2678               	addwf	??_vfpfcnvrt^0,f,c
  2928  0018FC  0E00               	movlw	0
  2929  0018FE  2279               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2930  001900  C078  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2931  001904  C079  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2932  001908                     	if	0	;tblptru may be non-zero
  2933  001908                     	endif
  2934  001908                     	if	0	;tblptru may be non-zero
  2935  001908                     	endif
  2936  001908  0008               	tblrd		*
  2937  00190A  50F5               	movf	tablat,w,c
  2938  00190C  6E07               	movwf	tolower@c^0,c
  2939  00190E  6A08               	clrf	(tolower@c+1)^0,c
  2940  001910  ECB6  F01B         	call	_tolower	;wreg free
  2941  001914  5007               	movf	?_tolower^0,w,c
  2942  001916  0100               	movlb	0	; () banked
  2943  001918  6F89               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2944  00191A                     
  2945                           ; BSR set to: 0
  2946                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             if (c
      +                          t[1]) {
  2947  00191A  5189               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2948  00191C  B4D8               	btfsc	status,2,c
  2949  00191E  EF93  F00C         	goto	u4881
  2950  001922  EF95  F00C         	goto	u4880
  2951  001926                     u4881:
  2952  001926  EFAE  F00C         	goto	l4087
  2953  00192A                     u4880:
  2954  00192A                     
  2955                           ; BSR set to: 0
  2956                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:                 c
      +                          t[2] = tolower((int)(*fmt)[2]);
  2957  00192A  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2958  00192E  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2959  001932  CFDE F078          	movff	postinc2,??_vfpfcnvrt
  2960  001936  CFDD F079          	movff	postdec2,??_vfpfcnvrt+1
  2961  00193A  0E02               	movlw	2
  2962  00193C  2678               	addwf	??_vfpfcnvrt^0,f,c
  2963  00193E  0E00               	movlw	0
  2964  001940  2279               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2965  001942  C078  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2966  001946  C079  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2967  00194A                     	if	0	;tblptru may be non-zero
  2968  00194A                     	endif
  2969  00194A                     	if	0	;tblptru may be non-zero
  2970  00194A                     	endif
  2971  00194A  0008               	tblrd		*
  2972  00194C  50F5               	movf	tablat,w,c
  2973  00194E  6E07               	movwf	tolower@c^0,c
  2974  001950  6A08               	clrf	(tolower@c+1)^0,c
  2975  001952  ECB6  F01B         	call	_tolower	;wreg free
  2976  001956  5007               	movf	?_tolower^0,w,c
  2977  001958  0100               	movlb	0	; () banked
  2978  00195A  6F8A               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2979  00195C                     l4087:
  2980                           
  2981                           ; BSR set to: 0
  2982                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (ct[0]
      +                           == 'f') {
  2983  00195C  0E66               	movlw	102
  2984  00195E  1988               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2985  001960  A4D8               	btfss	status,2,c
  2986  001962  EFB5  F00C         	goto	u4891
  2987  001966  EFB7  F00C         	goto	u4890
  2988  00196A                     u4891:
  2989  00196A  EFF7  F00C         	goto	l4099
  2990  00196E                     u4890:
  2991  00196E                     
  2992                           ; BSR set to: 0
  2993                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             c = (
      +                          *fmt)[0];
  2994  00196E  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2995  001972  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2996  001976  CFDE FFF6          	movff	postinc2,tblptrl
  2997  00197A  CFDD FFF7          	movff	postdec2,tblptrh
  2998  00197E                     	if	0	;tblptru may be non-zero
  2999  00197E                     	endif
  3000  00197E                     	if	0	;tblptru may be non-zero
  3001  00197E                     	endif
  3002  00197E  0008               	tblrd		*
  3003  001980  CFF5 F08B          	movff	tablat,vfpfcnvrt@c
  3004  001984                     
  3005                           ; BSR set to: 0
  3006                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             ++*fm
      +                          t;
  3007  001984  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3008  001988  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3009  00198C  2ADE               	incf	postinc2,f,c
  3010  00198E  0E00               	movlw	0
  3011  001990  22DD               	addwfc	postdec2,f,c
  3012  001992                     
  3013                           ; BSR set to: 0
  3014                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             f = (
      +                          long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3015  001992  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3016  001996  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3017  00199A  CFDF F078          	movff	indf2,??_vfpfcnvrt
  3018  00199E  0E04               	movlw	4
  3019  0019A0  26DE               	addwf	postinc2,f,c
  3020  0019A2  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  3021  0019A6  0E00               	movlw	0
  3022  0019A8  22DD               	addwfc	postdec2,f,c
  3023  0019AA  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3024  0019AE  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3025  0019B2  CFDE F084          	movff	postinc2,vfpfcnvrt@f
  3026  0019B6  CFDE F085          	movff	postinc2,vfpfcnvrt@f+1
  3027  0019BA  CFDE F086          	movff	postinc2,vfpfcnvrt@f+2
  3028  0019BE  CFDE F087          	movff	postinc2,vfpfcnvrt@f+3
  3029  0019C2                     l4095:
  3030                           
  3031                           ; BSR set to: 0
  3032                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             retur
      +                          n efgtoa(fp, f, c);
  3033  0019C2  C072  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  3034  0019C6  C073  F02F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3035  0019CA  C084  F030         	movff	vfpfcnvrt@f,efgtoa@f
  3036  0019CE  C085  F031         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3037  0019D2  C086  F032         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3038  0019D6  C087  F033         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3039  0019DA  C08B  F034         	movff	vfpfcnvrt@c,efgtoa@c
  3040  0019DE  EC7A  F003         	call	_efgtoa	;wreg free
  3041  0019E2  C02E  F072         	movff	?_efgtoa,?_vfpfcnvrt
  3042  0019E6  C02F  F073         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3043  0019EA  EFDB  F00D         	goto	l1019
  3044  0019EE                     l4099:
  3045                           
  3046                           ; BSR set to: 0
  3047                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (!strn
      +                          cmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3048  0019EE  0E88               	movlw	low vfpfcnvrt@ct
  3049  0019F0  6E01               	movwf	strncmp@_l^0,c
  3050  0019F2  0E00               	movlw	high vfpfcnvrt@ct
  3051  0019F4  6E02               	movwf	(strncmp@_l+1)^0,c
  3052  0019F6  0EEC               	movlw	low STR_39
  3053  0019F8  6E03               	movwf	strncmp@_r^0,c
  3054  0019FA  0E06               	movlw	high STR_39
  3055  0019FC  6E04               	movwf	(strncmp@_r+1)^0,c
  3056  0019FE  0E00               	movlw	0
  3057  001A00  6E06               	movwf	(strncmp@n+1)^0,c
  3058  001A02  0E02               	movlw	2
  3059  001A04  6E05               	movwf	strncmp@n^0,c
  3060  001A06  EC48  F018         	call	_strncmp	;wreg free
  3061  001A0A  5001               	movf	?_strncmp^0,w,c
  3062  001A0C  1002               	iorwf	(?_strncmp+1)^0,w,c
  3063  001A0E  A4D8               	btfss	status,2,c
  3064  001A10  EF0C  F00D         	goto	u4901
  3065  001A14  EF0E  F00D         	goto	u4900
  3066  001A18                     u4901:
  3067  001A18  EF8A  F00D         	goto	l4115
  3068  001A1C                     u4900:
  3069  001A1C                     
  3070                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             if ((
      +                          0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3071  001A1C  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3072  001A20  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3073  001A24  CFDE F078          	movff	postinc2,??_vfpfcnvrt
  3074  001A28  CFDD F079          	movff	postdec2,??_vfpfcnvrt+1
  3075  001A2C  0E01               	movlw	1
  3076  001A2E  2678               	addwf	??_vfpfcnvrt^0,f,c
  3077  001A30  0E00               	movlw	0
  3078  001A32  2279               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3079  001A34  C078  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3080  001A38  C079  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3081  001A3C                     	if	0	;tblptru may be non-zero
  3082  001A3C                     	endif
  3083  001A3C                     	if	0	;tblptru may be non-zero
  3084  001A3C                     	endif
  3085  001A3C  0008               	tblrd		*
  3086  001A3E  CFF5 F08B          	movff	tablat,vfpfcnvrt@c
  3087  001A42  0EBF               	movlw	191
  3088  001A44  6E78               	movwf	??_vfpfcnvrt^0,c
  3089  001A46  0EFF               	movlw	255
  3090  001A48  6E79               	movwf	(??_vfpfcnvrt+1)^0,c
  3091  001A4A  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3092  001A4E  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3093  001A52  CFDE FFF6          	movff	postinc2,tblptrl
  3094  001A56  CFDD FFF7          	movff	postdec2,tblptrh
  3095  001A5A                     	if	0	;tblptru may be non-zero
  3096  001A5A                     	endif
  3097  001A5A                     	if	0	;tblptru may be non-zero
  3098  001A5A                     	endif
  3099  001A5A  0008               	tblrd		*
  3100  001A5C  50F5               	movf	tablat,w,c
  3101  001A5E  6E7A               	movwf	(??_vfpfcnvrt+2)^0,c
  3102  001A60  6A7B               	clrf	(??_vfpfcnvrt+3)^0,c
  3103  001A62  5078               	movf	??_vfpfcnvrt^0,w,c
  3104  001A64  267A               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3105  001A66  5079               	movf	(??_vfpfcnvrt+1)^0,w,c
  3106  001A68  227B               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3107  001A6A  507B               	movf	(??_vfpfcnvrt+3)^0,w,c
  3108  001A6C  E10A               	bnz	u4910
  3109  001A6E  0E1A               	movlw	26
  3110  001A70  5C7A               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3111  001A72  A0D8               	btfss	status,0,c
  3112  001A74  EF3E  F00D         	goto	u4911
  3113  001A78  EF41  F00D         	goto	u4910
  3114  001A7C                     u4911:
  3115  001A7C  0E01               	movlw	1
  3116  001A7E  EF42  F00D         	goto	u4920
  3117  001A82                     u4910:
  3118  001A82  0E00               	movlw	0
  3119  001A84                     u4920:
  3120  001A84  0100               	movlb	0	; () banked
  3121  001A86  6F82               	movwf	_vfpfcnvrt$754& (0+255),b
  3122  001A88  6B83               	clrf	(_vfpfcnvrt$754+1)& (0+255),b
  3123  001A8A                     
  3124                           ; BSR set to: 0
  3125  001A8A  5182               	movf	_vfpfcnvrt$754& (0+255),w,b
  3126  001A8C  1183               	iorwf	(_vfpfcnvrt$754+1)& (0+255),w,b
  3127  001A8E  B4D8               	btfsc	status,2,c
  3128  001A90  EF4C  F00D         	goto	u4931
  3129  001A94  EF4E  F00D         	goto	u4930
  3130  001A98                     u4931:
  3131  001A98  EF68  F00D         	goto	l4109
  3132  001A9C                     u4930:
  3133  001A9C                     
  3134                           ; BSR set to: 0
  3135                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:                 f
      +                           = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3136  001A9C  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3137  001AA0  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3138  001AA4  CFDF F078          	movff	indf2,??_vfpfcnvrt
  3139  001AA8  0E04               	movlw	4
  3140  001AAA  26DE               	addwf	postinc2,f,c
  3141  001AAC  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  3142  001AB0  0E00               	movlw	0
  3143  001AB2  22DD               	addwfc	postdec2,f,c
  3144  001AB4  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3145  001AB8  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3146  001ABC  CFDE F084          	movff	postinc2,vfpfcnvrt@f
  3147  001AC0  CFDE F085          	movff	postinc2,vfpfcnvrt@f+1
  3148  001AC4  CFDE F086          	movff	postinc2,vfpfcnvrt@f+2
  3149  001AC8  CFDE F087          	movff	postinc2,vfpfcnvrt@f+3
  3150                           
  3151                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             } els
      +                          e {
  3152  001ACC  EF80  F00D         	goto	l1026
  3153  001AD0                     l4109:
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:                 f
      +                           = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3157  001AD0  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3158  001AD4  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3159  001AD8  CFDF F078          	movff	indf2,??_vfpfcnvrt
  3160  001ADC  0E04               	movlw	4
  3161  001ADE  26DE               	addwf	postinc2,f,c
  3162  001AE0  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  3163  001AE4  0E00               	movlw	0
  3164  001AE6  22DD               	addwfc	postdec2,f,c
  3165  001AE8  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3166  001AEC  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3167  001AF0  CFDE F084          	movff	postinc2,vfpfcnvrt@f
  3168  001AF4  CFDE F085          	movff	postinc2,vfpfcnvrt@f+1
  3169  001AF8  CFDE F086          	movff	postinc2,vfpfcnvrt@f+2
  3170  001AFC  CFDE F087          	movff	postinc2,vfpfcnvrt@f+3
  3171  001B00                     l1026:
  3172                           
  3173                           ; BSR set to: 0
  3174                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             *fmt 
      +                          += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3175  001B00  0E02               	movlw	2
  3176  001B02  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3177  001B06  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3178  001B0A  26DE               	addwf	postinc2,f,c
  3179  001B0C  0E00               	movlw	0
  3180  001B0E  22DD               	addwfc	postdec2,f,c
  3181  001B10  EFE1  F00C         	goto	l4095
  3182  001B14                     l4115:
  3183                           
  3184                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if ((*fm
      +                          t)[0] == '%') {
  3185  001B14  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3186  001B18  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3187  001B1C  CFDE FFF6          	movff	postinc2,tblptrl
  3188  001B20  CFDD FFF7          	movff	postdec2,tblptrh
  3189  001B24                     	if	0	;tblptru may be non-zero
  3190  001B24                     	endif
  3191  001B24                     	if	0	;tblptru may be non-zero
  3192  001B24                     	endif
  3193  001B24  0008               	tblrd		*
  3194  001B26  50F5               	movf	tablat,w,c
  3195  001B28  0A25               	xorlw	37
  3196  001B2A  A4D8               	btfss	status,2,c
  3197  001B2C  EF9A  F00D         	goto	u4941
  3198  001B30  EF9C  F00D         	goto	u4940
  3199  001B34                     u4941:
  3200  001B34  EFB3  F00D         	goto	l4125
  3201  001B38                     u4940:
  3202  001B38                     
  3203                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:             ++*f
      +                          mt;
  3204  001B38  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3205  001B3C  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3206  001B40  2ADE               	incf	postinc2,f,c
  3207  001B42  0E00               	movlw	0
  3208  001B44  22DD               	addwfc	postdec2,f,c
  3209  001B46                     
  3210                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:             fput
      +                          c((int)'%', fp);
  3211  001B46  0E00               	movlw	0
  3212  001B48  6E02               	movwf	(fputc@c+1)^0,c
  3213  001B4A  0E25               	movlw	37
  3214  001B4C  6E01               	movwf	fputc@c^0,c
  3215  001B4E  C072  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3216  001B52  C073  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3217  001B56  ECB3  F018         	call	_fputc	;wreg free
  3218  001B5A                     l4121:
  3219                           
  3220                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:             retu
      +                          rn 1;
  3221  001B5A  0E00               	movlw	0
  3222  001B5C  6E73               	movwf	(?_vfpfcnvrt+1)^0,c
  3223  001B5E  0E01               	movlw	1
  3224  001B60  6E72               	movwf	?_vfpfcnvrt^0,c
  3225  001B62  EFDB  F00D         	goto	l1019
  3226  001B66                     l4125:
  3227                           
  3228                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*fmt;
  3229  001B66  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3230  001B6A  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3231  001B6E  2ADE               	incf	postinc2,f,c
  3232  001B70  0E00               	movlw	0
  3233  001B72  22DD               	addwfc	postdec2,f,c
  3234  001B74                     
  3235                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         return 0
      +                          ;
  3236  001B74  0E00               	movlw	0
  3237  001B76  6E73               	movwf	(?_vfpfcnvrt+1)^0,c
  3238  001B78  0E00               	movlw	0
  3239  001B7A  6E72               	movwf	?_vfpfcnvrt^0,c
  3240  001B7C  EFDB  F00D         	goto	l1019
  3241  001B80                     l4131:
  3242                           
  3243                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((int)(
      +                          *fmt)[0], fp);
  3244  001B80  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3245  001B84  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3246  001B88  CFDE FFF6          	movff	postinc2,tblptrl
  3247  001B8C  CFDD FFF7          	movff	postdec2,tblptrh
  3248  001B90                     	if	0	;tblptru may be non-zero
  3249  001B90                     	endif
  3250  001B90                     	if	0	;tblptru may be non-zero
  3251  001B90                     	endif
  3252  001B90  0008               	tblrd		*
  3253  001B92  50F5               	movf	tablat,w,c
  3254  001B94  6E01               	movwf	fputc@c^0,c
  3255  001B96  6A02               	clrf	(fputc@c+1)^0,c
  3256  001B98  C072  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3257  001B9C  C073  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3258  001BA0  ECB3  F018         	call	_fputc	;wreg free
  3259  001BA4                     
  3260                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  3261  001BA4  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3262  001BA8  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3263  001BAC  2ADE               	incf	postinc2,f,c
  3264  001BAE  0E00               	movlw	0
  3265  001BB0  22DD               	addwfc	postdec2,f,c
  3266  001BB2  EFAD  F00D         	goto	l4121
  3267  001BB6                     l1019:
  3268  001BB6  0012               	return		;funcret
  3269  001BB8                     __end_of_vfpfcnvrt:
  3270                           	callstack 0
  3271                           
  3272 ;; *************** function _strncmp *****************
  3273 ;; Defined at:
  3274 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  3277 ;;		 -> vfpfcnvrt@ct(3), 
  3278 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  3279 ;;		 -> STR_41(3), 
  3280 ;;  n               2    4[COMRAM] unsigned int 
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;  r               2    9[COMRAM] PTR const unsigned char 
  3283 ;;		 -> STR_41(3), 
  3284 ;;  l               2    7[COMRAM] PTR const unsigned char 
  3285 ;;		 -> vfpfcnvrt@ct(3), 
  3286 ;; Return value:  Size  Location     Type
  3287 ;;                  2    0[COMRAM] int 
  3288 ;; Registers used:
  3289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/0
  3292 ;;		On exit  : 0/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3295 ;;      Params:         6       0       0       0       0       0       0
  3296 ;;      Locals:         4       0       0       0       0       0       0
  3297 ;;      Temps:          1       0       0       0       0       0       0
  3298 ;;      Totals:        11       0       0       0       0       0       0
  3299 ;;Total ram usage:       11 bytes
  3300 ;; Hardware stack levels used:    1
  3301 ;; This function calls:
  3302 ;;		Nothing
  3303 ;; This function is called by:
  3304 ;;		_vfpfcnvrt
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           	psect	text8
  3309  003090                     __ptext8:
  3310                           	callstack 0
  3311  003090                     _strncmp:
  3312                           	callstack 26
  3313  003090  C001  F008         	movff	strncmp@_l,strncmp@l
  3314  003094  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  3315  003098  C003  F00A         	movff	strncmp@_r,strncmp@r
  3316  00309C  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  3317  0030A0  0605               	decf	strncmp@n^0,f,c
  3318  0030A2  A0D8               	btfss	status,0,c
  3319  0030A4  0606               	decf	(strncmp@n+1)^0,f,c
  3320  0030A6  2805               	incf	strncmp@n^0,w,c
  3321  0030A8  E106               	bnz	u4731
  3322  0030AA  2806               	incf	(strncmp@n+1)^0,w,c
  3323  0030AC  A4D8               	btfss	status,2,c
  3324  0030AE  EF5B  F018         	goto	u4731
  3325  0030B2  EF5D  F018         	goto	u4730
  3326  0030B6                     u4731:
  3327  0030B6  EF6A  F018         	goto	l4009
  3328  0030BA                     u4730:
  3329  0030BA  0E00               	movlw	0
  3330  0030BC  6E02               	movwf	(?_strncmp+1)^0,c
  3331  0030BE  0E00               	movlw	0
  3332  0030C0  6E01               	movwf	?_strncmp^0,c
  3333  0030C2  EFB2  F018         	goto	l1147
  3334  0030C6                     l4007:
  3335  0030C6  4A08               	infsnz	strncmp@l^0,f,c
  3336  0030C8  2A09               	incf	(strncmp@l+1)^0,f,c
  3337  0030CA  4A0A               	infsnz	strncmp@r^0,f,c
  3338  0030CC  2A0B               	incf	(strncmp@r+1)^0,f,c
  3339  0030CE  0605               	decf	strncmp@n^0,f,c
  3340  0030D0  A0D8               	btfss	status,0,c
  3341  0030D2  0606               	decf	(strncmp@n+1)^0,f,c
  3342  0030D4                     l4009:
  3343  0030D4  C008  FFD9         	movff	strncmp@l,fsr2l
  3344  0030D8  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3345  0030DC  50DF               	movf	indf2,w,c
  3346  0030DE  B4D8               	btfsc	status,2,c
  3347  0030E0  EF74  F018         	goto	u4741
  3348  0030E4  EF76  F018         	goto	u4740
  3349  0030E8                     u4741:
  3350  0030E8  EFA1  F018         	goto	l4017
  3351  0030EC                     u4740:
  3352  0030EC  C00A  FFF6         	movff	strncmp@r,tblptrl
  3353  0030F0  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3354  0030F4                     	if	0	;tblptru may be non-zero
  3355  0030F4                     	endif
  3356  0030F4                     	if	0	;tblptru may be non-zero
  3357  0030F4                     	endif
  3358  0030F4  0008               	tblrd		*
  3359  0030F6  50F5               	movf	tablat,w,c
  3360  0030F8  0900               	iorlw	0
  3361  0030FA  B4D8               	btfsc	status,2,c
  3362  0030FC  EF82  F018         	goto	u4751
  3363  003100  EF84  F018         	goto	u4750
  3364  003104                     u4751:
  3365  003104  EFA1  F018         	goto	l4017
  3366  003108                     u4750:
  3367  003108  5005               	movf	strncmp@n^0,w,c
  3368  00310A  1006               	iorwf	(strncmp@n+1)^0,w,c
  3369  00310C  B4D8               	btfsc	status,2,c
  3370  00310E  EF8B  F018         	goto	u4761
  3371  003112  EF8D  F018         	goto	u4760
  3372  003116                     u4761:
  3373  003116  EFA1  F018         	goto	l4017
  3374  00311A                     u4760:
  3375  00311A  C008  FFD9         	movff	strncmp@l,fsr2l
  3376  00311E  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3377  003122  50DF               	movf	indf2,w,c
  3378  003124  6E07               	movwf	??_strncmp^0,c
  3379  003126  C00A  FFF6         	movff	strncmp@r,tblptrl
  3380  00312A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3381  00312E                     	if	0	;tblptru may be non-zero
  3382  00312E                     	endif
  3383  00312E                     	if	0	;tblptru may be non-zero
  3384  00312E                     	endif
  3385  00312E  0008               	tblrd		*
  3386  003130  50F5               	movf	tablat,w,c
  3387  003132  1807               	xorwf	??_strncmp^0,w,c
  3388  003134  B4D8               	btfsc	status,2,c
  3389  003136  EF9F  F018         	goto	u4771
  3390  00313A  EFA1  F018         	goto	u4770
  3391  00313E                     u4771:
  3392  00313E  EF63  F018         	goto	l4007
  3393  003142                     u4770:
  3394  003142                     l4017:
  3395  003142  C008  FFD9         	movff	strncmp@l,fsr2l
  3396  003146  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3397  00314A  50DF               	movf	indf2,w,c
  3398  00314C  6E07               	movwf	??_strncmp^0,c
  3399  00314E  C00A  FFF6         	movff	strncmp@r,tblptrl
  3400  003152  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3401  003156                     	if	0	;tblptru may be non-zero
  3402  003156                     	endif
  3403  003156                     	if	0	;tblptru may be non-zero
  3404  003156                     	endif
  3405  003156  0008               	tblrd		*
  3406  003158  50F5               	movf	tablat,w,c
  3407  00315A  5C07               	subwf	??_strncmp^0,w,c
  3408  00315C  6E01               	movwf	?_strncmp^0,c
  3409  00315E  6A02               	clrf	(?_strncmp+1)^0,c
  3410  003160  A0D8               	btfss	status,0,c
  3411  003162  0602               	decf	(?_strncmp+1)^0,f,c
  3412  003164                     l1147:
  3413  003164  0012               	return		;funcret
  3414  003166                     __end_of_strncmp:
  3415                           	callstack 0
  3416                           
  3417 ;; *************** function _efgtoa *****************
  3418 ;; Defined at:
  3419 ;;		line 319 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3420 ;; Parameters:    Size  Location     Type
  3421 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  3422 ;;		 -> sprintf@f(6), 
  3423 ;;  f               4   47[COMRAM] PTR struct _IO_FILE
  3424 ;;  c               1   51[COMRAM] unsigned char 
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;  u               4  109[COMRAM] unsigned char 
  3427 ;;  g               4  101[COMRAM] unsigned char 
  3428 ;;  l               4   95[COMRAM] unsigned char 
  3429 ;;  h               4   91[COMRAM] unsigned char 
  3430 ;;  ou              4   57[COMRAM] unsigned char 
  3431 ;;  n               2  107[COMRAM] int 
  3432 ;;  e               2  105[COMRAM] int 
  3433 ;;  i               2   99[COMRAM] int 
  3434 ;;  w               2   88[COMRAM] int 
  3435 ;;  p               2   85[COMRAM] int 
  3436 ;;  sign            2   83[COMRAM] int 
  3437 ;;  d               2   81[COMRAM] int 
  3438 ;;  ne              2   79[COMRAM] int 
  3439 ;;  m               2   77[COMRAM] int 
  3440 ;;  pp              2   75[COMRAM] int 
  3441 ;;  t               2   73[COMRAM] int 
  3442 ;;  mode            1   90[COMRAM] unsigned char 
  3443 ;;  nmode           1   87[COMRAM] unsigned char 
  3444 ;; Return value:  Size  Location     Type
  3445 ;;                  2   45[COMRAM] int 
  3446 ;; Registers used:
  3447 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3453 ;;      Params:         7       0       0       0       0       0       0
  3454 ;;      Locals:        56       0       0       0       0       0       0
  3455 ;;      Temps:          5       0       0       0       0       0       0
  3456 ;;      Totals:        68       0       0       0       0       0       0
  3457 ;;Total ram usage:       68 bytes
  3458 ;; Hardware stack levels used:    1
  3459 ;; Hardware stack levels required when called:    4
  3460 ;; This function calls:
  3461 ;;		___awdiv
  3462 ;;		___awmod
  3463 ;;		___fladd
  3464 ;;		___fldiv
  3465 ;;		___fleq
  3466 ;;		___flge
  3467 ;;		___flmul
  3468 ;;		___flneg
  3469 ;;		___flsub
  3470 ;;		___fltol
  3471 ;;		___fpclassifyf
  3472 ;;		_floorf
  3473 ;;		_isupper
  3474 ;;		_pad
  3475 ;;		_strcpy
  3476 ;;		_tolower
  3477 ;; This function is called by:
  3478 ;;		_vfpfcnvrt
  3479 ;; This function uses a non-reentrant model
  3480 ;;
  3481                           
  3482                           	psect	text9
  3483  0006F4                     __ptext9:
  3484                           	callstack 0
  3485  0006F4                     _efgtoa:
  3486                           	callstack 22
  3487  0006F4                     
  3488                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int efgtoa
      +                          (FILE *fp, long double f, char c);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common
      +                          \doprnt.c: 320: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 321: 
      +                              char mode, nmode;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 3
      +                          22:     int d, e, i, m, n, ne, p, pp, sign, t, w;;D:\Programs\Microship\xc8\v2.20\pic\so
      +                          urces\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;;D:\Programs\Microship\xc
      +                          8\v2.20\pic\sources\c99\common\doprnt.c: 326:     sign = 0;
  3489  0006F4  0E00               	movlw	0
  3490  0006F6  6E55               	movwf	(efgtoa@sign+1)^0,c
  3491  0006F8  0E00               	movlw	0
  3492  0006FA  6E54               	movwf	efgtoa@sign^0,c
  3493  0006FC                     
  3494                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  3495  0006FC  C030  F066         	movff	efgtoa@f,efgtoa@g
  3496  000700  C031  F067         	movff	efgtoa@f+1,efgtoa@g+1
  3497  000704  C032  F068         	movff	efgtoa@f+2,efgtoa@g+2
  3498  000708  C033  F069         	movff	efgtoa@f+3,efgtoa@g+3
  3499  00070C                     
  3500                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 0.0) 
      +                          {
  3501  00070C  BE69               	btfsc	(efgtoa@g+3)^0,7,c
  3502  00070E  EF8D  F003         	goto	u4140
  3503  000712  EF8B  F003         	goto	u4141
  3504  000716                     u4141:
  3505  000716  EFA3  F003         	goto	l3671
  3506  00071A                     u4140:
  3507  00071A                     
  3508                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign = 1;
  3509  00071A  0E00               	movlw	0
  3510  00071C  6E55               	movwf	(efgtoa@sign+1)^0,c
  3511  00071E  0E01               	movlw	1
  3512  000720  6E54               	movwf	efgtoa@sign^0,c
  3513  000722                     
  3514                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = -g;
  3515  000722  C066  F001         	movff	efgtoa@g,___flneg@f1
  3516  000726  C067  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3517  00072A  C068  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3518  00072E  C069  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3519  000732  ECF5  F01C         	call	___flneg	;wreg free
  3520  000736  C001  F066         	movff	?___flneg,efgtoa@g
  3521  00073A  C002  F067         	movff	?___flneg+1,efgtoa@g+1
  3522  00073E  C003  F068         	movff	?___flneg+2,efgtoa@g+2
  3523  000742  C004  F069         	movff	?___flneg+3,efgtoa@g+3
  3524  000746                     l3671:
  3525                           
  3526                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  3527  000746  0E00               	movlw	0
  3528  000748  6E6D               	movwf	(efgtoa@n+1)^0,c
  3529  00074A  0E00               	movlw	0
  3530  00074C  6E6C               	movwf	efgtoa@n^0,c
  3531  00074E                     
  3532                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = width;
  3533  00074E  C0F0  F059         	movff	_width,efgtoa@w
  3534  000752  C0F1  F05A         	movff	_width+1,efgtoa@w+1
  3535  000756                     
  3536                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign || (
      +                          flags & (1 << 2))) {
  3537  000756  5054               	movf	efgtoa@sign^0,w,c
  3538  000758  1055               	iorwf	(efgtoa@sign+1)^0,w,c
  3539  00075A  A4D8               	btfss	status,2,c
  3540  00075C  EFB2  F003         	goto	u4151
  3541  000760  EFB4  F003         	goto	u4150
  3542  000764                     u4151:
  3543  000764  EFBC  F003         	goto	l3679
  3544  000768                     u4150:
  3545  000768  0100               	movlb	0	; () banked
  3546  00076A  A5F4               	btfss	_flags& (0+255),2,b
  3547  00076C  EFBA  F003         	goto	u4161
  3548  000770  EFBC  F003         	goto	u4160
  3549  000774                     u4161:
  3550  000774  EFD6  F003         	goto	l3691
  3551  000778                     u4160:
  3552  000778                     l3679:
  3553                           
  3554                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf[n] =
      +                           sign ? '-' : '+';
  3555  000778  5054               	movf	efgtoa@sign^0,w,c
  3556  00077A  1055               	iorwf	(efgtoa@sign+1)^0,w,c
  3557  00077C  A4D8               	btfss	status,2,c
  3558  00077E  EFC3  F003         	goto	u4171
  3559  000782  EFC5  F003         	goto	u4170
  3560  000786                     u4171:
  3561  000786  EFCB  F003         	goto	l3683
  3562  00078A                     u4170:
  3563  00078A  0E00               	movlw	0
  3564  00078C  6E3F               	movwf	(_efgtoa$724+1)^0,c
  3565  00078E  0E2B               	movlw	43
  3566  000790  6E3E               	movwf	_efgtoa$724^0,c
  3567  000792  EFCF  F003         	goto	l3685
  3568  000796                     l3683:
  3569  000796  0E00               	movlw	0
  3570  000798  6E3F               	movwf	(_efgtoa$724+1)^0,c
  3571  00079A  0E2D               	movlw	45
  3572  00079C  6E3E               	movwf	_efgtoa$724^0,c
  3573  00079E                     l3685:
  3574  00079E  C03E  F100         	movff	_efgtoa$724,_dbuf
  3575  0007A2                     
  3576                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  3577  0007A2  4A6C               	infsnz	efgtoa@n^0,f,c
  3578  0007A4  2A6D               	incf	(efgtoa@n+1)^0,f,c
  3579  0007A6                     
  3580                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  3581  0007A6  0659               	decf	efgtoa@w^0,f,c
  3582  0007A8  A0D8               	btfss	status,0,c
  3583  0007AA  065A               	decf	(efgtoa@w+1)^0,f,c
  3584  0007AC                     l3691:
  3585                           
  3586                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if ((0 ? 
      +                          isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3587  0007AC  C066  F001         	movff	efgtoa@g,___fpclassifyf@x
  3588  0007B0  C067  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3589  0007B4  C068  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3590  0007B8  C069  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3591  0007BC  ECC9  F017         	call	___fpclassifyf	;wreg free
  3592  0007C0  0401               	decf	?___fpclassifyf^0,w,c
  3593  0007C2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3594  0007C4  A4D8               	btfss	status,2,c
  3595  0007C6  EFE7  F003         	goto	u4181
  3596  0007CA  EFE9  F003         	goto	u4180
  3597  0007CE                     u4181:
  3598  0007CE  EF3E  F004         	goto	l3709
  3599  0007D2                     u4180:
  3600  0007D2  0EBF               	movlw	191
  3601  0007D4  6E35               	movwf	??_efgtoa^0,c
  3602  0007D6  0EFF               	movlw	255
  3603  0007D8  6E36               	movwf	(??_efgtoa+1)^0,c
  3604  0007DA  5034               	movf	efgtoa@c^0,w,c
  3605  0007DC  6E37               	movwf	(??_efgtoa+2)^0,c
  3606  0007DE  6A38               	clrf	(??_efgtoa+3)^0,c
  3607  0007E0  5035               	movf	??_efgtoa^0,w,c
  3608  0007E2  2637               	addwf	(??_efgtoa+2)^0,f,c
  3609  0007E4  5036               	movf	(??_efgtoa+1)^0,w,c
  3610  0007E6  2238               	addwfc	(??_efgtoa+3)^0,f,c
  3611  0007E8  5038               	movf	(??_efgtoa+3)^0,w,c
  3612  0007EA  E10A               	bnz	u4190
  3613  0007EC  0E1A               	movlw	26
  3614  0007EE  5C37               	subwf	(??_efgtoa+2)^0,w,c
  3615  0007F0  A0D8               	btfss	status,0,c
  3616  0007F2  EFFD  F003         	goto	u4191
  3617  0007F6  EF00  F004         	goto	u4190
  3618  0007FA                     u4191:
  3619  0007FA  0E01               	movlw	1
  3620  0007FC  EF01  F004         	goto	u4200
  3621  000800                     u4190:
  3622  000800  0E00               	movlw	0
  3623  000802                     u4200:
  3624  000802  6E40               	movwf	_efgtoa$725^0,c
  3625  000804  6A41               	clrf	(_efgtoa$725+1)^0,c
  3626  000806  5040               	movf	_efgtoa$725^0,w,c
  3627  000808  1041               	iorwf	(_efgtoa$725+1)^0,w,c
  3628  00080A  B4D8               	btfsc	status,2,c
  3629  00080C  EF0A  F004         	goto	u4211
  3630  000810  EF0C  F004         	goto	u4210
  3631  000814                     u4211:
  3632  000814  EF1A  F004         	goto	l3701
  3633  000818                     u4210:
  3634  000818                     
  3635                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             strcp
      +                          y(&dbuf[n], "INF");
  3636  000818  0E00               	movlw	low _dbuf
  3637  00081A  246C               	addwf	efgtoa@n^0,w,c
  3638  00081C  6E01               	movwf	strcpy@dest^0,c
  3639  00081E  0E01               	movlw	high _dbuf
  3640  000820  206D               	addwfc	(efgtoa@n+1)^0,w,c
  3641  000822  6E02               	movwf	(strcpy@dest+1)^0,c
  3642  000824  0EDC               	movlw	low STR_31
  3643  000826  6E03               	movwf	strcpy@src^0,c
  3644  000828  0E06               	movlw	high STR_31
  3645  00082A  6E04               	movwf	(strcpy@src+1)^0,c
  3646  00082C  EC14  F01C         	call	_strcpy	;wreg free
  3647                           
  3648                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } else {
  3649  000830  EF26  F004         	goto	l3703
  3650  000834                     l3701:
  3651                           
  3652                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             strcp
      +                          y(&dbuf[n], "inf");
  3653  000834  0E00               	movlw	low _dbuf
  3654  000836  246C               	addwf	efgtoa@n^0,w,c
  3655  000838  6E01               	movwf	strcpy@dest^0,c
  3656  00083A  0E01               	movlw	high _dbuf
  3657  00083C  206D               	addwfc	(efgtoa@n+1)^0,w,c
  3658  00083E  6E02               	movwf	(strcpy@dest+1)^0,c
  3659  000840  0EE4               	movlw	low STR_32
  3660  000842  6E03               	movwf	strcpy@src^0,c
  3661  000844  0E06               	movlw	high STR_32
  3662  000846  6E04               	movwf	(strcpy@src+1)^0,c
  3663  000848  EC14  F01C         	call	_strcpy	;wreg free
  3664  00084C                     l3703:
  3665                           
  3666                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -= ((si
      +                          zeof("inf")/sizeof("inf"[0]))-1);
  3667  00084C  0EFD               	movlw	253
  3668  00084E  2659               	addwf	efgtoa@w^0,f,c
  3669  000850  0EFF               	movlw	255
  3670  000852  225A               	addwfc	(efgtoa@w+1)^0,f,c
  3671  000854                     l3705:
  3672                           
  3673                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         return pa
      +                          d(fp, &dbuf[0], w);
  3674  000854  C02E  F011         	movff	efgtoa@fp,pad@fp
  3675  000858  C02F  F012         	movff	efgtoa@fp+1,pad@fp+1
  3676  00085C  0E00               	movlw	low _dbuf
  3677  00085E  6E13               	movwf	pad@buf^0,c
  3678  000860  0E01               	movlw	high _dbuf
  3679  000862  6E14               	movwf	(pad@buf+1)^0,c
  3680  000864  C059  F015         	movff	efgtoa@w,pad@p
  3681  000868  C05A  F016         	movff	efgtoa@w+1,pad@p+1
  3682  00086C  EC18  F019         	call	_pad	;wreg free
  3683  000870  C011  F02E         	movff	?_pad,?_efgtoa
  3684  000874  C012  F02F         	movff	?_pad+1,?_efgtoa+1
  3685  000878  EF46  F009         	goto	l929
  3686  00087C                     l3709:
  3687                           
  3688                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if ((0 ? 
      +                          isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3689  00087C  C066  F001         	movff	efgtoa@g,___fpclassifyf@x
  3690  000880  C067  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3691  000884  C068  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3692  000888  C069  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3693  00088C  ECC9  F017         	call	___fpclassifyf	;wreg free
  3694  000890  5001               	movf	?___fpclassifyf^0,w,c
  3695  000892  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3696  000894  A4D8               	btfss	status,2,c
  3697  000896  EF4F  F004         	goto	u4221
  3698  00089A  EF51  F004         	goto	u4220
  3699  00089E                     u4221:
  3700  00089E  EF90  F004         	goto	l3727
  3701  0008A2                     u4220:
  3702  0008A2  0EBF               	movlw	191
  3703  0008A4  6E35               	movwf	??_efgtoa^0,c
  3704  0008A6  0EFF               	movlw	255
  3705  0008A8  6E36               	movwf	(??_efgtoa+1)^0,c
  3706  0008AA  5034               	movf	efgtoa@c^0,w,c
  3707  0008AC  6E37               	movwf	(??_efgtoa+2)^0,c
  3708  0008AE  6A38               	clrf	(??_efgtoa+3)^0,c
  3709  0008B0  5035               	movf	??_efgtoa^0,w,c
  3710  0008B2  2637               	addwf	(??_efgtoa+2)^0,f,c
  3711  0008B4  5036               	movf	(??_efgtoa+1)^0,w,c
  3712  0008B6  2238               	addwfc	(??_efgtoa+3)^0,f,c
  3713  0008B8  5038               	movf	(??_efgtoa+3)^0,w,c
  3714  0008BA  E10A               	bnz	u4230
  3715  0008BC  0E1A               	movlw	26
  3716  0008BE  5C37               	subwf	(??_efgtoa+2)^0,w,c
  3717  0008C0  A0D8               	btfss	status,0,c
  3718  0008C2  EF65  F004         	goto	u4231
  3719  0008C6  EF68  F004         	goto	u4230
  3720  0008CA                     u4231:
  3721  0008CA  0E01               	movlw	1
  3722  0008CC  EF69  F004         	goto	u4240
  3723  0008D0                     u4230:
  3724  0008D0  0E00               	movlw	0
  3725  0008D2                     u4240:
  3726  0008D2  6E42               	movwf	_efgtoa$730^0,c
  3727  0008D4  6A43               	clrf	(_efgtoa$730+1)^0,c
  3728  0008D6  5042               	movf	_efgtoa$730^0,w,c
  3729  0008D8  1043               	iorwf	(_efgtoa$730+1)^0,w,c
  3730  0008DA  B4D8               	btfsc	status,2,c
  3731  0008DC  EF72  F004         	goto	u4251
  3732  0008E0  EF74  F004         	goto	u4250
  3733  0008E4                     u4251:
  3734  0008E4  EF82  F004         	goto	l3719
  3735  0008E8                     u4250:
  3736  0008E8                     
  3737                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             strcp
      +                          y(&dbuf[n], "NAN");
  3738  0008E8  0E00               	movlw	low _dbuf
  3739  0008EA  246C               	addwf	efgtoa@n^0,w,c
  3740  0008EC  6E01               	movwf	strcpy@dest^0,c
  3741  0008EE  0E01               	movlw	high _dbuf
  3742  0008F0  206D               	addwfc	(efgtoa@n+1)^0,w,c
  3743  0008F2  6E02               	movwf	(strcpy@dest+1)^0,c
  3744  0008F4  0EE0               	movlw	low STR_35
  3745  0008F6  6E03               	movwf	strcpy@src^0,c
  3746  0008F8  0E06               	movlw	high STR_35
  3747  0008FA  6E04               	movwf	(strcpy@src+1)^0,c
  3748  0008FC  EC14  F01C         	call	_strcpy	;wreg free
  3749                           
  3750                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } else {
  3751  000900  EF26  F004         	goto	l3703
  3752  000904                     l3719:
  3753                           
  3754                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             strcp
      +                          y(&dbuf[n], "nan");
  3755  000904  0E00               	movlw	low _dbuf
  3756  000906  246C               	addwf	efgtoa@n^0,w,c
  3757  000908  6E01               	movwf	strcpy@dest^0,c
  3758  00090A  0E01               	movlw	high _dbuf
  3759  00090C  206D               	addwfc	(efgtoa@n+1)^0,w,c
  3760  00090E  6E02               	movwf	(strcpy@dest+1)^0,c
  3761  000910  0EE8               	movlw	low STR_36
  3762  000912  6E03               	movwf	strcpy@src^0,c
  3763  000914  0E06               	movlw	high STR_36
  3764  000916  6E04               	movwf	(strcpy@src+1)^0,c
  3765  000918  EC14  F01C         	call	_strcpy	;wreg free
  3766  00091C  EF26  F004         	goto	l3703
  3767  000920                     l3727:
  3768                           
  3769                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  3770  000920  0E00               	movlw	0
  3771  000922  6E6E               	movwf	efgtoa@u^0,c
  3772  000924  0E00               	movlw	0
  3773  000926  6E6F               	movwf	(efgtoa@u+1)^0,c
  3774  000928  0E80               	movlw	128
  3775  00092A  6E70               	movwf	(efgtoa@u+2)^0,c
  3776  00092C  0E3F               	movlw	63
  3777  00092E  6E71               	movwf	(efgtoa@u+3)^0,c
  3778                           
  3779                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  3780  000930  0E00               	movlw	0
  3781  000932  6E6B               	movwf	(efgtoa@e+1)^0,c
  3782  000934  0E00               	movlw	0
  3783  000936  6E6A               	movwf	efgtoa@e^0,c
  3784  000938                     
  3785                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g == 0.
      +                          0)) {
  3786  000938  C066  F001         	movff	efgtoa@g,___fleq@ff1
  3787  00093C  C067  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3788  000940  C068  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3789  000944  C069  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3790  000948  0E00               	movlw	0
  3791  00094A  6E05               	movwf	___fleq@ff2^0,c
  3792  00094C  0E00               	movlw	0
  3793  00094E  6E06               	movwf	(___fleq@ff2+1)^0,c
  3794  000950  0E00               	movlw	0
  3795  000952  6E07               	movwf	(___fleq@ff2+2)^0,c
  3796  000954  0E00               	movlw	0
  3797  000956  6E08               	movwf	(___fleq@ff2+3)^0,c
  3798  000958  EC91  F01A         	call	___fleq	;wreg free
  3799  00095C  B0D8               	btfsc	status,0,c
  3800  00095E  EFB3  F004         	goto	u4261
  3801  000962  EFB5  F004         	goto	u4260
  3802  000966                     u4261:
  3803  000966  EF36  F005         	goto	l3745
  3804  00096A                     u4260:
  3805  00096A  EFD3  F004         	goto	l3737
  3806  00096E                     l3733:
  3807                           
  3808                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             u = u
      +                          *10.0;
  3809  00096E  C06E  F001         	movff	efgtoa@u,___flmul@b
  3810  000972  C06F  F002         	movff	efgtoa@u+1,___flmul@b+1
  3811  000976  C070  F003         	movff	efgtoa@u+2,___flmul@b+2
  3812  00097A  C071  F004         	movff	efgtoa@u+3,___flmul@b+3
  3813  00097E  0E00               	movlw	0
  3814  000980  6E05               	movwf	___flmul@a^0,c
  3815  000982  0E00               	movlw	0
  3816  000984  6E06               	movwf	(___flmul@a+1)^0,c
  3817  000986  0E20               	movlw	32
  3818  000988  6E07               	movwf	(___flmul@a+2)^0,c
  3819  00098A  0E41               	movlw	65
  3820  00098C  6E08               	movwf	(___flmul@a+3)^0,c
  3821  00098E  ECDC  F00D         	call	___flmul	;wreg free
  3822  000992  C001  F06E         	movff	?___flmul,efgtoa@u
  3823  000996  C002  F06F         	movff	?___flmul+1,efgtoa@u+1
  3824  00099A  C003  F070         	movff	?___flmul+2,efgtoa@u+2
  3825  00099E  C004  F071         	movff	?___flmul+3,efgtoa@u+3
  3826  0009A2                     
  3827                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             ++e;
  3828  0009A2  4A6A               	infsnz	efgtoa@e^0,f,c
  3829  0009A4  2A6B               	incf	(efgtoa@e+1)^0,f,c
  3830  0009A6                     l3737:
  3831                           
  3832                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         while (!(
      +                          g < (u*10.0))) {
  3833  0009A6  C066  F01A         	movff	efgtoa@g,___flge@ff1
  3834  0009AA  C067  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  3835  0009AE  C068  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  3836  0009B2  C069  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  3837  0009B6  0E00               	movlw	0
  3838  0009B8  6E05               	movwf	___flmul@a^0,c
  3839  0009BA  0E00               	movlw	0
  3840  0009BC  6E06               	movwf	(___flmul@a+1)^0,c
  3841  0009BE  0E20               	movlw	32
  3842  0009C0  6E07               	movwf	(___flmul@a+2)^0,c
  3843  0009C2  0E41               	movlw	65
  3844  0009C4  6E08               	movwf	(___flmul@a+3)^0,c
  3845  0009C6  C06E  F001         	movff	efgtoa@u,___flmul@b
  3846  0009CA  C06F  F002         	movff	efgtoa@u+1,___flmul@b+1
  3847  0009CE  C070  F003         	movff	efgtoa@u+2,___flmul@b+2
  3848  0009D2  C071  F004         	movff	efgtoa@u+3,___flmul@b+3
  3849  0009D6  ECDC  F00D         	call	___flmul	;wreg free
  3850  0009DA  C001  F01E         	movff	?___flmul,___flge@ff2
  3851  0009DE  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  3852  0009E2  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  3853  0009E6  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  3854  0009EA  EC47  F017         	call	___flge	;wreg free
  3855  0009EE  B0D8               	btfsc	status,0,c
  3856  0009F0  EFFC  F004         	goto	u4271
  3857  0009F4  EFFE  F004         	goto	u4270
  3858  0009F8                     u4271:
  3859  0009F8  EFB7  F004         	goto	l3733
  3860  0009FC                     u4270:
  3861  0009FC  EF1D  F005         	goto	l3743
  3862  000A00                     l3739:
  3863                           
  3864                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             u = u
      +                          /10.0;
  3865  000A00  C06E  F001         	movff	efgtoa@u,___fldiv@b
  3866  000A04  C06F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3867  000A08  C070  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3868  000A0C  C071  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3869  000A10  0E00               	movlw	0
  3870  000A12  6E05               	movwf	___fldiv@a^0,c
  3871  000A14  0E00               	movlw	0
  3872  000A16  6E06               	movwf	(___fldiv@a+1)^0,c
  3873  000A18  0E20               	movlw	32
  3874  000A1A  6E07               	movwf	(___fldiv@a+2)^0,c
  3875  000A1C  0E41               	movlw	65
  3876  000A1E  6E08               	movwf	(___fldiv@a+3)^0,c
  3877  000A20  ECF1  F00F         	call	___fldiv	;wreg free
  3878  000A24  C001  F06E         	movff	?___fldiv,efgtoa@u
  3879  000A28  C002  F06F         	movff	?___fldiv+1,efgtoa@u+1
  3880  000A2C  C003  F070         	movff	?___fldiv+2,efgtoa@u+2
  3881  000A30  C004  F071         	movff	?___fldiv+3,efgtoa@u+3
  3882  000A34                     
  3883                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             --e;
  3884  000A34  066A               	decf	efgtoa@e^0,f,c
  3885  000A36  A0D8               	btfss	status,0,c
  3886  000A38  066B               	decf	(efgtoa@e+1)^0,f,c
  3887  000A3A                     l3743:
  3888                           
  3889                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         while (g 
      +                          < u) {
  3890  000A3A  C066  F01A         	movff	efgtoa@g,___flge@ff1
  3891  000A3E  C067  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  3892  000A42  C068  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  3893  000A46  C069  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  3894  000A4A  C06E  F01E         	movff	efgtoa@u,___flge@ff2
  3895  000A4E  C06F  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  3896  000A52  C070  F020         	movff	efgtoa@u+2,___flge@ff2+2
  3897  000A56  C071  F021         	movff	efgtoa@u+3,___flge@ff2+3
  3898  000A5A  EC47  F017         	call	___flge	;wreg free
  3899  000A5E  A0D8               	btfss	status,0,c
  3900  000A60  EF34  F005         	goto	u4281
  3901  000A64  EF36  F005         	goto	u4280
  3902  000A68                     u4281:
  3903  000A68  EF00  F005         	goto	l3739
  3904  000A6C                     u4280:
  3905  000A6C                     l3745:
  3906                           
  3907                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = tolowe
      +                          r((int)c);
  3908  000A6C  C034  F007         	movff	efgtoa@c,tolower@c
  3909  000A70  6A08               	clrf	(tolower@c+1)^0,c
  3910  000A72  ECB6  F01B         	call	_tolower	;wreg free
  3911  000A76  5007               	movf	?_tolower^0,w,c
  3912  000A78  6E5B               	movwf	efgtoa@mode^0,c
  3913  000A7A                     
  3914                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = mode;
  3915  000A7A  C05B  F058         	movff	efgtoa@mode,efgtoa@nmode
  3916  000A7E                     
  3917                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode == '
      +                          g') {
  3918  000A7E  0E67               	movlw	103
  3919  000A80  185B               	xorwf	efgtoa@mode^0,w,c
  3920  000A82  A4D8               	btfss	status,2,c
  3921  000A84  EF46  F005         	goto	u4291
  3922  000A88  EF48  F005         	goto	u4290
  3923  000A8C                     u4291:
  3924  000A8C  EF6F  F005         	goto	l3759
  3925  000A90                     u4290:
  3926  000A90                     
  3927                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec == 0) 
      +                          {
  3928  000A90  0100               	movlb	0	; () banked
  3929  000A92  51F2               	movf	_prec& (0+255),w,b
  3930  000A94  11F3               	iorwf	(_prec+1)& (0+255),w,b
  3931  000A96  A4D8               	btfss	status,2,c
  3932  000A98  EF50  F005         	goto	u4301
  3933  000A9C  EF52  F005         	goto	u4300
  3934  000AA0                     u4301:
  3935  000AA0  EF56  F005         	goto	l3755
  3936  000AA4                     u4300:
  3937  000AA4                     
  3938                           ; BSR set to: 0
  3939                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  3940  000AA4  0E00               	movlw	0
  3941  000AA6  6FF3               	movwf	(_prec+1)& (0+255),b
  3942  000AA8  0E01               	movlw	1
  3943  000AAA  6FF2               	movwf	_prec& (0+255),b
  3944  000AAC                     l3755:
  3945                           
  3946                           ; BSR set to: 0
  3947                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = (0 < 
      +                          prec) ? prec : 6;
  3948  000AAC  BFF3               	btfsc	(_prec+1)& (0+255),7,b
  3949  000AAE  EF63  F005         	goto	u4310
  3950  000AB2  51F3               	movf	(_prec+1)& (0+255),w,b
  3951  000AB4  E106               	bnz	u4311
  3952  000AB6  05F2               	decf	_prec& (0+255),w,b
  3953  000AB8  B0D8               	btfsc	status,0,c
  3954  000ABA  EF61  F005         	goto	u4311
  3955  000ABE  EF63  F005         	goto	u4310
  3956  000AC2                     u4311:
  3957  000AC2  EF69  F005         	goto	l947
  3958  000AC6                     u4310:
  3959  000AC6                     l3757:
  3960                           
  3961                           ; BSR set to: 0
  3962  000AC6  0E00               	movlw	0
  3963  000AC8  6E57               	movwf	(efgtoa@p+1)^0,c
  3964  000ACA  0E06               	movlw	6
  3965  000ACC  6E56               	movwf	efgtoa@p^0,c
  3966  000ACE  EF79  F005         	goto	l3765
  3967  000AD2                     l947:
  3968                           
  3969                           ; BSR set to: 0
  3970  000AD2  C0F2  F056         	movff	_prec,efgtoa@p
  3971  000AD6  C0F3  F057         	movff	_prec+1,efgtoa@p+1
  3972  000ADA  EF79  F005         	goto	l3765
  3973  000ADE                     l3759:
  3974                           
  3975                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = (prec
      +                           < 0) ? 6 : prec;
  3976  000ADE  0100               	movlb	0	; () banked
  3977  000AE0  BFF3               	btfsc	(_prec+1)& (0+255),7,b
  3978  000AE2  EF75  F005         	goto	u4321
  3979  000AE6  EF77  F005         	goto	u4320
  3980  000AEA                     u4321:
  3981  000AEA  EF63  F005         	goto	l3757
  3982  000AEE                     u4320:
  3983  000AEE  EF69  F005         	goto	l947
  3984  000AF2                     l3765:
  3985                           
  3986                           ; BSR set to: 0
  3987                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode == '
      +                          g') {
  3988  000AF2  0E67               	movlw	103
  3989  000AF4  185B               	xorwf	efgtoa@mode^0,w,c
  3990  000AF6  A4D8               	btfss	status,2,c
  3991  000AF8  EF80  F005         	goto	u4331
  3992  000AFC  EF82  F005         	goto	u4330
  3993  000B00                     u4331:
  3994  000B00  EFB1  F005         	goto	l3775
  3995  000B04                     u4330:
  3996  000B04                     
  3997                           ; BSR set to: 0
  3998                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (!(e <
      +                           -4) && !((p - 1) < e)) {
  3999  000B04  AE6B               	btfss	(efgtoa@e+1)^0,7,c
  4000  000B06  EF90  F005         	goto	u4340
  4001  000B0A  0EFC               	movlw	252
  4002  000B0C  5C6A               	subwf	efgtoa@e^0,w,c
  4003  000B0E  0EFF               	movlw	255
  4004  000B10  586B               	subwfb	(efgtoa@e+1)^0,w,c
  4005  000B12  A0D8               	btfss	status,0,c
  4006  000B14  EF8E  F005         	goto	u4341
  4007  000B18  EF90  F005         	goto	u4340
  4008  000B1C                     u4341:
  4009  000B1C  EFAF  F005         	goto	l3773
  4010  000B20                     u4340:
  4011  000B20                     
  4012                           ; BSR set to: 0
  4013  000B20  0EFF               	movlw	255
  4014  000B22  6E35               	movwf	??_efgtoa^0,c
  4015  000B24  0EFF               	movlw	255
  4016  000B26  6E36               	movwf	(??_efgtoa+1)^0,c
  4017  000B28  C056  F037         	movff	efgtoa@p,??_efgtoa+2
  4018  000B2C  C057  F038         	movff	efgtoa@p+1,??_efgtoa+3
  4019  000B30  5035               	movf	??_efgtoa^0,w,c
  4020  000B32  2637               	addwf	(??_efgtoa+2)^0,f,c
  4021  000B34  5036               	movf	(??_efgtoa+1)^0,w,c
  4022  000B36  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4023  000B38  506A               	movf	efgtoa@e^0,w,c
  4024  000B3A  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4025  000B3C  5038               	movf	(??_efgtoa+3)^0,w,c
  4026  000B3E  0A80               	xorlw	128
  4027  000B40  6E39               	movwf	(??_efgtoa+4)^0,c
  4028  000B42  506B               	movf	(efgtoa@e+1)^0,w,c
  4029  000B44  0A80               	xorlw	128
  4030  000B46  5839               	subwfb	(??_efgtoa+4)^0,w,c
  4031  000B48  A0D8               	btfss	status,0,c
  4032  000B4A  EFA9  F005         	goto	u4351
  4033  000B4E  EFAB  F005         	goto	u4350
  4034  000B52                     u4351:
  4035  000B52  EFAF  F005         	goto	l3773
  4036  000B56                     u4350:
  4037  000B56                     
  4038                           ; BSR set to: 0
  4039                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             nmode
      +                           = 'f';
  4040  000B56  0E66               	movlw	102
  4041  000B58  6E58               	movwf	efgtoa@nmode^0,c
  4042                           
  4043                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } else {
  4044  000B5A  EFB1  F005         	goto	l3775
  4045  000B5E                     l3773:
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             nmode
      +                           = 'e';
  4049  000B5E  0E65               	movlw	101
  4050  000B60  6E58               	movwf	efgtoa@nmode^0,c
  4051  000B62                     l3775:
  4052                           
  4053                           ; BSR set to: 0
  4054                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  4055  000B62  C056  F04E         	movff	efgtoa@p,efgtoa@m
  4056  000B66  C057  F04F         	movff	efgtoa@p+1,efgtoa@m+1
  4057  000B6A                     
  4058                           ; BSR set to: 0
  4059                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mode ==
      +                           'g') || ((nmode == 'f') && (e < 0))) {
  4060  000B6A  0E67               	movlw	103
  4061  000B6C  185B               	xorwf	efgtoa@mode^0,w,c
  4062  000B6E  A4D8               	btfss	status,2,c
  4063  000B70  EFBC  F005         	goto	u4361
  4064  000B74  EFBE  F005         	goto	u4360
  4065  000B78                     u4361:
  4066  000B78  EFCE  F005         	goto	l3783
  4067  000B7C                     u4360:
  4068  000B7C                     
  4069                           ; BSR set to: 0
  4070  000B7C  0E66               	movlw	102
  4071  000B7E  1858               	xorwf	efgtoa@nmode^0,w,c
  4072  000B80  A4D8               	btfss	status,2,c
  4073  000B82  EFC5  F005         	goto	u4371
  4074  000B86  EFC7  F005         	goto	u4370
  4075  000B8A                     u4371:
  4076  000B8A  EFD0  F005         	goto	l3785
  4077  000B8E                     u4370:
  4078  000B8E                     
  4079                           ; BSR set to: 0
  4080  000B8E  BE6B               	btfsc	(efgtoa@e+1)^0,7,c
  4081  000B90  EFCE  F005         	goto	u4380
  4082  000B94  EFCC  F005         	goto	u4381
  4083  000B98                     u4381:
  4084  000B98  EFD0  F005         	goto	l3785
  4085  000B9C                     u4380:
  4086  000B9C                     l3783:
  4087                           
  4088                           ; BSR set to: 0
  4089                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  4090  000B9C  4A4E               	infsnz	efgtoa@m^0,f,c
  4091  000B9E  2A4F               	incf	(efgtoa@m+1)^0,f,c
  4092  000BA0                     l3785:
  4093                           
  4094                           ; BSR set to: 0
  4095                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmode == 
      +                          'f') {
  4096  000BA0  0E66               	movlw	102
  4097  000BA2  1858               	xorwf	efgtoa@nmode^0,w,c
  4098  000BA4  A4D8               	btfss	status,2,c
  4099  000BA6  EFD7  F005         	goto	u4391
  4100  000BAA  EFD9  F005         	goto	u4390
  4101  000BAE                     u4391:
  4102  000BAE  EFF9  F005         	goto	l3795
  4103  000BB2                     u4390:
  4104  000BB2                     
  4105                           ; BSR set to: 0
  4106                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (e < 0
      +                          ) {
  4107  000BB2  BE6B               	btfsc	(efgtoa@e+1)^0,7,c
  4108  000BB4  EFE0  F005         	goto	u4400
  4109  000BB8  EFDE  F005         	goto	u4401
  4110  000BBC                     u4401:
  4111  000BBC  EFEC  F005         	goto	l3791
  4112  000BC0                     u4400:
  4113  000BC0                     
  4114                           ; BSR set to: 0
  4115                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             u = 1
      +                          .0;
  4116  000BC0  0E00               	movlw	0
  4117  000BC2  6E6E               	movwf	efgtoa@u^0,c
  4118  000BC4  0E00               	movlw	0
  4119  000BC6  6E6F               	movwf	(efgtoa@u+1)^0,c
  4120  000BC8  0E80               	movlw	128
  4121  000BCA  6E70               	movwf	(efgtoa@u+2)^0,c
  4122  000BCC  0E3F               	movlw	63
  4123  000BCE  6E71               	movwf	(efgtoa@u+3)^0,c
  4124                           
  4125                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             e = 0
      +                          ;
  4126  000BD0  0E00               	movlw	0
  4127  000BD2  6E6B               	movwf	(efgtoa@e+1)^0,c
  4128  000BD4  0E00               	movlw	0
  4129  000BD6  6E6A               	movwf	efgtoa@e^0,c
  4130  000BD8                     l3791:
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (!(mod
      +                          e == 'g')) {
  4134  000BD8  0E67               	movlw	103
  4135  000BDA  185B               	xorwf	efgtoa@mode^0,w,c
  4136  000BDC  B4D8               	btfsc	status,2,c
  4137  000BDE  EFF3  F005         	goto	u4411
  4138  000BE2  EFF5  F005         	goto	u4410
  4139  000BE6                     u4411:
  4140  000BE6  EFF9  F005         	goto	l3795
  4141  000BEA                     u4410:
  4142  000BEA                     
  4143                           ; BSR set to: 0
  4144                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             m += 
      +                          e;
  4145  000BEA  506A               	movf	efgtoa@e^0,w,c
  4146  000BEC  264E               	addwf	efgtoa@m^0,f,c
  4147  000BEE  506B               	movf	(efgtoa@e+1)^0,w,c
  4148  000BF0  224F               	addwfc	(efgtoa@m+1)^0,f,c
  4149  000BF2                     l3795:
  4150                           
  4151                           ; BSR set to: 0
  4152                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  4153  000BF2  0E00               	movlw	0
  4154  000BF4  6E65               	movwf	(efgtoa@i+1)^0,c
  4155  000BF6  0E00               	movlw	0
  4156  000BF8  6E64               	movwf	efgtoa@i^0,c
  4157  000BFA                     
  4158                           ; BSR set to: 0
  4159                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  4160  000BFA  C066  F05C         	movff	efgtoa@g,efgtoa@h
  4161  000BFE  C067  F05D         	movff	efgtoa@g+1,efgtoa@h+1
  4162  000C02  C068  F05E         	movff	efgtoa@g+2,efgtoa@h+2
  4163  000C06  C069  F05F         	movff	efgtoa@g+3,efgtoa@h+3
  4164  000C0A                     
  4165                           ; BSR set to: 0
  4166                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  4167  000C0A  C06E  F03A         	movff	efgtoa@u,efgtoa@ou
  4168  000C0E  C06F  F03B         	movff	efgtoa@u+1,efgtoa@ou+1
  4169  000C12  C070  F03C         	movff	efgtoa@u+2,efgtoa@ou+2
  4170  000C16  C071  F03D         	movff	efgtoa@u+3,efgtoa@ou+3
  4171                           
  4172                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i < m)
      +                           {
  4173  000C1A  EF89  F006         	goto	l3809
  4174  000C1E                     l3801:
  4175                           
  4176                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = floor
      +                          f(h/u);
  4177  000C1E  C05C  F001         	movff	efgtoa@h,___fldiv@b
  4178  000C22  C05D  F002         	movff	efgtoa@h+1,___fldiv@b+1
  4179  000C26  C05E  F003         	movff	efgtoa@h+2,___fldiv@b+2
  4180  000C2A  C05F  F004         	movff	efgtoa@h+3,___fldiv@b+3
  4181  000C2E  C06E  F005         	movff	efgtoa@u,___fldiv@a
  4182  000C32  C06F  F006         	movff	efgtoa@u+1,___fldiv@a+1
  4183  000C36  C070  F007         	movff	efgtoa@u+2,___fldiv@a+2
  4184  000C3A  C071  F008         	movff	efgtoa@u+3,___fldiv@a+3
  4185  000C3E  ECF1  F00F         	call	___fldiv	;wreg free
  4186  000C42  C001  F01A         	movff	?___fldiv,floorf@x
  4187  000C46  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  4188  000C4A  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  4189  000C4E  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  4190  000C52  EC18  F014         	call	_floorf	;wreg free
  4191  000C56  C01A  F060         	movff	?_floorf,efgtoa@l
  4192  000C5A  C01B  F061         	movff	?_floorf+1,efgtoa@l+1
  4193  000C5E  C01C  F062         	movff	?_floorf+2,efgtoa@l+2
  4194  000C62  C01D  F063         	movff	?_floorf+3,efgtoa@l+3
  4195                           
  4196                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = (int)
      +                          l;
  4197  000C66  C060  F01A         	movff	efgtoa@l,___fltol@f1
  4198  000C6A  C061  F01B         	movff	efgtoa@l+1,___fltol@f1+1
  4199  000C6E  C062  F01C         	movff	efgtoa@l+2,___fltol@f1+2
  4200  000C72  C063  F01D         	movff	efgtoa@l+3,___fltol@f1+3
  4201  000C76  ECC4  F016         	call	___fltol	;wreg free
  4202  000C7A  C01A  F052         	movff	?___fltol,efgtoa@d
  4203  000C7E  C01B  F053         	movff	?___fltol+1,efgtoa@d+1
  4204  000C82                     
  4205                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -= l*u;
  4206  000C82  C05C  F01A         	movff	efgtoa@h,___flsub@b
  4207  000C86  C05D  F01B         	movff	efgtoa@h+1,___flsub@b+1
  4208  000C8A  C05E  F01C         	movff	efgtoa@h+2,___flsub@b+2
  4209  000C8E  C05F  F01D         	movff	efgtoa@h+3,___flsub@b+3
  4210  000C92  C06E  F005         	movff	efgtoa@u,___flmul@a
  4211  000C96  C06F  F006         	movff	efgtoa@u+1,___flmul@a+1
  4212  000C9A  C070  F007         	movff	efgtoa@u+2,___flmul@a+2
  4213  000C9E  C071  F008         	movff	efgtoa@u+3,___flmul@a+3
  4214  000CA2  C060  F001         	movff	efgtoa@l,___flmul@b
  4215  000CA6  C061  F002         	movff	efgtoa@l+1,___flmul@b+1
  4216  000CAA  C062  F003         	movff	efgtoa@l+2,___flmul@b+2
  4217  000CAE  C063  F004         	movff	efgtoa@l+3,___flmul@b+3
  4218  000CB2  ECDC  F00D         	call	___flmul	;wreg free
  4219  000CB6  C001  F01E         	movff	?___flmul,___flsub@a
  4220  000CBA  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  4221  000CBE  C003  F020         	movff	?___flmul+2,___flsub@a+2
  4222  000CC2  C004  F021         	movff	?___flmul+3,___flsub@a+3
  4223  000CC6  EC94  F01C         	call	___flsub	;wreg free
  4224  000CCA  C01A  F05C         	movff	?___flsub,efgtoa@h
  4225  000CCE  C01B  F05D         	movff	?___flsub+1,efgtoa@h+1
  4226  000CD2  C01C  F05E         	movff	?___flsub+2,efgtoa@h+2
  4227  000CD6  C01D  F05F         	movff	?___flsub+3,efgtoa@h+3
  4228  000CDA                     
  4229                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = u/10.
      +                          0;
  4230  000CDA  C06E  F001         	movff	efgtoa@u,___fldiv@b
  4231  000CDE  C06F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4232  000CE2  C070  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4233  000CE6  C071  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4234  000CEA  0E00               	movlw	0
  4235  000CEC  6E05               	movwf	___fldiv@a^0,c
  4236  000CEE  0E00               	movlw	0
  4237  000CF0  6E06               	movwf	(___fldiv@a+1)^0,c
  4238  000CF2  0E20               	movlw	32
  4239  000CF4  6E07               	movwf	(___fldiv@a+2)^0,c
  4240  000CF6  0E41               	movlw	65
  4241  000CF8  6E08               	movwf	(___fldiv@a+3)^0,c
  4242  000CFA  ECF1  F00F         	call	___fldiv	;wreg free
  4243  000CFE  C001  F06E         	movff	?___fldiv,efgtoa@u
  4244  000D02  C002  F06F         	movff	?___fldiv+1,efgtoa@u+1
  4245  000D06  C003  F070         	movff	?___fldiv+2,efgtoa@u+2
  4246  000D0A  C004  F071         	movff	?___fldiv+3,efgtoa@u+3
  4247  000D0E                     
  4248                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  4249  000D0E  4A64               	infsnz	efgtoa@i^0,f,c
  4250  000D10  2A65               	incf	(efgtoa@i+1)^0,f,c
  4251  000D12                     l3809:
  4252                           
  4253                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i < m)
      +                           {
  4254  000D12  504E               	movf	efgtoa@m^0,w,c
  4255  000D14  5C64               	subwf	efgtoa@i^0,w,c
  4256  000D16  5065               	movf	(efgtoa@i+1)^0,w,c
  4257  000D18  0A80               	xorlw	128
  4258  000D1A  6E35               	movwf	??_efgtoa^0,c
  4259  000D1C  504F               	movf	(efgtoa@m+1)^0,w,c
  4260  000D1E  0A80               	xorlw	128
  4261  000D20  5835               	subwfb	??_efgtoa^0,w,c
  4262  000D22  A0D8               	btfss	status,0,c
  4263  000D24  EF96  F006         	goto	u4421
  4264  000D28  EF98  F006         	goto	u4420
  4265  000D2C                     u4421:
  4266  000D2C  EF0F  F006         	goto	l3801
  4267  000D30                     u4420:
  4268  000D30                     
  4269                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.0;
  4270  000D30  C06E  F001         	movff	efgtoa@u,___flmul@b
  4271  000D34  C06F  F002         	movff	efgtoa@u+1,___flmul@b+1
  4272  000D38  C070  F003         	movff	efgtoa@u+2,___flmul@b+2
  4273  000D3C  C071  F004         	movff	efgtoa@u+3,___flmul@b+3
  4274  000D40  0E00               	movlw	0
  4275  000D42  6E05               	movwf	___flmul@a^0,c
  4276  000D44  0E00               	movlw	0
  4277  000D46  6E06               	movwf	(___flmul@a+1)^0,c
  4278  000D48  0EA0               	movlw	160
  4279  000D4A  6E07               	movwf	(___flmul@a+2)^0,c
  4280  000D4C  0E40               	movlw	64
  4281  000D4E  6E08               	movwf	(___flmul@a+3)^0,c
  4282  000D50  ECDC  F00D         	call	___flmul	;wreg free
  4283  000D54  C001  F060         	movff	?___flmul,efgtoa@l
  4284  000D58  C002  F061         	movff	?___flmul+1,efgtoa@l+1
  4285  000D5C  C003  F062         	movff	?___flmul+2,efgtoa@l+2
  4286  000D60  C004  F063         	movff	?___flmul+3,efgtoa@l+3
  4287  000D64                     
  4288                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < l) {
  4289  000D64  C05C  F01A         	movff	efgtoa@h,___flge@ff1
  4290  000D68  C05D  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  4291  000D6C  C05E  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  4292  000D70  C05F  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  4293  000D74  C060  F01E         	movff	efgtoa@l,___flge@ff2
  4294  000D78  C061  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  4295  000D7C  C062  F020         	movff	efgtoa@l+2,___flge@ff2+2
  4296  000D80  C063  F021         	movff	efgtoa@l+3,___flge@ff2+3
  4297  000D84  EC47  F017         	call	___flge	;wreg free
  4298  000D88  B0D8               	btfsc	status,0,c
  4299  000D8A  EFC9  F006         	goto	u4431
  4300  000D8E  EFCB  F006         	goto	u4430
  4301  000D92                     u4431:
  4302  000D92  EFD5  F006         	goto	l3817
  4303  000D96                     u4430:
  4304  000D96                     
  4305                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 0.0;
  4306  000D96  0E00               	movlw	0
  4307  000D98  6E60               	movwf	efgtoa@l^0,c
  4308  000D9A  0E00               	movlw	0
  4309  000D9C  6E61               	movwf	(efgtoa@l+1)^0,c
  4310  000D9E  0E00               	movlw	0
  4311  000DA0  6E62               	movwf	(efgtoa@l+2)^0,c
  4312  000DA2  0E00               	movlw	0
  4313  000DA4  6E63               	movwf	(efgtoa@l+3)^0,c
  4314                           
  4315                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  4316  000DA6  EFFD  F006         	goto	l3823
  4317  000DAA                     l3817:
  4318                           
  4319                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if ((h ==
      +                           l) && !(d % 2)) {
  4320  000DAA  C05C  F001         	movff	efgtoa@h,___fleq@ff1
  4321  000DAE  C05D  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4322  000DB2  C05E  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4323  000DB6  C05F  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4324  000DBA  C060  F005         	movff	efgtoa@l,___fleq@ff2
  4325  000DBE  C061  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4326  000DC2  C062  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4327  000DC6  C063  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4328  000DCA  EC91  F01A         	call	___fleq	;wreg free
  4329  000DCE  A0D8               	btfss	status,0,c
  4330  000DD0  EFEC  F006         	goto	u4441
  4331  000DD4  EFEE  F006         	goto	u4440
  4332  000DD8                     u4441:
  4333  000DD8  EFFD  F006         	goto	l3823
  4334  000DDC                     u4440:
  4335  000DDC  B052               	btfsc	efgtoa@d^0,0,c
  4336  000DDE  EFF3  F006         	goto	u4451
  4337  000DE2  EFF5  F006         	goto	u4450
  4338  000DE6                     u4451:
  4339  000DE6  EFFD  F006         	goto	l3823
  4340  000DEA                     u4450:
  4341  000DEA                     
  4342                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             l = 0
      +                          .0;
  4343  000DEA  0E00               	movlw	0
  4344  000DEC  6E60               	movwf	efgtoa@l^0,c
  4345  000DEE  0E00               	movlw	0
  4346  000DF0  6E61               	movwf	(efgtoa@l+1)^0,c
  4347  000DF2  0E00               	movlw	0
  4348  000DF4  6E62               	movwf	(efgtoa@l+2)^0,c
  4349  000DF6  0E00               	movlw	0
  4350  000DF8  6E63               	movwf	(efgtoa@l+3)^0,c
  4351  000DFA                     l3823:
  4352                           
  4353                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + l;
  4354  000DFA  C066  F001         	movff	efgtoa@g,___fladd@b
  4355  000DFE  C067  F002         	movff	efgtoa@g+1,___fladd@b+1
  4356  000E02  C068  F003         	movff	efgtoa@g+2,___fladd@b+2
  4357  000E06  C069  F004         	movff	efgtoa@g+3,___fladd@b+3
  4358  000E0A  C060  F005         	movff	efgtoa@l,___fladd@a
  4359  000E0E  C061  F006         	movff	efgtoa@l+1,___fladd@a+1
  4360  000E12  C062  F007         	movff	efgtoa@l+2,___fladd@a+2
  4361  000E16  C063  F008         	movff	efgtoa@l+3,___fladd@a+3
  4362  000E1A  EC47  F009         	call	___fladd	;wreg free
  4363  000E1E  C001  F05C         	movff	?___fladd,efgtoa@h
  4364  000E22  C002  F05D         	movff	?___fladd+1,efgtoa@h+1
  4365  000E26  C003  F05E         	movff	?___fladd+2,efgtoa@h+2
  4366  000E2A  C004  F05F         	movff	?___fladd+3,efgtoa@h+3
  4367  000E2E                     
  4368                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  4369  000E2E  C03A  F06E         	movff	efgtoa@ou,efgtoa@u
  4370  000E32  C03B  F06F         	movff	efgtoa@ou+1,efgtoa@u+1
  4371  000E36  C03C  F070         	movff	efgtoa@ou+2,efgtoa@u+2
  4372  000E3A  C03D  F071         	movff	efgtoa@ou+3,efgtoa@u+3
  4373  000E3E                     
  4374                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nmode =
      +                          = 'e') ? 0 : e;
  4375  000E3E  0E65               	movlw	101
  4376  000E40  1858               	xorwf	efgtoa@nmode^0,w,c
  4377  000E42  B4D8               	btfsc	status,2,c
  4378  000E44  EF26  F007         	goto	u4461
  4379  000E48  EF28  F007         	goto	u4460
  4380  000E4C                     u4461:
  4381  000E4C  EF2E  F007         	goto	l3831
  4382  000E50                     u4460:
  4383  000E50  C06A  F050         	movff	efgtoa@e,efgtoa@ne
  4384  000E54  C06B  F051         	movff	efgtoa@e+1,efgtoa@ne+1
  4385  000E58  EF32  F007         	goto	l973
  4386  000E5C                     l3831:
  4387  000E5C  0E00               	movlw	0
  4388  000E5E  6E51               	movwf	(efgtoa@ne+1)^0,c
  4389  000E60  0E00               	movlw	0
  4390  000E62  6E50               	movwf	efgtoa@ne^0,c
  4391  000E64                     l973:
  4392                           
  4393                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  4394  000E64  0E00               	movlw	0
  4395  000E66  6E4D               	movwf	(efgtoa@pp+1)^0,c
  4396  000E68  0E00               	movlw	0
  4397  000E6A  6E4C               	movwf	efgtoa@pp^0,c
  4398                           
  4399                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  4400  000E6C  0E00               	movlw	0
  4401  000E6E  6E4B               	movwf	(efgtoa@t+1)^0,c
  4402  000E70  0E00               	movlw	0
  4403  000E72  6E4A               	movwf	efgtoa@t^0,c
  4404                           
  4405                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  4406  000E74  0E00               	movlw	0
  4407  000E76  6E65               	movwf	(efgtoa@i+1)^0,c
  4408  000E78  0E00               	movlw	0
  4409  000E7A  6E64               	movwf	efgtoa@i^0,c
  4410                           
  4411                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((i < m
      +                          ) && (n < (80 - 5))) {
  4412  000E7C  EF2C  F008         	goto	l3881
  4413  000E80                     l3833:
  4414                           
  4415                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = floor
      +                          f(h/u);
  4416  000E80  C05C  F001         	movff	efgtoa@h,___fldiv@b
  4417  000E84  C05D  F002         	movff	efgtoa@h+1,___fldiv@b+1
  4418  000E88  C05E  F003         	movff	efgtoa@h+2,___fldiv@b+2
  4419  000E8C  C05F  F004         	movff	efgtoa@h+3,___fldiv@b+3
  4420  000E90  C06E  F005         	movff	efgtoa@u,___fldiv@a
  4421  000E94  C06F  F006         	movff	efgtoa@u+1,___fldiv@a+1
  4422  000E98  C070  F007         	movff	efgtoa@u+2,___fldiv@a+2
  4423  000E9C  C071  F008         	movff	efgtoa@u+3,___fldiv@a+3
  4424  000EA0  ECF1  F00F         	call	___fldiv	;wreg free
  4425  000EA4  C001  F01A         	movff	?___fldiv,floorf@x
  4426  000EA8  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  4427  000EAC  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  4428  000EB0  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  4429  000EB4  EC18  F014         	call	_floorf	;wreg free
  4430  000EB8  C01A  F060         	movff	?_floorf,efgtoa@l
  4431  000EBC  C01B  F061         	movff	?_floorf+1,efgtoa@l+1
  4432  000EC0  C01C  F062         	movff	?_floorf+2,efgtoa@l+2
  4433  000EC4  C01D  F063         	movff	?_floorf+3,efgtoa@l+3
  4434                           
  4435                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = (int)
      +                          l;
  4436  000EC8  C060  F01A         	movff	efgtoa@l,___fltol@f1
  4437  000ECC  C061  F01B         	movff	efgtoa@l+1,___fltol@f1+1
  4438  000ED0  C062  F01C         	movff	efgtoa@l+2,___fltol@f1+2
  4439  000ED4  C063  F01D         	movff	efgtoa@l+3,___fltol@f1+3
  4440  000ED8  ECC4  F016         	call	___fltol	;wreg free
  4441  000EDC  C01A  F052         	movff	?___fltol,efgtoa@d
  4442  000EE0  C01B  F053         	movff	?___fltol+1,efgtoa@d+1
  4443  000EE4                     
  4444                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (!(fla
      +                          gs & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4445  000EE4  0100               	movlb	0	; () banked
  4446  000EE6  B9F4               	btfsc	_flags& (0+255),4,b
  4447  000EE8  EF78  F007         	goto	u4471
  4448  000EEC  EF7A  F007         	goto	u4470
  4449  000EF0                     u4471:
  4450  000EF0  EF97  F007         	goto	l3845
  4451  000EF4                     u4470:
  4452  000EF4                     
  4453                           ; BSR set to: 0
  4454  000EF4  5052               	movf	efgtoa@d^0,w,c
  4455  000EF6  1053               	iorwf	(efgtoa@d+1)^0,w,c
  4456  000EF8  A4D8               	btfss	status,2,c
  4457  000EFA  EF81  F007         	goto	u4481
  4458  000EFE  EF83  F007         	goto	u4480
  4459  000F02                     u4481:
  4460  000F02  EF97  F007         	goto	l3845
  4461  000F06                     u4480:
  4462  000F06                     
  4463                           ; BSR set to: 0
  4464  000F06  0E67               	movlw	103
  4465  000F08  185B               	xorwf	efgtoa@mode^0,w,c
  4466  000F0A  A4D8               	btfss	status,2,c
  4467  000F0C  EF8A  F007         	goto	u4491
  4468  000F10  EF8C  F007         	goto	u4490
  4469  000F14                     u4491:
  4470  000F14  EF97  F007         	goto	l3845
  4471  000F18                     u4490:
  4472  000F18                     
  4473                           ; BSR set to: 0
  4474  000F18  BE51               	btfsc	(efgtoa@ne+1)^0,7,c
  4475  000F1A  EF93  F007         	goto	u4500
  4476  000F1E  EF91  F007         	goto	u4501
  4477  000F22                     u4501:
  4478  000F22  EF97  F007         	goto	l3845
  4479  000F26                     u4500:
  4480  000F26                     
  4481                           ; BSR set to: 0
  4482                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             ++t;
  4483  000F26  4A4A               	infsnz	efgtoa@t^0,f,c
  4484  000F28  2A4B               	incf	(efgtoa@t+1)^0,f,c
  4485                           
  4486                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } else {
  4487  000F2A  EFE1  F007         	goto	l3873
  4488  000F2E                     l3845:
  4489                           
  4490                           ; BSR set to: 0
  4491                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             if (!
      +                          pp && (ne < 0)) {
  4492  000F2E  504C               	movf	efgtoa@pp^0,w,c
  4493  000F30  104D               	iorwf	(efgtoa@pp+1)^0,w,c
  4494  000F32  A4D8               	btfss	status,2,c
  4495  000F34  EF9E  F007         	goto	u4511
  4496  000F38  EFA0  F007         	goto	u4510
  4497  000F3C                     u4511:
  4498  000F3C  EFCA  F007         	goto	l3865
  4499  000F40                     u4510:
  4500  000F40                     
  4501                           ; BSR set to: 0
  4502  000F40  BE51               	btfsc	(efgtoa@ne+1)^0,7,c
  4503  000F42  EFA7  F007         	goto	u4520
  4504  000F46  EFA5  F007         	goto	u4521
  4505  000F4A                     u4521:
  4506  000F4A  EFCA  F007         	goto	l3865
  4507  000F4E                     u4520:
  4508  000F4E                     
  4509                           ; BSR set to: 0
  4510                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:                 d
      +                          buf[n++] = '.';
  4511  000F4E  0E00               	movlw	low _dbuf
  4512  000F50  246C               	addwf	efgtoa@n^0,w,c
  4513  000F52  6ED9               	movwf	fsr2l,c
  4514  000F54  0E01               	movlw	high _dbuf
  4515  000F56  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4516  000F58  6EDA               	movwf	fsr2h,c
  4517  000F5A  0E2E               	movlw	46
  4518  000F5C  6EDF               	movwf	indf2,c
  4519  000F5E                     
  4520                           ; BSR set to: 0
  4521  000F5E  4A6C               	infsnz	efgtoa@n^0,f,c
  4522  000F60  2A6D               	incf	(efgtoa@n+1)^0,f,c
  4523  000F62                     
  4524                           ; BSR set to: 0
  4525                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:                 -
      +                          -w;
  4526  000F62  0659               	decf	efgtoa@w^0,f,c
  4527  000F64  A0D8               	btfss	status,0,c
  4528  000F66  065A               	decf	(efgtoa@w+1)^0,f,c
  4529  000F68                     
  4530                           ; BSR set to: 0
  4531                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:                 p
      +                          p = 1;
  4532  000F68  0E00               	movlw	0
  4533  000F6A  6E4D               	movwf	(efgtoa@pp+1)^0,c
  4534  000F6C  0E01               	movlw	1
  4535  000F6E  6E4C               	movwf	efgtoa@pp^0,c
  4536  000F70  EFCA  F007         	goto	l3865
  4537  000F74                     l3857:
  4538                           
  4539                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:                 d
      +                          buf[n++] = '0';
  4540  000F74  0E00               	movlw	low _dbuf
  4541  000F76  246C               	addwf	efgtoa@n^0,w,c
  4542  000F78  6ED9               	movwf	fsr2l,c
  4543  000F7A  0E01               	movlw	high _dbuf
  4544  000F7C  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4545  000F7E  6EDA               	movwf	fsr2h,c
  4546  000F80  0E30               	movlw	48
  4547  000F82  6EDF               	movwf	indf2,c
  4548  000F84  4A6C               	infsnz	efgtoa@n^0,f,c
  4549  000F86  2A6D               	incf	(efgtoa@n+1)^0,f,c
  4550  000F88                     
  4551                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:                 -
      +                          -w;
  4552  000F88  0659               	decf	efgtoa@w^0,f,c
  4553  000F8A  A0D8               	btfss	status,0,c
  4554  000F8C  065A               	decf	(efgtoa@w+1)^0,f,c
  4555  000F8E                     
  4556                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:                 -
      +                          -t;
  4557  000F8E  064A               	decf	efgtoa@t^0,f,c
  4558  000F90  A0D8               	btfss	status,0,c
  4559  000F92  064B               	decf	(efgtoa@t+1)^0,f,c
  4560  000F94                     l3865:
  4561                           
  4562                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             while
      +                           (t) {
  4563  000F94  504A               	movf	efgtoa@t^0,w,c
  4564  000F96  104B               	iorwf	(efgtoa@t+1)^0,w,c
  4565  000F98  A4D8               	btfss	status,2,c
  4566  000F9A  EFD1  F007         	goto	u4531
  4567  000F9E  EFD3  F007         	goto	u4530
  4568  000FA2                     u4531:
  4569  000FA2  EFBA  F007         	goto	l3857
  4570  000FA6                     u4530:
  4571  000FA6                     
  4572                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             dbuf[
      +                          n++] = '0' + d;
  4573  000FA6  0E00               	movlw	low _dbuf
  4574  000FA8  246C               	addwf	efgtoa@n^0,w,c
  4575  000FAA  6ED9               	movwf	fsr2l,c
  4576  000FAC  0E01               	movlw	high _dbuf
  4577  000FAE  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4578  000FB0  6EDA               	movwf	fsr2h,c
  4579  000FB2  5052               	movf	efgtoa@d^0,w,c
  4580  000FB4  0F30               	addlw	48
  4581  000FB6  6EDF               	movwf	indf2,c
  4582  000FB8  4A6C               	infsnz	efgtoa@n^0,f,c
  4583  000FBA  2A6D               	incf	(efgtoa@n+1)^0,f,c
  4584  000FBC                     
  4585                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             --w;
  4586  000FBC  0659               	decf	efgtoa@w^0,f,c
  4587  000FBE  A0D8               	btfss	status,0,c
  4588  000FC0  065A               	decf	(efgtoa@w+1)^0,f,c
  4589  000FC2                     l3873:
  4590                           
  4591                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -= l*u;
  4592  000FC2  C05C  F01A         	movff	efgtoa@h,___flsub@b
  4593  000FC6  C05D  F01B         	movff	efgtoa@h+1,___flsub@b+1
  4594  000FCA  C05E  F01C         	movff	efgtoa@h+2,___flsub@b+2
  4595  000FCE  C05F  F01D         	movff	efgtoa@h+3,___flsub@b+3
  4596  000FD2  C06E  F005         	movff	efgtoa@u,___flmul@a
  4597  000FD6  C06F  F006         	movff	efgtoa@u+1,___flmul@a+1
  4598  000FDA  C070  F007         	movff	efgtoa@u+2,___flmul@a+2
  4599  000FDE  C071  F008         	movff	efgtoa@u+3,___flmul@a+3
  4600  000FE2  C060  F001         	movff	efgtoa@l,___flmul@b
  4601  000FE6  C061  F002         	movff	efgtoa@l+1,___flmul@b+1
  4602  000FEA  C062  F003         	movff	efgtoa@l+2,___flmul@b+2
  4603  000FEE  C063  F004         	movff	efgtoa@l+3,___flmul@b+3
  4604  000FF2  ECDC  F00D         	call	___flmul	;wreg free
  4605  000FF6  C001  F01E         	movff	?___flmul,___flsub@a
  4606  000FFA  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  4607  000FFE  C003  F020         	movff	?___flmul+2,___flsub@a+2
  4608  001002  C004  F021         	movff	?___flmul+3,___flsub@a+3
  4609  001006  EC94  F01C         	call	___flsub	;wreg free
  4610  00100A  C01A  F05C         	movff	?___flsub,efgtoa@h
  4611  00100E  C01B  F05D         	movff	?___flsub+1,efgtoa@h+1
  4612  001012  C01C  F05E         	movff	?___flsub+2,efgtoa@h+2
  4613  001016  C01D  F05F         	movff	?___flsub+3,efgtoa@h+3
  4614  00101A                     
  4615                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = u/10.
      +                          0;
  4616  00101A  C06E  F001         	movff	efgtoa@u,___fldiv@b
  4617  00101E  C06F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4618  001022  C070  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4619  001026  C071  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4620  00102A  0E00               	movlw	0
  4621  00102C  6E05               	movwf	___fldiv@a^0,c
  4622  00102E  0E00               	movlw	0
  4623  001030  6E06               	movwf	(___fldiv@a+1)^0,c
  4624  001032  0E20               	movlw	32
  4625  001034  6E07               	movwf	(___fldiv@a+2)^0,c
  4626  001036  0E41               	movlw	65
  4627  001038  6E08               	movwf	(___fldiv@a+3)^0,c
  4628  00103A  ECF1  F00F         	call	___fldiv	;wreg free
  4629  00103E  C001  F06E         	movff	?___fldiv,efgtoa@u
  4630  001042  C002  F06F         	movff	?___fldiv+1,efgtoa@u+1
  4631  001046  C003  F070         	movff	?___fldiv+2,efgtoa@u+2
  4632  00104A  C004  F071         	movff	?___fldiv+3,efgtoa@u+3
  4633  00104E                     
  4634                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne;
  4635  00104E  0650               	decf	efgtoa@ne^0,f,c
  4636  001050  A0D8               	btfss	status,0,c
  4637  001052  0651               	decf	(efgtoa@ne+1)^0,f,c
  4638  001054                     
  4639                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  4640  001054  4A64               	infsnz	efgtoa@i^0,f,c
  4641  001056  2A65               	incf	(efgtoa@i+1)^0,f,c
  4642  001058                     l3881:
  4643                           
  4644                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((i < m
      +                          ) && (n < (80 - 5))) {
  4645  001058  504E               	movf	efgtoa@m^0,w,c
  4646  00105A  5C64               	subwf	efgtoa@i^0,w,c
  4647  00105C  5065               	movf	(efgtoa@i+1)^0,w,c
  4648  00105E  0A80               	xorlw	128
  4649  001060  6E35               	movwf	??_efgtoa^0,c
  4650  001062  504F               	movf	(efgtoa@m+1)^0,w,c
  4651  001064  0A80               	xorlw	128
  4652  001066  5835               	subwfb	??_efgtoa^0,w,c
  4653  001068  B0D8               	btfsc	status,0,c
  4654  00106A  EF39  F008         	goto	u4541
  4655  00106E  EF3B  F008         	goto	u4540
  4656  001072                     u4541:
  4657  001072  EF49  F008         	goto	l3885
  4658  001076                     u4540:
  4659  001076  BE6D               	btfsc	(efgtoa@n+1)^0,7,c
  4660  001078  EF47  F008         	goto	u4551
  4661  00107C  506D               	movf	(efgtoa@n+1)^0,w,c
  4662  00107E  E109               	bnz	u4550
  4663  001080  0E4B               	movlw	75
  4664  001082  5C6C               	subwf	efgtoa@n^0,w,c
  4665  001084  A0D8               	btfss	status,0,c
  4666  001086  EF47  F008         	goto	u4551
  4667  00108A  EF49  F008         	goto	u4550
  4668  00108E                     u4551:
  4669  00108E  EF40  F007         	goto	l3833
  4670  001092                     u4550:
  4671  001092                     l3885:
  4672                           
  4673                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp && (f
      +                          lags & (1 << 4))) {
  4674  001092  504C               	movf	efgtoa@pp^0,w,c
  4675  001094  104D               	iorwf	(efgtoa@pp+1)^0,w,c
  4676  001096  A4D8               	btfss	status,2,c
  4677  001098  EF50  F008         	goto	u4561
  4678  00109C  EF52  F008         	goto	u4560
  4679  0010A0                     u4561:
  4680  0010A0  EF64  F008         	goto	l3893
  4681  0010A4                     u4560:
  4682  0010A4  0100               	movlb	0	; () banked
  4683  0010A6  A9F4               	btfss	_flags& (0+255),4,b
  4684  0010A8  EF58  F008         	goto	u4571
  4685  0010AC  EF5A  F008         	goto	u4570
  4686  0010B0                     u4571:
  4687  0010B0  EF64  F008         	goto	l3893
  4688  0010B4                     u4570:
  4689  0010B4                     
  4690                           ; BSR set to: 0
  4691                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf[n++]
      +                           = '.';
  4692  0010B4  0E00               	movlw	low _dbuf
  4693  0010B6  246C               	addwf	efgtoa@n^0,w,c
  4694  0010B8  6ED9               	movwf	fsr2l,c
  4695  0010BA  0E01               	movlw	high _dbuf
  4696  0010BC  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4697  0010BE  6EDA               	movwf	fsr2h,c
  4698  0010C0  0E2E               	movlw	46
  4699  0010C2  6EDF               	movwf	indf2,c
  4700  0010C4                     
  4701                           ; BSR set to: 0
  4702  0010C4  4A6C               	infsnz	efgtoa@n^0,f,c
  4703  0010C6  2A6D               	incf	(efgtoa@n+1)^0,f,c
  4704  0010C8                     l3893:
  4705                           
  4706                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] = '\0
      +                          ';
  4707  0010C8  0E00               	movlw	low _dbuf
  4708  0010CA  246C               	addwf	efgtoa@n^0,w,c
  4709  0010CC  6ED9               	movwf	fsr2l,c
  4710  0010CE  0E01               	movlw	high _dbuf
  4711  0010D0  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4712  0010D2  6EDA               	movwf	fsr2h,c
  4713  0010D4  0E00               	movlw	0
  4714  0010D6  6EDF               	movwf	indf2,c
  4715  0010D8                     
  4716                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmode == 
      +                          'e') {
  4717  0010D8  0E65               	movlw	101
  4718  0010DA  1858               	xorwf	efgtoa@nmode^0,w,c
  4719  0010DC  A4D8               	btfss	status,2,c
  4720  0010DE  EF73  F008         	goto	u4581
  4721  0010E2  EF75  F008         	goto	u4580
  4722  0010E6                     u4581:
  4723  0010E6  EF2A  F004         	goto	l3705
  4724  0010EA                     u4580:
  4725  0010EA                     
  4726                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = sizeo
      +                          f(dbuf) - 1;
  4727  0010EA  0E00               	movlw	0
  4728  0010EC  6E65               	movwf	(efgtoa@i+1)^0,c
  4729  0010EE  0E4F               	movlw	79
  4730  0010F0  6E64               	movwf	efgtoa@i^0,c
  4731  0010F2                     
  4732                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf[i] =
      +                           '\0';
  4733  0010F2  0E00               	movlw	low _dbuf
  4734  0010F4  2464               	addwf	efgtoa@i^0,w,c
  4735  0010F6  6ED9               	movwf	fsr2l,c
  4736  0010F8  0E01               	movlw	high _dbuf
  4737  0010FA  2065               	addwfc	(efgtoa@i+1)^0,w,c
  4738  0010FC  6EDA               	movwf	fsr2h,c
  4739  0010FE  0E00               	movlw	0
  4740  001100  6EDF               	movwf	indf2,c
  4741  001102                     
  4742                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign = 0;
  4743  001102  0E00               	movlw	0
  4744  001104  6E55               	movwf	(efgtoa@sign+1)^0,c
  4745  001106  0E00               	movlw	0
  4746  001108  6E54               	movwf	efgtoa@sign^0,c
  4747  00110A                     
  4748                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (e < 0
      +                          ) {
  4749  00110A  BE6B               	btfsc	(efgtoa@e+1)^0,7,c
  4750  00110C  EF8C  F008         	goto	u4590
  4751  001110  EF8A  F008         	goto	u4591
  4752  001114                     u4591:
  4753  001114  EF94  F008         	goto	l3909
  4754  001118                     u4590:
  4755  001118                     
  4756                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             sign 
      +                          = 1;
  4757  001118  0E00               	movlw	0
  4758  00111A  6E55               	movwf	(efgtoa@sign+1)^0,c
  4759  00111C  0E01               	movlw	1
  4760  00111E  6E54               	movwf	efgtoa@sign^0,c
  4761  001120                     
  4762                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             e = -
      +                          e;
  4763  001120  6C6A               	negf	efgtoa@e^0,c
  4764  001122  1E6B               	comf	(efgtoa@e+1)^0,f,c
  4765  001124  B0D8               	btfsc	status,0,c
  4766  001126  2A6B               	incf	(efgtoa@e+1)^0,f,c
  4767  001128                     l3909:
  4768                           
  4769                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 2;
  4770  001128  0E00               	movlw	0
  4771  00112A  6E57               	movwf	(efgtoa@p+1)^0,c
  4772  00112C  0E02               	movlw	2
  4773  00112E  6E56               	movwf	efgtoa@p^0,c
  4774                           
  4775                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         while (e 
      +                          || (0 < p)) {
  4776  001130  EFC4  F008         	goto	l3921
  4777  001134                     l3911:
  4778                           
  4779                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             --i;
  4780  001134  0664               	decf	efgtoa@i^0,f,c
  4781  001136  A0D8               	btfss	status,0,c
  4782  001138  0665               	decf	(efgtoa@i+1)^0,f,c
  4783  00113A                     
  4784                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             dbuf[
      +                          i] = '0' + (e % 10);
  4785  00113A  0E00               	movlw	low _dbuf
  4786  00113C  2464               	addwf	efgtoa@i^0,w,c
  4787  00113E  6ED9               	movwf	fsr2l,c
  4788  001140  0E01               	movlw	high _dbuf
  4789  001142  2065               	addwfc	(efgtoa@i+1)^0,w,c
  4790  001144  6EDA               	movwf	fsr2h,c
  4791  001146  C06A  F001         	movff	efgtoa@e,___awmod@dividend
  4792  00114A  C06B  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4793  00114E  0E00               	movlw	0
  4794  001150  6E04               	movwf	(___awmod@divisor+1)^0,c
  4795  001152  0E0A               	movlw	10
  4796  001154  6E03               	movwf	___awmod@divisor^0,c
  4797  001156  EC39  F01A         	call	___awmod	;wreg free
  4798  00115A  5001               	movf	?___awmod^0,w,c
  4799  00115C  0F30               	addlw	48
  4800  00115E  6EDF               	movwf	indf2,c
  4801  001160                     
  4802                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             e = e
      +                           / 10;
  4803  001160  C06A  F001         	movff	efgtoa@e,___awdiv@dividend
  4804  001164  C06B  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4805  001168  0E00               	movlw	0
  4806  00116A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4807  00116C  0E0A               	movlw	10
  4808  00116E  6E03               	movwf	___awdiv@divisor^0,c
  4809  001170  EC7B  F019         	call	___awdiv	;wreg free
  4810  001174  C001  F06A         	movff	?___awdiv,efgtoa@e
  4811  001178  C002  F06B         	movff	?___awdiv+1,efgtoa@e+1
  4812  00117C                     
  4813                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             --p;
  4814  00117C  0656               	decf	efgtoa@p^0,f,c
  4815  00117E  A0D8               	btfss	status,0,c
  4816  001180  0657               	decf	(efgtoa@p+1)^0,f,c
  4817  001182                     
  4818                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             --w;
  4819  001182  0659               	decf	efgtoa@w^0,f,c
  4820  001184  A0D8               	btfss	status,0,c
  4821  001186  065A               	decf	(efgtoa@w+1)^0,f,c
  4822  001188                     l3921:
  4823                           
  4824                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         while (e 
      +                          || (0 < p)) {
  4825  001188  506A               	movf	efgtoa@e^0,w,c
  4826  00118A  106B               	iorwf	(efgtoa@e+1)^0,w,c
  4827  00118C  A4D8               	btfss	status,2,c
  4828  00118E  EFCB  F008         	goto	u4601
  4829  001192  EFCD  F008         	goto	u4600
  4830  001196                     u4601:
  4831  001196  EF9A  F008         	goto	l3911
  4832  00119A                     u4600:
  4833  00119A  BE57               	btfsc	(efgtoa@p+1)^0,7,c
  4834  00119C  EFDA  F008         	goto	u4610
  4835  0011A0  5057               	movf	(efgtoa@p+1)^0,w,c
  4836  0011A2  E106               	bnz	u4611
  4837  0011A4  0456               	decf	efgtoa@p^0,w,c
  4838  0011A6  B0D8               	btfsc	status,0,c
  4839  0011A8  EFD8  F008         	goto	u4611
  4840  0011AC  EFDA  F008         	goto	u4610
  4841  0011B0                     u4611:
  4842  0011B0  EF9A  F008         	goto	l3911
  4843  0011B4                     u4610:
  4844  0011B4                     
  4845                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  4846  0011B4  0664               	decf	efgtoa@i^0,f,c
  4847  0011B6  A0D8               	btfss	status,0,c
  4848  0011B8  0665               	decf	(efgtoa@i+1)^0,f,c
  4849  0011BA                     
  4850                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf[i] =
      +                           sign ? '-' : '+';
  4851  0011BA  5054               	movf	efgtoa@sign^0,w,c
  4852  0011BC  1055               	iorwf	(efgtoa@sign+1)^0,w,c
  4853  0011BE  A4D8               	btfss	status,2,c
  4854  0011C0  EFE4  F008         	goto	u4621
  4855  0011C4  EFE6  F008         	goto	u4620
  4856  0011C8                     u4621:
  4857  0011C8  EFEC  F008         	goto	l3931
  4858  0011CC                     u4620:
  4859  0011CC  0E00               	movlw	0
  4860  0011CE  6E45               	movwf	(_efgtoa$734+1)^0,c
  4861  0011D0  0E2B               	movlw	43
  4862  0011D2  6E44               	movwf	_efgtoa$734^0,c
  4863  0011D4  EFF0  F008         	goto	l3933
  4864  0011D8                     l3931:
  4865  0011D8  0E00               	movlw	0
  4866  0011DA  6E45               	movwf	(_efgtoa$734+1)^0,c
  4867  0011DC  0E2D               	movlw	45
  4868  0011DE  6E44               	movwf	_efgtoa$734^0,c
  4869  0011E0                     l3933:
  4870  0011E0  0E00               	movlw	low _dbuf
  4871  0011E2  2464               	addwf	efgtoa@i^0,w,c
  4872  0011E4  6ED9               	movwf	fsr2l,c
  4873  0011E6  0E01               	movlw	high _dbuf
  4874  0011E8  2065               	addwfc	(efgtoa@i+1)^0,w,c
  4875  0011EA  6EDA               	movwf	fsr2h,c
  4876  0011EC  C044  FFDF         	movff	_efgtoa$734,indf2
  4877  0011F0                     
  4878                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  4879  0011F0  0659               	decf	efgtoa@w^0,f,c
  4880  0011F2  A0D8               	btfss	status,0,c
  4881  0011F4  065A               	decf	(efgtoa@w+1)^0,f,c
  4882  0011F6                     
  4883                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf[i] =
      +                           (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4884  0011F6  0664               	decf	efgtoa@i^0,f,c
  4885  0011F8  A0D8               	btfss	status,0,c
  4886  0011FA  0665               	decf	(efgtoa@i+1)^0,f,c
  4887  0011FC  0EBF               	movlw	191
  4888  0011FE  6E35               	movwf	??_efgtoa^0,c
  4889  001200  0EFF               	movlw	255
  4890  001202  6E36               	movwf	(??_efgtoa+1)^0,c
  4891  001204  5034               	movf	efgtoa@c^0,w,c
  4892  001206  6E37               	movwf	(??_efgtoa+2)^0,c
  4893  001208  6A38               	clrf	(??_efgtoa+3)^0,c
  4894  00120A  5035               	movf	??_efgtoa^0,w,c
  4895  00120C  2637               	addwf	(??_efgtoa+2)^0,f,c
  4896  00120E  5036               	movf	(??_efgtoa+1)^0,w,c
  4897  001210  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4898  001212  5038               	movf	(??_efgtoa+3)^0,w,c
  4899  001214  E10A               	bnz	u4630
  4900  001216  0E1A               	movlw	26
  4901  001218  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4902  00121A  A0D8               	btfss	status,0,c
  4903  00121C  EF12  F009         	goto	u4631
  4904  001220  EF15  F009         	goto	u4630
  4905  001224                     u4631:
  4906  001224  0E01               	movlw	1
  4907  001226  EF16  F009         	goto	u4640
  4908  00122A                     u4630:
  4909  00122A  0E00               	movlw	0
  4910  00122C                     u4640:
  4911  00122C  6E48               	movwf	_efgtoa$736^0,c
  4912  00122E  6A49               	clrf	(_efgtoa$736+1)^0,c
  4913  001230  5048               	movf	_efgtoa$736^0,w,c
  4914  001232  1049               	iorwf	(_efgtoa$736+1)^0,w,c
  4915  001234  A4D8               	btfss	status,2,c
  4916  001236  EF1F  F009         	goto	u4651
  4917  00123A  EF21  F009         	goto	u4650
  4918  00123E                     u4651:
  4919  00123E  EF27  F009         	goto	l3947
  4920  001242                     u4650:
  4921  001242  0E00               	movlw	0
  4922  001244  6E47               	movwf	(_efgtoa$735+1)^0,c
  4923  001246  0E65               	movlw	101
  4924  001248  6E46               	movwf	_efgtoa$735^0,c
  4925  00124A  EF2B  F009         	goto	l3949
  4926  00124E                     l3947:
  4927  00124E  0E00               	movlw	0
  4928  001250  6E47               	movwf	(_efgtoa$735+1)^0,c
  4929  001252  0E45               	movlw	69
  4930  001254  6E46               	movwf	_efgtoa$735^0,c
  4931  001256                     l3949:
  4932  001256  0E00               	movlw	low _dbuf
  4933  001258  2464               	addwf	efgtoa@i^0,w,c
  4934  00125A  6ED9               	movwf	fsr2l,c
  4935  00125C  0E01               	movlw	high _dbuf
  4936  00125E  2065               	addwfc	(efgtoa@i+1)^0,w,c
  4937  001260  6EDA               	movwf	fsr2h,c
  4938  001262  C046  FFDF         	movff	_efgtoa$735,indf2
  4939  001266                     
  4940                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  4941  001266  0659               	decf	efgtoa@w^0,f,c
  4942  001268  A0D8               	btfss	status,0,c
  4943  00126A  065A               	decf	(efgtoa@w+1)^0,f,c
  4944  00126C                     
  4945                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strcpy(&d
      +                          buf[n], &dbuf[i]);
  4946  00126C  0E00               	movlw	low _dbuf
  4947  00126E  246C               	addwf	efgtoa@n^0,w,c
  4948  001270  6E01               	movwf	strcpy@dest^0,c
  4949  001272  0E01               	movlw	high _dbuf
  4950  001274  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4951  001276  6E02               	movwf	(strcpy@dest+1)^0,c
  4952  001278  0E00               	movlw	low _dbuf
  4953  00127A  2464               	addwf	efgtoa@i^0,w,c
  4954  00127C  6E03               	movwf	strcpy@src^0,c
  4955  00127E  0E01               	movlw	high _dbuf
  4956  001280  2065               	addwfc	(efgtoa@i+1)^0,w,c
  4957  001282  6E04               	movwf	(strcpy@src+1)^0,c
  4958  001284  EC14  F01C         	call	_strcpy	;wreg free
  4959  001288  EF2A  F004         	goto	l3705
  4960  00128C                     l929:
  4961  00128C  0012               	return		;funcret
  4962  00128E                     __end_of_efgtoa:
  4963                           	callstack 0
  4964                           
  4965 ;; *************** function _tolower *****************
  4966 ;; Defined at:
  4967 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\tolower.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;  c               2    6[COMRAM] int 
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;		None
  4972 ;; Return value:  Size  Location     Type
  4973 ;;                  2    6[COMRAM] int 
  4974 ;; Registers used:
  4975 ;;		wreg, status,2, status,0
  4976 ;; Tracked objects:
  4977 ;;		On entry : 0/0
  4978 ;;		On exit  : 0/0
  4979 ;;		Unchanged: 0/0
  4980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4981 ;;      Params:         2       0       0       0       0       0       0
  4982 ;;      Locals:         2       0       0       0       0       0       0
  4983 ;;      Temps:          4       0       0       0       0       0       0
  4984 ;;      Totals:         8       0       0       0       0       0       0
  4985 ;;Total ram usage:        8 bytes
  4986 ;; Hardware stack levels used:    1
  4987 ;; Hardware stack levels required when called:    1
  4988 ;; This function calls:
  4989 ;;		_isupper
  4990 ;; This function is called by:
  4991 ;;		_efgtoa
  4992 ;;		_vfpfcnvrt
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           	psect	text10
  4997  00376C                     __ptext10:
  4998                           	callstack 0
  4999  00376C                     _tolower:
  5000                           	callstack 25
  5001  00376C  0EBF               	movlw	191
  5002  00376E  6E09               	movwf	??_tolower^0,c
  5003  003770  0EFF               	movlw	255
  5004  003772  6E0A               	movwf	(??_tolower+1)^0,c
  5005  003774  C007  F00B         	movff	tolower@c,??_tolower+2
  5006  003778  C008  F00C         	movff	tolower@c+1,??_tolower+3
  5007  00377C  5009               	movf	??_tolower^0,w,c
  5008  00377E  260B               	addwf	(??_tolower+2)^0,f,c
  5009  003780  500A               	movf	(??_tolower+1)^0,w,c
  5010  003782  220C               	addwfc	(??_tolower+3)^0,f,c
  5011  003784  500C               	movf	(??_tolower+3)^0,w,c
  5012  003786  E10A               	bnz	u3970
  5013  003788  0E1A               	movlw	26
  5014  00378A  5C0B               	subwf	(??_tolower+2)^0,w,c
  5015  00378C  A0D8               	btfss	status,0,c
  5016  00378E  EFCB  F01B         	goto	u3971
  5017  003792  EFCE  F01B         	goto	u3970
  5018  003796                     u3971:
  5019  003796  0E01               	movlw	1
  5020  003798  EFCF  F01B         	goto	u3980
  5021  00379C                     u3970:
  5022  00379C  0E00               	movlw	0
  5023  00379E                     u3980:
  5024  00379E  6E0D               	movwf	_tolower$883^0,c
  5025  0037A0  6A0E               	clrf	(_tolower$883+1)^0,c
  5026  0037A2  500D               	movf	_tolower$883^0,w,c
  5027  0037A4  100E               	iorwf	(_tolower$883+1)^0,w,c
  5028  0037A6  B4D8               	btfsc	status,2,c
  5029  0037A8  EFD8  F01B         	goto	u3991
  5030  0037AC  EFDA  F01B         	goto	u3990
  5031  0037B0                     u3991:
  5032  0037B0  EFE1  F01B         	goto	l1157
  5033  0037B4                     u3990:
  5034  0037B4  0E20               	movlw	32
  5035  0037B6  1007               	iorwf	tolower@c^0,w,c
  5036  0037B8  6E07               	movwf	?_tolower^0,c
  5037  0037BA  5008               	movf	(tolower@c+1)^0,w,c
  5038  0037BC  6E08               	movwf	(?_tolower+1)^0,c
  5039  0037BE  EFE5  F01B         	goto	l1162
  5040  0037C2                     l1157:
  5041  0037C2  C007  F007         	movff	tolower@c,?_tolower
  5042  0037C6  C008  F008         	movff	tolower@c+1,?_tolower+1
  5043  0037CA                     l1162:
  5044  0037CA  0012               	return		;funcret
  5045  0037CC                     __end_of_tolower:
  5046                           	callstack 0
  5047                           
  5048 ;; *************** function _isupper *****************
  5049 ;; Defined at:
  5050 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\isupper.c"
  5051 ;; Parameters:    Size  Location     Type
  5052 ;;  c               2    0[COMRAM] int 
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;		None
  5055 ;; Return value:  Size  Location     Type
  5056 ;;                  2    0[COMRAM] int 
  5057 ;; Registers used:
  5058 ;;		wreg, status,2, status,0
  5059 ;; Tracked objects:
  5060 ;;		On entry : 0/0
  5061 ;;		On exit  : 0/0
  5062 ;;		Unchanged: 0/0
  5063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5064 ;;      Params:         2       0       0       0       0       0       0
  5065 ;;      Locals:         0       0       0       0       0       0       0
  5066 ;;      Temps:          4       0       0       0       0       0       0
  5067 ;;      Totals:         6       0       0       0       0       0       0
  5068 ;;Total ram usage:        6 bytes
  5069 ;; Hardware stack levels used:    1
  5070 ;; This function calls:
  5071 ;;		Nothing
  5072 ;; This function is called by:
  5073 ;;		_efgtoa
  5074 ;;		_vfpfcnvrt
  5075 ;;		_tolower
  5076 ;; This function uses a non-reentrant model
  5077 ;;
  5078                           
  5079                           	psect	text11
  5080  0039B2                     __ptext11:
  5081                           	callstack 0
  5082  0039B2                     _isupper:
  5083                           	callstack 25
  5084  0039B2  0EBF               	movlw	191
  5085  0039B4  6E03               	movwf	??_isupper^0,c
  5086  0039B6  0EFF               	movlw	255
  5087  0039B8  6E04               	movwf	(??_isupper+1)^0,c
  5088  0039BA  C001  F005         	movff	isupper@c,??_isupper+2
  5089  0039BE  C002  F006         	movff	isupper@c+1,??_isupper+3
  5090  0039C2  5003               	movf	??_isupper^0,w,c
  5091  0039C4  2605               	addwf	(??_isupper+2)^0,f,c
  5092  0039C6  5004               	movf	(??_isupper+1)^0,w,c
  5093  0039C8  2206               	addwfc	(??_isupper+3)^0,f,c
  5094  0039CA  5006               	movf	(??_isupper+3)^0,w,c
  5095  0039CC  E10A               	bnz	u3120
  5096  0039CE  0E1A               	movlw	26
  5097  0039D0  5C05               	subwf	(??_isupper+2)^0,w,c
  5098  0039D2  A0D8               	btfss	status,0,c
  5099  0039D4  EFEE  F01C         	goto	u3121
  5100  0039D8  EFF1  F01C         	goto	u3120
  5101  0039DC                     u3121:
  5102  0039DC  0E01               	movlw	1
  5103  0039DE  EFF2  F01C         	goto	u3130
  5104  0039E2                     u3120:
  5105  0039E2  0E00               	movlw	0
  5106  0039E4                     u3130:
  5107  0039E4  6E01               	movwf	?_isupper^0,c
  5108  0039E6  6A02               	clrf	(?_isupper+1)^0,c
  5109  0039E8  0012               	return		;funcret
  5110  0039EA                     __end_of_isupper:
  5111                           	callstack 0
  5112                           
  5113 ;; *************** function _strcpy *****************
  5114 ;; Defined at:
  5115 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  5116 ;; Parameters:    Size  Location     Type
  5117 ;;  dest            2    0[COMRAM] PTR unsigned char 
  5118 ;;		 -> dbuf(80), 
  5119 ;;  src             2    2[COMRAM] PTR const unsigned char 
  5120 ;;		 -> STR_36(4), STR_35(4), STR_32(4), STR_31(4), 
  5121 ;;		 -> dbuf(80), 
  5122 ;; Auto vars:     Size  Location     Type
  5123 ;;  d               2    8[COMRAM] PTR unsigned char 
  5124 ;;		 -> dbuf(80), 
  5125 ;;  s               2    6[COMRAM] PTR const unsigned char 
  5126 ;;		 -> STR_36(4), STR_35(4), STR_32(4), STR_31(4), 
  5127 ;;		 -> dbuf(80), 
  5128 ;; Return value:  Size  Location     Type
  5129 ;;                  2    0[COMRAM] PTR unsigned char 
  5130 ;; Registers used:
  5131 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5132 ;; Tracked objects:
  5133 ;;		On entry : 0/0
  5134 ;;		On exit  : 0/0
  5135 ;;		Unchanged: 0/0
  5136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5137 ;;      Params:         4       0       0       0       0       0       0
  5138 ;;      Locals:         4       0       0       0       0       0       0
  5139 ;;      Temps:          2       0       0       0       0       0       0
  5140 ;;      Totals:        10       0       0       0       0       0       0
  5141 ;;Total ram usage:       10 bytes
  5142 ;; Hardware stack levels used:    1
  5143 ;; This function calls:
  5144 ;;		Nothing
  5145 ;; This function is called by:
  5146 ;;		_efgtoa
  5147 ;; This function uses a non-reentrant model
  5148 ;;
  5149                           
  5150                           	psect	text12
  5151  003828                     __ptext12:
  5152                           	callstack 0
  5153  003828                     _strcpy:
  5154                           	callstack 25
  5155  003828  C003  F007         	movff	strcpy@src,strcpy@s
  5156  00382C  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  5157  003830  C001  F009         	movff	strcpy@dest,strcpy@d
  5158  003834  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  5159  003838                     l3605:
  5160  003838  5007               	movf	strcpy@s^0,w,c
  5161  00383A  6E05               	movwf	??_strcpy^0,c
  5162  00383C  5008               	movf	(strcpy@s+1)^0,w,c
  5163  00383E  6E06               	movwf	(??_strcpy+1)^0,c
  5164  003840  4A07               	infsnz	strcpy@s^0,f,c
  5165  003842  2A08               	incf	(strcpy@s+1)^0,f,c
  5166  003844  C005  FFF6         	movff	??_strcpy,tblptrl
  5167  003848  C006  FFF7         	movff	??_strcpy+1,tblptrh
  5168  00384C  6AF8               	clrf	tblptru,c
  5169  00384E  C009  FFD9         	movff	strcpy@d,fsr2l
  5170  003852  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  5171  003856  4A09               	infsnz	strcpy@d^0,f,c
  5172  003858  2A0A               	incf	(strcpy@d+1)^0,f,c
  5173  00385A  0E05               	movlw	(high __ramtop+-1)
  5174  00385C  64F7               	cpfsgt	tblptrh,c
  5175  00385E  D003               	bra	u3957
  5176  003860  0008               	tblrd		*
  5177  003862  50F5               	movf	tablat,w,c
  5178  003864  D005               	bra	u3950
  5179  003866                     u3957:
  5180  003866  CFF6 FFE9          	movff	tblptrl,fsr0l
  5181  00386A  CFF7 FFEA          	movff	tblptrh,fsr0h
  5182  00386E  50EF               	movf	indf0,w,c
  5183  003870                     u3950:
  5184  003870  6EDF               	movwf	indf2,c
  5185  003872  50DF               	movf	indf2,w,c
  5186  003874  A4D8               	btfss	status,2,c
  5187  003876  EF3F  F01C         	goto	u3961
  5188  00387A  EF41  F01C         	goto	u3960
  5189  00387E                     u3961:
  5190  00387E  EF1C  F01C         	goto	l3605
  5191  003882                     u3960:
  5192  003882  0012               	return		;funcret
  5193  003884                     __end_of_strcpy:
  5194                           	callstack 0
  5195                           
  5196 ;; *************** function _pad *****************
  5197 ;; Defined at:
  5198 ;;		line 72 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5199 ;; Parameters:    Size  Location     Type
  5200 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5201 ;;		 -> sprintf@f(6), 
  5202 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5203 ;;		 -> dbuf(80), 
  5204 ;;  p               2   20[COMRAM] int 
  5205 ;; Auto vars:     Size  Location     Type
  5206 ;;  w               2   25[COMRAM] int 
  5207 ;;  i               2   23[COMRAM] int 
  5208 ;; Return value:  Size  Location     Type
  5209 ;;                  2   16[COMRAM] int 
  5210 ;; Registers used:
  5211 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5212 ;; Tracked objects:
  5213 ;;		On entry : 0/0
  5214 ;;		On exit  : 0/0
  5215 ;;		Unchanged: 0/0
  5216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5217 ;;      Params:         6       0       0       0       0       0       0
  5218 ;;      Locals:         4       0       0       0       0       0       0
  5219 ;;      Temps:          1       0       0       0       0       0       0
  5220 ;;      Totals:        11       0       0       0       0       0       0
  5221 ;;Total ram usage:       11 bytes
  5222 ;; Hardware stack levels used:    1
  5223 ;; Hardware stack levels required when called:    3
  5224 ;; This function calls:
  5225 ;;		_fputc
  5226 ;;		_fputs
  5227 ;;		_strlen
  5228 ;; This function is called by:
  5229 ;;		_efgtoa
  5230 ;; This function uses a non-reentrant model
  5231 ;;
  5232                           
  5233                           	psect	text13
  5234  003230                     __ptext13:
  5235                           	callstack 0
  5236  003230                     _pad:
  5237                           	callstack 22
  5238  003230                     
  5239                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pad(FIL
      +                          E *fp, char *buf, int p);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c
      +                          : 73: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 74:     int i, 
      +                          w;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 77:     if (flags & 
      +                          (1 << 0)) {
  5240  003230  0100               	movlb	0	; () banked
  5241  003232  A1F4               	btfss	_flags& (0+255),0,b
  5242  003234  EF1E  F019         	goto	u3841
  5243  003238  EF20  F019         	goto	u3840
  5244  00323C                     u3841:
  5245  00323C  EF2A  F019         	goto	l3563
  5246  003240                     u3840:
  5247  003240                     
  5248                           ; BSR set to: 0
  5249                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs((con
      +                          st char *)buf, fp);
  5250  003240  C013  F00A         	movff	pad@buf,fputs@s
  5251  003244  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5252  003248  C011  F00C         	movff	pad@fp,fputs@fp
  5253  00324C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5254  003250  ECB7  F01C         	call	_fputs	;wreg free
  5255  003254                     l3563:
  5256                           
  5257                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ? 
      +                          0 : p;
  5258  003254  BE16               	btfsc	(pad@p+1)^0,7,c
  5259  003256  EF2F  F019         	goto	u3851
  5260  00325A  EF31  F019         	goto	u3850
  5261  00325E                     u3851:
  5262  00325E  EF37  F019         	goto	l3567
  5263  003262                     u3850:
  5264  003262  C015  F01A         	movff	pad@p,pad@w
  5265  003266  C016  F01B         	movff	pad@p+1,pad@w+1
  5266  00326A  EF3B  F019         	goto	l906
  5267  00326E                     l3567:
  5268  00326E  0E00               	movlw	0
  5269  003270  6E1B               	movwf	(pad@w+1)^0,c
  5270  003272  0E00               	movlw	0
  5271  003274  6E1A               	movwf	pad@w^0,c
  5272  003276                     l906:
  5273                           
  5274                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5275  003276  0E00               	movlw	0
  5276  003278  6E19               	movwf	(pad@i+1)^0,c
  5277  00327A  0E00               	movlw	0
  5278  00327C  6E18               	movwf	pad@i^0,c
  5279                           
  5280                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  5281  00327E  EF4D  F019         	goto	l3573
  5282  003282                     l3569:
  5283                           
  5284                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc(' ',
      +                           fp);
  5285  003282  0E00               	movlw	0
  5286  003284  6E02               	movwf	(fputc@c+1)^0,c
  5287  003286  0E20               	movlw	32
  5288  003288  6E01               	movwf	fputc@c^0,c
  5289  00328A  C011  F003         	movff	pad@fp,fputc@fp
  5290  00328E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5291  003292  ECB3  F018         	call	_fputc	;wreg free
  5292  003296                     
  5293                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5294  003296  4A18               	infsnz	pad@i^0,f,c
  5295  003298  2A19               	incf	(pad@i+1)^0,f,c
  5296  00329A                     l3573:
  5297                           
  5298                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  5299  00329A  501A               	movf	pad@w^0,w,c
  5300  00329C  5C18               	subwf	pad@i^0,w,c
  5301  00329E  5019               	movf	(pad@i+1)^0,w,c
  5302  0032A0  0A80               	xorlw	128
  5303  0032A2  6E17               	movwf	??_pad^0,c
  5304  0032A4  501B               	movf	(pad@w+1)^0,w,c
  5305  0032A6  0A80               	xorlw	128
  5306  0032A8  5817               	subwfb	??_pad^0,w,c
  5307  0032AA  A0D8               	btfss	status,0,c
  5308  0032AC  EF5A  F019         	goto	u3861
  5309  0032B0  EF5C  F019         	goto	u3860
  5310  0032B4                     u3861:
  5311  0032B4  EF41  F019         	goto	l3569
  5312  0032B8                     u3860:
  5313  0032B8                     
  5314                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(flags & 
      +                          (1 << 0))) {
  5315  0032B8  0100               	movlb	0	; () banked
  5316  0032BA  B1F4               	btfsc	_flags& (0+255),0,b
  5317  0032BC  EF62  F019         	goto	u3871
  5318  0032C0  EF64  F019         	goto	u3870
  5319  0032C4                     u3871:
  5320  0032C4  EF6E  F019         	goto	l3577
  5321  0032C8                     u3870:
  5322  0032C8                     
  5323                           ; BSR set to: 0
  5324                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs((con
      +                          st char *)buf, fp);
  5325  0032C8  C013  F00A         	movff	pad@buf,fputs@s
  5326  0032CC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5327  0032D0  C011  F00C         	movff	pad@fp,fputs@fp
  5328  0032D4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5329  0032D8  ECB7  F01C         	call	_fputs	;wreg free
  5330  0032DC                     l3577:
  5331                           
  5332                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return strlen(
      +                          buf) + w;
  5333  0032DC  C013  F001         	movff	pad@buf,strlen@s
  5334  0032E0  C014  F002         	movff	pad@buf+1,strlen@s+1
  5335  0032E4  EC2D  F01D         	call	_strlen	;wreg free
  5336  0032E8  501A               	movf	pad@w^0,w,c
  5337  0032EA  2401               	addwf	?_strlen^0,w,c
  5338  0032EC  6E11               	movwf	?_pad^0,c
  5339  0032EE  501B               	movf	(pad@w+1)^0,w,c
  5340  0032F0  2002               	addwfc	(?_strlen+1)^0,w,c
  5341  0032F2  6E12               	movwf	(?_pad+1)^0,c
  5342  0032F4  0012               	return		;funcret
  5343  0032F6                     __end_of_pad:
  5344                           	callstack 0
  5345                           
  5346 ;; *************** function _strlen *****************
  5347 ;; Defined at:
  5348 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strlen.c"
  5349 ;; Parameters:    Size  Location     Type
  5350 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5351 ;;		 -> dbuf(80), 
  5352 ;; Auto vars:     Size  Location     Type
  5353 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5354 ;;		 -> dbuf(80), 
  5355 ;; Return value:  Size  Location     Type
  5356 ;;                  2    0[COMRAM] unsigned int 
  5357 ;; Registers used:
  5358 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5359 ;; Tracked objects:
  5360 ;;		On entry : 0/0
  5361 ;;		On exit  : 0/0
  5362 ;;		Unchanged: 0/0
  5363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5364 ;;      Params:         2       0       0       0       0       0       0
  5365 ;;      Locals:         2       0       0       0       0       0       0
  5366 ;;      Temps:          0       0       0       0       0       0       0
  5367 ;;      Totals:         4       0       0       0       0       0       0
  5368 ;;Total ram usage:        4 bytes
  5369 ;; Hardware stack levels used:    1
  5370 ;; This function calls:
  5371 ;;		Nothing
  5372 ;; This function is called by:
  5373 ;;		_pad
  5374 ;; This function uses a non-reentrant model
  5375 ;;
  5376                           
  5377                           	psect	text14
  5378  003A5A                     __ptext14:
  5379                           	callstack 0
  5380  003A5A                     _strlen:
  5381                           	callstack 24
  5382  003A5A  C001  F003         	movff	strlen@s,strlen@a
  5383  003A5E  C002  F004         	movff	strlen@s+1,strlen@a+1
  5384  003A62  EF35  F01D         	goto	l3099
  5385  003A66                     l3097:
  5386  003A66  4A01               	infsnz	strlen@s^0,f,c
  5387  003A68  2A02               	incf	(strlen@s+1)^0,f,c
  5388  003A6A                     l3099:
  5389  003A6A  C001  FFD9         	movff	strlen@s,fsr2l
  5390  003A6E  C002  FFDA         	movff	strlen@s+1,fsr2h
  5391  003A72  50DF               	movf	indf2,w,c
  5392  003A74  A4D8               	btfss	status,2,c
  5393  003A76  EF3F  F01D         	goto	u3111
  5394  003A7A  EF41  F01D         	goto	u3110
  5395  003A7E                     u3111:
  5396  003A7E  EF33  F01D         	goto	l3097
  5397  003A82                     u3110:
  5398  003A82  5003               	movf	strlen@a^0,w,c
  5399  003A84  5C01               	subwf	strlen@s^0,w,c
  5400  003A86  6E01               	movwf	?_strlen^0,c
  5401  003A88  5004               	movf	(strlen@a+1)^0,w,c
  5402  003A8A  5802               	subwfb	(strlen@s+1)^0,w,c
  5403  003A8C  6E02               	movwf	(?_strlen+1)^0,c
  5404  003A8E  0012               	return		;funcret
  5405  003A90                     __end_of_strlen:
  5406                           	callstack 0
  5407                           
  5408 ;; *************** function _fputs *****************
  5409 ;; Defined at:
  5410 ;;		line 8 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  5411 ;; Parameters:    Size  Location     Type
  5412 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5413 ;;		 -> dbuf(80), 
  5414 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5415 ;;		 -> sprintf@f(6), 
  5416 ;; Auto vars:     Size  Location     Type
  5417 ;;  i               2   14[COMRAM] int 
  5418 ;;  c               1   13[COMRAM] unsigned char 
  5419 ;; Return value:  Size  Location     Type
  5420 ;;                  2    9[COMRAM] int 
  5421 ;; Registers used:
  5422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5423 ;; Tracked objects:
  5424 ;;		On entry : 0/0
  5425 ;;		On exit  : 0/0
  5426 ;;		Unchanged: 0/0
  5427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5428 ;;      Params:         4       0       0       0       0       0       0
  5429 ;;      Locals:         3       0       0       0       0       0       0
  5430 ;;      Temps:          0       0       0       0       0       0       0
  5431 ;;      Totals:         7       0       0       0       0       0       0
  5432 ;;Total ram usage:        7 bytes
  5433 ;; Hardware stack levels used:    1
  5434 ;; Hardware stack levels required when called:    2
  5435 ;; This function calls:
  5436 ;;		_fputc
  5437 ;; This function is called by:
  5438 ;;		_pad
  5439 ;; This function uses a non-reentrant model
  5440 ;;
  5441                           
  5442                           	psect	text15
  5443  00396E                     __ptext15:
  5444                           	callstack 0
  5445  00396E                     _fputs:
  5446                           	callstack 22
  5447  00396E  0E00               	movlw	0
  5448  003970  6E10               	movwf	(fputs@i+1)^0,c
  5449  003972  0E00               	movlw	0
  5450  003974  6E0F               	movwf	fputs@i^0,c
  5451  003976  EFC8  F01C         	goto	l3093
  5452  00397A                     l3089:
  5453  00397A  C00E  F001         	movff	fputs@c,fputc@c
  5454  00397E  6A02               	clrf	(fputc@c+1)^0,c
  5455  003980  C00C  F003         	movff	fputs@fp,fputc@fp
  5456  003984  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5457  003988  ECB3  F018         	call	_fputc	;wreg free
  5458  00398C  4A0F               	infsnz	fputs@i^0,f,c
  5459  00398E  2A10               	incf	(fputs@i+1)^0,f,c
  5460  003990                     l3093:
  5461  003990  500F               	movf	fputs@i^0,w,c
  5462  003992  240A               	addwf	fputs@s^0,w,c
  5463  003994  6ED9               	movwf	fsr2l,c
  5464  003996  5010               	movf	(fputs@i+1)^0,w,c
  5465  003998  200B               	addwfc	(fputs@s+1)^0,w,c
  5466  00399A  6EDA               	movwf	fsr2h,c
  5467  00399C  50DF               	movf	indf2,w,c
  5468  00399E  6E0E               	movwf	fputs@c^0,c
  5469  0039A0  500E               	movf	fputs@c^0,w,c
  5470  0039A2  A4D8               	btfss	status,2,c
  5471  0039A4  EFD6  F01C         	goto	u3101
  5472  0039A8  EFD8  F01C         	goto	u3100
  5473  0039AC                     u3101:
  5474  0039AC  EFBD  F01C         	goto	l3089
  5475  0039B0                     u3100:
  5476  0039B0  0012               	return		;funcret
  5477  0039B2                     __end_of_fputs:
  5478                           	callstack 0
  5479                           
  5480 ;; *************** function _fputc *****************
  5481 ;; Defined at:
  5482 ;;		line 8 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  5483 ;; Parameters:    Size  Location     Type
  5484 ;;  c               2    0[COMRAM] int 
  5485 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5486 ;;		 -> sprintf@f(6), 
  5487 ;; Auto vars:     Size  Location     Type
  5488 ;;		None
  5489 ;; Return value:  Size  Location     Type
  5490 ;;                  2    0[COMRAM] int 
  5491 ;; Registers used:
  5492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5493 ;; Tracked objects:
  5494 ;;		On entry : 0/0
  5495 ;;		On exit  : 0/0
  5496 ;;		Unchanged: 0/0
  5497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5498 ;;      Params:         4       0       0       0       0       0       0
  5499 ;;      Locals:         0       0       0       0       0       0       0
  5500 ;;      Temps:          5       0       0       0       0       0       0
  5501 ;;      Totals:         9       0       0       0       0       0       0
  5502 ;;Total ram usage:        9 bytes
  5503 ;; Hardware stack levels used:    1
  5504 ;; Hardware stack levels required when called:    1
  5505 ;; This function calls:
  5506 ;;		_putch
  5507 ;; This function is called by:
  5508 ;;		_pad
  5509 ;;		_vfpfcnvrt
  5510 ;;		_fputs
  5511 ;; This function uses a non-reentrant model
  5512 ;;
  5513                           
  5514                           	psect	text16
  5515  003166                     __ptext16:
  5516                           	callstack 0
  5517  003166                     _fputc:
  5518                           	callstack 25
  5519  003166  5003               	movf	fputc@fp^0,w,c
  5520  003168  1004               	iorwf	(fputc@fp+1)^0,w,c
  5521  00316A  B4D8               	btfsc	status,2,c
  5522  00316C  EFBA  F018         	goto	u2671
  5523  003170  EFBC  F018         	goto	u2670
  5524  003174                     u2671:
  5525  003174  EFC5  F018         	goto	l2875
  5526  003178                     u2670:
  5527  003178  5003               	movf	fputc@fp^0,w,c
  5528  00317A  1004               	iorwf	(fputc@fp+1)^0,w,c
  5529  00317C  A4D8               	btfss	status,2,c
  5530  00317E  EFC3  F018         	goto	u2681
  5531  003182  EFC5  F018         	goto	u2680
  5532  003186                     u2681:
  5533  003186  EFCA  F018         	goto	l2877
  5534  00318A                     u2680:
  5535  00318A                     l2875:
  5536  00318A  5001               	movf	fputc@c^0,w,c
  5537  00318C  ECA2  F01D         	call	_putch
  5538  003190  EF17  F019         	goto	l1120
  5539  003194                     l2877:
  5540  003194  EE20 F004          	lfsr	2,4
  5541  003198  5003               	movf	fputc@fp^0,w,c
  5542  00319A  26D9               	addwf	fsr2l,f,c
  5543  00319C  5004               	movf	(fputc@fp+1)^0,w,c
  5544  00319E  22DA               	addwfc	fsr2h,f,c
  5545  0031A0  50DE               	movf	postinc2,w,c
  5546  0031A2  10DE               	iorwf	postinc2,w,c
  5547  0031A4  B4D8               	btfsc	status,2,c
  5548  0031A6  EFD7  F018         	goto	u2691
  5549  0031AA  EFD9  F018         	goto	u2690
  5550  0031AE                     u2691:
  5551  0031AE  EFF4  F018         	goto	l2881
  5552  0031B2                     u2690:
  5553  0031B2  EE20 F004          	lfsr	2,4
  5554  0031B6  5003               	movf	fputc@fp^0,w,c
  5555  0031B8  26D9               	addwf	fsr2l,f,c
  5556  0031BA  5004               	movf	(fputc@fp+1)^0,w,c
  5557  0031BC  22DA               	addwfc	fsr2h,f,c
  5558  0031BE  EE10 F002          	lfsr	1,2
  5559  0031C2  5003               	movf	fputc@fp^0,w,c
  5560  0031C4  26E1               	addwf	fsr1l,f,c
  5561  0031C6  5004               	movf	(fputc@fp+1)^0,w,c
  5562  0031C8  22E2               	addwfc	fsr1h,f,c
  5563  0031CA  50DE               	movf	postinc2,w,c
  5564  0031CC  5CE6               	subwf	postinc1,w,c
  5565  0031CE  50E6               	movf	postinc1,w,c
  5566  0031D0  0A80               	xorlw	128
  5567  0031D2  6E09               	movwf	(??_fputc+4)^0,c
  5568  0031D4  50DE               	movf	postinc2,w,c
  5569  0031D6  0A80               	xorlw	128
  5570  0031D8  5809               	subwfb	(??_fputc+4)^0,w,c
  5571  0031DA  B0D8               	btfsc	status,0,c
  5572  0031DC  EFF2  F018         	goto	u2701
  5573  0031E0  EFF4  F018         	goto	u2700
  5574  0031E4                     u2701:
  5575  0031E4  EF17  F019         	goto	l1120
  5576  0031E8                     u2700:
  5577  0031E8                     l2881:
  5578  0031E8  EE20 F002          	lfsr	2,2
  5579  0031EC  5003               	movf	fputc@fp^0,w,c
  5580  0031EE  26D9               	addwf	fsr2l,f,c
  5581  0031F0  5004               	movf	(fputc@fp+1)^0,w,c
  5582  0031F2  22DA               	addwfc	fsr2h,f,c
  5583  0031F4  CFDE F005          	movff	postinc2,??_fputc
  5584  0031F8  CFDD F006          	movff	postdec2,??_fputc+1
  5585  0031FC  C003  FFD9         	movff	fputc@fp,fsr2l
  5586  003200  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5587  003204  CFDE F007          	movff	postinc2,??_fputc+2
  5588  003208  CFDD F008          	movff	postdec2,??_fputc+3
  5589  00320C  5005               	movf	??_fputc^0,w,c
  5590  00320E  2407               	addwf	(??_fputc+2)^0,w,c
  5591  003210  6ED9               	movwf	fsr2l,c
  5592  003212  5006               	movf	(??_fputc+1)^0,w,c
  5593  003214  2008               	addwfc	(??_fputc+3)^0,w,c
  5594  003216  6EDA               	movwf	fsr2h,c
  5595  003218  C001  FFDF         	movff	fputc@c,indf2
  5596  00321C  EE20 F002          	lfsr	2,2
  5597  003220  5003               	movf	fputc@fp^0,w,c
  5598  003222  26D9               	addwf	fsr2l,f,c
  5599  003224  5004               	movf	(fputc@fp+1)^0,w,c
  5600  003226  22DA               	addwfc	fsr2h,f,c
  5601  003228  2ADE               	incf	postinc2,f,c
  5602  00322A  0E00               	movlw	0
  5603  00322C  22DD               	addwfc	postdec2,f,c
  5604  00322E                     l1120:
  5605  00322E  0012               	return		;funcret
  5606  003230                     __end_of_fputc:
  5607                           	callstack 0
  5608                           
  5609 ;; *************** function _putch *****************
  5610 ;; Defined at:
  5611 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\putch.c"
  5612 ;; Parameters:    Size  Location     Type
  5613 ;;  c               1    wreg     unsigned char 
  5614 ;; Auto vars:     Size  Location     Type
  5615 ;;  c               1    0[COMRAM] unsigned char 
  5616 ;; Return value:  Size  Location     Type
  5617 ;;                  1    wreg      void 
  5618 ;; Registers used:
  5619 ;;		wreg
  5620 ;; Tracked objects:
  5621 ;;		On entry : 0/0
  5622 ;;		On exit  : 0/0
  5623 ;;		Unchanged: 0/0
  5624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5625 ;;      Params:         0       0       0       0       0       0       0
  5626 ;;      Locals:         0       0       0       0       0       0       0
  5627 ;;      Temps:          0       0       0       0       0       0       0
  5628 ;;      Totals:         0       0       0       0       0       0       0
  5629 ;;Total ram usage:        0 bytes
  5630 ;; Hardware stack levels used:    1
  5631 ;; This function calls:
  5632 ;;		Nothing
  5633 ;; This function is called by:
  5634 ;;		_fputc
  5635 ;; This function uses a non-reentrant model
  5636 ;;
  5637                           
  5638                           	psect	text17
  5639  003B44                     __ptext17:
  5640                           	callstack 0
  5641  003B44                     _putch:
  5642                           	callstack 25
  5643  003B44  0012               	return		;funcret
  5644  003B46                     __end_of_putch:
  5645                           	callstack 0
  5646                           
  5647 ;; *************** function _floorf *****************
  5648 ;; Defined at:
  5649 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\floorf.c"
  5650 ;; Parameters:    Size  Location     Type
  5651 ;;  x               4   25[COMRAM] float 
  5652 ;; Auto vars:     Size  Location     Type
  5653 ;;  u               4   41[COMRAM] struct .
  5654 ;;  m               4   35[COMRAM] unsigned long 
  5655 ;;  e               2   39[COMRAM] int 
  5656 ;; Return value:  Size  Location     Type
  5657 ;;                  4   25[COMRAM] float 
  5658 ;; Registers used:
  5659 ;;		wreg, status,2, status,0
  5660 ;; Tracked objects:
  5661 ;;		On entry : 0/0
  5662 ;;		On exit  : 0/0
  5663 ;;		Unchanged: 0/0
  5664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5665 ;;      Params:         4       0       0       0       0       0       0
  5666 ;;      Locals:        10       0       0       0       0       0       0
  5667 ;;      Temps:          6       0       0       0       0       0       0
  5668 ;;      Totals:        20       0       0       0       0       0       0
  5669 ;;Total ram usage:       20 bytes
  5670 ;; Hardware stack levels used:    1
  5671 ;; This function calls:
  5672 ;;		Nothing
  5673 ;; This function is called by:
  5674 ;;		_efgtoa
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           
  5678                           	psect	text18
  5679  002830                     __ptext18:
  5680                           	callstack 0
  5681  002830                     _floorf:
  5682                           	callstack 25
  5683  002830  C0E6  F02A         	movff	floorf@F524,floorf@u
  5684  002834  C0E7  F02B         	movff	floorf@F524+1,floorf@u+1
  5685  002838  C0E8  F02C         	movff	floorf@F524+2,floorf@u+2
  5686  00283C  C0E9  F02D         	movff	floorf@F524+3,floorf@u+3
  5687  002840  C01A  F02A         	movff	floorf@x,floorf@u
  5688  002844  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  5689  002848  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  5690  00284C  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  5691  002850  0E81               	movlw	129
  5692  002852  6E1E               	movwf	??_floorf^0,c
  5693  002854  0EFF               	movlw	255
  5694  002856  6E1F               	movwf	(??_floorf+1)^0,c
  5695  002858  C02A  F020         	movff	floorf@u,??_floorf+2
  5696  00285C  C02B  F021         	movff	floorf@u+1,??_floorf+3
  5697  002860  C02C  F022         	movff	floorf@u+2,??_floorf+4
  5698  002864  C02D  F023         	movff	floorf@u+3,??_floorf+5
  5699  002868  0E18               	movlw	24
  5700  00286A  EF3C  F014         	goto	u4000
  5701  00286E                     u4005:
  5702  00286E  90D8               	bcf	status,0,c
  5703  002870  3223               	rrcf	(??_floorf+5)^0,f,c
  5704  002872  3222               	rrcf	(??_floorf+4)^0,f,c
  5705  002874  3221               	rrcf	(??_floorf+3)^0,f,c
  5706  002876  3220               	rrcf	(??_floorf+2)^0,f,c
  5707  002878                     u4000:
  5708  002878  2EE8               	decfsz	wreg,f,c
  5709  00287A  EF37  F014         	goto	u4005
  5710  00287E  5020               	movf	(??_floorf+2)^0,w,c
  5711  002880  241E               	addwf	??_floorf^0,w,c
  5712  002882  6E28               	movwf	floorf@e^0,c
  5713  002884  0E00               	movlw	0
  5714  002886  201F               	addwfc	(??_floorf+1)^0,w,c
  5715  002888  6E29               	movwf	(floorf@e+1)^0,c
  5716  00288A  BE29               	btfsc	(floorf@e+1)^0,7,c
  5717  00288C  EF51  F014         	goto	u4011
  5718  002890  5029               	movf	(floorf@e+1)^0,w,c
  5719  002892  E109               	bnz	u4010
  5720  002894  0E17               	movlw	23
  5721  002896  5C28               	subwf	floorf@e^0,w,c
  5722  002898  A0D8               	btfss	status,0,c
  5723  00289A  EF51  F014         	goto	u4011
  5724  00289E  EF53  F014         	goto	u4010
  5725  0028A2                     u4011:
  5726  0028A2  EF5D  F014         	goto	l3623
  5727  0028A6                     u4010:
  5728  0028A6                     l3621:
  5729  0028A6  C01A  F01A         	movff	floorf@x,?_floorf
  5730  0028AA  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  5731  0028AE  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  5732  0028B2  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  5733  0028B6  EF20  F015         	goto	l1081
  5734  0028BA                     l3623:
  5735  0028BA  BE29               	btfsc	(floorf@e+1)^0,7,c
  5736  0028BC  EF62  F014         	goto	u4021
  5737  0028C0  EF64  F014         	goto	u4020
  5738  0028C4                     u4021:
  5739  0028C4  EFD4  F014         	goto	l3633
  5740  0028C8                     u4020:
  5741  0028C8  C028  F01E         	movff	floorf@e,??_floorf
  5742  0028CC  0EFF               	movlw	255
  5743  0028CE  6E1F               	movwf	(??_floorf+1)^0,c
  5744  0028D0  0EFF               	movlw	255
  5745  0028D2  6E20               	movwf	(??_floorf+2)^0,c
  5746  0028D4  0E7F               	movlw	127
  5747  0028D6  6E21               	movwf	(??_floorf+3)^0,c
  5748  0028D8  0E00               	movlw	0
  5749  0028DA  6E22               	movwf	(??_floorf+4)^0,c
  5750  0028DC                     u4035:
  5751  0028DC  661E               	tstfsz	??_floorf^0,c
  5752  0028DE  EF73  F014         	goto	u4036
  5753  0028E2  EF7B  F014         	goto	u4037
  5754  0028E6                     u4036:
  5755  0028E6  3422               	rlcf	(??_floorf+4)^0,w,c
  5756  0028E8  3222               	rrcf	(??_floorf+4)^0,f,c
  5757  0028EA  3221               	rrcf	(??_floorf+3)^0,f,c
  5758  0028EC  3220               	rrcf	(??_floorf+2)^0,f,c
  5759  0028EE  321F               	rrcf	(??_floorf+1)^0,f,c
  5760  0028F0  2E1E               	decfsz	??_floorf^0,f,c
  5761  0028F2  EF6E  F014         	goto	u4035
  5762  0028F6                     u4037:
  5763  0028F6  C01F  F024         	movff	??_floorf+1,floorf@m
  5764  0028FA  C020  F025         	movff	??_floorf+2,floorf@m+1
  5765  0028FE  C021  F026         	movff	??_floorf+3,floorf@m+2
  5766  002902  C022  F027         	movff	??_floorf+4,floorf@m+3
  5767  002906  5024               	movf	floorf@m^0,w,c
  5768  002908  142A               	andwf	floorf@u^0,w,c
  5769  00290A  6E1E               	movwf	??_floorf^0,c
  5770  00290C  5025               	movf	(floorf@m+1)^0,w,c
  5771  00290E  142B               	andwf	(floorf@u+1)^0,w,c
  5772  002910  6E1F               	movwf	(??_floorf+1)^0,c
  5773  002912  5026               	movf	(floorf@m+2)^0,w,c
  5774  002914  142C               	andwf	(floorf@u+2)^0,w,c
  5775  002916  6E20               	movwf	(??_floorf+2)^0,c
  5776  002918  5027               	movf	(floorf@m+3)^0,w,c
  5777  00291A  142D               	andwf	(floorf@u+3)^0,w,c
  5778  00291C  6E21               	movwf	(??_floorf+3)^0,c
  5779  00291E  501E               	movf	??_floorf^0,w,c
  5780  002920  101F               	iorwf	(??_floorf+1)^0,w,c
  5781  002922  1020               	iorwf	(??_floorf+2)^0,w,c
  5782  002924  1021               	iorwf	(??_floorf+3)^0,w,c
  5783  002926  A4D8               	btfss	status,2,c
  5784  002928  EF98  F014         	goto	u4041
  5785  00292C  EF9A  F014         	goto	u4040
  5786  002930                     u4041:
  5787  002930  EF9C  F014         	goto	l3629
  5788  002934                     u4040:
  5789  002934  EF53  F014         	goto	l3621
  5790  002938                     l3629:
  5791  002938  C02A  F01E         	movff	floorf@u,??_floorf
  5792  00293C  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5793  002940  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5794  002944  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5795  002948  0E20               	movlw	32
  5796  00294A  EFAC  F014         	goto	u4050
  5797  00294E                     u4055:
  5798  00294E  90D8               	bcf	status,0,c
  5799  002950  3221               	rrcf	(??_floorf+3)^0,f,c
  5800  002952  3220               	rrcf	(??_floorf+2)^0,f,c
  5801  002954  321F               	rrcf	(??_floorf+1)^0,f,c
  5802  002956  321E               	rrcf	??_floorf^0,f,c
  5803  002958                     u4050:
  5804  002958  2EE8               	decfsz	wreg,f,c
  5805  00295A  EFA7  F014         	goto	u4055
  5806  00295E  501E               	movf	??_floorf^0,w,c
  5807  002960  101F               	iorwf	(??_floorf+1)^0,w,c
  5808  002962  1020               	iorwf	(??_floorf+2)^0,w,c
  5809  002964  1021               	iorwf	(??_floorf+3)^0,w,c
  5810  002966  B4D8               	btfsc	status,2,c
  5811  002968  EFB8  F014         	goto	u4061
  5812  00296C  EFBA  F014         	goto	u4060
  5813  002970                     u4061:
  5814  002970  EFC2  F014         	goto	l1084
  5815  002974                     u4060:
  5816  002974  5024               	movf	floorf@m^0,w,c
  5817  002976  262A               	addwf	floorf@u^0,f,c
  5818  002978  5025               	movf	(floorf@m+1)^0,w,c
  5819  00297A  222B               	addwfc	(floorf@u+1)^0,f,c
  5820  00297C  5026               	movf	(floorf@m+2)^0,w,c
  5821  00297E  222C               	addwfc	(floorf@u+2)^0,f,c
  5822  002980  5027               	movf	(floorf@m+3)^0,w,c
  5823  002982  222D               	addwfc	(floorf@u+3)^0,f,c
  5824  002984                     l1084:
  5825  002984  1C24               	comf	floorf@m^0,w,c
  5826  002986  6E1E               	movwf	??_floorf^0,c
  5827  002988  1C25               	comf	(floorf@m+1)^0,w,c
  5828  00298A  6E1F               	movwf	(??_floorf+1)^0,c
  5829  00298C  1C26               	comf	(floorf@m+2)^0,w,c
  5830  00298E  6E20               	movwf	(??_floorf+2)^0,c
  5831  002990  1C27               	comf	(floorf@m+3)^0,w,c
  5832  002992  6E21               	movwf	(??_floorf+3)^0,c
  5833  002994  501E               	movf	??_floorf^0,w,c
  5834  002996  162A               	andwf	floorf@u^0,f,c
  5835  002998  501F               	movf	(??_floorf+1)^0,w,c
  5836  00299A  162B               	andwf	(floorf@u+1)^0,f,c
  5837  00299C  5020               	movf	(??_floorf+2)^0,w,c
  5838  00299E  162C               	andwf	(floorf@u+2)^0,f,c
  5839  0029A0  5021               	movf	(??_floorf+3)^0,w,c
  5840  0029A2  162D               	andwf	(floorf@u+3)^0,f,c
  5841  0029A4  EF18  F015         	goto	l3641
  5842  0029A8                     l3633:
  5843  0029A8  C02A  F01E         	movff	floorf@u,??_floorf
  5844  0029AC  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5845  0029B0  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5846  0029B4  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5847  0029B8  0E20               	movlw	32
  5848  0029BA  EFE4  F014         	goto	u4070
  5849  0029BE                     u4075:
  5850  0029BE  90D8               	bcf	status,0,c
  5851  0029C0  3221               	rrcf	(??_floorf+3)^0,f,c
  5852  0029C2  3220               	rrcf	(??_floorf+2)^0,f,c
  5853  0029C4  321F               	rrcf	(??_floorf+1)^0,f,c
  5854  0029C6  321E               	rrcf	??_floorf^0,f,c
  5855  0029C8                     u4070:
  5856  0029C8  2EE8               	decfsz	wreg,f,c
  5857  0029CA  EFDF  F014         	goto	u4075
  5858  0029CE  501E               	movf	??_floorf^0,w,c
  5859  0029D0  101F               	iorwf	(??_floorf+1)^0,w,c
  5860  0029D2  1020               	iorwf	(??_floorf+2)^0,w,c
  5861  0029D4  1021               	iorwf	(??_floorf+3)^0,w,c
  5862  0029D6  A4D8               	btfss	status,2,c
  5863  0029D8  EFF0  F014         	goto	u4081
  5864  0029DC  EFF2  F014         	goto	u4080
  5865  0029E0                     u4081:
  5866  0029E0  EFFC  F014         	goto	l3637
  5867  0029E4                     u4080:
  5868  0029E4  0E00               	movlw	0
  5869  0029E6  6E2A               	movwf	floorf@u^0,c
  5870  0029E8  0E00               	movlw	0
  5871  0029EA  6E2B               	movwf	(floorf@u+1)^0,c
  5872  0029EC  0E00               	movlw	0
  5873  0029EE  6E2C               	movwf	(floorf@u+2)^0,c
  5874  0029F0  0E00               	movlw	0
  5875  0029F2  6E2D               	movwf	(floorf@u+3)^0,c
  5876  0029F4  EF18  F015         	goto	l3641
  5877  0029F8                     l3637:
  5878  0029F8  90D8               	bcf	status,0,c
  5879  0029FA  342A               	rlcf	floorf@u^0,w,c
  5880  0029FC  6E1E               	movwf	??_floorf^0,c
  5881  0029FE  342B               	rlcf	(floorf@u+1)^0,w,c
  5882  002A00  6E1F               	movwf	(??_floorf+1)^0,c
  5883  002A02  342C               	rlcf	(floorf@u+2)^0,w,c
  5884  002A04  6E20               	movwf	(??_floorf+2)^0,c
  5885  002A06  342D               	rlcf	(floorf@u+3)^0,w,c
  5886  002A08  6E21               	movwf	(??_floorf+3)^0,c
  5887  002A0A  501E               	movf	??_floorf^0,w,c
  5888  002A0C  101F               	iorwf	(??_floorf+1)^0,w,c
  5889  002A0E  1020               	iorwf	(??_floorf+2)^0,w,c
  5890  002A10  1021               	iorwf	(??_floorf+3)^0,w,c
  5891  002A12  B4D8               	btfsc	status,2,c
  5892  002A14  EF0E  F015         	goto	u4091
  5893  002A18  EF10  F015         	goto	u4090
  5894  002A1C                     u4091:
  5895  002A1C  EF18  F015         	goto	l3641
  5896  002A20                     u4090:
  5897  002A20  0E00               	movlw	0
  5898  002A22  6E2A               	movwf	floorf@u^0,c
  5899  002A24  0E00               	movlw	0
  5900  002A26  6E2B               	movwf	(floorf@u+1)^0,c
  5901  002A28  0E80               	movlw	128
  5902  002A2A  6E2C               	movwf	(floorf@u+2)^0,c
  5903  002A2C  0EBF               	movlw	191
  5904  002A2E  6E2D               	movwf	(floorf@u+3)^0,c
  5905  002A30                     l3641:
  5906  002A30  C02A  F01A         	movff	floorf@u,?_floorf
  5907  002A34  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  5908  002A38  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  5909  002A3C  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  5910  002A40                     l1081:
  5911  002A40  0012               	return		;funcret
  5912  002A42                     __end_of_floorf:
  5913                           	callstack 0
  5914                           
  5915 ;; *************** function ___fpclassifyf *****************
  5916 ;; Defined at:
  5917 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  5918 ;; Parameters:    Size  Location     Type
  5919 ;;  x               4    0[COMRAM] float 
  5920 ;; Auto vars:     Size  Location     Type
  5921 ;;  u               4   10[COMRAM] struct .
  5922 ;;  e               2    8[COMRAM] int 
  5923 ;; Return value:  Size  Location     Type
  5924 ;;                  2    0[COMRAM] int 
  5925 ;; Registers used:
  5926 ;;		wreg, status,2, status,0
  5927 ;; Tracked objects:
  5928 ;;		On entry : 0/0
  5929 ;;		On exit  : 0/0
  5930 ;;		Unchanged: 0/0
  5931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5932 ;;      Params:         4       0       0       0       0       0       0
  5933 ;;      Locals:         6       0       0       0       0       0       0
  5934 ;;      Temps:          4       0       0       0       0       0       0
  5935 ;;      Totals:        14       0       0       0       0       0       0
  5936 ;;Total ram usage:       14 bytes
  5937 ;; Hardware stack levels used:    1
  5938 ;; This function calls:
  5939 ;;		Nothing
  5940 ;; This function is called by:
  5941 ;;		_efgtoa
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           	psect	text19
  5946  002F92                     __ptext19:
  5947                           	callstack 0
  5948  002F92                     ___fpclassifyf:
  5949                           	callstack 25
  5950  002F92  C0EA  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5951  002F96  C0EB  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5952  002F9A  C0EC  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5953  002F9E  C0ED  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5954  002FA2  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5955  002FA6  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5956  002FAA  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5957  002FAE  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5958  002FB2  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5959  002FB6  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5960  002FBA  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5961  002FBE  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5962  002FC2  0E18               	movlw	24
  5963  002FC4  EFE9  F017         	goto	u3880
  5964  002FC8                     u3885:
  5965  002FC8  90D8               	bcf	status,0,c
  5966  002FCA  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5967  002FCC  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5968  002FCE  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5969  002FD0  3205               	rrcf	??___fpclassifyf^0,f,c
  5970  002FD2                     u3880:
  5971  002FD2  2EE8               	decfsz	wreg,f,c
  5972  002FD4  EFE4  F017         	goto	u3885
  5973  002FD8  5005               	movf	??___fpclassifyf^0,w,c
  5974  002FDA  6E09               	movwf	___fpclassifyf@e^0,c
  5975  002FDC  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5976  002FDE  5009               	movf	___fpclassifyf@e^0,w,c
  5977  002FE0  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5978  002FE2  A4D8               	btfss	status,2,c
  5979  002FE4  EFF6  F017         	goto	u3891
  5980  002FE8  EFF8  F017         	goto	u3890
  5981  002FEC                     u3891:
  5982  002FEC  EF18  F018         	goto	l3593
  5983  002FF0                     u3890:
  5984  002FF0  90D8               	bcf	status,0,c
  5985  002FF2  340B               	rlcf	___fpclassifyf@u^0,w,c
  5986  002FF4  6E05               	movwf	??___fpclassifyf^0,c
  5987  002FF6  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5988  002FF8  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5989  002FFA  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5990  002FFC  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5991  002FFE  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5992  003000  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5993  003002  5005               	movf	??___fpclassifyf^0,w,c
  5994  003004  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5995  003006  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5996  003008  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5997  00300A  A4D8               	btfss	status,2,c
  5998  00300C  EF0A  F018         	goto	u3901
  5999  003010  EF0C  F018         	goto	u3900
  6000  003014                     u3901:
  6001  003014  EF12  F018         	goto	l3589
  6002  003018                     u3900:
  6003  003018  0E00               	movlw	0
  6004  00301A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6005  00301C  0E02               	movlw	2
  6006  00301E  6E01               	movwf	?___fpclassifyf^0,c
  6007  003020  EF47  F018         	goto	l1043
  6008  003024                     l3589:
  6009  003024  0E00               	movlw	0
  6010  003026  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6011  003028  0E03               	movlw	3
  6012  00302A  6E01               	movwf	?___fpclassifyf^0,c
  6013  00302C  EF47  F018         	goto	l1043
  6014  003030                     l3593:
  6015  003030  2809               	incf	___fpclassifyf@e^0,w,c
  6016  003032  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6017  003034  A4D8               	btfss	status,2,c
  6018  003036  EF1F  F018         	goto	u3911
  6019  00303A  EF21  F018         	goto	u3910
  6020  00303E                     u3911:
  6021  00303E  EF43  F018         	goto	l3599
  6022  003042                     u3910:
  6023  003042  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6024  003046  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6025  00304A  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6026  00304E  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6027  003052  0E09               	movlw	9
  6028  003054                     u3925:
  6029  003054  90D8               	bcf	status,0,c
  6030  003056  3605               	rlcf	??___fpclassifyf^0,f,c
  6031  003058  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  6032  00305A  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  6033  00305C  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  6034  00305E  2EE8               	decfsz	wreg,f,c
  6035  003060  EF2A  F018         	goto	u3925
  6036  003064  5005               	movf	??___fpclassifyf^0,w,c
  6037  003066  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6038  003068  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6039  00306A  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6040  00306C  B4D8               	btfsc	status,2,c
  6041  00306E  EF3B  F018         	goto	u3931
  6042  003072  EF3E  F018         	goto	u3930
  6043  003076                     u3931:
  6044  003076  0E01               	movlw	1
  6045  003078  EF3F  F018         	goto	u3940
  6046  00307C                     u3930:
  6047  00307C  0E00               	movlw	0
  6048  00307E                     u3940:
  6049  00307E  6E01               	movwf	?___fpclassifyf^0,c
  6050  003080  6A02               	clrf	(?___fpclassifyf+1)^0,c
  6051  003082  EF47  F018         	goto	l1043
  6052  003086                     l3599:
  6053  003086  0E00               	movlw	0
  6054  003088  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6055  00308A  0E04               	movlw	4
  6056  00308C  6E01               	movwf	?___fpclassifyf^0,c
  6057  00308E                     l1043:
  6058  00308E  0012               	return		;funcret
  6059  003090                     __end_of___fpclassifyf:
  6060                           	callstack 0
  6061                           
  6062 ;; *************** function ___fltol *****************
  6063 ;; Defined at:
  6064 ;;		line 43 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\fltol.c"
  6065 ;; Parameters:    Size  Location     Type
  6066 ;;  f1              4   25[COMRAM] int 
  6067 ;; Auto vars:     Size  Location     Type
  6068 ;;  exp1            1   34[COMRAM] unsigned char 
  6069 ;;  sign1           1   33[COMRAM] unsigned char 
  6070 ;; Return value:  Size  Location     Type
  6071 ;;                  4   25[COMRAM] long 
  6072 ;; Registers used:
  6073 ;;		wreg, status,2, status,0
  6074 ;; Tracked objects:
  6075 ;;		On entry : 0/0
  6076 ;;		On exit  : 0/0
  6077 ;;		Unchanged: 0/0
  6078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6079 ;;      Params:         4       0       0       0       0       0       0
  6080 ;;      Locals:         2       0       0       0       0       0       0
  6081 ;;      Temps:          4       0       0       0       0       0       0
  6082 ;;      Totals:        10       0       0       0       0       0       0
  6083 ;;Total ram usage:       10 bytes
  6084 ;; Hardware stack levels used:    1
  6085 ;; This function calls:
  6086 ;;		Nothing
  6087 ;; This function is called by:
  6088 ;;		_encher_tanque
  6089 ;;		_esvaziar_tanque
  6090 ;;		_efgtoa
  6091 ;; This function uses a non-reentrant model
  6092 ;;
  6093                           
  6094                           	psect	text20
  6095  002D88                     __ptext20:
  6096                           	callstack 0
  6097  002D88                     ___fltol:
  6098                           	callstack 25
  6099  002D88  341C               	rlcf	(___fltol@f1+2)^0,w,c
  6100  002D8A  341D               	rlcf	(___fltol@f1+3)^0,w,c
  6101  002D8C  6E23               	movwf	___fltol@exp1^0,c
  6102  002D8E  5023               	movf	___fltol@exp1^0,w,c
  6103  002D90  A4D8               	btfss	status,2,c
  6104  002D92  EFCD  F016         	goto	u3771
  6105  002D96  EFCF  F016         	goto	u3770
  6106  002D9A                     u3771:
  6107  002D9A  EFD9  F016         	goto	l3521
  6108  002D9E                     u3770:
  6109  002D9E                     l3517:
  6110  002D9E  0E00               	movlw	0
  6111  002DA0  6E1A               	movwf	?___fltol^0,c
  6112  002DA2  0E00               	movlw	0
  6113  002DA4  6E1B               	movwf	(?___fltol+1)^0,c
  6114  002DA6  0E00               	movlw	0
  6115  002DA8  6E1C               	movwf	(?___fltol+2)^0,c
  6116  002DAA  0E00               	movlw	0
  6117  002DAC  6E1D               	movwf	(?___fltol+3)^0,c
  6118  002DAE  EF46  F017         	goto	l484
  6119  002DB2                     l3521:
  6120  002DB2  C01A  F01E         	movff	___fltol@f1,??___fltol
  6121  002DB6  C01B  F01F         	movff	___fltol@f1+1,??___fltol+1
  6122  002DBA  C01C  F020         	movff	___fltol@f1+2,??___fltol+2
  6123  002DBE  C01D  F021         	movff	___fltol@f1+3,??___fltol+3
  6124  002DC2  0E20               	movlw	32
  6125  002DC4  EFE9  F016         	goto	u3780
  6126  002DC8                     u3785:
  6127  002DC8  90D8               	bcf	status,0,c
  6128  002DCA  3221               	rrcf	(??___fltol+3)^0,f,c
  6129  002DCC  3220               	rrcf	(??___fltol+2)^0,f,c
  6130  002DCE  321F               	rrcf	(??___fltol+1)^0,f,c
  6131  002DD0  321E               	rrcf	??___fltol^0,f,c
  6132  002DD2                     u3780:
  6133  002DD2  2EE8               	decfsz	wreg,f,c
  6134  002DD4  EFE4  F016         	goto	u3785
  6135  002DD8  501E               	movf	??___fltol^0,w,c
  6136  002DDA  6E22               	movwf	___fltol@sign1^0,c
  6137  002DDC  8E1C               	bsf	(___fltol@f1+2)^0,7,c
  6138  002DDE  0EFF               	movlw	255
  6139  002DE0  161A               	andwf	___fltol@f1^0,f,c
  6140  002DE2  0EFF               	movlw	255
  6141  002DE4  161B               	andwf	(___fltol@f1+1)^0,f,c
  6142  002DE6  0EFF               	movlw	255
  6143  002DE8  161C               	andwf	(___fltol@f1+2)^0,f,c
  6144  002DEA  0E00               	movlw	0
  6145  002DEC  161D               	andwf	(___fltol@f1+3)^0,f,c
  6146  002DEE  0E96               	movlw	150
  6147  002DF0  5E23               	subwf	___fltol@exp1^0,f,c
  6148  002DF2  BE23               	btfsc	___fltol@exp1^0,7,c
  6149  002DF4  EF00  F017         	goto	u3790
  6150  002DF8  EFFE  F016         	goto	u3791
  6151  002DFC                     u3791:
  6152  002DFC  EF16  F017         	goto	l3541
  6153  002E00                     u3790:
  6154  002E00  5023               	movf	___fltol@exp1^0,w,c
  6155  002E02  0A80               	xorlw	128
  6156  002E04  0F97               	addlw	151
  6157  002E06  B0D8               	btfsc	status,0,c
  6158  002E08  EF08  F017         	goto	u3801
  6159  002E0C  EF0A  F017         	goto	u3800
  6160  002E10                     u3801:
  6161  002E10  EF0C  F017         	goto	l3537
  6162  002E14                     u3800:
  6163  002E14  EFCF  F016         	goto	l3517
  6164  002E18                     l3537:
  6165  002E18  90D8               	bcf	status,0,c
  6166  002E1A  321D               	rrcf	(___fltol@f1+3)^0,f,c
  6167  002E1C  321C               	rrcf	(___fltol@f1+2)^0,f,c
  6168  002E1E  321B               	rrcf	(___fltol@f1+1)^0,f,c
  6169  002E20  321A               	rrcf	___fltol@f1^0,f,c
  6170  002E22  3E23               	incfsz	___fltol@exp1^0,f,c
  6171  002E24  EF0C  F017         	goto	l3537
  6172  002E28  EF2E  F017         	goto	l3551
  6173  002E2C                     l3541:
  6174  002E2C  0E1F               	movlw	31
  6175  002E2E  6423               	cpfsgt	___fltol@exp1^0,c
  6176  002E30  EF1C  F017         	goto	u3811
  6177  002E34  EF1E  F017         	goto	u3810
  6178  002E38                     u3811:
  6179  002E38  EF26  F017         	goto	l3549
  6180  002E3C                     u3810:
  6181  002E3C  EFCF  F016         	goto	l3517
  6182  002E40                     l3547:
  6183  002E40  90D8               	bcf	status,0,c
  6184  002E42  361A               	rlcf	___fltol@f1^0,f,c
  6185  002E44  361B               	rlcf	(___fltol@f1+1)^0,f,c
  6186  002E46  361C               	rlcf	(___fltol@f1+2)^0,f,c
  6187  002E48  361D               	rlcf	(___fltol@f1+3)^0,f,c
  6188  002E4A  0623               	decf	___fltol@exp1^0,f,c
  6189  002E4C                     l3549:
  6190  002E4C  5023               	movf	___fltol@exp1^0,w,c
  6191  002E4E  A4D8               	btfss	status,2,c
  6192  002E50  EF2C  F017         	goto	u3821
  6193  002E54  EF2E  F017         	goto	u3820
  6194  002E58                     u3821:
  6195  002E58  EF20  F017         	goto	l3547
  6196  002E5C                     u3820:
  6197  002E5C                     l3551:
  6198  002E5C  5022               	movf	___fltol@sign1^0,w,c
  6199  002E5E  B4D8               	btfsc	status,2,c
  6200  002E60  EF34  F017         	goto	u3831
  6201  002E64  EF36  F017         	goto	u3830
  6202  002E68                     u3831:
  6203  002E68  EF3E  F017         	goto	l3555
  6204  002E6C                     u3830:
  6205  002E6C  1E1D               	comf	(___fltol@f1+3)^0,f,c
  6206  002E6E  1E1C               	comf	(___fltol@f1+2)^0,f,c
  6207  002E70  1E1B               	comf	(___fltol@f1+1)^0,f,c
  6208  002E72  6C1A               	negf	___fltol@f1^0,c
  6209  002E74  0E00               	movlw	0
  6210  002E76  221B               	addwfc	(___fltol@f1+1)^0,f,c
  6211  002E78  221C               	addwfc	(___fltol@f1+2)^0,f,c
  6212  002E7A  221D               	addwfc	(___fltol@f1+3)^0,f,c
  6213  002E7C                     l3555:
  6214  002E7C  C01A  F01A         	movff	___fltol@f1,?___fltol
  6215  002E80  C01B  F01B         	movff	___fltol@f1+1,?___fltol+1
  6216  002E84  C01C  F01C         	movff	___fltol@f1+2,?___fltol+2
  6217  002E88  C01D  F01D         	movff	___fltol@f1+3,?___fltol+3
  6218  002E8C                     l484:
  6219  002E8C  0012               	return		;funcret
  6220  002E8E                     __end_of___fltol:
  6221                           	callstack 0
  6222                           
  6223 ;; *************** function ___flsub *****************
  6224 ;; Defined at:
  6225 ;;		line 245 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  6226 ;; Parameters:    Size  Location     Type
  6227 ;;  b               4   25[COMRAM] long 
  6228 ;;  a               4   29[COMRAM] long 
  6229 ;; Auto vars:     Size  Location     Type
  6230 ;;		None
  6231 ;; Return value:  Size  Location     Type
  6232 ;;                  4   25[COMRAM] long 
  6233 ;; Registers used:
  6234 ;;		wreg, status,2, status,0, cstack
  6235 ;; Tracked objects:
  6236 ;;		On entry : 0/0
  6237 ;;		On exit  : 0/0
  6238 ;;		Unchanged: 0/0
  6239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6240 ;;      Params:         8       0       0       0       0       0       0
  6241 ;;      Locals:         0       0       0       0       0       0       0
  6242 ;;      Temps:          0       0       0       0       0       0       0
  6243 ;;      Totals:         8       0       0       0       0       0       0
  6244 ;;Total ram usage:        8 bytes
  6245 ;; Hardware stack levels used:    1
  6246 ;; Hardware stack levels required when called:    1
  6247 ;; This function calls:
  6248 ;;		___fladd
  6249 ;; This function is called by:
  6250 ;;		_esvaziar_tanque
  6251 ;;		_efgtoa
  6252 ;; This function uses a non-reentrant model
  6253 ;;
  6254                           
  6255                           	psect	text21
  6256  003928                     __ptext21:
  6257                           	callstack 0
  6258  003928                     ___flsub:
  6259                           	callstack 24
  6260  003928  0E00               	movlw	0
  6261  00392A  1A1E               	xorwf	___flsub@a^0,f,c
  6262  00392C  0E00               	movlw	0
  6263  00392E  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  6264  003930  0E00               	movlw	0
  6265  003932  1A20               	xorwf	(___flsub@a+2)^0,f,c
  6266  003934  0E80               	movlw	128
  6267  003936  1A21               	xorwf	(___flsub@a+3)^0,f,c
  6268  003938  C01A  F001         	movff	___flsub@b,___fladd@b
  6269  00393C  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  6270  003940  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  6271  003944  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  6272  003948  C01E  F005         	movff	___flsub@a,___fladd@a
  6273  00394C  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  6274  003950  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  6275  003954  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  6276  003958  EC47  F009         	call	___fladd	;wreg free
  6277  00395C  C001  F01A         	movff	?___fladd,?___flsub
  6278  003960  C002  F01B         	movff	?___fladd+1,?___flsub+1
  6279  003964  C003  F01C         	movff	?___fladd+2,?___flsub+2
  6280  003968  C004  F01D         	movff	?___fladd+3,?___flsub+3
  6281  00396C  0012               	return		;funcret
  6282  00396E                     __end_of___flsub:
  6283                           	callstack 0
  6284                           
  6285 ;; *************** function ___fladd *****************
  6286 ;; Defined at:
  6287 ;;		line 10 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  6288 ;; Parameters:    Size  Location     Type
  6289 ;;  b               4    0[COMRAM] long 
  6290 ;;  a               4    4[COMRAM] long 
  6291 ;; Auto vars:     Size  Location     Type
  6292 ;;  grs             1   15[COMRAM] unsigned char 
  6293 ;;  bexp            1   14[COMRAM] unsigned char 
  6294 ;;  aexp            1   13[COMRAM] unsigned char 
  6295 ;;  signs           1   12[COMRAM] unsigned char 
  6296 ;; Return value:  Size  Location     Type
  6297 ;;                  4    0[COMRAM] unsigned char 
  6298 ;; Registers used:
  6299 ;;		wreg, status,2, status,0
  6300 ;; Tracked objects:
  6301 ;;		On entry : 0/0
  6302 ;;		On exit  : 0/0
  6303 ;;		Unchanged: 0/0
  6304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6305 ;;      Params:         8       0       0       0       0       0       0
  6306 ;;      Locals:         4       0       0       0       0       0       0
  6307 ;;      Temps:          4       0       0       0       0       0       0
  6308 ;;      Totals:        16       0       0       0       0       0       0
  6309 ;;Total ram usage:       16 bytes
  6310 ;; Hardware stack levels used:    1
  6311 ;; This function calls:
  6312 ;;		Nothing
  6313 ;; This function is called by:
  6314 ;;		_encher_tanque
  6315 ;;		___flsub
  6316 ;;		_efgtoa
  6317 ;; This function uses a non-reentrant model
  6318 ;;
  6319                           
  6320                           	psect	text22
  6321  00128E                     __ptext22:
  6322                           	callstack 0
  6323  00128E                     ___fladd:
  6324                           	callstack 24
  6325  00128E  5004               	movf	(___fladd@b+3)^0,w,c
  6326  001290  0B80               	andlw	128
  6327  001292  6E0D               	movwf	___fladd@signs^0,c
  6328  001294  5004               	movf	(___fladd@b+3)^0,w,c
  6329  001296  2404               	addwf	(___fladd@b+3)^0,w,c
  6330  001298  6E0F               	movwf	___fladd@bexp^0,c
  6331  00129A  AE03               	btfss	(___fladd@b+2)^0,7,c
  6332  00129C  EF52  F009         	goto	u2711
  6333  0012A0  EF54  F009         	goto	u2710
  6334  0012A4                     u2711:
  6335  0012A4  EF55  F009         	goto	l2891
  6336  0012A8                     u2710:
  6337  0012A8  800F               	bsf	___fladd@bexp^0,0,c
  6338  0012AA                     l2891:
  6339  0012AA  500F               	movf	___fladd@bexp^0,w,c
  6340  0012AC  B4D8               	btfsc	status,2,c
  6341  0012AE  EF5B  F009         	goto	u2721
  6342  0012B2  EF5D  F009         	goto	u2720
  6343  0012B6                     u2721:
  6344  0012B6  EF72  F009         	goto	l2901
  6345  0012BA                     u2720:
  6346  0012BA  280F               	incf	___fladd@bexp^0,w,c
  6347  0012BC  A4D8               	btfss	status,2,c
  6348  0012BE  EF63  F009         	goto	u2731
  6349  0012C2  EF65  F009         	goto	u2730
  6350  0012C6                     u2731:
  6351  0012C6  EF6D  F009         	goto	l2897
  6352  0012CA                     u2730:
  6353  0012CA  0E00               	movlw	0
  6354  0012CC  6E01               	movwf	___fladd@b^0,c
  6355  0012CE  0E00               	movlw	0
  6356  0012D0  6E02               	movwf	(___fladd@b+1)^0,c
  6357  0012D2  0E00               	movlw	0
  6358  0012D4  6E03               	movwf	(___fladd@b+2)^0,c
  6359  0012D6  0E00               	movlw	0
  6360  0012D8  6E04               	movwf	(___fladd@b+3)^0,c
  6361  0012DA                     l2897:
  6362  0012DA  8E03               	bsf	(___fladd@b+2)^0,7,c
  6363  0012DC  0E00               	movlw	0
  6364  0012DE  6E04               	movwf	(___fladd@b+3)^0,c
  6365  0012E0  EF7A  F009         	goto	l2903
  6366  0012E4                     l2901:
  6367  0012E4  0E00               	movlw	0
  6368  0012E6  6E01               	movwf	___fladd@b^0,c
  6369  0012E8  0E00               	movlw	0
  6370  0012EA  6E02               	movwf	(___fladd@b+1)^0,c
  6371  0012EC  0E00               	movlw	0
  6372  0012EE  6E03               	movwf	(___fladd@b+2)^0,c
  6373  0012F0  0E00               	movlw	0
  6374  0012F2  6E04               	movwf	(___fladd@b+3)^0,c
  6375  0012F4                     l2903:
  6376  0012F4  5008               	movf	(___fladd@a+3)^0,w,c
  6377  0012F6  0B80               	andlw	128
  6378  0012F8  6E0E               	movwf	___fladd@aexp^0,c
  6379  0012FA  500D               	movf	___fladd@signs^0,w,c
  6380  0012FC  180E               	xorwf	___fladd@aexp^0,w,c
  6381  0012FE  B4D8               	btfsc	status,2,c
  6382  001300  EF84  F009         	goto	u2741
  6383  001304  EF86  F009         	goto	u2740
  6384  001308                     u2741:
  6385  001308  EF87  F009         	goto	l2909
  6386  00130C                     u2740:
  6387  00130C  8C0D               	bsf	___fladd@signs^0,6,c
  6388  00130E                     l2909:
  6389  00130E  5008               	movf	(___fladd@a+3)^0,w,c
  6390  001310  2408               	addwf	(___fladd@a+3)^0,w,c
  6391  001312  6E0E               	movwf	___fladd@aexp^0,c
  6392  001314  AE07               	btfss	(___fladd@a+2)^0,7,c
  6393  001316  EF8F  F009         	goto	u2751
  6394  00131A  EF91  F009         	goto	u2750
  6395  00131E                     u2751:
  6396  00131E  EF92  F009         	goto	l2915
  6397  001322                     u2750:
  6398  001322  800E               	bsf	___fladd@aexp^0,0,c
  6399  001324                     l2915:
  6400  001324  500E               	movf	___fladd@aexp^0,w,c
  6401  001326  B4D8               	btfsc	status,2,c
  6402  001328  EF98  F009         	goto	u2761
  6403  00132C  EF9A  F009         	goto	u2760
  6404  001330                     u2761:
  6405  001330  EFAF  F009         	goto	l2925
  6406  001334                     u2760:
  6407  001334  280E               	incf	___fladd@aexp^0,w,c
  6408  001336  A4D8               	btfss	status,2,c
  6409  001338  EFA0  F009         	goto	u2771
  6410  00133C  EFA2  F009         	goto	u2770
  6411  001340                     u2771:
  6412  001340  EFAA  F009         	goto	l2921
  6413  001344                     u2770:
  6414  001344  0E00               	movlw	0
  6415  001346  6E05               	movwf	___fladd@a^0,c
  6416  001348  0E00               	movlw	0
  6417  00134A  6E06               	movwf	(___fladd@a+1)^0,c
  6418  00134C  0E00               	movlw	0
  6419  00134E  6E07               	movwf	(___fladd@a+2)^0,c
  6420  001350  0E00               	movlw	0
  6421  001352  6E08               	movwf	(___fladd@a+3)^0,c
  6422  001354                     l2921:
  6423  001354  8E07               	bsf	(___fladd@a+2)^0,7,c
  6424  001356  0E00               	movlw	0
  6425  001358  6E08               	movwf	(___fladd@a+3)^0,c
  6426  00135A  EFB7  F009         	goto	l2927
  6427  00135E                     l2925:
  6428  00135E  0E00               	movlw	0
  6429  001360  6E05               	movwf	___fladd@a^0,c
  6430  001362  0E00               	movlw	0
  6431  001364  6E06               	movwf	(___fladd@a+1)^0,c
  6432  001366  0E00               	movlw	0
  6433  001368  6E07               	movwf	(___fladd@a+2)^0,c
  6434  00136A  0E00               	movlw	0
  6435  00136C  6E08               	movwf	(___fladd@a+3)^0,c
  6436  00136E                     l2927:
  6437  00136E  500F               	movf	___fladd@bexp^0,w,c
  6438  001370  5C0E               	subwf	___fladd@aexp^0,w,c
  6439  001372  B0D8               	btfsc	status,0,c
  6440  001374  EFBE  F009         	goto	u2781
  6441  001378  EFC0  F009         	goto	u2780
  6442  00137C                     u2781:
  6443  00137C  EFE7  F009         	goto	l2963
  6444  001380                     u2780:
  6445  001380  AC0D               	btfss	___fladd@signs^0,6,c
  6446  001382  EFC5  F009         	goto	u2791
  6447  001386  EFC7  F009         	goto	u2790
  6448  00138A                     u2791:
  6449  00138A  EFC9  F009         	goto	l2933
  6450  00138E                     u2790:
  6451  00138E  0E80               	movlw	128
  6452  001390  1A0D               	xorwf	___fladd@signs^0,f,c
  6453  001392                     l2933:
  6454  001392  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  6455  001396  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6456  00139A  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  6457  00139E  C001  F010         	movff	___fladd@b,___fladd@grs
  6458  0013A2  C005  F001         	movff	___fladd@a,___fladd@b
  6459  0013A6  C010  F005         	movff	___fladd@grs,___fladd@a
  6460  0013AA  C002  F010         	movff	___fladd@b+1,___fladd@grs
  6461  0013AE  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  6462  0013B2  C010  F006         	movff	___fladd@grs,___fladd@a+1
  6463  0013B6  C003  F010         	movff	___fladd@b+2,___fladd@grs
  6464  0013BA  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  6465  0013BE  C010  F007         	movff	___fladd@grs,___fladd@a+2
  6466  0013C2  C004  F010         	movff	___fladd@b+3,___fladd@grs
  6467  0013C6  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  6468  0013CA  C010  F008         	movff	___fladd@grs,___fladd@a+3
  6469  0013CE                     l2963:
  6470  0013CE  0E00               	movlw	0
  6471  0013D0  6E10               	movwf	___fladd@grs^0,c
  6472  0013D2  500F               	movf	___fladd@bexp^0,w,c
  6473  0013D4  C00E  F009         	movff	___fladd@aexp,??___fladd
  6474  0013D8  6A0A               	clrf	(??___fladd+1)^0,c
  6475  0013DA  5E09               	subwf	??___fladd^0,f,c
  6476  0013DC  0E00               	movlw	0
  6477  0013DE  5A0A               	subwfb	(??___fladd+1)^0,f,c
  6478  0013E0  BE0A               	btfsc	(??___fladd+1)^0,7,c
  6479  0013E2  EFFC  F009         	goto	u2801
  6480  0013E6  500A               	movf	(??___fladd+1)^0,w,c
  6481  0013E8  E109               	bnz	u2800
  6482  0013EA  0E1A               	movlw	26
  6483  0013EC  5C09               	subwf	??___fladd^0,w,c
  6484  0013EE  A0D8               	btfss	status,0,c
  6485  0013F0  EFFC  F009         	goto	u2801
  6486  0013F4  EFFE  F009         	goto	u2800
  6487  0013F8                     u2801:
  6488  0013F8  EF35  F00A         	goto	l716
  6489  0013FC                     u2800:
  6490  0013FC  5001               	movf	___fladd@b^0,w,c
  6491  0013FE  1002               	iorwf	(___fladd@b+1)^0,w,c
  6492  001400  1003               	iorwf	(___fladd@b+2)^0,w,c
  6493  001402  1004               	iorwf	(___fladd@b+3)^0,w,c
  6494  001404  A4D8               	btfss	status,2,c
  6495  001406  EF07  F00A         	goto	u2811
  6496  00140A  EF0A  F00A         	goto	u2810
  6497  00140E                     u2811:
  6498  00140E  0E01               	movlw	1
  6499  001410  EF0B  F00A         	goto	u2820
  6500  001414                     u2810:
  6501  001414  0E00               	movlw	0
  6502  001416                     u2820:
  6503  001416  6E10               	movwf	___fladd@grs^0,c
  6504  001418  0E00               	movlw	0
  6505  00141A  6E01               	movwf	___fladd@b^0,c
  6506  00141C  0E00               	movlw	0
  6507  00141E  6E02               	movwf	(___fladd@b+1)^0,c
  6508  001420  0E00               	movlw	0
  6509  001422  6E03               	movwf	(___fladd@b+2)^0,c
  6510  001424  0E00               	movlw	0
  6511  001426  6E04               	movwf	(___fladd@b+3)^0,c
  6512  001428  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6513  00142C  EF3E  F00A         	goto	l715
  6514  001430                     l717:
  6515  001430  A010               	btfss	___fladd@grs^0,0,c
  6516  001432  EF1D  F00A         	goto	u2831
  6517  001436  EF1F  F00A         	goto	u2830
  6518  00143A                     u2831:
  6519  00143A  EF25  F00A         	goto	l2975
  6520  00143E                     u2830:
  6521  00143E  90D8               	bcf	status,0,c
  6522  001440  3010               	rrcf	___fladd@grs^0,w,c
  6523  001442  0901               	iorlw	1
  6524  001444  6E10               	movwf	___fladd@grs^0,c
  6525  001446  EF27  F00A         	goto	l2977
  6526  00144A                     l2975:
  6527  00144A  90D8               	bcf	status,0,c
  6528  00144C  3210               	rrcf	___fladd@grs^0,f,c
  6529  00144E                     l2977:
  6530  00144E  A001               	btfss	___fladd@b^0,0,c
  6531  001450  EF2C  F00A         	goto	u2841
  6532  001454  EF2E  F00A         	goto	u2840
  6533  001458                     u2841:
  6534  001458  EF2F  F00A         	goto	l2981
  6535  00145C                     u2840:
  6536  00145C  8E10               	bsf	___fladd@grs^0,7,c
  6537  00145E                     l2981:
  6538  00145E  3404               	rlcf	(___fladd@b+3)^0,w,c
  6539  001460  3204               	rrcf	(___fladd@b+3)^0,f,c
  6540  001462  3203               	rrcf	(___fladd@b+2)^0,f,c
  6541  001464  3202               	rrcf	(___fladd@b+1)^0,f,c
  6542  001466  3201               	rrcf	___fladd@b^0,f,c
  6543  001468  2A0F               	incf	___fladd@bexp^0,f,c
  6544  00146A                     l716:
  6545  00146A  500E               	movf	___fladd@aexp^0,w,c
  6546  00146C  5C0F               	subwf	___fladd@bexp^0,w,c
  6547  00146E  A0D8               	btfss	status,0,c
  6548  001470  EF3C  F00A         	goto	u2851
  6549  001474  EF3E  F00A         	goto	u2850
  6550  001478                     u2851:
  6551  001478  EF18  F00A         	goto	l717
  6552  00147C                     u2850:
  6553  00147C                     l715:
  6554  00147C  BC0D               	btfsc	___fladd@signs^0,6,c
  6555  00147E  EF43  F00A         	goto	u2861
  6556  001482  EF45  F00A         	goto	u2860
  6557  001486                     u2861:
  6558  001486  EF85  F00A         	goto	l3009
  6559  00148A                     u2860:
  6560  00148A  500F               	movf	___fladd@bexp^0,w,c
  6561  00148C  A4D8               	btfss	status,2,c
  6562  00148E  EF4B  F00A         	goto	u2871
  6563  001492  EF4D  F00A         	goto	u2870
  6564  001496                     u2871:
  6565  001496  EF57  F00A         	goto	l2991
  6566  00149A                     u2870:
  6567  00149A  0E00               	movlw	0
  6568  00149C  6E01               	movwf	?___fladd^0,c
  6569  00149E  0E00               	movlw	0
  6570  0014A0  6E02               	movwf	(?___fladd+1)^0,c
  6571  0014A2  0E00               	movlw	0
  6572  0014A4  6E03               	movwf	(?___fladd+2)^0,c
  6573  0014A6  0E00               	movlw	0
  6574  0014A8  6E04               	movwf	(?___fladd+3)^0,c
  6575  0014AA  EFA6  F00B         	goto	l724
  6576  0014AE                     l2991:
  6577  0014AE  5005               	movf	___fladd@a^0,w,c
  6578  0014B0  2601               	addwf	___fladd@b^0,f,c
  6579  0014B2  5006               	movf	(___fladd@a+1)^0,w,c
  6580  0014B4  2202               	addwfc	(___fladd@b+1)^0,f,c
  6581  0014B6  5007               	movf	(___fladd@a+2)^0,w,c
  6582  0014B8  2203               	addwfc	(___fladd@b+2)^0,f,c
  6583  0014BA  5008               	movf	(___fladd@a+3)^0,w,c
  6584  0014BC  2204               	addwfc	(___fladd@b+3)^0,f,c
  6585  0014BE  A004               	btfss	(___fladd@b+3)^0,0,c
  6586  0014C0  EF64  F00A         	goto	u2881
  6587  0014C4  EF66  F00A         	goto	u2880
  6588  0014C8                     u2881:
  6589  0014C8  EF12  F00B         	goto	l3045
  6590  0014CC                     u2880:
  6591  0014CC  A010               	btfss	___fladd@grs^0,0,c
  6592  0014CE  EF6B  F00A         	goto	u2891
  6593  0014D2  EF6D  F00A         	goto	u2890
  6594  0014D6                     u2891:
  6595  0014D6  EF73  F00A         	goto	l2999
  6596  0014DA                     u2890:
  6597  0014DA  90D8               	bcf	status,0,c
  6598  0014DC  3010               	rrcf	___fladd@grs^0,w,c
  6599  0014DE  0901               	iorlw	1
  6600  0014E0  6E10               	movwf	___fladd@grs^0,c
  6601  0014E2  EF75  F00A         	goto	l3001
  6602  0014E6                     l2999:
  6603  0014E6  90D8               	bcf	status,0,c
  6604  0014E8  3210               	rrcf	___fladd@grs^0,f,c
  6605  0014EA                     l3001:
  6606  0014EA  A001               	btfss	___fladd@b^0,0,c
  6607  0014EC  EF7A  F00A         	goto	u2901
  6608  0014F0  EF7C  F00A         	goto	u2900
  6609  0014F4                     u2901:
  6610  0014F4  EF7D  F00A         	goto	l3005
  6611  0014F8                     u2900:
  6612  0014F8  8E10               	bsf	___fladd@grs^0,7,c
  6613  0014FA                     l3005:
  6614  0014FA  3404               	rlcf	(___fladd@b+3)^0,w,c
  6615  0014FC  3204               	rrcf	(___fladd@b+3)^0,f,c
  6616  0014FE  3203               	rrcf	(___fladd@b+2)^0,f,c
  6617  001500  3202               	rrcf	(___fladd@b+1)^0,f,c
  6618  001502  3201               	rrcf	___fladd@b^0,f,c
  6619  001504  2A0F               	incf	___fladd@bexp^0,f,c
  6620  001506  EF12  F00B         	goto	l3045
  6621  00150A                     l3009:
  6622  00150A  5005               	movf	___fladd@a^0,w,c
  6623  00150C  5C01               	subwf	___fladd@b^0,w,c
  6624  00150E  5006               	movf	(___fladd@a+1)^0,w,c
  6625  001510  5802               	subwfb	(___fladd@b+1)^0,w,c
  6626  001512  5007               	movf	(___fladd@a+2)^0,w,c
  6627  001514  5803               	subwfb	(___fladd@b+2)^0,w,c
  6628  001516  5004               	movf	(___fladd@b+3)^0,w,c
  6629  001518  0A80               	xorlw	128
  6630  00151A  6E09               	movwf	??___fladd^0,c
  6631  00151C  5008               	movf	(___fladd@a+3)^0,w,c
  6632  00151E  0A80               	xorlw	128
  6633  001520  5809               	subwfb	??___fladd^0,w,c
  6634  001522  B0D8               	btfsc	status,0,c
  6635  001524  EF96  F00A         	goto	u2911
  6636  001528  EF98  F00A         	goto	u2910
  6637  00152C                     u2911:
  6638  00152C  EFC3  F00A         	goto	l3019
  6639  001530                     u2910:
  6640  001530  5001               	movf	___fladd@b^0,w,c
  6641  001532  5C05               	subwf	___fladd@a^0,w,c
  6642  001534  6E09               	movwf	??___fladd^0,c
  6643  001536  5002               	movf	(___fladd@b+1)^0,w,c
  6644  001538  5806               	subwfb	(___fladd@a+1)^0,w,c
  6645  00153A  6E0A               	movwf	(??___fladd+1)^0,c
  6646  00153C  5003               	movf	(___fladd@b+2)^0,w,c
  6647  00153E  5807               	subwfb	(___fladd@a+2)^0,w,c
  6648  001540  6E0B               	movwf	(??___fladd+2)^0,c
  6649  001542  5004               	movf	(___fladd@b+3)^0,w,c
  6650  001544  5808               	subwfb	(___fladd@a+3)^0,w,c
  6651  001546  6E0C               	movwf	(??___fladd+3)^0,c
  6652  001548  0EFF               	movlw	255
  6653  00154A  2409               	addwf	??___fladd^0,w,c
  6654  00154C  6E01               	movwf	___fladd@b^0,c
  6655  00154E  0EFF               	movlw	255
  6656  001550  200A               	addwfc	(??___fladd+1)^0,w,c
  6657  001552  6E02               	movwf	(___fladd@b+1)^0,c
  6658  001554  0EFF               	movlw	255
  6659  001556  200B               	addwfc	(??___fladd+2)^0,w,c
  6660  001558  6E03               	movwf	(___fladd@b+2)^0,c
  6661  00155A  0EFF               	movlw	255
  6662  00155C  200C               	addwfc	(??___fladd+3)^0,w,c
  6663  00155E  6E04               	movwf	(___fladd@b+3)^0,c
  6664  001560  0E80               	movlw	128
  6665  001562  1A0D               	xorwf	___fladd@signs^0,f,c
  6666  001564  6C10               	negf	___fladd@grs^0,c
  6667  001566  5010               	movf	___fladd@grs^0,w,c
  6668  001568  A4D8               	btfss	status,2,c
  6669  00156A  EFB9  F00A         	goto	u2921
  6670  00156E  EFBB  F00A         	goto	u2920
  6671  001572                     u2921:
  6672  001572  EFCB  F00A         	goto	l732
  6673  001576                     u2920:
  6674  001576  0E01               	movlw	1
  6675  001578  2601               	addwf	___fladd@b^0,f,c
  6676  00157A  0E00               	movlw	0
  6677  00157C  2202               	addwfc	(___fladd@b+1)^0,f,c
  6678  00157E  2203               	addwfc	(___fladd@b+2)^0,f,c
  6679  001580  2204               	addwfc	(___fladd@b+3)^0,f,c
  6680  001582  EFCB  F00A         	goto	l732
  6681  001586                     l3019:
  6682  001586  5005               	movf	___fladd@a^0,w,c
  6683  001588  5E01               	subwf	___fladd@b^0,f,c
  6684  00158A  5006               	movf	(___fladd@a+1)^0,w,c
  6685  00158C  5A02               	subwfb	(___fladd@b+1)^0,f,c
  6686  00158E  5007               	movf	(___fladd@a+2)^0,w,c
  6687  001590  5A03               	subwfb	(___fladd@b+2)^0,f,c
  6688  001592  5008               	movf	(___fladd@a+3)^0,w,c
  6689  001594  5A04               	subwfb	(___fladd@b+3)^0,f,c
  6690  001596                     l732:
  6691  001596  5001               	movf	___fladd@b^0,w,c
  6692  001598  1002               	iorwf	(___fladd@b+1)^0,w,c
  6693  00159A  1003               	iorwf	(___fladd@b+2)^0,w,c
  6694  00159C  1004               	iorwf	(___fladd@b+3)^0,w,c
  6695  00159E  A4D8               	btfss	status,2,c
  6696  0015A0  EFD4  F00A         	goto	u2931
  6697  0015A4  EFD6  F00A         	goto	u2930
  6698  0015A8                     u2931:
  6699  0015A8  EF0B  F00B         	goto	l3043
  6700  0015AC                     u2930:
  6701  0015AC  5010               	movf	___fladd@grs^0,w,c
  6702  0015AE  A4D8               	btfss	status,2,c
  6703  0015B0  EFDC  F00A         	goto	u2941
  6704  0015B4  EFDE  F00A         	goto	u2940
  6705  0015B8                     u2941:
  6706  0015B8  EF0B  F00B         	goto	l3043
  6707  0015BC                     u2940:
  6708  0015BC  0E00               	movlw	0
  6709  0015BE  6E01               	movwf	?___fladd^0,c
  6710  0015C0  0E00               	movlw	0
  6711  0015C2  6E02               	movwf	(?___fladd+1)^0,c
  6712  0015C4  0E00               	movlw	0
  6713  0015C6  6E03               	movwf	(?___fladd+2)^0,c
  6714  0015C8  0E00               	movlw	0
  6715  0015CA  6E04               	movwf	(?___fladd+3)^0,c
  6716  0015CC  EFA6  F00B         	goto	l724
  6717  0015D0                     l3027:
  6718  0015D0  90D8               	bcf	status,0,c
  6719  0015D2  3601               	rlcf	___fladd@b^0,f,c
  6720  0015D4  3602               	rlcf	(___fladd@b+1)^0,f,c
  6721  0015D6  3603               	rlcf	(___fladd@b+2)^0,f,c
  6722  0015D8  3604               	rlcf	(___fladd@b+3)^0,f,c
  6723  0015DA  AE10               	btfss	___fladd@grs^0,7,c
  6724  0015DC  EFF2  F00A         	goto	u2951
  6725  0015E0  EFF4  F00A         	goto	u2950
  6726  0015E4                     u2951:
  6727  0015E4  EFF5  F00A         	goto	l3033
  6728  0015E8                     u2950:
  6729  0015E8  8001               	bsf	___fladd@b^0,0,c
  6730  0015EA                     l3033:
  6731  0015EA  A010               	btfss	___fladd@grs^0,0,c
  6732  0015EC  EFFA  F00A         	goto	u2961
  6733  0015F0  EFFC  F00A         	goto	u2960
  6734  0015F4                     u2961:
  6735  0015F4  EF00  F00B         	goto	l3037
  6736  0015F8                     u2960:
  6737  0015F8  80D8               	bsf	status,0,c
  6738  0015FA  3610               	rlcf	___fladd@grs^0,f,c
  6739  0015FC  EF02  F00B         	goto	l3039
  6740  001600                     l3037:
  6741  001600  90D8               	bcf	status,0,c
  6742  001602  3610               	rlcf	___fladd@grs^0,f,c
  6743  001604                     l3039:
  6744  001604  500F               	movf	___fladd@bexp^0,w,c
  6745  001606  B4D8               	btfsc	status,2,c
  6746  001608  EF08  F00B         	goto	u2971
  6747  00160C  EF0A  F00B         	goto	u2970
  6748  001610                     u2971:
  6749  001610  EF0B  F00B         	goto	l3043
  6750  001614                     u2970:
  6751  001614  060F               	decf	___fladd@bexp^0,f,c
  6752  001616                     l3043:
  6753  001616  AE03               	btfss	(___fladd@b+2)^0,7,c
  6754  001618  EF10  F00B         	goto	u2981
  6755  00161C  EF12  F00B         	goto	u2980
  6756  001620                     u2981:
  6757  001620  EFE8  F00A         	goto	l3027
  6758  001624                     u2980:
  6759  001624                     l3045:
  6760  001624  0E00               	movlw	0
  6761  001626  6E0E               	movwf	___fladd@aexp^0,c
  6762  001628  AE10               	btfss	___fladd@grs^0,7,c
  6763  00162A  EF19  F00B         	goto	u2991
  6764  00162E  EF1B  F00B         	goto	u2990
  6765  001632                     u2991:
  6766  001632  EF33  F00B         	goto	l741
  6767  001636                     u2990:
  6768  001636  C010  F009         	movff	___fladd@grs,??___fladd
  6769  00163A  0E7F               	movlw	127
  6770  00163C  1609               	andwf	??___fladd^0,f,c
  6771  00163E  B4D8               	btfsc	status,2,c
  6772  001640  EF24  F00B         	goto	u3001
  6773  001644  EF26  F00B         	goto	u3000
  6774  001648                     u3001:
  6775  001648  EF2A  F00B         	goto	l742
  6776  00164C                     u3000:
  6777  00164C                     l3051:
  6778  00164C  0E01               	movlw	1
  6779  00164E  6E0E               	movwf	___fladd@aexp^0,c
  6780  001650  EF33  F00B         	goto	l741
  6781  001654                     l742:
  6782  001654  A001               	btfss	___fladd@b^0,0,c
  6783  001656  EF2F  F00B         	goto	u3011
  6784  00165A  EF31  F00B         	goto	u3010
  6785  00165E                     u3011:
  6786  00165E  EF33  F00B         	goto	l741
  6787  001662                     u3010:
  6788  001662  EF26  F00B         	goto	l3051
  6789  001666                     l741:
  6790  001666  500E               	movf	___fladd@aexp^0,w,c
  6791  001668  B4D8               	btfsc	status,2,c
  6792  00166A  EF39  F00B         	goto	u3021
  6793  00166E  EF3B  F00B         	goto	u3020
  6794  001672                     u3021:
  6795  001672  EF66  F00B         	goto	l3063
  6796  001676                     u3020:
  6797  001676  0E01               	movlw	1
  6798  001678  2601               	addwf	___fladd@b^0,f,c
  6799  00167A  0E00               	movlw	0
  6800  00167C  2202               	addwfc	(___fladd@b+1)^0,f,c
  6801  00167E  2203               	addwfc	(___fladd@b+2)^0,f,c
  6802  001680  2204               	addwfc	(___fladd@b+3)^0,f,c
  6803  001682  A004               	btfss	(___fladd@b+3)^0,0,c
  6804  001684  EF46  F00B         	goto	u3031
  6805  001688  EF48  F00B         	goto	u3030
  6806  00168C                     u3031:
  6807  00168C  EF66  F00B         	goto	l3063
  6808  001690                     u3030:
  6809  001690  C001  F009         	movff	___fladd@b,??___fladd
  6810  001694  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6811  001698  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6812  00169C  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6813  0016A0  340C               	rlcf	(??___fladd+3)^0,w,c
  6814  0016A2  320C               	rrcf	(??___fladd+3)^0,f,c
  6815  0016A4  320B               	rrcf	(??___fladd+2)^0,f,c
  6816  0016A6  320A               	rrcf	(??___fladd+1)^0,f,c
  6817  0016A8  3209               	rrcf	??___fladd^0,f,c
  6818  0016AA  C009  F001         	movff	??___fladd,___fladd@b
  6819  0016AE  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6820  0016B2  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6821  0016B6  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6822  0016BA  280F               	incf	___fladd@bexp^0,w,c
  6823  0016BC  B4D8               	btfsc	status,2,c
  6824  0016BE  EF63  F00B         	goto	u3041
  6825  0016C2  EF65  F00B         	goto	u3040
  6826  0016C6                     u3041:
  6827  0016C6  EF66  F00B         	goto	l3063
  6828  0016CA                     u3040:
  6829  0016CA  2A0F               	incf	___fladd@bexp^0,f,c
  6830  0016CC                     l3063:
  6831  0016CC  280F               	incf	___fladd@bexp^0,w,c
  6832  0016CE  B4D8               	btfsc	status,2,c
  6833  0016D0  EF6C  F00B         	goto	u3051
  6834  0016D4  EF6E  F00B         	goto	u3050
  6835  0016D8                     u3051:
  6836  0016D8  EF76  F00B         	goto	l3067
  6837  0016DC                     u3050:
  6838  0016DC  500F               	movf	___fladd@bexp^0,w,c
  6839  0016DE  A4D8               	btfss	status,2,c
  6840  0016E0  EF74  F00B         	goto	u3061
  6841  0016E4  EF76  F00B         	goto	u3060
  6842  0016E8                     u3061:
  6843  0016E8  EF88  F00B         	goto	l3071
  6844  0016EC                     u3060:
  6845  0016EC                     l3067:
  6846  0016EC  0E00               	movlw	0
  6847  0016EE  6E01               	movwf	___fladd@b^0,c
  6848  0016F0  0E00               	movlw	0
  6849  0016F2  6E02               	movwf	(___fladd@b+1)^0,c
  6850  0016F4  0E00               	movlw	0
  6851  0016F6  6E03               	movwf	(___fladd@b+2)^0,c
  6852  0016F8  0E00               	movlw	0
  6853  0016FA  6E04               	movwf	(___fladd@b+3)^0,c
  6854  0016FC  500F               	movf	___fladd@bexp^0,w,c
  6855  0016FE  A4D8               	btfss	status,2,c
  6856  001700  EF84  F00B         	goto	u3071
  6857  001704  EF86  F00B         	goto	u3070
  6858  001708                     u3071:
  6859  001708  EF88  F00B         	goto	l3071
  6860  00170C                     u3070:
  6861  00170C  0E00               	movlw	0
  6862  00170E  6E0D               	movwf	___fladd@signs^0,c
  6863  001710                     l3071:
  6864  001710  A00F               	btfss	___fladd@bexp^0,0,c
  6865  001712  EF8D  F00B         	goto	u3081
  6866  001716  EF8F  F00B         	goto	u3080
  6867  00171A                     u3081:
  6868  00171A  EF92  F00B         	goto	l3075
  6869  00171E                     u3080:
  6870  00171E  8E03               	bsf	(___fladd@b+2)^0,7,c
  6871  001720  EF93  F00B         	goto	l3077
  6872  001724                     l3075:
  6873  001724  9E03               	bcf	(___fladd@b+2)^0,7,c
  6874  001726                     l3077:
  6875  001726  90D8               	bcf	status,0,c
  6876  001728  300F               	rrcf	___fladd@bexp^0,w,c
  6877  00172A  6E04               	movwf	(___fladd@b+3)^0,c
  6878  00172C  AE0D               	btfss	___fladd@signs^0,7,c
  6879  00172E  EF9B  F00B         	goto	u3091
  6880  001732  EF9D  F00B         	goto	u3090
  6881  001736                     u3091:
  6882  001736  EF9E  F00B         	goto	l3083
  6883  00173A                     u3090:
  6884  00173A  8E04               	bsf	(___fladd@b+3)^0,7,c
  6885  00173C                     l3083:
  6886  00173C  C001  F001         	movff	___fladd@b,?___fladd
  6887  001740  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6888  001744  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6889  001748  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6890  00174C                     l724:
  6891  00174C  0012               	return		;funcret
  6892  00174E                     __end_of___fladd:
  6893                           	callstack 0
  6894                           
  6895 ;; *************** function ___flneg *****************
  6896 ;; Defined at:
  6897 ;;		line 15 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\flneg.c"
  6898 ;; Parameters:    Size  Location     Type
  6899 ;;  f1              4    0[COMRAM] unsigned char 
  6900 ;; Auto vars:     Size  Location     Type
  6901 ;;		None
  6902 ;; Return value:  Size  Location     Type
  6903 ;;                  4    0[COMRAM] unsigned char 
  6904 ;; Registers used:
  6905 ;;		wreg, status,2, status,0
  6906 ;; Tracked objects:
  6907 ;;		On entry : 0/0
  6908 ;;		On exit  : 0/0
  6909 ;;		Unchanged: 0/0
  6910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6911 ;;      Params:         4       0       0       0       0       0       0
  6912 ;;      Locals:         0       0       0       0       0       0       0
  6913 ;;      Temps:          0       0       0       0       0       0       0
  6914 ;;      Totals:         4       0       0       0       0       0       0
  6915 ;;Total ram usage:        4 bytes
  6916 ;; Hardware stack levels used:    1
  6917 ;; This function calls:
  6918 ;;		Nothing
  6919 ;; This function is called by:
  6920 ;;		_efgtoa
  6921 ;; This function uses a non-reentrant model
  6922 ;;
  6923                           
  6924                           	psect	text23
  6925  0039EA                     __ptext23:
  6926                           	callstack 0
  6927  0039EA                     ___flneg:
  6928                           	callstack 25
  6929  0039EA  5001               	movf	___flneg@f1^0,w,c
  6930  0039EC  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6931  0039EE  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6932  0039F0  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6933  0039F2  B4D8               	btfsc	status,2,c
  6934  0039F4  EFFE  F01C         	goto	u3761
  6935  0039F8  EF00  F01D         	goto	u3760
  6936  0039FC                     u3761:
  6937  0039FC  EF08  F01D         	goto	l3511
  6938  003A00                     u3760:
  6939  003A00  0E00               	movlw	0
  6940  003A02  1A01               	xorwf	___flneg@f1^0,f,c
  6941  003A04  0E00               	movlw	0
  6942  003A06  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6943  003A08  0E00               	movlw	0
  6944  003A0A  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6945  003A0C  0E80               	movlw	128
  6946  003A0E  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6947  003A10                     l3511:
  6948  003A10  C001  F001         	movff	___flneg@f1,?___flneg
  6949  003A14  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6950  003A18  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6951  003A1C  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6952  003A20  0012               	return		;funcret
  6953  003A22                     __end_of___flneg:
  6954                           	callstack 0
  6955                           
  6956 ;; *************** function ___flmul *****************
  6957 ;; Defined at:
  6958 ;;		line 8 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
  6959 ;; Parameters:    Size  Location     Type
  6960 ;;  b               4    0[COMRAM] unsigned char 
  6961 ;;  a               4    4[COMRAM] unsigned char 
  6962 ;; Auto vars:     Size  Location     Type
  6963 ;;  prod            4   19[COMRAM] struct .
  6964 ;;  grs             4   13[COMRAM] unsigned long 
  6965 ;;  temp            2   23[COMRAM] struct .
  6966 ;;  bexp            1   18[COMRAM] unsigned char 
  6967 ;;  aexp            1   17[COMRAM] unsigned char 
  6968 ;;  sign            1   12[COMRAM] unsigned char 
  6969 ;; Return value:  Size  Location     Type
  6970 ;;                  4    0[COMRAM] unsigned char 
  6971 ;; Registers used:
  6972 ;;		wreg, status,2, status,0, prodl, prodh
  6973 ;; Tracked objects:
  6974 ;;		On entry : 0/0
  6975 ;;		On exit  : 0/0
  6976 ;;		Unchanged: 0/0
  6977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6978 ;;      Params:         8       0       0       0       0       0       0
  6979 ;;      Locals:        13       0       0       0       0       0       0
  6980 ;;      Temps:          4       0       0       0       0       0       0
  6981 ;;      Totals:        25       0       0       0       0       0       0
  6982 ;;Total ram usage:       25 bytes
  6983 ;; Hardware stack levels used:    1
  6984 ;; This function calls:
  6985 ;;		Nothing
  6986 ;; This function is called by:
  6987 ;;		_efgtoa
  6988 ;; This function uses a non-reentrant model
  6989 ;;
  6990                           
  6991                           	psect	text24
  6992  001BB8                     __ptext24:
  6993                           	callstack 0
  6994  001BB8                     ___flmul:
  6995                           	callstack 25
  6996  001BB8  5004               	movf	(___flmul@b+3)^0,w,c
  6997  001BBA  0B80               	andlw	128
  6998  001BBC  6E0D               	movwf	___flmul@sign^0,c
  6999  001BBE  5004               	movf	(___flmul@b+3)^0,w,c
  7000  001BC0  2404               	addwf	(___flmul@b+3)^0,w,c
  7001  001BC2  6E13               	movwf	___flmul@bexp^0,c
  7002  001BC4  AE03               	btfss	(___flmul@b+2)^0,7,c
  7003  001BC6  EFE7  F00D         	goto	u3371
  7004  001BCA  EFE9  F00D         	goto	u3370
  7005  001BCE                     u3371:
  7006  001BCE  EFEA  F00D         	goto	l3259
  7007  001BD2                     u3370:
  7008  001BD2  8013               	bsf	___flmul@bexp^0,0,c
  7009  001BD4                     l3259:
  7010  001BD4  5013               	movf	___flmul@bexp^0,w,c
  7011  001BD6  B4D8               	btfsc	status,2,c
  7012  001BD8  EFF0  F00D         	goto	u3381
  7013  001BDC  EFF2  F00D         	goto	u3380
  7014  001BE0                     u3381:
  7015  001BE0  EF05  F00E         	goto	l3267
  7016  001BE4                     u3380:
  7017  001BE4  2813               	incf	___flmul@bexp^0,w,c
  7018  001BE6  A4D8               	btfss	status,2,c
  7019  001BE8  EFF8  F00D         	goto	u3391
  7020  001BEC  EFFA  F00D         	goto	u3390
  7021  001BF0                     u3391:
  7022  001BF0  EF02  F00E         	goto	l3265
  7023  001BF4                     u3390:
  7024  001BF4  0E00               	movlw	0
  7025  001BF6  6E01               	movwf	___flmul@b^0,c
  7026  001BF8  0E00               	movlw	0
  7027  001BFA  6E02               	movwf	(___flmul@b+1)^0,c
  7028  001BFC  0E00               	movlw	0
  7029  001BFE  6E03               	movwf	(___flmul@b+2)^0,c
  7030  001C00  0E00               	movlw	0
  7031  001C02  6E04               	movwf	(___flmul@b+3)^0,c
  7032  001C04                     l3265:
  7033  001C04  8E03               	bsf	(___flmul@b+2)^0,7,c
  7034  001C06  EF0D  F00E         	goto	l3269
  7035  001C0A                     l3267:
  7036  001C0A  0E00               	movlw	0
  7037  001C0C  6E01               	movwf	___flmul@b^0,c
  7038  001C0E  0E00               	movlw	0
  7039  001C10  6E02               	movwf	(___flmul@b+1)^0,c
  7040  001C12  0E00               	movlw	0
  7041  001C14  6E03               	movwf	(___flmul@b+2)^0,c
  7042  001C16  0E00               	movlw	0
  7043  001C18  6E04               	movwf	(___flmul@b+3)^0,c
  7044  001C1A                     l3269:
  7045  001C1A  5008               	movf	(___flmul@a+3)^0,w,c
  7046  001C1C  0B80               	andlw	128
  7047  001C1E  1A0D               	xorwf	___flmul@sign^0,f,c
  7048  001C20  5008               	movf	(___flmul@a+3)^0,w,c
  7049  001C22  2408               	addwf	(___flmul@a+3)^0,w,c
  7050  001C24  6E12               	movwf	___flmul@aexp^0,c
  7051  001C26  AE07               	btfss	(___flmul@a+2)^0,7,c
  7052  001C28  EF18  F00E         	goto	u3401
  7053  001C2C  EF1A  F00E         	goto	u3400
  7054  001C30                     u3401:
  7055  001C30  EF1B  F00E         	goto	l3277
  7056  001C34                     u3400:
  7057  001C34  8012               	bsf	___flmul@aexp^0,0,c
  7058  001C36                     l3277:
  7059  001C36  5012               	movf	___flmul@aexp^0,w,c
  7060  001C38  B4D8               	btfsc	status,2,c
  7061  001C3A  EF21  F00E         	goto	u3411
  7062  001C3E  EF23  F00E         	goto	u3410
  7063  001C42                     u3411:
  7064  001C42  EF36  F00E         	goto	l3285
  7065  001C46                     u3410:
  7066  001C46  2812               	incf	___flmul@aexp^0,w,c
  7067  001C48  A4D8               	btfss	status,2,c
  7068  001C4A  EF29  F00E         	goto	u3421
  7069  001C4E  EF2B  F00E         	goto	u3420
  7070  001C52                     u3421:
  7071  001C52  EF33  F00E         	goto	l3283
  7072  001C56                     u3420:
  7073  001C56  0E00               	movlw	0
  7074  001C58  6E05               	movwf	___flmul@a^0,c
  7075  001C5A  0E00               	movlw	0
  7076  001C5C  6E06               	movwf	(___flmul@a+1)^0,c
  7077  001C5E  0E00               	movlw	0
  7078  001C60  6E07               	movwf	(___flmul@a+2)^0,c
  7079  001C62  0E00               	movlw	0
  7080  001C64  6E08               	movwf	(___flmul@a+3)^0,c
  7081  001C66                     l3283:
  7082  001C66  8E07               	bsf	(___flmul@a+2)^0,7,c
  7083  001C68  EF3E  F00E         	goto	l801
  7084  001C6C                     l3285:
  7085  001C6C  0E00               	movlw	0
  7086  001C6E  6E05               	movwf	___flmul@a^0,c
  7087  001C70  0E00               	movlw	0
  7088  001C72  6E06               	movwf	(___flmul@a+1)^0,c
  7089  001C74  0E00               	movlw	0
  7090  001C76  6E07               	movwf	(___flmul@a+2)^0,c
  7091  001C78  0E00               	movlw	0
  7092  001C7A  6E08               	movwf	(___flmul@a+3)^0,c
  7093  001C7C                     l801:
  7094  001C7C  5012               	movf	___flmul@aexp^0,w,c
  7095  001C7E  B4D8               	btfsc	status,2,c
  7096  001C80  EF44  F00E         	goto	u3431
  7097  001C84  EF46  F00E         	goto	u3430
  7098  001C88                     u3431:
  7099  001C88  EF4E  F00E         	goto	l3289
  7100  001C8C                     u3430:
  7101  001C8C  5013               	movf	___flmul@bexp^0,w,c
  7102  001C8E  A4D8               	btfss	status,2,c
  7103  001C90  EF4C  F00E         	goto	u3441
  7104  001C94  EF4E  F00E         	goto	u3440
  7105  001C98                     u3441:
  7106  001C98  EF58  F00E         	goto	l3293
  7107  001C9C                     u3440:
  7108  001C9C                     l3289:
  7109  001C9C  0E00               	movlw	0
  7110  001C9E  6E01               	movwf	?___flmul^0,c
  7111  001CA0  0E00               	movlw	0
  7112  001CA2  6E02               	movwf	(?___flmul+1)^0,c
  7113  001CA4  0E00               	movlw	0
  7114  001CA6  6E03               	movwf	(?___flmul+2)^0,c
  7115  001CA8  0E00               	movlw	0
  7116  001CAA  6E04               	movwf	(?___flmul+3)^0,c
  7117  001CAC  EFF0  F00F         	goto	l805
  7118  001CB0                     l3293:
  7119  001CB0  5007               	movf	(___flmul@a+2)^0,w,c
  7120  001CB2  0201               	mulwf	___flmul@b^0,c
  7121  001CB4  CFF3 F018          	movff	prodl,___flmul@temp
  7122  001CB8  CFF4 F019          	movff	prodh,___flmul@temp+1
  7123  001CBC  5018               	movf	___flmul@temp^0,w,c
  7124  001CBE  6E0E               	movwf	___flmul@grs^0,c
  7125  001CC0  6A0F               	clrf	(___flmul@grs+1)^0,c
  7126  001CC2  6A10               	clrf	(___flmul@grs+2)^0,c
  7127  001CC4  6A11               	clrf	(___flmul@grs+3)^0,c
  7128  001CC6  5019               	movf	(___flmul@temp+1)^0,w,c
  7129  001CC8  6E14               	movwf	___flmul@prod^0,c
  7130  001CCA  6A15               	clrf	(___flmul@prod+1)^0,c
  7131  001CCC  6A16               	clrf	(___flmul@prod+2)^0,c
  7132  001CCE  6A17               	clrf	(___flmul@prod+3)^0,c
  7133  001CD0  5006               	movf	(___flmul@a+1)^0,w,c
  7134  001CD2  0202               	mulwf	(___flmul@b+1)^0,c
  7135  001CD4  CFF3 F018          	movff	prodl,___flmul@temp
  7136  001CD8  CFF4 F019          	movff	prodh,___flmul@temp+1
  7137  001CDC  5018               	movf	___flmul@temp^0,w,c
  7138  001CDE  260E               	addwf	___flmul@grs^0,f,c
  7139  001CE0  0E00               	movlw	0
  7140  001CE2  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7141  001CE4  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7142  001CE6  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7143  001CE8  5019               	movf	(___flmul@temp+1)^0,w,c
  7144  001CEA  2614               	addwf	___flmul@prod^0,f,c
  7145  001CEC  0E00               	movlw	0
  7146  001CEE  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7147  001CF0  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7148  001CF2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7149  001CF4  5005               	movf	___flmul@a^0,w,c
  7150  001CF6  0203               	mulwf	(___flmul@b+2)^0,c
  7151  001CF8  CFF3 F018          	movff	prodl,___flmul@temp
  7152  001CFC  CFF4 F019          	movff	prodh,___flmul@temp+1
  7153  001D00  5018               	movf	___flmul@temp^0,w,c
  7154  001D02  260E               	addwf	___flmul@grs^0,f,c
  7155  001D04  0E00               	movlw	0
  7156  001D06  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7157  001D08  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7158  001D0A  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7159  001D0C  5019               	movf	(___flmul@temp+1)^0,w,c
  7160  001D0E  2614               	addwf	___flmul@prod^0,f,c
  7161  001D10  0E00               	movlw	0
  7162  001D12  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7163  001D14  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7164  001D16  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7165  001D18  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7166  001D1C  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7167  001D20  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7168  001D24  6A0E               	clrf	___flmul@grs^0,c
  7169  001D26  5005               	movf	___flmul@a^0,w,c
  7170  001D28  0202               	mulwf	(___flmul@b+1)^0,c
  7171  001D2A  CFF3 F018          	movff	prodl,___flmul@temp
  7172  001D2E  CFF4 F019          	movff	prodh,___flmul@temp+1
  7173  001D32  5018               	movf	___flmul@temp^0,w,c
  7174  001D34  260E               	addwf	___flmul@grs^0,f,c
  7175  001D36  5019               	movf	(___flmul@temp+1)^0,w,c
  7176  001D38  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7177  001D3A  0E00               	movlw	0
  7178  001D3C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7179  001D3E  0E00               	movlw	0
  7180  001D40  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7181  001D42  5006               	movf	(___flmul@a+1)^0,w,c
  7182  001D44  0201               	mulwf	___flmul@b^0,c
  7183  001D46  CFF3 F018          	movff	prodl,___flmul@temp
  7184  001D4A  CFF4 F019          	movff	prodh,___flmul@temp+1
  7185  001D4E  5018               	movf	___flmul@temp^0,w,c
  7186  001D50  260E               	addwf	___flmul@grs^0,f,c
  7187  001D52  5019               	movf	(___flmul@temp+1)^0,w,c
  7188  001D54  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7189  001D56  0E00               	movlw	0
  7190  001D58  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7191  001D5A  0E00               	movlw	0
  7192  001D5C  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7193  001D5E  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7194  001D62  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7195  001D66  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7196  001D6A  6A0E               	clrf	___flmul@grs^0,c
  7197  001D6C  5005               	movf	___flmul@a^0,w,c
  7198  001D6E  0201               	mulwf	___flmul@b^0,c
  7199  001D70  CFF3 F018          	movff	prodl,___flmul@temp
  7200  001D74  CFF4 F019          	movff	prodh,___flmul@temp+1
  7201  001D78  5018               	movf	___flmul@temp^0,w,c
  7202  001D7A  260E               	addwf	___flmul@grs^0,f,c
  7203  001D7C  5019               	movf	(___flmul@temp+1)^0,w,c
  7204  001D7E  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7205  001D80  0E00               	movlw	0
  7206  001D82  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7207  001D84  0E00               	movlw	0
  7208  001D86  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7209  001D88  5007               	movf	(___flmul@a+2)^0,w,c
  7210  001D8A  0202               	mulwf	(___flmul@b+1)^0,c
  7211  001D8C  CFF3 F018          	movff	prodl,___flmul@temp
  7212  001D90  CFF4 F019          	movff	prodh,___flmul@temp+1
  7213  001D94  5018               	movf	___flmul@temp^0,w,c
  7214  001D96  2614               	addwf	___flmul@prod^0,f,c
  7215  001D98  5019               	movf	(___flmul@temp+1)^0,w,c
  7216  001D9A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7217  001D9C  0E00               	movlw	0
  7218  001D9E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7219  001DA0  0E00               	movlw	0
  7220  001DA2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7221  001DA4  5006               	movf	(___flmul@a+1)^0,w,c
  7222  001DA6  0203               	mulwf	(___flmul@b+2)^0,c
  7223  001DA8  CFF3 F018          	movff	prodl,___flmul@temp
  7224  001DAC  CFF4 F019          	movff	prodh,___flmul@temp+1
  7225  001DB0  5018               	movf	___flmul@temp^0,w,c
  7226  001DB2  2614               	addwf	___flmul@prod^0,f,c
  7227  001DB4  5019               	movf	(___flmul@temp+1)^0,w,c
  7228  001DB6  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7229  001DB8  0E00               	movlw	0
  7230  001DBA  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7231  001DBC  0E00               	movlw	0
  7232  001DBE  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7233  001DC0  5007               	movf	(___flmul@a+2)^0,w,c
  7234  001DC2  0203               	mulwf	(___flmul@b+2)^0,c
  7235  001DC4  CFF3 F018          	movff	prodl,___flmul@temp
  7236  001DC8  CFF4 F019          	movff	prodh,___flmul@temp+1
  7237  001DCC  5018               	movf	___flmul@temp^0,w,c
  7238  001DCE  6E09               	movwf	??___flmul^0,c
  7239  001DD0  5019               	movf	(___flmul@temp+1)^0,w,c
  7240  001DD2  6E0A               	movwf	(??___flmul+1)^0,c
  7241  001DD4  6A0B               	clrf	(??___flmul+2)^0,c
  7242  001DD6  6A0C               	clrf	(??___flmul+3)^0,c
  7243  001DD8  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  7244  001DDC  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  7245  001DE0  C009  F00A         	movff	??___flmul,??___flmul+1
  7246  001DE4  6A09               	clrf	??___flmul^0,c
  7247  001DE6  5009               	movf	??___flmul^0,w,c
  7248  001DE8  2614               	addwf	___flmul@prod^0,f,c
  7249  001DEA  500A               	movf	(??___flmul+1)^0,w,c
  7250  001DEC  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7251  001DEE  500B               	movf	(??___flmul+2)^0,w,c
  7252  001DF0  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7253  001DF2  500C               	movf	(??___flmul+3)^0,w,c
  7254  001DF4  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7255  001DF6  C00E  F009         	movff	___flmul@grs,??___flmul
  7256  001DFA  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  7257  001DFE  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  7258  001E02  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  7259  001E06  0E19               	movlw	25
  7260  001E08  EF0B  F00F         	goto	u3450
  7261  001E0C                     u3455:
  7262  001E0C  90D8               	bcf	status,0,c
  7263  001E0E  320C               	rrcf	(??___flmul+3)^0,f,c
  7264  001E10  320B               	rrcf	(??___flmul+2)^0,f,c
  7265  001E12  320A               	rrcf	(??___flmul+1)^0,f,c
  7266  001E14  3209               	rrcf	??___flmul^0,f,c
  7267  001E16                     u3450:
  7268  001E16  2EE8               	decfsz	wreg,f,c
  7269  001E18  EF06  F00F         	goto	u3455
  7270  001E1C  5009               	movf	??___flmul^0,w,c
  7271  001E1E  2614               	addwf	___flmul@prod^0,f,c
  7272  001E20  500A               	movf	(??___flmul+1)^0,w,c
  7273  001E22  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7274  001E24  500B               	movf	(??___flmul+2)^0,w,c
  7275  001E26  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7276  001E28  500C               	movf	(??___flmul+3)^0,w,c
  7277  001E2A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7278  001E2C  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7279  001E30  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7280  001E34  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7281  001E38  6A0E               	clrf	___flmul@grs^0,c
  7282  001E3A  5012               	movf	___flmul@aexp^0,w,c
  7283  001E3C  C013  F009         	movff	___flmul@bexp,??___flmul
  7284  001E40  6A0A               	clrf	(??___flmul+1)^0,c
  7285  001E42  2609               	addwf	??___flmul^0,f,c
  7286  001E44  0E00               	movlw	0
  7287  001E46  220A               	addwfc	(??___flmul+1)^0,f,c
  7288  001E48  0E82               	movlw	130
  7289  001E4A  2409               	addwf	??___flmul^0,w,c
  7290  001E4C  6E18               	movwf	___flmul@temp^0,c
  7291  001E4E  0EFF               	movlw	255
  7292  001E50  200A               	addwfc	(??___flmul+1)^0,w,c
  7293  001E52  6E19               	movwf	(___flmul@temp+1)^0,c
  7294  001E54  EF41  F00F         	goto	l3341
  7295  001E58                     l3335:
  7296  001E58  90D8               	bcf	status,0,c
  7297  001E5A  3614               	rlcf	___flmul@prod^0,f,c
  7298  001E5C  3615               	rlcf	(___flmul@prod+1)^0,f,c
  7299  001E5E  3616               	rlcf	(___flmul@prod+2)^0,f,c
  7300  001E60  3617               	rlcf	(___flmul@prod+3)^0,f,c
  7301  001E62  AE11               	btfss	(___flmul@grs+3)^0,7,c
  7302  001E64  EF36  F00F         	goto	u3461
  7303  001E68  EF38  F00F         	goto	u3460
  7304  001E6C                     u3461:
  7305  001E6C  EF39  F00F         	goto	l808
  7306  001E70                     u3460:
  7307  001E70  8014               	bsf	___flmul@prod^0,0,c
  7308  001E72                     l808:
  7309  001E72  90D8               	bcf	status,0,c
  7310  001E74  360E               	rlcf	___flmul@grs^0,f,c
  7311  001E76  360F               	rlcf	(___flmul@grs+1)^0,f,c
  7312  001E78  3610               	rlcf	(___flmul@grs+2)^0,f,c
  7313  001E7A  3611               	rlcf	(___flmul@grs+3)^0,f,c
  7314  001E7C  0618               	decf	___flmul@temp^0,f,c
  7315  001E7E  A0D8               	btfss	status,0,c
  7316  001E80  0619               	decf	(___flmul@temp+1)^0,f,c
  7317  001E82                     l3341:
  7318  001E82  AE16               	btfss	(___flmul@prod+2)^0,7,c
  7319  001E84  EF46  F00F         	goto	u3471
  7320  001E88  EF48  F00F         	goto	u3470
  7321  001E8C                     u3471:
  7322  001E8C  EF2C  F00F         	goto	l3335
  7323  001E90                     u3470:
  7324  001E90  0E00               	movlw	0
  7325  001E92  6E12               	movwf	___flmul@aexp^0,c
  7326  001E94  AE11               	btfss	(___flmul@grs+3)^0,7,c
  7327  001E96  EF4F  F00F         	goto	u3481
  7328  001E9A  EF51  F00F         	goto	u3480
  7329  001E9E                     u3481:
  7330  001E9E  EF75  F00F         	goto	l810
  7331  001EA2                     u3480:
  7332  001EA2  0EFF               	movlw	255
  7333  001EA4  140E               	andwf	___flmul@grs^0,w,c
  7334  001EA6  6E09               	movwf	??___flmul^0,c
  7335  001EA8  0EFF               	movlw	255
  7336  001EAA  140F               	andwf	(___flmul@grs+1)^0,w,c
  7337  001EAC  6E0A               	movwf	(??___flmul+1)^0,c
  7338  001EAE  0EFF               	movlw	255
  7339  001EB0  1410               	andwf	(___flmul@grs+2)^0,w,c
  7340  001EB2  6E0B               	movwf	(??___flmul+2)^0,c
  7341  001EB4  0E7F               	movlw	127
  7342  001EB6  1411               	andwf	(___flmul@grs+3)^0,w,c
  7343  001EB8  6E0C               	movwf	(??___flmul+3)^0,c
  7344  001EBA  5009               	movf	??___flmul^0,w,c
  7345  001EBC  100A               	iorwf	(??___flmul+1)^0,w,c
  7346  001EBE  100B               	iorwf	(??___flmul+2)^0,w,c
  7347  001EC0  100C               	iorwf	(??___flmul+3)^0,w,c
  7348  001EC2  B4D8               	btfsc	status,2,c
  7349  001EC4  EF66  F00F         	goto	u3491
  7350  001EC8  EF68  F00F         	goto	u3490
  7351  001ECC                     u3491:
  7352  001ECC  EF6C  F00F         	goto	l811
  7353  001ED0                     u3490:
  7354  001ED0                     l3349:
  7355  001ED0  0E01               	movlw	1
  7356  001ED2  6E12               	movwf	___flmul@aexp^0,c
  7357  001ED4  EF75  F00F         	goto	l810
  7358  001ED8                     l811:
  7359  001ED8  A014               	btfss	___flmul@prod^0,0,c
  7360  001EDA  EF71  F00F         	goto	u3501
  7361  001EDE  EF73  F00F         	goto	u3500
  7362  001EE2                     u3501:
  7363  001EE2  EF75  F00F         	goto	l810
  7364  001EE6                     u3500:
  7365  001EE6  EF68  F00F         	goto	l3349
  7366  001EEA                     l810:
  7367  001EEA  5012               	movf	___flmul@aexp^0,w,c
  7368  001EEC  B4D8               	btfsc	status,2,c
  7369  001EEE  EF7B  F00F         	goto	u3511
  7370  001EF2  EF7D  F00F         	goto	u3510
  7371  001EF6                     u3511:
  7372  001EF6  EFA1  F00F         	goto	l3361
  7373  001EFA                     u3510:
  7374  001EFA  0E01               	movlw	1
  7375  001EFC  2614               	addwf	___flmul@prod^0,f,c
  7376  001EFE  0E00               	movlw	0
  7377  001F00  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7378  001F02  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7379  001F04  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7380  001F06  A017               	btfss	(___flmul@prod+3)^0,0,c
  7381  001F08  EF88  F00F         	goto	u3521
  7382  001F0C  EF8A  F00F         	goto	u3520
  7383  001F10                     u3521:
  7384  001F10  EFA1  F00F         	goto	l3361
  7385  001F14                     u3520:
  7386  001F14  C014  F009         	movff	___flmul@prod,??___flmul
  7387  001F18  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  7388  001F1C  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  7389  001F20  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  7390  001F24  340C               	rlcf	(??___flmul+3)^0,w,c
  7391  001F26  320C               	rrcf	(??___flmul+3)^0,f,c
  7392  001F28  320B               	rrcf	(??___flmul+2)^0,f,c
  7393  001F2A  320A               	rrcf	(??___flmul+1)^0,f,c
  7394  001F2C  3209               	rrcf	??___flmul^0,f,c
  7395  001F2E  C009  F014         	movff	??___flmul,___flmul@prod
  7396  001F32  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  7397  001F36  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  7398  001F3A  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  7399  001F3E  4A18               	infsnz	___flmul@temp^0,f,c
  7400  001F40  2A19               	incf	(___flmul@temp+1)^0,f,c
  7401  001F42                     l3361:
  7402  001F42  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  7403  001F44  EFAC  F00F         	goto	u3531
  7404  001F48  5019               	movf	(___flmul@temp+1)^0,w,c
  7405  001F4A  E108               	bnz	u3530
  7406  001F4C  2818               	incf	___flmul@temp^0,w,c
  7407  001F4E  A0D8               	btfss	status,0,c
  7408  001F50  EFAC  F00F         	goto	u3531
  7409  001F54  EFAE  F00F         	goto	u3530
  7410  001F58                     u3531:
  7411  001F58  EFB8  F00F         	goto	l3365
  7412  001F5C                     u3530:
  7413  001F5C  0E00               	movlw	0
  7414  001F5E  6E14               	movwf	___flmul@prod^0,c
  7415  001F60  0E00               	movlw	0
  7416  001F62  6E15               	movwf	(___flmul@prod+1)^0,c
  7417  001F64  0E80               	movlw	128
  7418  001F66  6E16               	movwf	(___flmul@prod+2)^0,c
  7419  001F68  0E7F               	movlw	127
  7420  001F6A  6E17               	movwf	(___flmul@prod+3)^0,c
  7421  001F6C  EFE6  F00F         	goto	l3377
  7422  001F70                     l3365:
  7423  001F70  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  7424  001F72  EFC5  F00F         	goto	u3540
  7425  001F76  5019               	movf	(___flmul@temp+1)^0,w,c
  7426  001F78  E106               	bnz	u3541
  7427  001F7A  0418               	decf	___flmul@temp^0,w,c
  7428  001F7C  B0D8               	btfsc	status,0,c
  7429  001F7E  EFC3  F00F         	goto	u3541
  7430  001F82  EFC5  F00F         	goto	u3540
  7431  001F86                     u3541:
  7432  001F86  EFD1  F00F         	goto	l818
  7433  001F8A                     u3540:
  7434  001F8A  0E00               	movlw	0
  7435  001F8C  6E14               	movwf	___flmul@prod^0,c
  7436  001F8E  0E00               	movlw	0
  7437  001F90  6E15               	movwf	(___flmul@prod+1)^0,c
  7438  001F92  0E00               	movlw	0
  7439  001F94  6E16               	movwf	(___flmul@prod+2)^0,c
  7440  001F96  0E00               	movlw	0
  7441  001F98  6E17               	movwf	(___flmul@prod+3)^0,c
  7442  001F9A  0E00               	movlw	0
  7443  001F9C  6E0D               	movwf	___flmul@sign^0,c
  7444  001F9E  EFE6  F00F         	goto	l3377
  7445  001FA2                     l818:
  7446  001FA2  C018  F013         	movff	___flmul@temp,___flmul@bexp
  7447  001FA6  0EFF               	movlw	255
  7448  001FA8  1614               	andwf	___flmul@prod^0,f,c
  7449  001FAA  0EFF               	movlw	255
  7450  001FAC  1615               	andwf	(___flmul@prod+1)^0,f,c
  7451  001FAE  0E7F               	movlw	127
  7452  001FB0  1616               	andwf	(___flmul@prod+2)^0,f,c
  7453  001FB2  0E00               	movlw	0
  7454  001FB4  1617               	andwf	(___flmul@prod+3)^0,f,c
  7455  001FB6  A013               	btfss	___flmul@bexp^0,0,c
  7456  001FB8  EFE0  F00F         	goto	u3551
  7457  001FBC  EFE2  F00F         	goto	u3550
  7458  001FC0                     u3551:
  7459  001FC0  EFE3  F00F         	goto	l3375
  7460  001FC4                     u3550:
  7461  001FC4  8E16               	bsf	(___flmul@prod+2)^0,7,c
  7462  001FC6                     l3375:
  7463  001FC6  90D8               	bcf	status,0,c
  7464  001FC8  3013               	rrcf	___flmul@bexp^0,w,c
  7465  001FCA  6E17               	movwf	(___flmul@prod+3)^0,c
  7466  001FCC                     l3377:
  7467  001FCC  500D               	movf	___flmul@sign^0,w,c
  7468  001FCE  1217               	iorwf	(___flmul@prod+3)^0,f,c
  7469  001FD0  C014  F001         	movff	___flmul@prod,?___flmul
  7470  001FD4  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  7471  001FD8  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  7472  001FDC  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  7473  001FE0                     l805:
  7474  001FE0  0012               	return		;funcret
  7475  001FE2                     __end_of___flmul:
  7476                           	callstack 0
  7477                           
  7478 ;; *************** function ___flge *****************
  7479 ;; Defined at:
  7480 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\flge.c"
  7481 ;; Parameters:    Size  Location     Type
  7482 ;;  ff1             4   25[COMRAM] unsigned char 
  7483 ;;  ff2             4   29[COMRAM] unsigned char 
  7484 ;; Auto vars:     Size  Location     Type
  7485 ;;		None
  7486 ;; Return value:  Size  Location     Type
  7487 ;;		None               void
  7488 ;; Registers used:
  7489 ;;		wreg, status,2, status,0
  7490 ;; Tracked objects:
  7491 ;;		On entry : 0/0
  7492 ;;		On exit  : 0/0
  7493 ;;		Unchanged: 0/0
  7494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7495 ;;      Params:         8       0       0       0       0       0       0
  7496 ;;      Locals:         0       0       0       0       0       0       0
  7497 ;;      Temps:          4       0       0       0       0       0       0
  7498 ;;      Totals:        12       0       0       0       0       0       0
  7499 ;;Total ram usage:       12 bytes
  7500 ;; Hardware stack levels used:    1
  7501 ;; This function calls:
  7502 ;;		Nothing
  7503 ;; This function is called by:
  7504 ;;		_encher_tanque
  7505 ;;		_efgtoa
  7506 ;; This function uses a non-reentrant model
  7507 ;;
  7508                           
  7509                           	psect	text25
  7510  002E8E                     __ptext25:
  7511                           	callstack 0
  7512  002E8E                     ___flge:
  7513                           	callstack 25
  7514  002E8E  0E00               	movlw	0
  7515  002E90  141A               	andwf	___flge@ff1^0,w,c
  7516  002E92  6E22               	movwf	??___flge^0,c
  7517  002E94  0E00               	movlw	0
  7518  002E96  141B               	andwf	(___flge@ff1+1)^0,w,c
  7519  002E98  6E23               	movwf	(??___flge+1)^0,c
  7520  002E9A  0E80               	movlw	128
  7521  002E9C  141C               	andwf	(___flge@ff1+2)^0,w,c
  7522  002E9E  6E24               	movwf	(??___flge+2)^0,c
  7523  002EA0  0E7F               	movlw	127
  7524  002EA2  141D               	andwf	(___flge@ff1+3)^0,w,c
  7525  002EA4  6E25               	movwf	(??___flge+3)^0,c
  7526  002EA6  5022               	movf	??___flge^0,w,c
  7527  002EA8  1023               	iorwf	(??___flge+1)^0,w,c
  7528  002EAA  1024               	iorwf	(??___flge+2)^0,w,c
  7529  002EAC  1025               	iorwf	(??___flge+3)^0,w,c
  7530  002EAE  A4D8               	btfss	status,2,c
  7531  002EB0  EF5C  F017         	goto	u3711
  7532  002EB4  EF5E  F017         	goto	u3710
  7533  002EB8                     u3711:
  7534  002EB8  EF66  F017         	goto	l3489
  7535  002EBC                     u3710:
  7536  002EBC  0E00               	movlw	0
  7537  002EBE  6E1A               	movwf	___flge@ff1^0,c
  7538  002EC0  0E00               	movlw	0
  7539  002EC2  6E1B               	movwf	(___flge@ff1+1)^0,c
  7540  002EC4  0E00               	movlw	0
  7541  002EC6  6E1C               	movwf	(___flge@ff1+2)^0,c
  7542  002EC8  0E00               	movlw	0
  7543  002ECA  6E1D               	movwf	(___flge@ff1+3)^0,c
  7544  002ECC                     l3489:
  7545  002ECC  0E00               	movlw	0
  7546  002ECE  141E               	andwf	___flge@ff2^0,w,c
  7547  002ED0  6E22               	movwf	??___flge^0,c
  7548  002ED2  0E00               	movlw	0
  7549  002ED4  141F               	andwf	(___flge@ff2+1)^0,w,c
  7550  002ED6  6E23               	movwf	(??___flge+1)^0,c
  7551  002ED8  0E80               	movlw	128
  7552  002EDA  1420               	andwf	(___flge@ff2+2)^0,w,c
  7553  002EDC  6E24               	movwf	(??___flge+2)^0,c
  7554  002EDE  0E7F               	movlw	127
  7555  002EE0  1421               	andwf	(___flge@ff2+3)^0,w,c
  7556  002EE2  6E25               	movwf	(??___flge+3)^0,c
  7557  002EE4  5022               	movf	??___flge^0,w,c
  7558  002EE6  1023               	iorwf	(??___flge+1)^0,w,c
  7559  002EE8  1024               	iorwf	(??___flge+2)^0,w,c
  7560  002EEA  1025               	iorwf	(??___flge+3)^0,w,c
  7561  002EEC  A4D8               	btfss	status,2,c
  7562  002EEE  EF7B  F017         	goto	u3721
  7563  002EF2  EF7D  F017         	goto	u3720
  7564  002EF6                     u3721:
  7565  002EF6  EF85  F017         	goto	l3493
  7566  002EFA                     u3720:
  7567  002EFA  0E00               	movlw	0
  7568  002EFC  6E1E               	movwf	___flge@ff2^0,c
  7569  002EFE  0E00               	movlw	0
  7570  002F00  6E1F               	movwf	(___flge@ff2+1)^0,c
  7571  002F02  0E00               	movlw	0
  7572  002F04  6E20               	movwf	(___flge@ff2+2)^0,c
  7573  002F06  0E00               	movlw	0
  7574  002F08  6E21               	movwf	(___flge@ff2+3)^0,c
  7575  002F0A                     l3493:
  7576  002F0A  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  7577  002F0C  EF8A  F017         	goto	u3731
  7578  002F10  EF8C  F017         	goto	u3730
  7579  002F14                     u3731:
  7580  002F14  EF95  F017         	goto	l3497
  7581  002F18                     u3730:
  7582  002F18  6C1A               	negf	___flge@ff1^0,c
  7583  002F1A  1E1B               	comf	(___flge@ff1+1)^0,f,c
  7584  002F1C  B0D8               	btfsc	status,0,c
  7585  002F1E  2A1B               	incf	(___flge@ff1+1)^0,f,c
  7586  002F20  1E1C               	comf	(___flge@ff1+2)^0,f,c
  7587  002F22  B0D8               	btfsc	status,0,c
  7588  002F24  2A1C               	incf	(___flge@ff1+2)^0,f,c
  7589  002F26  0E80               	movlw	128
  7590  002F28  561D               	subfwb	(___flge@ff1+3)^0,f,c
  7591  002F2A                     l3497:
  7592  002F2A  AE21               	btfss	(___flge@ff2+3)^0,7,c
  7593  002F2C  EF9A  F017         	goto	u3741
  7594  002F30  EF9C  F017         	goto	u3740
  7595  002F34                     u3741:
  7596  002F34  EFA5  F017         	goto	l452
  7597  002F38                     u3740:
  7598  002F38  6C1E               	negf	___flge@ff2^0,c
  7599  002F3A  1E1F               	comf	(___flge@ff2+1)^0,f,c
  7600  002F3C  B0D8               	btfsc	status,0,c
  7601  002F3E  2A1F               	incf	(___flge@ff2+1)^0,f,c
  7602  002F40  1E20               	comf	(___flge@ff2+2)^0,f,c
  7603  002F42  B0D8               	btfsc	status,0,c
  7604  002F44  2A20               	incf	(___flge@ff2+2)^0,f,c
  7605  002F46  0E80               	movlw	128
  7606  002F48  5621               	subfwb	(___flge@ff2+3)^0,f,c
  7607  002F4A                     l452:
  7608  002F4A  0E00               	movlw	0
  7609  002F4C  1A1A               	xorwf	___flge@ff1^0,f,c
  7610  002F4E  0E00               	movlw	0
  7611  002F50  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  7612  002F52  0E00               	movlw	0
  7613  002F54  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  7614  002F56  0E80               	movlw	128
  7615  002F58  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  7616  002F5A  0E00               	movlw	0
  7617  002F5C  1A1E               	xorwf	___flge@ff2^0,f,c
  7618  002F5E  0E00               	movlw	0
  7619  002F60  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  7620  002F62  0E00               	movlw	0
  7621  002F64  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  7622  002F66  0E80               	movlw	128
  7623  002F68  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  7624  002F6A  501E               	movf	___flge@ff2^0,w,c
  7625  002F6C  5C1A               	subwf	___flge@ff1^0,w,c
  7626  002F6E  501F               	movf	(___flge@ff2+1)^0,w,c
  7627  002F70  581B               	subwfb	(___flge@ff1+1)^0,w,c
  7628  002F72  5020               	movf	(___flge@ff2+2)^0,w,c
  7629  002F74  581C               	subwfb	(___flge@ff1+2)^0,w,c
  7630  002F76  5021               	movf	(___flge@ff2+3)^0,w,c
  7631  002F78  581D               	subwfb	(___flge@ff1+3)^0,w,c
  7632  002F7A  B0D8               	btfsc	status,0,c
  7633  002F7C  EFC2  F017         	goto	u3751
  7634  002F80  EFC4  F017         	goto	u3750
  7635  002F84                     u3751:
  7636  002F84  EFC7  F017         	goto	l3503
  7637  002F88                     u3750:
  7638  002F88  90D8               	bcf	status,0,c
  7639  002F8A  EFC8  F017         	goto	l457
  7640  002F8E                     l3503:
  7641  002F8E  80D8               	bsf	status,0,c
  7642  002F90                     l457:
  7643  002F90  0012               	return		;funcret
  7644  002F92                     __end_of___flge:
  7645                           	callstack 0
  7646                           
  7647 ;; *************** function ___fleq *****************
  7648 ;; Defined at:
  7649 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\fleq.c"
  7650 ;; Parameters:    Size  Location     Type
  7651 ;;  ff1             4    0[COMRAM] unsigned char 
  7652 ;;  ff2             4    4[COMRAM] unsigned char 
  7653 ;; Auto vars:     Size  Location     Type
  7654 ;;		None
  7655 ;; Return value:  Size  Location     Type
  7656 ;;		None               void
  7657 ;; Registers used:
  7658 ;;		wreg, status,2, status,0
  7659 ;; Tracked objects:
  7660 ;;		On entry : 0/0
  7661 ;;		On exit  : 0/0
  7662 ;;		Unchanged: 0/0
  7663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7664 ;;      Params:         8       0       0       0       0       0       0
  7665 ;;      Locals:         0       0       0       0       0       0       0
  7666 ;;      Temps:          4       0       0       0       0       0       0
  7667 ;;      Totals:        12       0       0       0       0       0       0
  7668 ;;Total ram usage:       12 bytes
  7669 ;; Hardware stack levels used:    1
  7670 ;; This function calls:
  7671 ;;		Nothing
  7672 ;; This function is called by:
  7673 ;;		_efgtoa
  7674 ;; This function uses a non-reentrant model
  7675 ;;
  7676                           
  7677                           	psect	text26
  7678  003522                     __ptext26:
  7679                           	callstack 0
  7680  003522                     ___fleq:
  7681                           	callstack 25
  7682  003522  0E00               	movlw	0
  7683  003524  1401               	andwf	___fleq@ff1^0,w,c
  7684  003526  6E09               	movwf	??___fleq^0,c
  7685  003528  0E00               	movlw	0
  7686  00352A  1402               	andwf	(___fleq@ff1+1)^0,w,c
  7687  00352C  6E0A               	movwf	(??___fleq+1)^0,c
  7688  00352E  0E80               	movlw	128
  7689  003530  1403               	andwf	(___fleq@ff1+2)^0,w,c
  7690  003532  6E0B               	movwf	(??___fleq+2)^0,c
  7691  003534  0E7F               	movlw	127
  7692  003536  1404               	andwf	(___fleq@ff1+3)^0,w,c
  7693  003538  6E0C               	movwf	(??___fleq+3)^0,c
  7694  00353A  5009               	movf	??___fleq^0,w,c
  7695  00353C  100A               	iorwf	(??___fleq+1)^0,w,c
  7696  00353E  100B               	iorwf	(??___fleq+2)^0,w,c
  7697  003540  100C               	iorwf	(??___fleq+3)^0,w,c
  7698  003542  A4D8               	btfss	status,2,c
  7699  003544  EFA6  F01A         	goto	u3681
  7700  003548  EFA8  F01A         	goto	u3680
  7701  00354C                     u3681:
  7702  00354C  EFB0  F01A         	goto	l3473
  7703  003550                     u3680:
  7704  003550  0E00               	movlw	0
  7705  003552  6E01               	movwf	___fleq@ff1^0,c
  7706  003554  0E00               	movlw	0
  7707  003556  6E02               	movwf	(___fleq@ff1+1)^0,c
  7708  003558  0E00               	movlw	0
  7709  00355A  6E03               	movwf	(___fleq@ff1+2)^0,c
  7710  00355C  0E00               	movlw	0
  7711  00355E  6E04               	movwf	(___fleq@ff1+3)^0,c
  7712  003560                     l3473:
  7713  003560  0E00               	movlw	0
  7714  003562  1405               	andwf	___fleq@ff2^0,w,c
  7715  003564  6E09               	movwf	??___fleq^0,c
  7716  003566  0E00               	movlw	0
  7717  003568  1406               	andwf	(___fleq@ff2+1)^0,w,c
  7718  00356A  6E0A               	movwf	(??___fleq+1)^0,c
  7719  00356C  0E80               	movlw	128
  7720  00356E  1407               	andwf	(___fleq@ff2+2)^0,w,c
  7721  003570  6E0B               	movwf	(??___fleq+2)^0,c
  7722  003572  0E7F               	movlw	127
  7723  003574  1408               	andwf	(___fleq@ff2+3)^0,w,c
  7724  003576  6E0C               	movwf	(??___fleq+3)^0,c
  7725  003578  5009               	movf	??___fleq^0,w,c
  7726  00357A  100A               	iorwf	(??___fleq+1)^0,w,c
  7727  00357C  100B               	iorwf	(??___fleq+2)^0,w,c
  7728  00357E  100C               	iorwf	(??___fleq+3)^0,w,c
  7729  003580  A4D8               	btfss	status,2,c
  7730  003582  EFC5  F01A         	goto	u3691
  7731  003586  EFC7  F01A         	goto	u3690
  7732  00358A                     u3691:
  7733  00358A  EFCF  F01A         	goto	l3477
  7734  00358E                     u3690:
  7735  00358E  0E00               	movlw	0
  7736  003590  6E05               	movwf	___fleq@ff2^0,c
  7737  003592  0E00               	movlw	0
  7738  003594  6E06               	movwf	(___fleq@ff2+1)^0,c
  7739  003596  0E00               	movlw	0
  7740  003598  6E07               	movwf	(___fleq@ff2+2)^0,c
  7741  00359A  0E00               	movlw	0
  7742  00359C  6E08               	movwf	(___fleq@ff2+3)^0,c
  7743  00359E                     l3477:
  7744  00359E  5005               	movf	___fleq@ff2^0,w,c
  7745  0035A0  1801               	xorwf	___fleq@ff1^0,w,c
  7746  0035A2  E10F               	bnz	u3700
  7747  0035A4  5006               	movf	(___fleq@ff2+1)^0,w,c
  7748  0035A6  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  7749  0035A8  E10C               	bnz	u3700
  7750  0035AA  5007               	movf	(___fleq@ff2+2)^0,w,c
  7751  0035AC  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  7752  0035AE  E109               	bnz	u3700
  7753  0035B0  5008               	movf	(___fleq@ff2+3)^0,w,c
  7754  0035B2  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  7755  0035B4  B4D8               	btfsc	status,2,c
  7756  0035B6  EFDF  F01A         	goto	u3701
  7757  0035BA  EFE1  F01A         	goto	u3700
  7758  0035BE                     u3701:
  7759  0035BE  EFE4  F01A         	goto	l3481
  7760  0035C2                     u3700:
  7761  0035C2  90D8               	bcf	status,0,c
  7762  0035C4  EFE5  F01A         	goto	l446
  7763  0035C8                     l3481:
  7764  0035C8  80D8               	bsf	status,0,c
  7765  0035CA                     l446:
  7766  0035CA  0012               	return		;funcret
  7767  0035CC                     __end_of___fleq:
  7768                           	callstack 0
  7769                           
  7770 ;; *************** function ___fldiv *****************
  7771 ;; Defined at:
  7772 ;;		line 11 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
  7773 ;; Parameters:    Size  Location     Type
  7774 ;;  b               4    0[COMRAM] unsigned char 
  7775 ;;  a               4    4[COMRAM] unsigned char 
  7776 ;; Auto vars:     Size  Location     Type
  7777 ;;  grs             4   19[COMRAM] unsigned long 
  7778 ;;  rem             4   12[COMRAM] unsigned long 
  7779 ;;  new_exp         2   17[COMRAM] short 
  7780 ;;  aexp            1   24[COMRAM] unsigned char 
  7781 ;;  bexp            1   23[COMRAM] unsigned char 
  7782 ;;  sign            1   16[COMRAM] unsigned char 
  7783 ;; Return value:  Size  Location     Type
  7784 ;;                  4    0[COMRAM] unsigned char 
  7785 ;; Registers used:
  7786 ;;		wreg, status,2, status,0
  7787 ;; Tracked objects:
  7788 ;;		On entry : 0/0
  7789 ;;		On exit  : 0/0
  7790 ;;		Unchanged: 0/0
  7791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7792 ;;      Params:         8       0       0       0       0       0       0
  7793 ;;      Locals:        13       0       0       0       0       0       0
  7794 ;;      Temps:          4       0       0       0       0       0       0
  7795 ;;      Totals:        25       0       0       0       0       0       0
  7796 ;;Total ram usage:       25 bytes
  7797 ;; Hardware stack levels used:    1
  7798 ;; This function calls:
  7799 ;;		Nothing
  7800 ;; This function is called by:
  7801 ;;		_encher_tanque
  7802 ;;		_esvaziar_tanque
  7803 ;;		_efgtoa
  7804 ;; This function uses a non-reentrant model
  7805 ;;
  7806                           
  7807                           	psect	text27
  7808  001FE2                     __ptext27:
  7809                           	callstack 0
  7810  001FE2                     ___fldiv:
  7811                           	callstack 25
  7812  001FE2  5004               	movf	(___fldiv@b+3)^0,w,c
  7813  001FE4  0B80               	andlw	128
  7814  001FE6  6E11               	movwf	___fldiv@sign^0,c
  7815  001FE8  5004               	movf	(___fldiv@b+3)^0,w,c
  7816  001FEA  2404               	addwf	(___fldiv@b+3)^0,w,c
  7817  001FEC  6E18               	movwf	___fldiv@bexp^0,c
  7818  001FEE  AE03               	btfss	(___fldiv@b+2)^0,7,c
  7819  001FF0  EFFC  F00F         	goto	u3141
  7820  001FF4  EFFE  F00F         	goto	u3140
  7821  001FF8                     u3141:
  7822  001FF8  EFFF  F00F         	goto	l3121
  7823  001FFC                     u3140:
  7824  001FFC  8018               	bsf	___fldiv@bexp^0,0,c
  7825  001FFE                     l3121:
  7826  001FFE  5018               	movf	___fldiv@bexp^0,w,c
  7827  002000  B4D8               	btfsc	status,2,c
  7828  002002  EF05  F010         	goto	u3151
  7829  002006  EF07  F010         	goto	u3150
  7830  00200A                     u3151:
  7831  00200A  EF1C  F010         	goto	l3131
  7832  00200E                     u3150:
  7833  00200E  2818               	incf	___fldiv@bexp^0,w,c
  7834  002010  A4D8               	btfss	status,2,c
  7835  002012  EF0D  F010         	goto	u3161
  7836  002016  EF0F  F010         	goto	u3160
  7837  00201A                     u3161:
  7838  00201A  EF17  F010         	goto	l3127
  7839  00201E                     u3160:
  7840  00201E  0E00               	movlw	0
  7841  002020  6E01               	movwf	___fldiv@b^0,c
  7842  002022  0E00               	movlw	0
  7843  002024  6E02               	movwf	(___fldiv@b+1)^0,c
  7844  002026  0E00               	movlw	0
  7845  002028  6E03               	movwf	(___fldiv@b+2)^0,c
  7846  00202A  0E00               	movlw	0
  7847  00202C  6E04               	movwf	(___fldiv@b+3)^0,c
  7848  00202E                     l3127:
  7849  00202E  8E03               	bsf	(___fldiv@b+2)^0,7,c
  7850  002030  0E00               	movlw	0
  7851  002032  6E04               	movwf	(___fldiv@b+3)^0,c
  7852  002034  EF24  F010         	goto	l3133
  7853  002038                     l3131:
  7854  002038  0E00               	movlw	0
  7855  00203A  6E01               	movwf	___fldiv@b^0,c
  7856  00203C  0E00               	movlw	0
  7857  00203E  6E02               	movwf	(___fldiv@b+1)^0,c
  7858  002040  0E00               	movlw	0
  7859  002042  6E03               	movwf	(___fldiv@b+2)^0,c
  7860  002044  0E00               	movlw	0
  7861  002046  6E04               	movwf	(___fldiv@b+3)^0,c
  7862  002048                     l3133:
  7863  002048  5008               	movf	(___fldiv@a+3)^0,w,c
  7864  00204A  0B80               	andlw	128
  7865  00204C  1A11               	xorwf	___fldiv@sign^0,f,c
  7866  00204E  5008               	movf	(___fldiv@a+3)^0,w,c
  7867  002050  2408               	addwf	(___fldiv@a+3)^0,w,c
  7868  002052  6E19               	movwf	___fldiv@aexp^0,c
  7869  002054  AE07               	btfss	(___fldiv@a+2)^0,7,c
  7870  002056  EF2F  F010         	goto	u3171
  7871  00205A  EF31  F010         	goto	u3170
  7872  00205E                     u3171:
  7873  00205E  EF32  F010         	goto	l3141
  7874  002062                     u3170:
  7875  002062  8019               	bsf	___fldiv@aexp^0,0,c
  7876  002064                     l3141:
  7877  002064  5019               	movf	___fldiv@aexp^0,w,c
  7878  002066  B4D8               	btfsc	status,2,c
  7879  002068  EF38  F010         	goto	u3181
  7880  00206C  EF3A  F010         	goto	u3180
  7881  002070                     u3181:
  7882  002070  EF4F  F010         	goto	l3151
  7883  002074                     u3180:
  7884  002074  2819               	incf	___fldiv@aexp^0,w,c
  7885  002076  A4D8               	btfss	status,2,c
  7886  002078  EF40  F010         	goto	u3191
  7887  00207C  EF42  F010         	goto	u3190
  7888  002080                     u3191:
  7889  002080  EF4A  F010         	goto	l3147
  7890  002084                     u3190:
  7891  002084  0E00               	movlw	0
  7892  002086  6E05               	movwf	___fldiv@a^0,c
  7893  002088  0E00               	movlw	0
  7894  00208A  6E06               	movwf	(___fldiv@a+1)^0,c
  7895  00208C  0E00               	movlw	0
  7896  00208E  6E07               	movwf	(___fldiv@a+2)^0,c
  7897  002090  0E00               	movlw	0
  7898  002092  6E08               	movwf	(___fldiv@a+3)^0,c
  7899  002094                     l3147:
  7900  002094  8E07               	bsf	(___fldiv@a+2)^0,7,c
  7901  002096  0E00               	movlw	0
  7902  002098  6E08               	movwf	(___fldiv@a+3)^0,c
  7903  00209A  EF57  F010         	goto	l3153
  7904  00209E                     l3151:
  7905  00209E  0E00               	movlw	0
  7906  0020A0  6E05               	movwf	___fldiv@a^0,c
  7907  0020A2  0E00               	movlw	0
  7908  0020A4  6E06               	movwf	(___fldiv@a+1)^0,c
  7909  0020A6  0E00               	movlw	0
  7910  0020A8  6E07               	movwf	(___fldiv@a+2)^0,c
  7911  0020AA  0E00               	movlw	0
  7912  0020AC  6E08               	movwf	(___fldiv@a+3)^0,c
  7913  0020AE                     l3153:
  7914  0020AE  5005               	movf	___fldiv@a^0,w,c
  7915  0020B0  1006               	iorwf	(___fldiv@a+1)^0,w,c
  7916  0020B2  1007               	iorwf	(___fldiv@a+2)^0,w,c
  7917  0020B4  1008               	iorwf	(___fldiv@a+3)^0,w,c
  7918  0020B6  A4D8               	btfss	status,2,c
  7919  0020B8  EF60  F010         	goto	u3201
  7920  0020BC  EF62  F010         	goto	u3200
  7921  0020C0                     u3201:
  7922  0020C0  EF7A  F010         	goto	l3165
  7923  0020C4                     u3200:
  7924  0020C4  0E00               	movlw	0
  7925  0020C6  6E01               	movwf	___fldiv@b^0,c
  7926  0020C8  0E00               	movlw	0
  7927  0020CA  6E02               	movwf	(___fldiv@b+1)^0,c
  7928  0020CC  0E00               	movlw	0
  7929  0020CE  6E03               	movwf	(___fldiv@b+2)^0,c
  7930  0020D0  0E00               	movlw	0
  7931  0020D2  6E04               	movwf	(___fldiv@b+3)^0,c
  7932  0020D4  0E80               	movlw	128
  7933  0020D6  1203               	iorwf	(___fldiv@b+2)^0,f,c
  7934  0020D8  0E7F               	movlw	127
  7935  0020DA  1204               	iorwf	(___fldiv@b+3)^0,f,c
  7936  0020DC                     l3159:
  7937  0020DC  5011               	movf	___fldiv@sign^0,w,c
  7938  0020DE  1204               	iorwf	(___fldiv@b+3)^0,f,c
  7939  0020E0  C001  F001         	movff	___fldiv@b,?___fldiv
  7940  0020E4  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  7941  0020E8  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  7942  0020EC  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  7943  0020F0  EFBD  F011         	goto	l769
  7944  0020F4                     l3165:
  7945  0020F4  5018               	movf	___fldiv@bexp^0,w,c
  7946  0020F6  A4D8               	btfss	status,2,c
  7947  0020F8  EF80  F010         	goto	u3211
  7948  0020FC  EF82  F010         	goto	u3210
  7949  002100                     u3211:
  7950  002100  EF8C  F010         	goto	l3173
  7951  002104                     u3210:
  7952  002104  0E00               	movlw	0
  7953  002106  6E01               	movwf	?___fldiv^0,c
  7954  002108  0E00               	movlw	0
  7955  00210A  6E02               	movwf	(?___fldiv+1)^0,c
  7956  00210C  0E00               	movlw	0
  7957  00210E  6E03               	movwf	(?___fldiv+2)^0,c
  7958  002110  0E00               	movlw	0
  7959  002112  6E04               	movwf	(?___fldiv+3)^0,c
  7960  002114  EFBD  F011         	goto	l769
  7961  002118                     l3173:
  7962  002118  5019               	movf	___fldiv@aexp^0,w,c
  7963  00211A  C018  F009         	movff	___fldiv@bexp,??___fldiv
  7964  00211E  6A0A               	clrf	(??___fldiv+1)^0,c
  7965  002120  5E09               	subwf	??___fldiv^0,f,c
  7966  002122  0E00               	movlw	0
  7967  002124  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  7968  002126  0E7F               	movlw	127
  7969  002128  2409               	addwf	??___fldiv^0,w,c
  7970  00212A  6E12               	movwf	___fldiv@new_exp^0,c
  7971  00212C  0E00               	movlw	0
  7972  00212E  200A               	addwfc	(??___fldiv+1)^0,w,c
  7973  002130  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7974  002132  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  7975  002136  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  7976  00213A  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  7977  00213E  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  7978  002142  0E00               	movlw	0
  7979  002144  6E01               	movwf	___fldiv@b^0,c
  7980  002146  0E00               	movlw	0
  7981  002148  6E02               	movwf	(___fldiv@b+1)^0,c
  7982  00214A  0E00               	movlw	0
  7983  00214C  6E03               	movwf	(___fldiv@b+2)^0,c
  7984  00214E  0E00               	movlw	0
  7985  002150  6E04               	movwf	(___fldiv@b+3)^0,c
  7986  002152  0E00               	movlw	0
  7987  002154  6E14               	movwf	___fldiv@grs^0,c
  7988  002156  0E00               	movlw	0
  7989  002158  6E15               	movwf	(___fldiv@grs+1)^0,c
  7990  00215A  0E00               	movlw	0
  7991  00215C  6E16               	movwf	(___fldiv@grs+2)^0,c
  7992  00215E  0E00               	movlw	0
  7993  002160  6E17               	movwf	(___fldiv@grs+3)^0,c
  7994  002162  0E00               	movlw	0
  7995  002164  6E19               	movwf	___fldiv@aexp^0,c
  7996  002166  EFED  F010         	goto	l771
  7997  00216A                     l3183:
  7998  00216A  5019               	movf	___fldiv@aexp^0,w,c
  7999  00216C  B4D8               	btfsc	status,2,c
  8000  00216E  EFBB  F010         	goto	u3221
  8001  002172  EFBD  F010         	goto	u3220
  8002  002176                     u3221:
  8003  002176  EFD4  F010         	goto	l3191
  8004  00217A                     u3220:
  8005  00217A  90D8               	bcf	status,0,c
  8006  00217C  360D               	rlcf	___fldiv@rem^0,f,c
  8007  00217E  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  8008  002180  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  8009  002182  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  8010  002184  90D8               	bcf	status,0,c
  8011  002186  3601               	rlcf	___fldiv@b^0,f,c
  8012  002188  3602               	rlcf	(___fldiv@b+1)^0,f,c
  8013  00218A  3603               	rlcf	(___fldiv@b+2)^0,f,c
  8014  00218C  3604               	rlcf	(___fldiv@b+3)^0,f,c
  8015  00218E  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8016  002190  EFCC  F010         	goto	u3231
  8017  002194  EFCE  F010         	goto	u3230
  8018  002198                     u3231:
  8019  002198  EFCF  F010         	goto	l774
  8020  00219C                     u3230:
  8021  00219C  8001               	bsf	___fldiv@b^0,0,c
  8022  00219E                     l774:
  8023  00219E  90D8               	bcf	status,0,c
  8024  0021A0  3614               	rlcf	___fldiv@grs^0,f,c
  8025  0021A2  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  8026  0021A4  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  8027  0021A6  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  8028  0021A8                     l3191:
  8029  0021A8  5005               	movf	___fldiv@a^0,w,c
  8030  0021AA  5C0D               	subwf	___fldiv@rem^0,w,c
  8031  0021AC  5006               	movf	(___fldiv@a+1)^0,w,c
  8032  0021AE  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  8033  0021B0  5007               	movf	(___fldiv@a+2)^0,w,c
  8034  0021B2  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  8035  0021B4  5008               	movf	(___fldiv@a+3)^0,w,c
  8036  0021B6  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  8037  0021B8  A0D8               	btfss	status,0,c
  8038  0021BA  EFE1  F010         	goto	u3241
  8039  0021BE  EFE3  F010         	goto	u3240
  8040  0021C2                     u3241:
  8041  0021C2  EFEC  F010         	goto	l3197
  8042  0021C6                     u3240:
  8043  0021C6  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  8044  0021C8  5005               	movf	___fldiv@a^0,w,c
  8045  0021CA  5E0D               	subwf	___fldiv@rem^0,f,c
  8046  0021CC  5006               	movf	(___fldiv@a+1)^0,w,c
  8047  0021CE  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  8048  0021D0  5007               	movf	(___fldiv@a+2)^0,w,c
  8049  0021D2  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  8050  0021D4  5008               	movf	(___fldiv@a+3)^0,w,c
  8051  0021D6  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  8052  0021D8                     l3197:
  8053  0021D8  2A19               	incf	___fldiv@aexp^0,f,c
  8054  0021DA                     l771:
  8055  0021DA  0E19               	movlw	25
  8056  0021DC  6419               	cpfsgt	___fldiv@aexp^0,c
  8057  0021DE  EFF3  F010         	goto	u3251
  8058  0021E2  EFF5  F010         	goto	u3250
  8059  0021E6                     u3251:
  8060  0021E6  EFB5  F010         	goto	l3183
  8061  0021EA                     u3250:
  8062  0021EA  500D               	movf	___fldiv@rem^0,w,c
  8063  0021EC  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  8064  0021EE  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  8065  0021F0  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  8066  0021F2  B4D8               	btfsc	status,2,c
  8067  0021F4  EFFE  F010         	goto	u3261
  8068  0021F8  EF00  F011         	goto	u3260
  8069  0021FC                     u3261:
  8070  0021FC  EF18  F011         	goto	l3209
  8071  002200                     u3260:
  8072  002200  8014               	bsf	___fldiv@grs^0,0,c
  8073  002202  EF18  F011         	goto	l3209
  8074  002206                     l3203:
  8075  002206  90D8               	bcf	status,0,c
  8076  002208  3601               	rlcf	___fldiv@b^0,f,c
  8077  00220A  3602               	rlcf	(___fldiv@b+1)^0,f,c
  8078  00220C  3603               	rlcf	(___fldiv@b+2)^0,f,c
  8079  00220E  3604               	rlcf	(___fldiv@b+3)^0,f,c
  8080  002210  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8081  002212  EF0D  F011         	goto	u3271
  8082  002216  EF0F  F011         	goto	u3270
  8083  00221A                     u3271:
  8084  00221A  EF10  F011         	goto	l780
  8085  00221E                     u3270:
  8086  00221E  8001               	bsf	___fldiv@b^0,0,c
  8087  002220                     l780:
  8088  002220  90D8               	bcf	status,0,c
  8089  002222  3614               	rlcf	___fldiv@grs^0,f,c
  8090  002224  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  8091  002226  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  8092  002228  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  8093  00222A  0612               	decf	___fldiv@new_exp^0,f,c
  8094  00222C  A0D8               	btfss	status,0,c
  8095  00222E  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  8096  002230                     l3209:
  8097  002230  AE03               	btfss	(___fldiv@b+2)^0,7,c
  8098  002232  EF1D  F011         	goto	u3281
  8099  002236  EF1F  F011         	goto	u3280
  8100  00223A                     u3281:
  8101  00223A  EF03  F011         	goto	l3203
  8102  00223E                     u3280:
  8103  00223E  0E00               	movlw	0
  8104  002240  6E19               	movwf	___fldiv@aexp^0,c
  8105  002242  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8106  002244  EF26  F011         	goto	u3291
  8107  002248  EF28  F011         	goto	u3290
  8108  00224C                     u3291:
  8109  00224C  EF4C  F011         	goto	l782
  8110  002250                     u3290:
  8111  002250  0EFF               	movlw	255
  8112  002252  1414               	andwf	___fldiv@grs^0,w,c
  8113  002254  6E09               	movwf	??___fldiv^0,c
  8114  002256  0EFF               	movlw	255
  8115  002258  1415               	andwf	(___fldiv@grs+1)^0,w,c
  8116  00225A  6E0A               	movwf	(??___fldiv+1)^0,c
  8117  00225C  0EFF               	movlw	255
  8118  00225E  1416               	andwf	(___fldiv@grs+2)^0,w,c
  8119  002260  6E0B               	movwf	(??___fldiv+2)^0,c
  8120  002262  0E7F               	movlw	127
  8121  002264  1417               	andwf	(___fldiv@grs+3)^0,w,c
  8122  002266  6E0C               	movwf	(??___fldiv+3)^0,c
  8123  002268  5009               	movf	??___fldiv^0,w,c
  8124  00226A  100A               	iorwf	(??___fldiv+1)^0,w,c
  8125  00226C  100B               	iorwf	(??___fldiv+2)^0,w,c
  8126  00226E  100C               	iorwf	(??___fldiv+3)^0,w,c
  8127  002270  B4D8               	btfsc	status,2,c
  8128  002272  EF3D  F011         	goto	u3301
  8129  002276  EF3F  F011         	goto	u3300
  8130  00227A                     u3301:
  8131  00227A  EF43  F011         	goto	l783
  8132  00227E                     u3300:
  8133  00227E                     l3217:
  8134  00227E  0E01               	movlw	1
  8135  002280  6E19               	movwf	___fldiv@aexp^0,c
  8136  002282  EF4C  F011         	goto	l782
  8137  002286                     l783:
  8138  002286  A001               	btfss	___fldiv@b^0,0,c
  8139  002288  EF48  F011         	goto	u3311
  8140  00228C  EF4A  F011         	goto	u3310
  8141  002290                     u3311:
  8142  002290  EF4C  F011         	goto	l782
  8143  002294                     u3310:
  8144  002294  EF3F  F011         	goto	l3217
  8145  002298                     l782:
  8146  002298  5019               	movf	___fldiv@aexp^0,w,c
  8147  00229A  B4D8               	btfsc	status,2,c
  8148  00229C  EF52  F011         	goto	u3321
  8149  0022A0  EF54  F011         	goto	u3320
  8150  0022A4                     u3321:
  8151  0022A4  EF78  F011         	goto	l3229
  8152  0022A8                     u3320:
  8153  0022A8  0E01               	movlw	1
  8154  0022AA  2601               	addwf	___fldiv@b^0,f,c
  8155  0022AC  0E00               	movlw	0
  8156  0022AE  2202               	addwfc	(___fldiv@b+1)^0,f,c
  8157  0022B0  2203               	addwfc	(___fldiv@b+2)^0,f,c
  8158  0022B2  2204               	addwfc	(___fldiv@b+3)^0,f,c
  8159  0022B4  A004               	btfss	(___fldiv@b+3)^0,0,c
  8160  0022B6  EF5F  F011         	goto	u3331
  8161  0022BA  EF61  F011         	goto	u3330
  8162  0022BE                     u3331:
  8163  0022BE  EF78  F011         	goto	l3229
  8164  0022C2                     u3330:
  8165  0022C2  C001  F009         	movff	___fldiv@b,??___fldiv
  8166  0022C6  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  8167  0022CA  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  8168  0022CE  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  8169  0022D2  340C               	rlcf	(??___fldiv+3)^0,w,c
  8170  0022D4  320C               	rrcf	(??___fldiv+3)^0,f,c
  8171  0022D6  320B               	rrcf	(??___fldiv+2)^0,f,c
  8172  0022D8  320A               	rrcf	(??___fldiv+1)^0,f,c
  8173  0022DA  3209               	rrcf	??___fldiv^0,f,c
  8174  0022DC  C009  F001         	movff	??___fldiv,___fldiv@b
  8175  0022E0  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  8176  0022E4  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  8177  0022E8  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  8178  0022EC  4A12               	infsnz	___fldiv@new_exp^0,f,c
  8179  0022EE  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  8180  0022F0                     l3229:
  8181  0022F0  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8182  0022F2  EF83  F011         	goto	u3341
  8183  0022F6  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  8184  0022F8  E108               	bnz	u3340
  8185  0022FA  2812               	incf	___fldiv@new_exp^0,w,c
  8186  0022FC  A0D8               	btfss	status,0,c
  8187  0022FE  EF83  F011         	goto	u3341
  8188  002302  EF85  F011         	goto	u3340
  8189  002306                     u3341:
  8190  002306  EF90  F011         	goto	l3233
  8191  00230A                     u3340:
  8192  00230A  0E00               	movlw	0
  8193  00230C  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8194  00230E  6812               	setf	___fldiv@new_exp^0,c
  8195  002310  0E00               	movlw	0
  8196  002312  6E01               	movwf	___fldiv@b^0,c
  8197  002314  0E00               	movlw	0
  8198  002316  6E02               	movwf	(___fldiv@b+1)^0,c
  8199  002318  0E00               	movlw	0
  8200  00231A  6E03               	movwf	(___fldiv@b+2)^0,c
  8201  00231C  0E00               	movlw	0
  8202  00231E  6E04               	movwf	(___fldiv@b+3)^0,c
  8203  002320                     l3233:
  8204  002320  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8205  002322  EF9D  F011         	goto	u3350
  8206  002326  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  8207  002328  E106               	bnz	u3351
  8208  00232A  0412               	decf	___fldiv@new_exp^0,w,c
  8209  00232C  B0D8               	btfsc	status,0,c
  8210  00232E  EF9B  F011         	goto	u3351
  8211  002332  EF9D  F011         	goto	u3350
  8212  002336                     u3351:
  8213  002336  EFAB  F011         	goto	l3237
  8214  00233A                     u3350:
  8215  00233A  0E00               	movlw	0
  8216  00233C  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8217  00233E  0E00               	movlw	0
  8218  002340  6E12               	movwf	___fldiv@new_exp^0,c
  8219  002342  0E00               	movlw	0
  8220  002344  6E01               	movwf	___fldiv@b^0,c
  8221  002346  0E00               	movlw	0
  8222  002348  6E02               	movwf	(___fldiv@b+1)^0,c
  8223  00234A  0E00               	movlw	0
  8224  00234C  6E03               	movwf	(___fldiv@b+2)^0,c
  8225  00234E  0E00               	movlw	0
  8226  002350  6E04               	movwf	(___fldiv@b+3)^0,c
  8227  002352  0E00               	movlw	0
  8228  002354  6E11               	movwf	___fldiv@sign^0,c
  8229  002356                     l3237:
  8230  002356  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  8231  00235A  A018               	btfss	___fldiv@bexp^0,0,c
  8232  00235C  EFB2  F011         	goto	u3361
  8233  002360  EFB4  F011         	goto	u3360
  8234  002364                     u3361:
  8235  002364  EFB7  F011         	goto	l3243
  8236  002368                     u3360:
  8237  002368  8E03               	bsf	(___fldiv@b+2)^0,7,c
  8238  00236A  EFB8  F011         	goto	l3245
  8239  00236E                     l3243:
  8240  00236E  9E03               	bcf	(___fldiv@b+2)^0,7,c
  8241  002370                     l3245:
  8242  002370  90D8               	bcf	status,0,c
  8243  002372  3018               	rrcf	___fldiv@bexp^0,w,c
  8244  002374  6E04               	movwf	(___fldiv@b+3)^0,c
  8245  002376  EF6E  F010         	goto	l3159
  8246  00237A                     l769:
  8247  00237A  0012               	return		;funcret
  8248  00237C                     __end_of___fldiv:
  8249                           	callstack 0
  8250                           
  8251 ;; *************** function ___awmod *****************
  8252 ;; Defined at:
  8253 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\awmod.c"
  8254 ;; Parameters:    Size  Location     Type
  8255 ;;  dividend        2    0[COMRAM] int 
  8256 ;;  divisor         2    2[COMRAM] int 
  8257 ;; Auto vars:     Size  Location     Type
  8258 ;;  sign            1    5[COMRAM] unsigned char 
  8259 ;;  counter         1    4[COMRAM] unsigned char 
  8260 ;; Return value:  Size  Location     Type
  8261 ;;                  2    0[COMRAM] int 
  8262 ;; Registers used:
  8263 ;;		wreg, status,2, status,0
  8264 ;; Tracked objects:
  8265 ;;		On entry : 0/0
  8266 ;;		On exit  : 0/0
  8267 ;;		Unchanged: 0/0
  8268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8269 ;;      Params:         4       0       0       0       0       0       0
  8270 ;;      Locals:         2       0       0       0       0       0       0
  8271 ;;      Temps:          0       0       0       0       0       0       0
  8272 ;;      Totals:         6       0       0       0       0       0       0
  8273 ;;Total ram usage:        6 bytes
  8274 ;; Hardware stack levels used:    1
  8275 ;; This function calls:
  8276 ;;		Nothing
  8277 ;; This function is called by:
  8278 ;;		_efgtoa
  8279 ;; This function uses a non-reentrant model
  8280 ;;
  8281                           
  8282                           	psect	text28
  8283  003472                     __ptext28:
  8284                           	callstack 0
  8285  003472                     ___awmod:
  8286                           	callstack 25
  8287  003472  0E00               	movlw	0
  8288  003474  6E06               	movwf	___awmod@sign^0,c
  8289  003476  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  8290  003478  EF42  F01A         	goto	u3620
  8291  00347C  EF40  F01A         	goto	u3621
  8292  003480                     u3621:
  8293  003480  EF48  F01A         	goto	l3441
  8294  003484                     u3620:
  8295  003484  6C01               	negf	___awmod@dividend^0,c
  8296  003486  1E02               	comf	(___awmod@dividend+1)^0,f,c
  8297  003488  B0D8               	btfsc	status,0,c
  8298  00348A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  8299  00348C  0E01               	movlw	1
  8300  00348E  6E06               	movwf	___awmod@sign^0,c
  8301  003490                     l3441:
  8302  003490  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  8303  003492  EF4F  F01A         	goto	u3630
  8304  003496  EF4D  F01A         	goto	u3631
  8305  00349A                     u3631:
  8306  00349A  EF53  F01A         	goto	l3445
  8307  00349E                     u3630:
  8308  00349E  6C03               	negf	___awmod@divisor^0,c
  8309  0034A0  1E04               	comf	(___awmod@divisor+1)^0,f,c
  8310  0034A2  B0D8               	btfsc	status,0,c
  8311  0034A4  2A04               	incf	(___awmod@divisor+1)^0,f,c
  8312  0034A6                     l3445:
  8313  0034A6  5003               	movf	___awmod@divisor^0,w,c
  8314  0034A8  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  8315  0034AA  B4D8               	btfsc	status,2,c
  8316  0034AC  EF5A  F01A         	goto	u3641
  8317  0034B0  EF5C  F01A         	goto	u3640
  8318  0034B4                     u3641:
  8319  0034B4  EF80  F01A         	goto	l3461
  8320  0034B8                     u3640:
  8321  0034B8  0E01               	movlw	1
  8322  0034BA  6E05               	movwf	___awmod@counter^0,c
  8323  0034BC  EF64  F01A         	goto	l3451
  8324  0034C0                     l3449:
  8325  0034C0  90D8               	bcf	status,0,c
  8326  0034C2  3603               	rlcf	___awmod@divisor^0,f,c
  8327  0034C4  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  8328  0034C6  2A05               	incf	___awmod@counter^0,f,c
  8329  0034C8                     l3451:
  8330  0034C8  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  8331  0034CA  EF69  F01A         	goto	u3651
  8332  0034CE  EF6B  F01A         	goto	u3650
  8333  0034D2                     u3651:
  8334  0034D2  EF60  F01A         	goto	l3449
  8335  0034D6                     u3650:
  8336  0034D6                     l3453:
  8337  0034D6  5003               	movf	___awmod@divisor^0,w,c
  8338  0034D8  5C01               	subwf	___awmod@dividend^0,w,c
  8339  0034DA  5004               	movf	(___awmod@divisor+1)^0,w,c
  8340  0034DC  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  8341  0034DE  A0D8               	btfss	status,0,c
  8342  0034E0  EF74  F01A         	goto	u3661
  8343  0034E4  EF76  F01A         	goto	u3660
  8344  0034E8                     u3661:
  8345  0034E8  EF7A  F01A         	goto	l3457
  8346  0034EC                     u3660:
  8347  0034EC  5003               	movf	___awmod@divisor^0,w,c
  8348  0034EE  5E01               	subwf	___awmod@dividend^0,f,c
  8349  0034F0  5004               	movf	(___awmod@divisor+1)^0,w,c
  8350  0034F2  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  8351  0034F4                     l3457:
  8352  0034F4  90D8               	bcf	status,0,c
  8353  0034F6  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  8354  0034F8  3203               	rrcf	___awmod@divisor^0,f,c
  8355  0034FA  2E05               	decfsz	___awmod@counter^0,f,c
  8356  0034FC  EF6B  F01A         	goto	l3453
  8357  003500                     l3461:
  8358  003500  5006               	movf	___awmod@sign^0,w,c
  8359  003502  B4D8               	btfsc	status,2,c
  8360  003504  EF86  F01A         	goto	u3671
  8361  003508  EF88  F01A         	goto	u3670
  8362  00350C                     u3671:
  8363  00350C  EF8C  F01A         	goto	l3465
  8364  003510                     u3670:
  8365  003510  6C01               	negf	___awmod@dividend^0,c
  8366  003512  1E02               	comf	(___awmod@dividend+1)^0,f,c
  8367  003514  B0D8               	btfsc	status,0,c
  8368  003516  2A02               	incf	(___awmod@dividend+1)^0,f,c
  8369  003518                     l3465:
  8370  003518  C001  F001         	movff	___awmod@dividend,?___awmod
  8371  00351C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  8372  003520  0012               	return		;funcret
  8373  003522                     __end_of___awmod:
  8374                           	callstack 0
  8375                           
  8376 ;; *************** function ___awdiv *****************
  8377 ;; Defined at:
  8378 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  8379 ;; Parameters:    Size  Location     Type
  8380 ;;  dividend        2    0[COMRAM] int 
  8381 ;;  divisor         2    2[COMRAM] int 
  8382 ;; Auto vars:     Size  Location     Type
  8383 ;;  quotient        2    6[COMRAM] int 
  8384 ;;  sign            1    5[COMRAM] unsigned char 
  8385 ;;  counter         1    4[COMRAM] unsigned char 
  8386 ;; Return value:  Size  Location     Type
  8387 ;;                  2    0[COMRAM] int 
  8388 ;; Registers used:
  8389 ;;		wreg, status,2, status,0
  8390 ;; Tracked objects:
  8391 ;;		On entry : 0/0
  8392 ;;		On exit  : 0/0
  8393 ;;		Unchanged: 0/0
  8394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8395 ;;      Params:         4       0       0       0       0       0       0
  8396 ;;      Locals:         4       0       0       0       0       0       0
  8397 ;;      Temps:          0       0       0       0       0       0       0
  8398 ;;      Totals:         8       0       0       0       0       0       0
  8399 ;;Total ram usage:        8 bytes
  8400 ;; Hardware stack levels used:    1
  8401 ;; This function calls:
  8402 ;;		Nothing
  8403 ;; This function is called by:
  8404 ;;		_efgtoa
  8405 ;; This function uses a non-reentrant model
  8406 ;;
  8407                           
  8408                           	psect	text29
  8409  0032F6                     __ptext29:
  8410                           	callstack 0
  8411  0032F6                     ___awdiv:
  8412                           	callstack 25
  8413  0032F6  0E00               	movlw	0
  8414  0032F8  6E06               	movwf	___awdiv@sign^0,c
  8415  0032FA  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  8416  0032FC  EF84  F019         	goto	u3560
  8417  003300  EF82  F019         	goto	u3561
  8418  003304                     u3561:
  8419  003304  EF8A  F019         	goto	l3397
  8420  003308                     u3560:
  8421  003308  6C03               	negf	___awdiv@divisor^0,c
  8422  00330A  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  8423  00330C  B0D8               	btfsc	status,0,c
  8424  00330E  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  8425  003310  0E01               	movlw	1
  8426  003312  6E06               	movwf	___awdiv@sign^0,c
  8427  003314                     l3397:
  8428  003314  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  8429  003316  EF91  F019         	goto	u3570
  8430  00331A  EF8F  F019         	goto	u3571
  8431  00331E                     u3571:
  8432  00331E  EF97  F019         	goto	l3403
  8433  003322                     u3570:
  8434  003322  6C01               	negf	___awdiv@dividend^0,c
  8435  003324  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  8436  003326  B0D8               	btfsc	status,0,c
  8437  003328  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  8438  00332A  0E01               	movlw	1
  8439  00332C  1A06               	xorwf	___awdiv@sign^0,f,c
  8440  00332E                     l3403:
  8441  00332E  0E00               	movlw	0
  8442  003330  6E08               	movwf	(___awdiv@quotient+1)^0,c
  8443  003332  0E00               	movlw	0
  8444  003334  6E07               	movwf	___awdiv@quotient^0,c
  8445  003336  5003               	movf	___awdiv@divisor^0,w,c
  8446  003338  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  8447  00333A  B4D8               	btfsc	status,2,c
  8448  00333C  EFA2  F019         	goto	u3581
  8449  003340  EFA4  F019         	goto	u3580
  8450  003344                     u3581:
  8451  003344  EFCC  F019         	goto	l3425
  8452  003348                     u3580:
  8453  003348  0E01               	movlw	1
  8454  00334A  6E05               	movwf	___awdiv@counter^0,c
  8455  00334C  EFAC  F019         	goto	l3411
  8456  003350                     l3409:
  8457  003350  90D8               	bcf	status,0,c
  8458  003352  3603               	rlcf	___awdiv@divisor^0,f,c
  8459  003354  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  8460  003356  2A05               	incf	___awdiv@counter^0,f,c
  8461  003358                     l3411:
  8462  003358  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  8463  00335A  EFB1  F019         	goto	u3591
  8464  00335E  EFB3  F019         	goto	u3590
  8465  003362                     u3591:
  8466  003362  EFA8  F019         	goto	l3409
  8467  003366                     u3590:
  8468  003366                     l3413:
  8469  003366  90D8               	bcf	status,0,c
  8470  003368  3607               	rlcf	___awdiv@quotient^0,f,c
  8471  00336A  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  8472  00336C  5003               	movf	___awdiv@divisor^0,w,c
  8473  00336E  5C01               	subwf	___awdiv@dividend^0,w,c
  8474  003370  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8475  003372  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  8476  003374  A0D8               	btfss	status,0,c
  8477  003376  EFBF  F019         	goto	u3601
  8478  00337A  EFC1  F019         	goto	u3600
  8479  00337E                     u3601:
  8480  00337E  EFC6  F019         	goto	l3421
  8481  003382                     u3600:
  8482  003382  5003               	movf	___awdiv@divisor^0,w,c
  8483  003384  5E01               	subwf	___awdiv@dividend^0,f,c
  8484  003386  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8485  003388  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  8486  00338A  8007               	bsf	___awdiv@quotient^0,0,c
  8487  00338C                     l3421:
  8488  00338C  90D8               	bcf	status,0,c
  8489  00338E  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  8490  003390  3203               	rrcf	___awdiv@divisor^0,f,c
  8491  003392  2E05               	decfsz	___awdiv@counter^0,f,c
  8492  003394  EFB3  F019         	goto	l3413
  8493  003398                     l3425:
  8494  003398  5006               	movf	___awdiv@sign^0,w,c
  8495  00339A  B4D8               	btfsc	status,2,c
  8496  00339C  EFD2  F019         	goto	u3611
  8497  0033A0  EFD4  F019         	goto	u3610
  8498  0033A4                     u3611:
  8499  0033A4  EFD8  F019         	goto	l3429
  8500  0033A8                     u3610:
  8501  0033A8  6C07               	negf	___awdiv@quotient^0,c
  8502  0033AA  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  8503  0033AC  B0D8               	btfsc	status,0,c
  8504  0033AE  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  8505  0033B0                     l3429:
  8506  0033B0  C007  F001         	movff	___awdiv@quotient,?___awdiv
  8507  0033B4  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  8508  0033B8  0012               	return		;funcret
  8509  0033BA                     __end_of___awdiv:
  8510                           	callstack 0
  8511                           
  8512 ;; *************** function _atoi *****************
  8513 ;; Defined at:
  8514 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\atoi.c"
  8515 ;; Parameters:    Size  Location     Type
  8516 ;;  s               2    7[COMRAM] PTR const unsigned char 
  8517 ;;		 -> STR_25(5), STR_17(5), STR_11(5), 
  8518 ;; Auto vars:     Size  Location     Type
  8519 ;;  n               2   20[COMRAM] int 
  8520 ;;  neg             2   13[COMRAM] int 
  8521 ;; Return value:  Size  Location     Type
  8522 ;;                  2    7[COMRAM] int 
  8523 ;; Registers used:
  8524 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8525 ;; Tracked objects:
  8526 ;;		On entry : 0/0
  8527 ;;		On exit  : 0/0
  8528 ;;		Unchanged: 0/0
  8529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8530 ;;      Params:         2       0       0       0       0       0       0
  8531 ;;      Locals:         9       0       0       0       0       0       0
  8532 ;;      Temps:          4       0       0       0       0       0       0
  8533 ;;      Totals:        15       0       0       0       0       0       0
  8534 ;;Total ram usage:       15 bytes
  8535 ;; Hardware stack levels used:    1
  8536 ;; Hardware stack levels required when called:    1
  8537 ;; This function calls:
  8538 ;;		___wmul
  8539 ;;		_isdigit
  8540 ;;		_isspace
  8541 ;; This function is called by:
  8542 ;;		_vfpfcnvrt
  8543 ;; This function uses a non-reentrant model
  8544 ;;
  8545                           
  8546                           	psect	text30
  8547  002BF8                     __ptext30:
  8548                           	callstack 0
  8549  002BF8                     _atoi:
  8550                           	callstack 25
  8551  002BF8  0E00               	movlw	0
  8552  002BFA  6E16               	movwf	(atoi@n+1)^0,c
  8553  002BFC  0E00               	movlw	0
  8554  002BFE  6E15               	movwf	atoi@n^0,c
  8555  002C00  0E00               	movlw	0
  8556  002C02  6E0F               	movwf	(atoi@neg+1)^0,c
  8557  002C04  0E00               	movlw	0
  8558  002C06  6E0E               	movwf	atoi@neg^0,c
  8559  002C08  EF08  F016         	goto	l3963
  8560  002C0C                     l3961:
  8561  002C0C  4A08               	infsnz	atoi@s^0,f,c
  8562  002C0E  2A09               	incf	(atoi@s+1)^0,f,c
  8563  002C10                     l3963:
  8564  002C10  0E01               	movlw	1
  8565  002C12  6E14               	movwf	_atoi$789^0,c
  8566  002C14  C008  FFF6         	movff	atoi@s,tblptrl
  8567  002C18  C009  FFF7         	movff	atoi@s+1,tblptrh
  8568  002C1C                     	if	0	;tblptru may be non-zero
  8569  002C1C                     	endif
  8570  002C1C                     	if	0	;tblptru may be non-zero
  8571  002C1C                     	endif
  8572  002C1C  0008               	tblrd		*
  8573  002C1E  50F5               	movf	tablat,w,c
  8574  002C20  0A20               	xorlw	32
  8575  002C22  B4D8               	btfsc	status,2,c
  8576  002C24  EF16  F016         	goto	u4661
  8577  002C28  EF18  F016         	goto	u4660
  8578  002C2C                     u4661:
  8579  002C2C  EF35  F016         	goto	l3971
  8580  002C30                     u4660:
  8581  002C30  0EF7               	movlw	247
  8582  002C32  6E0A               	movwf	??_atoi^0,c
  8583  002C34  0EFF               	movlw	255
  8584  002C36  6E0B               	movwf	(??_atoi+1)^0,c
  8585  002C38  C008  FFF6         	movff	atoi@s,tblptrl
  8586  002C3C  C009  FFF7         	movff	atoi@s+1,tblptrh
  8587  002C40                     	if	0	;tblptru may be non-zero
  8588  002C40                     	endif
  8589  002C40                     	if	0	;tblptru may be non-zero
  8590  002C40                     	endif
  8591  002C40  0008               	tblrd		*
  8592  002C42  50F5               	movf	tablat,w,c
  8593  002C44  6E0C               	movwf	(??_atoi+2)^0,c
  8594  002C46  6A0D               	clrf	(??_atoi+3)^0,c
  8595  002C48  500A               	movf	??_atoi^0,w,c
  8596  002C4A  260C               	addwf	(??_atoi+2)^0,f,c
  8597  002C4C  500B               	movf	(??_atoi+1)^0,w,c
  8598  002C4E  220D               	addwfc	(??_atoi+3)^0,f,c
  8599  002C50  500D               	movf	(??_atoi+3)^0,w,c
  8600  002C52  E109               	bnz	u4670
  8601  002C54  0E05               	movlw	5
  8602  002C56  5C0C               	subwf	(??_atoi+2)^0,w,c
  8603  002C58  A0D8               	btfss	status,0,c
  8604  002C5A  EF31  F016         	goto	u4671
  8605  002C5E  EF33  F016         	goto	u4670
  8606  002C62                     u4671:
  8607  002C62  EF35  F016         	goto	l3971
  8608  002C66                     u4670:
  8609  002C66  0E00               	movlw	0
  8610  002C68  6E14               	movwf	_atoi$789^0,c
  8611  002C6A                     l3971:
  8612  002C6A  C014  F010         	movff	_atoi$789,_atoi$788
  8613  002C6E  6A11               	clrf	(_atoi$788+1)^0,c
  8614  002C70  5010               	movf	_atoi$788^0,w,c
  8615  002C72  1011               	iorwf	(_atoi$788+1)^0,w,c
  8616  002C74  A4D8               	btfss	status,2,c
  8617  002C76  EF3F  F016         	goto	u4681
  8618  002C7A  EF41  F016         	goto	u4680
  8619  002C7E                     u4681:
  8620  002C7E  EF06  F016         	goto	l3961
  8621  002C82                     u4680:
  8622  002C82  EF4B  F016         	goto	l3981
  8623  002C86                     l3977:
  8624  002C86  0E00               	movlw	0
  8625  002C88  6E0F               	movwf	(atoi@neg+1)^0,c
  8626  002C8A  0E01               	movlw	1
  8627  002C8C  6E0E               	movwf	atoi@neg^0,c
  8628  002C8E                     l3979:
  8629  002C8E  4A08               	infsnz	atoi@s^0,f,c
  8630  002C90  2A09               	incf	(atoi@s+1)^0,f,c
  8631  002C92  EF80  F016         	goto	l3987
  8632  002C96                     l3981:
  8633  002C96  C008  FFF6         	movff	atoi@s,tblptrl
  8634  002C9A  C009  FFF7         	movff	atoi@s+1,tblptrh
  8635  002C9E                     	if	0	;tblptru may be non-zero
  8636  002C9E                     	endif
  8637  002C9E                     	if	0	;tblptru may be non-zero
  8638  002C9E                     	endif
  8639  002C9E  0008               	tblrd		*
  8640  002CA0  50F5               	movf	tablat,w,c
  8641  002CA2  6E0A               	movwf	??_atoi^0,c
  8642  002CA4  6A0B               	clrf	(??_atoi+1)^0,c
  8643                           
  8644                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8645                           ; Switch size 1, requested type "simple"
  8646                           ; Number of cases is 1, Range of values is 0 to 0
  8647                           ; switch strategies available:
  8648                           ; Name         Instructions Cycles
  8649                           ; simple_byte            4     3 (average)
  8650                           ;	Chosen strategy is simple_byte
  8651  002CA6  500B               	movf	(??_atoi+1)^0,w,c
  8652  002CA8  0A00               	xorlw	0	; case 0
  8653  002CAA  B4D8               	btfsc	status,2,c
  8654  002CAC  EF5A  F016         	goto	l4567
  8655  002CB0  EF80  F016         	goto	l3987
  8656  002CB4                     l4567:
  8657                           
  8658                           ; Switch size 1, requested type "simple"
  8659                           ; Number of cases is 2, Range of values is 43 to 45
  8660                           ; switch strategies available:
  8661                           ; Name         Instructions Cycles
  8662                           ; simple_byte            7     4 (average)
  8663                           ;	Chosen strategy is simple_byte
  8664  002CB4  500A               	movf	??_atoi^0,w,c
  8665  002CB6  0A2B               	xorlw	43	; case 43
  8666  002CB8  B4D8               	btfsc	status,2,c
  8667  002CBA  EF47  F016         	goto	l3979
  8668  002CBE  0A06               	xorlw	6	; case 45
  8669  002CC0  B4D8               	btfsc	status,2,c
  8670  002CC2  EF43  F016         	goto	l3977
  8671  002CC6  EF80  F016         	goto	l3987
  8672  002CCA                     l3983:
  8673  002CCA  C015  F001         	movff	atoi@n,___wmul@multiplier
  8674  002CCE  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  8675  002CD2  0E00               	movlw	0
  8676  002CD4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8677  002CD6  0E0A               	movlw	10
  8678  002CD8  6E03               	movwf	___wmul@multiplicand^0,c
  8679  002CDA  EC72  F01D         	call	___wmul	;wreg free
  8680  002CDE  C008  FFF6         	movff	atoi@s,tblptrl
  8681  002CE2  C009  FFF7         	movff	atoi@s+1,tblptrh
  8682  002CE6                     	if	0	;tblptru may be non-zero
  8683  002CE6                     	endif
  8684  002CE6                     	if	0	;tblptru may be non-zero
  8685  002CE6                     	endif
  8686  002CE6  0008               	tblrd		*
  8687  002CE8  50F5               	movf	tablat,w,c
  8688  002CEA  5E01               	subwf	?___wmul^0,f,c
  8689  002CEC  0E00               	movlw	0
  8690  002CEE  5A02               	subwfb	(?___wmul+1)^0,f,c
  8691  002CF0  0E30               	movlw	48
  8692  002CF2  2401               	addwf	?___wmul^0,w,c
  8693  002CF4  6E15               	movwf	atoi@n^0,c
  8694  002CF6  0E00               	movlw	0
  8695  002CF8  2002               	addwfc	(?___wmul+1)^0,w,c
  8696  002CFA  6E16               	movwf	(atoi@n+1)^0,c
  8697  002CFC  EF47  F016         	goto	l3979
  8698  002D00                     l3987:
  8699  002D00  0ED0               	movlw	208
  8700  002D02  6E0A               	movwf	??_atoi^0,c
  8701  002D04  0EFF               	movlw	255
  8702  002D06  6E0B               	movwf	(??_atoi+1)^0,c
  8703  002D08  C008  FFF6         	movff	atoi@s,tblptrl
  8704  002D0C  C009  FFF7         	movff	atoi@s+1,tblptrh
  8705  002D10                     	if	0	;tblptru may be non-zero
  8706  002D10                     	endif
  8707  002D10                     	if	0	;tblptru may be non-zero
  8708  002D10                     	endif
  8709  002D10  0008               	tblrd		*
  8710  002D12  50F5               	movf	tablat,w,c
  8711  002D14  6E0C               	movwf	(??_atoi+2)^0,c
  8712  002D16  6A0D               	clrf	(??_atoi+3)^0,c
  8713  002D18  500A               	movf	??_atoi^0,w,c
  8714  002D1A  260C               	addwf	(??_atoi+2)^0,f,c
  8715  002D1C  500B               	movf	(??_atoi+1)^0,w,c
  8716  002D1E  220D               	addwfc	(??_atoi+3)^0,f,c
  8717  002D20  500D               	movf	(??_atoi+3)^0,w,c
  8718  002D22  E10A               	bnz	u4690
  8719  002D24  0E0A               	movlw	10
  8720  002D26  5C0C               	subwf	(??_atoi+2)^0,w,c
  8721  002D28  A0D8               	btfss	status,0,c
  8722  002D2A  EF99  F016         	goto	u4691
  8723  002D2E  EF9C  F016         	goto	u4690
  8724  002D32                     u4691:
  8725  002D32  0E01               	movlw	1
  8726  002D34  EF9D  F016         	goto	u4700
  8727  002D38                     u4690:
  8728  002D38  0E00               	movlw	0
  8729  002D3A                     u4700:
  8730  002D3A  6E12               	movwf	_atoi$790^0,c
  8731  002D3C  6A13               	clrf	(_atoi$790+1)^0,c
  8732  002D3E  5012               	movf	_atoi$790^0,w,c
  8733  002D40  1013               	iorwf	(_atoi$790+1)^0,w,c
  8734  002D42  A4D8               	btfss	status,2,c
  8735  002D44  EFA6  F016         	goto	u4711
  8736  002D48  EFA8  F016         	goto	u4710
  8737  002D4C                     u4711:
  8738  002D4C  EF65  F016         	goto	l3983
  8739  002D50                     u4710:
  8740  002D50  500E               	movf	atoi@neg^0,w,c
  8741  002D52  100F               	iorwf	(atoi@neg+1)^0,w,c
  8742  002D54  A4D8               	btfss	status,2,c
  8743  002D56  EFAF  F016         	goto	u4721
  8744  002D5A  EFB1  F016         	goto	u4720
  8745  002D5E                     u4721:
  8746  002D5E  EFBF  F016         	goto	l1072
  8747  002D62                     u4720:
  8748  002D62  C015  F00A         	movff	atoi@n,??_atoi
  8749  002D66  C016  F00B         	movff	atoi@n+1,??_atoi+1
  8750  002D6A  1E0A               	comf	??_atoi^0,f,c
  8751  002D6C  1E0B               	comf	(??_atoi+1)^0,f,c
  8752  002D6E  4A0A               	infsnz	??_atoi^0,f,c
  8753  002D70  2A0B               	incf	(??_atoi+1)^0,f,c
  8754  002D72  C00A  F008         	movff	??_atoi,?_atoi
  8755  002D76  C00B  F009         	movff	??_atoi+1,?_atoi+1
  8756  002D7A  EFC3  F016         	goto	l1075
  8757  002D7E                     l1072:
  8758  002D7E  C015  F008         	movff	atoi@n,?_atoi
  8759  002D82  C016  F009         	movff	atoi@n+1,?_atoi+1
  8760  002D86                     l1075:
  8761  002D86  0012               	return		;funcret
  8762  002D88                     __end_of_atoi:
  8763                           	callstack 0
  8764                           
  8765 ;; *************** function _isspace *****************
  8766 ;; Defined at:
  8767 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\isspace.c"
  8768 ;; Parameters:    Size  Location     Type
  8769 ;;  c               2    0[COMRAM] int 
  8770 ;; Auto vars:     Size  Location     Type
  8771 ;;		None
  8772 ;; Return value:  Size  Location     Type
  8773 ;;                  2    0[COMRAM] int 
  8774 ;; Registers used:
  8775 ;;		wreg, status,2, status,0
  8776 ;; Tracked objects:
  8777 ;;		On entry : 0/0
  8778 ;;		On exit  : 0/0
  8779 ;;		Unchanged: 0/0
  8780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8781 ;;      Params:         2       0       0       0       0       0       0
  8782 ;;      Locals:         1       0       0       0       0       0       0
  8783 ;;      Temps:          4       0       0       0       0       0       0
  8784 ;;      Totals:         7       0       0       0       0       0       0
  8785 ;;Total ram usage:        7 bytes
  8786 ;; Hardware stack levels used:    1
  8787 ;; This function calls:
  8788 ;;		Nothing
  8789 ;; This function is called by:
  8790 ;;		_atoi
  8791 ;; This function uses a non-reentrant model
  8792 ;;
  8793                           
  8794                           	psect	text31
  8795  0038D6                     __ptext31:
  8796                           	callstack 0
  8797  0038D6                     _isspace:
  8798                           	callstack 25
  8799  0038D6  0E01               	movlw	1
  8800  0038D8  6E07               	movwf	_isspace$819^0,c
  8801  0038DA  0E20               	movlw	32
  8802  0038DC  1801               	xorwf	isspace@c^0,w,c
  8803  0038DE  1002               	iorwf	(isspace@c+1)^0,w,c
  8804  0038E0  B4D8               	btfsc	status,2,c
  8805  0038E2  EF75  F01C         	goto	u4121
  8806  0038E6  EF77  F01C         	goto	u4120
  8807  0038EA                     u4121:
  8808  0038EA  EF90  F01C         	goto	l3657
  8809  0038EE                     u4120:
  8810  0038EE  0EF7               	movlw	247
  8811  0038F0  6E03               	movwf	??_isspace^0,c
  8812  0038F2  0EFF               	movlw	255
  8813  0038F4  6E04               	movwf	(??_isspace+1)^0,c
  8814  0038F6  C001  F005         	movff	isspace@c,??_isspace+2
  8815  0038FA  C002  F006         	movff	isspace@c+1,??_isspace+3
  8816  0038FE  5003               	movf	??_isspace^0,w,c
  8817  003900  2605               	addwf	(??_isspace+2)^0,f,c
  8818  003902  5004               	movf	(??_isspace+1)^0,w,c
  8819  003904  2206               	addwfc	(??_isspace+3)^0,f,c
  8820  003906  5006               	movf	(??_isspace+3)^0,w,c
  8821  003908  E109               	bnz	u4130
  8822  00390A  0E05               	movlw	5
  8823  00390C  5C05               	subwf	(??_isspace+2)^0,w,c
  8824  00390E  A0D8               	btfss	status,0,c
  8825  003910  EF8C  F01C         	goto	u4131
  8826  003914  EF8E  F01C         	goto	u4130
  8827  003918                     u4131:
  8828  003918  EF90  F01C         	goto	l3657
  8829  00391C                     u4130:
  8830  00391C  0E00               	movlw	0
  8831  00391E  6E07               	movwf	_isspace$819^0,c
  8832  003920                     l3657:
  8833  003920  C007  F001         	movff	_isspace$819,?_isspace
  8834  003924  6A02               	clrf	(?_isspace+1)^0,c
  8835  003926  0012               	return		;funcret
  8836  003928                     __end_of_isspace:
  8837                           	callstack 0
  8838                           
  8839 ;; *************** function _isdigit *****************
  8840 ;; Defined at:
  8841 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\isdigit.c"
  8842 ;; Parameters:    Size  Location     Type
  8843 ;;  c               2    0[COMRAM] int 
  8844 ;; Auto vars:     Size  Location     Type
  8845 ;;		None
  8846 ;; Return value:  Size  Location     Type
  8847 ;;                  2    0[COMRAM] int 
  8848 ;; Registers used:
  8849 ;;		wreg, status,2, status,0
  8850 ;; Tracked objects:
  8851 ;;		On entry : 0/0
  8852 ;;		On exit  : 0/0
  8853 ;;		Unchanged: 0/0
  8854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8855 ;;      Params:         2       0       0       0       0       0       0
  8856 ;;      Locals:         0       0       0       0       0       0       0
  8857 ;;      Temps:          4       0       0       0       0       0       0
  8858 ;;      Totals:         6       0       0       0       0       0       0
  8859 ;;Total ram usage:        6 bytes
  8860 ;; Hardware stack levels used:    1
  8861 ;; This function calls:
  8862 ;;		Nothing
  8863 ;; This function is called by:
  8864 ;;		_vfpfcnvrt
  8865 ;;		_atoi
  8866 ;; This function uses a non-reentrant model
  8867 ;;
  8868                           
  8869                           	psect	text32
  8870  003A22                     __ptext32:
  8871                           	callstack 0
  8872  003A22                     _isdigit:
  8873                           	callstack 26
  8874  003A22  0ED0               	movlw	208
  8875  003A24  6E03               	movwf	??_isdigit^0,c
  8876  003A26  0EFF               	movlw	255
  8877  003A28  6E04               	movwf	(??_isdigit+1)^0,c
  8878  003A2A  C001  F005         	movff	isdigit@c,??_isdigit+2
  8879  003A2E  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  8880  003A32  5003               	movf	??_isdigit^0,w,c
  8881  003A34  2605               	addwf	(??_isdigit+2)^0,f,c
  8882  003A36  5004               	movf	(??_isdigit+1)^0,w,c
  8883  003A38  2206               	addwfc	(??_isdigit+3)^0,f,c
  8884  003A3A  5006               	movf	(??_isdigit+3)^0,w,c
  8885  003A3C  E10A               	bnz	u4100
  8886  003A3E  0E0A               	movlw	10
  8887  003A40  5C05               	subwf	(??_isdigit+2)^0,w,c
  8888  003A42  A0D8               	btfss	status,0,c
  8889  003A44  EF26  F01D         	goto	u4101
  8890  003A48  EF29  F01D         	goto	u4100
  8891  003A4C                     u4101:
  8892  003A4C  0E01               	movlw	1
  8893  003A4E  EF2A  F01D         	goto	u4110
  8894  003A52                     u4100:
  8895  003A52  0E00               	movlw	0
  8896  003A54                     u4110:
  8897  003A54  6E01               	movwf	?_isdigit^0,c
  8898  003A56  6A02               	clrf	(?_isdigit+1)^0,c
  8899  003A58  0012               	return		;funcret
  8900  003A5A                     __end_of_isdigit:
  8901                           	callstack 0
  8902                           
  8903 ;; *************** function ___wmul *****************
  8904 ;; Defined at:
  8905 ;;		line 15 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  8906 ;; Parameters:    Size  Location     Type
  8907 ;;  multiplier      2    0[COMRAM] unsigned int 
  8908 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8909 ;; Auto vars:     Size  Location     Type
  8910 ;;  product         2    4[COMRAM] unsigned int 
  8911 ;; Return value:  Size  Location     Type
  8912 ;;                  2    0[COMRAM] unsigned int 
  8913 ;; Registers used:
  8914 ;;		wreg, status,2, status,0, prodl, prodh
  8915 ;; Tracked objects:
  8916 ;;		On entry : 0/0
  8917 ;;		On exit  : 0/0
  8918 ;;		Unchanged: 0/0
  8919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8920 ;;      Params:         4       0       0       0       0       0       0
  8921 ;;      Locals:         2       0       0       0       0       0       0
  8922 ;;      Temps:          0       0       0       0       0       0       0
  8923 ;;      Totals:         6       0       0       0       0       0       0
  8924 ;;Total ram usage:        6 bytes
  8925 ;; Hardware stack levels used:    1
  8926 ;; This function calls:
  8927 ;;		Nothing
  8928 ;; This function is called by:
  8929 ;;		_atoi
  8930 ;;		_pwmSet1
  8931 ;;		_pwmSet2
  8932 ;; This function uses a non-reentrant model
  8933 ;;
  8934                           
  8935                           	psect	text33
  8936  003AE4                     __ptext33:
  8937                           	callstack 0
  8938  003AE4                     ___wmul:
  8939                           	callstack 25
  8940  003AE4  5001               	movf	___wmul@multiplier^0,w,c
  8941  003AE6  0203               	mulwf	___wmul@multiplicand^0,c
  8942  003AE8  CFF3 F005          	movff	prodl,___wmul@product
  8943  003AEC  CFF4 F006          	movff	prodh,___wmul@product+1
  8944  003AF0  5001               	movf	___wmul@multiplier^0,w,c
  8945  003AF2  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8946  003AF4  50F3               	movf	243,w,c
  8947  003AF6  2606               	addwf	(___wmul@product+1)^0,f,c
  8948  003AF8  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8949  003AFA  0203               	mulwf	___wmul@multiplicand^0,c
  8950  003AFC  50F3               	movf	243,w,c
  8951  003AFE  2606               	addwf	(___wmul@product+1)^0,f,c
  8952  003B00  C005  F001         	movff	___wmul@product,?___wmul
  8953  003B04  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8954  003B08  0012               	return		;funcret
  8955  003B0A                     __end_of___wmul:
  8956                           	callstack 0
  8957                           
  8958 ;; *************** function _lcd_str *****************
  8959 ;; Defined at:
  8960 ;;		line 47 in file "lcd.c"
  8961 ;; Parameters:    Size  Location     Type
  8962 ;;  str             2    7[COMRAM] PTR const unsigned char 
  8963 ;;		 -> STR_30(14), STR_29(13), STR_28(9), STR_27(14), 
  8964 ;;		 -> STR_26(3), esvaziar_tanque@y(8), STR_24(11), STR_23(14), 
  8965 ;;		 -> STR_22(11), STR_21(11), STR_20(11), STR_19(3), 
  8966 ;;		 -> STR_18(8), ver_quantidade@y(8), STR_16(14), STR_15(13), 
  8967 ;;		 -> STR_14(9), STR_13(12), STR_12(3), encher_tanque@y(8), 
  8968 ;;		 -> STR_10(11), STR_9(16), STR_8(11), STR_7(11), 
  8969 ;;		 -> STR_6(12), STR_5(19), STR_4(15), STR_3(14), 
  8970 ;;		 -> STR_2(11), STR_1(17), 
  8971 ;; Auto vars:     Size  Location     Type
  8972 ;;  i               1   11[COMRAM] unsigned char 
  8973 ;; Return value:  Size  Location     Type
  8974 ;;                  1    wreg      void 
  8975 ;; Registers used:
  8976 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8977 ;; Tracked objects:
  8978 ;;		On entry : 0/0
  8979 ;;		On exit  : 0/0
  8980 ;;		Unchanged: 0/0
  8981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8982 ;;      Params:         2       0       0       0       0       0       0
  8983 ;;      Locals:         1       0       0       0       0       0       0
  8984 ;;      Temps:          2       0       0       0       0       0       0
  8985 ;;      Totals:         5       0       0       0       0       0       0
  8986 ;;Total ram usage:        5 bytes
  8987 ;; Hardware stack levels used:    1
  8988 ;; Hardware stack levels required when called:    2
  8989 ;; This function calls:
  8990 ;;		_lcd_dat
  8991 ;; This function is called by:
  8992 ;;		_main
  8993 ;;		_encher_tanque
  8994 ;;		_ver_quantidade
  8995 ;;		_esvaziar_tanque
  8996 ;; This function uses a non-reentrant model
  8997 ;;
  8998                           
  8999                           	psect	text34
  9000  0035CC                     __ptext34:
  9001                           	callstack 0
  9002  0035CC                     _lcd_str:
  9003                           	callstack 27
  9004  0035CC                     
  9005                           ;lcd.c: 48:     unsigned char i = 0;
  9006  0035CC  0E00               	movlw	0
  9007  0035CE  6E0C               	movwf	lcd_str@i^0,c
  9008                           
  9009                           ;lcd.c: 50:     while (str[i] != 0) {
  9010  0035D0  EF03  F01B         	goto	l4181
  9011  0035D4                     l4177:
  9012                           
  9013                           ;lcd.c: 51:         lcd_dat(str[i]);
  9014  0035D4  500C               	movf	lcd_str@i^0,w,c
  9015  0035D6  2408               	addwf	lcd_str@str^0,w,c
  9016  0035D8  6E0A               	movwf	??_lcd_str^0,c
  9017  0035DA  0E00               	movlw	0
  9018  0035DC  2009               	addwfc	(lcd_str@str+1)^0,w,c
  9019  0035DE  6E0B               	movwf	(??_lcd_str+1)^0,c
  9020  0035E0  C00A  FFF6         	movff	??_lcd_str,tblptrl
  9021  0035E4  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
  9022  0035E8  6AF8               	clrf	tblptru,c
  9023  0035EA  0E05               	movlw	(high __ramtop+-1)
  9024  0035EC  64F7               	cpfsgt	tblptrh,c
  9025  0035EE  D003               	bra	u4967
  9026  0035F0  0008               	tblrd		*
  9027  0035F2  50F5               	movf	tablat,w,c
  9028  0035F4  D005               	bra	u4960
  9029  0035F6                     u4967:
  9030  0035F6  CFF6 FFE9          	movff	tblptrl,fsr0l
  9031  0035FA  CFF7 FFEA          	movff	tblptrh,fsr0h
  9032  0035FE  50EF               	movf	indf0,w,c
  9033  003600                     u4960:
  9034  003600  EC48  F01D         	call	_lcd_dat
  9035  003604                     
  9036                           ;lcd.c: 52:         i++;
  9037  003604  2A0C               	incf	lcd_str@i^0,f,c
  9038  003606                     l4181:
  9039                           
  9040                           ;lcd.c: 50:     while (str[i] != 0) {
  9041  003606  500C               	movf	lcd_str@i^0,w,c
  9042  003608  2408               	addwf	lcd_str@str^0,w,c
  9043  00360A  6E0A               	movwf	??_lcd_str^0,c
  9044  00360C  0E00               	movlw	0
  9045  00360E  2009               	addwfc	(lcd_str@str+1)^0,w,c
  9046  003610  6E0B               	movwf	(??_lcd_str+1)^0,c
  9047  003612  C00A  FFF6         	movff	??_lcd_str,tblptrl
  9048  003616  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
  9049  00361A  6AF8               	clrf	tblptru,c
  9050  00361C  0E05               	movlw	(high __ramtop+-1)
  9051  00361E  64F7               	cpfsgt	tblptrh,c
  9052  003620  D003               	bra	u4977
  9053  003622  0008               	tblrd		*
  9054  003624  50F5               	movf	tablat,w,c
  9055  003626  D005               	bra	u4970
  9056  003628                     u4977:
  9057  003628  CFF6 FFE9          	movff	tblptrl,fsr0l
  9058  00362C  CFF7 FFEA          	movff	tblptrh,fsr0h
  9059  003630  50EF               	movf	indf0,w,c
  9060  003632                     u4970:
  9061  003632  0900               	iorlw	0
  9062  003634  A4D8               	btfss	status,2,c
  9063  003636  EF1F  F01B         	goto	u4981
  9064  00363A  EF21  F01B         	goto	u4980
  9065  00363E                     u4981:
  9066  00363E  EFEA  F01A         	goto	l4177
  9067  003642                     u4980:
  9068  003642  0012               	return		;funcret
  9069  003644                     __end_of_lcd_str:
  9070                           	callstack 0
  9071                           
  9072 ;; *************** function _lcd_dat *****************
  9073 ;; Defined at:
  9074 ;;		line 19 in file "lcd.c"
  9075 ;; Parameters:    Size  Location     Type
  9076 ;;  val             1    wreg     unsigned char 
  9077 ;; Auto vars:     Size  Location     Type
  9078 ;;  val             1    6[COMRAM] unsigned char 
  9079 ;; Return value:  Size  Location     Type
  9080 ;;                  1    wreg      void 
  9081 ;; Registers used:
  9082 ;;		wreg, status,2, status,0, cstack
  9083 ;; Tracked objects:
  9084 ;;		On entry : 0/0
  9085 ;;		On exit  : 0/0
  9086 ;;		Unchanged: 0/0
  9087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9088 ;;      Params:         0       0       0       0       0       0       0
  9089 ;;      Locals:         1       0       0       0       0       0       0
  9090 ;;      Temps:          0       0       0       0       0       0       0
  9091 ;;      Totals:         1       0       0       0       0       0       0
  9092 ;;Total ram usage:        1 bytes
  9093 ;; Hardware stack levels used:    1
  9094 ;; Hardware stack levels required when called:    1
  9095 ;; This function calls:
  9096 ;;		_atraso_ms
  9097 ;;		_lcd_wr
  9098 ;; This function is called by:
  9099 ;;		_lcd_str
  9100 ;; This function uses a non-reentrant model
  9101 ;;
  9102                           
  9103                           	psect	text35
  9104  003A90                     __ptext35:
  9105                           	callstack 0
  9106  003A90                     _lcd_dat:
  9107                           	callstack 27
  9108                           
  9109                           ;incstack = 0
  9110                           ;lcd_dat@val stored from wreg
  9111  003A90  6E07               	movwf	lcd_dat@val^0,c
  9112  003A92                     
  9113                           ;lcd.c: 20:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  9114  003A92  8284               	bsf	132,1,c	;volatile
  9115  003A94                     
  9116                           ;lcd.c: 21:     lcd_wr(val);
  9117  003A94  5007               	movf	lcd_dat@val^0,w,c
  9118  003A96  EC9E  F01D         	call	_lcd_wr
  9119  003A9A                     
  9120                           ;lcd.c: 22:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<2));
  9121  003A9A  8484               	bsf	132,2,c	;volatile
  9122  003A9C                     
  9123                           ;lcd.c: 23:     atraso_ms(3);
  9124  003A9C  0E00               	movlw	0
  9125  003A9E  6E02               	movwf	(atraso_ms@t+1)^0,c
  9126  003AA0  0E03               	movlw	3
  9127  003AA2  6E01               	movwf	atraso_ms@t^0,c
  9128  003AA4  EC22  F01B         	call	_atraso_ms	;wreg free
  9129  003AA8                     
  9130                           ;lcd.c: 24:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  9131  003AA8  9284               	bcf	132,1,c	;volatile
  9132  003AAA                     
  9133                           ;lcd.c: 25:     atraso_ms(3);
  9134  003AAA  0E00               	movlw	0
  9135  003AAC  6E02               	movwf	(atraso_ms@t+1)^0,c
  9136  003AAE  0E03               	movlw	3
  9137  003AB0  6E01               	movwf	atraso_ms@t^0,c
  9138  003AB2  EC22  F01B         	call	_atraso_ms	;wreg free
  9139  003AB6                     
  9140                           ;lcd.c: 26:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  9141  003AB6  8284               	bsf	132,1,c	;volatile
  9142  003AB8  0012               	return		;funcret
  9143  003ABA                     __end_of_lcd_dat:
  9144                           	callstack 0
  9145                           
  9146 ;; *************** function _lcd_cmd *****************
  9147 ;; Defined at:
  9148 ;;		line 9 in file "lcd.c"
  9149 ;; Parameters:    Size  Location     Type
  9150 ;;  val             1    wreg     unsigned char 
  9151 ;; Auto vars:     Size  Location     Type
  9152 ;;  val             1    6[COMRAM] unsigned char 
  9153 ;; Return value:  Size  Location     Type
  9154 ;;                  1    wreg      void 
  9155 ;; Registers used:
  9156 ;;		wreg, status,2, status,0, cstack
  9157 ;; Tracked objects:
  9158 ;;		On entry : 0/0
  9159 ;;		On exit  : 0/0
  9160 ;;		Unchanged: 0/0
  9161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9162 ;;      Params:         0       0       0       0       0       0       0
  9163 ;;      Locals:         1       0       0       0       0       0       0
  9164 ;;      Temps:          0       0       0       0       0       0       0
  9165 ;;      Totals:         1       0       0       0       0       0       0
  9166 ;;Total ram usage:        1 bytes
  9167 ;; Hardware stack levels used:    1
  9168 ;; Hardware stack levels required when called:    1
  9169 ;; This function calls:
  9170 ;;		_atraso_ms
  9171 ;;		_lcd_wr
  9172 ;; This function is called by:
  9173 ;;		_lcd_init
  9174 ;;		_main
  9175 ;;		_encher_tanque
  9176 ;;		_ver_quantidade
  9177 ;;		_esvaziar_tanque
  9178 ;; This function uses a non-reentrant model
  9179 ;;
  9180                           
  9181                           	psect	text36
  9182  003ABA                     __ptext36:
  9183                           	callstack 0
  9184  003ABA                     _lcd_cmd:
  9185                           	callstack 28
  9186                           
  9187                           ;incstack = 0
  9188                           ;lcd_cmd@val stored from wreg
  9189  003ABA  6E07               	movwf	lcd_cmd@val^0,c
  9190  003ABC                     
  9191                           ;lcd.c: 10:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  9192  003ABC  8284               	bsf	132,1,c	;volatile
  9193  003ABE                     
  9194                           ;lcd.c: 11:     lcd_wr(val);
  9195  003ABE  5007               	movf	lcd_cmd@val^0,w,c
  9196  003AC0  EC9E  F01D         	call	_lcd_wr
  9197  003AC4                     
  9198                           ;lcd.c: 12:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<2));
  9199  003AC4  9484               	bcf	132,2,c	;volatile
  9200  003AC6                     
  9201                           ;lcd.c: 13:     atraso_ms(3);
  9202  003AC6  0E00               	movlw	0
  9203  003AC8  6E02               	movwf	(atraso_ms@t+1)^0,c
  9204  003ACA  0E03               	movlw	3
  9205  003ACC  6E01               	movwf	atraso_ms@t^0,c
  9206  003ACE  EC22  F01B         	call	_atraso_ms	;wreg free
  9207  003AD2                     
  9208                           ;lcd.c: 14:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  9209  003AD2  9284               	bcf	132,1,c	;volatile
  9210  003AD4                     
  9211                           ;lcd.c: 15:     atraso_ms(3);
  9212  003AD4  0E00               	movlw	0
  9213  003AD6  6E02               	movwf	(atraso_ms@t+1)^0,c
  9214  003AD8  0E03               	movlw	3
  9215  003ADA  6E01               	movwf	atraso_ms@t^0,c
  9216  003ADC  EC22  F01B         	call	_atraso_ms	;wreg free
  9217  003AE0                     
  9218                           ;lcd.c: 16:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  9219  003AE0  8284               	bsf	132,1,c	;volatile
  9220  003AE2  0012               	return		;funcret
  9221  003AE4                     __end_of_lcd_cmd:
  9222                           	callstack 0
  9223                           
  9224 ;; *************** function _lcd_wr *****************
  9225 ;; Defined at:
  9226 ;;		line 5 in file "lcd.c"
  9227 ;; Parameters:    Size  Location     Type
  9228 ;;  val             1    wreg     unsigned char 
  9229 ;; Auto vars:     Size  Location     Type
  9230 ;;  val             1    0[COMRAM] unsigned char 
  9231 ;; Return value:  Size  Location     Type
  9232 ;;                  1    wreg      void 
  9233 ;; Registers used:
  9234 ;;		wreg
  9235 ;; Tracked objects:
  9236 ;;		On entry : 0/0
  9237 ;;		On exit  : 0/0
  9238 ;;		Unchanged: 0/0
  9239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9240 ;;      Params:         0       0       0       0       0       0       0
  9241 ;;      Locals:         1       0       0       0       0       0       0
  9242 ;;      Temps:          0       0       0       0       0       0       0
  9243 ;;      Totals:         1       0       0       0       0       0       0
  9244 ;;Total ram usage:        1 bytes
  9245 ;; Hardware stack levels used:    1
  9246 ;; This function calls:
  9247 ;;		Nothing
  9248 ;; This function is called by:
  9249 ;;		_lcd_cmd
  9250 ;;		_lcd_dat
  9251 ;; This function uses a non-reentrant model
  9252 ;;
  9253                           
  9254                           	psect	text37
  9255  003B3C                     __ptext37:
  9256                           	callstack 0
  9257  003B3C                     _lcd_wr:
  9258                           	callstack 27
  9259                           
  9260                           ;incstack = 0
  9261                           ;lcd_wr@val stored from wreg
  9262  003B3C  6E01               	movwf	lcd_wr@val^0,c
  9263  003B3E                     
  9264                           ;lcd.c: 6:     (*(volatile __near unsigned char*)0xF83) = val;
  9265  003B3E  C001  FF83         	movff	lcd_wr@val,3971	;volatile
  9266  003B42  0012               	return		;funcret
  9267  003B44                     __end_of_lcd_wr:
  9268                           	callstack 0
  9269                           
  9270 ;; *************** function _atraso_ms *****************
  9271 ;; Defined at:
  9272 ;;		line 3 in file "delay.c"
  9273 ;; Parameters:    Size  Location     Type
  9274 ;;  t               2    0[COMRAM] int 
  9275 ;; Auto vars:     Size  Location     Type
  9276 ;;  i               2    2[COMRAM] volatile unsigned int 
  9277 ;;  k               1    5[COMRAM] volatile unsigned char 
  9278 ;;  j               1    4[COMRAM] volatile unsigned char 
  9279 ;; Return value:  Size  Location     Type
  9280 ;;                  1    wreg      void 
  9281 ;; Registers used:
  9282 ;;		wreg, status,2, status,0
  9283 ;; Tracked objects:
  9284 ;;		On entry : 0/0
  9285 ;;		On exit  : 0/0
  9286 ;;		Unchanged: 0/0
  9287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9288 ;;      Params:         2       0       0       0       0       0       0
  9289 ;;      Locals:         4       0       0       0       0       0       0
  9290 ;;      Temps:          0       0       0       0       0       0       0
  9291 ;;      Totals:         6       0       0       0       0       0       0
  9292 ;;Total ram usage:        6 bytes
  9293 ;; Hardware stack levels used:    1
  9294 ;; This function calls:
  9295 ;;		Nothing
  9296 ;; This function is called by:
  9297 ;;		_lcd_cmd
  9298 ;;		_lcd_dat
  9299 ;;		_lcd_init
  9300 ;;		_main
  9301 ;;		_encher_tanque
  9302 ;;		_esvaziar_tanque
  9303 ;;		_tc_tecla
  9304 ;; This function uses a non-reentrant model
  9305 ;;
  9306                           
  9307                           	psect	text38
  9308  003644                     __ptext38:
  9309                           	callstack 0
  9310  003644                     _atraso_ms:
  9311                           	callstack 27
  9312  003644                     
  9313                           ;delay.c: 4:     volatile unsigned char j, k;;delay.c: 5:     volatile unsigned int i;;d
      +                          elay.c: 7:     for (i = 0; i < (t); i++) {
  9314  003644  0E00               	movlw	0
  9315  003646  6E04               	movwf	(atraso_ms@i+1)^0,c	;volatile
  9316  003648  0E00               	movlw	0
  9317  00364A  6E03               	movwf	atraso_ms@i^0,c	;volatile
  9318  00364C  EF48  F01B         	goto	l4045
  9319  003650                     l4023:
  9320                           
  9321                           ;delay.c: 8:         for (j = 0; j < 41; j++) {
  9322  003650  0E00               	movlw	0
  9323  003652  6E05               	movwf	atraso_ms@j^0,c	;volatile
  9324  003654                     l4025:
  9325  003654  0E28               	movlw	40
  9326  003656  6405               	cpfsgt	atraso_ms@j^0,c	;volatile
  9327  003658  EF30  F01B         	goto	u4781
  9328  00365C  EF32  F01B         	goto	u4780
  9329  003660                     u4781:
  9330  003660  EF34  F01B         	goto	l4029
  9331  003664                     u4780:
  9332  003664  EF46  F01B         	goto	l4043
  9333  003668                     l4029:
  9334                           
  9335                           ;delay.c: 9:             for (k = 0; k < 3; k++);
  9336  003668  0E00               	movlw	0
  9337  00366A  6E06               	movwf	atraso_ms@k^0,c	;volatile
  9338  00366C                     l4031:
  9339  00366C  0E02               	movlw	2
  9340  00366E  6406               	cpfsgt	atraso_ms@k^0,c	;volatile
  9341  003670  EF3C  F01B         	goto	u4791
  9342  003674  EF3E  F01B         	goto	u4790
  9343  003678                     u4791:
  9344  003678  EF40  F01B         	goto	l4035
  9345  00367C                     u4790:
  9346  00367C  EF43  F01B         	goto	l4039
  9347  003680                     l4035:
  9348  003680  2A06               	incf	atraso_ms@k^0,f,c	;volatile
  9349  003682  EF36  F01B         	goto	l4031
  9350  003686                     l4039:
  9351                           
  9352                           ;delay.c: 10:         }
  9353  003686  2A05               	incf	atraso_ms@j^0,f,c	;volatile
  9354  003688  EF2A  F01B         	goto	l4025
  9355  00368C                     l4043:
  9356                           
  9357                           ;delay.c: 11:     }
  9358  00368C  4A03               	infsnz	atraso_ms@i^0,f,c	;volatile
  9359  00368E  2A04               	incf	(atraso_ms@i+1)^0,f,c	;volatile
  9360  003690                     l4045:
  9361  003690  5001               	movf	atraso_ms@t^0,w,c
  9362  003692  5C03               	subwf	atraso_ms@i^0,w,c	;volatile
  9363  003694  5002               	movf	(atraso_ms@t+1)^0,w,c
  9364  003696  5804               	subwfb	(atraso_ms@i+1)^0,w,c	;volatile
  9365  003698  A0D8               	btfss	status,0,c
  9366  00369A  EF51  F01B         	goto	u4801
  9367  00369E  EF53  F01B         	goto	u4800
  9368  0036A2                     u4801:
  9369  0036A2  EF28  F01B         	goto	l4023
  9370  0036A6                     u4800:
  9371  0036A6  0012               	return		;funcret
  9372  0036A8                     __end_of_atraso_ms:
  9373                           	callstack 0
  9374                           
  9375                           	psect	rparam
  9376  0000                     
  9377                           	psect	idloc
  9378                           
  9379                           ;Config register IDLOC0 @ 0x200000
  9380                           ;	unspecified, using default values
  9381  200000                     	org	2097152
  9382  200000  FF                 	db	255
  9383                           
  9384                           ;Config register IDLOC1 @ 0x200001
  9385                           ;	unspecified, using default values
  9386  200001                     	org	2097153
  9387  200001  FF                 	db	255
  9388                           
  9389                           ;Config register IDLOC2 @ 0x200002
  9390                           ;	unspecified, using default values
  9391  200002                     	org	2097154
  9392  200002  FF                 	db	255
  9393                           
  9394                           ;Config register IDLOC3 @ 0x200003
  9395                           ;	unspecified, using default values
  9396  200003                     	org	2097155
  9397  200003  FF                 	db	255
  9398                           
  9399                           ;Config register IDLOC4 @ 0x200004
  9400                           ;	unspecified, using default values
  9401  200004                     	org	2097156
  9402  200004  FF                 	db	255
  9403                           
  9404                           ;Config register IDLOC5 @ 0x200005
  9405                           ;	unspecified, using default values
  9406  200005                     	org	2097157
  9407  200005  FF                 	db	255
  9408                           
  9409                           ;Config register IDLOC6 @ 0x200006
  9410                           ;	unspecified, using default values
  9411  200006                     	org	2097158
  9412  200006  FF                 	db	255
  9413                           
  9414                           ;Config register IDLOC7 @ 0x200007
  9415                           ;	unspecified, using default values
  9416  200007                     	org	2097159
  9417  200007  FF                 	db	255
  9418                           
  9419                           	psect	config
  9420                           
  9421                           ; Padding undefined space
  9422  300000                     	org	3145728
  9423  300000  FF                 	db	255
  9424                           
  9425                           ;Config register CONFIG1H @ 0x300001
  9426                           ;	Oscillator Selection bits
  9427                           ;	OSC = HS, HS oscillator
  9428                           ;	Fail-Safe Clock Monitor Enable bit
  9429                           ;	FCMEN = 0x0, unprogrammed default
  9430                           ;	Internal/External Oscillator Switchover bit
  9431                           ;	IESO = 0x0, unprogrammed default
  9432  300001                     	org	3145729
  9433  300001  02                 	db	2
  9434                           
  9435                           ;Config register CONFIG2L @ 0x300002
  9436                           ;	unspecified, using default values
  9437                           ;	Power-up Timer Enable bit
  9438                           ;	PWRT = 0x1, unprogrammed default
  9439                           ;	Brown-out Reset Enable bits
  9440                           ;	BOREN = 0x3, unprogrammed default
  9441                           ;	Brown Out Reset Voltage bits
  9442                           ;	BORV = 0x3, unprogrammed default
  9443  300002                     	org	3145730
  9444  300002  1F                 	db	31
  9445                           
  9446                           ;Config register CONFIG2H @ 0x300003
  9447                           ;	Watchdog Timer Enable bit
  9448                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9449                           ;	Watchdog Timer Postscale Select bits
  9450                           ;	WDTPS = 1, 1:1
  9451  300003                     	org	3145731
  9452  300003  00                 	db	0
  9453                           
  9454                           ; Padding undefined space
  9455  300004                     	org	3145732
  9456  300004  FF                 	db	255
  9457                           
  9458                           ;Config register CONFIG3H @ 0x300005
  9459                           ;	unspecified, using default values
  9460                           ;	CCP2 MUX bit
  9461                           ;	CCP2MX = 0x1, unprogrammed default
  9462                           ;	PORTB A/D Enable bit
  9463                           ;	PBADEN = 0x1, unprogrammed default
  9464                           ;	Low-Power Timer1 Oscillator Enable bit
  9465                           ;	LPT1OSC = 0x0, unprogrammed default
  9466                           ;	MCLR Pin Enable bit
  9467                           ;	MCLRE = 0x1, unprogrammed default
  9468  300005                     	org	3145733
  9469  300005  83                 	db	131
  9470                           
  9471                           ;Config register CONFIG4L @ 0x300006
  9472                           ;	Stack Full/Underflow Reset Enable bit
  9473                           ;	STVREN = 0x1, unprogrammed default
  9474                           ;	Single-Supply ICSP Enable bit
  9475                           ;	LVP = OFF, Single-Supply ICSP disabled
  9476                           ;	Extended Instruction Set Enable bit
  9477                           ;	XINST = 0x0, unprogrammed default
  9478                           ;	Background Debugger Enable bit
  9479                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  9480  300006                     	org	3145734
  9481  300006  81                 	db	129
  9482                           
  9483                           ; Padding undefined space
  9484  300007                     	org	3145735
  9485  300007  FF                 	db	255
  9486                           
  9487                           ;Config register CONFIG5L @ 0x300008
  9488                           ;	unspecified, using default values
  9489                           ;	Code Protection bit
  9490                           ;	CP0 = 0x1, unprogrammed default
  9491                           ;	Code Protection bit
  9492                           ;	CP1 = 0x1, unprogrammed default
  9493                           ;	Code Protection bit
  9494                           ;	CP2 = 0x1, unprogrammed default
  9495                           ;	Code Protection bit
  9496                           ;	CP3 = 0x1, unprogrammed default
  9497  300008                     	org	3145736
  9498  300008  0F                 	db	15
  9499                           
  9500                           ;Config register CONFIG5H @ 0x300009
  9501                           ;	unspecified, using default values
  9502                           ;	Boot Block Code Protection bit
  9503                           ;	CPB = 0x1, unprogrammed default
  9504                           ;	Data EEPROM Code Protection bit
  9505                           ;	CPD = 0x1, unprogrammed default
  9506  300009                     	org	3145737
  9507  300009  C0                 	db	192
  9508                           
  9509                           ;Config register CONFIG6L @ 0x30000A
  9510                           ;	unspecified, using default values
  9511                           ;	Write Protection bit
  9512                           ;	WRT0 = 0x1, unprogrammed default
  9513                           ;	Write Protection bit
  9514                           ;	WRT1 = 0x1, unprogrammed default
  9515                           ;	Write Protection bit
  9516                           ;	WRT2 = 0x1, unprogrammed default
  9517                           ;	Write Protection bit
  9518                           ;	WRT3 = 0x1, unprogrammed default
  9519  30000A                     	org	3145738
  9520  30000A  0F                 	db	15
  9521                           
  9522                           ;Config register CONFIG6H @ 0x30000B
  9523                           ;	unspecified, using default values
  9524                           ;	Configuration Register Write Protection bit
  9525                           ;	WRTC = 0x1, unprogrammed default
  9526                           ;	Boot Block Write Protection bit
  9527                           ;	WRTB = 0x1, unprogrammed default
  9528                           ;	Data EEPROM Write Protection bit
  9529                           ;	WRTD = 0x1, unprogrammed default
  9530  30000B                     	org	3145739
  9531  30000B  E0                 	db	224
  9532                           
  9533                           ;Config register CONFIG7L @ 0x30000C
  9534                           ;	unspecified, using default values
  9535                           ;	Table Read Protection bit
  9536                           ;	EBTR0 = 0x1, unprogrammed default
  9537                           ;	Table Read Protection bit
  9538                           ;	EBTR1 = 0x1, unprogrammed default
  9539                           ;	Table Read Protection bit
  9540                           ;	EBTR2 = 0x1, unprogrammed default
  9541                           ;	Table Read Protection bit
  9542                           ;	EBTR3 = 0x1, unprogrammed default
  9543  30000C                     	org	3145740
  9544  30000C  0F                 	db	15
  9545                           
  9546                           ;Config register CONFIG7H @ 0x30000D
  9547                           ;	unspecified, using default values
  9548                           ;	Boot Block Table Read Protection bit
  9549                           ;	EBTRB = 0x1, unprogrammed default
  9550  30000D                     	org	3145741
  9551  30000D  40                 	db	64
  9552                           tosu	equ	0xFFF
  9553                           tosh	equ	0xFFE
  9554                           tosl	equ	0xFFD
  9555                           stkptr	equ	0xFFC
  9556                           pclatu	equ	0xFFB
  9557                           pclath	equ	0xFFA
  9558                           pcl	equ	0xFF9
  9559                           tblptru	equ	0xFF8
  9560                           tblptrh	equ	0xFF7
  9561                           tblptrl	equ	0xFF6
  9562                           tablat	equ	0xFF5
  9563                           prodh	equ	0xFF4
  9564                           prodl	equ	0xFF3
  9565                           indf0	equ	0xFEF
  9566                           postinc0	equ	0xFEE
  9567                           postdec0	equ	0xFED
  9568                           preinc0	equ	0xFEC
  9569                           plusw0	equ	0xFEB
  9570                           fsr0h	equ	0xFEA
  9571                           fsr0l	equ	0xFE9
  9572                           wreg	equ	0xFE8
  9573                           indf1	equ	0xFE7
  9574                           postinc1	equ	0xFE6
  9575                           postdec1	equ	0xFE5
  9576                           preinc1	equ	0xFE4
  9577                           plusw1	equ	0xFE3
  9578                           fsr1h	equ	0xFE2
  9579                           fsr1l	equ	0xFE1
  9580                           bsr	equ	0xFE0
  9581                           indf2	equ	0xFDF
  9582                           postinc2	equ	0xFDE
  9583                           postdec2	equ	0xFDD
  9584                           preinc2	equ	0xFDC
  9585                           plusw2	equ	0xFDB
  9586                           fsr2h	equ	0xFDA
  9587                           fsr2l	equ	0xFD9
  9588                           status	equ	0xFD8

Data Sizes:
    Strings     237
    Constant    4
    Data        50
    BSS         102
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    127     127
    BANK0           128     74     126
    BANK1           256      0     100
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_41(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_41(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_36(CODE[4]), STR_35(CODE[4]), STR_32(CODE[4]), STR_31(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_36(CODE[4]), STR_35(CODE[4]), STR_32(CODE[4]), STR_31(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> esvaziar_tanque@y(BANK0[8]), ver_quantidade@y(BANK0[8]), encher_tanque@y(BANK0[8]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_25(CODE[5]), STR_17(CODE[5]), STR_11(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_25(CODE[5]), STR_17(CODE[5]), STR_11(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_25(CODE[5]), STR_17(CODE[5]), STR_11(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_25(CODE[5]), STR_17(CODE[5]), STR_11(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 8
		 -> esvaziar_tanque@y(BANK0[8]), ver_quantidade@y(BANK0[8]), encher_tanque@y(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S599_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 8
		 -> esvaziar_tanque@y(BANK0[8]), ver_quantidade@y(BANK0[8]), encher_tanque@y(BANK0[8]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> esvaziar_tanque@y(BANK0[8]), ver_quantidade@y(BANK0[8]), encher_tanque@y(BANK0[8]), 

    esvaziar_tanque@vol	PTR  size(2) Largest target is 4
		 -> volume(BANK0[4]), 

    ver_quantidade@vol	PTR  size(2) Largest target is 4
		 -> volume(BANK0[4]), 

    encher_tanque@vol	PTR  size(2) Largest target is 4
		 -> volume(BANK0[4]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_30(CODE[14]), STR_29(CODE[13]), STR_28(CODE[9]), STR_27(CODE[14]), 
		 -> STR_26(CODE[3]), esvaziar_tanque@y(BANK0[8]), STR_24(CODE[11]), STR_23(CODE[14]), 
		 -> STR_22(CODE[11]), STR_21(CODE[11]), STR_20(CODE[11]), STR_19(CODE[3]), 
		 -> STR_18(CODE[8]), ver_quantidade@y(BANK0[8]), STR_16(CODE[14]), STR_15(CODE[13]), 
		 -> STR_14(CODE[9]), STR_13(CODE[12]), STR_12(CODE[3]), encher_tanque@y(BANK0[8]), 
		 -> STR_10(CODE[11]), STR_9(CODE[16]), STR_8(CODE[11]), STR_7(CODE[11]), 
		 -> STR_6(CODE[12]), STR_5(CODE[19]), STR_4(CODE[15]), STR_3(CODE[14]), 
		 -> STR_2(CODE[11]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_encher_tanque
    _main->_esvaziar_tanque
    _main->_ver_quantidade
    _lcd_init->_lcd_cmd
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___fltol->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _atoi->_isspace
    _lcd_str->_lcd_dat
    _lcd_dat->_atraso_ms
    _lcd_cmd->_atraso_ms

Critical Paths under _main in BANK0

    _main->_encher_tanque
    _main->_esvaziar_tanque
    _ver_quantidade->_sprintf
    _esvaziar_tanque->_sprintf
    _encher_tanque->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  134202
                                             72 BANK0      2     2      0
                          _atraso_ms
                      _encher_tanque
                    _esvaziar_tanque
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                     _ver_quantidade
 ---------------------------------------------------------------------------------
 (1) _ver_quantidade                                      12    10      2   35665
                                            125 COMRAM     2     0      2
                                             36 BANK0     10    10      0
                            _lcd_cmd
                            _lcd_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    3360
                          _atraso_ms
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _esvaziar_tanque                                     38    36      2   43866
                                            125 COMRAM     2     0      2
                                             36 BANK0     36    36      0
                            ___fldiv
                            ___flsub
                            ___fltol
                          _atraso_ms
                            _lcd_cmd
                            _lcd_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _encher_tanque                                       38    36      2   43877
                                            125 COMRAM     2     0      2
                                             36 BANK0     36    36      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___fltol
                          _atraso_ms
                            _lcd_cmd
                            _lcd_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   29697
                                             18 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   29036
                                            123 COMRAM     2     2      0
                                             12 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   28664
                                            113 COMRAM    10     4      6
                                              0 BANK0     12    12      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   23061
                                             45 COMRAM    68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     533
                                             25 COMRAM    10     6      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    3497
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2718
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2352
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     790
                                             25 COMRAM    12     4      8
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2311
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1456
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcd_str                                              5     3      2    4072
                                              7 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (3) _lcd_dat                                              1     1      0    1702
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0    1702
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (4) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _atraso_ms                                            6     4      2    1658
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atraso_ms
   _encher_tanque
     ___fladd
     ___fldiv
     ___flge
       ___fladd (ARG)
       ___flmul (ARG)
     ___fltol
       ___fldiv (ARG)
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___fladd (ARG)
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
               ___fldiv (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
   _esvaziar_tanque
     ___fldiv
     ___flsub
       ___fladd
       ___flmul (ARG)
     ___fltol
       ___fldiv (ARG)
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___fladd (ARG)
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
               ___fldiv (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
   _lcd_cmd
     _atraso_ms
     _lcd_wr
   _lcd_init
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
   _lcd_str
     _lcd_dat
       _atraso_ms
       _lcd_wr
   _ver_quantidade
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___fladd (ARG)
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
               ___fldiv (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      64       7       39.1%
BITBANK0            80      0       0       4        0.0%
BANK0               80     4A      7E       5       98.4%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7F      7F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     161      15        0.0%
DATA                 0      0     161       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Jul 04 18:51:21 2020

             ___fldiv@aexp 0019  esvaziar_tanque@decremento 00C2               ___fldiv@bexp 0018  
                        _i 00F6               ___fldiv@sign 0011                         l10 36A6  
                       l21 3AB8                         l30 3642                         l15 3B42  
                       l24 3826                         l18 3AE2               ___awdiv@sign 0006  
      ___wmul@multiplicand 0003             encher_tanque@i 00C6             encher_tanque@y 00B8  
                      l121 2BF0                        l113 2AC8                        l122 2BB4  
                      l124 2BD2                        l150 25E6                        l119 2B96  
                      l161 3462                        l147 25D8                        l164 3470  
                      l181 2820                        l431 3520                        l184 282E  
                      l418 33B8                        l187 3B08                        l452 2F4A  
                      l461 3A20                        l446 35CA                        l457 2F90  
                      l801 1C7C                        l810 1EEA                        l811 1ED8  
                      l715 147C                        l732 1596                        l724 174C  
                      l716 146A                        l484 2E8C                        l805 1FE0  
                      l741 1666                        l717 1430                        l742 1654  
                      l911 32F4                        l808 1E72                        l818 1FA2  
                      l906 3276                        l771 21DA                        l780 2220  
                      l757 396C                        l909 32B8                        l782 2298  
                      l774 219E                        l783 2286                        l769 237A  
                      l929 128C                        l865 38D4                        l947 0AD2  
                      l973 0E64                        _pad 3230               ___awmod@sign 0006  
                      wreg 000FE8            ?_ver_quantidade 007E               ___flmul@aexp 0012  
             ___flmul@bexp 0013                _tolower$883 000D               ___flmul@sign 000D  
             ___flmul@temp 0018               ___flmul@prod 0014       encher_tanque@numeros 00A4  
             ___fltol@exp1 0023                       l1120 322E                       l1032 3762  
                     l1105 39E8                       l1033 376A                       l1026 1B00  
                     l1043 308E                       l1131 3B44                       l1019 1BB6  
                     l1143 3A8E                       l1072 2D7E                       l1128 39B0  
                     l3001 14EA                       l1081 2A40                       l1137 3882  
                     l1162 37CA                       l1091 3A58                       l1075 2D86  
                     l3011 1530                       l3003 14F8                       l1147 3164  
                     l1084 2984                       l3021 15AC                       l3013 1564  
                     l3005 14FA                       l3101 3A82                       l1157 37C2  
                     l3111 3B00                       l3031 15E8                       l3023 15BC  
                     l3015 1566                       l3007 1504                       l3201 2200  
                     l3121 1FFE                       l3041 1614                       l3033 15EA  
                     l3017 1576                       l3009 150A                       l3105 39B2  
                     l4001 3090                       l1099 3926                       l3211 223E  
                     l3203 2206                       l3123 200E                       l3131 2038  
                     l3115 1FE2                       l3051 164C                       l3035 15F8  
                     l3027 15D0                       l3043 1616                       l3019 1586  
                     l4011 30EC                       l4003 30BA                       l4021 3644  
                     l3109 3AE4                       l3221 22A8                       l3213 2242  
                     l3205 2210                       l3141 2064                       l3133 2048  
                     l3125 201E                       l3117 1FEE                       l3301 1CE8  
                     l3061 16CA                       l3037 1600                       l3029 15DA  
                     l3045 1624                       l4013 3108                       l4101 1A1C  
                     l4031 366C                       l4023 3650                       l3231 230A  
                     l3223 22B4                       l3215 2250                       l3207 221E  
                     l3143 2074                       l3151 209E                       l3135 204E  
                     l3127 202E                       l3119 1FFC                       l3311 1D32  
                     l3303 1D00                       l3071 1710                       l3055 1676  
                     l3063 16CC                       l3047 1628                       l3039 1604  
                     l4015 311A                       l4007 30C6                       l4025 3654  
                     l3401 332A                       l3241 2368                       l3233 2320  
                     l3225 22C2                       l3217 227E                       l3209 2230  
                     l3161 20E0                       l3153 20AE                       l3145 2084  
                     l3137 2054                       l3129 2030                       l3321 1D88  
                     l3313 1D42                       l3305 1D0C                       l3081 173A  
                     l3073 171E                       l3065 16DC                       l3057 1682  
                     l3049 1636                       l4017 3142                       l4009 30D4  
                     l4121 1B5A                       l4105 1A8A                       l4201 33BA  
                     l4035 3680                       l4043 368C                       l3411 3358  
                     l3403 332E                       l3243 236E                       l3235 233A  
                     l3227 22EC                       l3155 20C4                       l3147 2094  
                     l3139 2062                       l3331 1E2C                       l3323 1DA4  
                     l3315 1D4E                       l3307 1D18                       l3083 173C  
                     l3075 1724                       l3067 16EC                       l3059 1690  
                     l3091 398C                       l4107 1A9C                       l4115 1B14  
                     l4051 1772                       l4131 1B80                       l4211 340C  
                     l4203 33E8                       l4029 3668                       l4045 3690  
                     l4141 3A94                       l3421 338C                       l3413 3366  
                     l3405 3336                       l3245 2370                       l3237 2356  
                     l3229 22F0                       l3181 2162                       l3173 2118  
                     l3157 20D4                       l3165 20F4                       l3149 2096  
                     l3501 2F88                       l3341 1E82                       l3333 1E3A  
                     l3325 1DB0                       l3317 1D5E                       l3309 1D26  
                     l3261 1BE4                       l3253 1BB8                       l3077 1726  
                     l3069 170C                       l3093 3990                       l4133 1BA4  
                     l4117 1B38                       l4125 1B66                       l4109 1AD0  
                     l4061 17C2                       l4053 1780                       l4301 25CC  
                     l4213 3418                       l4205 33EE                       l4039 3686  
                     l4047 3B3E                       l4151 3AB6                       l4143 3A9A  
                     l3423 3392                       l3415 336C                       l3407 3348  
                     l3239 235A                       l3191 21A8                       l3183 216A  
                     l3175 2132                       l3167 2104                       l3159 20DC  
                     l3503 2F8E                       l3343 1E90                       l3335 1E58  
                     l3327 1DCC                       l3319 1D78                       l3271 1C20  
                     l3263 1BF4                       l3255 1BC4                       l3511 3A10  
                     l3079 172C                       l3087 396E                       l3095 3A5A  
                     l4127 1B74                       l4119 1B46                       l4071 185C  
                     l4063 17D0                       l4055 1792                       l4231 237C  
                     l4311 2618                       l4303 25E8                       l4215 341E  
                     l4207 33F4                       l4161 3ABC                       l4145 3A9C  
                     l3417 3382                       l3409 3350                       l3425 3398  
                     l3441 3490                       l3433 3472                       l3193 21C6  
                     l3185 217A                       l3177 2142                       l3169 2104  
                     l3353 1EFA                       l3361 1F42                       l3345 1E94  
                     l3337 1E62                       l3329 1DF6                       l3281 1C56  
                     l3273 1C26                       l3265 1C04                       l3257 1BD2  
                     l3521 2DB2                       l3089 397A                       l3097 3A66  
                     l4081 18E8                       l4065 17F4                       l4057 1796  
                     l4049 174E                       l4153 370A                       l4241 23B8  
                     l4233 2388                       l4321 2688                       l4313 2624  
                     l4305 25F4                       l4225 343A                       l4217 342A  
                     l4209 3400                       l4171 3AD4                       l4163 3ABE  
                     l4147 3AA8                       l4139 3A92                       l3427 33A8  
                     l3419 338A                       l3451 34C8                       l3443 349E  
                     l3435 3476                       l3195 21C8                       l3187 218E  
                     l3179 2152                       l3371 1FB6                       l3363 1F5C  
                     l3355 1F06                       l3347 1EA2                       l3339 1E70  
                     l3283 1C66                       l3275 1C34                       l3267 1C0A  
                     l3259 1BD4                       l3507 39EA                       l3531 2E00  
                     l3523 2DDC                       l3515 2D88                       l3099 3A6A  
                     l3603 3828                       l3611 37A2                       l4091 1984  
                     l4083 191A                       l4075 18A4                       l4067 182E  
                     l4059 17BA                       l4155 3712                       l4251 2456  
                     l4243 23CA                       l4235 2394                       l4331 2728  
                     l4323 269E                       l4315 2636                       l4307 2600  
                     l4227 3440                       l4219 3430                       l4173 3AE0  
                     l4165 3AC4                       l4149 3AAA                       l4181 3606  
                     l3429 33B0                       l3453 34D6                       l3461 3500  
                     l3445 34A6                       l3437 3484                       l3197 21D8  
                     l3189 219C                       l3373 1FC4                       l3365 1F70  
                     l3357 1F14                       l3349 1ED0                       l3293 1CB0  
                     l3285 1C6C                       l3277 1C36                       l3269 1C1A  
                     l3509 3A00                       l2901 12E4                       l3541 2E2C  
                     l3525 2DDE                       l3517 2D9E                       l3621 28A6  
                     l3605 3838                       l3613 37B4                       l3701 0834  
                     l4093 1992                       l4085 192A                       l4069 184E  
                     l4077 18B6                       l4157 3720                       l4261 2520  
                     l4253 249A                       l4245 2428                       l4237 23A6  
                     l4341 2786                       l4333 2768                       l4325 26E2  
                     l4317 2670                       l4309 2612                       l4229 3446  
                     l4501 2ACE                       l4167 3AC6                       l4175 35CC  
                     l3391 32FA                       l3463 3510                       l3455 34EC  
                     l3447 34B8                       l3439 348C                       l3199 21EA  
                     l3471 3550                       l3375 1FC6                       l3367 1F8A  
                     l3359 1F3E                       l3295 1CBC                       l3287 1C8C  
                     l3279 1C46                       l2911 1314                       l2903 12F4  
                     l3383 3928                       l3551 2E5C                       l3527 2DEE  
                     l3631 2974                       l3623 28BA                       l3607 376C  
                     l3711 08A2                       l3703 084C                       l4095 19C2  
                     l4087 195C                       l4079 18D8                       l4159 3746  
                     l4191 38C2                       l4183 3884                       l4271 2544  
                     l4263 2532                       l4255 24C8                       l4247 2434  
                     l4239 23AC                       l4351 27B2                       l4343 278C  
                     l4335 277A                       l4327 2710                       l4319 267C  
                     l4503 2AD4                       l4169 3AD2                       l4177 35D4  
                     l3393 3308                       l3465 3518                       l3457 34F4  
                     l3449 34C0                       l3481 35C8                       l3473 3560  
                     l3369 1FA6                       l3377 1FCC                       l3297 1CC6  
                     l3289 1C9C                       l2921 1354                       l2913 1322  
                     l2905 12FA                       l3385 3938                       l3553 2E6C  
                     l3537 2E18                       l3529 2DF2                       l3641 2A30  
                     l3625 28C8                       l3633 29A8                       l3617 2830  
                     l3561 3240                       l3801 0C1E                       l3705 0854  
                     l4089 196E                       l4185 3896                       l4273 2550  
                     l4265 2536                       l4257 24D4                       l4249 2440  
                     l4345 2798                       l4337 277E                       l4329 271C  
                     l4521 2B30                       l4505 2AE0                       l4179 3604  
                     l3651 38DA                       l3395 3310                       l3459 34FA  
                     l3475 358E                       l3491 2EFA                       l3379 1FD0  
                     l3299 1CDC                       l2931 138E                       l2923 1356  
                     l2915 1324                       l2907 130C                       l3555 2E7C  
                     l3547 2E40                       l3539 2E22                       l3635 29E4  
                     l3619 2850                       l3571 3296                       l3563 3254  
                     l3811 0D30                       l3803 0C82                       l3715 08D6  
                     l4099 19EE                       l4187 389E                       l4291 25AC  
                     l4283 257E                       l4275 2556                       l4267 2538  
                     l4259 24E0                       l4371 280E                       l4363 27F4  
                     l4355 27C6                       l4347 279E                       l4339 2780  
                     l4195 37CC                       l4531 2B50                       l4515 2AFC  
                     l4507 2AE6                       l3645 3A22                       l3653 38EE  
                     l3397 3314                       l3389 32F6                       l3477 359E  
                     l3469 3522                       l3493 2F0A                       l3485 2E8E  
                     l2941 13A2                       l2933 1392                       l2917 1334  
                     l2925 135E                       l2909 130E                       l3549 2E4C  
                     l3581 2F92                       l3637 29F8                       l3629 2938  
                     l3573 329A                       l3565 3262                       l3901 1102  
                     l3821 0DEA                       l3813 0D64                       l3805 0CDA  
                     l3741 0A34                       l3733 096E                       l3717 08E8  
                     l3709 087C                       l3661 06F4                       l4189 38A6  
                     l4293 25AE                       l4285 2594                       l4277 2562  
                     l4269 253E                       l4373 2814                       l4365 27F6  
                     l4357 27DC                       l4349 27AA                       l4197 37D0  
                     l4541 2BA4                       l4533 2B6C                       l4517 2B0E  
                     l4509 2AF2                       ?_pad 0011                       l3655 391C  
                     l3399 3322                       l3479 35C2                       l3495 2F18  
                     l3487 2EBC                       l2951 13B6                       l2943 13A6  
                     l2935 1396                       l2927 136E                       l2919 1344  
                     l3583 2FB2                       l3639 2A20                       l2871 3166  
                     l3575 32C8                       l3567 326E                       l3559 3230  
                     l3911 1134                       l3903 110A                       l3831 0E5C  
                     l3823 0DFA                       l3815 0D96                       l3807 0D0E  
                     l3751 0A90                       l3743 0A3A                       l3735 09A2  
                     l3719 0904                       l3727 0920                       l3671 0746  
                     l3663 06FC                       l4295 25B4                       l4287 25A0  
                     l4279 256A                       l4367 27FC                       l4359 27E8  
                     l4199 37DC                       l4543 2BC2                       l4535 2B84  
                     l4527 2B38                       l4519 2B14                       l4471 2A52  
                     l3657 3920                       l3649 38D6                       l3497 2F2A  
                     l3489 2ECC                       l2961 13CA                       l2953 13BA  
                     l2945 13AA                       l2937 139A                       l2929 1380  
                     l3585 2FF0                       l3593 3030                       l2881 31E8  
                     l2873 3178                       l3577 32DC                       l3569 3282  
                     l3913 113A                       l3921 1188                       l3905 1118  
                     l3841 0F18                       l3833 0E80                       l3825 0E2E  
                     l3817 0DAA                       l3809 0D12                       l3753 0AA4  
                     l3737 09A6                       l3745 0A6C                       l3729 0938  
                     l3681 078A                       l3673 074E                       l3665 070C  
                     l4297 25BA                       l4369 2802                       l4545 2BE0  
                     l4529 2B4A                       l4481 2A74                       l4473 2A56  
                     l3499 2F38                       l2971 1428                       l2955 13BE  
                     l2947 13AE                       l2939 139E                       l2963 13CE  
                     l2891 12AA                       l3595 3042                       l3587 3018  
                     l2875 318A                       l3931 11D8                       l3923 119A  
                     l3915 1160                       l3907 1120                       l3851 0F5E  
                     l3843 0F26                       l3835 0EE4                       l3827 0E3E  
                     l3819 0DDC                       l3771 0B56                       l3755 0AAC  
                     l3747 0A7A                       l3739 0A00                       l3683 0796  
                     l3691 07AC                       l3675 0756                       l3667 071A  
                     l4299 25C6                       l4491 2AA4                       l4483 2A80  
                     l4475 2A5C                       l2981 145E                       l2973 143E  
                     l2965 13D2                       l2957 13C2                       l2949 13B2  
                     l2893 12BA                       l2885 128E                       l3589 3024  
                     l2877 3194                       l3933 11E0                       l3925 11B4  
                     l3917 117C                       l3909 1128                       l3861 0F88  
                     l3853 0F62                       l3837 0EF4                       l3845 0F2E  
                     l3829 0E50                       l3781 0B8E                       l3773 0B5E  
                     l3765 0AF2                       l3757 0AC6                       l3749 0A7E  
                     l3693 07D2                       l3685 079E                       l3677 0768  
                     l3669 0722                       l4493 2AAA                       l4485 2A8C  
                     l4477 2A62                       l4469 2A42                       l4567 2CB4  
                     l2991 14AE                       l2983 1468                       l2975 144A  
                     l2967 13FC                       l2959 13C6                       l2895 12CA  
                     l2887 129A                       l3599 3086                       l2879 31B2  
                     l3951 1266                       l3943 1230                       l3935 11F0  
                     l3927 11BA                       l3919 1182                       l3871 0FBC  
                     l3863 0F8E                       l3855 0F68                       l3847 0F40  
                     l3839 0F06                       l3791 0BD8                       l3783 0B9C  
                     l3767 0B04                       l3775 0B62                       l3759 0ADE  
                     l3687 07A2                       l3679 0778                       l4495 2AB6  
                     l4487 2A92                       l4479 2A6E                       l3961 2C0C  
                     l2993 14BE                       l2985 148A                       l2977 144E  
                     l2969 1418                       l2897 12DA                       l2889 12A8  
                     l3953 126C                       l3945 1242                       l3937 11F6  
                     l3929 11CC                       l3857 0F74                       l3849 0F4E  
                     l3865 0F94                       l3873 0FC2                       l3881 1058  
                     l3793 0BEA                       l3785 0BA0                       l3777 0B6A  
                     l3769 0B20                       l3697 0806                       l3689 07A6  
                     l4497 2AC2                       l4489 2A98                       l3971 2C6A  
                     l3963 2C10                       l2995 14CC                       l2987 149A  
                     l2979 145C                       l2899 12DC                       l3947 124E  
                     l3939 11FC                       l3891 10C4                       l3883 1076  
                     l3875 101A                       l3867 0FA6                       l3859 0F84  
                     l3787 0BB2                       l3795 0BF2                       l3779 0B7C  
                     l3699 0818                       l4499 2AC8                       l3981 2C96  
                     l3965 2C14                       l2997 14DA                       l3949 1256  
                     l3893 10C8                       l3885 1092                       l3877 104E  
                     l3869 0FB8                       l3797 0BFA                       l3789 0BC0  
                     l3991 2D3E                       l3983 2CCA                       l3975 2C70  
                     l3967 2C30                       l3959 2BF8                       l2999 14E6  
                     l3895 10D8                       l3887 10A4                       l3879 1054  
                     l3799 0C0A                       l3993 2D50                       l3977 2C86  
                     l3969 2C66                       l3897 10EA                       l3889 10B4  
                     l3995 2D62                       l3987 2D00                       l3979 2C8E  
                     l3899 10F2                       STR_1 0618                       STR_2 06BB  
                     STR_3 0672                       STR_4 0639                       STR_5 0605  
                     STR_6 0699                       STR_7 06A5                       STR_8 06B0  
                     STR_9 0629                       u3000 164C                       u3001 1648  
                     u3010 1662                       u3011 165E                       u3020 1676  
                     u3100 39B0                       u3021 1672                       u3101 39AC  
                     u3030 1690                       u3110 3A82                       u3031 168C  
                     u3111 3A7E                       u3200 20C4                       u3040 16CA  
                     u4000 2878                       u3120 39E2                       u3201 20C0  
                     u3041 16C6                       u3121 39DC                       u3210 2104  
                     u3050 16DC                       u4010 28A6                       u3130 39E4  
                     u3211 2100                       u3051 16D8                       u4011 28A2  
                     u4100 3A52                       u3300 227E                       u3220 217A  
                     u3140 1FFC                       u3060 16EC                       u4020 28C8  
                     u4101 3A4C                       u3301 227A                       u3221 2176  
                     u3141 1FF8                       u3061 16E8                       u4021 28C4  
                     u4005 286E                       u4110 3A54                       u3310 2294  
                     u3230 219C                       u3150 200E                       u3070 170C  
                     u3311 2290                       u3231 2198                       u3151 200A  
                     u3071 1708                       u4120 38EE                       u3320 22A8  
                     u3240 21C6                       u3160 201E                       u3400 1C34  
                     u3080 171E                       u4040 2934                       u4200 0802  
                     u5000 3470                       u4121 38EA                       u3321 22A4  
                     u3241 21C2                       u3161 201A                       u3401 1C30  
                     u3081 171A                       u4041 2930                       u5001 346C  
                     u4130 391C                       u3330 22C2                       u3250 21EA  
                     u3170 2062                       u3410 1C46                       u3090 173A  
                     u4050 2958                       u4210 0818                       u5010 2428  
                     u4131 3918                       u3331 22BE                       u3251 21E6  
                     u3171 205E                       u3411 1C42                       u3091 1736  
                     u4035 28DC                       u4211 0814                       u5011 2424  
                     u3340 230A                       u3260 2200                       u3180 2074  
                     u3500 1EE6                       u3420 1C56                       u4060 2974  
                     u4036 28E6                       u2700 31E8                       u4300 0AA4  
                     u4220 08A2                       u4140 071A                       u3341 2306  
                     u3261 21FC                       u3181 2070                       u3501 1EE2  
                     u3421 1C52                       u4061 2970                       u4037 28F6  
                     u2701 31E4                       u4301 0AA0                       u4221 089E  
                     u4141 0716                       u5021 252A                       u3350 233A  
                     u3270 221E                       u3190 2084                       u3510 1EFA  
                     u3430 1C8C                       u2710 12A8                       u4070 29C8  
                     u4310 0AC6                       u4230 08D0                       u4150 0768  
                     u5030 257A                       u3351 2336                       u3271 221A  
                     u3191 2080                       u3511 1EF6                       u3431 1C88  
                     u2711 12A4                       u4055 294E                       u4311 0AC2  
                     u4231 08CA                       u4151 0764                       u5031 2576  
                     u3600 3382                       u3360 2368                       u3280 223E  
                     u3520 1F14                       u3440 1C9C                       u2800 13FC  
                     u2720 12BA                       u4080 29E4                       u4400 0BC0  
                     u4320 0AEE                       u4240 08D2                       u4160 0778  
                     u5040 25E6                       u3601 337E                       u3361 2364  
                     u3281 223A                       u3521 1F10                       u3441 1C98  
                     u2801 13F8                       u2721 12B6                       u4081 29E0  
                     u4401 0BBC                       u4321 0AEA                       u4161 0774  
                     u5041 25E2                       u3610 33A8                       u3290 2250  
                     u3530 1F5C                       u3450 1E16                       u3370 1BD2  
                     u2810 1414                       u2730 12CA                       u4090 2A20  
                     u4410 0BEA                       u4330 0B04                       u4250 08E8  
                     u4170 078A                       u5050 2670                       u3611 33A4  
                     u3291 224C                       u3531 1F58                       u3371 1BCE  
                     u2811 140E                       u2731 12C6                       u4091 2A1C  
                     u4075 29BE                       u4411 0BE6                       u4331 0B00  
                     u4251 08E4                       u4171 0786                       u5051 266C  
                     u3620 3484                       u3700 35C2                       u3540 1F8A  
                     u3460 1E70                       u3380 1BE4                       u2900 14F8  
                     u2820 1416                       u2740 130C                       u4500 0F26  
                     u4420 0D30                       u4340 0B20                       u4260 096A  
                     u4180 07D2                       u5300 2BA4                       u3621 3480  
                     u3701 35BE                       u3541 1F86                       u3461 1E6C  
                     u3381 1BE0                       u2901 14F4                       u2741 1308  
                     u4501 0F22                       u4421 0D2C                       u4341 0B1C  
                     u4261 0966                       u4181 07CE                       u5061 2772  
                     u5301 2BA0                       u3630 349E                       u3710 2EBC  
                     u3550 1FC4                       u3470 1E90                       u3390 1BF4  
                     u2910 1530                       u2830 143E                       u2750 1322  
                     u2670 3178                       u4510 0F40                       u4430 0D96  
                     u4350 0B56                       u4270 09FC                       u4190 0800  
                     u5070 27C2                       u5310 2BC2                       u3631 349A  
                     u3711 2EB8                       u3551 1FC0                       u3471 1E8C  
                     u3455 1E0C                       u3391 1BF0                       u2911 152C  
                     u2831 143A                       u2751 131E                       u2671 3174  
                     u4511 0F3C                       u4431 0D92                       u4351 0B52  
                     u4271 09F8                       u4191 07FA                       u5071 27BE  
                     u5311 2BBE                       u3560 3308                       u3640 34B8  
                     u3720 2EFA                       u3480 1EA2                       u2920 1576  
                     u2840 145C                       u2760 1334                       u3800 2E14  
                     u2680 318A                       u4600 119A                       u4520 0F4E  
                     u4440 0DDC                       u4360 0B7C                       u4280 0A6C  
                     u5080 282E                       u5320 2BE0                       u3561 3304  
                     u3641 34B4                       u3721 2EF6                       u3481 1E9E  
                     u2921 1572                       u2841 1458                       u2761 1330  
                     u3801 2E10                       u2681 3186                       u4601 1196  
                     u4521 0F4A                       u4441 0DD8                       u4361 0B78  
                     u4281 0A68                       u5081 282A                       u5321 2BDC  
                     u3570 3322                       u3650 34D6                       u3730 2F18  
                     u3490 1ED0                       u2930 15AC                       u2850 147C  
                     u2770 1344                       u3810 2E3C                       u2690 31B2  
                     u4610 11B4                       u4530 0FA6                       u4450 0DEA  
                     u4370 0B8E                       u4290 0A90                       u3571 331E  
                     u3651 34D2                       u3731 2F14                       u3491 1ECC  
                     u2931 15A8                       u2851 1478                       u2771 1340  
                     u3811 2E38                       u2691 31AE                       u4611 11B0  
                     u4531 0FA2                       u4451 0DE6                       u4371 0B8A  
                     u4291 0A8C                       u4700 2D3A                       u3580 3348  
                     u3660 34EC                       u3740 2F38                       u2940 15BC  
                     u2860 148A                       u2780 1380                       u3820 2E5C  
                     u3900 3018                       u4620 11CC                       u4540 1076  
                     u4460 0E50                       u4380 0B9C                       u3581 3344  
                     u3661 34E8                       u3741 2F34                       u2941 15B8  
                     u2861 1486                       u2781 137C                       u3821 2E58  
                     u3901 3014                       u4621 11C8                       u4541 1072  
                     u4461 0E4C                       u4381 0B98                       u4710 2D50  
                     u3590 3366                       u3670 3510                       u3750 2F88  
                     u2950 15E8                       u2870 149A                       u2790 138E  
                     u3830 2E6C                       u3910 3042                       u4630 122A  
                     u4550 1092                       u4470 0EF4                       u4390 0BB2  
                     u5270 2B30                       u4711 2D4C                       u3591 3362  
                     u3671 350C                       u3751 2F84                       u2951 15E4  
                     u2871 1496                       u2791 138A                       u3831 2E68  
                     u3911 303E                       u4631 1224                       u4551 108E  
                     u4471 0EF0                       u4391 0BAE                       u5271 2B2C  
                     u4800 36A6                       u4720 2D62                       u3680 3550  
                     u3760 3A00                       u2960 15F8                       u2880 14CC  
                     u3840 3240                       u4640 122C                       u4560 10A4  
                     u4480 0F06                       u5280 2B6C                       u4801 36A2  
                     u4721 2D5E                       u3681 354C                       u3761 39FC  
                     u2961 15F4                       u2881 14C8                       u3841 323C  
                     u4561 10A0                       u4481 0F02                       u5281 2B68  
                     u3690 358E                       u2970 1614                       u2890 14DA  
                     u3770 2D9E                       u3930 307C                       u3850 3262  
                     u4650 1242                       u4570 10B4                       u4490 0F18  
                     u4730 30BA                       u4810 1772                       u5290 2B92  
                     u3691 358A                       u2971 1610                       u2891 14D6  
                     u3771 2D9A                       u3931 3076                       u3851 325E  
                     u4651 123E                       u4571 10B0                       u4491 0F14  
                     u4731 30B6                       u4811 176E                       u5291 2B8E  
                     u4660 2C30                       u2980 1624                       u3780 2DD2  
                     u3940 307E                       u3860 32B8                       u4580 10EA  
                     u4740 30EC                       u4900 1A1C                       u4820 17BA  
                     u4661 2C2C                       u2981 1620                       u3925 3054  
                     u3861 32B4                       u4581 10E6                       u4741 30E8  
                     u4901 1A18                       u4821 17B6                       u4670 2C66  
                     u2990 1636                       u3790 2E00                       u3870 32C8  
                     u3950 3870                       u4590 1118                       u4750 3108  
                     u4910 1A82                       u4830 17F4                       u4671 2C62  
                     u2991 1632                       u3791 2DFC                       u3871 32C4  
                     u4591 1114                       u4751 3104                       u4911 1A7C  
                     u4831 17F0                       u4680 2C82                       u3880 2FD2  
                     u3960 3882                       u4760 311A                       u4920 1A84  
                     u4840 189C                       u4681 2C7E                       u3785 2DC8  
                     u3961 387E                       u4761 3116                       u4841 1896  
                     u4690 2D38                       u3890 2FF0                       u3970 379C  
                     u4770 3142                       u4930 1A9C                       u4850 189E  
                     u4691 2D32                       u3891 2FEC                       u3971 3796  
                     u4771 313E                       u4931 1A98                       u4780 3664  
                     u3980 379E                       u4940 1B38                       u4860 18B6  
                     u4781 3660                       u3885 2FC8                       u3957 3866  
                     u4941 1B34                       u4861 18B2                       u4790 367C  
                     u3990 37B4                       u4870 18E8                       u4950 3762  
                     u4791 3678                       u3991 37B0                       u4871 18E4  
                     u4951 375E                       u4960 3600                       u4880 192A  
                     u4881 1926                       u4970 3632                       u4890 196E  
                     u4891 196A                       u4980 3642                       u4981 363E  
                     u4990 3462                       u4967 35F6                       u4991 345E  
                     u4977 3628                       _dbuf 0100                       _atoi 2BF8  
                     _main 2A42                       _prec 00F2                       _nout 00EE  
                     pad@i 0018                       pad@p 0015                       fsr0h 000FEA  
                     fsr1h 000FE2                       indf0 000FEF                       fsr2h 000FDA  
                     fsr0l 000FE9                       indf2 000FDF                       fsr1l 000FE1  
                     pad@w 001A                       fsr2l 000FD9              ___fpclassifyf 2F92  
          ??_encher_tanque 0080                       prodh 000FF4                       prodl 000FF3  
                     start 0000            ___fldiv@new_exp 0012           encher_tanque@vol 007E  
             ___param_bank 000000                      ??_pad 0017              ___fltol@sign1 0022  
                    ?_atoi 0008            __end_of___fladd 174E                      ?_main 0001  
          __end_of___fldiv 237C            __end_of___awdiv 33BA            __end_of___flneg 3A22  
                    STR_10 0667                      STR_11 06D7                      STR_20 0667  
                    STR_12 06EF                      STR_21 06A5                      STR_13 068D  
                    STR_30 0664                      STR_22 06B0                      STR_14 06C6  
                    STR_31 06DC                      STR_15 0680                      STR_23 0656  
                    STR_24 0667                      STR_32 06E4                      STR_16 0664  
                    STR_25 06D7                      STR_17 06D7                      STR_41 06EC  
                    STR_26 06EF                      STR_18 06CF                      STR_19 06EF  
                    STR_35 06E0                      STR_27 0648                      STR_28 06C6  
                    STR_36 06E8            __end_of___awmod 3522                      STR_29 0680  
                    STR_39 06EC            __end_of___flmul 1FE2            __end_of___flsub 396E  
          __end_of___fltol 2E8E            ___awdiv@divisor 0003   __size_of_esvaziar_tanque 0248  
          ___awdiv@counter 0005               vfpfcnvrt@fmt 0074           esvaziar_tanque@i 00C6  
         esvaziar_tanque@y 00B8            __end_of_lcd_dat 3ABA            __end_of_lcd_cmd 3AE4  
          __end_of_lcd_str 3644                      _flags 00F4                      _linha 0601  
                    _fputc 3166                      _fputs 396E            __end_of_isdigit 3A5A  
                    atoi@n 0015                      pad@fp 0011                      atoi@s 0008  
                    _width 00F0                      _putch 3B44            __end_of_isspace 3928  
          __end_of_isupper 39EA                      tablat 000FF5          encher_tanque@F342 00C8  
                    plusw1 000FE3                      plusw2 000FDB                      status 000FD8  
          __end_of_sprintf 38D6             ?___fpclassifyf 0001            __end_of_tolower 37CC  
          __end_of_strncmp 3166            __initialization 36A8               __end_of_atoi 2D88  
             __end_of_main 2BF8                     ??_atoi 000A                     ??_main 0080  
            __activetblptr 000002                     ?_fputc 0001                     ?_fputs 000A  
         ___awdiv@dividend 0001                     ?_putch 0001    encher_tanque@incremento 00C2  
   esvaziar_tanque@numeros 00A4               vfprintf@cfmt 007C           __end_of_lcd_init 3828  
                   ___flge 2E8E                     ___fleq 3522                  ??___fladd 0009  
                   ___wmul 3AE4                  ??___fldiv 0009                  ??___awdiv 0005  
                ??___flneg 0005                  ??___awmod 0005                  ??___flmul 0009  
                ??___flsub 0022                  ??___fltol 001E                     _efgtoa 06F4  
                   _lcd_wr 3B3C                     _atraso 00E2                     _floorf 2830  
                   clear_0 36EE                     clear_1 36FA           ___awdiv@quotient 0007  
          ___awmod@divisor 0003            ___awmod@counter 0005                     pad@buf 0013  
                ??_lcd_dat 0007                  ??_lcd_cmd 0007                     _strcpy 3828  
                   _strlen 3A5A                     _volume 00F8                  ??_lcd_str 000A  
                   fputc@c 0001                     fputs@c 000E                     fputs@i 000F  
                   fputs@s 000A                  ??_isdigit 0003            ___fpclassifyf@e 0009  
          ___fpclassifyf@u 000B            ___fpclassifyf@x 0001               __mediumconst 0000  
                ??_isspace 0003                     tblptrh 000FF7                  ??_isupper 0003  
                   tblptrl 000FF6                     tblptru 000FF8                     putch@c 0001  
         __end_of_vfprintf 376C          ??_esvaziar_tanque 0080                  ??_sprintf 007E  
                ??_tolower 0009                  ??_strncmp 0007                 ___flge@ff1 001A  
               ___flge@ff2 001E            ??___fpclassifyf 0005                 ___fleq@ff1 0001  
               ___fleq@ff2 0005                 __accesstop 0080    __end_of__initialization 3700  
               ___flneg@f1 0001              ___rparam_used 000001         encher_tanque@tempo 00C0  
               ___fltol@f1 001A             __pcstackCOMRAM 0001               __pidataBANK0 3B0A  
             __pidataBANK1 3B28              __end_of_linha 0605              __end_of_fputc 3230  
            __end_of_fputs 39B2              __end_of_putch 3B46           ??_ver_quantidade 0080  
                  ??_fputc 0005                    ??_fputs 000E         __size_of_atraso_ms 0064  
                  ??_putch 0001                 __pbssBANK0 00E6                 __pbssBANK1 0100  
               _efgtoa$730 0042                 _efgtoa$724 003E                 _efgtoa$725 0040  
               _efgtoa$734 0044                 _efgtoa$735 0046                 _efgtoa$736 0048  
                  ?___flge 001A                    ?___fleq 0001                    ?___wmul 0001  
                  ?_efgtoa 002E                    ?_lcd_wr 0001                    ?_floorf 001A  
                  ?_strcpy 0001                    ?_strlen 0001         __size_of_vfpfcnvrt 046A  
                ?_lcd_init 0001                 _atraso_min 00E4         esvaziar_tanque@vol 007E  
                  __Hparam 0000                    __Lparam 0000      __end_of_encher_tanque 25E8  
          __size_of___flge 0104            __size_of___fleq 00AA                    ___fladd 128E  
                  ___fldiv 1FE2                    ___awdiv 32F6                    ___flneg 39EA  
                  ___awmod 3472                    ___flmul 1BB8                    ___flsub 3928  
                  ___fltol 2D88            __size_of___wmul 0026                  ?_vfprintf 008C  
        __end_of_atraso_ms 36A8               __psmallconst 0600            __size_of_efgtoa 0B9A  
          __size_of_lcd_wr 0008            __size_of_floorf 0212                    __pcinit 36A8  
                  __ramtop 0600                    __ptext0 2A42                    __ptext1 33BA  
                  __ptext2 37CC                    __ptext3 25E8                    __ptext4 237C  
                  __ptext5 3884                    __ptext6 370A                    __ptext7 174E  
                  __ptext8 3090                    __ptext9 06F4                    _lcd_dat 3A90  
                  _lcd_cmd 3ABA                    _lcd_str 35CC            __size_of_strcpy 005C  
          __size_of_strlen 0036               __size_of_pad 00C6                    _isdigit 3A22  
         ___awmod@dividend 0001                    _isspace 38D6                    _isupper 39B2  
                  efgtoa@c 0034                    efgtoa@d 0052                    efgtoa@e 006A  
                  efgtoa@f 0030                    efgtoa@g 0066                    efgtoa@h 005C  
                  efgtoa@i 0064                    efgtoa@l 0060                    efgtoa@m 004E  
                  efgtoa@n 006C                    efgtoa@p 0056                    efgtoa@t 004A  
                  efgtoa@u 006E                    efgtoa@w 0059                    atoi@neg 000E  
                  _sprintf 3884                    _tolower 376C                 ??_lcd_init 0008  
                  _strncmp 3090       end_of_initialization 3700                    floorf@e 0028  
                  floorf@m 0024                    floorf@u 002A                    floorf@x 001A  
                  fputc@fp 0003              __Lmediumconst 0000                    fputs@fp 000C  
        __end_of_vfpfcnvrt 1BB8                 efgtoa@mode 005B                 efgtoa@sign 0054  
                  postdec1 000FE5                    postdec2 000FDD                    postinc0 000FEE  
                  postinc1 000FE6                    postinc2 000FDE                 ??_vfprintf 007C  
                  strcpy@d 0009                    strlen@a 0003                    strcpy@s 0007  
                  strlen@s 0001            _esvaziar_tanque 25E8                ___fladd@grs 0010  
               lcd_dat@val 0007                 lcd_cmd@val 0007                ___fldiv@grs 0014  
              ___fldiv@rem 000D                ___flmul@grs 000E                 lcd_str@str 0008  
           __end_of___flge 2F92             __end_of___fleq 35CC                 atraso_ms@i 0003  
               atraso_ms@j 0005                 atraso_ms@k 0006                 atraso_ms@t 0001  
              vfpfcnvrt@ap 0076                vfpfcnvrt@ct 0088                vfpfcnvrt@fp 0072  
           __end_of___wmul 3B0A       esvaziar_tanque@tempo 00C0             __end_of_efgtoa 128E  
           __end_of_lcd_wr 3B44             __end_of_floorf 2A42                 floorf@F524 00E6  
           __end_of_strcpy 3884             __end_of_strlen 3A90        start_initialization 36A8  
              __end_of_pad 32F6      __end_of___fpclassifyf 3090                vfprintf@fmt 008E  
  __end_of_esvaziar_tanque 2830                   ??___flge 0022                   ??___fleq 0009  
                 ??___wmul 0005                   ??_efgtoa 0035                   ??_lcd_wr 0001  
              __pdataBANK0 00C8                __pdataBANK1 0150                   ??_floorf 001E  
                 ??_strcpy 0005                   ??_strlen 0003                  ___fladd@a 0005  
                ___fladd@b 0001                  ___fldiv@a 0005                  ___fldiv@b 0001  
                ___flmul@a 0005                  ___flmul@b 0001                  ___flsub@a 001E  
                ___flsub@b 001A              __pcstackBANK0 0080          __size_of_lcd_init 005C  
                 ?___fladd 0001                   ?___fldiv 0001                   ?___awdiv 0001  
                 ?___flneg 0001                   ?___awmod 0001                   ?___flmul 0001  
                 ?___flsub 001A                   ?___fltol 001A                   ?_lcd_dat 0001  
                 ?_lcd_cmd 0001          __size_of_vfprintf 0062                   ?_lcd_str 0008  
                _atrasoMed 00DE                  _atrasoMax 00DC                  _atrasoMin 00E0  
                _atraso_ms 3644                __smallconst 0600                   ?_isdigit 0001  
          ver_quantidade@i 00AC            ver_quantidade@y 00A4                   ?_isspace 0001  
                 ?_isupper 0001                   ?_sprintf 0092                   ?_tolower 0007  
  __size_of_ver_quantidade 00B8             __size_of_fputc 00CA             __size_of_fputs 0044  
                 ?_strncmp 0001             __size_of_putch 0002             ___wmul@product 0005  
         ?_esvaziar_tanque 007E                  _vfpfcnvrt 174E          ___wmul@multiplier 0001  
               ?_atraso_ms 0001                  lcd_wr@val 0001        esvaziar_tanque@F342 0150  
   __size_of_encher_tanque 026C                 vfpfcnvrt@c 008B                 vfpfcnvrt@f 0084  
                copy_data0 36BC                  copy_data1 36DC          ver_quantidade@vol 007E  
                 __Hrparam 0000                 vfprintf@ap 0090                   __Lrparam 0000  
               vfprintf@fp 008C           __size_of___fladd 04C0           __size_of___fldiv 039A  
         __size_of___awdiv 00C4           __size_of___flneg 0038           __size_of___awmod 00B0  
         __size_of___flmul 042A           __size_of___flsub 0046           __size_of___fltol 0106  
               ?_vfpfcnvrt 0072         ___fpclassifyf@F463 00EA           __size_of_lcd_dat 002A  
         __size_of_lcd_cmd 002A                 sprintf@fmt 0094           __size_of_lcd_str 0078  
                 _atoi$790 0012                   _atoi$788 0010                   _atoi$789 0014  
         __size_of_isdigit 0038           __size_of_isspace 0052                   __ptext10 376C  
                 __ptext11 39B2                   __ptext20 2D88                   __ptext12 3828  
                 __ptext21 3928                   __ptext13 3230                   __ptext30 2BF8  
                 __ptext22 128E                   __ptext14 3A5A                   __ptext31 38D6  
                 __ptext23 39EA                   __ptext15 396E                   __ptext32 3A22  
                 __ptext24 1BB8                   __ptext16 3166                   __ptext33 3AE4  
                 __ptext25 2E8E                   __ptext17 3B44                   __ptext34 35CC  
                 __ptext26 3522                   __ptext18 2830                   __ptext35 3A90  
                 __ptext27 1FE2                   __ptext19 2F92                   __ptext36 3ABA  
                 __ptext28 3472                   __ptext37 3B3C                   __ptext29 32F6  
                 __ptext38 3644           __size_of_isupper 0038                   _lcd_init 37CC  
         __size_of_sprintf 0052           __size_of_tolower 0060                 strcpy@dest 0001  
         __size_of_strncmp 00D6              __size_of_atoi 0190              __size_of_main 01B6  
                 efgtoa@fp 002E                   efgtoa@ne 0050                   efgtoa@pp 004C  
                 efgtoa@ou 003A              _encher_tanque 237C                   _vfprintf 370A  
                 lcd_str@i 000C                _isspace$819 0007                ??_atraso_ms 0003  
                 isdigit@c 0001             _ver_quantidade 33BA                  sprintf@ap 009C  
                 isspace@c 0001                  strcpy@src 0003                   isupper@c 0001  
                strncmp@_l 0001                  strncmp@_r 0003             ?_encher_tanque 007E  
              efgtoa@nmode 0058                ??_vfpfcnvrt 0078              _vfpfcnvrt$750 0080  
            _vfpfcnvrt$754 0082                   sprintf@f 009E                   tolower@c 0007  
                 sprintf@s 0092     __size_of___fpclassifyf 00FE     __end_of_ver_quantidade 3472  
                 strncmp@l 0008                   strncmp@n 0005                   strncmp@r 000A  
            ___fladd@signs 000D               ___fladd@aexp 000E               ___fladd@bexp 000F  

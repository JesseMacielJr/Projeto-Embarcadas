

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Jul 05 14:48:30 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    63                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    64  0000                     
    65                           ; Version 2.20
    66                           ; Generated 12/02/2020 GMT
    67                           ; 
    68                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F4520 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     
   100                           	psect	idataBANK0
   101  004306                     __pidataBANK0:
   102                           	callstack 0
   103                           
   104                           ;initializer for _atrasoMax
   105  004306  03E8               	dw	1000
   106                           
   107                           ;initializer for _atrasoMed
   108  004308  01F4               	dw	500
   109                           
   110                           ;initializer for _atrasoMin
   111  00430A  0014               	dw	20
   112                           
   113                           	psect	idataBANK1
   114  0043A2                     __pidataBANK1:
   115                           	callstack 0
   116                           
   117                           ;initializer for esvaziar_tanque@F342
   118  0043A2  003F               	dw	63
   119  0043A4  0006               	dw	6
   120  0043A6  005B               	dw	91
   121  0043A8  004F               	dw	79
   122  0043AA  0066               	dw	102
   123  0043AC  006D               	dw	109
   124  0043AE  007D               	dw	125
   125  0043B0  0007               	dw	7
   126  0043B2  007F               	dw	127
   127  0043B4  006F               	dw	111
   128                           
   129                           ;initializer for encher_tanque@F356
   130  0043B6  003F               	dw	63
   131  0043B8  0006               	dw	6
   132  0043BA  005B               	dw	91
   133  0043BC  004F               	dw	79
   134  0043BE  0066               	dw	102
   135  0043C0  006D               	dw	109
   136  0043C2  007D               	dw	125
   137  0043C4  0007               	dw	7
   138  0043C6  007F               	dw	127
   139  0043C8  006F               	dw	111
   140                           
   141                           ;initializer for _atraso
   142  0043CA  000F               	dw	15
   143                           
   144                           ;initializer for _atraso_min
   145  0043CC  0005               	dw	5
   146                           
   147                           	psect	mediumconst
   148  007EFA                     __pmediumconst:
   149                           	callstack 0
   150  007EFA  00                 	db	0
   151  007EFB                     _linha:
   152                           	callstack 0
   153  007EFB  01                 	db	1
   154  007EFC  02                 	db	2
   155  007EFD  04                 	db	4
   156  007EFE  00                 	db	0
   157  007EFF                     __end_of_linha:
   158                           	callstack 0
   159  007EFF                     STR_1:
   160  007EFF  41                 	db	65	;'A'
   161  007F00  62                 	db	98	;'b'
   162  007F01  61                 	db	97	;'a'
   163  007F02  73                 	db	115	;'s'
   164  007F03  74                 	db	116	;'t'
   165  007F04  65                 	db	101	;'e'
   166  007F05  63                 	db	99	;'c'
   167  007F06  69                 	db	105	;'i'
   168  007F07  6D                 	db	109	;'m'
   169  007F08  65                 	db	101	;'e'
   170  007F09  6E                 	db	110	;'n'
   171  007F0A  74                 	db	116	;'t'
   172  007F0B  6F                 	db	111	;'o'
   173  007F0C  20                 	db	32
   174  007F0D  64                 	db	100	;'d'
   175  007F0E  65                 	db	101	;'e'
   176  007F0F  00                 	db	0
   177  007F10                     STR_10:
   178  007F10  45                 	db	69	;'E'
   179  007F11  52                 	db	82	;'R'
   180  007F12  52                 	db	82	;'R'
   181  007F13  4F                 	db	79	;'O'
   182  007F14  3A                 	db	58	;':'
   183  007F15  20                 	db	32
   184  007F16  76                 	db	118	;'v'
   185  007F17  6F                 	db	111	;'o'
   186  007F18  6C                 	db	108	;'l'
   187  007F19  20                 	db	32
   188  007F1A  3E                 	db	62	;'>'
   189  007F1B  20                 	db	32
   190  007F1C  4D                 	db	77	;'M'
   191  007F1D  41                 	db	65	;'A'
   192  007F1E  58                 	db	88	;'X'
   193  007F1F  00                 	db	0
   194  007F20                     STR_5:
   195  007F20  31                 	db	49	;'1'
   196  007F21  2D                 	db	45
   197  007F22  56                 	db	86	;'V'
   198  007F23  65                 	db	101	;'e'
   199  007F24  72                 	db	114	;'r'
   200  007F25  20                 	db	32
   201  007F26  32                 	db	50	;'2'
   202  007F27  2D                 	db	45
   203  007F28  45                 	db	69	;'E'
   204  007F29  6E                 	db	110	;'n'
   205  007F2A  63                 	db	99	;'c'
   206  007F2B  68                 	db	104	;'h'
   207  007F2C  65                 	db	101	;'e'
   208  007F2D  72                 	db	114	;'r'
   209  007F2E  00                 	db	0
   210  007F2F                     STR_4:
   211  007F2F  56                 	db	86	;'V'
   212  007F30  61                 	db	97	;'a'
   213  007F31  7A                 	db	122	;'z'
   214  007F32  61                 	db	97	;'a'
   215  007F33  6F                 	db	111	;'o'
   216  007F34  3A                 	db	58	;':'
   217  007F35  20                 	db	32
   218  007F36  30                 	db	48	;'0'
   219  007F37  2E                 	db	46
   220  007F38  35                 	db	53	;'5'
   221  007F39  20                 	db	32
   222  007F3A  4C                 	db	76	;'L'
   223  007F3B  2F                 	db	47
   224  007F3C  73                 	db	115	;'s'
   225  007F3D  00                 	db	0
   226  007F3E                     STR_24:
   227  007F3E  45                 	db	69	;'E'
   228  007F3F  73                 	db	115	;'s'
   229  007F40  76                 	db	118	;'v'
   230  007F41  61                 	db	97	;'a'
   231  007F42  7A                 	db	122	;'z'
   232  007F43  69                 	db	105	;'i'
   233  007F44  61                 	db	97	;'a'
   234  007F45  6E                 	db	110	;'n'
   235  007F46  64                 	db	100	;'d'
   236  007F47  6F                 	db	111	;'o'
   237  007F48  2E                 	db	46
   238  007F49  2E                 	db	46
   239  007F4A  2E                 	db	46
   240  007F4B  00                 	db	0
   241  007F4C                     STR_20:
   242  007F4C  45                 	db	69	;'E'
   243  007F4D  52                 	db	82	;'R'
   244  007F4E  52                 	db	82	;'R'
   245  007F4F  4F                 	db	79	;'O'
   246  007F50  3A                 	db	58	;':'
   247  007F51  20                 	db	32
   248  007F52  76                 	db	118	;'v'
   249  007F53  6F                 	db	111	;'o'
   250  007F54  6C                 	db	108	;'l'
   251  007F55  20                 	db	32
   252  007F56  3C                 	db	60	;'<'
   253  007F57  20                 	db	32
   254  007F58  30                 	db	48	;'0'
   255  007F59  00                 	db	0
   256  007F5A                     STR_7:
   257  007F5A  20                 	db	32
   258  007F5B  20                 	db	32
   259  007F5C  20                 	db	32
   260  007F5D  20                 	db	32
   261  007F5E  49                 	db	73	;'I'
   262  007F5F  4E                 	db	78	;'N'
   263  007F60  56                 	db	86	;'V'
   264  007F61  41                 	db	65	;'A'
   265  007F62  4C                 	db	76	;'L'
   266  007F63  49                 	db	73	;'I'
   267  007F64  44                 	db	68	;'D'
   268  007F65  4F                 	db	79	;'O'
   269  007F66  21                 	db	33
   270  007F67  00                 	db	0
   271  007F68                     STR_3:
   272  007F68  56                 	db	86	;'V'
   273  007F69  6F                 	db	111	;'o'
   274  007F6A  6C                 	db	108	;'l'
   275  007F6B  20                 	db	32
   276  007F6C  6D                 	db	109	;'m'
   277  007F6D  61                 	db	97	;'a'
   278  007F6E  78                 	db	120	;'x'
   279  007F6F  20                 	db	32
   280  007F70  3D                 	db	61	;'='
   281  007F71  20                 	db	32
   282  007F72  37                 	db	55	;'7'
   283  007F73  30                 	db	48	;'0'
   284  007F74  4C                 	db	76	;'L'
   285  007F75  00                 	db	0
   286  007F76                     STR_16:
   287  007F76  20                 	db	32
   288  007F77  20                 	db	32
   289  007F78  20                 	db	32
   290  007F79  20                 	db	32
   291  007F7A  53                 	db	83	;'S'
   292  007F7B  55                 	db	85	;'U'
   293  007F7C  43                 	db	67	;'C'
   294  007F7D  45                 	db	69	;'E'
   295  007F7E  53                 	db	83	;'S'
   296  007F7F  53                 	db	83	;'S'
   297  007F80  4F                 	db	79	;'O'
   298  007F81  21                 	db	33
   299  007F82  00                 	db	0
   300  007F83                     STR_17:
   301  007F83  20                 	db	32
   302  007F84  20                 	db	32
   303  007F85  20                 	db	32
   304  007F86  20                 	db	32
   305  007F87  30                 	db	48	;'0'
   306  007F88  2D                 	db	45
   307  007F89  56                 	db	86	;'V'
   308  007F8A  6F                 	db	111	;'o'
   309  007F8B  6C                 	db	108	;'l'
   310  007F8C  74                 	db	116	;'t'
   311  007F8D  61                 	db	97	;'a'
   312  007F8E  72                 	db	114	;'r'
   313  007F8F  00                 	db	0
   314  007F90                     STR_14:
   315  007F90  45                 	db	69	;'E'
   316  007F91  6E                 	db	110	;'n'
   317  007F92  63                 	db	99	;'c'
   318  007F93  68                 	db	104	;'h'
   319  007F94  65                 	db	101	;'e'
   320  007F95  6E                 	db	110	;'n'
   321  007F96  64                 	db	100	;'d'
   322  007F97  6F                 	db	111	;'o'
   323  007F98  2E                 	db	46
   324  007F99  2E                 	db	46
   325  007F9A  2E                 	db	46
   326  007F9B  00                 	db	0
   327  007F9C                     STR_8:
   328  007F9C  51                 	db	81	;'Q'
   329  007F9D  75                 	db	117	;'u'
   330  007F9E  61                 	db	97	;'a'
   331  007F9F  6E                 	db	110	;'n'
   332  007FA0  74                 	db	116	;'t'
   333  007FA1  28                 	db	40
   334  007FA2  4C                 	db	76	;'L'
   335  007FA3  29                 	db	41
   336  007FA4  3A                 	db	58	;':'
   337  007FA5  20                 	db	32
   338  007FA6  00                 	db	0
   339  007FA7                     STR_11:
   340  007FA7  52                 	db	82	;'R'
   341  007FA8  42                 	db	66	;'B'
   342  007FA9  31                 	db	49	;'1'
   343  007FAA  2D                 	db	45
   344  007FAB  56                 	db	86	;'V'
   345  007FAC  6F                 	db	111	;'o'
   346  007FAD  6C                 	db	108	;'l'
   347  007FAE  74                 	db	116	;'t'
   348  007FAF  61                 	db	97	;'a'
   349  007FB0  72                 	db	114	;'r'
   350  007FB1  00                 	db	0
   351  007FB2                     STR_9:
   352  007FB2  52                 	db	82	;'R'
   353  007FB3  42                 	db	66	;'B'
   354  007FB4  31                 	db	49	;'1'
   355  007FB5  2D                 	db	45
   356  007FB6  76                 	db	118	;'v'
   357  007FB7  6F                 	db	111	;'o'
   358  007FB8  6C                 	db	108	;'l'
   359  007FB9  74                 	db	116	;'t'
   360  007FBA  61                 	db	97	;'a'
   361  007FBB  72                 	db	114	;'r'
   362  007FBC  00                 	db	0
   363  007FBD                     STR_2:
   364  007FBD  20                 	db	32
   365  007FBE  20                 	db	32
   366  007FBF  20                 	db	32
   367  007FC0  20                 	db	32
   368  007FC1  20                 	db	32
   369  007FC2  20                 	db	32
   370  007FC3  61                 	db	97	;'a'
   371  007FC4  67                 	db	103	;'g'
   372  007FC5  75                 	db	117	;'u'
   373  007FC6  61                 	db	97	;'a'
   374  007FC7  00                 	db	0
   375  007FC8                     STR_6:
   376  007FC8  33                 	db	51	;'3'
   377  007FC9  2D                 	db	45
   378  007FCA  52                 	db	82	;'R'
   379  007FCB  65                 	db	101	;'e'
   380  007FCC  74                 	db	116	;'t'
   381  007FCD  69                 	db	105	;'i'
   382  007FCE  72                 	db	114	;'r'
   383  007FCF  61                 	db	97	;'a'
   384  007FD0  72                 	db	114	;'r'
   385  007FD1  00                 	db	0
   386  007FD2                     STR_15:
   387  007FD2  41                 	db	65	;'A'
   388  007FD3  67                 	db	103	;'g'
   389  007FD4  75                 	db	117	;'u'
   390  007FD5  61                 	db	97	;'a'
   391  007FD6  72                 	db	114	;'r'
   392  007FD7  64                 	db	100	;'d'
   393  007FD8  65                 	db	101	;'e'
   394  007FD9  21                 	db	33
   395  007FDA  00                 	db	0
   396  007FDB                     STR_29:
   397  007FDB  41                 	db	65	;'A'
   398  007FDC  74                 	db	116	;'t'
   399  007FDD  75                 	db	117	;'u'
   400  007FDE  61                 	db	97	;'a'
   401  007FDF  6C                 	db	108	;'l'
   402  007FE0  3A                 	db	58	;':'
   403  007FE1  20                 	db	32
   404  007FE2  00                 	db	0
   405  007FE3                     STR_12:
   406  007FE3  25                 	db	37
   407  007FE4  2E                 	db	46
   408  007FE5  31                 	db	49	;'1'
   409  007FE6  66                 	db	102	;'f'
   410  007FE7  00                 	db	0
   411  007FE8                     STR_32:
   412  007FE8  49                 	db	73	;'I'
   413  007FE9  4E                 	db	78	;'N'
   414  007FEA  46                 	db	70	;'F'
   415  007FEB  00                 	db	0
   416  007FEC                     STR_36:
   417  007FEC  4E                 	db	78	;'N'
   418  007FED  41                 	db	65	;'A'
   419  007FEE  4E                 	db	78	;'N'
   420  007FEF  00                 	db	0
   421  007FF0                     STR_33:
   422  007FF0  69                 	db	105	;'i'
   423  007FF1  6E                 	db	110	;'n'
   424  007FF2  66                 	db	102	;'f'
   425  007FF3  00                 	db	0
   426  007FF4                     STR_37:
   427  007FF4  6E                 	db	110	;'n'
   428  007FF5  61                 	db	97	;'a'
   429  007FF6  6E                 	db	110	;'n'
   430  007FF7  00                 	db	0
   431  007FF8                     STR_40:
   432  007FF8  6C                 	db	108	;'l'
   433  007FF9  66                 	db	102	;'f'
   434  007FFA  00                 	db	0
   435  007FFB                     STR_13:
   436  007FFB  20                 	db	32
   437  007FFC  4C                 	db	76	;'L'
   438  007FFD  00                 	db	0
   439  007FFE  00                 	db	0	; dummy byte at the end
   440  0000                     
   441                           ; #config settings
   442                           
   443                           	psect	cinit
   444  004754                     __pcinit:
   445                           	callstack 0
   446  004754                     start_initialization:
   447                           	callstack 0
   448  004754                     __initialization:
   449                           	callstack 0
   450                           
   451                           ; Initialize objects allocated to BANK1 (44 bytes)
   452                           ; load TBLPTR registers with __pidataBANK1
   453  004754  0EA2               	movlw	low __pidataBANK1
   454  004756  6EF6               	movwf	tblptrl,c
   455  004758  0E43               	movlw	high __pidataBANK1
   456  00475A  6EF7               	movwf	tblptrh,c
   457  00475C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   458  00475E  6EF8               	movwf	tblptru,c
   459  004760  EE01  F08D         	lfsr	0,__pdataBANK1
   460  004764  EE10 F02C          	lfsr	1,44
   461  004768                     copy_data0:
   462  004768  0009               	tblrd		*+
   463  00476A  CFF5 FFEE          	movff	tablat,postinc0
   464  00476E  50E5               	movf	postdec1,w,c
   465  004770  50E1               	movf	fsr1l,w,c
   466  004772  E1FA               	bnz	copy_data0
   467                           
   468                           ; Initialize objects allocated to BANK0 (6 bytes)
   469                           ; load TBLPTR registers with __pidataBANK0
   470  004774  0E06               	movlw	low __pidataBANK0
   471  004776  6EF6               	movwf	tblptrl,c
   472  004778  0E43               	movlw	high __pidataBANK0
   473  00477A  6EF7               	movwf	tblptrh,c
   474  00477C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   475  00477E  6EF8               	movwf	tblptru,c
   476  004780  EE00  F0FA         	lfsr	0,__pdataBANK0
   477  004784  EE10 F006          	lfsr	1,6
   478  004788                     copy_data1:
   479  004788  0009               	tblrd		*+
   480  00478A  CFF5 FFEE          	movff	tablat,postinc0
   481  00478E  50E5               	movf	postdec1,w,c
   482  004790  50E1               	movf	fsr1l,w,c
   483  004792  E1FA               	bnz	copy_data1
   484                           
   485                           ; Clear objects allocated to BANK1 (88 bytes)
   486  004794  EE01  F000         	lfsr	0,__pbssBANK1
   487  004798  0E58               	movlw	88
   488  00479A                     clear_0:
   489  00479A  6AEE               	clrf	postinc0,c
   490  00479C  06E8               	decf	wreg,f,c
   491  00479E  E1FD               	bnz	clear_0
   492                           
   493                           ; Clear objects allocated to BANK0 (14 bytes)
   494  0047A0  EE00  F0EC         	lfsr	0,__pbssBANK0
   495  0047A4  0E0E               	movlw	14
   496  0047A6                     clear_1:
   497  0047A6  6AEE               	clrf	postinc0,c
   498  0047A8  06E8               	decf	wreg,f,c
   499  0047AA  E1FD               	bnz	clear_1
   500  0047AC                     end_of_initialization:
   501                           	callstack 0
   502  0047AC                     __end_of__initialization:
   503                           	callstack 0
   504  0047AC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   505  0047AE  6EF8               	movwf	tblptru,c
   506  0047B0  0100               	movlb	0
   507  0047B2  EFF2  F028         	goto	_main	;jump to C main() function
   508                           
   509                           	psect	bssBANK0
   510  0000EC                     __pbssBANK0:
   511                           	callstack 0
   512  0000EC                     _nout:
   513                           	callstack 0
   514  0000EC                     	ds	2
   515  0000EE                     _width:
   516                           	callstack 0
   517  0000EE                     	ds	2
   518  0000F0                     _prec:
   519                           	callstack 0
   520  0000F0                     	ds	2
   521  0000F2                     _flags:
   522                           	callstack 0
   523  0000F2                     	ds	2
   524  0000F4                     _i:
   525                           	callstack 0
   526  0000F4                     	ds	2
   527  0000F6                     _volume:
   528                           	callstack 0
   529  0000F6                     	ds	4
   530                           
   531                           	psect	dataBANK0
   532  0000FA                     __pdataBANK0:
   533                           	callstack 0
   534  0000FA                     _atrasoMax:
   535                           	callstack 0
   536  0000FA                     	ds	2
   537  0000FC                     _atrasoMed:
   538                           	callstack 0
   539  0000FC                     	ds	2
   540  0000FE                     _atrasoMin:
   541                           	callstack 0
   542  0000FE                     	ds	2
   543                           
   544                           	psect	bssBANK1
   545  000100                     __pbssBANK1:
   546                           	callstack 0
   547  000100                     floorf@F524:
   548                           	callstack 0
   549  000100                     	ds	4
   550  000104                     ___fpclassifyf@F463:
   551                           	callstack 0
   552  000104                     	ds	4
   553  000108                     _dbuf:
   554                           	callstack 0
   555  000108                     	ds	80
   556                           
   557                           	psect	dataBANK1
   558  00018D                     __pdataBANK1:
   559                           	callstack 0
   560  00018D                     esvaziar_tanque@F342:
   561                           	callstack 0
   562  00018D                     	ds	20
   563  0001A1                     encher_tanque@F356:
   564                           	callstack 0
   565  0001A1                     	ds	20
   566  0001B5                     _atraso:
   567                           	callstack 0
   568  0001B5                     	ds	2
   569  0001B7                     _atraso_min:
   570                           	callstack 0
   571  0001B7                     	ds	2
   572                           
   573                           	psect	cstackBANK1
   574  000158                     __pcstackBANK1:
   575                           	callstack 0
   576  000158                     encher_tanque@numeros:
   577                           	callstack 0
   578  000158                     esvaziar_tanque@numeros:
   579                           	callstack 0
   580                           
   581                           ; 20 bytes @ 0x0
   582  000158                     	ds	20
   583  00016C                     encher_tanque@y:
   584                           	callstack 0
   585  00016C                     esvaziar_tanque@y:
   586                           	callstack 0
   587                           
   588                           ; 8 bytes @ 0x14
   589  00016C                     	ds	8
   590  000174                     esvaziar_tanque@tempo:
   591                           	callstack 0
   592  000174                     encher_tanque@porcento:
   593                           	callstack 0
   594                           
   595                           ; 4 bytes @ 0x1C
   596  000174                     	ds	2
   597  000176                     esvaziar_tanque@opt:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x1E
   601  000176                     	ds	2
   602  000178                     esvaziar_tanque@tmp:
   603                           	callstack 0
   604  000178                     encher_tanque@opt:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x20
   608  000178                     	ds	1
   609  000179                     esvaziar_tanque@decremento:
   610                           	callstack 0
   611                           
   612                           ; 4 bytes @ 0x21
   613  000179                     	ds	1
   614  00017A                     encher_tanque@i_150:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x22
   618  00017A                     	ds	2
   619  00017C                     encher_tanque@num:
   620                           	callstack 0
   621                           
   622                           ; 4 bytes @ 0x24
   623  00017C                     	ds	1
   624  00017D                     esvaziar_tanque@i:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x25
   628  00017D                     	ds	3
   629  000180                     encher_tanque@potencia:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x28
   633  000180                     	ds	2
   634  000182                     encher_tanque@incremento:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x2A
   638  000182                     	ds	2
   639  000184                     encher_tanque@tempo:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x2C
   643  000184                     	ds	2
   644  000186                     encher_tanque@t1:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x2E
   648  000186                     	ds	2
   649  000188                     encher_tanque@i:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x30
   653  000188                     	ds	2
   654  00018A                     encher_tanque@t2:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x32
   658  00018A                     	ds	2
   659  00018C                     encher_tanque@tmp:
   660                           	callstack 0
   661                           
   662                           ; 1 bytes @ 0x34
   663  00018C                     	ds	1
   664                           
   665                           	psect	cstackBANK0
   666  000080                     __pcstackBANK0:
   667                           	callstack 0
   668  000080                     efgtoa@ou:
   669                           	callstack 0
   670                           
   671                           ; 4 bytes @ 0x0
   672  000080                     	ds	4
   673  000084                     _efgtoa$762:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x4
   677  000084                     	ds	2
   678  000086                     _efgtoa$763:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x6
   682  000086                     	ds	2
   683  000088                     _efgtoa$768:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x8
   687  000088                     	ds	2
   688  00008A                     _efgtoa$772:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0xA
   692  00008A                     	ds	2
   693  00008C                     _efgtoa$773:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0xC
   697  00008C                     	ds	2
   698  00008E                     _efgtoa$774:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0xE
   702  00008E                     	ds	2
   703  000090                     efgtoa@t:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x10
   707  000090                     	ds	2
   708  000092                     efgtoa@pp:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x12
   712  000092                     	ds	2
   713  000094                     efgtoa@m:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x14
   717  000094                     	ds	2
   718  000096                     efgtoa@ne:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x16
   722  000096                     	ds	2
   723  000098                     efgtoa@d:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0x18
   727  000098                     	ds	2
   728  00009A                     efgtoa@sign:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x1A
   732  00009A                     	ds	2
   733  00009C                     efgtoa@p:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x1C
   737  00009C                     	ds	2
   738  00009E                     efgtoa@nmode:
   739                           	callstack 0
   740                           
   741                           ; 1 bytes @ 0x1E
   742  00009E                     	ds	1
   743  00009F                     efgtoa@w:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x1F
   747  00009F                     	ds	2
   748  0000A1                     efgtoa@mode:
   749                           	callstack 0
   750                           
   751                           ; 1 bytes @ 0x21
   752  0000A1                     	ds	1
   753  0000A2                     efgtoa@h:
   754                           	callstack 0
   755                           
   756                           ; 4 bytes @ 0x22
   757  0000A2                     	ds	4
   758  0000A6                     efgtoa@l:
   759                           	callstack 0
   760                           
   761                           ; 4 bytes @ 0x26
   762  0000A6                     	ds	4
   763  0000AA                     efgtoa@i:
   764                           	callstack 0
   765                           
   766                           ; 2 bytes @ 0x2A
   767  0000AA                     	ds	2
   768  0000AC                     efgtoa@g:
   769                           	callstack 0
   770                           
   771                           ; 4 bytes @ 0x2C
   772  0000AC                     	ds	4
   773  0000B0                     efgtoa@e:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0x30
   777  0000B0                     	ds	2
   778  0000B2                     efgtoa@n:
   779                           	callstack 0
   780                           
   781                           ; 2 bytes @ 0x32
   782  0000B2                     	ds	2
   783  0000B4                     efgtoa@u:
   784                           	callstack 0
   785                           
   786                           ; 4 bytes @ 0x34
   787  0000B4                     	ds	4
   788  0000B8                     _vfpfcnvrt$788:
   789                           	callstack 0
   790                           
   791                           ; 2 bytes @ 0x38
   792  0000B8                     	ds	2
   793  0000BA                     _vfpfcnvrt$792:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0x3A
   797  0000BA                     	ds	2
   798  0000BC                     vfpfcnvrt@f:
   799                           	callstack 0
   800                           
   801                           ; 4 bytes @ 0x3C
   802  0000BC                     	ds	4
   803  0000C0                     vfpfcnvrt@ct:
   804                           	callstack 0
   805                           
   806                           ; 3 bytes @ 0x40
   807  0000C0                     	ds	3
   808  0000C3                     vfpfcnvrt@c:
   809                           	callstack 0
   810                           
   811                           ; 1 bytes @ 0x43
   812  0000C3                     	ds	1
   813  0000C4                     ?_vfprintf:
   814                           	callstack 0
   815  0000C4                     vfprintf@fp:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x44
   819  0000C4                     	ds	2
   820  0000C6                     vfprintf@fmt:
   821                           	callstack 0
   822                           
   823                           ; 2 bytes @ 0x46
   824  0000C6                     	ds	2
   825  0000C8                     vfprintf@ap:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x48
   829  0000C8                     	ds	2
   830  0000CA                     ?_sprintf:
   831                           	callstack 0
   832  0000CA                     sprintf@s:
   833                           	callstack 0
   834                           
   835                           ; 2 bytes @ 0x4A
   836  0000CA                     	ds	2
   837  0000CC                     sprintf@fmt:
   838                           	callstack 0
   839                           
   840                           ; 2 bytes @ 0x4C
   841  0000CC                     	ds	8
   842  0000D4                     sprintf@ap:
   843                           	callstack 0
   844                           
   845                           ; 2 bytes @ 0x54
   846  0000D4                     	ds	2
   847  0000D6                     sprintf@f:
   848                           	callstack 0
   849                           
   850                           ; 6 bytes @ 0x56
   851  0000D6                     	ds	6
   852  0000DC                     ??_encher_tanque:
   853  0000DC                     ver_quantidade@y:
   854                           	callstack 0
   855                           
   856                           ; 8 bytes @ 0x5C
   857  0000DC                     	ds	8
   858  0000E4                     ver_quantidade@num:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x64
   862  0000E4                     	ds	2
   863  0000E6                     ver_quantidade@tmp:
   864                           	callstack 0
   865                           
   866                           ; 1 bytes @ 0x66
   867  0000E6                     	ds	1
   868  0000E7                     ver_quantidade@i:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0x67
   872  0000E7                     	ds	2
   873  0000E9                     main@tmp:
   874                           	callstack 0
   875                           
   876                           ; 1 bytes @ 0x69
   877  0000E9                     	ds	1
   878  0000EA                     main@opt:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x6A
   882  0000EA                     	ds	2
   883                           
   884                           	psect	cstackCOMRAM
   885  000001                     __pcstackCOMRAM:
   886                           	callstack 0
   887  000001                     ?_strlen:
   888                           	callstack 0
   889  000001                     ?___fpclassifyf:
   890                           	callstack 0
   891  000001                     ?_isupper:
   892                           	callstack 0
   893  000001                     ?_isdigit:
   894                           	callstack 0
   895  000001                     ?_strncmp:
   896                           	callstack 0
   897  000001                     ?_isspace:
   898                           	callstack 0
   899  000001                     ?___wmul:
   900                           	callstack 0
   901  000001                     ?___awdiv:
   902                           	callstack 0
   903  000001                     ?___awmod:
   904                           	callstack 0
   905  000001                     ?___lwdiv:
   906                           	callstack 0
   907  000001                     ?___flneg:
   908                           	callstack 0
   909  000001                     ?___xxtofl:
   910                           	callstack 0
   911  000001                     lcd_wr@val:
   912                           	callstack 0
   913  000001                     atraso_ms@t:
   914                           	callstack 0
   915  000001                     ___wmul@multiplier:
   916                           	callstack 0
   917  000001                     ___awdiv@dividend:
   918                           	callstack 0
   919  000001                     ___awmod@dividend:
   920                           	callstack 0
   921  000001                     ___lwdiv@dividend:
   922                           	callstack 0
   923  000001                     isdigit@c:
   924                           	callstack 0
   925  000001                     isspace@c:
   926                           	callstack 0
   927  000001                     isupper@c:
   928                           	callstack 0
   929  000001                     fputc@c:
   930                           	callstack 0
   931  000001                     strcpy@dest:
   932                           	callstack 0
   933  000001                     strlen@s:
   934                           	callstack 0
   935  000001                     strncmp@_l:
   936                           	callstack 0
   937  000001                     ___fleq@ff1:
   938                           	callstack 0
   939  000001                     ___flneg@f1:
   940                           	callstack 0
   941  000001                     ___xxtofl@val:
   942                           	callstack 0
   943  000001                     ___fpclassifyf@x:
   944                           	callstack 0
   945                           
   946                           ; 4 bytes @ 0x0
   947  000001                     	ds	2
   948  000003                     ??_isupper:
   949  000003                     ??_isdigit:
   950  000003                     ??_isspace:
   951  000003                     atraso_ms@i:
   952                           	callstack 0
   953  000003                     ___wmul@multiplicand:
   954                           	callstack 0
   955  000003                     ___awdiv@divisor:
   956                           	callstack 0
   957  000003                     ___awmod@divisor:
   958                           	callstack 0
   959  000003                     ___lwdiv@divisor:
   960                           	callstack 0
   961  000003                     fputc@fp:
   962                           	callstack 0
   963  000003                     strcpy@src:
   964                           	callstack 0
   965  000003                     strlen@a:
   966                           	callstack 0
   967  000003                     strncmp@_r:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0x2
   971  000003                     	ds	2
   972  000005                     ??_fputc:
   973  000005                     ??___fpclassifyf:
   974  000005                     ??_strcpy:
   975  000005                     ??___xxtofl:
   976  000005                     atraso_ms@j:
   977                           	callstack 0
   978  000005                     ___awdiv@counter:
   979                           	callstack 0
   980  000005                     ___awmod@counter:
   981                           	callstack 0
   982  000005                     ___wmul@product:
   983                           	callstack 0
   984  000005                     ___lwdiv@quotient:
   985                           	callstack 0
   986  000005                     strncmp@n:
   987                           	callstack 0
   988  000005                     ___fleq@ff2:
   989                           	callstack 0
   990                           
   991                           ; 4 bytes @ 0x4
   992  000005                     	ds	1
   993  000006                     atraso_ms@k:
   994                           	callstack 0
   995  000006                     ___awdiv@sign:
   996                           	callstack 0
   997  000006                     ___awmod@sign:
   998                           	callstack 0
   999                           
  1000                           ; 1 bytes @ 0x5
  1001  000006                     	ds	1
  1002  000007                     ??_strncmp:
  1003  000007                     ?_tolower:
  1004                           	callstack 0
  1005  000007                     lcd_cmd@val:
  1006                           	callstack 0
  1007  000007                     lcd_dat@val:
  1008                           	callstack 0
  1009  000007                     ___lwdiv@counter:
  1010                           	callstack 0
  1011  000007                     _isspace$857:
  1012                           	callstack 0
  1013  000007                     tc_tecla@timeout:
  1014                           	callstack 0
  1015  000007                     ___awdiv@quotient:
  1016                           	callstack 0
  1017  000007                     strcpy@s:
  1018                           	callstack 0
  1019  000007                     tolower@c:
  1020                           	callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x6
  1023  000007                     	ds	1
  1024  000008                     ??_pwmSet1:
  1025  000008                     ?_atoi:
  1026                           	callstack 0
  1027  000008                     lcd_str@str:
  1028                           	callstack 0
  1029  000008                     atoi@s:
  1030                           	callstack 0
  1031  000008                     strncmp@l:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x7
  1035  000008                     	ds	1
  1036  000009                     ??_tolower:
  1037  000009                     ??___fleq:
  1038  000009                     ___xxtofl@sign:
  1039                           	callstack 0
  1040  000009                     tc_tecla@to:
  1041                           	callstack 0
  1042  000009                     ___fpclassifyf@e:
  1043                           	callstack 0
  1044  000009                     strcpy@d:
  1045                           	callstack 0
  1046                           
  1047                           ; 2 bytes @ 0x8
  1048  000009                     	ds	1
  1049  00000A                     ??_lcd_str:
  1050  00000A                     ??_atoi:
  1051  00000A                     pwmSet1@porcento:
  1052                           	callstack 0
  1053  00000A                     ___xxtofl@exp:
  1054                           	callstack 0
  1055  00000A                     fputs@s:
  1056                           	callstack 0
  1057  00000A                     strncmp@r:
  1058                           	callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x9
  1061  00000A                     	ds	1
  1062  00000B                     tc_tecla@tmp:
  1063                           	callstack 0
  1064  00000B                     pwmSet1@val:
  1065                           	callstack 0
  1066  00000B                     ___xxtofl@arg:
  1067                           	callstack 0
  1068  00000B                     ___fpclassifyf@u:
  1069                           	callstack 0
  1070                           
  1071                           ; 4 bytes @ 0xA
  1072  00000B                     	ds	1
  1073  00000C                     tc_tecla@ret:
  1074                           	callstack 0
  1075  00000C                     lcd_str@i:
  1076                           	callstack 0
  1077  00000C                     fputs@fp:
  1078                           	callstack 0
  1079                           
  1080                           ; 2 bytes @ 0xB
  1081  00000C                     	ds	1
  1082  00000D                     tc_tecla@i:
  1083                           	callstack 0
  1084  00000D                     _tolower$921:
  1085                           	callstack 0
  1086                           
  1087                           ; 2 bytes @ 0xC
  1088  00000D                     	ds	1
  1089  00000E                     fputs@c:
  1090                           	callstack 0
  1091  00000E                     atoi@neg:
  1092                           	callstack 0
  1093                           
  1094                           ; 2 bytes @ 0xD
  1095  00000E                     	ds	1
  1096  00000F                     ?___flmul:
  1097                           	callstack 0
  1098  00000F                     fputs@i:
  1099                           	callstack 0
  1100  00000F                     ___flmul@b:
  1101                           	callstack 0
  1102                           
  1103                           ; 4 bytes @ 0xE
  1104  00000F                     	ds	1
  1105  000010                     _atoi$826:
  1106                           	callstack 0
  1107                           
  1108                           ; 2 bytes @ 0xF
  1109  000010                     	ds	1
  1110  000011                     ?_pad:
  1111                           	callstack 0
  1112  000011                     pad@fp:
  1113                           	callstack 0
  1114                           
  1115                           ; 2 bytes @ 0x10
  1116  000011                     	ds	1
  1117  000012                     _atoi$828:
  1118                           	callstack 0
  1119                           
  1120                           ; 2 bytes @ 0x11
  1121  000012                     	ds	1
  1122  000013                     pad@buf:
  1123                           	callstack 0
  1124  000013                     ___flmul@a:
  1125                           	callstack 0
  1126                           
  1127                           ; 4 bytes @ 0x12
  1128  000013                     	ds	1
  1129  000014                     _atoi$827:
  1130                           	callstack 0
  1131                           
  1132                           ; 1 bytes @ 0x13
  1133  000014                     	ds	1
  1134  000015                     pad@p:
  1135                           	callstack 0
  1136  000015                     atoi@n:
  1137                           	callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x14
  1140  000015                     	ds	2
  1141  000017                     ??___flmul:
  1142  000017                     ??_pad:
  1143                           
  1144                           ; 1 bytes @ 0x16
  1145  000017                     	ds	1
  1146  000018                     pad@i:
  1147                           	callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x17
  1150  000018                     	ds	2
  1151  00001A                     pad@w:
  1152                           	callstack 0
  1153                           
  1154                           ; 2 bytes @ 0x19
  1155  00001A                     	ds	1
  1156  00001B                     ___flmul@sign:
  1157                           	callstack 0
  1158                           
  1159                           ; 1 bytes @ 0x1A
  1160  00001B                     	ds	1
  1161  00001C                     ___flmul@grs:
  1162                           	callstack 0
  1163                           
  1164                           ; 4 bytes @ 0x1B
  1165  00001C                     	ds	4
  1166  000020                     ___flmul@aexp:
  1167                           	callstack 0
  1168                           
  1169                           ; 1 bytes @ 0x1F
  1170  000020                     	ds	1
  1171  000021                     ___flmul@bexp:
  1172                           	callstack 0
  1173                           
  1174                           ; 1 bytes @ 0x20
  1175  000021                     	ds	1
  1176  000022                     ___flmul@prod:
  1177                           	callstack 0
  1178                           
  1179                           ; 4 bytes @ 0x21
  1180  000022                     	ds	4
  1181  000026                     ___flmul@temp:
  1182                           	callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x25
  1185  000026                     	ds	2
  1186  000028                     ?___fladd:
  1187                           	callstack 0
  1188  000028                     ___fladd@b:
  1189                           	callstack 0
  1190                           
  1191                           ; 4 bytes @ 0x27
  1192  000028                     	ds	4
  1193  00002C                     ___fladd@a:
  1194                           	callstack 0
  1195                           
  1196                           ; 4 bytes @ 0x2B
  1197  00002C                     	ds	4
  1198  000030                     ??___fladd:
  1199                           
  1200                           ; 1 bytes @ 0x2F
  1201  000030                     	ds	4
  1202  000034                     ___fladd@signs:
  1203                           	callstack 0
  1204                           
  1205                           ; 1 bytes @ 0x33
  1206  000034                     	ds	1
  1207  000035                     ___fladd@aexp:
  1208                           	callstack 0
  1209                           
  1210                           ; 1 bytes @ 0x34
  1211  000035                     	ds	1
  1212  000036                     ___fladd@bexp:
  1213                           	callstack 0
  1214                           
  1215                           ; 1 bytes @ 0x35
  1216  000036                     	ds	1
  1217  000037                     ___fladd@grs:
  1218                           	callstack 0
  1219                           
  1220                           ; 1 bytes @ 0x36
  1221  000037                     	ds	1
  1222  000038                     ?___fldiv:
  1223                           	callstack 0
  1224  000038                     ?___flsub:
  1225                           	callstack 0
  1226  000038                     ___flge@ff1:
  1227                           	callstack 0
  1228  000038                     ___flsub@b:
  1229                           	callstack 0
  1230  000038                     ___fldiv@b:
  1231                           	callstack 0
  1232                           
  1233                           ; 4 bytes @ 0x37
  1234  000038                     	ds	4
  1235  00003C                     ___flge@ff2:
  1236                           	callstack 0
  1237  00003C                     ___flsub@a:
  1238                           	callstack 0
  1239  00003C                     ___fldiv@a:
  1240                           	callstack 0
  1241                           
  1242                           ; 4 bytes @ 0x3B
  1243  00003C                     	ds	4
  1244  000040                     ??___fldiv:
  1245  000040                     ??___flge:
  1246                           
  1247                           ; 1 bytes @ 0x3F
  1248  000040                     	ds	4
  1249  000044                     ___fldiv@rem:
  1250                           	callstack 0
  1251                           
  1252                           ; 4 bytes @ 0x43
  1253  000044                     	ds	4
  1254  000048                     ___fldiv@sign:
  1255                           	callstack 0
  1256                           
  1257                           ; 1 bytes @ 0x47
  1258  000048                     	ds	1
  1259  000049                     ___fldiv@new_exp:
  1260                           	callstack 0
  1261                           
  1262                           ; 2 bytes @ 0x48
  1263  000049                     	ds	2
  1264  00004B                     ___fldiv@grs:
  1265                           	callstack 0
  1266                           
  1267                           ; 4 bytes @ 0x4A
  1268  00004B                     	ds	4
  1269  00004F                     ___fldiv@bexp:
  1270                           	callstack 0
  1271                           
  1272                           ; 1 bytes @ 0x4E
  1273  00004F                     	ds	1
  1274  000050                     ___fldiv@aexp:
  1275                           	callstack 0
  1276                           
  1277                           ; 1 bytes @ 0x4F
  1278  000050                     	ds	1
  1279  000051                     ?_floorf:
  1280                           	callstack 0
  1281  000051                     ?___fltol:
  1282                           	callstack 0
  1283  000051                     ___fltol@f1:
  1284                           	callstack 0
  1285  000051                     floorf@x:
  1286                           	callstack 0
  1287                           
  1288                           ; 4 bytes @ 0x50
  1289  000051                     	ds	4
  1290  000055                     ??_floorf:
  1291  000055                     ??___fltol:
  1292                           
  1293                           ; 1 bytes @ 0x54
  1294  000055                     	ds	4
  1295  000059                     ___fltol@sign1:
  1296                           	callstack 0
  1297                           
  1298                           ; 1 bytes @ 0x58
  1299  000059                     	ds	1
  1300  00005A                     ___fltol@exp1:
  1301                           	callstack 0
  1302                           
  1303                           ; 1 bytes @ 0x59
  1304  00005A                     	ds	1
  1305  00005B                     floorf@m:
  1306                           	callstack 0
  1307                           
  1308                           ; 4 bytes @ 0x5A
  1309  00005B                     	ds	4
  1310  00005F                     floorf@e:
  1311                           	callstack 0
  1312                           
  1313                           ; 2 bytes @ 0x5E
  1314  00005F                     	ds	2
  1315  000061                     floorf@u:
  1316                           	callstack 0
  1317                           
  1318                           ; 4 bytes @ 0x60
  1319  000061                     	ds	4
  1320  000065                     ?_efgtoa:
  1321                           	callstack 0
  1322  000065                     efgtoa@fp:
  1323                           	callstack 0
  1324                           
  1325                           ; 2 bytes @ 0x64
  1326  000065                     	ds	2
  1327  000067                     efgtoa@f:
  1328                           	callstack 0
  1329                           
  1330                           ; 4 bytes @ 0x66
  1331  000067                     	ds	4
  1332  00006B                     efgtoa@c:
  1333                           	callstack 0
  1334                           
  1335                           ; 1 bytes @ 0x6A
  1336  00006B                     	ds	1
  1337  00006C                     ??_efgtoa:
  1338                           
  1339                           ; 1 bytes @ 0x6B
  1340  00006C                     	ds	5
  1341  000071                     ?_vfpfcnvrt:
  1342                           	callstack 0
  1343  000071                     vfpfcnvrt@fp:
  1344                           	callstack 0
  1345                           
  1346                           ; 2 bytes @ 0x70
  1347  000071                     	ds	2
  1348  000073                     vfpfcnvrt@fmt:
  1349                           	callstack 0
  1350                           
  1351                           ; 2 bytes @ 0x72
  1352  000073                     	ds	2
  1353  000075                     vfpfcnvrt@ap:
  1354                           	callstack 0
  1355                           
  1356                           ; 2 bytes @ 0x74
  1357  000075                     	ds	2
  1358  000077                     ??_vfpfcnvrt:
  1359                           
  1360                           ; 1 bytes @ 0x76
  1361  000077                     	ds	4
  1362  00007B                     vfprintf@cfmt:
  1363                           	callstack 0
  1364                           
  1365                           ; 2 bytes @ 0x7A
  1366  00007B                     	ds	2
  1367  00007D                     encher_tanque@vol:
  1368                           	callstack 0
  1369  00007D                     esvaziar_tanque@vol:
  1370                           	callstack 0
  1371  00007D                     ver_quantidade@vol:
  1372                           	callstack 0
  1373                           
  1374                           ; 2 bytes @ 0x7C
  1375  00007D                     	ds	2
  1376  00007F                     
  1377                           ; 1 bytes @ 0x7E
  1378 ;;
  1379 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1380 ;;
  1381 ;; *************** function _main *****************
  1382 ;; Defined at:
  1383 ;;		line 16 in file "main.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;		None
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;  opt             2  106[BANK0 ] unsigned int 
  1388 ;;  tmp             1  105[BANK0 ] unsigned char 
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  1    wreg      void 
  1391 ;; Registers used:
  1392 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1398 ;;      Params:         0       0       0       0       0       0       0
  1399 ;;      Locals:         0       3       0       0       0       0       0
  1400 ;;      Temps:          0       0       0       0       0       0       0
  1401 ;;      Totals:         0       3       0       0       0       0       0
  1402 ;;Total ram usage:        3 bytes
  1403 ;; Hardware stack levels required when called:    9
  1404 ;; This function calls:
  1405 ;;		_atraso_ms
  1406 ;;		_encher_tanque
  1407 ;;		_esvaziar_tanque
  1408 ;;		_lcd_cmd
  1409 ;;		_lcd_init
  1410 ;;		_lcd_str
  1411 ;;		_tc_tecla
  1412 ;;		_ver_quantidade
  1413 ;; This function is called by:
  1414 ;;		Startup code after reset
  1415 ;; This function uses a non-reentrant model
  1416 ;;
  1417                           
  1418                           	psect	text0
  1419  0051E4                     __ptext0:
  1420                           	callstack 0
  1421  0051E4                     _main:
  1422                           	callstack 22
  1423  0051E4                     
  1424                           ;main.c: 18:     (*(volatile __near unsigned char*)0xFC1) = 0x06;
  1425  0051E4  0E06               	movlw	6
  1426  0051E6  6EC1               	movwf	193,c	;volatile
  1427                           
  1428                           ;main.c: 19:     (*(volatile __near unsigned char*)0xF93) = 0x01;
  1429  0051E8  0E01               	movlw	1
  1430  0051EA  6E93               	movwf	147,c	;volatile
  1431                           
  1432                           ;main.c: 20:     (*(volatile __near unsigned char*)0xF95) = 0x00;
  1433  0051EC  0E00               	movlw	0
  1434  0051EE  6E95               	movwf	149,c	;volatile
  1435                           
  1436                           ;main.c: 21:     (*(volatile __near unsigned char*)0xF96) = 0x00;
  1437  0051F0  0E00               	movlw	0
  1438  0051F2  6E96               	movwf	150,c	;volatile
  1439  0051F4                     
  1440                           ;main.c: 22:     lcd_init();
  1441  0051F4  EC1B  F023         	call	_lcd_init	;wreg free
  1442  0051F8                     
  1443                           ;main.c: 25:     lcd_cmd(0x01);
  1444  0051F8  0E01               	movlw	1
  1445  0051FA  ECA7  F021         	call	_lcd_cmd
  1446  0051FE                     
  1447                           ;main.c: 26:     lcd_cmd(0x80);
  1448  0051FE  0E80               	movlw	128
  1449  005200  ECA7  F021         	call	_lcd_cmd
  1450  005204                     
  1451                           ;main.c: 27:     lcd_str("Abastecimento de");
  1452  005204  0EFF               	movlw	low STR_1
  1453  005206  6E08               	movwf	lcd_str@str^0,c
  1454  005208  0E7E               	movlw	high STR_1
  1455  00520A  6E09               	movwf	(lcd_str@str+1)^0,c
  1456  00520C  EC7D  F024         	call	_lcd_str	;wreg free
  1457  005210                     
  1458                           ;main.c: 28:     lcd_cmd(0xC0);
  1459  005210  0EC0               	movlw	192
  1460  005212  ECA7  F021         	call	_lcd_cmd
  1461  005216                     
  1462                           ;main.c: 29:     lcd_str("      agua");
  1463  005216  0EBD               	movlw	low STR_2
  1464  005218  6E08               	movwf	lcd_str@str^0,c
  1465  00521A  0E7F               	movlw	high STR_2
  1466  00521C  6E09               	movwf	(lcd_str@str+1)^0,c
  1467  00521E  EC7D  F024         	call	_lcd_str	;wreg free
  1468  005222                     
  1469                           ;main.c: 30:     atraso_ms(atrasoMin);
  1470  005222  0E00               	movlw	0
  1471  005224  6E02               	movwf	(atraso_ms@t+1)^0,c
  1472  005226  0E14               	movlw	20
  1473  005228  6E01               	movwf	atraso_ms@t^0,c
  1474  00522A  ECDB  F023         	call	_atraso_ms	;wreg free
  1475  00522E                     
  1476                           ;main.c: 31:     lcd_cmd(0x01);
  1477  00522E  0E01               	movlw	1
  1478  005230  ECA7  F021         	call	_lcd_cmd
  1479  005234                     
  1480                           ;main.c: 34:     lcd_cmd(0x80);
  1481  005234  0E80               	movlw	128
  1482  005236  ECA7  F021         	call	_lcd_cmd
  1483  00523A                     
  1484                           ;main.c: 35:     lcd_str("Vol max = 70L");
  1485  00523A  0E68               	movlw	low STR_3
  1486  00523C  6E08               	movwf	lcd_str@str^0,c
  1487  00523E  0E7F               	movlw	high STR_3
  1488  005240  6E09               	movwf	(lcd_str@str+1)^0,c
  1489  005242  EC7D  F024         	call	_lcd_str	;wreg free
  1490  005246                     
  1491                           ;main.c: 36:     lcd_cmd(0xC0);
  1492  005246  0EC0               	movlw	192
  1493  005248  ECA7  F021         	call	_lcd_cmd
  1494  00524C                     
  1495                           ;main.c: 37:     lcd_str("Vazao: 0.5 L/s");
  1496  00524C  0E2F               	movlw	low STR_4
  1497  00524E  6E08               	movwf	lcd_str@str^0,c
  1498  005250  0E7F               	movlw	high STR_4
  1499  005252  6E09               	movwf	(lcd_str@str+1)^0,c
  1500  005254  EC7D  F024         	call	_lcd_str	;wreg free
  1501  005258                     
  1502                           ;main.c: 38:     atraso_ms(atrasoMin);
  1503  005258  0E00               	movlw	0
  1504  00525A  6E02               	movwf	(atraso_ms@t+1)^0,c
  1505  00525C  0E14               	movlw	20
  1506  00525E  6E01               	movwf	atraso_ms@t^0,c
  1507  005260  ECDB  F023         	call	_atraso_ms	;wreg free
  1508  005264                     
  1509                           ;main.c: 39:     lcd_cmd(0x01);
  1510  005264  0E01               	movlw	1
  1511  005266  ECA7  F021         	call	_lcd_cmd
  1512  00526A                     l4880:
  1513                           
  1514                           ;main.c: 43:         lcd_cmd(0x01);
  1515  00526A  0E01               	movlw	1
  1516  00526C  ECA7  F021         	call	_lcd_cmd
  1517  005270                     
  1518                           ;main.c: 44:         lcd_cmd(0x80);
  1519  005270  0E80               	movlw	128
  1520  005272  ECA7  F021         	call	_lcd_cmd
  1521  005276                     
  1522                           ;main.c: 45:         lcd_str("1-Ver 2-Encher");
  1523  005276  0E20               	movlw	low STR_5
  1524  005278  6E08               	movwf	lcd_str@str^0,c
  1525  00527A  0E7F               	movlw	high STR_5
  1526  00527C  6E09               	movwf	(lcd_str@str+1)^0,c
  1527  00527E  EC7D  F024         	call	_lcd_str	;wreg free
  1528  005282                     
  1529                           ;main.c: 46:         lcd_cmd(0xC0);
  1530  005282  0EC0               	movlw	192
  1531  005284  ECA7  F021         	call	_lcd_cmd
  1532  005288                     
  1533                           ;main.c: 47:         lcd_str("3-Retirar");
  1534  005288  0EC8               	movlw	low STR_6
  1535  00528A  6E08               	movwf	lcd_str@str^0,c
  1536  00528C  0E7F               	movlw	high STR_6
  1537  00528E  6E09               	movwf	(lcd_str@str+1)^0,c
  1538  005290  EC7D  F024         	call	_lcd_str	;wreg free
  1539  005294                     
  1540                           ;main.c: 49:         unsigned int opt;;main.c: 50:         unsigned char tmp;;main.c: 52
      +                          :         (*(volatile __near unsigned char*)0xF93) = 0xF8;
  1541  005294  0EF8               	movlw	248
  1542  005296  6E93               	movwf	147,c	;volatile
  1543  005298                     
  1544                           ;main.c: 55:             (*(volatile __near unsigned char*)0xF95) = 0x0F;
  1545  005298  0E0F               	movlw	15
  1546  00529A  6E95               	movwf	149,c	;volatile
  1547  00529C                     
  1548                           ;main.c: 56:             tmp = tc_tecla(0) + 0x30;
  1549  00529C  0E00               	movlw	0
  1550  00529E  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  1551  0052A0  0E00               	movlw	0
  1552  0052A2  6E07               	movwf	tc_tecla@timeout^0,c
  1553  0052A4  EC4E  F02B         	call	_tc_tecla	;wreg free
  1554  0052A8  0F30               	addlw	48
  1555  0052AA  0100               	movlb	0	; () banked
  1556  0052AC  6FE9               	movwf	main@tmp& (0+255),b
  1557  0052AE                     
  1558                           ; BSR set to: 0
  1559                           ;main.c: 57:             (*(volatile __near unsigned char*)0xF95) = 0x00;
  1560  0052AE  0E00               	movlw	0
  1561  0052B0  6E95               	movwf	149,c	;volatile
  1562  0052B2                     
  1563                           ; BSR set to: 0
  1564                           ;main.c: 58:             opt = (tmp - '0');
  1565  0052B2  0ED0               	movlw	208
  1566  0052B4  25E9               	addwf	main@tmp& (0+255),w,b
  1567  0052B6  6FEA               	movwf	main@opt& (0+255),b
  1568  0052B8  6BEB               	clrf	(main@opt+1)& (0+255),b
  1569  0052BA  0EFF               	movlw	255
  1570  0052BC  23EB               	addwfc	(main@opt+1)& (0+255),f,b
  1571  0052BE                     
  1572                           ; BSR set to: 0
  1573                           ;main.c: 59:             if (opt == 0) {
  1574  0052BE  51EA               	movf	main@opt& (0+255),w,b
  1575  0052C0  11EB               	iorwf	(main@opt+1)& (0+255),w,b
  1576  0052C2  A4D8               	btfss	status,2,c
  1577  0052C4  EF66  F029         	goto	u5631
  1578  0052C8  EF68  F029         	goto	u5630
  1579  0052CC                     u5631:
  1580  0052CC  EF6A  F029         	goto	l4906
  1581  0052D0                     u5630:
  1582  0052D0  EF35  F029         	goto	l4880
  1583  0052D4                     l4906:
  1584                           
  1585                           ; BSR set to: 0
  1586  0052D4  05EA               	decf	main@opt& (0+255),w,b
  1587  0052D6  11EB               	iorwf	(main@opt+1)& (0+255),w,b
  1588  0052D8  A4D8               	btfss	status,2,c
  1589  0052DA  EF71  F029         	goto	u5641
  1590  0052DE  EF73  F029         	goto	u5640
  1591  0052E2                     u5641:
  1592  0052E2  EF7B  F029         	goto	l4912
  1593  0052E6                     u5640:
  1594  0052E6                     
  1595                           ; BSR set to: 0
  1596                           ;main.c: 62:                 ver_quantidade(&volume);
  1597  0052E6  0EF6               	movlw	low _volume
  1598  0052E8  6E7D               	movwf	ver_quantidade@vol^0,c
  1599  0052EA  0E00               	movlw	high _volume
  1600  0052EC  6E7E               	movwf	(ver_quantidade@vol+1)^0,c
  1601  0052EE  ECFB  F026         	call	_ver_quantidade	;wreg free
  1602                           
  1603                           ;main.c: 63:                 break;
  1604  0052F2  EF35  F029         	goto	l4880
  1605  0052F6                     l4912:
  1606                           
  1607                           ; BSR set to: 0
  1608  0052F6  0E02               	movlw	2
  1609  0052F8  19EA               	xorwf	main@opt& (0+255),w,b
  1610  0052FA  11EB               	iorwf	(main@opt+1)& (0+255),w,b
  1611  0052FC  A4D8               	btfss	status,2,c
  1612  0052FE  EF83  F029         	goto	u5651
  1613  005302  EF85  F029         	goto	u5650
  1614  005306                     u5651:
  1615  005306  EF8D  F029         	goto	l4918
  1616  00530A                     u5650:
  1617  00530A                     
  1618                           ; BSR set to: 0
  1619                           ;main.c: 65:                 encher_tanque(&volume);
  1620  00530A  0EF6               	movlw	low _volume
  1621  00530C  6E7D               	movwf	encher_tanque@vol^0,c
  1622  00530E  0E00               	movlw	high _volume
  1623  005310  6E7E               	movwf	(encher_tanque@vol+1)^0,c
  1624  005312  ECED  F036         	call	_encher_tanque	;wreg free
  1625                           
  1626                           ;main.c: 66:                 break;
  1627  005316  EF35  F029         	goto	l4880
  1628  00531A                     l4918:
  1629                           
  1630                           ; BSR set to: 0
  1631  00531A  0E03               	movlw	3
  1632  00531C  19EA               	xorwf	main@opt& (0+255),w,b
  1633  00531E  11EB               	iorwf	(main@opt+1)& (0+255),w,b
  1634  005320  A4D8               	btfss	status,2,c
  1635  005322  EF95  F029         	goto	u5661
  1636  005326  EF97  F029         	goto	u5660
  1637  00532A                     u5661:
  1638  00532A  EF9F  F029         	goto	l4924
  1639  00532E                     u5660:
  1640  00532E                     
  1641                           ; BSR set to: 0
  1642                           ;main.c: 68:                 esvaziar_tanque(&volume);
  1643  00532E  0EF6               	movlw	low _volume
  1644  005330  6E7D               	movwf	esvaziar_tanque@vol^0,c
  1645  005332  0E00               	movlw	high _volume
  1646  005334  6E7E               	movwf	(esvaziar_tanque@vol+1)^0,c
  1647  005336  EC3C  F02D         	call	_esvaziar_tanque	;wreg free
  1648                           
  1649                           ;main.c: 69:                 break;
  1650  00533A  EF35  F029         	goto	l4880
  1651  00533E                     l4924:
  1652                           
  1653                           ; BSR set to: 0
  1654                           ;main.c: 71:                 lcd_cmd(0x01);
  1655  00533E  0E01               	movlw	1
  1656  005340  ECA7  F021         	call	_lcd_cmd
  1657  005344                     
  1658                           ;main.c: 72:                 lcd_str("    INVALIDO!");
  1659  005344  0E5A               	movlw	low STR_7
  1660  005346  6E08               	movwf	lcd_str@str^0,c
  1661  005348  0E7F               	movlw	high STR_7
  1662  00534A  6E09               	movwf	(lcd_str@str+1)^0,c
  1663  00534C  EC7D  F024         	call	_lcd_str	;wreg free
  1664                           
  1665                           ;main.c: 73:                 break;
  1666  005350  EF35  F029         	goto	l4880
  1667  005354  EF00  F000         	goto	start
  1668  005358                     __end_of_main:
  1669                           	callstack 0
  1670                           
  1671 ;; *************** function _ver_quantidade *****************
  1672 ;; Defined at:
  1673 ;;		line 8 in file "ver.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;  vol             2  124[COMRAM] PTR 
  1676 ;;		 -> volume(4), 
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;  y               8   92[BANK0 ] unsigned char [8]
  1679 ;;  i               2  103[BANK0 ] int 
  1680 ;;  num             2  100[BANK0 ] unsigned int 
  1681 ;;  tmp             1  102[BANK0 ] unsigned char 
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  1    wreg      void 
  1684 ;; Registers used:
  1685 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1691 ;;      Params:         2       0       0       0       0       0       0
  1692 ;;      Locals:         0      13       0       0       0       0       0
  1693 ;;      Temps:          0       0       0       0       0       0       0
  1694 ;;      Totals:         2      13       0       0       0       0       0
  1695 ;;Total ram usage:       15 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; Hardware stack levels required when called:    8
  1698 ;; This function calls:
  1699 ;;		_lcd_cmd
  1700 ;;		_lcd_str
  1701 ;;		_sprintf
  1702 ;;		_tc_tecla
  1703 ;; This function is called by:
  1704 ;;		_main
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708                           	psect	text1
  1709  004DF6                     __ptext1:
  1710                           	callstack 0
  1711  004DF6                     _ver_quantidade:
  1712                           	callstack 22
  1713  004DF6                     
  1714                           ;ver.c: 10:     int i;;ver.c: 11:     char y[8];;ver.c: 12:     sprintf(y, "%.1f", *vol)
      +                          ;
  1715  004DF6  0EDC               	movlw	low ver_quantidade@y
  1716  004DF8  0100               	movlb	0	; () banked
  1717  004DFA  6FCA               	movwf	sprintf@s& (0+255),b
  1718  004DFC  0E00               	movlw	high ver_quantidade@y
  1719  004DFE  6FCB               	movwf	(sprintf@s+1)& (0+255),b
  1720  004E00  0EE3               	movlw	low STR_12
  1721  004E02  6FCC               	movwf	sprintf@fmt& (0+255),b
  1722  004E04  0E7F               	movlw	high STR_12
  1723  004E06  6FCD               	movwf	(sprintf@fmt+1)& (0+255),b
  1724  004E08  C07D  FFD9         	movff	ver_quantidade@vol,fsr2l
  1725  004E0C  C07E  FFDA         	movff	ver_quantidade@vol+1,fsr2h
  1726  004E10  CFDE F0CE          	movff	postinc2,?_sprintf+4
  1727  004E14  CFDE F0CF          	movff	postinc2,?_sprintf+5
  1728  004E18  CFDE F0D0          	movff	postinc2,?_sprintf+6
  1729  004E1C  CFDE F0D1          	movff	postinc2,?_sprintf+7
  1730  004E20  ECC4  F022         	call	_sprintf	;wreg free
  1731  004E24                     
  1732                           ;ver.c: 14:     lcd_cmd(0x01);
  1733  004E24  0E01               	movlw	1
  1734  004E26  ECA7  F021         	call	_lcd_cmd
  1735  004E2A                     
  1736                           ;ver.c: 15:     lcd_cmd(0x80);
  1737  004E2A  0E80               	movlw	128
  1738  004E2C  ECA7  F021         	call	_lcd_cmd
  1739  004E30                     
  1740                           ;ver.c: 16:     lcd_str("Atual: ");
  1741  004E30  0EDB               	movlw	low STR_29
  1742  004E32  6E08               	movwf	lcd_str@str^0,c
  1743  004E34  0E7F               	movlw	high STR_29
  1744  004E36  6E09               	movwf	(lcd_str@str+1)^0,c
  1745  004E38  EC7D  F024         	call	_lcd_str	;wreg free
  1746  004E3C                     
  1747                           ;ver.c: 17:     lcd_str(y);
  1748  004E3C  0EDC               	movlw	low ver_quantidade@y
  1749  004E3E  6E08               	movwf	lcd_str@str^0,c
  1750  004E40  0E00               	movlw	high ver_quantidade@y
  1751  004E42  6E09               	movwf	(lcd_str@str+1)^0,c
  1752  004E44  EC7D  F024         	call	_lcd_str	;wreg free
  1753  004E48                     
  1754                           ;ver.c: 18:     lcd_str(" L");
  1755  004E48  0EFB               	movlw	low STR_13
  1756  004E4A  6E08               	movwf	lcd_str@str^0,c
  1757  004E4C  0E7F               	movlw	high STR_13
  1758  004E4E  6E09               	movwf	(lcd_str@str+1)^0,c
  1759  004E50  EC7D  F024         	call	_lcd_str	;wreg free
  1760  004E54                     
  1761                           ;ver.c: 19:     lcd_cmd(0xC0);
  1762  004E54  0EC0               	movlw	192
  1763  004E56  ECA7  F021         	call	_lcd_cmd
  1764  004E5A                     
  1765                           ;ver.c: 20:     lcd_str("0-Voltar");
  1766  004E5A  0E87               	movlw	low (STR_17+4)
  1767  004E5C  6E08               	movwf	lcd_str@str^0,c
  1768  004E5E  0E7F               	movlw	high (STR_17+4)
  1769  004E60  6E09               	movwf	(lcd_str@str+1)^0,c
  1770  004E62  EC7D  F024         	call	_lcd_str	;wreg free
  1771  004E66                     
  1772                           ;ver.c: 21:     lcd_cmd(0xC0);
  1773  004E66  0EC0               	movlw	192
  1774  004E68  ECA7  F021         	call	_lcd_cmd
  1775  004E6C                     
  1776                           ;ver.c: 23:     for (i = 0; i < 7; i++) {
  1777  004E6C  0E00               	movlw	0
  1778  004E6E  0100               	movlb	0	; () banked
  1779  004E70  6FE8               	movwf	(ver_quantidade@i+1)& (0+255),b
  1780  004E72  0E00               	movlw	0
  1781  004E74  6FE7               	movwf	ver_quantidade@i& (0+255),b
  1782  004E76                     l4588:
  1783                           
  1784                           ; BSR set to: 0
  1785                           ;ver.c: 24:         lcd_cmd(0x10);
  1786  004E76  0E10               	movlw	16
  1787  004E78  ECA7  F021         	call	_lcd_cmd
  1788  004E7C                     
  1789                           ;ver.c: 25:     }
  1790  004E7C  0100               	movlb	0	; () banked
  1791  004E7E  4BE7               	infsnz	ver_quantidade@i& (0+255),f,b
  1792  004E80  2BE8               	incf	(ver_quantidade@i+1)& (0+255),f,b
  1793  004E82                     
  1794                           ; BSR set to: 0
  1795  004E82  BFE8               	btfsc	(ver_quantidade@i+1)& (0+255),7,b
  1796  004E84  EF4D  F027         	goto	u5471
  1797  004E88  51E8               	movf	(ver_quantidade@i+1)& (0+255),w,b
  1798  004E8A  E109               	bnz	u5470
  1799  004E8C  0E07               	movlw	7
  1800  004E8E  5DE7               	subwf	ver_quantidade@i& (0+255),w,b
  1801  004E90  A0D8               	btfss	status,0,c
  1802  004E92  EF4D  F027         	goto	u5471
  1803  004E96  EF4F  F027         	goto	u5470
  1804  004E9A                     u5471:
  1805  004E9A  EF3B  F027         	goto	l4588
  1806  004E9E                     u5470:
  1807  004E9E                     
  1808                           ; BSR set to: 0
  1809                           ;ver.c: 32:     unsigned int num;;ver.c: 33:     unsigned char tmp;;ver.c: 35:     (*(vo
      +                          latile __near unsigned char*)0xF93) = 0xF8;
  1810  004E9E  0EF8               	movlw	248
  1811  004EA0  6E93               	movwf	147,c	;volatile
  1812  004EA2                     l205:
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;ver.c: 38:         (*(volatile __near unsigned char*)0xF95) = 0x0F;
  1816  004EA2  0E0F               	movlw	15
  1817  004EA4  6E95               	movwf	149,c	;volatile
  1818  004EA6                     
  1819                           ; BSR set to: 0
  1820                           ;ver.c: 39:         tmp = tc_tecla(0) + 0x30;
  1821  004EA6  0E00               	movlw	0
  1822  004EA8  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  1823  004EAA  0E00               	movlw	0
  1824  004EAC  6E07               	movwf	tc_tecla@timeout^0,c
  1825  004EAE  EC4E  F02B         	call	_tc_tecla	;wreg free
  1826  004EB2  0F30               	addlw	48
  1827  004EB4  0100               	movlb	0	; () banked
  1828  004EB6  6FE6               	movwf	ver_quantidade@tmp& (0+255),b
  1829  004EB8                     
  1830                           ; BSR set to: 0
  1831                           ;ver.c: 40:         (*(volatile __near unsigned char*)0xF95) = 0x00;
  1832  004EB8  0E00               	movlw	0
  1833  004EBA  6E95               	movwf	149,c	;volatile
  1834  004EBC                     
  1835                           ; BSR set to: 0
  1836                           ;ver.c: 41:         num = (tmp - '0');
  1837  004EBC  0ED0               	movlw	208
  1838  004EBE  25E6               	addwf	ver_quantidade@tmp& (0+255),w,b
  1839  004EC0  6FE4               	movwf	ver_quantidade@num& (0+255),b
  1840  004EC2  6BE5               	clrf	(ver_quantidade@num+1)& (0+255),b
  1841  004EC4  0EFF               	movlw	255
  1842  004EC6  23E5               	addwfc	(ver_quantidade@num+1)& (0+255),f,b
  1843  004EC8                     
  1844                           ; BSR set to: 0
  1845                           ;ver.c: 42:         if (num == 0) {
  1846  004EC8  51E4               	movf	ver_quantidade@num& (0+255),w,b
  1847  004ECA  11E5               	iorwf	(ver_quantidade@num+1)& (0+255),w,b
  1848  004ECC  A4D8               	btfss	status,2,c
  1849  004ECE  EF6B  F027         	goto	u5481
  1850  004ED2  EF6D  F027         	goto	u5480
  1851  004ED6                     u5481:
  1852  004ED6  EF51  F027         	goto	l205
  1853  004EDA                     u5480:
  1854  004EDA                     
  1855                           ; BSR set to: 0
  1856  004EDA  0012               	return		;funcret
  1857  004EDC                     __end_of_ver_quantidade:
  1858                           	callstack 0
  1859                           
  1860 ;; *************** function _lcd_init *****************
  1861 ;; Defined at:
  1862 ;;		line 29 in file "lcd.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;		None
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;		None
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      void 
  1869 ;; Registers used:
  1870 ;;		wreg, status,2, status,0, cstack
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1876 ;;      Params:         0       0       0       0       0       0       0
  1877 ;;      Locals:         0       0       0       0       0       0       0
  1878 ;;      Temps:          0       0       0       0       0       0       0
  1879 ;;      Totals:         0       0       0       0       0       0       0
  1880 ;;Total ram usage:        0 bytes
  1881 ;; Hardware stack levels used:    1
  1882 ;; Hardware stack levels required when called:    2
  1883 ;; This function calls:
  1884 ;;		_atraso_ms
  1885 ;;		_lcd_cmd
  1886 ;; This function is called by:
  1887 ;;		_main
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           
  1891                           	psect	text2
  1892  004636                     __ptext2:
  1893                           	callstack 0
  1894  004636                     _lcd_init:
  1895                           	callstack 28
  1896  004636                     
  1897                           ;lcd.c: 30:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  1898  004636  9284               	bcf	132,1,c	;volatile
  1899                           
  1900                           ;lcd.c: 31:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<2));
  1901  004638  9484               	bcf	132,2,c	;volatile
  1902  00463A                     
  1903                           ;lcd.c: 32:     atraso_ms(20);
  1904  00463A  0E00               	movlw	0
  1905  00463C  6E02               	movwf	(atraso_ms@t+1)^0,c
  1906  00463E  0E14               	movlw	20
  1907  004640  6E01               	movwf	atraso_ms@t^0,c
  1908  004642  ECDB  F023         	call	_atraso_ms	;wreg free
  1909  004646                     
  1910                           ;lcd.c: 33:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  1911  004646  8284               	bsf	132,1,c	;volatile
  1912                           
  1913                           ;lcd.c: 35:     lcd_cmd(0x38);
  1914  004648  0E38               	movlw	56
  1915  00464A  ECA7  F021         	call	_lcd_cmd
  1916                           
  1917                           ;lcd.c: 36:     atraso_ms(5);
  1918  00464E  0E00               	movlw	0
  1919  004650  6E02               	movwf	(atraso_ms@t+1)^0,c
  1920  004652  0E05               	movlw	5
  1921  004654  6E01               	movwf	atraso_ms@t^0,c
  1922  004656  ECDB  F023         	call	_atraso_ms	;wreg free
  1923                           
  1924                           ;lcd.c: 37:     lcd_cmd(0x38);
  1925  00465A  0E38               	movlw	56
  1926  00465C  ECA7  F021         	call	_lcd_cmd
  1927                           
  1928                           ;lcd.c: 38:     atraso_ms(1);
  1929  004660  0E00               	movlw	0
  1930  004662  6E02               	movwf	(atraso_ms@t+1)^0,c
  1931  004664  0E01               	movlw	1
  1932  004666  6E01               	movwf	atraso_ms@t^0,c
  1933  004668  ECDB  F023         	call	_atraso_ms	;wreg free
  1934                           
  1935                           ;lcd.c: 39:     lcd_cmd(0x38);
  1936  00466C  0E38               	movlw	56
  1937  00466E  ECA7  F021         	call	_lcd_cmd
  1938                           
  1939                           ;lcd.c: 40:     lcd_cmd(0x08);
  1940  004672  0E08               	movlw	8
  1941  004674  ECA7  F021         	call	_lcd_cmd
  1942                           
  1943                           ;lcd.c: 41:     lcd_cmd(0x0F);
  1944  004678  0E0F               	movlw	15
  1945  00467A  ECA7  F021         	call	_lcd_cmd
  1946                           
  1947                           ;lcd.c: 42:     lcd_cmd(0x01);
  1948  00467E  0E01               	movlw	1
  1949  004680  ECA7  F021         	call	_lcd_cmd
  1950                           
  1951                           ;lcd.c: 43:     lcd_cmd(0x38);
  1952  004684  0E38               	movlw	56
  1953  004686  ECA7  F021         	call	_lcd_cmd
  1954                           
  1955                           ;lcd.c: 44:     lcd_cmd(0x80);
  1956  00468A  0E80               	movlw	128
  1957  00468C  ECA7  F021         	call	_lcd_cmd
  1958  004690  0012               	return		;funcret
  1959  004692                     __end_of_lcd_init:
  1960                           	callstack 0
  1961                           
  1962 ;; *************** function _esvaziar_tanque *****************
  1963 ;; Defined at:
  1964 ;;		line 8 in file "esvaziar.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  vol             2  124[COMRAM] PTR 
  1967 ;;		 -> volume(4), 
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;  numeros        20    0[BANK1 ] int [10]
  1970 ;;  y               8   20[BANK1 ] unsigned char [8]
  1971 ;;  i               2   37[BANK1 ] int 
  1972 ;;  tempo           2   28[BANK1 ] int 
  1973 ;;  decremento      4   33[BANK1 ] int 
  1974 ;;  opt             2   30[BANK1 ] unsigned int 
  1975 ;;  tmp             1   32[BANK1 ] unsigned char 
  1976 ;; Return value:  Size  Location     Type
  1977 ;;                  1    wreg      void 
  1978 ;; Registers used:
  1979 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1985 ;;      Params:         2       0       0       0       0       0       0
  1986 ;;      Locals:         0       0      39       0       0       0       0
  1987 ;;      Temps:          0       0       0       0       0       0       0
  1988 ;;      Totals:         2       0      39       0       0       0       0
  1989 ;;Total ram usage:       41 bytes
  1990 ;; Hardware stack levels used:    1
  1991 ;; Hardware stack levels required when called:    8
  1992 ;; This function calls:
  1993 ;;		___fldiv
  1994 ;;		___flsub
  1995 ;;		___fltol
  1996 ;;		_atraso_ms
  1997 ;;		_lcd_cmd
  1998 ;;		_lcd_str
  1999 ;;		_sprintf
  2000 ;;		_tc_tecla
  2001 ;; This function is called by:
  2002 ;;		_main
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           	psect	text3
  2007  005A78                     __ptext3:
  2008                           	callstack 0
  2009  005A78                     _esvaziar_tanque:
  2010                           	callstack 22
  2011  005A78                     
  2012                           ;esvaziar.c: 11:     lcd_cmd(0x01);
  2013  005A78  0E01               	movlw	1
  2014  005A7A  ECA7  F021         	call	_lcd_cmd
  2015                           
  2016                           ;esvaziar.c: 12:     lcd_cmd(0x80);
  2017  005A7E  0E80               	movlw	128
  2018  005A80  ECA7  F021         	call	_lcd_cmd
  2019  005A84                     
  2020                           ;esvaziar.c: 13:     lcd_str("Quant(L): ");
  2021  005A84  0E9C               	movlw	low STR_8
  2022  005A86  6E08               	movwf	lcd_str@str^0,c
  2023  005A88  0E7F               	movlw	high STR_8
  2024  005A8A  6E09               	movwf	(lcd_str@str+1)^0,c
  2025  005A8C  EC7D  F024         	call	_lcd_str	;wreg free
  2026  005A90                     
  2027                           ;esvaziar.c: 14:     lcd_cmd(0xC0);
  2028  005A90  0EC0               	movlw	192
  2029  005A92  ECA7  F021         	call	_lcd_cmd
  2030                           
  2031                           ;esvaziar.c: 15:     lcd_str("RB1-voltar");
  2032  005A96  0EB2               	movlw	low STR_9
  2033  005A98  6E08               	movwf	lcd_str@str^0,c
  2034  005A9A  0E7F               	movlw	high STR_9
  2035  005A9C  6E09               	movwf	(lcd_str@str+1)^0,c
  2036  005A9E  EC7D  F024         	call	_lcd_str	;wreg free
  2037  005AA2                     
  2038                           ;esvaziar.c: 16:     lcd_cmd(0x80 +10);
  2039  005AA2  0E8A               	movlw	138
  2040  005AA4  ECA7  F021         	call	_lcd_cmd
  2041  005AA8                     
  2042                           ;esvaziar.c: 17:     atraso_ms(1000);
  2043  005AA8  0E03               	movlw	3
  2044  005AAA  6E02               	movwf	(atraso_ms@t+1)^0,c
  2045  005AAC  0EE8               	movlw	232
  2046  005AAE  6E01               	movwf	atraso_ms@t^0,c
  2047  005AB0  ECDB  F023         	call	_atraso_ms	;wreg free
  2048  005AB4                     
  2049                           ;esvaziar.c: 19:     double decremento = 5;
  2050  005AB4  0E00               	movlw	0
  2051  005AB6  0101               	movlb	1	; () banked
  2052  005AB8  6F79               	movwf	esvaziar_tanque@decremento& (0+255),b
  2053  005ABA  0E00               	movlw	0
  2054  005ABC  6F7A               	movwf	(esvaziar_tanque@decremento+1)& (0+255),b
  2055  005ABE  0EA0               	movlw	160
  2056  005AC0  6F7B               	movwf	(esvaziar_tanque@decremento+2)& (0+255),b
  2057  005AC2  0E40               	movlw	64
  2058  005AC4  6F7C               	movwf	(esvaziar_tanque@decremento+3)& (0+255),b
  2059  005AC6                     
  2060                           ; BSR set to: 1
  2061                           ;esvaziar.c: 21:     if (*vol - decremento < 0) {
  2062  005AC6  C07D  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  2063  005ACA  C07E  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  2064  005ACE  CFDE F038          	movff	postinc2,___flsub@b
  2065  005AD2  CFDE F039          	movff	postinc2,___flsub@b+1
  2066  005AD6  CFDE F03A          	movff	postinc2,___flsub@b+2
  2067  005ADA  CFDE F03B          	movff	postinc2,___flsub@b+3
  2068  005ADE  C179  F03C         	movff	esvaziar_tanque@decremento,___flsub@a
  2069  005AE2  C17A  F03D         	movff	esvaziar_tanque@decremento+1,___flsub@a+1
  2070  005AE6  C17B  F03E         	movff	esvaziar_tanque@decremento+2,___flsub@a+2
  2071  005AEA  C17C  F03F         	movff	esvaziar_tanque@decremento+3,___flsub@a+3
  2072  005AEE  EC78  F022         	call	___flsub	;wreg free
  2073  005AF2  BE3B               	btfsc	(?___flsub+3)^0,7,c
  2074  005AF4  EF80  F02D         	goto	u5590
  2075  005AF8  EF7E  F02D         	goto	u5591
  2076  005AFC                     u5591:
  2077  005AFC  EF97  F02D         	goto	l4786
  2078  005B00                     u5590:
  2079  005B00                     
  2080                           ;esvaziar.c: 24:         lcd_cmd(0x01);
  2081  005B00  0E01               	movlw	1
  2082  005B02  ECA7  F021         	call	_lcd_cmd
  2083                           
  2084                           ;esvaziar.c: 25:         lcd_cmd(0x80);
  2085  005B06  0E80               	movlw	128
  2086  005B08  ECA7  F021         	call	_lcd_cmd
  2087  005B0C                     
  2088                           ;esvaziar.c: 26:         lcd_str("ERRO: vol < 0");
  2089  005B0C  0E4C               	movlw	low STR_20
  2090  005B0E  6E08               	movwf	lcd_str@str^0,c
  2091  005B10  0E7F               	movlw	high STR_20
  2092  005B12  6E09               	movwf	(lcd_str@str+1)^0,c
  2093  005B14  EC7D  F024         	call	_lcd_str	;wreg free
  2094  005B18                     
  2095                           ;esvaziar.c: 27:         lcd_cmd(0xC0);
  2096  005B18  0EC0               	movlw	192
  2097  005B1A  ECA7  F021         	call	_lcd_cmd
  2098                           
  2099                           ;esvaziar.c: 28:         lcd_str("RB1-Voltar");
  2100  005B1E  0EA7               	movlw	low STR_11
  2101  005B20  6E08               	movwf	lcd_str@str^0,c
  2102  005B22  0E7F               	movlw	high STR_11
  2103  005B24  6E09               	movwf	(lcd_str@str+1)^0,c
  2104  005B26  EC7D  F024         	call	_lcd_str	;wreg free
  2105                           
  2106                           ;esvaziar.c: 34:     } else {
  2107  005B2A  EF57  F02E         	goto	l4836
  2108  005B2E                     l4786:
  2109                           
  2110                           ;esvaziar.c: 36:         *vol -= decremento;
  2111  005B2E  C07D  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  2112  005B32  C07E  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  2113  005B36  CFDE F038          	movff	postinc2,___flsub@b
  2114  005B3A  CFDE F039          	movff	postinc2,___flsub@b+1
  2115  005B3E  CFDE F03A          	movff	postinc2,___flsub@b+2
  2116  005B42  CFDE F03B          	movff	postinc2,___flsub@b+3
  2117  005B46  C179  F03C         	movff	esvaziar_tanque@decremento,___flsub@a
  2118  005B4A  C17A  F03D         	movff	esvaziar_tanque@decremento+1,___flsub@a+1
  2119  005B4E  C17B  F03E         	movff	esvaziar_tanque@decremento+2,___flsub@a+2
  2120  005B52  C17C  F03F         	movff	esvaziar_tanque@decremento+3,___flsub@a+3
  2121  005B56  EC78  F022         	call	___flsub	;wreg free
  2122  005B5A  C07D  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  2123  005B5E  C07E  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  2124  005B62  C038  FFDE         	movff	?___flsub,postinc2
  2125  005B66  C039  FFDE         	movff	?___flsub+1,postinc2
  2126  005B6A  C03A  FFDE         	movff	?___flsub+2,postinc2
  2127  005B6E  C03B  FFDE         	movff	?___flsub+3,postinc2
  2128  005B72                     
  2129                           ;esvaziar.c: 37:         char y[8];;esvaziar.c: 38:         sprintf(y, "%.1f", *vol);
  2130  005B72  0E6C               	movlw	low esvaziar_tanque@y
  2131  005B74  0100               	movlb	0	; () banked
  2132  005B76  6FCA               	movwf	sprintf@s& (0+255),b
  2133  005B78  0E01               	movlw	high esvaziar_tanque@y
  2134  005B7A  6FCB               	movwf	(sprintf@s+1)& (0+255),b
  2135  005B7C  0EE3               	movlw	low STR_12
  2136  005B7E  6FCC               	movwf	sprintf@fmt& (0+255),b
  2137  005B80  0E7F               	movlw	high STR_12
  2138  005B82  6FCD               	movwf	(sprintf@fmt+1)& (0+255),b
  2139  005B84  C07D  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  2140  005B88  C07E  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  2141  005B8C  CFDE F0CE          	movff	postinc2,?_sprintf+4
  2142  005B90  CFDE F0CF          	movff	postinc2,?_sprintf+5
  2143  005B94  CFDE F0D0          	movff	postinc2,?_sprintf+6
  2144  005B98  CFDE F0D1          	movff	postinc2,?_sprintf+7
  2145  005B9C  ECC4  F022         	call	_sprintf	;wreg free
  2146  005BA0                     
  2147                           ;esvaziar.c: 39:         lcd_str(y);
  2148  005BA0  0E6C               	movlw	low esvaziar_tanque@y
  2149  005BA2  6E08               	movwf	lcd_str@str^0,c
  2150  005BA4  0E01               	movlw	high esvaziar_tanque@y
  2151  005BA6  6E09               	movwf	(lcd_str@str+1)^0,c
  2152  005BA8  EC7D  F024         	call	_lcd_str	;wreg free
  2153  005BAC                     
  2154                           ;esvaziar.c: 40:         lcd_str(" L");
  2155  005BAC  0EFB               	movlw	low STR_13
  2156  005BAE  6E08               	movwf	lcd_str@str^0,c
  2157  005BB0  0E7F               	movlw	high STR_13
  2158  005BB2  6E09               	movwf	(lcd_str@str+1)^0,c
  2159  005BB4  EC7D  F024         	call	_lcd_str	;wreg free
  2160  005BB8                     
  2161                           ;esvaziar.c: 43:         int tempo = decremento / 2;
  2162  005BB8  0E00               	movlw	0
  2163  005BBA  6E3C               	movwf	___fldiv@a^0,c
  2164  005BBC  0E00               	movlw	0
  2165  005BBE  6E3D               	movwf	(___fldiv@a+1)^0,c
  2166  005BC0  0E00               	movlw	0
  2167  005BC2  6E3E               	movwf	(___fldiv@a+2)^0,c
  2168  005BC4  0E40               	movlw	64
  2169  005BC6  6E3F               	movwf	(___fldiv@a+3)^0,c
  2170  005BC8  C179  F038         	movff	esvaziar_tanque@decremento,___fldiv@b
  2171  005BCC  C17A  F039         	movff	esvaziar_tanque@decremento+1,___fldiv@b+1
  2172  005BD0  C17B  F03A         	movff	esvaziar_tanque@decremento+2,___fldiv@b+2
  2173  005BD4  C17C  F03B         	movff	esvaziar_tanque@decremento+3,___fldiv@b+3
  2174  005BD8  EC76  F02E         	call	___fldiv	;wreg free
  2175  005BDC  C038  F051         	movff	?___fldiv,___fltol@f1
  2176  005BE0  C039  F052         	movff	?___fldiv+1,___fltol@f1+1
  2177  005BE4  C03A  F053         	movff	?___fldiv+2,___fltol@f1+2
  2178  005BE8  C03B  F054         	movff	?___fldiv+3,___fltol@f1+3
  2179  005BEC  EC6F  F028         	call	___fltol	;wreg free
  2180  005BF0  C051  F174         	movff	?___fltol,esvaziar_tanque@tempo
  2181  005BF4  C052  F175         	movff	?___fltol+1,esvaziar_tanque@tempo+1
  2182  005BF8                     
  2183                           ;esvaziar.c: 44:         int i;;esvaziar.c: 45:         int numeros[10] = {0x3F, 0x06, 0
      +                          x5B, 0x4F, 0x66, 0x6D, 0x7D,
  2184  005BF8  EE21  F08D         	lfsr	2,esvaziar_tanque@F342
  2185  005BFC  EE11  F058         	lfsr	1,esvaziar_tanque@numeros
  2186  005C00  0E13               	movlw	19
  2187  005C02                     u5601:
  2188  005C02  CFDB FFE3          	movff	plusw2,plusw1
  2189  005C06  06E8               	decf	wreg,f,c
  2190  005C08  E2FC               	bc	u5601
  2191  005C0A                     
  2192                           ;esvaziar.c: 48:         (*(volatile __near unsigned char*)0xF92) = 0x00;
  2193  005C0A  0E00               	movlw	0
  2194  005C0C  6E92               	movwf	146,c	;volatile
  2195  005C0E                     
  2196                           ;esvaziar.c: 54:         lcd_cmd(0x01);
  2197  005C0E  0E01               	movlw	1
  2198  005C10  ECA7  F021         	call	_lcd_cmd
  2199  005C14                     
  2200                           ;esvaziar.c: 55:         lcd_cmd(0x80);
  2201  005C14  0E80               	movlw	128
  2202  005C16  ECA7  F021         	call	_lcd_cmd
  2203  005C1A                     
  2204                           ;esvaziar.c: 56:         lcd_str("Esvaziando...");
  2205  005C1A  0E3E               	movlw	low STR_24
  2206  005C1C  6E08               	movwf	lcd_str@str^0,c
  2207  005C1E  0E7F               	movlw	high STR_24
  2208  005C20  6E09               	movwf	(lcd_str@str+1)^0,c
  2209  005C22  EC7D  F024         	call	_lcd_str	;wreg free
  2210  005C26                     
  2211                           ;esvaziar.c: 57:         lcd_cmd(0xC0);
  2212  005C26  0EC0               	movlw	192
  2213  005C28  ECA7  F021         	call	_lcd_cmd
  2214  005C2C                     
  2215                           ;esvaziar.c: 58:         lcd_str("Aguarde!");
  2216  005C2C  0ED2               	movlw	low STR_15
  2217  005C2E  6E08               	movwf	lcd_str@str^0,c
  2218  005C30  0E7F               	movlw	high STR_15
  2219  005C32  6E09               	movwf	(lcd_str@str+1)^0,c
  2220  005C34  EC7D  F024         	call	_lcd_str	;wreg free
  2221  005C38                     
  2222                           ;esvaziar.c: 65:         for (i = tempo; i >= 0; i--) {
  2223  005C38  C174  F17D         	movff	esvaziar_tanque@tempo,esvaziar_tanque@i
  2224  005C3C  C175  F17E         	movff	esvaziar_tanque@tempo+1,esvaziar_tanque@i+1
  2225  005C40                     l4812:
  2226  005C40  0101               	movlb	1	; () banked
  2227  005C42  BF7E               	btfsc	(esvaziar_tanque@i+1)& (0+255),7,b
  2228  005C44  EF28  F02E         	goto	u5610
  2229  005C48  EF26  F02E         	goto	u5611
  2230  005C4C                     u5611:
  2231  005C4C  EF2A  F02E         	goto	l4816
  2232  005C50                     u5610:
  2233  005C50  EF41  F02E         	goto	l4824
  2234  005C54                     l4816:
  2235                           
  2236                           ; BSR set to: 1
  2237                           ;esvaziar.c: 66:             (*(volatile __near unsigned char*)0xF83) = numeros[i];
  2238  005C54  90D8               	bcf	status,0,c
  2239  005C56  357D               	rlcf	esvaziar_tanque@i& (0+255),w,b
  2240  005C58  6ED9               	movwf	fsr2l,c
  2241  005C5A  357E               	rlcf	(esvaziar_tanque@i+1)& (0+255),w,b
  2242  005C5C  6EDA               	movwf	fsr2h,c
  2243  005C5E  0E58               	movlw	low esvaziar_tanque@numeros
  2244  005C60  26D9               	addwf	fsr2l,f,c
  2245  005C62  0E01               	movlw	high esvaziar_tanque@numeros
  2246  005C64  22DA               	addwfc	fsr2h,f,c
  2247  005C66  50DF               	movf	indf2,w,c
  2248  005C68  6E83               	movwf	131,c	;volatile
  2249  005C6A                     
  2250                           ; BSR set to: 1
  2251                           ;esvaziar.c: 67:             atraso_ms(1000);
  2252  005C6A  0E03               	movlw	3
  2253  005C6C  6E02               	movwf	(atraso_ms@t+1)^0,c
  2254  005C6E  0EE8               	movlw	232
  2255  005C70  6E01               	movwf	atraso_ms@t^0,c
  2256  005C72  ECDB  F023         	call	_atraso_ms	;wreg free
  2257  005C76                     
  2258                           ;esvaziar.c: 68:         }
  2259  005C76  0101               	movlb	1	; () banked
  2260  005C78  077D               	decf	esvaziar_tanque@i& (0+255),f,b
  2261  005C7A  A0D8               	btfss	status,0,c
  2262  005C7C  077E               	decf	(esvaziar_tanque@i+1)& (0+255),f,b
  2263  005C7E  EF20  F02E         	goto	l4812
  2264  005C82                     l4824:
  2265                           
  2266                           ; BSR set to: 1
  2267                           ;esvaziar.c: 69:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  2268  005C82  9A80               	bcf	128,5,c	;volatile
  2269  005C84                     
  2270                           ; BSR set to: 1
  2271                           ;esvaziar.c: 72:         lcd_cmd(0x01);
  2272  005C84  0E01               	movlw	1
  2273  005C86  ECA7  F021         	call	_lcd_cmd
  2274  005C8A                     
  2275                           ;esvaziar.c: 73:         lcd_cmd(0x80);
  2276  005C8A  0E80               	movlw	128
  2277  005C8C  ECA7  F021         	call	_lcd_cmd
  2278  005C90                     
  2279                           ;esvaziar.c: 74:         lcd_str("    SUCESSO!");
  2280  005C90  0E76               	movlw	low STR_16
  2281  005C92  6E08               	movwf	lcd_str@str^0,c
  2282  005C94  0E7F               	movlw	high STR_16
  2283  005C96  6E09               	movwf	(lcd_str@str+1)^0,c
  2284  005C98  EC7D  F024         	call	_lcd_str	;wreg free
  2285  005C9C                     
  2286                           ;esvaziar.c: 75:         lcd_cmd(0xC0);
  2287  005C9C  0EC0               	movlw	192
  2288  005C9E  ECA7  F021         	call	_lcd_cmd
  2289  005CA2                     
  2290                           ;esvaziar.c: 76:         lcd_str("    0-Voltar");
  2291  005CA2  0E83               	movlw	low STR_17
  2292  005CA4  6E08               	movwf	lcd_str@str^0,c
  2293  005CA6  0E7F               	movlw	high STR_17
  2294  005CA8  6E09               	movwf	(lcd_str@str+1)^0,c
  2295  005CAA  EC7D  F024         	call	_lcd_str	;wreg free
  2296  005CAE                     l4836:
  2297                           
  2298                           ;esvaziar.c: 94:     unsigned int opt;;esvaziar.c: 95:     unsigned char tmp;;esvaziar.c
      +                          : 97:     (*(volatile __near unsigned char*)0xF93) = 0xF8;
  2299  005CAE  0EF8               	movlw	248
  2300  005CB0  6E93               	movwf	147,c	;volatile
  2301  005CB2                     l4838:
  2302                           
  2303                           ;esvaziar.c: 100:         (*(volatile __near unsigned char*)0xF95) = 0x0F;
  2304  005CB2  0E0F               	movlw	15
  2305  005CB4  6E95               	movwf	149,c	;volatile
  2306  005CB6                     
  2307                           ;esvaziar.c: 101:         tmp = tc_tecla(0) + 0x30;
  2308  005CB6  0E00               	movlw	0
  2309  005CB8  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  2310  005CBA  0E00               	movlw	0
  2311  005CBC  6E07               	movwf	tc_tecla@timeout^0,c
  2312  005CBE  EC4E  F02B         	call	_tc_tecla	;wreg free
  2313  005CC2  0F30               	addlw	48
  2314  005CC4  0101               	movlb	1	; () banked
  2315  005CC6  6F78               	movwf	esvaziar_tanque@tmp& (0+255),b
  2316  005CC8                     
  2317                           ; BSR set to: 1
  2318                           ;esvaziar.c: 102:         (*(volatile __near unsigned char*)0xF95) = 0x00;
  2319  005CC8  0E00               	movlw	0
  2320  005CCA  6E95               	movwf	149,c	;volatile
  2321  005CCC                     
  2322                           ; BSR set to: 1
  2323                           ;esvaziar.c: 103:         opt = (tmp - '0');
  2324  005CCC  0ED0               	movlw	208
  2325  005CCE  2578               	addwf	esvaziar_tanque@tmp& (0+255),w,b
  2326  005CD0  6F76               	movwf	esvaziar_tanque@opt& (0+255),b
  2327  005CD2  6B77               	clrf	(esvaziar_tanque@opt+1)& (0+255),b
  2328  005CD4  0EFF               	movlw	255
  2329  005CD6  2377               	addwfc	(esvaziar_tanque@opt+1)& (0+255),f,b
  2330  005CD8                     
  2331                           ; BSR set to: 1
  2332                           ;esvaziar.c: 104:         if (opt == 0) {
  2333  005CD8  5176               	movf	esvaziar_tanque@opt& (0+255),w,b
  2334  005CDA  1177               	iorwf	(esvaziar_tanque@opt+1)& (0+255),w,b
  2335  005CDC  A4D8               	btfss	status,2,c
  2336  005CDE  EF73  F02E         	goto	u5621
  2337  005CE2  EF75  F02E         	goto	u5620
  2338  005CE6                     u5621:
  2339  005CE6  EF59  F02E         	goto	l4838
  2340  005CEA                     u5620:
  2341  005CEA                     
  2342                           ; BSR set to: 1
  2343  005CEA  0012               	return		;funcret
  2344  005CEC                     __end_of_esvaziar_tanque:
  2345                           	callstack 0
  2346                           
  2347 ;; *************** function _encher_tanque *****************
  2348 ;; Defined at:
  2349 ;;		line 9 in file "encher.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;  vol             2  124[COMRAM] PTR 
  2352 ;;		 -> volume(4), 
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;  numeros        20    0[BANK1 ] int [10]
  2355 ;;  y               8   20[BANK1 ] unsigned char [8]
  2356 ;;  porcento        4   28[BANK1 ] float 
  2357 ;;  t2              2   50[BANK1 ] int 
  2358 ;;  t1              2   46[BANK1 ] int 
  2359 ;;  tempo           2   44[BANK1 ] int 
  2360 ;;  potencia        2   40[BANK1 ] int 
  2361 ;;  i               2   34[BANK1 ] int 
  2362 ;;  num             4   36[BANK1 ] unsigned int [2]
  2363 ;;  i               2   48[BANK1 ] unsigned int 
  2364 ;;  incremento      2   42[BANK1 ] unsigned int 
  2365 ;;  opt             2   32[BANK1 ] unsigned int 
  2366 ;;  tmp             1   52[BANK1 ] unsigned char 
  2367 ;; Return value:  Size  Location     Type
  2368 ;;                  1    wreg      void 
  2369 ;; Registers used:
  2370 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2371 ;; Tracked objects:
  2372 ;;		On entry : 0/0
  2373 ;;		On exit  : 0/0
  2374 ;;		Unchanged: 0/0
  2375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2376 ;;      Params:         2       0       0       0       0       0       0
  2377 ;;      Locals:         0       0      53       0       0       0       0
  2378 ;;      Temps:          0       4       0       0       0       0       0
  2379 ;;      Totals:         2       4      53       0       0       0       0
  2380 ;;Total ram usage:       59 bytes
  2381 ;; Hardware stack levels used:    1
  2382 ;; Hardware stack levels required when called:    8
  2383 ;; This function calls:
  2384 ;;		___awdiv
  2385 ;;		___awmod
  2386 ;;		___fladd
  2387 ;;		___fldiv
  2388 ;;		___flge
  2389 ;;		___flmul
  2390 ;;		___fltol
  2391 ;;		___wmul
  2392 ;;		___xxtofl
  2393 ;;		_atraso_ms
  2394 ;;		_lcd_cmd
  2395 ;;		_lcd_dat
  2396 ;;		_lcd_str
  2397 ;;		_pwmInit
  2398 ;;		_pwmSet1
  2399 ;;		_sprintf
  2400 ;;		_tc_tecla
  2401 ;; This function is called by:
  2402 ;;		_main
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           	psect	text4
  2407  006DDA                     __ptext4:
  2408                           	callstack 0
  2409  006DDA                     _encher_tanque:
  2410                           	callstack 22
  2411  006DDA                     
  2412                           ;encher.c: 12:     lcd_cmd(0x01);
  2413  006DDA  0E01               	movlw	1
  2414  006DDC  ECA7  F021         	call	_lcd_cmd
  2415                           
  2416                           ;encher.c: 13:     lcd_cmd(0x80);
  2417  006DE0  0E80               	movlw	128
  2418  006DE2  ECA7  F021         	call	_lcd_cmd
  2419  006DE6                     
  2420                           ;encher.c: 14:     lcd_str("Quant(L): ");
  2421  006DE6  0E9C               	movlw	low STR_8
  2422  006DE8  6E08               	movwf	lcd_str@str^0,c
  2423  006DEA  0E7F               	movlw	high STR_8
  2424  006DEC  6E09               	movwf	(lcd_str@str+1)^0,c
  2425  006DEE  EC7D  F024         	call	_lcd_str	;wreg free
  2426  006DF2                     
  2427                           ;encher.c: 15:     lcd_cmd(0xC0);
  2428  006DF2  0EC0               	movlw	192
  2429  006DF4  ECA7  F021         	call	_lcd_cmd
  2430                           
  2431                           ;encher.c: 16:     lcd_str("RB1-voltar");
  2432  006DF8  0EB2               	movlw	low STR_9
  2433  006DFA  6E08               	movwf	lcd_str@str^0,c
  2434  006DFC  0E7F               	movlw	high STR_9
  2435  006DFE  6E09               	movwf	(lcd_str@str+1)^0,c
  2436  006E00  EC7D  F024         	call	_lcd_str	;wreg free
  2437  006E04                     
  2438                           ;encher.c: 17:     lcd_cmd(0x80 + 10);
  2439  006E04  0E8A               	movlw	138
  2440  006E06  ECA7  F021         	call	_lcd_cmd
  2441  006E0A                     
  2442                           ;encher.c: 22:     unsigned int incremento;;encher.c: 24:     unsigned int i = 0;
  2443  006E0A  0E00               	movlw	0
  2444  006E0C  0101               	movlb	1	; () banked
  2445  006E0E  6F89               	movwf	(encher_tanque@i+1)& (0+255),b
  2446  006E10  0E00               	movlw	0
  2447  006E12  6F88               	movwf	encher_tanque@i& (0+255),b
  2448  006E14                     
  2449                           ; BSR set to: 1
  2450                           ;encher.c: 25:     unsigned int num[2];;encher.c: 26:     unsigned char tmp;;encher.c: 2
      +                          8:     (*(volatile __near unsigned char*)0xF93) = 0xF8;
  2451  006E14  0EF8               	movlw	248
  2452  006E16  6E93               	movwf	147,c	;volatile
  2453                           
  2454                           ;encher.c: 30:     while (i != 2) {
  2455  006E18  EF62  F037         	goto	l4634
  2456  006E1C                     l4618:
  2457                           
  2458                           ; BSR set to: 1
  2459                           ;encher.c: 31:         (*(volatile __near unsigned char*)0xF95) = 0x0F;
  2460  006E1C  0E0F               	movlw	15
  2461  006E1E  6E95               	movwf	149,c	;volatile
  2462  006E20                     
  2463                           ; BSR set to: 1
  2464                           ;encher.c: 32:         tmp = tc_tecla(0) + 0x30;
  2465  006E20  0E00               	movlw	0
  2466  006E22  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  2467  006E24  0E00               	movlw	0
  2468  006E26  6E07               	movwf	tc_tecla@timeout^0,c
  2469  006E28  EC4E  F02B         	call	_tc_tecla	;wreg free
  2470  006E2C  0F30               	addlw	48
  2471  006E2E  0101               	movlb	1	; () banked
  2472  006E30  6F8C               	movwf	encher_tanque@tmp& (0+255),b
  2473  006E32                     
  2474                           ; BSR set to: 1
  2475                           ;encher.c: 33:         (*(volatile __near unsigned char*)0xF95) = 0x00;
  2476  006E32  0E00               	movlw	0
  2477  006E34  6E95               	movwf	149,c	;volatile
  2478  006E36                     
  2479                           ; BSR set to: 1
  2480                           ;encher.c: 34:         lcd_dat(tmp);
  2481  006E36  518C               	movf	encher_tanque@tmp& (0+255),w,b
  2482  006E38  ECBC  F021         	call	_lcd_dat
  2483  006E3C                     
  2484                           ;encher.c: 35:         if (i == 0) {
  2485  006E3C  0101               	movlb	1	; () banked
  2486  006E3E  5188               	movf	encher_tanque@i& (0+255),w,b
  2487  006E40  1189               	iorwf	(encher_tanque@i+1)& (0+255),w,b
  2488  006E42  A4D8               	btfss	status,2,c
  2489  006E44  EF26  F037         	goto	u5491
  2490  006E48  EF28  F037         	goto	u5490
  2491  006E4C                     u5491:
  2492  006E4C  EF44  F037         	goto	l4630
  2493  006E50                     u5490:
  2494  006E50                     
  2495                           ; BSR set to: 1
  2496                           ;encher.c: 36:             num[i] = (tmp - '0')*10;
  2497  006E50  0ED0               	movlw	208
  2498  006E52  258C               	addwf	encher_tanque@tmp& (0+255),w,b
  2499  006E54  6E01               	movwf	___wmul@multiplier^0,c
  2500  006E56  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2501  006E58  0EFF               	movlw	255
  2502  006E5A  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  2503  006E5C  0E00               	movlw	0
  2504  006E5E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2505  006E60  0E0A               	movlw	10
  2506  006E62  6E03               	movwf	___wmul@multiplicand^0,c
  2507  006E64  EC94  F021         	call	___wmul	;wreg free
  2508  006E68  90D8               	bcf	status,0,c
  2509  006E6A  0101               	movlb	1	; () banked
  2510  006E6C  3588               	rlcf	encher_tanque@i& (0+255),w,b
  2511  006E6E  6ED9               	movwf	fsr2l,c
  2512  006E70  3589               	rlcf	(encher_tanque@i+1)& (0+255),w,b
  2513  006E72  6EDA               	movwf	fsr2h,c
  2514  006E74  0E7C               	movlw	low encher_tanque@num
  2515  006E76  26D9               	addwf	fsr2l,f,c
  2516  006E78  0E01               	movlw	high encher_tanque@num
  2517  006E7A  22DA               	addwfc	fsr2h,f,c
  2518  006E7C  C001  FFDE         	movff	?___wmul,postinc2
  2519  006E80  C002  FFDD         	movff	?___wmul+1,postdec2
  2520                           
  2521                           ;encher.c: 37:         } else {
  2522  006E84  EF60  F037         	goto	l4632
  2523  006E88                     l4630:
  2524                           
  2525                           ; BSR set to: 1
  2526                           ;encher.c: 38:             num[i] = (tmp - '0');
  2527  006E88  0ED0               	movlw	208
  2528  006E8A  0100               	movlb	0	; () banked
  2529  006E8C  6FDC               	movwf	??_encher_tanque& (0+255),b
  2530  006E8E  0EFF               	movlw	255
  2531  006E90  6FDD               	movwf	(??_encher_tanque+1)& (0+255),b
  2532  006E92  0101               	movlb	1	; () banked
  2533  006E94  518C               	movf	encher_tanque@tmp& (0+255),w,b
  2534  006E96  0100               	movlb	0	; () banked
  2535  006E98  6FDE               	movwf	(??_encher_tanque+2)& (0+255),b
  2536  006E9A  6BDF               	clrf	(??_encher_tanque+3)& (0+255),b
  2537  006E9C  51DC               	movf	??_encher_tanque& (0+255),w,b
  2538  006E9E  27DE               	addwf	(??_encher_tanque+2)& (0+255),f,b
  2539  006EA0  51DD               	movf	(??_encher_tanque+1)& (0+255),w,b
  2540  006EA2  23DF               	addwfc	(??_encher_tanque+3)& (0+255),f,b
  2541  006EA4  90D8               	bcf	status,0,c
  2542  006EA6  0101               	movlb	1	; () banked
  2543  006EA8  3588               	rlcf	encher_tanque@i& (0+255),w,b
  2544  006EAA  6ED9               	movwf	fsr2l,c
  2545  006EAC  3589               	rlcf	(encher_tanque@i+1)& (0+255),w,b
  2546  006EAE  6EDA               	movwf	fsr2h,c
  2547  006EB0  0E7C               	movlw	low encher_tanque@num
  2548  006EB2  26D9               	addwf	fsr2l,f,c
  2549  006EB4  0E01               	movlw	high encher_tanque@num
  2550  006EB6  22DA               	addwfc	fsr2h,f,c
  2551  006EB8  C0DE  FFDE         	movff	??_encher_tanque+2,postinc2
  2552  006EBC  C0DF  FFDD         	movff	??_encher_tanque+3,postdec2
  2553  006EC0                     l4632:
  2554                           
  2555                           ; BSR set to: 1
  2556                           ;encher.c: 40:         i++;
  2557  006EC0  4B88               	infsnz	encher_tanque@i& (0+255),f,b
  2558  006EC2  2B89               	incf	(encher_tanque@i+1)& (0+255),f,b
  2559  006EC4                     l4634:
  2560                           
  2561                           ; BSR set to: 1
  2562                           ;encher.c: 30:     while (i != 2) {
  2563  006EC4  0E02               	movlw	2
  2564  006EC6  1988               	xorwf	encher_tanque@i& (0+255),w,b
  2565  006EC8  1189               	iorwf	(encher_tanque@i+1)& (0+255),w,b
  2566  006ECA  A4D8               	btfss	status,2,c
  2567  006ECC  EF6A  F037         	goto	u5501
  2568  006ED0  EF6C  F037         	goto	u5500
  2569  006ED4                     u5501:
  2570  006ED4  EF0E  F037         	goto	l4618
  2571  006ED8                     u5500:
  2572  006ED8                     
  2573                           ; BSR set to: 1
  2574                           ;encher.c: 43:     (*(volatile __near unsigned char*)0xF92) = 0x20;
  2575  006ED8  0E20               	movlw	32
  2576  006EDA  6E92               	movwf	146,c	;volatile
  2577                           
  2578                           ;encher.c: 44:     (*(volatile __near unsigned char*)0xF93) = 0x3F;
  2579  006EDC  0E3F               	movlw	63
  2580  006EDE  6E93               	movwf	147,c	;volatile
  2581  006EE0                     
  2582                           ; BSR set to: 1
  2583                           ;encher.c: 46:     atraso_ms(500);
  2584  006EE0  0E01               	movlw	1
  2585  006EE2  6E02               	movwf	(atraso_ms@t+1)^0,c
  2586  006EE4  0EF4               	movlw	244
  2587  006EE6  6E01               	movwf	atraso_ms@t^0,c
  2588  006EE8  ECDB  F023         	call	_atraso_ms	;wreg free
  2589  006EEC                     
  2590                           ;encher.c: 47:     lcd_cmd(0x01);
  2591  006EEC  0E01               	movlw	1
  2592  006EEE  ECA7  F021         	call	_lcd_cmd
  2593  006EF2                     
  2594                           ;encher.c: 49:     incremento = num[0] + num[1];
  2595  006EF2  0101               	movlb	1	; () banked
  2596  006EF4  517C               	movf	encher_tanque@num& (0+255),w,b
  2597  006EF6  257E               	addwf	(encher_tanque@num+2)& (0+255),w,b
  2598  006EF8  6F82               	movwf	encher_tanque@incremento& (0+255),b
  2599  006EFA  517D               	movf	(encher_tanque@num+1)& (0+255),w,b
  2600  006EFC  217F               	addwfc	(encher_tanque@num+3)& (0+255),w,b
  2601  006EFE  6F83               	movwf	(encher_tanque@incremento+1)& (0+255),b
  2602  006F00                     
  2603                           ; BSR set to: 1
  2604                           ;encher.c: 51:     if (*vol + incremento > 70) {
  2605  006F00  0E00               	movlw	0
  2606  006F02  6E38               	movwf	___flge@ff1^0,c
  2607  006F04  0E00               	movlw	0
  2608  006F06  6E39               	movwf	(___flge@ff1+1)^0,c
  2609  006F08  0E8C               	movlw	140
  2610  006F0A  6E3A               	movwf	(___flge@ff1+2)^0,c
  2611  006F0C  0E42               	movlw	66
  2612  006F0E  6E3B               	movwf	(___flge@ff1+3)^0,c
  2613  006F10  C07D  FFD9         	movff	encher_tanque@vol,fsr2l
  2614  006F14  C07E  FFDA         	movff	encher_tanque@vol+1,fsr2h
  2615  006F18  CFDE F02C          	movff	postinc2,___fladd@a
  2616  006F1C  CFDE F02D          	movff	postinc2,___fladd@a+1
  2617  006F20  CFDE F02E          	movff	postinc2,___fladd@a+2
  2618  006F24  CFDE F02F          	movff	postinc2,___fladd@a+3
  2619  006F28  C182  F001         	movff	encher_tanque@incremento,___xxtofl@val
  2620  006F2C  C183  F002         	movff	encher_tanque@incremento+1,___xxtofl@val+1
  2621  006F30  6A03               	clrf	(___xxtofl@val+2)^0,c
  2622  006F32  6A04               	clrf	(___xxtofl@val+3)^0,c
  2623  006F34  0E00               	movlw	0
  2624  006F36  EC74  F02A         	call	___xxtofl
  2625  006F3A  C001  F028         	movff	?___xxtofl,___fladd@b
  2626  006F3E  C002  F029         	movff	?___xxtofl+1,___fladd@b+1
  2627  006F42  C003  F02A         	movff	?___xxtofl+2,___fladd@b+2
  2628  006F46  C004  F02B         	movff	?___xxtofl+3,___fladd@b+3
  2629  006F4A  EC8D  F034         	call	___fladd	;wreg free
  2630  006F4E  C028  F03C         	movff	?___fladd,___flge@ff2
  2631  006F52  C029  F03D         	movff	?___fladd+1,___flge@ff2+1
  2632  006F56  C02A  F03E         	movff	?___fladd+2,___flge@ff2+2
  2633  006F5A  C02B  F03F         	movff	?___fladd+3,___flge@ff2+3
  2634  006F5E  ECED  F027         	call	___flge	;wreg free
  2635  006F62  B0D8               	btfsc	status,0,c
  2636  006F64  EFB6  F037         	goto	u5511
  2637  006F68  EFB8  F037         	goto	u5510
  2638  006F6C                     u5511:
  2639  006F6C  EFD1  F037         	goto	l4656
  2640  006F70                     u5510:
  2641  006F70                     
  2642                           ;encher.c: 54:         lcd_cmd(0x01);
  2643  006F70  0E01               	movlw	1
  2644  006F72  ECA7  F021         	call	_lcd_cmd
  2645                           
  2646                           ;encher.c: 55:         lcd_cmd(0x80);
  2647  006F76  0E80               	movlw	128
  2648  006F78  ECA7  F021         	call	_lcd_cmd
  2649  006F7C                     
  2650                           ;encher.c: 56:         lcd_str("ERRO: vol > MAX");
  2651  006F7C  0E10               	movlw	low STR_10
  2652  006F7E  6E08               	movwf	lcd_str@str^0,c
  2653  006F80  0E7F               	movlw	high STR_10
  2654  006F82  6E09               	movwf	(lcd_str@str+1)^0,c
  2655  006F84  EC7D  F024         	call	_lcd_str	;wreg free
  2656  006F88                     
  2657                           ;encher.c: 57:         lcd_cmd(0xC0);
  2658  006F88  0EC0               	movlw	192
  2659  006F8A  ECA7  F021         	call	_lcd_cmd
  2660                           
  2661                           ;encher.c: 58:         lcd_str("RB1-Voltar");
  2662  006F8E  0EA7               	movlw	low STR_11
  2663  006F90  6E08               	movwf	lcd_str@str^0,c
  2664  006F92  0E7F               	movlw	high STR_11
  2665  006F94  6E09               	movwf	(lcd_str@str+1)^0,c
  2666  006F96  EC7D  F024         	call	_lcd_str	;wreg free
  2667  006F9A                     
  2668                           ;encher.c: 60:         (((*(volatile __near unsigned char*)0xF82)) &= ~(1<<1));
  2669  006F9A  9282               	bcf	130,1,c	;volatile
  2670  006F9C                     
  2671                           ;encher.c: 63:         (((*(volatile __near unsigned char*)0xF94)) |= (1<<1));
  2672  006F9C  8294               	bsf	148,1,c	;volatile
  2673                           
  2674                           ;encher.c: 66:     } else {
  2675  006F9E  EF85  F039         	goto	l4752
  2676  006FA2                     l4656:
  2677                           
  2678                           ;encher.c: 68:         *vol += incremento;
  2679  006FA2  C07D  FFD9         	movff	encher_tanque@vol,fsr2l
  2680  006FA6  C07E  FFDA         	movff	encher_tanque@vol+1,fsr2h
  2681  006FAA  CFDE F028          	movff	postinc2,___fladd@b
  2682  006FAE  CFDE F029          	movff	postinc2,___fladd@b+1
  2683  006FB2  CFDE F02A          	movff	postinc2,___fladd@b+2
  2684  006FB6  CFDE F02B          	movff	postinc2,___fladd@b+3
  2685  006FBA  C182  F001         	movff	encher_tanque@incremento,___xxtofl@val
  2686  006FBE  C183  F002         	movff	encher_tanque@incremento+1,___xxtofl@val+1
  2687  006FC2  6A03               	clrf	(___xxtofl@val+2)^0,c
  2688  006FC4  6A04               	clrf	(___xxtofl@val+3)^0,c
  2689  006FC6  0E00               	movlw	0
  2690  006FC8  EC74  F02A         	call	___xxtofl
  2691  006FCC  C001  F02C         	movff	?___xxtofl,___fladd@a
  2692  006FD0  C002  F02D         	movff	?___xxtofl+1,___fladd@a+1
  2693  006FD4  C003  F02E         	movff	?___xxtofl+2,___fladd@a+2
  2694  006FD8  C004  F02F         	movff	?___xxtofl+3,___fladd@a+3
  2695  006FDC  EC8D  F034         	call	___fladd	;wreg free
  2696  006FE0  C07D  FFD9         	movff	encher_tanque@vol,fsr2l
  2697  006FE4  C07E  FFDA         	movff	encher_tanque@vol+1,fsr2h
  2698  006FE8  C028  FFDE         	movff	?___fladd,postinc2
  2699  006FEC  C029  FFDE         	movff	?___fladd+1,postinc2
  2700  006FF0  C02A  FFDE         	movff	?___fladd+2,postinc2
  2701  006FF4  C02B  FFDE         	movff	?___fladd+3,postinc2
  2702  006FF8                     
  2703                           ;encher.c: 69:         char y[8];;encher.c: 70:         sprintf(y, "%.1f", *vol);
  2704  006FF8  0E6C               	movlw	low encher_tanque@y
  2705  006FFA  0100               	movlb	0	; () banked
  2706  006FFC  6FCA               	movwf	sprintf@s& (0+255),b
  2707  006FFE  0E01               	movlw	high encher_tanque@y
  2708  007000  6FCB               	movwf	(sprintf@s+1)& (0+255),b
  2709  007002  0EE3               	movlw	low STR_12
  2710  007004  6FCC               	movwf	sprintf@fmt& (0+255),b
  2711  007006  0E7F               	movlw	high STR_12
  2712  007008  6FCD               	movwf	(sprintf@fmt+1)& (0+255),b
  2713  00700A  C07D  FFD9         	movff	encher_tanque@vol,fsr2l
  2714  00700E  C07E  FFDA         	movff	encher_tanque@vol+1,fsr2h
  2715  007012  CFDE F0CE          	movff	postinc2,?_sprintf+4
  2716  007016  CFDE F0CF          	movff	postinc2,?_sprintf+5
  2717  00701A  CFDE F0D0          	movff	postinc2,?_sprintf+6
  2718  00701E  CFDE F0D1          	movff	postinc2,?_sprintf+7
  2719  007022  ECC4  F022         	call	_sprintf	;wreg free
  2720  007026                     
  2721                           ;encher.c: 71:         lcd_str(y);
  2722  007026  0E6C               	movlw	low encher_tanque@y
  2723  007028  6E08               	movwf	lcd_str@str^0,c
  2724  00702A  0E01               	movlw	high encher_tanque@y
  2725  00702C  6E09               	movwf	(lcd_str@str+1)^0,c
  2726  00702E  EC7D  F024         	call	_lcd_str	;wreg free
  2727  007032                     
  2728                           ;encher.c: 72:         lcd_str(" L");
  2729  007032  0EFB               	movlw	low STR_13
  2730  007034  6E08               	movwf	lcd_str@str^0,c
  2731  007036  0E7F               	movlw	high STR_13
  2732  007038  6E09               	movwf	(lcd_str@str+1)^0,c
  2733  00703A  EC7D  F024         	call	_lcd_str	;wreg free
  2734  00703E                     
  2735                           ;encher.c: 73:         atraso_ms(500);
  2736  00703E  0E01               	movlw	1
  2737  007040  6E02               	movwf	(atraso_ms@t+1)^0,c
  2738  007042  0EF4               	movlw	244
  2739  007044  6E01               	movwf	atraso_ms@t^0,c
  2740  007046  ECDB  F023         	call	_atraso_ms	;wreg free
  2741  00704A                     
  2742                           ;encher.c: 76:         int tempo = incremento / 2;
  2743  00704A  90D8               	bcf	status,0,c
  2744  00704C  0101               	movlb	1	; () banked
  2745  00704E  3183               	rrcf	(encher_tanque@incremento+1)& (0+255),w,b
  2746  007050  0100               	movlb	0	; () banked
  2747  007052  6FDC               	movwf	??_encher_tanque& (0+255),b
  2748  007054  0101               	movlb	1	; () banked
  2749  007056  3182               	rrcf	encher_tanque@incremento& (0+255),w,b
  2750  007058  6F84               	movwf	encher_tanque@tempo& (0+255),b
  2751  00705A  C0DC  F185         	movff	??_encher_tanque,encher_tanque@tempo+1
  2752  00705E                     
  2753                           ; BSR set to: 1
  2754                           ;encher.c: 77:         int t1, t2;;encher.c: 78:         float porcento;;encher.c: 79:  
      +                                 int i = 0, potencia = 100;
  2755  00705E  0E00               	movlw	0
  2756  007060  6F7B               	movwf	(encher_tanque@i_150+1)& (0+255),b
  2757  007062  0E00               	movlw	0
  2758  007064  6F7A               	movwf	encher_tanque@i_150& (0+255),b
  2759  007066                     
  2760                           ; BSR set to: 1
  2761                           ;encher.c: 80:         int numeros[10] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D,
  2762  007066  EE21  F0A1         	lfsr	2,encher_tanque@F356
  2763  00706A  EE11  F058         	lfsr	1,encher_tanque@numeros
  2764  00706E  0E13               	movlw	19
  2765  007070                     u5521:
  2766  007070  CFDB FFE3          	movff	plusw2,plusw1
  2767  007074  06E8               	decf	wreg,f,c
  2768  007076  E2FC               	bc	u5521
  2769  007078                     
  2770                           ; BSR set to: 1
  2771                           ;encher.c: 83:         (*(volatile __near unsigned char*)0xF92) = 0x00;
  2772  007078  0E00               	movlw	0
  2773  00707A  6E92               	movwf	146,c	;volatile
  2774  00707C                     
  2775                           ; BSR set to: 1
  2776                           ;encher.c: 85:         lcd_cmd(0x01);
  2777  00707C  0E01               	movlw	1
  2778  00707E  ECA7  F021         	call	_lcd_cmd
  2779  007082                     
  2780                           ;encher.c: 86:         lcd_cmd(0x80);
  2781  007082  0E80               	movlw	128
  2782  007084  ECA7  F021         	call	_lcd_cmd
  2783  007088                     
  2784                           ;encher.c: 87:         lcd_str("Enchendo...");
  2785  007088  0E90               	movlw	low STR_14
  2786  00708A  6E08               	movwf	lcd_str@str^0,c
  2787  00708C  0E7F               	movlw	high STR_14
  2788  00708E  6E09               	movwf	(lcd_str@str+1)^0,c
  2789  007090  EC7D  F024         	call	_lcd_str	;wreg free
  2790  007094                     
  2791                           ;encher.c: 88:         lcd_cmd(0xC0);
  2792  007094  0EC0               	movlw	192
  2793  007096  ECA7  F021         	call	_lcd_cmd
  2794  00709A                     
  2795                           ;encher.c: 89:         lcd_str("Aguarde!");
  2796  00709A  0ED2               	movlw	low STR_15
  2797  00709C  6E08               	movwf	lcd_str@str^0,c
  2798  00709E  0E7F               	movlw	high STR_15
  2799  0070A0  6E09               	movwf	(lcd_str@str+1)^0,c
  2800  0070A2  EC7D  F024         	call	_lcd_str	;wreg free
  2801  0070A6                     
  2802                           ;encher.c: 91:         pwmInit();
  2803  0070A6  EC8A  F021         	call	_pwmInit	;wreg free
  2804  0070AA                     
  2805                           ;encher.c: 94:         t1 = tempo / 10;
  2806  0070AA  C184  F001         	movff	encher_tanque@tempo,___awdiv@dividend
  2807  0070AE  C185  F002         	movff	encher_tanque@tempo+1,___awdiv@dividend+1
  2808  0070B2  0E00               	movlw	0
  2809  0070B4  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2810  0070B6  0E0A               	movlw	10
  2811  0070B8  6E03               	movwf	___awdiv@divisor^0,c
  2812  0070BA  EC66  F025         	call	___awdiv	;wreg free
  2813  0070BE  C001  F186         	movff	?___awdiv,encher_tanque@t1
  2814  0070C2  C002  F187         	movff	?___awdiv+1,encher_tanque@t1+1
  2815  0070C6                     
  2816                           ;encher.c: 95:         t2 = tempo % 10;
  2817  0070C6  C184  F001         	movff	encher_tanque@tempo,___awmod@dividend
  2818  0070CA  C185  F002         	movff	encher_tanque@tempo+1,___awmod@dividend+1
  2819  0070CE  0E00               	movlw	0
  2820  0070D0  6E04               	movwf	(___awmod@divisor+1)^0,c
  2821  0070D2  0E0A               	movlw	10
  2822  0070D4  6E03               	movwf	___awmod@divisor^0,c
  2823  0070D6  EC0E  F025         	call	___awmod	;wreg free
  2824  0070DA  C001  F18A         	movff	?___awmod,encher_tanque@t2
  2825  0070DE  C002  F18B         	movff	?___awmod+1,encher_tanque@t2+1
  2826                           
  2827                           ;encher.c: 96:         while ((t1 != 0) || (t2 != 0)) {
  2828  0070E2  EF57  F039         	goto	l4730
  2829  0070E6                     l4692:
  2830                           
  2831                           ; BSR set to: 1
  2832                           ;encher.c: 101:             porcento = ((((float) t1 * 10.0) + (float) t2) / (float) tem
      +                          po);
  2833  0070E6  C18A  F001         	movff	encher_tanque@t2,___xxtofl@val
  2834  0070EA  C18B  F002         	movff	encher_tanque@t2+1,___xxtofl@val+1
  2835  0070EE  0E00               	movlw	0
  2836  0070F0  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  2837  0070F2  0EFF               	movlw	-1
  2838  0070F4  6E03               	movwf	(___xxtofl@val+2)^0,c
  2839  0070F6  6E04               	movwf	(___xxtofl@val+3)^0,c
  2840  0070F8  0E01               	movlw	1
  2841  0070FA  EC74  F02A         	call	___xxtofl
  2842  0070FE  C001  F02C         	movff	?___xxtofl,___fladd@a
  2843  007102  C002  F02D         	movff	?___xxtofl+1,___fladd@a+1
  2844  007106  C003  F02E         	movff	?___xxtofl+2,___fladd@a+2
  2845  00710A  C004  F02F         	movff	?___xxtofl+3,___fladd@a+3
  2846  00710E  0E00               	movlw	0
  2847  007110  6E13               	movwf	___flmul@a^0,c
  2848  007112  0E00               	movlw	0
  2849  007114  6E14               	movwf	(___flmul@a+1)^0,c
  2850  007116  0E20               	movlw	32
  2851  007118  6E15               	movwf	(___flmul@a+2)^0,c
  2852  00711A  0E41               	movlw	65
  2853  00711C  6E16               	movwf	(___flmul@a+3)^0,c
  2854  00711E  C186  F001         	movff	encher_tanque@t1,___xxtofl@val
  2855  007122  C187  F002         	movff	encher_tanque@t1+1,___xxtofl@val+1
  2856  007126  0E00               	movlw	0
  2857  007128  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  2858  00712A  0EFF               	movlw	-1
  2859  00712C  6E03               	movwf	(___xxtofl@val+2)^0,c
  2860  00712E  6E04               	movwf	(___xxtofl@val+3)^0,c
  2861  007130  0E01               	movlw	1
  2862  007132  EC74  F02A         	call	___xxtofl
  2863  007136  C001  F00F         	movff	?___xxtofl,___flmul@b
  2864  00713A  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  2865  00713E  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  2866  007142  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  2867  007146  EC43  F030         	call	___flmul	;wreg free
  2868  00714A  C00F  F028         	movff	?___flmul,___fladd@b
  2869  00714E  C010  F029         	movff	?___flmul+1,___fladd@b+1
  2870  007152  C011  F02A         	movff	?___flmul+2,___fladd@b+2
  2871  007156  C012  F02B         	movff	?___flmul+3,___fladd@b+3
  2872  00715A  EC8D  F034         	call	___fladd	;wreg free
  2873  00715E  C028  F038         	movff	?___fladd,___fldiv@b
  2874  007162  C029  F039         	movff	?___fladd+1,___fldiv@b+1
  2875  007166  C02A  F03A         	movff	?___fladd+2,___fldiv@b+2
  2876  00716A  C02B  F03B         	movff	?___fladd+3,___fldiv@b+3
  2877  00716E  C184  F001         	movff	encher_tanque@tempo,___xxtofl@val
  2878  007172  C185  F002         	movff	encher_tanque@tempo+1,___xxtofl@val+1
  2879  007176  0E00               	movlw	0
  2880  007178  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  2881  00717A  0EFF               	movlw	-1
  2882  00717C  6E03               	movwf	(___xxtofl@val+2)^0,c
  2883  00717E  6E04               	movwf	(___xxtofl@val+3)^0,c
  2884  007180  0E01               	movlw	1
  2885  007182  EC74  F02A         	call	___xxtofl
  2886  007186  C001  F03C         	movff	?___xxtofl,___fldiv@a
  2887  00718A  C002  F03D         	movff	?___xxtofl+1,___fldiv@a+1
  2888  00718E  C003  F03E         	movff	?___xxtofl+2,___fldiv@a+2
  2889  007192  C004  F03F         	movff	?___xxtofl+3,___fldiv@a+3
  2890  007196  EC76  F02E         	call	___fldiv	;wreg free
  2891  00719A  C038  F174         	movff	?___fldiv,encher_tanque@porcento
  2892  00719E  C039  F175         	movff	?___fldiv+1,encher_tanque@porcento+1
  2893  0071A2  C03A  F176         	movff	?___fldiv+2,encher_tanque@porcento+2
  2894  0071A6  C03B  F177         	movff	?___fldiv+3,encher_tanque@porcento+3
  2895                           
  2896                           ;encher.c: 102:             potencia = 100 * porcento;
  2897  0071AA  0E00               	movlw	0
  2898  0071AC  6E13               	movwf	___flmul@a^0,c
  2899  0071AE  0E00               	movlw	0
  2900  0071B0  6E14               	movwf	(___flmul@a+1)^0,c
  2901  0071B2  0EC8               	movlw	200
  2902  0071B4  6E15               	movwf	(___flmul@a+2)^0,c
  2903  0071B6  0E42               	movlw	66
  2904  0071B8  6E16               	movwf	(___flmul@a+3)^0,c
  2905  0071BA  C174  F00F         	movff	encher_tanque@porcento,___flmul@b
  2906  0071BE  C175  F010         	movff	encher_tanque@porcento+1,___flmul@b+1
  2907  0071C2  C176  F011         	movff	encher_tanque@porcento+2,___flmul@b+2
  2908  0071C6  C177  F012         	movff	encher_tanque@porcento+3,___flmul@b+3
  2909  0071CA  EC43  F030         	call	___flmul	;wreg free
  2910  0071CE  C00F  F051         	movff	?___flmul,___fltol@f1
  2911  0071D2  C010  F052         	movff	?___flmul+1,___fltol@f1+1
  2912  0071D6  C011  F053         	movff	?___flmul+2,___fltol@f1+2
  2913  0071DA  C012  F054         	movff	?___flmul+3,___fltol@f1+3
  2914  0071DE  EC6F  F028         	call	___fltol	;wreg free
  2915  0071E2  C051  F180         	movff	?___fltol,encher_tanque@potencia
  2916  0071E6  C052  F181         	movff	?___fltol+1,encher_tanque@potencia+1
  2917  0071EA                     
  2918                           ;encher.c: 103:             if (potencia == 100) {
  2919  0071EA  0E64               	movlw	100
  2920  0071EC  0101               	movlb	1	; () banked
  2921  0071EE  1980               	xorwf	encher_tanque@potencia& (0+255),w,b
  2922  0071F0  1181               	iorwf	(encher_tanque@potencia+1)& (0+255),w,b
  2923  0071F2  A4D8               	btfss	status,2,c
  2924  0071F4  EFFE  F038         	goto	u5531
  2925  0071F8  EF00  F039         	goto	u5530
  2926  0071FC                     u5531:
  2927  0071FC  EF04  F039         	goto	l4698
  2928  007200                     u5530:
  2929  007200                     
  2930                           ; BSR set to: 1
  2931                           ;encher.c: 104:                 potencia = 99;
  2932  007200  0E00               	movlw	0
  2933  007202  6F81               	movwf	(encher_tanque@potencia+1)& (0+255),b
  2934  007204  0E63               	movlw	99
  2935  007206  6F80               	movwf	encher_tanque@potencia& (0+255),b
  2936  007208                     l4698:
  2937                           
  2938                           ; BSR set to: 1
  2939                           ;encher.c: 106:             pwmSet1(potencia);
  2940  007208  5180               	movf	encher_tanque@potencia& (0+255),w,b
  2941  00720A  EC0D  F024         	call	_pwmSet1
  2942  00720E                     
  2943                           ;encher.c: 109:             (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  2944  00720E  9A80               	bcf	128,5,c	;volatile
  2945  007210                     
  2946                           ;encher.c: 110:             (((*(volatile __near unsigned char*)0xF80)) |= (1<<4));
  2947  007210  8880               	bsf	128,4,c	;volatile
  2948  007212                     
  2949                           ;encher.c: 111:             (*(volatile __near unsigned char*)0xF83) = numeros[t1];
  2950  007212  90D8               	bcf	status,0,c
  2951  007214  0101               	movlb	1	; () banked
  2952  007216  3586               	rlcf	encher_tanque@t1& (0+255),w,b
  2953  007218  6ED9               	movwf	fsr2l,c
  2954  00721A  3587               	rlcf	(encher_tanque@t1+1)& (0+255),w,b
  2955  00721C  6EDA               	movwf	fsr2h,c
  2956  00721E  0E58               	movlw	low encher_tanque@numeros
  2957  007220  26D9               	addwf	fsr2l,f,c
  2958  007222  0E01               	movlw	high encher_tanque@numeros
  2959  007224  22DA               	addwfc	fsr2h,f,c
  2960  007226  50DF               	movf	indf2,w,c
  2961  007228  6E83               	movwf	131,c	;volatile
  2962  00722A                     
  2963                           ; BSR set to: 1
  2964                           ;encher.c: 112:             atraso_ms(5);
  2965  00722A  0E00               	movlw	0
  2966  00722C  6E02               	movwf	(atraso_ms@t+1)^0,c
  2967  00722E  0E05               	movlw	5
  2968  007230  6E01               	movwf	atraso_ms@t^0,c
  2969  007232  ECDB  F023         	call	_atraso_ms	;wreg free
  2970  007236                     
  2971                           ;encher.c: 113:             (((*(volatile __near unsigned char*)0xF80)) |= (1<<5));
  2972  007236  8A80               	bsf	128,5,c	;volatile
  2973  007238                     
  2974                           ;encher.c: 114:             (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<4));
  2975  007238  9880               	bcf	128,4,c	;volatile
  2976  00723A                     
  2977                           ;encher.c: 115:             (*(volatile __near unsigned char*)0xF83) = numeros[t2];
  2978  00723A  90D8               	bcf	status,0,c
  2979  00723C  0101               	movlb	1	; () banked
  2980  00723E  358A               	rlcf	encher_tanque@t2& (0+255),w,b
  2981  007240  6ED9               	movwf	fsr2l,c
  2982  007242  358B               	rlcf	(encher_tanque@t2+1)& (0+255),w,b
  2983  007244  6EDA               	movwf	fsr2h,c
  2984  007246  0E58               	movlw	low encher_tanque@numeros
  2985  007248  26D9               	addwf	fsr2l,f,c
  2986  00724A  0E01               	movlw	high encher_tanque@numeros
  2987  00724C  22DA               	addwfc	fsr2h,f,c
  2988  00724E  50DF               	movf	indf2,w,c
  2989  007250  6E83               	movwf	131,c	;volatile
  2990  007252                     
  2991                           ; BSR set to: 1
  2992                           ;encher.c: 116:             atraso_ms(5);
  2993  007252  0E00               	movlw	0
  2994  007254  6E02               	movwf	(atraso_ms@t+1)^0,c
  2995  007256  0E05               	movlw	5
  2996  007258  6E01               	movwf	atraso_ms@t^0,c
  2997  00725A  ECDB  F023         	call	_atraso_ms	;wreg free
  2998  00725E                     
  2999                           ;encher.c: 118:             if (i == 40) {
  3000  00725E  0E28               	movlw	40
  3001  007260  0101               	movlb	1	; () banked
  3002  007262  197A               	xorwf	encher_tanque@i_150& (0+255),w,b
  3003  007264  117B               	iorwf	(encher_tanque@i_150+1)& (0+255),w,b
  3004  007266  A4D8               	btfss	status,2,c
  3005  007268  EF38  F039         	goto	u5541
  3006  00726C  EF3A  F039         	goto	u5540
  3007  007270                     u5541:
  3008  007270  EF55  F039         	goto	l4728
  3009  007274                     u5540:
  3010  007274                     
  3011                           ; BSR set to: 1
  3012                           ;encher.c: 119:                 i = 0;
  3013  007274  0E00               	movlw	0
  3014  007276  6F7B               	movwf	(encher_tanque@i_150+1)& (0+255),b
  3015  007278  0E00               	movlw	0
  3016  00727A  6F7A               	movwf	encher_tanque@i_150& (0+255),b
  3017  00727C                     
  3018                           ; BSR set to: 1
  3019                           ;encher.c: 120:                 if (t2 == 0) {
  3020  00727C  518A               	movf	encher_tanque@t2& (0+255),w,b
  3021  00727E  118B               	iorwf	(encher_tanque@t2+1)& (0+255),w,b
  3022  007280  A4D8               	btfss	status,2,c
  3023  007282  EF45  F039         	goto	u5551
  3024  007286  EF47  F039         	goto	u5550
  3025  00728A                     u5551:
  3026  00728A  EF50  F039         	goto	l4726
  3027  00728E                     u5550:
  3028  00728E                     
  3029                           ; BSR set to: 1
  3030                           ;encher.c: 121:                     t1--;
  3031  00728E  0786               	decf	encher_tanque@t1& (0+255),f,b
  3032  007290  A0D8               	btfss	status,0,c
  3033  007292  0787               	decf	(encher_tanque@t1+1)& (0+255),f,b
  3034  007294                     
  3035                           ; BSR set to: 1
  3036                           ;encher.c: 122:                     t2 = 9;
  3037  007294  0E00               	movlw	0
  3038  007296  6F8B               	movwf	(encher_tanque@t2+1)& (0+255),b
  3039  007298  0E09               	movlw	9
  3040  00729A  6F8A               	movwf	encher_tanque@t2& (0+255),b
  3041                           
  3042                           ;encher.c: 123:                 } else {
  3043  00729C  EF57  F039         	goto	l4730
  3044  0072A0                     l4726:
  3045                           
  3046                           ; BSR set to: 1
  3047                           ;encher.c: 124:                     t2--;
  3048  0072A0  078A               	decf	encher_tanque@t2& (0+255),f,b
  3049  0072A2  A0D8               	btfss	status,0,c
  3050  0072A4  078B               	decf	(encher_tanque@t2+1)& (0+255),f,b
  3051  0072A6  EF57  F039         	goto	l4730
  3052  0072AA                     l4728:
  3053                           
  3054                           ; BSR set to: 1
  3055                           ;encher.c: 127:                 i++;
  3056  0072AA  4B7A               	infsnz	encher_tanque@i_150& (0+255),f,b
  3057  0072AC  2B7B               	incf	(encher_tanque@i_150+1)& (0+255),f,b
  3058  0072AE                     l4730:
  3059                           
  3060                           ;encher.c: 96:         while ((t1 != 0) || (t2 != 0)) {
  3061  0072AE  0101               	movlb	1	; () banked
  3062  0072B0  5186               	movf	encher_tanque@t1& (0+255),w,b
  3063  0072B2  1187               	iorwf	(encher_tanque@t1+1)& (0+255),w,b
  3064  0072B4  A4D8               	btfss	status,2,c
  3065  0072B6  EF5F  F039         	goto	u5561
  3066  0072BA  EF61  F039         	goto	u5560
  3067  0072BE                     u5561:
  3068  0072BE  EF73  F038         	goto	l4692
  3069  0072C2                     u5560:
  3070  0072C2                     
  3071                           ; BSR set to: 1
  3072  0072C2  518A               	movf	encher_tanque@t2& (0+255),w,b
  3073  0072C4  118B               	iorwf	(encher_tanque@t2+1)& (0+255),w,b
  3074  0072C6  A4D8               	btfss	status,2,c
  3075  0072C8  EF68  F039         	goto	u5571
  3076  0072CC  EF6A  F039         	goto	u5570
  3077  0072D0                     u5571:
  3078  0072D0  EF73  F038         	goto	l4692
  3079  0072D4                     u5570:
  3080  0072D4                     
  3081                           ; BSR set to: 1
  3082                           ;encher.c: 130:         pwmSet1(0);
  3083  0072D4  0E00               	movlw	0
  3084  0072D6  EC0D  F024         	call	_pwmSet1
  3085  0072DA                     
  3086                           ;encher.c: 133:         (((*(volatile __near unsigned char*)0xF94)) |= (1<<1));
  3087  0072DA  8294               	bsf	148,1,c	;volatile
  3088  0072DC                     
  3089                           ;encher.c: 136:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  3090  0072DC  9A80               	bcf	128,5,c	;volatile
  3091  0072DE                     
  3092                           ;encher.c: 137:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<4));
  3093  0072DE  9880               	bcf	128,4,c	;volatile
  3094  0072E0                     
  3095                           ;encher.c: 140:         lcd_cmd(0x01);
  3096  0072E0  0E01               	movlw	1
  3097  0072E2  ECA7  F021         	call	_lcd_cmd
  3098  0072E6                     
  3099                           ;encher.c: 141:         lcd_cmd(0x80);
  3100  0072E6  0E80               	movlw	128
  3101  0072E8  ECA7  F021         	call	_lcd_cmd
  3102  0072EC                     
  3103                           ;encher.c: 142:         lcd_str("    SUCESSO!");
  3104  0072EC  0E76               	movlw	low STR_16
  3105  0072EE  6E08               	movwf	lcd_str@str^0,c
  3106  0072F0  0E7F               	movlw	high STR_16
  3107  0072F2  6E09               	movwf	(lcd_str@str+1)^0,c
  3108  0072F4  EC7D  F024         	call	_lcd_str	;wreg free
  3109  0072F8                     
  3110                           ;encher.c: 143:         lcd_cmd(0xC0);
  3111  0072F8  0EC0               	movlw	192
  3112  0072FA  ECA7  F021         	call	_lcd_cmd
  3113  0072FE                     
  3114                           ;encher.c: 144:         lcd_str("    0-Voltar");
  3115  0072FE  0E83               	movlw	low STR_17
  3116  007300  6E08               	movwf	lcd_str@str^0,c
  3117  007302  0E7F               	movlw	high STR_17
  3118  007304  6E09               	movwf	(lcd_str@str+1)^0,c
  3119  007306  EC7D  F024         	call	_lcd_str	;wreg free
  3120  00730A                     l4752:
  3121                           
  3122                           ;encher.c: 152:     unsigned int opt;;encher.c: 154:     (*(volatile __near unsigned cha
      +                          r*)0xF93) = 0xF8;
  3123  00730A  0EF8               	movlw	248
  3124  00730C  6E93               	movwf	147,c	;volatile
  3125  00730E                     l4754:
  3126                           
  3127                           ;encher.c: 157:         (*(volatile __near unsigned char*)0xF95) = 0x0F;
  3128  00730E  0E0F               	movlw	15
  3129  007310  6E95               	movwf	149,c	;volatile
  3130  007312                     
  3131                           ;encher.c: 158:         tmp = tc_tecla(0) + 0x30;
  3132  007312  0E00               	movlw	0
  3133  007314  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  3134  007316  0E00               	movlw	0
  3135  007318  6E07               	movwf	tc_tecla@timeout^0,c
  3136  00731A  EC4E  F02B         	call	_tc_tecla	;wreg free
  3137  00731E  0F30               	addlw	48
  3138  007320  0101               	movlb	1	; () banked
  3139  007322  6F8C               	movwf	encher_tanque@tmp& (0+255),b
  3140  007324                     
  3141                           ; BSR set to: 1
  3142                           ;encher.c: 159:         (*(volatile __near unsigned char*)0xF95) = 0x00;
  3143  007324  0E00               	movlw	0
  3144  007326  6E95               	movwf	149,c	;volatile
  3145  007328                     
  3146                           ; BSR set to: 1
  3147                           ;encher.c: 160:         opt = (tmp - '0');
  3148  007328  0ED0               	movlw	208
  3149  00732A  258C               	addwf	encher_tanque@tmp& (0+255),w,b
  3150  00732C  6F78               	movwf	encher_tanque@opt& (0+255),b
  3151  00732E  6B79               	clrf	(encher_tanque@opt+1)& (0+255),b
  3152  007330  0EFF               	movlw	255
  3153  007332  2379               	addwfc	(encher_tanque@opt+1)& (0+255),f,b
  3154  007334                     
  3155                           ; BSR set to: 1
  3156                           ;encher.c: 161:         if (opt == 0) {
  3157  007334  5178               	movf	encher_tanque@opt& (0+255),w,b
  3158  007336  1179               	iorwf	(encher_tanque@opt+1)& (0+255),w,b
  3159  007338  A4D8               	btfss	status,2,c
  3160  00733A  EFA1  F039         	goto	u5581
  3161  00733E  EFA3  F039         	goto	u5580
  3162  007342                     u5581:
  3163  007342  EF87  F039         	goto	l4754
  3164  007346                     u5580:
  3165  007346                     
  3166                           ; BSR set to: 1
  3167                           ;encher.c: 162:             (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<1));
  3168  007346  9294               	bcf	148,1,c	;volatile
  3169  007348                     
  3170                           ; BSR set to: 1
  3171  007348  0012               	return		;funcret
  3172  00734A                     __end_of_encher_tanque:
  3173                           	callstack 0
  3174                           
  3175 ;; *************** function _tc_tecla *****************
  3176 ;; Defined at:
  3177 ;;		line 14 in file "teclado.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;  timeout         2    6[COMRAM] unsigned int 
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;  to              2    8[COMRAM] unsigned int 
  3182 ;;  i               1   12[COMRAM] unsigned char 
  3183 ;;  ret             1   11[COMRAM] unsigned char 
  3184 ;;  tmp             1   10[COMRAM] unsigned char 
  3185 ;; Return value:  Size  Location     Type
  3186 ;;                  1    wreg      unsigned char 
  3187 ;; Registers used:
  3188 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3189 ;; Tracked objects:
  3190 ;;		On entry : 0/0
  3191 ;;		On exit  : 0/0
  3192 ;;		Unchanged: 0/0
  3193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3194 ;;      Params:         2       0       0       0       0       0       0
  3195 ;;      Locals:         5       0       0       0       0       0       0
  3196 ;;      Temps:          0       0       0       0       0       0       0
  3197 ;;      Totals:         7       0       0       0       0       0       0
  3198 ;;Total ram usage:        7 bytes
  3199 ;; Hardware stack levels used:    1
  3200 ;; Hardware stack levels required when called:    1
  3201 ;; This function calls:
  3202 ;;		_atraso_ms
  3203 ;; This function is called by:
  3204 ;;		_main
  3205 ;;		_encher_tanque
  3206 ;;		_esvaziar_tanque
  3207 ;;		_ver_quantidade
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           	psect	text5
  3212  00569C                     __ptext5:
  3213                           	callstack 0
  3214  00569C                     _tc_tecla:
  3215                           	callstack 28
  3216  00569C                     
  3217                           ;teclado.c: 15:     unsigned int to = 0;
  3218  00569C  0E00               	movlw	0
  3219  00569E  6E0A               	movwf	(tc_tecla@to+1)^0,c
  3220  0056A0  0E00               	movlw	0
  3221  0056A2  6E09               	movwf	tc_tecla@to^0,c
  3222                           
  3223                           ;teclado.c: 16:     unsigned char i;;teclado.c: 17:     unsigned char ret = 0;
  3224  0056A4  0E00               	movlw	0
  3225  0056A6  6E0C               	movwf	tc_tecla@ret^0,c
  3226  0056A8                     
  3227                           ;teclado.c: 18:     unsigned char tmp = (*(volatile __near unsigned char*)0xF81);
  3228  0056A8  CF81 F00B          	movff	3969,tc_tecla@tmp	;volatile
  3229                           
  3230                           ;teclado.c: 21:     while (((to < timeout) || (!timeout))&&(!ret)) {
  3231  0056AC  EFFF  F02B         	goto	l4466
  3232  0056B0                     l4414:
  3233                           
  3234                           ;teclado.c: 22:         for (i = 0; i < 3; i++) {
  3235  0056B0  0E00               	movlw	0
  3236  0056B2  6E0D               	movwf	tc_tecla@i^0,c
  3237  0056B4                     l4420:
  3238                           
  3239                           ;teclado.c: 23:             (*(volatile __near unsigned char*)0xF81) |= ~linha[i];
  3240  0056B4  0EFB               	movlw	low _linha
  3241  0056B6  240D               	addwf	tc_tecla@i^0,w,c
  3242  0056B8  6EF6               	movwf	tblptrl,c
  3243  0056BA  6AF7               	clrf	tblptrh,c
  3244  0056BC  0E7E               	movlw	high _linha
  3245  0056BE  22F7               	addwfc	tblptrh,f,c
  3246  0056C0                     	if	0	;There are less than 3 active tblptr bytes
  3247  0056C0                     	endif
  3248  0056C0  0008               	tblrd		*
  3249  0056C2  50F5               	movf	tablat,w,c
  3250  0056C4  0AFF               	xorlw	255
  3251  0056C6  1281               	iorwf	129,f,c	;volatile
  3252  0056C8                     
  3253                           ;teclado.c: 24:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<3))) 
      +                          {
  3254  0056C8  B683               	btfsc	131,3,c	;volatile
  3255  0056CA  EF69  F02B         	goto	u5191
  3256  0056CE  EF6B  F02B         	goto	u5190
  3257  0056D2                     u5191:
  3258  0056D2  EF83  F02B         	goto	l60
  3259  0056D6                     u5190:
  3260  0056D6                     
  3261                           ;teclado.c: 25:                 atraso_ms(atraso);
  3262  0056D6  0E00               	movlw	0
  3263  0056D8  6E02               	movwf	(atraso_ms@t+1)^0,c
  3264  0056DA  0E0F               	movlw	15
  3265  0056DC  6E01               	movwf	atraso_ms@t^0,c
  3266  0056DE  ECDB  F023         	call	_atraso_ms	;wreg free
  3267  0056E2                     
  3268                           ;teclado.c: 26:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<3
      +                          ))) {
  3269  0056E2  B683               	btfsc	131,3,c	;volatile
  3270  0056E4  EF76  F02B         	goto	u5201
  3271  0056E8  EF78  F02B         	goto	u5200
  3272  0056EC                     u5201:
  3273  0056EC  EF83  F02B         	goto	l60
  3274  0056F0                     u5200:
  3275  0056F0                     l62:
  3276  0056F0  A683               	btfss	131,3,c	;volatile
  3277  0056F2  EF7D  F02B         	goto	u5211
  3278  0056F6  EF7F  F02B         	goto	u5210
  3279  0056FA                     u5211:
  3280  0056FA  EF78  F02B         	goto	l62
  3281  0056FE                     u5210:
  3282  0056FE                     
  3283                           ;teclado.c: 28:                     ret = 1 + i;
  3284  0056FE  280D               	incf	tc_tecla@i^0,w,c
  3285  005700  6E0C               	movwf	tc_tecla@ret^0,c
  3286                           
  3287                           ;teclado.c: 29:                     break;
  3288  005702  EFF5  F02B         	goto	l4462
  3289  005706                     l60:
  3290                           
  3291                           ;teclado.c: 32:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<2))) 
      +                          {
  3292  005706  B483               	btfsc	131,2,c	;volatile
  3293  005708  EF88  F02B         	goto	u5221
  3294  00570C  EF8A  F02B         	goto	u5220
  3295  005710                     u5221:
  3296  005710  EFA3  F02B         	goto	l65
  3297  005714                     u5220:
  3298  005714                     
  3299                           ;teclado.c: 33:                 atraso_ms(atraso);
  3300  005714  0E00               	movlw	0
  3301  005716  6E02               	movwf	(atraso_ms@t+1)^0,c
  3302  005718  0E0F               	movlw	15
  3303  00571A  6E01               	movwf	atraso_ms@t^0,c
  3304  00571C  ECDB  F023         	call	_atraso_ms	;wreg free
  3305  005720                     
  3306                           ;teclado.c: 34:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<2
      +                          ))) {
  3307  005720  B483               	btfsc	131,2,c	;volatile
  3308  005722  EF95  F02B         	goto	u5231
  3309  005726  EF97  F02B         	goto	u5230
  3310  00572A                     u5231:
  3311  00572A  EFA3  F02B         	goto	l65
  3312  00572E                     u5230:
  3313  00572E                     l67:
  3314  00572E  A483               	btfss	131,2,c	;volatile
  3315  005730  EF9C  F02B         	goto	u5241
  3316  005734  EF9E  F02B         	goto	u5240
  3317  005738                     u5241:
  3318  005738  EF97  F02B         	goto	l67
  3319  00573C                     u5240:
  3320  00573C                     
  3321                           ;teclado.c: 36:                     ret = 4 + i;
  3322  00573C  500D               	movf	tc_tecla@i^0,w,c
  3323  00573E  0F04               	addlw	4
  3324  005740  6E0C               	movwf	tc_tecla@ret^0,c
  3325                           
  3326                           ;teclado.c: 37:                     break;
  3327  005742  EFF5  F02B         	goto	l4462
  3328  005746                     l65:
  3329                           
  3330                           ;teclado.c: 40:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<1))) 
      +                          {
  3331  005746  B283               	btfsc	131,1,c	;volatile
  3332  005748  EFA8  F02B         	goto	u5251
  3333  00574C  EFAA  F02B         	goto	u5250
  3334  005750                     u5251:
  3335  005750  EFC3  F02B         	goto	l70
  3336  005754                     u5250:
  3337  005754                     
  3338                           ;teclado.c: 41:                 atraso_ms(atraso);
  3339  005754  0E00               	movlw	0
  3340  005756  6E02               	movwf	(atraso_ms@t+1)^0,c
  3341  005758  0E0F               	movlw	15
  3342  00575A  6E01               	movwf	atraso_ms@t^0,c
  3343  00575C  ECDB  F023         	call	_atraso_ms	;wreg free
  3344  005760                     
  3345                           ;teclado.c: 42:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<1
      +                          ))) {
  3346  005760  B283               	btfsc	131,1,c	;volatile
  3347  005762  EFB5  F02B         	goto	u5261
  3348  005766  EFB7  F02B         	goto	u5260
  3349  00576A                     u5261:
  3350  00576A  EFC3  F02B         	goto	l70
  3351  00576E                     u5260:
  3352  00576E                     l72:
  3353  00576E  A283               	btfss	131,1,c	;volatile
  3354  005770  EFBC  F02B         	goto	u5271
  3355  005774  EFBE  F02B         	goto	u5270
  3356  005778                     u5271:
  3357  005778  EFB7  F02B         	goto	l72
  3358  00577C                     u5270:
  3359  00577C                     
  3360                           ;teclado.c: 44:                     ret = 7 + i;
  3361  00577C  500D               	movf	tc_tecla@i^0,w,c
  3362  00577E  0F07               	addlw	7
  3363  005780  6E0C               	movwf	tc_tecla@ret^0,c
  3364                           
  3365                           ;teclado.c: 45:                     break;
  3366  005782  EFF5  F02B         	goto	l4462
  3367  005786                     l70:
  3368                           
  3369                           ;teclado.c: 48:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<0))) 
      +                          {
  3370  005786  B083               	btfsc	131,0,c	;volatile
  3371  005788  EFC8  F02B         	goto	u5281
  3372  00578C  EFCA  F02B         	goto	u5280
  3373  005790                     u5281:
  3374  005790  EFE3  F02B         	goto	l4456
  3375  005794                     u5280:
  3376  005794                     
  3377                           ;teclado.c: 49:                 atraso_ms(atraso);
  3378  005794  0E00               	movlw	0
  3379  005796  6E02               	movwf	(atraso_ms@t+1)^0,c
  3380  005798  0E0F               	movlw	15
  3381  00579A  6E01               	movwf	atraso_ms@t^0,c
  3382  00579C  ECDB  F023         	call	_atraso_ms	;wreg free
  3383  0057A0                     
  3384                           ;teclado.c: 50:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<0
      +                          ))) {
  3385  0057A0  B083               	btfsc	131,0,c	;volatile
  3386  0057A2  EFD5  F02B         	goto	u5291
  3387  0057A6  EFD7  F02B         	goto	u5290
  3388  0057AA                     u5291:
  3389  0057AA  EFE3  F02B         	goto	l4456
  3390  0057AE                     u5290:
  3391  0057AE                     l77:
  3392  0057AE  A083               	btfss	131,0,c	;volatile
  3393  0057B0  EFDC  F02B         	goto	u5301
  3394  0057B4  EFDE  F02B         	goto	u5300
  3395  0057B8                     u5301:
  3396  0057B8  EFD7  F02B         	goto	l77
  3397  0057BC                     u5300:
  3398  0057BC                     
  3399                           ;teclado.c: 52:                     ret = 10 + i;
  3400  0057BC  500D               	movf	tc_tecla@i^0,w,c
  3401  0057BE  0F0A               	addlw	10
  3402  0057C0  6E0C               	movwf	tc_tecla@ret^0,c
  3403                           
  3404                           ;teclado.c: 53:                     break;
  3405  0057C2  EFF5  F02B         	goto	l4462
  3406  0057C6                     l4456:
  3407                           
  3408                           ;teclado.c: 56:             (*(volatile __near unsigned char*)0xF81) &= linha[i];
  3409  0057C6  0EFB               	movlw	low _linha
  3410  0057C8  240D               	addwf	tc_tecla@i^0,w,c
  3411  0057CA  6EF6               	movwf	tblptrl,c
  3412  0057CC  6AF7               	clrf	tblptrh,c
  3413  0057CE  0E7E               	movlw	high _linha
  3414  0057D0  22F7               	addwfc	tblptrh,f,c
  3415  0057D2                     	if	0	;There are less than 3 active tblptr bytes
  3416  0057D2                     	endif
  3417  0057D2  0008               	tblrd		*
  3418  0057D4  50F5               	movf	tablat,w,c
  3419  0057D6  1681               	andwf	129,f,c	;volatile
  3420  0057D8                     
  3421                           ;teclado.c: 57:         };
  3422  0057D8  2A0D               	incf	tc_tecla@i^0,f,c
  3423  0057DA  0E02               	movlw	2
  3424  0057DC  640D               	cpfsgt	tc_tecla@i^0,c
  3425  0057DE  EFF3  F02B         	goto	u5311
  3426  0057E2  EFF5  F02B         	goto	u5310
  3427  0057E6                     u5311:
  3428  0057E6  EF5A  F02B         	goto	l4420
  3429  0057EA                     u5310:
  3430  0057EA                     l4462:
  3431                           
  3432                           ;teclado.c: 58:         atraso_ms(atraso_min);
  3433  0057EA  0E00               	movlw	0
  3434  0057EC  6E02               	movwf	(atraso_ms@t+1)^0,c
  3435  0057EE  0E05               	movlw	5
  3436  0057F0  6E01               	movwf	atraso_ms@t^0,c
  3437  0057F2  ECDB  F023         	call	_atraso_ms	;wreg free
  3438  0057F6                     
  3439                           ;teclado.c: 59:         to += 5;
  3440  0057F6  0E05               	movlw	5
  3441  0057F8  2609               	addwf	tc_tecla@to^0,f,c
  3442  0057FA  0E00               	movlw	0
  3443  0057FC  220A               	addwfc	(tc_tecla@to+1)^0,f,c
  3444  0057FE                     l4466:
  3445                           
  3446                           ;teclado.c: 21:     while (((to < timeout) || (!timeout))&&(!ret)) {
  3447  0057FE  5007               	movf	tc_tecla@timeout^0,w,c
  3448  005800  5C09               	subwf	tc_tecla@to^0,w,c
  3449  005802  5008               	movf	(tc_tecla@timeout+1)^0,w,c
  3450  005804  580A               	subwfb	(tc_tecla@to+1)^0,w,c
  3451  005806  A0D8               	btfss	status,0,c
  3452  005808  EF08  F02C         	goto	u5321
  3453  00580C  EF0A  F02C         	goto	u5320
  3454  005810                     u5321:
  3455  005810  EF13  F02C         	goto	l4470
  3456  005814                     u5320:
  3457  005814  5007               	movf	tc_tecla@timeout^0,w,c
  3458  005816  1008               	iorwf	(tc_tecla@timeout+1)^0,w,c
  3459  005818  A4D8               	btfss	status,2,c
  3460  00581A  EF11  F02C         	goto	u5331
  3461  00581E  EF13  F02C         	goto	u5330
  3462  005822                     u5331:
  3463  005822  EF1B  F02C         	goto	l4472
  3464  005826                     u5330:
  3465  005826                     l4470:
  3466  005826  500C               	movf	tc_tecla@ret^0,w,c
  3467  005828  B4D8               	btfsc	status,2,c
  3468  00582A  EF19  F02C         	goto	u5341
  3469  00582E  EF1B  F02C         	goto	u5340
  3470  005832                     u5341:
  3471  005832  EF58  F02B         	goto	l4414
  3472  005836                     u5340:
  3473  005836                     l4472:
  3474                           
  3475                           ;teclado.c: 62:     if (!ret)ret = 255;
  3476  005836  500C               	movf	tc_tecla@ret^0,w,c
  3477  005838  A4D8               	btfss	status,2,c
  3478  00583A  EF21  F02C         	goto	u5351
  3479  00583E  EF23  F02C         	goto	u5350
  3480  005842                     u5351:
  3481  005842  EF24  F02C         	goto	l4476
  3482  005846                     u5350:
  3483  005846  680C               	setf	tc_tecla@ret^0,c
  3484  005848                     l4476:
  3485                           
  3486                           ;teclado.c: 63:     if (ret == 11)ret = 0;
  3487  005848  0E0B               	movlw	11
  3488  00584A  180C               	xorwf	tc_tecla@ret^0,w,c
  3489  00584C  A4D8               	btfss	status,2,c
  3490  00584E  EF2B  F02C         	goto	u5361
  3491  005852  EF2D  F02C         	goto	u5360
  3492  005856                     u5361:
  3493  005856  EF2F  F02C         	goto	l4480
  3494  00585A                     u5360:
  3495  00585A  0E00               	movlw	0
  3496  00585C  6E0C               	movwf	tc_tecla@ret^0,c
  3497  00585E                     l4480:
  3498                           
  3499                           ;teclado.c: 64:     (*(volatile __near unsigned char*)0xF81) = tmp;
  3500  00585E  C00B  FF81         	movff	tc_tecla@tmp,3969	;volatile
  3501                           
  3502                           ;teclado.c: 65:     return ret;
  3503  005862  500C               	movf	tc_tecla@ret^0,w,c
  3504  005864  0012               	return		;funcret
  3505  005866                     __end_of_tc_tecla:
  3506                           	callstack 0
  3507                           
  3508 ;; *************** function _sprintf *****************
  3509 ;; Defined at:
  3510 ;;		line 9 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;  s               2   74[BANK0 ] PTR unsigned char 
  3513 ;;		 -> ver_quantidade@y(8), esvaziar_tanque@y(8), encher_tanque@y(8), 
  3514 ;;  fmt             2   76[BANK0 ] PTR const unsigned char 
  3515 ;;		 -> STR_28(5), STR_22(5), STR_12(5), 
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;  f               6   86[BANK0 ] struct _IO_FILE
  3518 ;;  ap              2   84[BANK0 ] PTR void [1]
  3519 ;;		 -> ?_sprintf(2), 
  3520 ;;  ret             2    0        int 
  3521 ;; Return value:  Size  Location     Type
  3522 ;;                  2   74[BANK0 ] int 
  3523 ;; Registers used:
  3524 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3525 ;; Tracked objects:
  3526 ;;		On entry : 0/0
  3527 ;;		On exit  : 0/0
  3528 ;;		Unchanged: 0/0
  3529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3530 ;;      Params:         0       8       0       0       0       0       0
  3531 ;;      Locals:         0      10       0       0       0       0       0
  3532 ;;      Temps:          0       0       0       0       0       0       0
  3533 ;;      Totals:         0      18       0       0       0       0       0
  3534 ;;Total ram usage:       18 bytes
  3535 ;; Hardware stack levels used:    1
  3536 ;; Hardware stack levels required when called:    7
  3537 ;; This function calls:
  3538 ;;		_vfprintf
  3539 ;; This function is called by:
  3540 ;;		_encher_tanque
  3541 ;;		_esvaziar_tanque
  3542 ;;		_ver_quantidade
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546                           	psect	text6
  3547  004588                     __ptext6:
  3548                           	callstack 0
  3549  004588                     _sprintf:
  3550                           	callstack 22
  3551  004588  0ECE               	movlw	low (?_sprintf+4)
  3552  00458A  0100               	movlb	0	; () banked
  3553  00458C  6FD4               	movwf	sprintf@ap& (0+255),b
  3554  00458E  0E00               	movlw	high (?_sprintf+4)
  3555  004590  6FD5               	movwf	(sprintf@ap+1)& (0+255),b
  3556  004592  C0CA  F0D6         	movff	sprintf@s,sprintf@f
  3557  004596  C0CB  F0D7         	movff	sprintf@s+1,sprintf@f+1
  3558  00459A                     
  3559                           ; BSR set to: 0
  3560  00459A  0E00               	movlw	0
  3561  00459C  6FD9               	movwf	(sprintf@f+3)& (0+255),b
  3562  00459E  0E00               	movlw	0
  3563  0045A0  6FD8               	movwf	(sprintf@f+2)& (0+255),b
  3564  0045A2                     
  3565                           ; BSR set to: 0
  3566  0045A2  0E00               	movlw	0
  3567  0045A4  6FDB               	movwf	(sprintf@f+5)& (0+255),b
  3568  0045A6  0E00               	movlw	0
  3569  0045A8  6FDA               	movwf	(sprintf@f+4)& (0+255),b
  3570  0045AA                     
  3571                           ; BSR set to: 0
  3572  0045AA  0ED6               	movlw	low sprintf@f
  3573  0045AC  6FC4               	movwf	vfprintf@fp& (0+255),b
  3574  0045AE  0E00               	movlw	high sprintf@f
  3575  0045B0  6FC5               	movwf	(vfprintf@fp+1)& (0+255),b
  3576  0045B2  C0CC  F0C6         	movff	sprintf@fmt,vfprintf@fmt
  3577  0045B6  C0CD  F0C7         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3578  0045BA  0ED4               	movlw	low sprintf@ap
  3579  0045BC  6FC8               	movwf	vfprintf@ap& (0+255),b
  3580  0045BE  0E00               	movlw	high sprintf@ap
  3581  0045C0  6FC9               	movwf	(vfprintf@ap+1)& (0+255),b
  3582  0045C2  EC79  F023         	call	_vfprintf	;wreg free
  3583  0045C6  0100               	movlb	0	; () banked
  3584  0045C8  51D8               	movf	(sprintf@f+2)& (0+255),w,b
  3585  0045CA  25CA               	addwf	sprintf@s& (0+255),w,b
  3586  0045CC  6ED9               	movwf	fsr2l,c
  3587  0045CE  51D9               	movf	(sprintf@f+3)& (0+255),w,b
  3588  0045D0  21CB               	addwfc	(sprintf@s+1)& (0+255),w,b
  3589  0045D2  6EDA               	movwf	fsr2h,c
  3590  0045D4  0E00               	movlw	0
  3591  0045D6  6EDF               	movwf	indf2,c
  3592  0045D8                     
  3593                           ; BSR set to: 0
  3594  0045D8  0012               	return		;funcret
  3595  0045DA                     __end_of_sprintf:
  3596                           	callstack 0
  3597                           
  3598 ;; *************** function _vfprintf *****************
  3599 ;; Defined at:
  3600 ;;		line 1368 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3601 ;; Parameters:    Size  Location     Type
  3602 ;;  fp              2   68[BANK0 ] PTR struct _IO_FILE
  3603 ;;		 -> sprintf@f(6), 
  3604 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  3605 ;;		 -> STR_28(5), STR_22(5), STR_12(5), 
  3606 ;;  ap              2   72[BANK0 ] PTR PTR void 
  3607 ;;		 -> sprintf@ap(2), 
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;  cfmt            2  122[COMRAM] PTR unsigned char 
  3610 ;;		 -> STR_28(5), STR_22(5), STR_12(5), 
  3611 ;; Return value:  Size  Location     Type
  3612 ;;                  2   68[BANK0 ] int 
  3613 ;; Registers used:
  3614 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3615 ;; Tracked objects:
  3616 ;;		On entry : 0/0
  3617 ;;		On exit  : 0/0
  3618 ;;		Unchanged: 0/0
  3619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3620 ;;      Params:         0       6       0       0       0       0       0
  3621 ;;      Locals:         2       0       0       0       0       0       0
  3622 ;;      Temps:          0       0       0       0       0       0       0
  3623 ;;      Totals:         2       6       0       0       0       0       0
  3624 ;;Total ram usage:        8 bytes
  3625 ;; Hardware stack levels used:    1
  3626 ;; Hardware stack levels required when called:    6
  3627 ;; This function calls:
  3628 ;;		_vfpfcnvrt
  3629 ;; This function is called by:
  3630 ;;		_sprintf
  3631 ;; This function uses a non-reentrant model
  3632 ;;
  3633                           
  3634                           	psect	text7
  3635  0046F2                     __ptext7:
  3636                           	callstack 0
  3637  0046F2                     _vfprintf:
  3638                           	callstack 22
  3639  0046F2                     
  3640                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprintf(FIL
      +                          E *fp, const char *fmt, va_list ap);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1369: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 13
      +                          71:     char *cfmt;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 137
      +                          3:     cfmt = (char *)fmt;
  3641  0046F2  C0C6  F07B         	movff	vfprintf@fmt,vfprintf@cfmt
  3642  0046F6  C0C7  F07C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3643  0046FA                     
  3644                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 0;
  3645  0046FA  0E00               	movlw	0
  3646  0046FC  0100               	movlb	0	; () banked
  3647  0046FE  6FED               	movwf	(_nout+1)& (0+255),b
  3648  004700  0E00               	movlw	0
  3649  004702  6FEC               	movwf	_nout& (0+255),b
  3650                           
  3651                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt
      +                          ) {
  3652  004704  EF97  F023         	goto	l4386
  3653  004708                     l4384:
  3654                           
  3655                           ; BSR set to: 0
  3656                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nout += 
      +                          vfpfcnvrt(fp, &cfmt, ap);
  3657  004708  C0C4  F071         	movff	vfprintf@fp,vfpfcnvrt@fp
  3658  00470C  C0C5  F072         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3659  004710  0E7B               	movlw	low vfprintf@cfmt
  3660  004712  6E73               	movwf	vfpfcnvrt@fmt^0,c
  3661  004714  0E00               	movlw	high vfprintf@cfmt
  3662  004716  6E74               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3663  004718  C0C8  F075         	movff	vfprintf@ap,vfpfcnvrt@ap
  3664  00471C  C0C9  F076         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3665  004720  EC58  F032         	call	_vfpfcnvrt	;wreg free
  3666  004724  5071               	movf	?_vfpfcnvrt^0,w,c
  3667  004726  0100               	movlb	0	; () banked
  3668  004728  27EC               	addwf	_nout& (0+255),f,b
  3669  00472A  5072               	movf	(?_vfpfcnvrt+1)^0,w,c
  3670  00472C  23ED               	addwfc	(_nout+1)& (0+255),f,b
  3671  00472E                     l4386:
  3672                           
  3673                           ; BSR set to: 0
  3674                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt
      +                          ) {
  3675  00472E  C07B  FFF6         	movff	vfprintf@cfmt,tblptrl
  3676  004732  C07C  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3677  004736                     	if	0	;tblptru may be non-zero
  3678  004736                     	endif
  3679  004736                     	if	0	;tblptru may be non-zero
  3680  004736                     	endif
  3681  004736  0008               	tblrd		*
  3682  004738  50F5               	movf	tablat,w,c
  3683  00473A  0900               	iorlw	0
  3684  00473C  A4D8               	btfss	status,2,c
  3685  00473E  EFA3  F023         	goto	u5151
  3686  004742  EFA5  F023         	goto	u5150
  3687  004746                     u5151:
  3688  004746  EF84  F023         	goto	l4384
  3689  00474A                     u5150:
  3690  00474A                     
  3691                           ; BSR set to: 0
  3692                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return nout;
  3693  00474A  C0EC  F0C4         	movff	_nout,?_vfprintf
  3694  00474E  C0ED  F0C5         	movff	_nout+1,?_vfprintf+1
  3695  004752                     
  3696                           ; BSR set to: 0
  3697  004752  0012               	return		;funcret
  3698  004754                     __end_of_vfprintf:
  3699                           	callstack 0
  3700                           
  3701 ;; *************** function _vfpfcnvrt *****************
  3702 ;; Defined at:
  3703 ;;		line 670 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;  fp              2  112[COMRAM] PTR struct _IO_FILE
  3706 ;;		 -> sprintf@f(6), 
  3707 ;;  fmt             2  114[COMRAM] PTR PTR unsigned char 
  3708 ;;		 -> vfprintf@cfmt(2), 
  3709 ;;  ap              2  116[COMRAM] PTR PTR void 
  3710 ;;		 -> sprintf@ap(2), 
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;  llu             8    0        unsigned long long 
  3713 ;;  ll              8    0        long long 
  3714 ;;  f               4   60[BANK0 ] long long 
  3715 ;;  ct              3   64[BANK0 ] unsigned char [3]
  3716 ;;  vp              3    0        PTR void 
  3717 ;;  cp              3    0        PTR unsigned char 
  3718 ;;  i               2    0        int 
  3719 ;;  done            2    0        int 
  3720 ;;  c               1   67[BANK0 ] unsigned char 
  3721 ;; Return value:  Size  Location     Type
  3722 ;;                  2  112[COMRAM] int 
  3723 ;; Registers used:
  3724 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3730 ;;      Params:         6       0       0       0       0       0       0
  3731 ;;      Locals:         0      12       0       0       0       0       0
  3732 ;;      Temps:          4       0       0       0       0       0       0
  3733 ;;      Totals:        10      12       0       0       0       0       0
  3734 ;;Total ram usage:       22 bytes
  3735 ;; Hardware stack levels used:    1
  3736 ;; Hardware stack levels required when called:    5
  3737 ;; This function calls:
  3738 ;;		_atoi
  3739 ;;		_efgtoa
  3740 ;;		_fputc
  3741 ;;		_isdigit
  3742 ;;		_isupper
  3743 ;;		_strncmp
  3744 ;;		_tolower
  3745 ;; This function is called by:
  3746 ;;		_vfprintf
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750                           	psect	text8
  3751  0064B0                     __ptext8:
  3752                           	callstack 0
  3753  0064B0                     _vfpfcnvrt:
  3754                           	callstack 22
  3755  0064B0                     
  3756                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int vfpfcn
      +                          vrt(FILE *fp, char *fmt[], va_list ap);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\c
      +                          ommon\doprnt.c: 671: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          672:     char c, *cp, ct[3];;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\dopr
      +                          nt.c: 673:     int done, i;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 674:     long long ll;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 675:     unsigned long long llu;
  3757  0064B0  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3758  0064B4  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3759  0064B8  CFDE FFF6          	movff	postinc2,tblptrl
  3760  0064BC  CFDD FFF7          	movff	postdec2,tblptrh
  3761  0064C0                     	if	0	;tblptru may be non-zero
  3762  0064C0                     	endif
  3763  0064C0                     	if	0	;tblptru may be non-zero
  3764  0064C0                     	endif
  3765  0064C0  0008               	tblrd		*
  3766  0064C2  50F5               	movf	tablat,w,c
  3767  0064C4  0A25               	xorlw	37
  3768  0064C6  A4D8               	btfss	status,2,c
  3769  0064C8  EF68  F032         	goto	u4981
  3770  0064CC  EF6A  F032         	goto	u4980
  3771  0064D0                     u4981:
  3772  0064D0  EF71  F034         	goto	l4336
  3773  0064D4                     u4980:
  3774  0064D4                     
  3775                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*fmt;
  3776  0064D4  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3777  0064D8  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3778  0064DC  2ADE               	incf	postinc2,f,c
  3779  0064DE  0E00               	movlw	0
  3780  0064E0  22DD               	addwfc	postdec2,f,c
  3781  0064E2                     
  3782                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flags = w
      +                          idth = 0;
  3783  0064E2  0E00               	movlw	0
  3784  0064E4  0100               	movlb	0	; () banked
  3785  0064E6  6FEF               	movwf	(_width+1)& (0+255),b
  3786  0064E8  0E00               	movlw	0
  3787  0064EA  6FEE               	movwf	_width& (0+255),b
  3788  0064EC  C0EE  F0F2         	movff	_width,_flags
  3789  0064F0  C0EF  F0F3         	movff	_width+1,_flags+1
  3790  0064F4                     
  3791                           ; BSR set to: 0
  3792                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec = -1
      +                          ;
  3793  0064F4  69F0               	setf	_prec& (0+255),b
  3794  0064F6  69F1               	setf	(_prec+1)& (0+255),b
  3795  0064F8                     
  3796                           ; BSR set to: 0
  3797                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if ((*fmt
      +                          )[0] == '.') {
  3798  0064F8  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3799  0064FC  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3800  006500  CFDE FFF6          	movff	postinc2,tblptrl
  3801  006504  CFDD FFF7          	movff	postdec2,tblptrh
  3802  006508                     	if	0	;tblptru may be non-zero
  3803  006508                     	endif
  3804  006508                     	if	0	;tblptru may be non-zero
  3805  006508                     	endif
  3806  006508  0008               	tblrd		*
  3807  00650A  50F5               	movf	tablat,w,c
  3808  00650C  0A2E               	xorlw	46
  3809  00650E  A4D8               	btfss	status,2,c
  3810  006510  EF8C  F032         	goto	u4991
  3811  006514  EF8E  F032         	goto	u4990
  3812  006518                     u4991:
  3813  006518  EF0C  F033         	goto	l4282
  3814  00651C                     u4990:
  3815  00651C                     
  3816                           ; BSR set to: 0
  3817                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             prec 
      +                          = 0;
  3818  00651C  0E00               	movlw	0
  3819  00651E  6FF1               	movwf	(_prec+1)& (0+255),b
  3820  006520  0E00               	movlw	0
  3821  006522  6FF0               	movwf	_prec& (0+255),b
  3822  006524                     
  3823                           ; BSR set to: 0
  3824                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             ++*fm
      +                          t;
  3825  006524  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3826  006528  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3827  00652C  2ADE               	incf	postinc2,f,c
  3828  00652E  0E00               	movlw	0
  3829  006530  22DD               	addwfc	postdec2,f,c
  3830  006532                     
  3831                           ; BSR set to: 0
  3832                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             if ((
      +                          *fmt)[0] == '*') {
  3833  006532  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3834  006536  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3835  00653A  CFDE FFF6          	movff	postinc2,tblptrl
  3836  00653E  CFDD FFF7          	movff	postdec2,tblptrh
  3837  006542                     	if	0	;tblptru may be non-zero
  3838  006542                     	endif
  3839  006542                     	if	0	;tblptru may be non-zero
  3840  006542                     	endif
  3841  006542  0008               	tblrd		*
  3842  006544  50F5               	movf	tablat,w,c
  3843  006546  0A2A               	xorlw	42
  3844  006548  A4D8               	btfss	status,2,c
  3845  00654A  EFA9  F032         	goto	u5001
  3846  00654E  EFAB  F032         	goto	u5000
  3847  006552                     u5001:
  3848  006552  EFC8  F032         	goto	l4272
  3849  006556                     u5000:
  3850  006556                     
  3851                           ; BSR set to: 0
  3852                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:                 +
      +                          +*fmt;
  3853  006556  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3854  00655A  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3855  00655E  2ADE               	incf	postinc2,f,c
  3856  006560  0E00               	movlw	0
  3857  006562  22DD               	addwfc	postdec2,f,c
  3858                           
  3859                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:                 p
      +                          rec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3860  006564  C075  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3861  006568  C076  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3862  00656C  CFDF F077          	movff	indf2,??_vfpfcnvrt
  3863  006570  0E02               	movlw	2
  3864  006572  26DE               	addwf	postinc2,f,c
  3865  006574  CFDF F078          	movff	indf2,??_vfpfcnvrt+1
  3866  006578  0E00               	movlw	0
  3867  00657A  22DD               	addwfc	postdec2,f,c
  3868  00657C  C077  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3869  006580  C078  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3870  006584  CFDE F0F0          	movff	postinc2,_prec
  3871  006588  CFDD F0F1          	movff	postdec2,_prec+1
  3872                           
  3873                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             } els
      +                          e {
  3874  00658C  EF0C  F033         	goto	l4282
  3875  006590                     l4272:
  3876                           
  3877                           ; BSR set to: 0
  3878                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:                 p
      +                          rec = atoi(*fmt);
  3879  006590  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3880  006594  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3881  006598  CFDE F008          	movff	postinc2,atoi@s
  3882  00659C  CFDD F009          	movff	postdec2,atoi@s+1
  3883  0065A0  ECAC  F029         	call	_atoi	;wreg free
  3884  0065A4  C008  F0F0         	movff	?_atoi,_prec
  3885  0065A8  C009  F0F1         	movff	?_atoi+1,_prec+1
  3886                           
  3887                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:                 w
      +                          hile ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3888  0065AC  EFDF  F032         	goto	l4276
  3889  0065B0                     l4274:
  3890                           
  3891                           ; BSR set to: 0
  3892                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:                  
      +                             ++*fmt;
  3893  0065B0  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3894  0065B4  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3895  0065B8  2ADE               	incf	postinc2,f,c
  3896  0065BA  0E00               	movlw	0
  3897  0065BC  22DD               	addwfc	postdec2,f,c
  3898  0065BE                     l4276:
  3899  0065BE  0ED0               	movlw	208
  3900  0065C0  6E77               	movwf	??_vfpfcnvrt^0,c
  3901  0065C2  0EFF               	movlw	255
  3902  0065C4  6E78               	movwf	(??_vfpfcnvrt+1)^0,c
  3903  0065C6  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3904  0065CA  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3905  0065CE  CFDE FFF6          	movff	postinc2,tblptrl
  3906  0065D2  CFDD FFF7          	movff	postdec2,tblptrh
  3907  0065D6                     	if	0	;tblptru may be non-zero
  3908  0065D6                     	endif
  3909  0065D6                     	if	0	;tblptru may be non-zero
  3910  0065D6                     	endif
  3911  0065D6  0008               	tblrd		*
  3912  0065D8  50F5               	movf	tablat,w,c
  3913  0065DA  6E79               	movwf	(??_vfpfcnvrt+2)^0,c
  3914  0065DC  6A7A               	clrf	(??_vfpfcnvrt+3)^0,c
  3915  0065DE  5077               	movf	??_vfpfcnvrt^0,w,c
  3916  0065E0  2679               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3917  0065E2  5078               	movf	(??_vfpfcnvrt+1)^0,w,c
  3918  0065E4  227A               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3919  0065E6  507A               	movf	(??_vfpfcnvrt+3)^0,w,c
  3920  0065E8  E10A               	bnz	u5010
  3921  0065EA  0E0A               	movlw	10
  3922  0065EC  5C79               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3923  0065EE  A0D8               	btfss	status,0,c
  3924  0065F0  EFFC  F032         	goto	u5011
  3925  0065F4  EFFF  F032         	goto	u5010
  3926  0065F8                     u5011:
  3927  0065F8  0E01               	movlw	1
  3928  0065FA  EF00  F033         	goto	u5020
  3929  0065FE                     u5010:
  3930  0065FE  0E00               	movlw	0
  3931  006600                     u5020:
  3932  006600  0100               	movlb	0	; () banked
  3933  006602  6FB8               	movwf	_vfpfcnvrt$788& (0+255),b
  3934  006604  6BB9               	clrf	(_vfpfcnvrt$788+1)& (0+255),b
  3935  006606                     
  3936                           ; BSR set to: 0
  3937  006606  51B8               	movf	_vfpfcnvrt$788& (0+255),w,b
  3938  006608  11B9               	iorwf	(_vfpfcnvrt$788+1)& (0+255),w,b
  3939  00660A  A4D8               	btfss	status,2,c
  3940  00660C  EF0A  F033         	goto	u5031
  3941  006610  EF0C  F033         	goto	u5030
  3942  006614                     u5031:
  3943  006614  EFD8  F032         	goto	l4274
  3944  006618                     u5030:
  3945  006618                     l4282:
  3946                           
  3947                           ; BSR set to: 0
  3948                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0] = t
      +                          olower((int)(*fmt)[0]);
  3949  006618  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3950  00661C  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3951  006620  CFDE FFF6          	movff	postinc2,tblptrl
  3952  006624  CFDD FFF7          	movff	postdec2,tblptrh
  3953  006628                     	if	0	;tblptru may be non-zero
  3954  006628                     	endif
  3955  006628                     	if	0	;tblptru may be non-zero
  3956  006628                     	endif
  3957  006628  0008               	tblrd		*
  3958  00662A  50F5               	movf	tablat,w,c
  3959  00662C  6E07               	movwf	tolower@c^0,c
  3960  00662E  6A08               	clrf	(tolower@c+1)^0,c
  3961  006630  EC49  F023         	call	_tolower	;wreg free
  3962  006634  5007               	movf	?_tolower^0,w,c
  3963  006636  0100               	movlb	0	; () banked
  3964  006638  6FC0               	movwf	vfpfcnvrt@ct& (0+255),b
  3965  00663A                     
  3966                           ; BSR set to: 0
  3967                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (ct[0]
      +                          ) {
  3968  00663A  51C0               	movf	vfpfcnvrt@ct& (0+255),w,b
  3969  00663C  B4D8               	btfsc	status,2,c
  3970  00663E  EF23  F033         	goto	u5041
  3971  006642  EF25  F033         	goto	u5040
  3972  006646                     u5041:
  3973  006646  EF5F  F033         	goto	l4292
  3974  00664A                     u5040:
  3975  00664A                     
  3976                           ; BSR set to: 0
  3977                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             ct[1]
      +                           = tolower((int)(*fmt)[1]);
  3978  00664A  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3979  00664E  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3980  006652  CFDE F077          	movff	postinc2,??_vfpfcnvrt
  3981  006656  CFDD F078          	movff	postdec2,??_vfpfcnvrt+1
  3982  00665A  0E01               	movlw	1
  3983  00665C  2677               	addwf	??_vfpfcnvrt^0,f,c
  3984  00665E  0E00               	movlw	0
  3985  006660  2278               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3986  006662  C077  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3987  006666  C078  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3988  00666A                     	if	0	;tblptru may be non-zero
  3989  00666A                     	endif
  3990  00666A                     	if	0	;tblptru may be non-zero
  3991  00666A                     	endif
  3992  00666A  0008               	tblrd		*
  3993  00666C  50F5               	movf	tablat,w,c
  3994  00666E  6E07               	movwf	tolower@c^0,c
  3995  006670  6A08               	clrf	(tolower@c+1)^0,c
  3996  006672  EC49  F023         	call	_tolower	;wreg free
  3997  006676  5007               	movf	?_tolower^0,w,c
  3998  006678  0100               	movlb	0	; () banked
  3999  00667A  6FC1               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  4000  00667C                     
  4001                           ; BSR set to: 0
  4002                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             if (c
      +                          t[1]) {
  4003  00667C  51C1               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  4004  00667E  B4D8               	btfsc	status,2,c
  4005  006680  EF44  F033         	goto	u5051
  4006  006684  EF46  F033         	goto	u5050
  4007  006688                     u5051:
  4008  006688  EF5F  F033         	goto	l4292
  4009  00668C                     u5050:
  4010  00668C                     
  4011                           ; BSR set to: 0
  4012                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:                 c
      +                          t[2] = tolower((int)(*fmt)[2]);
  4013  00668C  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4014  006690  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4015  006694  CFDE F077          	movff	postinc2,??_vfpfcnvrt
  4016  006698  CFDD F078          	movff	postdec2,??_vfpfcnvrt+1
  4017  00669C  0E02               	movlw	2
  4018  00669E  2677               	addwf	??_vfpfcnvrt^0,f,c
  4019  0066A0  0E00               	movlw	0
  4020  0066A2  2278               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4021  0066A4  C077  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4022  0066A8  C078  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4023  0066AC                     	if	0	;tblptru may be non-zero
  4024  0066AC                     	endif
  4025  0066AC                     	if	0	;tblptru may be non-zero
  4026  0066AC                     	endif
  4027  0066AC  0008               	tblrd		*
  4028  0066AE  50F5               	movf	tablat,w,c
  4029  0066B0  6E07               	movwf	tolower@c^0,c
  4030  0066B2  6A08               	clrf	(tolower@c+1)^0,c
  4031  0066B4  EC49  F023         	call	_tolower	;wreg free
  4032  0066B8  5007               	movf	?_tolower^0,w,c
  4033  0066BA  0100               	movlb	0	; () banked
  4034  0066BC  6FC2               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4035  0066BE                     l4292:
  4036                           
  4037                           ; BSR set to: 0
  4038                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (ct[0]
      +                           == 'f') {
  4039  0066BE  0E66               	movlw	102
  4040  0066C0  19C0               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  4041  0066C2  A4D8               	btfss	status,2,c
  4042  0066C4  EF66  F033         	goto	u5061
  4043  0066C8  EF68  F033         	goto	u5060
  4044  0066CC                     u5061:
  4045  0066CC  EFA8  F033         	goto	l4304
  4046  0066D0                     u5060:
  4047  0066D0                     
  4048                           ; BSR set to: 0
  4049                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             c = (
      +                          *fmt)[0];
  4050  0066D0  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4051  0066D4  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4052  0066D8  CFDE FFF6          	movff	postinc2,tblptrl
  4053  0066DC  CFDD FFF7          	movff	postdec2,tblptrh
  4054  0066E0                     	if	0	;tblptru may be non-zero
  4055  0066E0                     	endif
  4056  0066E0                     	if	0	;tblptru may be non-zero
  4057  0066E0                     	endif
  4058  0066E0  0008               	tblrd		*
  4059  0066E2  CFF5 F0C3          	movff	tablat,vfpfcnvrt@c
  4060  0066E6                     
  4061                           ; BSR set to: 0
  4062                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             ++*fm
      +                          t;
  4063  0066E6  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4064  0066EA  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4065  0066EE  2ADE               	incf	postinc2,f,c
  4066  0066F0  0E00               	movlw	0
  4067  0066F2  22DD               	addwfc	postdec2,f,c
  4068  0066F4                     
  4069                           ; BSR set to: 0
  4070                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             f = (
      +                          long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4071  0066F4  C075  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4072  0066F8  C076  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4073  0066FC  CFDF F077          	movff	indf2,??_vfpfcnvrt
  4074  006700  0E04               	movlw	4
  4075  006702  26DE               	addwf	postinc2,f,c
  4076  006704  CFDF F078          	movff	indf2,??_vfpfcnvrt+1
  4077  006708  0E00               	movlw	0
  4078  00670A  22DD               	addwfc	postdec2,f,c
  4079  00670C  C077  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4080  006710  C078  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4081  006714  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f
  4082  006718  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+1
  4083  00671C  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f+2
  4084  006720  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+3
  4085  006724                     l4300:
  4086                           
  4087                           ; BSR set to: 0
  4088                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             retur
      +                          n efgtoa(fp, f, c);
  4089  006724  C071  F065         	movff	vfpfcnvrt@fp,efgtoa@fp
  4090  006728  C072  F066         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4091  00672C  C0BC  F067         	movff	vfpfcnvrt@f,efgtoa@f
  4092  006730  C0BD  F068         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  4093  006734  C0BE  F069         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  4094  006738  C0BF  F06A         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  4095  00673C  C0C3  F06B         	movff	vfpfcnvrt@c,efgtoa@c
  4096  006740  ECA5  F039         	call	_efgtoa	;wreg free
  4097  006744  C065  F071         	movff	?_efgtoa,?_vfpfcnvrt
  4098  006748  C066  F072         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4099  00674C  EF8C  F034         	goto	l1044
  4100  006750                     l4304:
  4101                           
  4102                           ; BSR set to: 0
  4103                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (!strn
      +                          cmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  4104  006750  0EC0               	movlw	low vfpfcnvrt@ct
  4105  006752  6E01               	movwf	strncmp@_l^0,c
  4106  006754  0E00               	movlw	high vfpfcnvrt@ct
  4107  006756  6E02               	movwf	(strncmp@_l+1)^0,c
  4108  006758  0EF8               	movlw	low STR_40
  4109  00675A  6E03               	movwf	strncmp@_r^0,c
  4110  00675C  0E7F               	movlw	high STR_40
  4111  00675E  6E04               	movwf	(strncmp@_r+1)^0,c
  4112  006760  0E00               	movlw	0
  4113  006762  6E06               	movwf	(strncmp@n+1)^0,c
  4114  006764  0E02               	movlw	2
  4115  006766  6E05               	movwf	strncmp@n^0,c
  4116  006768  EC90  F026         	call	_strncmp	;wreg free
  4117  00676C  5001               	movf	?_strncmp^0,w,c
  4118  00676E  1002               	iorwf	(?_strncmp+1)^0,w,c
  4119  006770  A4D8               	btfss	status,2,c
  4120  006772  EFBD  F033         	goto	u5071
  4121  006776  EFBF  F033         	goto	u5070
  4122  00677A                     u5071:
  4123  00677A  EF3B  F034         	goto	l4320
  4124  00677E                     u5070:
  4125  00677E                     
  4126                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             if ((
      +                          0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  4127  00677E  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4128  006782  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4129  006786  CFDE F077          	movff	postinc2,??_vfpfcnvrt
  4130  00678A  CFDD F078          	movff	postdec2,??_vfpfcnvrt+1
  4131  00678E  0E01               	movlw	1
  4132  006790  2677               	addwf	??_vfpfcnvrt^0,f,c
  4133  006792  0E00               	movlw	0
  4134  006794  2278               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4135  006796  C077  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4136  00679A  C078  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4137  00679E                     	if	0	;tblptru may be non-zero
  4138  00679E                     	endif
  4139  00679E                     	if	0	;tblptru may be non-zero
  4140  00679E                     	endif
  4141  00679E  0008               	tblrd		*
  4142  0067A0  CFF5 F0C3          	movff	tablat,vfpfcnvrt@c
  4143  0067A4  0EBF               	movlw	191
  4144  0067A6  6E77               	movwf	??_vfpfcnvrt^0,c
  4145  0067A8  0EFF               	movlw	255
  4146  0067AA  6E78               	movwf	(??_vfpfcnvrt+1)^0,c
  4147  0067AC  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4148  0067B0  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4149  0067B4  CFDE FFF6          	movff	postinc2,tblptrl
  4150  0067B8  CFDD FFF7          	movff	postdec2,tblptrh
  4151  0067BC                     	if	0	;tblptru may be non-zero
  4152  0067BC                     	endif
  4153  0067BC                     	if	0	;tblptru may be non-zero
  4154  0067BC                     	endif
  4155  0067BC  0008               	tblrd		*
  4156  0067BE  50F5               	movf	tablat,w,c
  4157  0067C0  6E79               	movwf	(??_vfpfcnvrt+2)^0,c
  4158  0067C2  6A7A               	clrf	(??_vfpfcnvrt+3)^0,c
  4159  0067C4  5077               	movf	??_vfpfcnvrt^0,w,c
  4160  0067C6  2679               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4161  0067C8  5078               	movf	(??_vfpfcnvrt+1)^0,w,c
  4162  0067CA  227A               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4163  0067CC  507A               	movf	(??_vfpfcnvrt+3)^0,w,c
  4164  0067CE  E10A               	bnz	u5080
  4165  0067D0  0E1A               	movlw	26
  4166  0067D2  5C79               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4167  0067D4  A0D8               	btfss	status,0,c
  4168  0067D6  EFEF  F033         	goto	u5081
  4169  0067DA  EFF2  F033         	goto	u5080
  4170  0067DE                     u5081:
  4171  0067DE  0E01               	movlw	1
  4172  0067E0  EFF3  F033         	goto	u5090
  4173  0067E4                     u5080:
  4174  0067E4  0E00               	movlw	0
  4175  0067E6                     u5090:
  4176  0067E6  0100               	movlb	0	; () banked
  4177  0067E8  6FBA               	movwf	_vfpfcnvrt$792& (0+255),b
  4178  0067EA  6BBB               	clrf	(_vfpfcnvrt$792+1)& (0+255),b
  4179  0067EC                     
  4180                           ; BSR set to: 0
  4181  0067EC  51BA               	movf	_vfpfcnvrt$792& (0+255),w,b
  4182  0067EE  11BB               	iorwf	(_vfpfcnvrt$792+1)& (0+255),w,b
  4183  0067F0  B4D8               	btfsc	status,2,c
  4184  0067F2  EFFD  F033         	goto	u5101
  4185  0067F6  EFFF  F033         	goto	u5100
  4186  0067FA                     u5101:
  4187  0067FA  EF19  F034         	goto	l4314
  4188  0067FE                     u5100:
  4189  0067FE                     
  4190                           ; BSR set to: 0
  4191                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:                 f
      +                           = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4192  0067FE  C075  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4193  006802  C076  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4194  006806  CFDF F077          	movff	indf2,??_vfpfcnvrt
  4195  00680A  0E04               	movlw	4
  4196  00680C  26DE               	addwf	postinc2,f,c
  4197  00680E  CFDF F078          	movff	indf2,??_vfpfcnvrt+1
  4198  006812  0E00               	movlw	0
  4199  006814  22DD               	addwfc	postdec2,f,c
  4200  006816  C077  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4201  00681A  C078  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4202  00681E  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f
  4203  006822  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+1
  4204  006826  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f+2
  4205  00682A  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+3
  4206                           
  4207                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             } els
      +                          e {
  4208  00682E  EF31  F034         	goto	l1051
  4209  006832                     l4314:
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:                 f
      +                           = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4213  006832  C075  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4214  006836  C076  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4215  00683A  CFDF F077          	movff	indf2,??_vfpfcnvrt
  4216  00683E  0E04               	movlw	4
  4217  006840  26DE               	addwf	postinc2,f,c
  4218  006842  CFDF F078          	movff	indf2,??_vfpfcnvrt+1
  4219  006846  0E00               	movlw	0
  4220  006848  22DD               	addwfc	postdec2,f,c
  4221  00684A  C077  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4222  00684E  C078  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4223  006852  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f
  4224  006856  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+1
  4225  00685A  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f+2
  4226  00685E  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+3
  4227  006862                     l1051:
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             *fmt 
      +                          += ((sizeof("lf")/sizeof("lf"[0]))-1);
  4231  006862  0E02               	movlw	2
  4232  006864  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4233  006868  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4234  00686C  26DE               	addwf	postinc2,f,c
  4235  00686E  0E00               	movlw	0
  4236  006870  22DD               	addwfc	postdec2,f,c
  4237  006872  EF92  F033         	goto	l4300
  4238  006876                     l4320:
  4239                           
  4240                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if ((*fm
      +                          t)[0] == '%') {
  4241  006876  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4242  00687A  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4243  00687E  CFDE FFF6          	movff	postinc2,tblptrl
  4244  006882  CFDD FFF7          	movff	postdec2,tblptrh
  4245  006886                     	if	0	;tblptru may be non-zero
  4246  006886                     	endif
  4247  006886                     	if	0	;tblptru may be non-zero
  4248  006886                     	endif
  4249  006886  0008               	tblrd		*
  4250  006888  50F5               	movf	tablat,w,c
  4251  00688A  0A25               	xorlw	37
  4252  00688C  A4D8               	btfss	status,2,c
  4253  00688E  EF4B  F034         	goto	u5111
  4254  006892  EF4D  F034         	goto	u5110
  4255  006896                     u5111:
  4256  006896  EF64  F034         	goto	l4330
  4257  00689A                     u5110:
  4258  00689A                     
  4259                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:             ++*f
      +                          mt;
  4260  00689A  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4261  00689E  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4262  0068A2  2ADE               	incf	postinc2,f,c
  4263  0068A4  0E00               	movlw	0
  4264  0068A6  22DD               	addwfc	postdec2,f,c
  4265  0068A8                     
  4266                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:             fput
      +                          c((int)'%', fp);
  4267  0068A8  0E00               	movlw	0
  4268  0068AA  6E02               	movwf	(fputc@c+1)^0,c
  4269  0068AC  0E25               	movlw	37
  4270  0068AE  6E01               	movwf	fputc@c^0,c
  4271  0068B0  C071  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4272  0068B4  C072  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4273  0068B8  EC2B  F026         	call	_fputc	;wreg free
  4274  0068BC                     l4326:
  4275                           
  4276                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:             retu
      +                          rn 1;
  4277  0068BC  0E00               	movlw	0
  4278  0068BE  6E72               	movwf	(?_vfpfcnvrt+1)^0,c
  4279  0068C0  0E01               	movlw	1
  4280  0068C2  6E71               	movwf	?_vfpfcnvrt^0,c
  4281  0068C4  EF8C  F034         	goto	l1044
  4282  0068C8                     l4330:
  4283                           
  4284                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*fmt;
  4285  0068C8  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4286  0068CC  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4287  0068D0  2ADE               	incf	postinc2,f,c
  4288  0068D2  0E00               	movlw	0
  4289  0068D4  22DD               	addwfc	postdec2,f,c
  4290  0068D6                     
  4291                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         return 0
      +                          ;
  4292  0068D6  0E00               	movlw	0
  4293  0068D8  6E72               	movwf	(?_vfpfcnvrt+1)^0,c
  4294  0068DA  0E00               	movlw	0
  4295  0068DC  6E71               	movwf	?_vfpfcnvrt^0,c
  4296  0068DE  EF8C  F034         	goto	l1044
  4297  0068E2                     l4336:
  4298                           
  4299                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((int)(
      +                          *fmt)[0], fp);
  4300  0068E2  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4301  0068E6  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4302  0068EA  CFDE FFF6          	movff	postinc2,tblptrl
  4303  0068EE  CFDD FFF7          	movff	postdec2,tblptrh
  4304  0068F2                     	if	0	;tblptru may be non-zero
  4305  0068F2                     	endif
  4306  0068F2                     	if	0	;tblptru may be non-zero
  4307  0068F2                     	endif
  4308  0068F2  0008               	tblrd		*
  4309  0068F4  50F5               	movf	tablat,w,c
  4310  0068F6  6E01               	movwf	fputc@c^0,c
  4311  0068F8  6A02               	clrf	(fputc@c+1)^0,c
  4312  0068FA  C071  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4313  0068FE  C072  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4314  006902  EC2B  F026         	call	_fputc	;wreg free
  4315  006906                     
  4316                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  4317  006906  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4318  00690A  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4319  00690E  2ADE               	incf	postinc2,f,c
  4320  006910  0E00               	movlw	0
  4321  006912  22DD               	addwfc	postdec2,f,c
  4322  006914  EF5E  F034         	goto	l4326
  4323  006918                     l1044:
  4324  006918  0012               	return		;funcret
  4325  00691A                     __end_of_vfpfcnvrt:
  4326                           	callstack 0
  4327                           
  4328 ;; *************** function _strncmp *****************
  4329 ;; Defined at:
  4330 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  4331 ;; Parameters:    Size  Location     Type
  4332 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  4333 ;;		 -> vfpfcnvrt@ct(3), 
  4334 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  4335 ;;		 -> STR_42(3), 
  4336 ;;  n               2    4[COMRAM] unsigned int 
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;  r               2    9[COMRAM] PTR const unsigned char 
  4339 ;;		 -> STR_42(3), 
  4340 ;;  l               2    7[COMRAM] PTR const unsigned char 
  4341 ;;		 -> vfpfcnvrt@ct(3), 
  4342 ;; Return value:  Size  Location     Type
  4343 ;;                  2    0[COMRAM] int 
  4344 ;; Registers used:
  4345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4346 ;; Tracked objects:
  4347 ;;		On entry : 0/0
  4348 ;;		On exit  : 0/0
  4349 ;;		Unchanged: 0/0
  4350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4351 ;;      Params:         6       0       0       0       0       0       0
  4352 ;;      Locals:         4       0       0       0       0       0       0
  4353 ;;      Temps:          1       0       0       0       0       0       0
  4354 ;;      Totals:        11       0       0       0       0       0       0
  4355 ;;Total ram usage:       11 bytes
  4356 ;; Hardware stack levels used:    1
  4357 ;; This function calls:
  4358 ;;		Nothing
  4359 ;; This function is called by:
  4360 ;;		_vfpfcnvrt
  4361 ;; This function uses a non-reentrant model
  4362 ;;
  4363                           
  4364                           	psect	text9
  4365  004D20                     __ptext9:
  4366                           	callstack 0
  4367  004D20                     _strncmp:
  4368                           	callstack 26
  4369  004D20  C001  F008         	movff	strncmp@_l,strncmp@l
  4370  004D24  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  4371  004D28  C003  F00A         	movff	strncmp@_r,strncmp@r
  4372  004D2C  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  4373  004D30  0605               	decf	strncmp@n^0,f,c
  4374  004D32  A0D8               	btfss	status,0,c
  4375  004D34  0606               	decf	(strncmp@n+1)^0,f,c
  4376  004D36  2805               	incf	strncmp@n^0,w,c
  4377  004D38  E106               	bnz	u4901
  4378  004D3A  2806               	incf	(strncmp@n+1)^0,w,c
  4379  004D3C  A4D8               	btfss	status,2,c
  4380  004D3E  EFA3  F026         	goto	u4901
  4381  004D42  EFA5  F026         	goto	u4900
  4382  004D46                     u4901:
  4383  004D46  EFB2  F026         	goto	l4214
  4384  004D4A                     u4900:
  4385  004D4A  0E00               	movlw	0
  4386  004D4C  6E02               	movwf	(?_strncmp+1)^0,c
  4387  004D4E  0E00               	movlw	0
  4388  004D50  6E01               	movwf	?_strncmp^0,c
  4389  004D52  EFFA  F026         	goto	l1172
  4390  004D56                     l4212:
  4391  004D56  4A08               	infsnz	strncmp@l^0,f,c
  4392  004D58  2A09               	incf	(strncmp@l+1)^0,f,c
  4393  004D5A  4A0A               	infsnz	strncmp@r^0,f,c
  4394  004D5C  2A0B               	incf	(strncmp@r+1)^0,f,c
  4395  004D5E  0605               	decf	strncmp@n^0,f,c
  4396  004D60  A0D8               	btfss	status,0,c
  4397  004D62  0606               	decf	(strncmp@n+1)^0,f,c
  4398  004D64                     l4214:
  4399  004D64  C008  FFD9         	movff	strncmp@l,fsr2l
  4400  004D68  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4401  004D6C  50DF               	movf	indf2,w,c
  4402  004D6E  B4D8               	btfsc	status,2,c
  4403  004D70  EFBC  F026         	goto	u4911
  4404  004D74  EFBE  F026         	goto	u4910
  4405  004D78                     u4911:
  4406  004D78  EFE9  F026         	goto	l4222
  4407  004D7C                     u4910:
  4408  004D7C  C00A  FFF6         	movff	strncmp@r,tblptrl
  4409  004D80  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4410  004D84                     	if	0	;tblptru may be non-zero
  4411  004D84                     	endif
  4412  004D84                     	if	0	;tblptru may be non-zero
  4413  004D84                     	endif
  4414  004D84  0008               	tblrd		*
  4415  004D86  50F5               	movf	tablat,w,c
  4416  004D88  0900               	iorlw	0
  4417  004D8A  B4D8               	btfsc	status,2,c
  4418  004D8C  EFCA  F026         	goto	u4921
  4419  004D90  EFCC  F026         	goto	u4920
  4420  004D94                     u4921:
  4421  004D94  EFE9  F026         	goto	l4222
  4422  004D98                     u4920:
  4423  004D98  5005               	movf	strncmp@n^0,w,c
  4424  004D9A  1006               	iorwf	(strncmp@n+1)^0,w,c
  4425  004D9C  B4D8               	btfsc	status,2,c
  4426  004D9E  EFD3  F026         	goto	u4931
  4427  004DA2  EFD5  F026         	goto	u4930
  4428  004DA6                     u4931:
  4429  004DA6  EFE9  F026         	goto	l4222
  4430  004DAA                     u4930:
  4431  004DAA  C008  FFD9         	movff	strncmp@l,fsr2l
  4432  004DAE  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4433  004DB2  50DF               	movf	indf2,w,c
  4434  004DB4  6E07               	movwf	??_strncmp^0,c
  4435  004DB6  C00A  FFF6         	movff	strncmp@r,tblptrl
  4436  004DBA  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4437  004DBE                     	if	0	;tblptru may be non-zero
  4438  004DBE                     	endif
  4439  004DBE                     	if	0	;tblptru may be non-zero
  4440  004DBE                     	endif
  4441  004DBE  0008               	tblrd		*
  4442  004DC0  50F5               	movf	tablat,w,c
  4443  004DC2  1807               	xorwf	??_strncmp^0,w,c
  4444  004DC4  B4D8               	btfsc	status,2,c
  4445  004DC6  EFE7  F026         	goto	u4941
  4446  004DCA  EFE9  F026         	goto	u4940
  4447  004DCE                     u4941:
  4448  004DCE  EFAB  F026         	goto	l4212
  4449  004DD2                     u4940:
  4450  004DD2                     l4222:
  4451  004DD2  C008  FFD9         	movff	strncmp@l,fsr2l
  4452  004DD6  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4453  004DDA  50DF               	movf	indf2,w,c
  4454  004DDC  6E07               	movwf	??_strncmp^0,c
  4455  004DDE  C00A  FFF6         	movff	strncmp@r,tblptrl
  4456  004DE2  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4457  004DE6                     	if	0	;tblptru may be non-zero
  4458  004DE6                     	endif
  4459  004DE6                     	if	0	;tblptru may be non-zero
  4460  004DE6                     	endif
  4461  004DE6  0008               	tblrd		*
  4462  004DE8  50F5               	movf	tablat,w,c
  4463  004DEA  5C07               	subwf	??_strncmp^0,w,c
  4464  004DEC  6E01               	movwf	?_strncmp^0,c
  4465  004DEE  6A02               	clrf	(?_strncmp+1)^0,c
  4466  004DF0  A0D8               	btfss	status,0,c
  4467  004DF2  0602               	decf	(?_strncmp+1)^0,f,c
  4468  004DF4                     l1172:
  4469  004DF4  0012               	return		;funcret
  4470  004DF6                     __end_of_strncmp:
  4471                           	callstack 0
  4472                           
  4473 ;; *************** function _efgtoa *****************
  4474 ;; Defined at:
  4475 ;;		line 319 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4476 ;; Parameters:    Size  Location     Type
  4477 ;;  fp              2  100[COMRAM] PTR struct _IO_FILE
  4478 ;;		 -> sprintf@f(6), 
  4479 ;;  f               4  102[COMRAM] PTR struct _IO_FILE
  4480 ;;  c               1  106[COMRAM] unsigned char 
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;  u               4   52[BANK0 ] unsigned char 
  4483 ;;  g               4   44[BANK0 ] unsigned char 
  4484 ;;  l               4   38[BANK0 ] unsigned char 
  4485 ;;  h               4   34[BANK0 ] unsigned char 
  4486 ;;  ou              4    0[BANK0 ] unsigned char 
  4487 ;;  n               2   50[BANK0 ] int 
  4488 ;;  e               2   48[BANK0 ] int 
  4489 ;;  i               2   42[BANK0 ] int 
  4490 ;;  w               2   31[BANK0 ] int 
  4491 ;;  p               2   28[BANK0 ] int 
  4492 ;;  sign            2   26[BANK0 ] int 
  4493 ;;  d               2   24[BANK0 ] int 
  4494 ;;  ne              2   22[BANK0 ] int 
  4495 ;;  m               2   20[BANK0 ] int 
  4496 ;;  pp              2   18[BANK0 ] int 
  4497 ;;  t               2   16[BANK0 ] int 
  4498 ;;  mode            1   33[BANK0 ] unsigned char 
  4499 ;;  nmode           1   30[BANK0 ] unsigned char 
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  2  100[COMRAM] int 
  4502 ;; Registers used:
  4503 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4509 ;;      Params:         7       0       0       0       0       0       0
  4510 ;;      Locals:         0      56       0       0       0       0       0
  4511 ;;      Temps:          5       0       0       0       0       0       0
  4512 ;;      Totals:        12      56       0       0       0       0       0
  4513 ;;Total ram usage:       68 bytes
  4514 ;; Hardware stack levels used:    1
  4515 ;; Hardware stack levels required when called:    4
  4516 ;; This function calls:
  4517 ;;		___awdiv
  4518 ;;		___awmod
  4519 ;;		___fladd
  4520 ;;		___fldiv
  4521 ;;		___fleq
  4522 ;;		___flge
  4523 ;;		___flmul
  4524 ;;		___flneg
  4525 ;;		___flsub
  4526 ;;		___fltol
  4527 ;;		___fpclassifyf
  4528 ;;		_floorf
  4529 ;;		_isupper
  4530 ;;		_pad
  4531 ;;		_strcpy
  4532 ;;		_tolower
  4533 ;; This function is called by:
  4534 ;;		_vfpfcnvrt
  4535 ;; This function uses a non-reentrant model
  4536 ;;
  4537                           
  4538                           	psect	text10
  4539  00734A                     __ptext10:
  4540                           	callstack 0
  4541  00734A                     _efgtoa:
  4542                           	callstack 22
  4543  00734A                     
  4544                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int efgtoa
      +                          (FILE *fp, long double f, char c);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common
      +                          \doprnt.c: 320: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 321: 
      +                              char mode, nmode;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 3
      +                          22:     int d, e, i, m, n, ne, p, pp, sign, t, w;;D:\Programs\Microship\xc8\v2.20\pic\so
      +                          urces\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;;D:\Programs\Microship\xc
      +                          8\v2.20\pic\sources\c99\common\doprnt.c: 326:     sign = 0;
  4545  00734A  0E00               	movlw	0
  4546  00734C  0100               	movlb	0	; () banked
  4547  00734E  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  4548  007350  0E00               	movlw	0
  4549  007352  6F9A               	movwf	efgtoa@sign& (0+255),b
  4550  007354                     
  4551                           ; BSR set to: 0
  4552                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  4553  007354  C067  F0AC         	movff	efgtoa@f,efgtoa@g
  4554  007358  C068  F0AD         	movff	efgtoa@f+1,efgtoa@g+1
  4555  00735C  C069  F0AE         	movff	efgtoa@f+2,efgtoa@g+2
  4556  007360  C06A  F0AF         	movff	efgtoa@f+3,efgtoa@g+3
  4557  007364                     
  4558                           ; BSR set to: 0
  4559                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 0.0) 
      +                          {
  4560  007364  BFAF               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4561  007366  EFB9  F039         	goto	u4310
  4562  00736A  EFB7  F039         	goto	u4311
  4563  00736E                     u4311:
  4564  00736E  EFCF  F039         	goto	l3876
  4565  007372                     u4310:
  4566  007372                     
  4567                           ; BSR set to: 0
  4568                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign = 1;
  4569  007372  0E00               	movlw	0
  4570  007374  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  4571  007376  0E01               	movlw	1
  4572  007378  6F9A               	movwf	efgtoa@sign& (0+255),b
  4573  00737A                     
  4574                           ; BSR set to: 0
  4575                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = -g;
  4576  00737A  C0AC  F001         	movff	efgtoa@g,___flneg@f1
  4577  00737E  C0AD  F002         	movff	efgtoa@g+1,___flneg@f1+1
  4578  007382  C0AE  F003         	movff	efgtoa@g+2,___flneg@f1+2
  4579  007386  C0AF  F004         	movff	efgtoa@g+3,___flneg@f1+3
  4580  00738A  EC1E  F022         	call	___flneg	;wreg free
  4581  00738E  C001  F0AC         	movff	?___flneg,efgtoa@g
  4582  007392  C002  F0AD         	movff	?___flneg+1,efgtoa@g+1
  4583  007396  C003  F0AE         	movff	?___flneg+2,efgtoa@g+2
  4584  00739A  C004  F0AF         	movff	?___flneg+3,efgtoa@g+3
  4585  00739E                     l3876:
  4586                           
  4587                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  4588  00739E  0E00               	movlw	0
  4589  0073A0  0100               	movlb	0	; () banked
  4590  0073A2  6FB3               	movwf	(efgtoa@n+1)& (0+255),b
  4591  0073A4  0E00               	movlw	0
  4592  0073A6  6FB2               	movwf	efgtoa@n& (0+255),b
  4593  0073A8                     
  4594                           ; BSR set to: 0
  4595                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = width;
  4596  0073A8  C0EE  F09F         	movff	_width,efgtoa@w
  4597  0073AC  C0EF  F0A0         	movff	_width+1,efgtoa@w+1
  4598  0073B0                     
  4599                           ; BSR set to: 0
  4600                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign || (
      +                          flags & (1 << 2))) {
  4601  0073B0  519A               	movf	efgtoa@sign& (0+255),w,b
  4602  0073B2  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4603  0073B4  A4D8               	btfss	status,2,c
  4604  0073B6  EFDF  F039         	goto	u4321
  4605  0073BA  EFE1  F039         	goto	u4320
  4606  0073BE                     u4321:
  4607  0073BE  EFE8  F039         	goto	l3884
  4608  0073C2                     u4320:
  4609  0073C2                     
  4610                           ; BSR set to: 0
  4611  0073C2  A5F2               	btfss	_flags& (0+255),2,b
  4612  0073C4  EFE6  F039         	goto	u4331
  4613  0073C8  EFE8  F039         	goto	u4330
  4614  0073CC                     u4331:
  4615  0073CC  EF02  F03A         	goto	l3896
  4616  0073D0                     u4330:
  4617  0073D0                     l3884:
  4618                           
  4619                           ; BSR set to: 0
  4620                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf[n] =
      +                           sign ? '-' : '+';
  4621  0073D0  519A               	movf	efgtoa@sign& (0+255),w,b
  4622  0073D2  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4623  0073D4  A4D8               	btfss	status,2,c
  4624  0073D6  EFEF  F039         	goto	u4341
  4625  0073DA  EFF1  F039         	goto	u4340
  4626  0073DE                     u4341:
  4627  0073DE  EFF7  F039         	goto	l3888
  4628  0073E2                     u4340:
  4629  0073E2                     
  4630                           ; BSR set to: 0
  4631  0073E2  0E00               	movlw	0
  4632  0073E4  6F85               	movwf	(_efgtoa$762+1)& (0+255),b
  4633  0073E6  0E2B               	movlw	43
  4634  0073E8  6F84               	movwf	_efgtoa$762& (0+255),b
  4635  0073EA  EFFB  F039         	goto	l3890
  4636  0073EE                     l3888:
  4637                           
  4638                           ; BSR set to: 0
  4639  0073EE  0E00               	movlw	0
  4640  0073F0  6F85               	movwf	(_efgtoa$762+1)& (0+255),b
  4641  0073F2  0E2D               	movlw	45
  4642  0073F4  6F84               	movwf	_efgtoa$762& (0+255),b
  4643  0073F6                     l3890:
  4644                           
  4645                           ; BSR set to: 0
  4646  0073F6  C084  F108         	movff	_efgtoa$762,_dbuf
  4647  0073FA                     
  4648                           ; BSR set to: 0
  4649                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  4650  0073FA  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  4651  0073FC  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  4652  0073FE                     
  4653                           ; BSR set to: 0
  4654                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  4655  0073FE  079F               	decf	efgtoa@w& (0+255),f,b
  4656  007400  A0D8               	btfss	status,0,c
  4657  007402  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4658  007404                     l3896:
  4659                           
  4660                           ; BSR set to: 0
  4661                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if ((0 ? 
      +                          isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4662  007404  C0AC  F001         	movff	efgtoa@g,___fpclassifyf@x
  4663  007408  C0AD  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4664  00740C  C0AE  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4665  007410  C0AF  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4666  007414  EC6E  F027         	call	___fpclassifyf	;wreg free
  4667  007418  0401               	decf	?___fpclassifyf^0,w,c
  4668  00741A  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4669  00741C  A4D8               	btfss	status,2,c
  4670  00741E  EF13  F03A         	goto	u4351
  4671  007422  EF15  F03A         	goto	u4350
  4672  007426                     u4351:
  4673  007426  EF6C  F03A         	goto	l3914
  4674  00742A                     u4350:
  4675  00742A  0EBF               	movlw	191
  4676  00742C  6E6C               	movwf	??_efgtoa^0,c
  4677  00742E  0EFF               	movlw	255
  4678  007430  6E6D               	movwf	(??_efgtoa+1)^0,c
  4679  007432  506B               	movf	efgtoa@c^0,w,c
  4680  007434  6E6E               	movwf	(??_efgtoa+2)^0,c
  4681  007436  6A6F               	clrf	(??_efgtoa+3)^0,c
  4682  007438  506C               	movf	??_efgtoa^0,w,c
  4683  00743A  266E               	addwf	(??_efgtoa+2)^0,f,c
  4684  00743C  506D               	movf	(??_efgtoa+1)^0,w,c
  4685  00743E  226F               	addwfc	(??_efgtoa+3)^0,f,c
  4686  007440  506F               	movf	(??_efgtoa+3)^0,w,c
  4687  007442  E10A               	bnz	u4360
  4688  007444  0E1A               	movlw	26
  4689  007446  5C6E               	subwf	(??_efgtoa+2)^0,w,c
  4690  007448  A0D8               	btfss	status,0,c
  4691  00744A  EF29  F03A         	goto	u4361
  4692  00744E  EF2C  F03A         	goto	u4360
  4693  007452                     u4361:
  4694  007452  0E01               	movlw	1
  4695  007454  EF2D  F03A         	goto	u4370
  4696  007458                     u4360:
  4697  007458  0E00               	movlw	0
  4698  00745A                     u4370:
  4699  00745A  0100               	movlb	0	; () banked
  4700  00745C  6F86               	movwf	_efgtoa$763& (0+255),b
  4701  00745E  6B87               	clrf	(_efgtoa$763+1)& (0+255),b
  4702  007460                     
  4703                           ; BSR set to: 0
  4704  007460  5186               	movf	_efgtoa$763& (0+255),w,b
  4705  007462  1187               	iorwf	(_efgtoa$763+1)& (0+255),w,b
  4706  007464  B4D8               	btfsc	status,2,c
  4707  007466  EF37  F03A         	goto	u4381
  4708  00746A  EF39  F03A         	goto	u4380
  4709  00746E                     u4381:
  4710  00746E  EF47  F03A         	goto	l3906
  4711  007472                     u4380:
  4712  007472                     
  4713                           ; BSR set to: 0
  4714                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             strcp
      +                          y(&dbuf[n], "INF");
  4715  007472  0E08               	movlw	low _dbuf
  4716  007474  25B2               	addwf	efgtoa@n& (0+255),w,b
  4717  007476  6E01               	movwf	strcpy@dest^0,c
  4718  007478  0E01               	movlw	high _dbuf
  4719  00747A  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4720  00747C  6E02               	movwf	(strcpy@dest+1)^0,c
  4721  00747E  0EE8               	movlw	low STR_32
  4722  007480  6E03               	movwf	strcpy@src^0,c
  4723  007482  0E7F               	movlw	high STR_32
  4724  007484  6E04               	movwf	(strcpy@src+1)^0,c
  4725  007486  ECED  F022         	call	_strcpy	;wreg free
  4726                           
  4727                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } else {
  4728  00748A  EF53  F03A         	goto	l3908
  4729  00748E                     l3906:
  4730                           
  4731                           ; BSR set to: 0
  4732                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             strcp
      +                          y(&dbuf[n], "inf");
  4733  00748E  0E08               	movlw	low _dbuf
  4734  007490  25B2               	addwf	efgtoa@n& (0+255),w,b
  4735  007492  6E01               	movwf	strcpy@dest^0,c
  4736  007494  0E01               	movlw	high _dbuf
  4737  007496  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4738  007498  6E02               	movwf	(strcpy@dest+1)^0,c
  4739  00749A  0EF0               	movlw	low STR_33
  4740  00749C  6E03               	movwf	strcpy@src^0,c
  4741  00749E  0E7F               	movlw	high STR_33
  4742  0074A0  6E04               	movwf	(strcpy@src+1)^0,c
  4743  0074A2  ECED  F022         	call	_strcpy	;wreg free
  4744  0074A6                     l3908:
  4745                           
  4746                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -= ((si
      +                          zeof("inf")/sizeof("inf"[0]))-1);
  4747  0074A6  0100               	movlb	0	; () banked
  4748  0074A8  0EFD               	movlw	253
  4749  0074AA  279F               	addwf	efgtoa@w& (0+255),f,b
  4750  0074AC  0EFF               	movlw	255
  4751  0074AE  23A0               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4752  0074B0                     l3910:
  4753                           
  4754                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         return pa
      +                          d(fp, &dbuf[0], w);
  4755  0074B0  C065  F011         	movff	efgtoa@fp,pad@fp
  4756  0074B4  C066  F012         	movff	efgtoa@fp+1,pad@fp+1
  4757  0074B8  0E08               	movlw	low _dbuf
  4758  0074BA  6E13               	movwf	pad@buf^0,c
  4759  0074BC  0E01               	movlw	high _dbuf
  4760  0074BE  6E14               	movwf	(pad@buf+1)^0,c
  4761  0074C0  C09F  F015         	movff	efgtoa@w,pad@p
  4762  0074C4  C0A0  F016         	movff	efgtoa@w+1,pad@p+1
  4763  0074C8  ECC8  F025         	call	_pad	;wreg free
  4764  0074CC  C011  F065         	movff	?_pad,?_efgtoa
  4765  0074D0  C012  F066         	movff	?_pad+1,?_efgtoa+1
  4766  0074D4  EF7C  F03F         	goto	l954
  4767  0074D8                     l3914:
  4768                           
  4769                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if ((0 ? 
      +                          isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4770  0074D8  C0AC  F001         	movff	efgtoa@g,___fpclassifyf@x
  4771  0074DC  C0AD  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4772  0074E0  C0AE  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4773  0074E4  C0AF  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4774  0074E8  EC6E  F027         	call	___fpclassifyf	;wreg free
  4775  0074EC  5001               	movf	?___fpclassifyf^0,w,c
  4776  0074EE  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4777  0074F0  A4D8               	btfss	status,2,c
  4778  0074F2  EF7D  F03A         	goto	u4391
  4779  0074F6  EF7F  F03A         	goto	u4390
  4780  0074FA                     u4391:
  4781  0074FA  EFBF  F03A         	goto	l3932
  4782  0074FE                     u4390:
  4783  0074FE  0EBF               	movlw	191
  4784  007500  6E6C               	movwf	??_efgtoa^0,c
  4785  007502  0EFF               	movlw	255
  4786  007504  6E6D               	movwf	(??_efgtoa+1)^0,c
  4787  007506  506B               	movf	efgtoa@c^0,w,c
  4788  007508  6E6E               	movwf	(??_efgtoa+2)^0,c
  4789  00750A  6A6F               	clrf	(??_efgtoa+3)^0,c
  4790  00750C  506C               	movf	??_efgtoa^0,w,c
  4791  00750E  266E               	addwf	(??_efgtoa+2)^0,f,c
  4792  007510  506D               	movf	(??_efgtoa+1)^0,w,c
  4793  007512  226F               	addwfc	(??_efgtoa+3)^0,f,c
  4794  007514  506F               	movf	(??_efgtoa+3)^0,w,c
  4795  007516  E10A               	bnz	u4400
  4796  007518  0E1A               	movlw	26
  4797  00751A  5C6E               	subwf	(??_efgtoa+2)^0,w,c
  4798  00751C  A0D8               	btfss	status,0,c
  4799  00751E  EF93  F03A         	goto	u4401
  4800  007522  EF96  F03A         	goto	u4400
  4801  007526                     u4401:
  4802  007526  0E01               	movlw	1
  4803  007528  EF97  F03A         	goto	u4410
  4804  00752C                     u4400:
  4805  00752C  0E00               	movlw	0
  4806  00752E                     u4410:
  4807  00752E  0100               	movlb	0	; () banked
  4808  007530  6F88               	movwf	_efgtoa$768& (0+255),b
  4809  007532  6B89               	clrf	(_efgtoa$768+1)& (0+255),b
  4810  007534                     
  4811                           ; BSR set to: 0
  4812  007534  5188               	movf	_efgtoa$768& (0+255),w,b
  4813  007536  1189               	iorwf	(_efgtoa$768+1)& (0+255),w,b
  4814  007538  B4D8               	btfsc	status,2,c
  4815  00753A  EFA1  F03A         	goto	u4421
  4816  00753E  EFA3  F03A         	goto	u4420
  4817  007542                     u4421:
  4818  007542  EFB1  F03A         	goto	l3924
  4819  007546                     u4420:
  4820  007546                     
  4821                           ; BSR set to: 0
  4822                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             strcp
      +                          y(&dbuf[n], "NAN");
  4823  007546  0E08               	movlw	low _dbuf
  4824  007548  25B2               	addwf	efgtoa@n& (0+255),w,b
  4825  00754A  6E01               	movwf	strcpy@dest^0,c
  4826  00754C  0E01               	movlw	high _dbuf
  4827  00754E  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4828  007550  6E02               	movwf	(strcpy@dest+1)^0,c
  4829  007552  0EEC               	movlw	low STR_36
  4830  007554  6E03               	movwf	strcpy@src^0,c
  4831  007556  0E7F               	movlw	high STR_36
  4832  007558  6E04               	movwf	(strcpy@src+1)^0,c
  4833  00755A  ECED  F022         	call	_strcpy	;wreg free
  4834                           
  4835                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } else {
  4836  00755E  EF53  F03A         	goto	l3908
  4837  007562                     l3924:
  4838                           
  4839                           ; BSR set to: 0
  4840                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             strcp
      +                          y(&dbuf[n], "nan");
  4841  007562  0E08               	movlw	low _dbuf
  4842  007564  25B2               	addwf	efgtoa@n& (0+255),w,b
  4843  007566  6E01               	movwf	strcpy@dest^0,c
  4844  007568  0E01               	movlw	high _dbuf
  4845  00756A  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4846  00756C  6E02               	movwf	(strcpy@dest+1)^0,c
  4847  00756E  0EF4               	movlw	low STR_37
  4848  007570  6E03               	movwf	strcpy@src^0,c
  4849  007572  0E7F               	movlw	high STR_37
  4850  007574  6E04               	movwf	(strcpy@src+1)^0,c
  4851  007576  ECED  F022         	call	_strcpy	;wreg free
  4852  00757A  EF53  F03A         	goto	l3908
  4853  00757E                     l3932:
  4854                           
  4855                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  4856  00757E  0E00               	movlw	0
  4857  007580  0100               	movlb	0	; () banked
  4858  007582  6FB4               	movwf	efgtoa@u& (0+255),b
  4859  007584  0E00               	movlw	0
  4860  007586  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  4861  007588  0E80               	movlw	128
  4862  00758A  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  4863  00758C  0E3F               	movlw	63
  4864  00758E  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  4865                           
  4866                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  4867  007590  0E00               	movlw	0
  4868  007592  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  4869  007594  0E00               	movlw	0
  4870  007596  6FB0               	movwf	efgtoa@e& (0+255),b
  4871  007598                     
  4872                           ; BSR set to: 0
  4873                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g == 0.
      +                          0)) {
  4874  007598  C0AC  F001         	movff	efgtoa@g,___fleq@ff1
  4875  00759C  C0AD  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  4876  0075A0  C0AE  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  4877  0075A4  C0AF  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  4878  0075A8  0E00               	movlw	0
  4879  0075AA  6E05               	movwf	___fleq@ff2^0,c
  4880  0075AC  0E00               	movlw	0
  4881  0075AE  6E06               	movwf	(___fleq@ff2+1)^0,c
  4882  0075B0  0E00               	movlw	0
  4883  0075B2  6E07               	movwf	(___fleq@ff2+2)^0,c
  4884  0075B4  0E00               	movlw	0
  4885  0075B6  6E08               	movwf	(___fleq@ff2+3)^0,c
  4886  0075B8  ECB9  F024         	call	___fleq	;wreg free
  4887  0075BC  B0D8               	btfsc	status,0,c
  4888  0075BE  EFE3  F03A         	goto	u4431
  4889  0075C2  EFE5  F03A         	goto	u4430
  4890  0075C6                     u4431:
  4891  0075C6  EF68  F03B         	goto	l3950
  4892  0075CA                     u4430:
  4893  0075CA  EF04  F03B         	goto	l3942
  4894  0075CE                     l3938:
  4895                           
  4896                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             u = u
      +                          *10.0;
  4897  0075CE  C0B4  F00F         	movff	efgtoa@u,___flmul@b
  4898  0075D2  C0B5  F010         	movff	efgtoa@u+1,___flmul@b+1
  4899  0075D6  C0B6  F011         	movff	efgtoa@u+2,___flmul@b+2
  4900  0075DA  C0B7  F012         	movff	efgtoa@u+3,___flmul@b+3
  4901  0075DE  0E00               	movlw	0
  4902  0075E0  6E13               	movwf	___flmul@a^0,c
  4903  0075E2  0E00               	movlw	0
  4904  0075E4  6E14               	movwf	(___flmul@a+1)^0,c
  4905  0075E6  0E20               	movlw	32
  4906  0075E8  6E15               	movwf	(___flmul@a+2)^0,c
  4907  0075EA  0E41               	movlw	65
  4908  0075EC  6E16               	movwf	(___flmul@a+3)^0,c
  4909  0075EE  EC43  F030         	call	___flmul	;wreg free
  4910  0075F2  C00F  F0B4         	movff	?___flmul,efgtoa@u
  4911  0075F6  C010  F0B5         	movff	?___flmul+1,efgtoa@u+1
  4912  0075FA  C011  F0B6         	movff	?___flmul+2,efgtoa@u+2
  4913  0075FE  C012  F0B7         	movff	?___flmul+3,efgtoa@u+3
  4914  007602                     
  4915                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             ++e;
  4916  007602  0100               	movlb	0	; () banked
  4917  007604  4BB0               	infsnz	efgtoa@e& (0+255),f,b
  4918  007606  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  4919  007608                     l3942:
  4920                           
  4921                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         while (!(
      +                          g < (u*10.0))) {
  4922  007608  C0AC  F038         	movff	efgtoa@g,___flge@ff1
  4923  00760C  C0AD  F039         	movff	efgtoa@g+1,___flge@ff1+1
  4924  007610  C0AE  F03A         	movff	efgtoa@g+2,___flge@ff1+2
  4925  007614  C0AF  F03B         	movff	efgtoa@g+3,___flge@ff1+3
  4926  007618  0E00               	movlw	0
  4927  00761A  6E13               	movwf	___flmul@a^0,c
  4928  00761C  0E00               	movlw	0
  4929  00761E  6E14               	movwf	(___flmul@a+1)^0,c
  4930  007620  0E20               	movlw	32
  4931  007622  6E15               	movwf	(___flmul@a+2)^0,c
  4932  007624  0E41               	movlw	65
  4933  007626  6E16               	movwf	(___flmul@a+3)^0,c
  4934  007628  C0B4  F00F         	movff	efgtoa@u,___flmul@b
  4935  00762C  C0B5  F010         	movff	efgtoa@u+1,___flmul@b+1
  4936  007630  C0B6  F011         	movff	efgtoa@u+2,___flmul@b+2
  4937  007634  C0B7  F012         	movff	efgtoa@u+3,___flmul@b+3
  4938  007638  EC43  F030         	call	___flmul	;wreg free
  4939  00763C  C00F  F03C         	movff	?___flmul,___flge@ff2
  4940  007640  C010  F03D         	movff	?___flmul+1,___flge@ff2+1
  4941  007644  C011  F03E         	movff	?___flmul+2,___flge@ff2+2
  4942  007648  C012  F03F         	movff	?___flmul+3,___flge@ff2+3
  4943  00764C  ECED  F027         	call	___flge	;wreg free
  4944  007650  B0D8               	btfsc	status,0,c
  4945  007652  EF2D  F03B         	goto	u4441
  4946  007656  EF2F  F03B         	goto	u4440
  4947  00765A                     u4441:
  4948  00765A  EFE7  F03A         	goto	l3938
  4949  00765E                     u4440:
  4950  00765E  EF4F  F03B         	goto	l3948
  4951  007662                     l3944:
  4952                           
  4953                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             u = u
      +                          /10.0;
  4954  007662  C0B4  F038         	movff	efgtoa@u,___fldiv@b
  4955  007666  C0B5  F039         	movff	efgtoa@u+1,___fldiv@b+1
  4956  00766A  C0B6  F03A         	movff	efgtoa@u+2,___fldiv@b+2
  4957  00766E  C0B7  F03B         	movff	efgtoa@u+3,___fldiv@b+3
  4958  007672  0E00               	movlw	0
  4959  007674  6E3C               	movwf	___fldiv@a^0,c
  4960  007676  0E00               	movlw	0
  4961  007678  6E3D               	movwf	(___fldiv@a+1)^0,c
  4962  00767A  0E20               	movlw	32
  4963  00767C  6E3E               	movwf	(___fldiv@a+2)^0,c
  4964  00767E  0E41               	movlw	65
  4965  007680  6E3F               	movwf	(___fldiv@a+3)^0,c
  4966  007682  EC76  F02E         	call	___fldiv	;wreg free
  4967  007686  C038  F0B4         	movff	?___fldiv,efgtoa@u
  4968  00768A  C039  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  4969  00768E  C03A  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  4970  007692  C03B  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  4971  007696                     
  4972                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             --e;
  4973  007696  0100               	movlb	0	; () banked
  4974  007698  07B0               	decf	efgtoa@e& (0+255),f,b
  4975  00769A  A0D8               	btfss	status,0,c
  4976  00769C  07B1               	decf	(efgtoa@e+1)& (0+255),f,b
  4977  00769E                     l3948:
  4978                           
  4979                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         while (g 
      +                          < u) {
  4980  00769E  C0AC  F038         	movff	efgtoa@g,___flge@ff1
  4981  0076A2  C0AD  F039         	movff	efgtoa@g+1,___flge@ff1+1
  4982  0076A6  C0AE  F03A         	movff	efgtoa@g+2,___flge@ff1+2
  4983  0076AA  C0AF  F03B         	movff	efgtoa@g+3,___flge@ff1+3
  4984  0076AE  C0B4  F03C         	movff	efgtoa@u,___flge@ff2
  4985  0076B2  C0B5  F03D         	movff	efgtoa@u+1,___flge@ff2+1
  4986  0076B6  C0B6  F03E         	movff	efgtoa@u+2,___flge@ff2+2
  4987  0076BA  C0B7  F03F         	movff	efgtoa@u+3,___flge@ff2+3
  4988  0076BE  ECED  F027         	call	___flge	;wreg free
  4989  0076C2  A0D8               	btfss	status,0,c
  4990  0076C4  EF66  F03B         	goto	u4451
  4991  0076C8  EF68  F03B         	goto	u4450
  4992  0076CC                     u4451:
  4993  0076CC  EF31  F03B         	goto	l3944
  4994  0076D0                     u4450:
  4995  0076D0                     l3950:
  4996                           
  4997                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = tolowe
      +                          r((int)c);
  4998  0076D0  C06B  F007         	movff	efgtoa@c,tolower@c
  4999  0076D4  6A08               	clrf	(tolower@c+1)^0,c
  5000  0076D6  EC49  F023         	call	_tolower	;wreg free
  5001  0076DA  5007               	movf	?_tolower^0,w,c
  5002  0076DC  0100               	movlb	0	; () banked
  5003  0076DE  6FA1               	movwf	efgtoa@mode& (0+255),b
  5004  0076E0                     
  5005                           ; BSR set to: 0
  5006                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = mode;
  5007  0076E0  C0A1  F09E         	movff	efgtoa@mode,efgtoa@nmode
  5008  0076E4                     
  5009                           ; BSR set to: 0
  5010                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode == '
      +                          g') {
  5011  0076E4  0E67               	movlw	103
  5012  0076E6  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  5013  0076E8  A4D8               	btfss	status,2,c
  5014  0076EA  EF79  F03B         	goto	u4461
  5015  0076EE  EF7B  F03B         	goto	u4460
  5016  0076F2                     u4461:
  5017  0076F2  EFA1  F03B         	goto	l3964
  5018  0076F6                     u4460:
  5019  0076F6                     
  5020                           ; BSR set to: 0
  5021                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec == 0) 
      +                          {
  5022  0076F6  51F0               	movf	_prec& (0+255),w,b
  5023  0076F8  11F1               	iorwf	(_prec+1)& (0+255),w,b
  5024  0076FA  A4D8               	btfss	status,2,c
  5025  0076FC  EF82  F03B         	goto	u4471
  5026  007700  EF84  F03B         	goto	u4470
  5027  007704                     u4471:
  5028  007704  EF88  F03B         	goto	l3960
  5029  007708                     u4470:
  5030  007708                     
  5031                           ; BSR set to: 0
  5032                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  5033  007708  0E00               	movlw	0
  5034  00770A  6FF1               	movwf	(_prec+1)& (0+255),b
  5035  00770C  0E01               	movlw	1
  5036  00770E  6FF0               	movwf	_prec& (0+255),b
  5037  007710                     l3960:
  5038                           
  5039                           ; BSR set to: 0
  5040                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = (0 < 
      +                          prec) ? prec : 6;
  5041  007710  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  5042  007712  EF95  F03B         	goto	u4480
  5043  007716  51F1               	movf	(_prec+1)& (0+255),w,b
  5044  007718  E106               	bnz	u4481
  5045  00771A  05F0               	decf	_prec& (0+255),w,b
  5046  00771C  B0D8               	btfsc	status,0,c
  5047  00771E  EF93  F03B         	goto	u4481
  5048  007722  EF95  F03B         	goto	u4480
  5049  007726                     u4481:
  5050  007726  EF9B  F03B         	goto	l972
  5051  00772A                     u4480:
  5052  00772A                     l3962:
  5053                           
  5054                           ; BSR set to: 0
  5055  00772A  0E00               	movlw	0
  5056  00772C  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  5057  00772E  0E06               	movlw	6
  5058  007730  6F9C               	movwf	efgtoa@p& (0+255),b
  5059  007732  EFAA  F03B         	goto	l3970
  5060  007736                     l972:
  5061                           
  5062                           ; BSR set to: 0
  5063  007736  C0F0  F09C         	movff	_prec,efgtoa@p
  5064  00773A  C0F1  F09D         	movff	_prec+1,efgtoa@p+1
  5065  00773E  EFAA  F03B         	goto	l3970
  5066  007742                     l3964:
  5067                           
  5068                           ; BSR set to: 0
  5069                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = (prec
      +                           < 0) ? 6 : prec;
  5070  007742  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  5071  007744  EFA6  F03B         	goto	u4491
  5072  007748  EFA8  F03B         	goto	u4490
  5073  00774C                     u4491:
  5074  00774C  EF95  F03B         	goto	l3962
  5075  007750                     u4490:
  5076  007750  EF9B  F03B         	goto	l972
  5077  007754                     l3970:
  5078                           
  5079                           ; BSR set to: 0
  5080                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode == '
      +                          g') {
  5081  007754  0E67               	movlw	103
  5082  007756  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  5083  007758  A4D8               	btfss	status,2,c
  5084  00775A  EFB1  F03B         	goto	u4501
  5085  00775E  EFB3  F03B         	goto	u4500
  5086  007762                     u4501:
  5087  007762  EFE2  F03B         	goto	l3980
  5088  007766                     u4500:
  5089  007766                     
  5090                           ; BSR set to: 0
  5091                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (!(e <
      +                           -4) && !((p - 1) < e)) {
  5092  007766  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  5093  007768  EFC1  F03B         	goto	u4510
  5094  00776C  0EFC               	movlw	252
  5095  00776E  5DB0               	subwf	efgtoa@e& (0+255),w,b
  5096  007770  0EFF               	movlw	255
  5097  007772  59B1               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5098  007774  A0D8               	btfss	status,0,c
  5099  007776  EFBF  F03B         	goto	u4511
  5100  00777A  EFC1  F03B         	goto	u4510
  5101  00777E                     u4511:
  5102  00777E  EFE0  F03B         	goto	l3978
  5103  007782                     u4510:
  5104  007782                     
  5105                           ; BSR set to: 0
  5106  007782  0EFF               	movlw	255
  5107  007784  6E6C               	movwf	??_efgtoa^0,c
  5108  007786  0EFF               	movlw	255
  5109  007788  6E6D               	movwf	(??_efgtoa+1)^0,c
  5110  00778A  C09C  F06E         	movff	efgtoa@p,??_efgtoa+2
  5111  00778E  C09D  F06F         	movff	efgtoa@p+1,??_efgtoa+3
  5112  007792  506C               	movf	??_efgtoa^0,w,c
  5113  007794  266E               	addwf	(??_efgtoa+2)^0,f,c
  5114  007796  506D               	movf	(??_efgtoa+1)^0,w,c
  5115  007798  226F               	addwfc	(??_efgtoa+3)^0,f,c
  5116  00779A  51B0               	movf	efgtoa@e& (0+255),w,b
  5117  00779C  5C6E               	subwf	(??_efgtoa+2)^0,w,c
  5118  00779E  506F               	movf	(??_efgtoa+3)^0,w,c
  5119  0077A0  0A80               	xorlw	128
  5120  0077A2  6E70               	movwf	(??_efgtoa+4)^0,c
  5121  0077A4  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  5122  0077A6  0A80               	xorlw	128
  5123  0077A8  5870               	subwfb	(??_efgtoa+4)^0,w,c
  5124  0077AA  A0D8               	btfss	status,0,c
  5125  0077AC  EFDA  F03B         	goto	u4521
  5126  0077B0  EFDC  F03B         	goto	u4520
  5127  0077B4                     u4521:
  5128  0077B4  EFE0  F03B         	goto	l3978
  5129  0077B8                     u4520:
  5130  0077B8                     
  5131                           ; BSR set to: 0
  5132                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             nmode
      +                           = 'f';
  5133  0077B8  0E66               	movlw	102
  5134  0077BA  6F9E               	movwf	efgtoa@nmode& (0+255),b
  5135                           
  5136                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } else {
  5137  0077BC  EFE2  F03B         	goto	l3980
  5138  0077C0                     l3978:
  5139                           
  5140                           ; BSR set to: 0
  5141                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             nmode
      +                           = 'e';
  5142  0077C0  0E65               	movlw	101
  5143  0077C2  6F9E               	movwf	efgtoa@nmode& (0+255),b
  5144  0077C4                     l3980:
  5145                           
  5146                           ; BSR set to: 0
  5147                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  5148  0077C4  C09C  F094         	movff	efgtoa@p,efgtoa@m
  5149  0077C8  C09D  F095         	movff	efgtoa@p+1,efgtoa@m+1
  5150  0077CC                     
  5151                           ; BSR set to: 0
  5152                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mode ==
      +                           'g') || ((nmode == 'f') && (e < 0))) {
  5153  0077CC  0E67               	movlw	103
  5154  0077CE  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  5155  0077D0  A4D8               	btfss	status,2,c
  5156  0077D2  EFED  F03B         	goto	u4531
  5157  0077D6  EFEF  F03B         	goto	u4530
  5158  0077DA                     u4531:
  5159  0077DA  EFFF  F03B         	goto	l3988
  5160  0077DE                     u4530:
  5161  0077DE                     
  5162                           ; BSR set to: 0
  5163  0077DE  0E66               	movlw	102
  5164  0077E0  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  5165  0077E2  A4D8               	btfss	status,2,c
  5166  0077E4  EFF6  F03B         	goto	u4541
  5167  0077E8  EFF8  F03B         	goto	u4540
  5168  0077EC                     u4541:
  5169  0077EC  EF01  F03C         	goto	l3990
  5170  0077F0                     u4540:
  5171  0077F0                     
  5172                           ; BSR set to: 0
  5173  0077F0  BFB1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5174  0077F2  EFFF  F03B         	goto	u4550
  5175  0077F6  EFFD  F03B         	goto	u4551
  5176  0077FA                     u4551:
  5177  0077FA  EF01  F03C         	goto	l3990
  5178  0077FE                     u4550:
  5179  0077FE                     l3988:
  5180                           
  5181                           ; BSR set to: 0
  5182                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  5183  0077FE  4B94               	infsnz	efgtoa@m& (0+255),f,b
  5184  007800  2B95               	incf	(efgtoa@m+1)& (0+255),f,b
  5185  007802                     l3990:
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmode == 
      +                          'f') {
  5189  007802  0E66               	movlw	102
  5190  007804  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  5191  007806  A4D8               	btfss	status,2,c
  5192  007808  EF08  F03C         	goto	u4561
  5193  00780C  EF0A  F03C         	goto	u4560
  5194  007810                     u4561:
  5195  007810  EF2A  F03C         	goto	l4000
  5196  007814                     u4560:
  5197  007814                     
  5198                           ; BSR set to: 0
  5199                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (e < 0
      +                          ) {
  5200  007814  BFB1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5201  007816  EF11  F03C         	goto	u4570
  5202  00781A  EF0F  F03C         	goto	u4571
  5203  00781E                     u4571:
  5204  00781E  EF1D  F03C         	goto	l3996
  5205  007822                     u4570:
  5206  007822                     
  5207                           ; BSR set to: 0
  5208                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             u = 1
      +                          .0;
  5209  007822  0E00               	movlw	0
  5210  007824  6FB4               	movwf	efgtoa@u& (0+255),b
  5211  007826  0E00               	movlw	0
  5212  007828  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  5213  00782A  0E80               	movlw	128
  5214  00782C  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  5215  00782E  0E3F               	movlw	63
  5216  007830  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  5217                           
  5218                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             e = 0
      +                          ;
  5219  007832  0E00               	movlw	0
  5220  007834  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  5221  007836  0E00               	movlw	0
  5222  007838  6FB0               	movwf	efgtoa@e& (0+255),b
  5223  00783A                     l3996:
  5224                           
  5225                           ; BSR set to: 0
  5226                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (!(mod
      +                          e == 'g')) {
  5227  00783A  0E67               	movlw	103
  5228  00783C  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  5229  00783E  B4D8               	btfsc	status,2,c
  5230  007840  EF24  F03C         	goto	u4581
  5231  007844  EF26  F03C         	goto	u4580
  5232  007848                     u4581:
  5233  007848  EF2A  F03C         	goto	l4000
  5234  00784C                     u4580:
  5235  00784C                     
  5236                           ; BSR set to: 0
  5237                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             m += 
      +                          e;
  5238  00784C  51B0               	movf	efgtoa@e& (0+255),w,b
  5239  00784E  2794               	addwf	efgtoa@m& (0+255),f,b
  5240  007850  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  5241  007852  2395               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5242  007854                     l4000:
  5243                           
  5244                           ; BSR set to: 0
  5245                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  5246  007854  0E00               	movlw	0
  5247  007856  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  5248  007858  0E00               	movlw	0
  5249  00785A  6FAA               	movwf	efgtoa@i& (0+255),b
  5250  00785C                     
  5251                           ; BSR set to: 0
  5252                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  5253  00785C  C0AC  F0A2         	movff	efgtoa@g,efgtoa@h
  5254  007860  C0AD  F0A3         	movff	efgtoa@g+1,efgtoa@h+1
  5255  007864  C0AE  F0A4         	movff	efgtoa@g+2,efgtoa@h+2
  5256  007868  C0AF  F0A5         	movff	efgtoa@g+3,efgtoa@h+3
  5257  00786C                     
  5258                           ; BSR set to: 0
  5259                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  5260  00786C  C0B4  F080         	movff	efgtoa@u,efgtoa@ou
  5261  007870  C0B5  F081         	movff	efgtoa@u+1,efgtoa@ou+1
  5262  007874  C0B6  F082         	movff	efgtoa@u+2,efgtoa@ou+2
  5263  007878  C0B7  F083         	movff	efgtoa@u+3,efgtoa@ou+3
  5264                           
  5265                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i < m)
      +                           {
  5266  00787C  EFBB  F03C         	goto	l4014
  5267  007880                     l4006:
  5268                           
  5269                           ; BSR set to: 0
  5270                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = floor
      +                          f(h/u);
  5271  007880  C0A2  F038         	movff	efgtoa@h,___fldiv@b
  5272  007884  C0A3  F039         	movff	efgtoa@h+1,___fldiv@b+1
  5273  007888  C0A4  F03A         	movff	efgtoa@h+2,___fldiv@b+2
  5274  00788C  C0A5  F03B         	movff	efgtoa@h+3,___fldiv@b+3
  5275  007890  C0B4  F03C         	movff	efgtoa@u,___fldiv@a
  5276  007894  C0B5  F03D         	movff	efgtoa@u+1,___fldiv@a+1
  5277  007898  C0B6  F03E         	movff	efgtoa@u+2,___fldiv@a+2
  5278  00789C  C0B7  F03F         	movff	efgtoa@u+3,___fldiv@a+3
  5279  0078A0  EC76  F02E         	call	___fldiv	;wreg free
  5280  0078A4  C038  F051         	movff	?___fldiv,floorf@x
  5281  0078A8  C039  F052         	movff	?___fldiv+1,floorf@x+1
  5282  0078AC  C03A  F053         	movff	?___fldiv+2,floorf@x+2
  5283  0078B0  C03B  F054         	movff	?___fldiv+3,floorf@x+3
  5284  0078B4  EC33  F02C         	call	_floorf	;wreg free
  5285  0078B8  C051  F0A6         	movff	?_floorf,efgtoa@l
  5286  0078BC  C052  F0A7         	movff	?_floorf+1,efgtoa@l+1
  5287  0078C0  C053  F0A8         	movff	?_floorf+2,efgtoa@l+2
  5288  0078C4  C054  F0A9         	movff	?_floorf+3,efgtoa@l+3
  5289                           
  5290                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = (int)
      +                          l;
  5291  0078C8  C0A6  F051         	movff	efgtoa@l,___fltol@f1
  5292  0078CC  C0A7  F052         	movff	efgtoa@l+1,___fltol@f1+1
  5293  0078D0  C0A8  F053         	movff	efgtoa@l+2,___fltol@f1+2
  5294  0078D4  C0A9  F054         	movff	efgtoa@l+3,___fltol@f1+3
  5295  0078D8  EC6F  F028         	call	___fltol	;wreg free
  5296  0078DC  C051  F098         	movff	?___fltol,efgtoa@d
  5297  0078E0  C052  F099         	movff	?___fltol+1,efgtoa@d+1
  5298  0078E4                     
  5299                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -= l*u;
  5300  0078E4  C0A2  F038         	movff	efgtoa@h,___flsub@b
  5301  0078E8  C0A3  F039         	movff	efgtoa@h+1,___flsub@b+1
  5302  0078EC  C0A4  F03A         	movff	efgtoa@h+2,___flsub@b+2
  5303  0078F0  C0A5  F03B         	movff	efgtoa@h+3,___flsub@b+3
  5304  0078F4  C0B4  F013         	movff	efgtoa@u,___flmul@a
  5305  0078F8  C0B5  F014         	movff	efgtoa@u+1,___flmul@a+1
  5306  0078FC  C0B6  F015         	movff	efgtoa@u+2,___flmul@a+2
  5307  007900  C0B7  F016         	movff	efgtoa@u+3,___flmul@a+3
  5308  007904  C0A6  F00F         	movff	efgtoa@l,___flmul@b
  5309  007908  C0A7  F010         	movff	efgtoa@l+1,___flmul@b+1
  5310  00790C  C0A8  F011         	movff	efgtoa@l+2,___flmul@b+2
  5311  007910  C0A9  F012         	movff	efgtoa@l+3,___flmul@b+3
  5312  007914  EC43  F030         	call	___flmul	;wreg free
  5313  007918  C00F  F03C         	movff	?___flmul,___flsub@a
  5314  00791C  C010  F03D         	movff	?___flmul+1,___flsub@a+1
  5315  007920  C011  F03E         	movff	?___flmul+2,___flsub@a+2
  5316  007924  C012  F03F         	movff	?___flmul+3,___flsub@a+3
  5317  007928  EC78  F022         	call	___flsub	;wreg free
  5318  00792C  C038  F0A2         	movff	?___flsub,efgtoa@h
  5319  007930  C039  F0A3         	movff	?___flsub+1,efgtoa@h+1
  5320  007934  C03A  F0A4         	movff	?___flsub+2,efgtoa@h+2
  5321  007938  C03B  F0A5         	movff	?___flsub+3,efgtoa@h+3
  5322  00793C                     
  5323                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = u/10.
      +                          0;
  5324  00793C  C0B4  F038         	movff	efgtoa@u,___fldiv@b
  5325  007940  C0B5  F039         	movff	efgtoa@u+1,___fldiv@b+1
  5326  007944  C0B6  F03A         	movff	efgtoa@u+2,___fldiv@b+2
  5327  007948  C0B7  F03B         	movff	efgtoa@u+3,___fldiv@b+3
  5328  00794C  0E00               	movlw	0
  5329  00794E  6E3C               	movwf	___fldiv@a^0,c
  5330  007950  0E00               	movlw	0
  5331  007952  6E3D               	movwf	(___fldiv@a+1)^0,c
  5332  007954  0E20               	movlw	32
  5333  007956  6E3E               	movwf	(___fldiv@a+2)^0,c
  5334  007958  0E41               	movlw	65
  5335  00795A  6E3F               	movwf	(___fldiv@a+3)^0,c
  5336  00795C  EC76  F02E         	call	___fldiv	;wreg free
  5337  007960  C038  F0B4         	movff	?___fldiv,efgtoa@u
  5338  007964  C039  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  5339  007968  C03A  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  5340  00796C  C03B  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  5341  007970                     
  5342                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  5343  007970  0100               	movlb	0	; () banked
  5344  007972  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  5345  007974  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  5346  007976                     l4014:
  5347                           
  5348                           ; BSR set to: 0
  5349                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i < m)
      +                           {
  5350  007976  5194               	movf	efgtoa@m& (0+255),w,b
  5351  007978  5DAA               	subwf	efgtoa@i& (0+255),w,b
  5352  00797A  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  5353  00797C  0A80               	xorlw	128
  5354  00797E  6E6C               	movwf	??_efgtoa^0,c
  5355  007980  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  5356  007982  0A80               	xorlw	128
  5357  007984  586C               	subwfb	??_efgtoa^0,w,c
  5358  007986  A0D8               	btfss	status,0,c
  5359  007988  EFC8  F03C         	goto	u4591
  5360  00798C  EFCA  F03C         	goto	u4590
  5361  007990                     u4591:
  5362  007990  EF40  F03C         	goto	l4006
  5363  007994                     u4590:
  5364  007994                     
  5365                           ; BSR set to: 0
  5366                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.0;
  5367  007994  C0B4  F00F         	movff	efgtoa@u,___flmul@b
  5368  007998  C0B5  F010         	movff	efgtoa@u+1,___flmul@b+1
  5369  00799C  C0B6  F011         	movff	efgtoa@u+2,___flmul@b+2
  5370  0079A0  C0B7  F012         	movff	efgtoa@u+3,___flmul@b+3
  5371  0079A4  0E00               	movlw	0
  5372  0079A6  6E13               	movwf	___flmul@a^0,c
  5373  0079A8  0E00               	movlw	0
  5374  0079AA  6E14               	movwf	(___flmul@a+1)^0,c
  5375  0079AC  0EA0               	movlw	160
  5376  0079AE  6E15               	movwf	(___flmul@a+2)^0,c
  5377  0079B0  0E40               	movlw	64
  5378  0079B2  6E16               	movwf	(___flmul@a+3)^0,c
  5379  0079B4  EC43  F030         	call	___flmul	;wreg free
  5380  0079B8  C00F  F0A6         	movff	?___flmul,efgtoa@l
  5381  0079BC  C010  F0A7         	movff	?___flmul+1,efgtoa@l+1
  5382  0079C0  C011  F0A8         	movff	?___flmul+2,efgtoa@l+2
  5383  0079C4  C012  F0A9         	movff	?___flmul+3,efgtoa@l+3
  5384  0079C8                     
  5385                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < l) {
  5386  0079C8  C0A2  F038         	movff	efgtoa@h,___flge@ff1
  5387  0079CC  C0A3  F039         	movff	efgtoa@h+1,___flge@ff1+1
  5388  0079D0  C0A4  F03A         	movff	efgtoa@h+2,___flge@ff1+2
  5389  0079D4  C0A5  F03B         	movff	efgtoa@h+3,___flge@ff1+3
  5390  0079D8  C0A6  F03C         	movff	efgtoa@l,___flge@ff2
  5391  0079DC  C0A7  F03D         	movff	efgtoa@l+1,___flge@ff2+1
  5392  0079E0  C0A8  F03E         	movff	efgtoa@l+2,___flge@ff2+2
  5393  0079E4  C0A9  F03F         	movff	efgtoa@l+3,___flge@ff2+3
  5394  0079E8  ECED  F027         	call	___flge	;wreg free
  5395  0079EC  B0D8               	btfsc	status,0,c
  5396  0079EE  EFFB  F03C         	goto	u4601
  5397  0079F2  EFFD  F03C         	goto	u4600
  5398  0079F6                     u4601:
  5399  0079F6  EF08  F03D         	goto	l4022
  5400  0079FA                     u4600:
  5401  0079FA                     
  5402                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 0.0;
  5403  0079FA  0E00               	movlw	0
  5404  0079FC  0100               	movlb	0	; () banked
  5405  0079FE  6FA6               	movwf	efgtoa@l& (0+255),b
  5406  007A00  0E00               	movlw	0
  5407  007A02  6FA7               	movwf	(efgtoa@l+1)& (0+255),b
  5408  007A04  0E00               	movlw	0
  5409  007A06  6FA8               	movwf	(efgtoa@l+2)& (0+255),b
  5410  007A08  0E00               	movlw	0
  5411  007A0A  6FA9               	movwf	(efgtoa@l+3)& (0+255),b
  5412                           
  5413                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  5414  007A0C  EF31  F03D         	goto	l4028
  5415  007A10                     l4022:
  5416                           
  5417                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if ((h ==
      +                           l) && !(d % 2)) {
  5418  007A10  C0A2  F001         	movff	efgtoa@h,___fleq@ff1
  5419  007A14  C0A3  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  5420  007A18  C0A4  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  5421  007A1C  C0A5  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  5422  007A20  C0A6  F005         	movff	efgtoa@l,___fleq@ff2
  5423  007A24  C0A7  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  5424  007A28  C0A8  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  5425  007A2C  C0A9  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  5426  007A30  ECB9  F024         	call	___fleq	;wreg free
  5427  007A34  A0D8               	btfss	status,0,c
  5428  007A36  EF1F  F03D         	goto	u4611
  5429  007A3A  EF21  F03D         	goto	u4610
  5430  007A3E                     u4611:
  5431  007A3E  EF31  F03D         	goto	l4028
  5432  007A42                     u4610:
  5433  007A42  0100               	movlb	0	; () banked
  5434  007A44  B198               	btfsc	efgtoa@d& (0+255),0,b
  5435  007A46  EF27  F03D         	goto	u4621
  5436  007A4A  EF29  F03D         	goto	u4620
  5437  007A4E                     u4621:
  5438  007A4E  EF31  F03D         	goto	l4028
  5439  007A52                     u4620:
  5440  007A52                     
  5441                           ; BSR set to: 0
  5442                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             l = 0
      +                          .0;
  5443  007A52  0E00               	movlw	0
  5444  007A54  6FA6               	movwf	efgtoa@l& (0+255),b
  5445  007A56  0E00               	movlw	0
  5446  007A58  6FA7               	movwf	(efgtoa@l+1)& (0+255),b
  5447  007A5A  0E00               	movlw	0
  5448  007A5C  6FA8               	movwf	(efgtoa@l+2)& (0+255),b
  5449  007A5E  0E00               	movlw	0
  5450  007A60  6FA9               	movwf	(efgtoa@l+3)& (0+255),b
  5451  007A62                     l4028:
  5452                           
  5453                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + l;
  5454  007A62  C0AC  F028         	movff	efgtoa@g,___fladd@b
  5455  007A66  C0AD  F029         	movff	efgtoa@g+1,___fladd@b+1
  5456  007A6A  C0AE  F02A         	movff	efgtoa@g+2,___fladd@b+2
  5457  007A6E  C0AF  F02B         	movff	efgtoa@g+3,___fladd@b+3
  5458  007A72  C0A6  F02C         	movff	efgtoa@l,___fladd@a
  5459  007A76  C0A7  F02D         	movff	efgtoa@l+1,___fladd@a+1
  5460  007A7A  C0A8  F02E         	movff	efgtoa@l+2,___fladd@a+2
  5461  007A7E  C0A9  F02F         	movff	efgtoa@l+3,___fladd@a+3
  5462  007A82  EC8D  F034         	call	___fladd	;wreg free
  5463  007A86  C028  F0A2         	movff	?___fladd,efgtoa@h
  5464  007A8A  C029  F0A3         	movff	?___fladd+1,efgtoa@h+1
  5465  007A8E  C02A  F0A4         	movff	?___fladd+2,efgtoa@h+2
  5466  007A92  C02B  F0A5         	movff	?___fladd+3,efgtoa@h+3
  5467  007A96                     
  5468                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  5469  007A96  C080  F0B4         	movff	efgtoa@ou,efgtoa@u
  5470  007A9A  C081  F0B5         	movff	efgtoa@ou+1,efgtoa@u+1
  5471  007A9E  C082  F0B6         	movff	efgtoa@ou+2,efgtoa@u+2
  5472  007AA2  C083  F0B7         	movff	efgtoa@ou+3,efgtoa@u+3
  5473  007AA6                     
  5474                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nmode =
      +                          = 'e') ? 0 : e;
  5475  007AA6  0E65               	movlw	101
  5476  007AA8  0100               	movlb	0	; () banked
  5477  007AAA  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  5478  007AAC  B4D8               	btfsc	status,2,c
  5479  007AAE  EF5B  F03D         	goto	u4631
  5480  007AB2  EF5D  F03D         	goto	u4630
  5481  007AB6                     u4631:
  5482  007AB6  EF63  F03D         	goto	l4036
  5483  007ABA                     u4630:
  5484  007ABA                     
  5485                           ; BSR set to: 0
  5486  007ABA  C0B0  F096         	movff	efgtoa@e,efgtoa@ne
  5487  007ABE  C0B1  F097         	movff	efgtoa@e+1,efgtoa@ne+1
  5488  007AC2  EF67  F03D         	goto	l998
  5489  007AC6                     l4036:
  5490                           
  5491                           ; BSR set to: 0
  5492  007AC6  0E00               	movlw	0
  5493  007AC8  6F97               	movwf	(efgtoa@ne+1)& (0+255),b
  5494  007ACA  0E00               	movlw	0
  5495  007ACC  6F96               	movwf	efgtoa@ne& (0+255),b
  5496  007ACE                     l998:
  5497                           
  5498                           ; BSR set to: 0
  5499                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  5500  007ACE  0E00               	movlw	0
  5501  007AD0  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  5502  007AD2  0E00               	movlw	0
  5503  007AD4  6F92               	movwf	efgtoa@pp& (0+255),b
  5504                           
  5505                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  5506  007AD6  0E00               	movlw	0
  5507  007AD8  6F91               	movwf	(efgtoa@t+1)& (0+255),b
  5508  007ADA  0E00               	movlw	0
  5509  007ADC  6F90               	movwf	efgtoa@t& (0+255),b
  5510                           
  5511                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  5512  007ADE  0E00               	movlw	0
  5513  007AE0  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  5514  007AE2  0E00               	movlw	0
  5515  007AE4  6FAA               	movwf	efgtoa@i& (0+255),b
  5516                           
  5517                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((i < m
      +                          ) && (n < (80 - 5))) {
  5518  007AE6  EF62  F03E         	goto	l4086
  5519  007AEA                     l4038:
  5520                           
  5521                           ; BSR set to: 0
  5522                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = floor
      +                          f(h/u);
  5523  007AEA  C0A2  F038         	movff	efgtoa@h,___fldiv@b
  5524  007AEE  C0A3  F039         	movff	efgtoa@h+1,___fldiv@b+1
  5525  007AF2  C0A4  F03A         	movff	efgtoa@h+2,___fldiv@b+2
  5526  007AF6  C0A5  F03B         	movff	efgtoa@h+3,___fldiv@b+3
  5527  007AFA  C0B4  F03C         	movff	efgtoa@u,___fldiv@a
  5528  007AFE  C0B5  F03D         	movff	efgtoa@u+1,___fldiv@a+1
  5529  007B02  C0B6  F03E         	movff	efgtoa@u+2,___fldiv@a+2
  5530  007B06  C0B7  F03F         	movff	efgtoa@u+3,___fldiv@a+3
  5531  007B0A  EC76  F02E         	call	___fldiv	;wreg free
  5532  007B0E  C038  F051         	movff	?___fldiv,floorf@x
  5533  007B12  C039  F052         	movff	?___fldiv+1,floorf@x+1
  5534  007B16  C03A  F053         	movff	?___fldiv+2,floorf@x+2
  5535  007B1A  C03B  F054         	movff	?___fldiv+3,floorf@x+3
  5536  007B1E  EC33  F02C         	call	_floorf	;wreg free
  5537  007B22  C051  F0A6         	movff	?_floorf,efgtoa@l
  5538  007B26  C052  F0A7         	movff	?_floorf+1,efgtoa@l+1
  5539  007B2A  C053  F0A8         	movff	?_floorf+2,efgtoa@l+2
  5540  007B2E  C054  F0A9         	movff	?_floorf+3,efgtoa@l+3
  5541                           
  5542                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = (int)
      +                          l;
  5543  007B32  C0A6  F051         	movff	efgtoa@l,___fltol@f1
  5544  007B36  C0A7  F052         	movff	efgtoa@l+1,___fltol@f1+1
  5545  007B3A  C0A8  F053         	movff	efgtoa@l+2,___fltol@f1+2
  5546  007B3E  C0A9  F054         	movff	efgtoa@l+3,___fltol@f1+3
  5547  007B42  EC6F  F028         	call	___fltol	;wreg free
  5548  007B46  C051  F098         	movff	?___fltol,efgtoa@d
  5549  007B4A  C052  F099         	movff	?___fltol+1,efgtoa@d+1
  5550  007B4E                     
  5551                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (!(fla
      +                          gs & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5552  007B4E  0100               	movlb	0	; () banked
  5553  007B50  B9F2               	btfsc	_flags& (0+255),4,b
  5554  007B52  EFAD  F03D         	goto	u4641
  5555  007B56  EFAF  F03D         	goto	u4640
  5556  007B5A                     u4641:
  5557  007B5A  EFCC  F03D         	goto	l4050
  5558  007B5E                     u4640:
  5559  007B5E                     
  5560                           ; BSR set to: 0
  5561  007B5E  5198               	movf	efgtoa@d& (0+255),w,b
  5562  007B60  1199               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5563  007B62  A4D8               	btfss	status,2,c
  5564  007B64  EFB6  F03D         	goto	u4651
  5565  007B68  EFB8  F03D         	goto	u4650
  5566  007B6C                     u4651:
  5567  007B6C  EFCC  F03D         	goto	l4050
  5568  007B70                     u4650:
  5569  007B70                     
  5570                           ; BSR set to: 0
  5571  007B70  0E67               	movlw	103
  5572  007B72  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  5573  007B74  A4D8               	btfss	status,2,c
  5574  007B76  EFBF  F03D         	goto	u4661
  5575  007B7A  EFC1  F03D         	goto	u4660
  5576  007B7E                     u4661:
  5577  007B7E  EFCC  F03D         	goto	l4050
  5578  007B82                     u4660:
  5579  007B82                     
  5580                           ; BSR set to: 0
  5581  007B82  BF97               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5582  007B84  EFC8  F03D         	goto	u4670
  5583  007B88  EFC6  F03D         	goto	u4671
  5584  007B8C                     u4671:
  5585  007B8C  EFCC  F03D         	goto	l4050
  5586  007B90                     u4670:
  5587  007B90                     
  5588                           ; BSR set to: 0
  5589                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             ++t;
  5590  007B90  4B90               	infsnz	efgtoa@t& (0+255),f,b
  5591  007B92  2B91               	incf	(efgtoa@t+1)& (0+255),f,b
  5592                           
  5593                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } else {
  5594  007B94  EF16  F03E         	goto	l4078
  5595  007B98                     l4050:
  5596                           
  5597                           ; BSR set to: 0
  5598                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             if (!
      +                          pp && (ne < 0)) {
  5599  007B98  5192               	movf	efgtoa@pp& (0+255),w,b
  5600  007B9A  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5601  007B9C  A4D8               	btfss	status,2,c
  5602  007B9E  EFD3  F03D         	goto	u4681
  5603  007BA2  EFD5  F03D         	goto	u4680
  5604  007BA6                     u4681:
  5605  007BA6  EFFF  F03D         	goto	l4070
  5606  007BAA                     u4680:
  5607  007BAA                     
  5608                           ; BSR set to: 0
  5609  007BAA  BF97               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5610  007BAC  EFDC  F03D         	goto	u4690
  5611  007BB0  EFDA  F03D         	goto	u4691
  5612  007BB4                     u4691:
  5613  007BB4  EFFF  F03D         	goto	l4070
  5614  007BB8                     u4690:
  5615  007BB8                     
  5616                           ; BSR set to: 0
  5617                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:                 d
      +                          buf[n++] = '.';
  5618  007BB8  0E08               	movlw	low _dbuf
  5619  007BBA  25B2               	addwf	efgtoa@n& (0+255),w,b
  5620  007BBC  6ED9               	movwf	fsr2l,c
  5621  007BBE  0E01               	movlw	high _dbuf
  5622  007BC0  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5623  007BC2  6EDA               	movwf	fsr2h,c
  5624  007BC4  0E2E               	movlw	46
  5625  007BC6  6EDF               	movwf	indf2,c
  5626  007BC8                     
  5627                           ; BSR set to: 0
  5628  007BC8  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  5629  007BCA  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  5630  007BCC                     
  5631                           ; BSR set to: 0
  5632                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:                 -
      +                          -w;
  5633  007BCC  079F               	decf	efgtoa@w& (0+255),f,b
  5634  007BCE  A0D8               	btfss	status,0,c
  5635  007BD0  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  5636  007BD2                     
  5637                           ; BSR set to: 0
  5638                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:                 p
      +                          p = 1;
  5639  007BD2  0E00               	movlw	0
  5640  007BD4  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  5641  007BD6  0E01               	movlw	1
  5642  007BD8  6F92               	movwf	efgtoa@pp& (0+255),b
  5643  007BDA  EFFF  F03D         	goto	l4070
  5644  007BDE                     l4062:
  5645                           
  5646                           ; BSR set to: 0
  5647                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:                 d
      +                          buf[n++] = '0';
  5648  007BDE  0E08               	movlw	low _dbuf
  5649  007BE0  25B2               	addwf	efgtoa@n& (0+255),w,b
  5650  007BE2  6ED9               	movwf	fsr2l,c
  5651  007BE4  0E01               	movlw	high _dbuf
  5652  007BE6  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5653  007BE8  6EDA               	movwf	fsr2h,c
  5654  007BEA  0E30               	movlw	48
  5655  007BEC  6EDF               	movwf	indf2,c
  5656  007BEE                     
  5657                           ; BSR set to: 0
  5658  007BEE  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  5659  007BF0  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  5660  007BF2                     
  5661                           ; BSR set to: 0
  5662                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:                 -
      +                          -w;
  5663  007BF2  079F               	decf	efgtoa@w& (0+255),f,b
  5664  007BF4  A0D8               	btfss	status,0,c
  5665  007BF6  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  5666  007BF8                     
  5667                           ; BSR set to: 0
  5668                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:                 -
      +                          -t;
  5669  007BF8  0790               	decf	efgtoa@t& (0+255),f,b
  5670  007BFA  A0D8               	btfss	status,0,c
  5671  007BFC  0791               	decf	(efgtoa@t+1)& (0+255),f,b
  5672  007BFE                     l4070:
  5673                           
  5674                           ; BSR set to: 0
  5675                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             while
      +                           (t) {
  5676  007BFE  5190               	movf	efgtoa@t& (0+255),w,b
  5677  007C00  1191               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5678  007C02  A4D8               	btfss	status,2,c
  5679  007C04  EF06  F03E         	goto	u4701
  5680  007C08  EF08  F03E         	goto	u4700
  5681  007C0C                     u4701:
  5682  007C0C  EFEF  F03D         	goto	l4062
  5683  007C10                     u4700:
  5684  007C10                     
  5685                           ; BSR set to: 0
  5686                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             dbuf[
      +                          n++] = '0' + d;
  5687  007C10  0E08               	movlw	low _dbuf
  5688  007C12  25B2               	addwf	efgtoa@n& (0+255),w,b
  5689  007C14  6ED9               	movwf	fsr2l,c
  5690  007C16  0E01               	movlw	high _dbuf
  5691  007C18  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5692  007C1A  6EDA               	movwf	fsr2h,c
  5693  007C1C  5198               	movf	efgtoa@d& (0+255),w,b
  5694  007C1E  0F30               	addlw	48
  5695  007C20  6EDF               	movwf	indf2,c
  5696  007C22                     
  5697                           ; BSR set to: 0
  5698  007C22  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  5699  007C24  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  5700  007C26                     
  5701                           ; BSR set to: 0
  5702                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             --w;
  5703  007C26  079F               	decf	efgtoa@w& (0+255),f,b
  5704  007C28  A0D8               	btfss	status,0,c
  5705  007C2A  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  5706  007C2C                     l4078:
  5707                           
  5708                           ; BSR set to: 0
  5709                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -= l*u;
  5710  007C2C  C0A2  F038         	movff	efgtoa@h,___flsub@b
  5711  007C30  C0A3  F039         	movff	efgtoa@h+1,___flsub@b+1
  5712  007C34  C0A4  F03A         	movff	efgtoa@h+2,___flsub@b+2
  5713  007C38  C0A5  F03B         	movff	efgtoa@h+3,___flsub@b+3
  5714  007C3C  C0B4  F013         	movff	efgtoa@u,___flmul@a
  5715  007C40  C0B5  F014         	movff	efgtoa@u+1,___flmul@a+1
  5716  007C44  C0B6  F015         	movff	efgtoa@u+2,___flmul@a+2
  5717  007C48  C0B7  F016         	movff	efgtoa@u+3,___flmul@a+3
  5718  007C4C  C0A6  F00F         	movff	efgtoa@l,___flmul@b
  5719  007C50  C0A7  F010         	movff	efgtoa@l+1,___flmul@b+1
  5720  007C54  C0A8  F011         	movff	efgtoa@l+2,___flmul@b+2
  5721  007C58  C0A9  F012         	movff	efgtoa@l+3,___flmul@b+3
  5722  007C5C  EC43  F030         	call	___flmul	;wreg free
  5723  007C60  C00F  F03C         	movff	?___flmul,___flsub@a
  5724  007C64  C010  F03D         	movff	?___flmul+1,___flsub@a+1
  5725  007C68  C011  F03E         	movff	?___flmul+2,___flsub@a+2
  5726  007C6C  C012  F03F         	movff	?___flmul+3,___flsub@a+3
  5727  007C70  EC78  F022         	call	___flsub	;wreg free
  5728  007C74  C038  F0A2         	movff	?___flsub,efgtoa@h
  5729  007C78  C039  F0A3         	movff	?___flsub+1,efgtoa@h+1
  5730  007C7C  C03A  F0A4         	movff	?___flsub+2,efgtoa@h+2
  5731  007C80  C03B  F0A5         	movff	?___flsub+3,efgtoa@h+3
  5732  007C84                     
  5733                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = u/10.
      +                          0;
  5734  007C84  C0B4  F038         	movff	efgtoa@u,___fldiv@b
  5735  007C88  C0B5  F039         	movff	efgtoa@u+1,___fldiv@b+1
  5736  007C8C  C0B6  F03A         	movff	efgtoa@u+2,___fldiv@b+2
  5737  007C90  C0B7  F03B         	movff	efgtoa@u+3,___fldiv@b+3
  5738  007C94  0E00               	movlw	0
  5739  007C96  6E3C               	movwf	___fldiv@a^0,c
  5740  007C98  0E00               	movlw	0
  5741  007C9A  6E3D               	movwf	(___fldiv@a+1)^0,c
  5742  007C9C  0E20               	movlw	32
  5743  007C9E  6E3E               	movwf	(___fldiv@a+2)^0,c
  5744  007CA0  0E41               	movlw	65
  5745  007CA2  6E3F               	movwf	(___fldiv@a+3)^0,c
  5746  007CA4  EC76  F02E         	call	___fldiv	;wreg free
  5747  007CA8  C038  F0B4         	movff	?___fldiv,efgtoa@u
  5748  007CAC  C039  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  5749  007CB0  C03A  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  5750  007CB4  C03B  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  5751  007CB8                     
  5752                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne;
  5753  007CB8  0100               	movlb	0	; () banked
  5754  007CBA  0796               	decf	efgtoa@ne& (0+255),f,b
  5755  007CBC  A0D8               	btfss	status,0,c
  5756  007CBE  0797               	decf	(efgtoa@ne+1)& (0+255),f,b
  5757  007CC0                     
  5758                           ; BSR set to: 0
  5759                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  5760  007CC0  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  5761  007CC2  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  5762  007CC4                     l4086:
  5763                           
  5764                           ; BSR set to: 0
  5765                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((i < m
      +                          ) && (n < (80 - 5))) {
  5766  007CC4  5194               	movf	efgtoa@m& (0+255),w,b
  5767  007CC6  5DAA               	subwf	efgtoa@i& (0+255),w,b
  5768  007CC8  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  5769  007CCA  0A80               	xorlw	128
  5770  007CCC  6E6C               	movwf	??_efgtoa^0,c
  5771  007CCE  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  5772  007CD0  0A80               	xorlw	128
  5773  007CD2  586C               	subwfb	??_efgtoa^0,w,c
  5774  007CD4  B0D8               	btfsc	status,0,c
  5775  007CD6  EF6F  F03E         	goto	u4711
  5776  007CDA  EF71  F03E         	goto	u4710
  5777  007CDE                     u4711:
  5778  007CDE  EF7F  F03E         	goto	l4090
  5779  007CE2                     u4710:
  5780  007CE2                     
  5781                           ; BSR set to: 0
  5782  007CE2  BFB3               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5783  007CE4  EF7D  F03E         	goto	u4721
  5784  007CE8  51B3               	movf	(efgtoa@n+1)& (0+255),w,b
  5785  007CEA  E109               	bnz	u4720
  5786  007CEC  0E4B               	movlw	75
  5787  007CEE  5DB2               	subwf	efgtoa@n& (0+255),w,b
  5788  007CF0  A0D8               	btfss	status,0,c
  5789  007CF2  EF7D  F03E         	goto	u4721
  5790  007CF6  EF7F  F03E         	goto	u4720
  5791  007CFA                     u4721:
  5792  007CFA  EF75  F03D         	goto	l4038
  5793  007CFE                     u4720:
  5794  007CFE                     l4090:
  5795                           
  5796                           ; BSR set to: 0
  5797                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp && (f
      +                          lags & (1 << 4))) {
  5798  007CFE  5192               	movf	efgtoa@pp& (0+255),w,b
  5799  007D00  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5800  007D02  A4D8               	btfss	status,2,c
  5801  007D04  EF86  F03E         	goto	u4731
  5802  007D08  EF88  F03E         	goto	u4730
  5803  007D0C                     u4731:
  5804  007D0C  EF99  F03E         	goto	l4098
  5805  007D10                     u4730:
  5806  007D10                     
  5807                           ; BSR set to: 0
  5808  007D10  A9F2               	btfss	_flags& (0+255),4,b
  5809  007D12  EF8D  F03E         	goto	u4741
  5810  007D16  EF8F  F03E         	goto	u4740
  5811  007D1A                     u4741:
  5812  007D1A  EF99  F03E         	goto	l4098
  5813  007D1E                     u4740:
  5814  007D1E                     
  5815                           ; BSR set to: 0
  5816                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf[n++]
      +                           = '.';
  5817  007D1E  0E08               	movlw	low _dbuf
  5818  007D20  25B2               	addwf	efgtoa@n& (0+255),w,b
  5819  007D22  6ED9               	movwf	fsr2l,c
  5820  007D24  0E01               	movlw	high _dbuf
  5821  007D26  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5822  007D28  6EDA               	movwf	fsr2h,c
  5823  007D2A  0E2E               	movlw	46
  5824  007D2C  6EDF               	movwf	indf2,c
  5825  007D2E                     
  5826                           ; BSR set to: 0
  5827  007D2E  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  5828  007D30  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  5829  007D32                     l4098:
  5830                           
  5831                           ; BSR set to: 0
  5832                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] = '\0
      +                          ';
  5833  007D32  0E08               	movlw	low _dbuf
  5834  007D34  25B2               	addwf	efgtoa@n& (0+255),w,b
  5835  007D36  6ED9               	movwf	fsr2l,c
  5836  007D38  0E01               	movlw	high _dbuf
  5837  007D3A  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5838  007D3C  6EDA               	movwf	fsr2h,c
  5839  007D3E  0E00               	movlw	0
  5840  007D40  6EDF               	movwf	indf2,c
  5841  007D42                     
  5842                           ; BSR set to: 0
  5843                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmode == 
      +                          'e') {
  5844  007D42  0E65               	movlw	101
  5845  007D44  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  5846  007D46  A4D8               	btfss	status,2,c
  5847  007D48  EFA8  F03E         	goto	u4751
  5848  007D4C  EFAA  F03E         	goto	u4750
  5849  007D50                     u4751:
  5850  007D50  EF58  F03A         	goto	l3910
  5851  007D54                     u4750:
  5852  007D54                     
  5853                           ; BSR set to: 0
  5854                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = sizeo
      +                          f(dbuf) - 1;
  5855  007D54  0E00               	movlw	0
  5856  007D56  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  5857  007D58  0E4F               	movlw	79
  5858  007D5A  6FAA               	movwf	efgtoa@i& (0+255),b
  5859  007D5C                     
  5860                           ; BSR set to: 0
  5861                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf[i] =
      +                           '\0';
  5862  007D5C  0E08               	movlw	low _dbuf
  5863  007D5E  25AA               	addwf	efgtoa@i& (0+255),w,b
  5864  007D60  6ED9               	movwf	fsr2l,c
  5865  007D62  0E01               	movlw	high _dbuf
  5866  007D64  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5867  007D66  6EDA               	movwf	fsr2h,c
  5868  007D68  0E00               	movlw	0
  5869  007D6A  6EDF               	movwf	indf2,c
  5870  007D6C                     
  5871                           ; BSR set to: 0
  5872                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign = 0;
  5873  007D6C  0E00               	movlw	0
  5874  007D6E  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  5875  007D70  0E00               	movlw	0
  5876  007D72  6F9A               	movwf	efgtoa@sign& (0+255),b
  5877  007D74                     
  5878                           ; BSR set to: 0
  5879                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (e < 0
      +                          ) {
  5880  007D74  BFB1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5881  007D76  EFC1  F03E         	goto	u4760
  5882  007D7A  EFBF  F03E         	goto	u4761
  5883  007D7E                     u4761:
  5884  007D7E  EFC9  F03E         	goto	l4114
  5885  007D82                     u4760:
  5886  007D82                     
  5887                           ; BSR set to: 0
  5888                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             sign 
      +                          = 1;
  5889  007D82  0E00               	movlw	0
  5890  007D84  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  5891  007D86  0E01               	movlw	1
  5892  007D88  6F9A               	movwf	efgtoa@sign& (0+255),b
  5893  007D8A                     
  5894                           ; BSR set to: 0
  5895                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             e = -
      +                          e;
  5896  007D8A  6DB0               	negf	efgtoa@e& (0+255),b
  5897  007D8C  1FB1               	comf	(efgtoa@e+1)& (0+255),f,b
  5898  007D8E  B0D8               	btfsc	status,0,c
  5899  007D90  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  5900  007D92                     l4114:
  5901                           
  5902                           ; BSR set to: 0
  5903                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 2;
  5904  007D92  0E00               	movlw	0
  5905  007D94  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  5906  007D96  0E02               	movlw	2
  5907  007D98  6F9C               	movwf	efgtoa@p& (0+255),b
  5908                           
  5909                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         while (e 
      +                          || (0 < p)) {
  5910  007D9A  EFFA  F03E         	goto	l4126
  5911  007D9E                     l4116:
  5912                           
  5913                           ; BSR set to: 0
  5914                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             --i;
  5915  007D9E  07AA               	decf	efgtoa@i& (0+255),f,b
  5916  007DA0  A0D8               	btfss	status,0,c
  5917  007DA2  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  5918  007DA4                     
  5919                           ; BSR set to: 0
  5920                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             dbuf[
      +                          i] = '0' + (e % 10);
  5921  007DA4  0E08               	movlw	low _dbuf
  5922  007DA6  25AA               	addwf	efgtoa@i& (0+255),w,b
  5923  007DA8  6ED9               	movwf	fsr2l,c
  5924  007DAA  0E01               	movlw	high _dbuf
  5925  007DAC  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5926  007DAE  6EDA               	movwf	fsr2h,c
  5927  007DB0  C0B0  F001         	movff	efgtoa@e,___awmod@dividend
  5928  007DB4  C0B1  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  5929  007DB8  0E00               	movlw	0
  5930  007DBA  6E04               	movwf	(___awmod@divisor+1)^0,c
  5931  007DBC  0E0A               	movlw	10
  5932  007DBE  6E03               	movwf	___awmod@divisor^0,c
  5933  007DC0  EC0E  F025         	call	___awmod	;wreg free
  5934  007DC4  5001               	movf	?___awmod^0,w,c
  5935  007DC6  0F30               	addlw	48
  5936  007DC8  6EDF               	movwf	indf2,c
  5937  007DCA                     
  5938                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             e = e
      +                           / 10;
  5939  007DCA  C0B0  F001         	movff	efgtoa@e,___awdiv@dividend
  5940  007DCE  C0B1  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  5941  007DD2  0E00               	movlw	0
  5942  007DD4  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5943  007DD6  0E0A               	movlw	10
  5944  007DD8  6E03               	movwf	___awdiv@divisor^0,c
  5945  007DDA  EC66  F025         	call	___awdiv	;wreg free
  5946  007DDE  C001  F0B0         	movff	?___awdiv,efgtoa@e
  5947  007DE2  C002  F0B1         	movff	?___awdiv+1,efgtoa@e+1
  5948  007DE6                     
  5949                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             --p;
  5950  007DE6  0100               	movlb	0	; () banked
  5951  007DE8  079C               	decf	efgtoa@p& (0+255),f,b
  5952  007DEA  A0D8               	btfss	status,0,c
  5953  007DEC  079D               	decf	(efgtoa@p+1)& (0+255),f,b
  5954  007DEE                     
  5955                           ; BSR set to: 0
  5956                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             --w;
  5957  007DEE  079F               	decf	efgtoa@w& (0+255),f,b
  5958  007DF0  A0D8               	btfss	status,0,c
  5959  007DF2  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  5960  007DF4                     l4126:
  5961                           
  5962                           ; BSR set to: 0
  5963                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         while (e 
      +                          || (0 < p)) {
  5964  007DF4  51B0               	movf	efgtoa@e& (0+255),w,b
  5965  007DF6  11B1               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5966  007DF8  A4D8               	btfss	status,2,c
  5967  007DFA  EF01  F03F         	goto	u4771
  5968  007DFE  EF03  F03F         	goto	u4770
  5969  007E02                     u4771:
  5970  007E02  EFCF  F03E         	goto	l4116
  5971  007E06                     u4770:
  5972  007E06                     
  5973                           ; BSR set to: 0
  5974  007E06  BF9D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5975  007E08  EF10  F03F         	goto	u4780
  5976  007E0C  519D               	movf	(efgtoa@p+1)& (0+255),w,b
  5977  007E0E  E106               	bnz	u4781
  5978  007E10  059C               	decf	efgtoa@p& (0+255),w,b
  5979  007E12  B0D8               	btfsc	status,0,c
  5980  007E14  EF0E  F03F         	goto	u4781
  5981  007E18  EF10  F03F         	goto	u4780
  5982  007E1C                     u4781:
  5983  007E1C  EFCF  F03E         	goto	l4116
  5984  007E20                     u4780:
  5985  007E20                     
  5986                           ; BSR set to: 0
  5987                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  5988  007E20  07AA               	decf	efgtoa@i& (0+255),f,b
  5989  007E22  A0D8               	btfss	status,0,c
  5990  007E24  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  5991  007E26                     
  5992                           ; BSR set to: 0
  5993                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf[i] =
      +                           sign ? '-' : '+';
  5994  007E26  519A               	movf	efgtoa@sign& (0+255),w,b
  5995  007E28  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5996  007E2A  A4D8               	btfss	status,2,c
  5997  007E2C  EF1A  F03F         	goto	u4791
  5998  007E30  EF1C  F03F         	goto	u4790
  5999  007E34                     u4791:
  6000  007E34  EF22  F03F         	goto	l4136
  6001  007E38                     u4790:
  6002  007E38                     
  6003                           ; BSR set to: 0
  6004  007E38  0E00               	movlw	0
  6005  007E3A  6F8B               	movwf	(_efgtoa$772+1)& (0+255),b
  6006  007E3C  0E2B               	movlw	43
  6007  007E3E  6F8A               	movwf	_efgtoa$772& (0+255),b
  6008  007E40  EF26  F03F         	goto	l4138
  6009  007E44                     l4136:
  6010                           
  6011                           ; BSR set to: 0
  6012  007E44  0E00               	movlw	0
  6013  007E46  6F8B               	movwf	(_efgtoa$772+1)& (0+255),b
  6014  007E48  0E2D               	movlw	45
  6015  007E4A  6F8A               	movwf	_efgtoa$772& (0+255),b
  6016  007E4C                     l4138:
  6017                           
  6018                           ; BSR set to: 0
  6019  007E4C  0E08               	movlw	low _dbuf
  6020  007E4E  25AA               	addwf	efgtoa@i& (0+255),w,b
  6021  007E50  6ED9               	movwf	fsr2l,c
  6022  007E52  0E01               	movlw	high _dbuf
  6023  007E54  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6024  007E56  6EDA               	movwf	fsr2h,c
  6025  007E58  C08A  FFDF         	movff	_efgtoa$772,indf2
  6026  007E5C                     
  6027                           ; BSR set to: 0
  6028                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  6029  007E5C  079F               	decf	efgtoa@w& (0+255),f,b
  6030  007E5E  A0D8               	btfss	status,0,c
  6031  007E60  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  6032  007E62                     
  6033                           ; BSR set to: 0
  6034                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf[i] =
      +                           (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6035  007E62  07AA               	decf	efgtoa@i& (0+255),f,b
  6036  007E64  A0D8               	btfss	status,0,c
  6037  007E66  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  6038  007E68                     
  6039                           ; BSR set to: 0
  6040  007E68  0EBF               	movlw	191
  6041  007E6A  6E6C               	movwf	??_efgtoa^0,c
  6042  007E6C  0EFF               	movlw	255
  6043  007E6E  6E6D               	movwf	(??_efgtoa+1)^0,c
  6044  007E70  506B               	movf	efgtoa@c^0,w,c
  6045  007E72  6E6E               	movwf	(??_efgtoa+2)^0,c
  6046  007E74  6A6F               	clrf	(??_efgtoa+3)^0,c
  6047  007E76  506C               	movf	??_efgtoa^0,w,c
  6048  007E78  266E               	addwf	(??_efgtoa+2)^0,f,c
  6049  007E7A  506D               	movf	(??_efgtoa+1)^0,w,c
  6050  007E7C  226F               	addwfc	(??_efgtoa+3)^0,f,c
  6051  007E7E  506F               	movf	(??_efgtoa+3)^0,w,c
  6052  007E80  E10A               	bnz	u4800
  6053  007E82  0E1A               	movlw	26
  6054  007E84  5C6E               	subwf	(??_efgtoa+2)^0,w,c
  6055  007E86  A0D8               	btfss	status,0,c
  6056  007E88  EF48  F03F         	goto	u4801
  6057  007E8C  EF4B  F03F         	goto	u4800
  6058  007E90                     u4801:
  6059  007E90  0E01               	movlw	1
  6060  007E92  EF4C  F03F         	goto	u4810
  6061  007E96                     u4800:
  6062  007E96  0E00               	movlw	0
  6063  007E98                     u4810:
  6064  007E98  6F8E               	movwf	_efgtoa$774& (0+255),b
  6065  007E9A  6B8F               	clrf	(_efgtoa$774+1)& (0+255),b
  6066  007E9C                     
  6067                           ; BSR set to: 0
  6068  007E9C  518E               	movf	_efgtoa$774& (0+255),w,b
  6069  007E9E  118F               	iorwf	(_efgtoa$774+1)& (0+255),w,b
  6070  007EA0  A4D8               	btfss	status,2,c
  6071  007EA2  EF55  F03F         	goto	u4821
  6072  007EA6  EF57  F03F         	goto	u4820
  6073  007EAA                     u4821:
  6074  007EAA  EF5D  F03F         	goto	l4152
  6075  007EAE                     u4820:
  6076  007EAE                     
  6077                           ; BSR set to: 0
  6078  007EAE  0E00               	movlw	0
  6079  007EB0  6F8D               	movwf	(_efgtoa$773+1)& (0+255),b
  6080  007EB2  0E65               	movlw	101
  6081  007EB4  6F8C               	movwf	_efgtoa$773& (0+255),b
  6082  007EB6  EF61  F03F         	goto	l4154
  6083  007EBA                     l4152:
  6084                           
  6085                           ; BSR set to: 0
  6086  007EBA  0E00               	movlw	0
  6087  007EBC  6F8D               	movwf	(_efgtoa$773+1)& (0+255),b
  6088  007EBE  0E45               	movlw	69
  6089  007EC0  6F8C               	movwf	_efgtoa$773& (0+255),b
  6090  007EC2                     l4154:
  6091                           
  6092                           ; BSR set to: 0
  6093  007EC2  0E08               	movlw	low _dbuf
  6094  007EC4  25AA               	addwf	efgtoa@i& (0+255),w,b
  6095  007EC6  6ED9               	movwf	fsr2l,c
  6096  007EC8  0E01               	movlw	high _dbuf
  6097  007ECA  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6098  007ECC  6EDA               	movwf	fsr2h,c
  6099  007ECE  C08C  FFDF         	movff	_efgtoa$773,indf2
  6100  007ED2                     
  6101                           ; BSR set to: 0
  6102                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  6103  007ED2  079F               	decf	efgtoa@w& (0+255),f,b
  6104  007ED4  A0D8               	btfss	status,0,c
  6105  007ED6  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  6106  007ED8                     
  6107                           ; BSR set to: 0
  6108                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strcpy(&d
      +                          buf[n], &dbuf[i]);
  6109  007ED8  0E08               	movlw	low _dbuf
  6110  007EDA  25B2               	addwf	efgtoa@n& (0+255),w,b
  6111  007EDC  6E01               	movwf	strcpy@dest^0,c
  6112  007EDE  0E01               	movlw	high _dbuf
  6113  007EE0  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6114  007EE2  6E02               	movwf	(strcpy@dest+1)^0,c
  6115  007EE4  0E08               	movlw	low _dbuf
  6116  007EE6  25AA               	addwf	efgtoa@i& (0+255),w,b
  6117  007EE8  6E03               	movwf	strcpy@src^0,c
  6118  007EEA  0E01               	movlw	high _dbuf
  6119  007EEC  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6120  007EEE  6E04               	movwf	(strcpy@src+1)^0,c
  6121  007EF0  ECED  F022         	call	_strcpy	;wreg free
  6122  007EF4  EF58  F03A         	goto	l3910
  6123  007EF8                     l954:
  6124  007EF8  0012               	return		;funcret
  6125  007EFA                     __end_of_efgtoa:
  6126                           	callstack 0
  6127                           
  6128 ;; *************** function _tolower *****************
  6129 ;; Defined at:
  6130 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\tolower.c"
  6131 ;; Parameters:    Size  Location     Type
  6132 ;;  c               2    6[COMRAM] int 
  6133 ;; Auto vars:     Size  Location     Type
  6134 ;;		None
  6135 ;; Return value:  Size  Location     Type
  6136 ;;                  2    6[COMRAM] int 
  6137 ;; Registers used:
  6138 ;;		wreg, status,2, status,0
  6139 ;; Tracked objects:
  6140 ;;		On entry : 0/0
  6141 ;;		On exit  : 0/0
  6142 ;;		Unchanged: 0/0
  6143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6144 ;;      Params:         2       0       0       0       0       0       0
  6145 ;;      Locals:         2       0       0       0       0       0       0
  6146 ;;      Temps:          4       0       0       0       0       0       0
  6147 ;;      Totals:         8       0       0       0       0       0       0
  6148 ;;Total ram usage:        8 bytes
  6149 ;; Hardware stack levels used:    1
  6150 ;; Hardware stack levels required when called:    1
  6151 ;; This function calls:
  6152 ;;		_isupper
  6153 ;; This function is called by:
  6154 ;;		_efgtoa
  6155 ;;		_vfpfcnvrt
  6156 ;; This function uses a non-reentrant model
  6157 ;;
  6158                           
  6159                           	psect	text11
  6160  004692                     __ptext11:
  6161                           	callstack 0
  6162  004692                     _tolower:
  6163                           	callstack 25
  6164  004692  0EBF               	movlw	191
  6165  004694  6E09               	movwf	??_tolower^0,c
  6166  004696  0EFF               	movlw	255
  6167  004698  6E0A               	movwf	(??_tolower+1)^0,c
  6168  00469A  C007  F00B         	movff	tolower@c,??_tolower+2
  6169  00469E  C008  F00C         	movff	tolower@c+1,??_tolower+3
  6170  0046A2  5009               	movf	??_tolower^0,w,c
  6171  0046A4  260B               	addwf	(??_tolower+2)^0,f,c
  6172  0046A6  500A               	movf	(??_tolower+1)^0,w,c
  6173  0046A8  220C               	addwfc	(??_tolower+3)^0,f,c
  6174  0046AA  500C               	movf	(??_tolower+3)^0,w,c
  6175  0046AC  E10A               	bnz	u4140
  6176  0046AE  0E1A               	movlw	26
  6177  0046B0  5C0B               	subwf	(??_tolower+2)^0,w,c
  6178  0046B2  A0D8               	btfss	status,0,c
  6179  0046B4  EF5E  F023         	goto	u4141
  6180  0046B8  EF61  F023         	goto	u4140
  6181  0046BC                     u4141:
  6182  0046BC  0E01               	movlw	1
  6183  0046BE  EF62  F023         	goto	u4150
  6184  0046C2                     u4140:
  6185  0046C2  0E00               	movlw	0
  6186  0046C4                     u4150:
  6187  0046C4  6E0D               	movwf	_tolower$921^0,c
  6188  0046C6  6A0E               	clrf	(_tolower$921+1)^0,c
  6189  0046C8  500D               	movf	_tolower$921^0,w,c
  6190  0046CA  100E               	iorwf	(_tolower$921+1)^0,w,c
  6191  0046CC  B4D8               	btfsc	status,2,c
  6192  0046CE  EF6B  F023         	goto	u4161
  6193  0046D2  EF6D  F023         	goto	u4160
  6194  0046D6                     u4161:
  6195  0046D6  EF74  F023         	goto	l1182
  6196  0046DA                     u4160:
  6197  0046DA  0E20               	movlw	32
  6198  0046DC  1007               	iorwf	tolower@c^0,w,c
  6199  0046DE  6E07               	movwf	?_tolower^0,c
  6200  0046E0  5008               	movf	(tolower@c+1)^0,w,c
  6201  0046E2  6E08               	movwf	(?_tolower+1)^0,c
  6202  0046E4  EF78  F023         	goto	l1187
  6203  0046E8                     l1182:
  6204  0046E8  C007  F007         	movff	tolower@c,?_tolower
  6205  0046EC  C008  F008         	movff	tolower@c+1,?_tolower+1
  6206  0046F0                     l1187:
  6207  0046F0  0012               	return		;funcret
  6208  0046F2                     __end_of_tolower:
  6209                           	callstack 0
  6210                           
  6211 ;; *************** function _isupper *****************
  6212 ;; Defined at:
  6213 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\isupper.c"
  6214 ;; Parameters:    Size  Location     Type
  6215 ;;  c               2    0[COMRAM] int 
  6216 ;; Auto vars:     Size  Location     Type
  6217 ;;		None
  6218 ;; Return value:  Size  Location     Type
  6219 ;;                  2    0[COMRAM] int 
  6220 ;; Registers used:
  6221 ;;		wreg, status,2, status,0
  6222 ;; Tracked objects:
  6223 ;;		On entry : 0/0
  6224 ;;		On exit  : 0/0
  6225 ;;		Unchanged: 0/0
  6226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6227 ;;      Params:         2       0       0       0       0       0       0
  6228 ;;      Locals:         0       0       0       0       0       0       0
  6229 ;;      Temps:          4       0       0       0       0       0       0
  6230 ;;      Totals:         6       0       0       0       0       0       0
  6231 ;;Total ram usage:        6 bytes
  6232 ;; Hardware stack levels used:    1
  6233 ;; This function calls:
  6234 ;;		Nothing
  6235 ;; This function is called by:
  6236 ;;		_efgtoa
  6237 ;;		_vfpfcnvrt
  6238 ;;		_tolower
  6239 ;; This function uses a non-reentrant model
  6240 ;;
  6241                           
  6242                           	psect	text12
  6243  004474                     __ptext12:
  6244                           	callstack 0
  6245  004474                     _isupper:
  6246                           	callstack 25
  6247  004474  0EBF               	movlw	191
  6248  004476  6E03               	movwf	??_isupper^0,c
  6249  004478  0EFF               	movlw	255
  6250  00447A  6E04               	movwf	(??_isupper+1)^0,c
  6251  00447C  C001  F005         	movff	isupper@c,??_isupper+2
  6252  004480  C002  F006         	movff	isupper@c+1,??_isupper+3
  6253  004484  5003               	movf	??_isupper^0,w,c
  6254  004486  2605               	addwf	(??_isupper+2)^0,f,c
  6255  004488  5004               	movf	(??_isupper+1)^0,w,c
  6256  00448A  2206               	addwfc	(??_isupper+3)^0,f,c
  6257  00448C  5006               	movf	(??_isupper+3)^0,w,c
  6258  00448E  E10A               	bnz	u3290
  6259  004490  0E1A               	movlw	26
  6260  004492  5C05               	subwf	(??_isupper+2)^0,w,c
  6261  004494  A0D8               	btfss	status,0,c
  6262  004496  EF4F  F022         	goto	u3291
  6263  00449A  EF52  F022         	goto	u3290
  6264  00449E                     u3291:
  6265  00449E  0E01               	movlw	1
  6266  0044A0  EF53  F022         	goto	u3300
  6267  0044A4                     u3290:
  6268  0044A4  0E00               	movlw	0
  6269  0044A6                     u3300:
  6270  0044A6  6E01               	movwf	?_isupper^0,c
  6271  0044A8  6A02               	clrf	(?_isupper+1)^0,c
  6272  0044AA  0012               	return		;funcret
  6273  0044AC                     __end_of_isupper:
  6274                           	callstack 0
  6275                           
  6276 ;; *************** function _strcpy *****************
  6277 ;; Defined at:
  6278 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  6279 ;; Parameters:    Size  Location     Type
  6280 ;;  dest            2    0[COMRAM] PTR unsigned char 
  6281 ;;		 -> dbuf(80), 
  6282 ;;  src             2    2[COMRAM] PTR const unsigned char 
  6283 ;;		 -> STR_37(4), STR_36(4), STR_33(4), STR_32(4), 
  6284 ;;		 -> dbuf(80), 
  6285 ;; Auto vars:     Size  Location     Type
  6286 ;;  d               2    8[COMRAM] PTR unsigned char 
  6287 ;;		 -> dbuf(80), 
  6288 ;;  s               2    6[COMRAM] PTR const unsigned char 
  6289 ;;		 -> STR_37(4), STR_36(4), STR_33(4), STR_32(4), 
  6290 ;;		 -> dbuf(80), 
  6291 ;; Return value:  Size  Location     Type
  6292 ;;                  2    0[COMRAM] PTR unsigned char 
  6293 ;; Registers used:
  6294 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6295 ;; Tracked objects:
  6296 ;;		On entry : 0/0
  6297 ;;		On exit  : 0/0
  6298 ;;		Unchanged: 0/0
  6299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6300 ;;      Params:         4       0       0       0       0       0       0
  6301 ;;      Locals:         4       0       0       0       0       0       0
  6302 ;;      Temps:          2       0       0       0       0       0       0
  6303 ;;      Totals:        10       0       0       0       0       0       0
  6304 ;;Total ram usage:       10 bytes
  6305 ;; Hardware stack levels used:    1
  6306 ;; This function calls:
  6307 ;;		Nothing
  6308 ;; This function is called by:
  6309 ;;		_efgtoa
  6310 ;; This function uses a non-reentrant model
  6311 ;;
  6312                           
  6313                           	psect	text13
  6314  0045DA                     __ptext13:
  6315                           	callstack 0
  6316  0045DA                     _strcpy:
  6317                           	callstack 25
  6318  0045DA  C003  F007         	movff	strcpy@src,strcpy@s
  6319  0045DE  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  6320  0045E2  C001  F009         	movff	strcpy@dest,strcpy@d
  6321  0045E6  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  6322  0045EA                     l3810:
  6323  0045EA  5007               	movf	strcpy@s^0,w,c
  6324  0045EC  6E05               	movwf	??_strcpy^0,c
  6325  0045EE  5008               	movf	(strcpy@s+1)^0,w,c
  6326  0045F0  6E06               	movwf	(??_strcpy+1)^0,c
  6327  0045F2  4A07               	infsnz	strcpy@s^0,f,c
  6328  0045F4  2A08               	incf	(strcpy@s+1)^0,f,c
  6329  0045F6  C005  FFF6         	movff	??_strcpy,tblptrl
  6330  0045FA  C006  FFF7         	movff	??_strcpy+1,tblptrh
  6331  0045FE  6AF8               	clrf	tblptru,c
  6332  004600  C009  FFD9         	movff	strcpy@d,fsr2l
  6333  004604  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  6334  004608  4A09               	infsnz	strcpy@d^0,f,c
  6335  00460A  2A0A               	incf	(strcpy@d+1)^0,f,c
  6336  00460C  0E05               	movlw	(high __ramtop+-1)
  6337  00460E  64F7               	cpfsgt	tblptrh,c
  6338  004610  D003               	bra	u4127
  6339  004612  0008               	tblrd		*
  6340  004614  50F5               	movf	tablat,w,c
  6341  004616  D005               	bra	u4120
  6342  004618                     u4127:
  6343  004618  CFF6 FFE9          	movff	tblptrl,fsr0l
  6344  00461C  CFF7 FFEA          	movff	tblptrh,fsr0h
  6345  004620  50EF               	movf	indf0,w,c
  6346  004622                     u4120:
  6347  004622  6EDF               	movwf	indf2,c
  6348  004624  50DF               	movf	indf2,w,c
  6349  004626  A4D8               	btfss	status,2,c
  6350  004628  EF18  F023         	goto	u4131
  6351  00462C  EF1A  F023         	goto	u4130
  6352  004630                     u4131:
  6353  004630  EFF5  F022         	goto	l3810
  6354  004634                     u4130:
  6355  004634  0012               	return		;funcret
  6356  004636                     __end_of_strcpy:
  6357                           	callstack 0
  6358                           
  6359 ;; *************** function _pad *****************
  6360 ;; Defined at:
  6361 ;;		line 72 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6362 ;; Parameters:    Size  Location     Type
  6363 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6364 ;;		 -> sprintf@f(6), 
  6365 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6366 ;;		 -> dbuf(80), 
  6367 ;;  p               2   20[COMRAM] int 
  6368 ;; Auto vars:     Size  Location     Type
  6369 ;;  w               2   25[COMRAM] int 
  6370 ;;  i               2   23[COMRAM] int 
  6371 ;; Return value:  Size  Location     Type
  6372 ;;                  2   16[COMRAM] int 
  6373 ;; Registers used:
  6374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6375 ;; Tracked objects:
  6376 ;;		On entry : 0/0
  6377 ;;		On exit  : 0/0
  6378 ;;		Unchanged: 0/0
  6379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6380 ;;      Params:         6       0       0       0       0       0       0
  6381 ;;      Locals:         4       0       0       0       0       0       0
  6382 ;;      Temps:          1       0       0       0       0       0       0
  6383 ;;      Totals:        11       0       0       0       0       0       0
  6384 ;;Total ram usage:       11 bytes
  6385 ;; Hardware stack levels used:    1
  6386 ;; Hardware stack levels required when called:    3
  6387 ;; This function calls:
  6388 ;;		_fputc
  6389 ;;		_fputs
  6390 ;;		_strlen
  6391 ;; This function is called by:
  6392 ;;		_efgtoa
  6393 ;; This function uses a non-reentrant model
  6394 ;;
  6395                           
  6396                           	psect	text14
  6397  004B90                     __ptext14:
  6398                           	callstack 0
  6399  004B90                     _pad:
  6400                           	callstack 22
  6401  004B90                     
  6402                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pad(FIL
      +                          E *fp, char *buf, int p);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c
      +                          : 73: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 74:     int i, 
      +                          w;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 77:     if (flags & 
      +                          (1 << 0)) {
  6403  004B90  0100               	movlb	0	; () banked
  6404  004B92  A1F2               	btfss	_flags& (0+255),0,b
  6405  004B94  EFCE  F025         	goto	u4011
  6406  004B98  EFD0  F025         	goto	u4010
  6407  004B9C                     u4011:
  6408  004B9C  EFDA  F025         	goto	l3768
  6409  004BA0                     u4010:
  6410  004BA0                     
  6411                           ; BSR set to: 0
  6412                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs((con
      +                          st char *)buf, fp);
  6413  004BA0  C013  F00A         	movff	pad@buf,fputs@s
  6414  004BA4  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6415  004BA8  C011  F00C         	movff	pad@fp,fputs@fp
  6416  004BAC  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6417  004BB0  EC56  F022         	call	_fputs	;wreg free
  6418  004BB4                     l3768:
  6419                           
  6420                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ? 
      +                          0 : p;
  6421  004BB4  BE16               	btfsc	(pad@p+1)^0,7,c
  6422  004BB6  EFDF  F025         	goto	u4021
  6423  004BBA  EFE1  F025         	goto	u4020
  6424  004BBE                     u4021:
  6425  004BBE  EFE7  F025         	goto	l3772
  6426  004BC2                     u4020:
  6427  004BC2  C015  F01A         	movff	pad@p,pad@w
  6428  004BC6  C016  F01B         	movff	pad@p+1,pad@w+1
  6429  004BCA  EFEB  F025         	goto	l931
  6430  004BCE                     l3772:
  6431  004BCE  0E00               	movlw	0
  6432  004BD0  6E1B               	movwf	(pad@w+1)^0,c
  6433  004BD2  0E00               	movlw	0
  6434  004BD4  6E1A               	movwf	pad@w^0,c
  6435  004BD6                     l931:
  6436                           
  6437                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6438  004BD6  0E00               	movlw	0
  6439  004BD8  6E19               	movwf	(pad@i+1)^0,c
  6440  004BDA  0E00               	movlw	0
  6441  004BDC  6E18               	movwf	pad@i^0,c
  6442                           
  6443                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  6444  004BDE  EFFD  F025         	goto	l3778
  6445  004BE2                     l3774:
  6446                           
  6447                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc(' ',
      +                           fp);
  6448  004BE2  0E00               	movlw	0
  6449  004BE4  6E02               	movwf	(fputc@c+1)^0,c
  6450  004BE6  0E20               	movlw	32
  6451  004BE8  6E01               	movwf	fputc@c^0,c
  6452  004BEA  C011  F003         	movff	pad@fp,fputc@fp
  6453  004BEE  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6454  004BF2  EC2B  F026         	call	_fputc	;wreg free
  6455  004BF6                     
  6456                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6457  004BF6  4A18               	infsnz	pad@i^0,f,c
  6458  004BF8  2A19               	incf	(pad@i+1)^0,f,c
  6459  004BFA                     l3778:
  6460                           
  6461                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  6462  004BFA  501A               	movf	pad@w^0,w,c
  6463  004BFC  5C18               	subwf	pad@i^0,w,c
  6464  004BFE  5019               	movf	(pad@i+1)^0,w,c
  6465  004C00  0A80               	xorlw	128
  6466  004C02  6E17               	movwf	??_pad^0,c
  6467  004C04  501B               	movf	(pad@w+1)^0,w,c
  6468  004C06  0A80               	xorlw	128
  6469  004C08  5817               	subwfb	??_pad^0,w,c
  6470  004C0A  A0D8               	btfss	status,0,c
  6471  004C0C  EF0A  F026         	goto	u4031
  6472  004C10  EF0C  F026         	goto	u4030
  6473  004C14                     u4031:
  6474  004C14  EFF1  F025         	goto	l3774
  6475  004C18                     u4030:
  6476  004C18                     
  6477                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(flags & 
      +                          (1 << 0))) {
  6478  004C18  0100               	movlb	0	; () banked
  6479  004C1A  B1F2               	btfsc	_flags& (0+255),0,b
  6480  004C1C  EF12  F026         	goto	u4041
  6481  004C20  EF14  F026         	goto	u4040
  6482  004C24                     u4041:
  6483  004C24  EF1E  F026         	goto	l3782
  6484  004C28                     u4040:
  6485  004C28                     
  6486                           ; BSR set to: 0
  6487                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs((con
      +                          st char *)buf, fp);
  6488  004C28  C013  F00A         	movff	pad@buf,fputs@s
  6489  004C2C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6490  004C30  C011  F00C         	movff	pad@fp,fputs@fp
  6491  004C34  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6492  004C38  EC56  F022         	call	_fputs	;wreg free
  6493  004C3C                     l3782:
  6494                           
  6495                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return strlen(
      +                          buf) + w;
  6496  004C3C  C013  F001         	movff	pad@buf,strlen@s
  6497  004C40  C014  F002         	movff	pad@buf+1,strlen@s+1
  6498  004C44  ECE7  F021         	call	_strlen	;wreg free
  6499  004C48  501A               	movf	pad@w^0,w,c
  6500  004C4A  2401               	addwf	?_strlen^0,w,c
  6501  004C4C  6E11               	movwf	?_pad^0,c
  6502  004C4E  501B               	movf	(pad@w+1)^0,w,c
  6503  004C50  2002               	addwfc	(?_strlen+1)^0,w,c
  6504  004C52  6E12               	movwf	(?_pad+1)^0,c
  6505  004C54  0012               	return		;funcret
  6506  004C56                     __end_of_pad:
  6507                           	callstack 0
  6508                           
  6509 ;; *************** function _strlen *****************
  6510 ;; Defined at:
  6511 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strlen.c"
  6512 ;; Parameters:    Size  Location     Type
  6513 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6514 ;;		 -> dbuf(80), 
  6515 ;; Auto vars:     Size  Location     Type
  6516 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6517 ;;		 -> dbuf(80), 
  6518 ;; Return value:  Size  Location     Type
  6519 ;;                  2    0[COMRAM] unsigned int 
  6520 ;; Registers used:
  6521 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6522 ;; Tracked objects:
  6523 ;;		On entry : 0/0
  6524 ;;		On exit  : 0/0
  6525 ;;		Unchanged: 0/0
  6526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6527 ;;      Params:         2       0       0       0       0       0       0
  6528 ;;      Locals:         2       0       0       0       0       0       0
  6529 ;;      Temps:          0       0       0       0       0       0       0
  6530 ;;      Totals:         4       0       0       0       0       0       0
  6531 ;;Total ram usage:        4 bytes
  6532 ;; Hardware stack levels used:    1
  6533 ;; This function calls:
  6534 ;;		Nothing
  6535 ;; This function is called by:
  6536 ;;		_pad
  6537 ;; This function uses a non-reentrant model
  6538 ;;
  6539                           
  6540                           	psect	text15
  6541  0043CE                     __ptext15:
  6542                           	callstack 0
  6543  0043CE                     _strlen:
  6544                           	callstack 24
  6545  0043CE  C001  F003         	movff	strlen@s,strlen@a
  6546  0043D2  C002  F004         	movff	strlen@s+1,strlen@a+1
  6547  0043D6  EFEF  F021         	goto	l3304
  6548  0043DA                     l3302:
  6549  0043DA  4A01               	infsnz	strlen@s^0,f,c
  6550  0043DC  2A02               	incf	(strlen@s+1)^0,f,c
  6551  0043DE                     l3304:
  6552  0043DE  C001  FFD9         	movff	strlen@s,fsr2l
  6553  0043E2  C002  FFDA         	movff	strlen@s+1,fsr2h
  6554  0043E6  50DF               	movf	indf2,w,c
  6555  0043E8  A4D8               	btfss	status,2,c
  6556  0043EA  EFF9  F021         	goto	u3281
  6557  0043EE  EFFB  F021         	goto	u3280
  6558  0043F2                     u3281:
  6559  0043F2  EFED  F021         	goto	l3302
  6560  0043F6                     u3280:
  6561  0043F6  5003               	movf	strlen@a^0,w,c
  6562  0043F8  5C01               	subwf	strlen@s^0,w,c
  6563  0043FA  6E01               	movwf	?_strlen^0,c
  6564  0043FC  5004               	movf	(strlen@a+1)^0,w,c
  6565  0043FE  5802               	subwfb	(strlen@s+1)^0,w,c
  6566  004400  6E02               	movwf	(?_strlen+1)^0,c
  6567  004402  0012               	return		;funcret
  6568  004404                     __end_of_strlen:
  6569                           	callstack 0
  6570                           
  6571 ;; *************** function _fputs *****************
  6572 ;; Defined at:
  6573 ;;		line 8 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  6574 ;; Parameters:    Size  Location     Type
  6575 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6576 ;;		 -> dbuf(80), 
  6577 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6578 ;;		 -> sprintf@f(6), 
  6579 ;; Auto vars:     Size  Location     Type
  6580 ;;  i               2   14[COMRAM] int 
  6581 ;;  c               1   13[COMRAM] unsigned char 
  6582 ;; Return value:  Size  Location     Type
  6583 ;;                  2    9[COMRAM] int 
  6584 ;; Registers used:
  6585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6586 ;; Tracked objects:
  6587 ;;		On entry : 0/0
  6588 ;;		On exit  : 0/0
  6589 ;;		Unchanged: 0/0
  6590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6591 ;;      Params:         4       0       0       0       0       0       0
  6592 ;;      Locals:         3       0       0       0       0       0       0
  6593 ;;      Temps:          0       0       0       0       0       0       0
  6594 ;;      Totals:         7       0       0       0       0       0       0
  6595 ;;Total ram usage:        7 bytes
  6596 ;; Hardware stack levels used:    1
  6597 ;; Hardware stack levels required when called:    2
  6598 ;; This function calls:
  6599 ;;		_fputc
  6600 ;; This function is called by:
  6601 ;;		_pad
  6602 ;; This function uses a non-reentrant model
  6603 ;;
  6604                           
  6605                           	psect	text16
  6606  0044AC                     __ptext16:
  6607                           	callstack 0
  6608  0044AC                     _fputs:
  6609                           	callstack 22
  6610  0044AC  0E00               	movlw	0
  6611  0044AE  6E10               	movwf	(fputs@i+1)^0,c
  6612  0044B0  0E00               	movlw	0
  6613  0044B2  6E0F               	movwf	fputs@i^0,c
  6614  0044B4  EF67  F022         	goto	l3298
  6615  0044B8                     l3294:
  6616  0044B8  C00E  F001         	movff	fputs@c,fputc@c
  6617  0044BC  6A02               	clrf	(fputc@c+1)^0,c
  6618  0044BE  C00C  F003         	movff	fputs@fp,fputc@fp
  6619  0044C2  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6620  0044C6  EC2B  F026         	call	_fputc	;wreg free
  6621  0044CA  4A0F               	infsnz	fputs@i^0,f,c
  6622  0044CC  2A10               	incf	(fputs@i+1)^0,f,c
  6623  0044CE                     l3298:
  6624  0044CE  500F               	movf	fputs@i^0,w,c
  6625  0044D0  240A               	addwf	fputs@s^0,w,c
  6626  0044D2  6ED9               	movwf	fsr2l,c
  6627  0044D4  5010               	movf	(fputs@i+1)^0,w,c
  6628  0044D6  200B               	addwfc	(fputs@s+1)^0,w,c
  6629  0044D8  6EDA               	movwf	fsr2h,c
  6630  0044DA  50DF               	movf	indf2,w,c
  6631  0044DC  6E0E               	movwf	fputs@c^0,c
  6632  0044DE  500E               	movf	fputs@c^0,w,c
  6633  0044E0  A4D8               	btfss	status,2,c
  6634  0044E2  EF75  F022         	goto	u3271
  6635  0044E6  EF77  F022         	goto	u3270
  6636  0044EA                     u3271:
  6637  0044EA  EF5C  F022         	goto	l3294
  6638  0044EE                     u3270:
  6639  0044EE  0012               	return		;funcret
  6640  0044F0                     __end_of_fputs:
  6641                           	callstack 0
  6642                           
  6643 ;; *************** function _fputc *****************
  6644 ;; Defined at:
  6645 ;;		line 8 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  6646 ;; Parameters:    Size  Location     Type
  6647 ;;  c               2    0[COMRAM] int 
  6648 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6649 ;;		 -> sprintf@f(6), 
  6650 ;; Auto vars:     Size  Location     Type
  6651 ;;		None
  6652 ;; Return value:  Size  Location     Type
  6653 ;;                  2    0[COMRAM] int 
  6654 ;; Registers used:
  6655 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6656 ;; Tracked objects:
  6657 ;;		On entry : 0/0
  6658 ;;		On exit  : 0/0
  6659 ;;		Unchanged: 0/0
  6660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6661 ;;      Params:         4       0       0       0       0       0       0
  6662 ;;      Locals:         0       0       0       0       0       0       0
  6663 ;;      Temps:          5       0       0       0       0       0       0
  6664 ;;      Totals:         9       0       0       0       0       0       0
  6665 ;;Total ram usage:        9 bytes
  6666 ;; Hardware stack levels used:    1
  6667 ;; Hardware stack levels required when called:    1
  6668 ;; This function calls:
  6669 ;;		_putch
  6670 ;; This function is called by:
  6671 ;;		_pad
  6672 ;;		_vfpfcnvrt
  6673 ;;		_fputs
  6674 ;; This function uses a non-reentrant model
  6675 ;;
  6676                           
  6677                           	psect	text17
  6678  004C56                     __ptext17:
  6679                           	callstack 0
  6680  004C56                     _fputc:
  6681                           	callstack 25
  6682  004C56  5003               	movf	fputc@fp^0,w,c
  6683  004C58  1004               	iorwf	(fputc@fp+1)^0,w,c
  6684  004C5A  B4D8               	btfsc	status,2,c
  6685  004C5C  EF32  F026         	goto	u2841
  6686  004C60  EF34  F026         	goto	u2840
  6687  004C64                     u2841:
  6688  004C64  EF3D  F026         	goto	l3080
  6689  004C68                     u2840:
  6690  004C68  5003               	movf	fputc@fp^0,w,c
  6691  004C6A  1004               	iorwf	(fputc@fp+1)^0,w,c
  6692  004C6C  A4D8               	btfss	status,2,c
  6693  004C6E  EF3B  F026         	goto	u2851
  6694  004C72  EF3D  F026         	goto	u2850
  6695  004C76                     u2851:
  6696  004C76  EF42  F026         	goto	l3082
  6697  004C7A                     u2850:
  6698  004C7A                     l3080:
  6699  004C7A  5001               	movf	fputc@c^0,w,c
  6700  004C7C  EC82  F021         	call	_putch
  6701  004C80  EF8F  F026         	goto	l1145
  6702  004C84                     l3082:
  6703  004C84  EE20 F004          	lfsr	2,4
  6704  004C88  5003               	movf	fputc@fp^0,w,c
  6705  004C8A  26D9               	addwf	fsr2l,f,c
  6706  004C8C  5004               	movf	(fputc@fp+1)^0,w,c
  6707  004C8E  22DA               	addwfc	fsr2h,f,c
  6708  004C90  50DE               	movf	postinc2,w,c
  6709  004C92  10DE               	iorwf	postinc2,w,c
  6710  004C94  B4D8               	btfsc	status,2,c
  6711  004C96  EF4F  F026         	goto	u2861
  6712  004C9A  EF51  F026         	goto	u2860
  6713  004C9E                     u2861:
  6714  004C9E  EF6C  F026         	goto	l3086
  6715  004CA2                     u2860:
  6716  004CA2  EE20 F004          	lfsr	2,4
  6717  004CA6  5003               	movf	fputc@fp^0,w,c
  6718  004CA8  26D9               	addwf	fsr2l,f,c
  6719  004CAA  5004               	movf	(fputc@fp+1)^0,w,c
  6720  004CAC  22DA               	addwfc	fsr2h,f,c
  6721  004CAE  EE10 F002          	lfsr	1,2
  6722  004CB2  5003               	movf	fputc@fp^0,w,c
  6723  004CB4  26E1               	addwf	fsr1l,f,c
  6724  004CB6  5004               	movf	(fputc@fp+1)^0,w,c
  6725  004CB8  22E2               	addwfc	fsr1h,f,c
  6726  004CBA  50DE               	movf	postinc2,w,c
  6727  004CBC  5CE6               	subwf	postinc1,w,c
  6728  004CBE  50E6               	movf	postinc1,w,c
  6729  004CC0  0A80               	xorlw	128
  6730  004CC2  6E09               	movwf	(??_fputc+4)^0,c
  6731  004CC4  50DE               	movf	postinc2,w,c
  6732  004CC6  0A80               	xorlw	128
  6733  004CC8  5809               	subwfb	(??_fputc+4)^0,w,c
  6734  004CCA  B0D8               	btfsc	status,0,c
  6735  004CCC  EF6A  F026         	goto	u2871
  6736  004CD0  EF6C  F026         	goto	u2870
  6737  004CD4                     u2871:
  6738  004CD4  EF8F  F026         	goto	l1145
  6739  004CD8                     u2870:
  6740  004CD8                     l3086:
  6741  004CD8  EE20 F002          	lfsr	2,2
  6742  004CDC  5003               	movf	fputc@fp^0,w,c
  6743  004CDE  26D9               	addwf	fsr2l,f,c
  6744  004CE0  5004               	movf	(fputc@fp+1)^0,w,c
  6745  004CE2  22DA               	addwfc	fsr2h,f,c
  6746  004CE4  CFDE F005          	movff	postinc2,??_fputc
  6747  004CE8  CFDD F006          	movff	postdec2,??_fputc+1
  6748  004CEC  C003  FFD9         	movff	fputc@fp,fsr2l
  6749  004CF0  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6750  004CF4  CFDE F007          	movff	postinc2,??_fputc+2
  6751  004CF8  CFDD F008          	movff	postdec2,??_fputc+3
  6752  004CFC  5005               	movf	??_fputc^0,w,c
  6753  004CFE  2407               	addwf	(??_fputc+2)^0,w,c
  6754  004D00  6ED9               	movwf	fsr2l,c
  6755  004D02  5006               	movf	(??_fputc+1)^0,w,c
  6756  004D04  2008               	addwfc	(??_fputc+3)^0,w,c
  6757  004D06  6EDA               	movwf	fsr2h,c
  6758  004D08  C001  FFDF         	movff	fputc@c,indf2
  6759  004D0C  EE20 F002          	lfsr	2,2
  6760  004D10  5003               	movf	fputc@fp^0,w,c
  6761  004D12  26D9               	addwf	fsr2l,f,c
  6762  004D14  5004               	movf	(fputc@fp+1)^0,w,c
  6763  004D16  22DA               	addwfc	fsr2h,f,c
  6764  004D18  2ADE               	incf	postinc2,f,c
  6765  004D1A  0E00               	movlw	0
  6766  004D1C  22DD               	addwfc	postdec2,f,c
  6767  004D1E                     l1145:
  6768  004D1E  0012               	return		;funcret
  6769  004D20                     __end_of_fputc:
  6770                           	callstack 0
  6771                           
  6772 ;; *************** function _putch *****************
  6773 ;; Defined at:
  6774 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\putch.c"
  6775 ;; Parameters:    Size  Location     Type
  6776 ;;  c               1    wreg     unsigned char 
  6777 ;; Auto vars:     Size  Location     Type
  6778 ;;  c               1    0[COMRAM] unsigned char 
  6779 ;; Return value:  Size  Location     Type
  6780 ;;                  1    wreg      void 
  6781 ;; Registers used:
  6782 ;;		wreg
  6783 ;; Tracked objects:
  6784 ;;		On entry : 0/0
  6785 ;;		On exit  : 0/0
  6786 ;;		Unchanged: 0/0
  6787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6788 ;;      Params:         0       0       0       0       0       0       0
  6789 ;;      Locals:         0       0       0       0       0       0       0
  6790 ;;      Temps:          0       0       0       0       0       0       0
  6791 ;;      Totals:         0       0       0       0       0       0       0
  6792 ;;Total ram usage:        0 bytes
  6793 ;; Hardware stack levels used:    1
  6794 ;; This function calls:
  6795 ;;		Nothing
  6796 ;; This function is called by:
  6797 ;;		_fputc
  6798 ;; This function uses a non-reentrant model
  6799 ;;
  6800                           
  6801                           	psect	text18
  6802  004304                     __ptext18:
  6803                           	callstack 0
  6804  004304                     _putch:
  6805                           	callstack 25
  6806  004304  0012               	return		;funcret
  6807  004306                     __end_of_putch:
  6808                           	callstack 0
  6809                           
  6810 ;; *************** function _floorf *****************
  6811 ;; Defined at:
  6812 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\floorf.c"
  6813 ;; Parameters:    Size  Location     Type
  6814 ;;  x               4   80[COMRAM] float 
  6815 ;; Auto vars:     Size  Location     Type
  6816 ;;  u               4   96[COMRAM] struct .
  6817 ;;  m               4   90[COMRAM] unsigned long 
  6818 ;;  e               2   94[COMRAM] int 
  6819 ;; Return value:  Size  Location     Type
  6820 ;;                  4   80[COMRAM] float 
  6821 ;; Registers used:
  6822 ;;		wreg, status,2, status,0
  6823 ;; Tracked objects:
  6824 ;;		On entry : 0/0
  6825 ;;		On exit  : 0/0
  6826 ;;		Unchanged: 0/0
  6827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6828 ;;      Params:         4       0       0       0       0       0       0
  6829 ;;      Locals:        10       0       0       0       0       0       0
  6830 ;;      Temps:          6       0       0       0       0       0       0
  6831 ;;      Totals:        20       0       0       0       0       0       0
  6832 ;;Total ram usage:       20 bytes
  6833 ;; Hardware stack levels used:    1
  6834 ;; This function calls:
  6835 ;;		Nothing
  6836 ;; This function is called by:
  6837 ;;		_efgtoa
  6838 ;; This function uses a non-reentrant model
  6839 ;;
  6840                           
  6841                           	psect	text19
  6842  005866                     __ptext19:
  6843                           	callstack 0
  6844  005866                     _floorf:
  6845                           	callstack 25
  6846  005866  C100  F061         	movff	floorf@F524,floorf@u
  6847  00586A  C101  F062         	movff	floorf@F524+1,floorf@u+1
  6848  00586E  C102  F063         	movff	floorf@F524+2,floorf@u+2
  6849  005872  C103  F064         	movff	floorf@F524+3,floorf@u+3
  6850  005876  C051  F061         	movff	floorf@x,floorf@u
  6851  00587A  C052  F062         	movff	floorf@x+1,floorf@u+1
  6852  00587E  C053  F063         	movff	floorf@x+2,floorf@u+2
  6853  005882  C054  F064         	movff	floorf@x+3,floorf@u+3
  6854  005886  0E81               	movlw	129
  6855  005888  6E55               	movwf	??_floorf^0,c
  6856  00588A  0EFF               	movlw	255
  6857  00588C  6E56               	movwf	(??_floorf+1)^0,c
  6858  00588E  C061  F057         	movff	floorf@u,??_floorf+2
  6859  005892  C062  F058         	movff	floorf@u+1,??_floorf+3
  6860  005896  C063  F059         	movff	floorf@u+2,??_floorf+4
  6861  00589A  C064  F05A         	movff	floorf@u+3,??_floorf+5
  6862  00589E  0E18               	movlw	24
  6863  0058A0  EF57  F02C         	goto	u4170
  6864  0058A4                     u4175:
  6865  0058A4  90D8               	bcf	status,0,c
  6866  0058A6  325A               	rrcf	(??_floorf+5)^0,f,c
  6867  0058A8  3259               	rrcf	(??_floorf+4)^0,f,c
  6868  0058AA  3258               	rrcf	(??_floorf+3)^0,f,c
  6869  0058AC  3257               	rrcf	(??_floorf+2)^0,f,c
  6870  0058AE                     u4170:
  6871  0058AE  2EE8               	decfsz	wreg,f,c
  6872  0058B0  EF52  F02C         	goto	u4175
  6873  0058B4  5057               	movf	(??_floorf+2)^0,w,c
  6874  0058B6  2455               	addwf	??_floorf^0,w,c
  6875  0058B8  6E5F               	movwf	floorf@e^0,c
  6876  0058BA  0E00               	movlw	0
  6877  0058BC  2056               	addwfc	(??_floorf+1)^0,w,c
  6878  0058BE  6E60               	movwf	(floorf@e+1)^0,c
  6879  0058C0  BE60               	btfsc	(floorf@e+1)^0,7,c
  6880  0058C2  EF6C  F02C         	goto	u4181
  6881  0058C6  5060               	movf	(floorf@e+1)^0,w,c
  6882  0058C8  E109               	bnz	u4180
  6883  0058CA  0E17               	movlw	23
  6884  0058CC  5C5F               	subwf	floorf@e^0,w,c
  6885  0058CE  A0D8               	btfss	status,0,c
  6886  0058D0  EF6C  F02C         	goto	u4181
  6887  0058D4  EF6E  F02C         	goto	u4180
  6888  0058D8                     u4181:
  6889  0058D8  EF78  F02C         	goto	l3828
  6890  0058DC                     u4180:
  6891  0058DC                     l3826:
  6892  0058DC  C051  F051         	movff	floorf@x,?_floorf
  6893  0058E0  C052  F052         	movff	floorf@x+1,?_floorf+1
  6894  0058E4  C053  F053         	movff	floorf@x+2,?_floorf+2
  6895  0058E8  C054  F054         	movff	floorf@x+3,?_floorf+3
  6896  0058EC  EF3B  F02D         	goto	l1106
  6897  0058F0                     l3828:
  6898  0058F0  BE60               	btfsc	(floorf@e+1)^0,7,c
  6899  0058F2  EF7D  F02C         	goto	u4191
  6900  0058F6  EF7F  F02C         	goto	u4190
  6901  0058FA                     u4191:
  6902  0058FA  EFEF  F02C         	goto	l3838
  6903  0058FE                     u4190:
  6904  0058FE  C05F  F055         	movff	floorf@e,??_floorf
  6905  005902  0EFF               	movlw	255
  6906  005904  6E56               	movwf	(??_floorf+1)^0,c
  6907  005906  0EFF               	movlw	255
  6908  005908  6E57               	movwf	(??_floorf+2)^0,c
  6909  00590A  0E7F               	movlw	127
  6910  00590C  6E58               	movwf	(??_floorf+3)^0,c
  6911  00590E  0E00               	movlw	0
  6912  005910  6E59               	movwf	(??_floorf+4)^0,c
  6913  005912                     u4205:
  6914  005912  6655               	tstfsz	??_floorf^0,c
  6915  005914  EF8E  F02C         	goto	u4206
  6916  005918  EF96  F02C         	goto	u4207
  6917  00591C                     u4206:
  6918  00591C  3459               	rlcf	(??_floorf+4)^0,w,c
  6919  00591E  3259               	rrcf	(??_floorf+4)^0,f,c
  6920  005920  3258               	rrcf	(??_floorf+3)^0,f,c
  6921  005922  3257               	rrcf	(??_floorf+2)^0,f,c
  6922  005924  3256               	rrcf	(??_floorf+1)^0,f,c
  6923  005926  2E55               	decfsz	??_floorf^0,f,c
  6924  005928  EF89  F02C         	goto	u4205
  6925  00592C                     u4207:
  6926  00592C  C056  F05B         	movff	??_floorf+1,floorf@m
  6927  005930  C057  F05C         	movff	??_floorf+2,floorf@m+1
  6928  005934  C058  F05D         	movff	??_floorf+3,floorf@m+2
  6929  005938  C059  F05E         	movff	??_floorf+4,floorf@m+3
  6930  00593C  505B               	movf	floorf@m^0,w,c
  6931  00593E  1461               	andwf	floorf@u^0,w,c
  6932  005940  6E55               	movwf	??_floorf^0,c
  6933  005942  505C               	movf	(floorf@m+1)^0,w,c
  6934  005944  1462               	andwf	(floorf@u+1)^0,w,c
  6935  005946  6E56               	movwf	(??_floorf+1)^0,c
  6936  005948  505D               	movf	(floorf@m+2)^0,w,c
  6937  00594A  1463               	andwf	(floorf@u+2)^0,w,c
  6938  00594C  6E57               	movwf	(??_floorf+2)^0,c
  6939  00594E  505E               	movf	(floorf@m+3)^0,w,c
  6940  005950  1464               	andwf	(floorf@u+3)^0,w,c
  6941  005952  6E58               	movwf	(??_floorf+3)^0,c
  6942  005954  5055               	movf	??_floorf^0,w,c
  6943  005956  1056               	iorwf	(??_floorf+1)^0,w,c
  6944  005958  1057               	iorwf	(??_floorf+2)^0,w,c
  6945  00595A  1058               	iorwf	(??_floorf+3)^0,w,c
  6946  00595C  A4D8               	btfss	status,2,c
  6947  00595E  EFB3  F02C         	goto	u4211
  6948  005962  EFB5  F02C         	goto	u4210
  6949  005966                     u4211:
  6950  005966  EFB7  F02C         	goto	l3834
  6951  00596A                     u4210:
  6952  00596A  EF6E  F02C         	goto	l3826
  6953  00596E                     l3834:
  6954  00596E  C061  F055         	movff	floorf@u,??_floorf
  6955  005972  C062  F056         	movff	floorf@u+1,??_floorf+1
  6956  005976  C063  F057         	movff	floorf@u+2,??_floorf+2
  6957  00597A  C064  F058         	movff	floorf@u+3,??_floorf+3
  6958  00597E  0E20               	movlw	32
  6959  005980  EFC7  F02C         	goto	u4220
  6960  005984                     u4225:
  6961  005984  90D8               	bcf	status,0,c
  6962  005986  3258               	rrcf	(??_floorf+3)^0,f,c
  6963  005988  3257               	rrcf	(??_floorf+2)^0,f,c
  6964  00598A  3256               	rrcf	(??_floorf+1)^0,f,c
  6965  00598C  3255               	rrcf	??_floorf^0,f,c
  6966  00598E                     u4220:
  6967  00598E  2EE8               	decfsz	wreg,f,c
  6968  005990  EFC2  F02C         	goto	u4225
  6969  005994  5055               	movf	??_floorf^0,w,c
  6970  005996  1056               	iorwf	(??_floorf+1)^0,w,c
  6971  005998  1057               	iorwf	(??_floorf+2)^0,w,c
  6972  00599A  1058               	iorwf	(??_floorf+3)^0,w,c
  6973  00599C  B4D8               	btfsc	status,2,c
  6974  00599E  EFD3  F02C         	goto	u4231
  6975  0059A2  EFD5  F02C         	goto	u4230
  6976  0059A6                     u4231:
  6977  0059A6  EFDD  F02C         	goto	l1109
  6978  0059AA                     u4230:
  6979  0059AA  505B               	movf	floorf@m^0,w,c
  6980  0059AC  2661               	addwf	floorf@u^0,f,c
  6981  0059AE  505C               	movf	(floorf@m+1)^0,w,c
  6982  0059B0  2262               	addwfc	(floorf@u+1)^0,f,c
  6983  0059B2  505D               	movf	(floorf@m+2)^0,w,c
  6984  0059B4  2263               	addwfc	(floorf@u+2)^0,f,c
  6985  0059B6  505E               	movf	(floorf@m+3)^0,w,c
  6986  0059B8  2264               	addwfc	(floorf@u+3)^0,f,c
  6987  0059BA                     l1109:
  6988  0059BA  1C5B               	comf	floorf@m^0,w,c
  6989  0059BC  6E55               	movwf	??_floorf^0,c
  6990  0059BE  1C5C               	comf	(floorf@m+1)^0,w,c
  6991  0059C0  6E56               	movwf	(??_floorf+1)^0,c
  6992  0059C2  1C5D               	comf	(floorf@m+2)^0,w,c
  6993  0059C4  6E57               	movwf	(??_floorf+2)^0,c
  6994  0059C6  1C5E               	comf	(floorf@m+3)^0,w,c
  6995  0059C8  6E58               	movwf	(??_floorf+3)^0,c
  6996  0059CA  5055               	movf	??_floorf^0,w,c
  6997  0059CC  1661               	andwf	floorf@u^0,f,c
  6998  0059CE  5056               	movf	(??_floorf+1)^0,w,c
  6999  0059D0  1662               	andwf	(floorf@u+1)^0,f,c
  7000  0059D2  5057               	movf	(??_floorf+2)^0,w,c
  7001  0059D4  1663               	andwf	(floorf@u+2)^0,f,c
  7002  0059D6  5058               	movf	(??_floorf+3)^0,w,c
  7003  0059D8  1664               	andwf	(floorf@u+3)^0,f,c
  7004  0059DA  EF33  F02D         	goto	l3846
  7005  0059DE                     l3838:
  7006  0059DE  C061  F055         	movff	floorf@u,??_floorf
  7007  0059E2  C062  F056         	movff	floorf@u+1,??_floorf+1
  7008  0059E6  C063  F057         	movff	floorf@u+2,??_floorf+2
  7009  0059EA  C064  F058         	movff	floorf@u+3,??_floorf+3
  7010  0059EE  0E20               	movlw	32
  7011  0059F0  EFFF  F02C         	goto	u4240
  7012  0059F4                     u4245:
  7013  0059F4  90D8               	bcf	status,0,c
  7014  0059F6  3258               	rrcf	(??_floorf+3)^0,f,c
  7015  0059F8  3257               	rrcf	(??_floorf+2)^0,f,c
  7016  0059FA  3256               	rrcf	(??_floorf+1)^0,f,c
  7017  0059FC  3255               	rrcf	??_floorf^0,f,c
  7018  0059FE                     u4240:
  7019  0059FE  2EE8               	decfsz	wreg,f,c
  7020  005A00  EFFA  F02C         	goto	u4245
  7021  005A04  5055               	movf	??_floorf^0,w,c
  7022  005A06  1056               	iorwf	(??_floorf+1)^0,w,c
  7023  005A08  1057               	iorwf	(??_floorf+2)^0,w,c
  7024  005A0A  1058               	iorwf	(??_floorf+3)^0,w,c
  7025  005A0C  A4D8               	btfss	status,2,c
  7026  005A0E  EF0B  F02D         	goto	u4251
  7027  005A12  EF0D  F02D         	goto	u4250
  7028  005A16                     u4251:
  7029  005A16  EF17  F02D         	goto	l3842
  7030  005A1A                     u4250:
  7031  005A1A  0E00               	movlw	0
  7032  005A1C  6E61               	movwf	floorf@u^0,c
  7033  005A1E  0E00               	movlw	0
  7034  005A20  6E62               	movwf	(floorf@u+1)^0,c
  7035  005A22  0E00               	movlw	0
  7036  005A24  6E63               	movwf	(floorf@u+2)^0,c
  7037  005A26  0E00               	movlw	0
  7038  005A28  6E64               	movwf	(floorf@u+3)^0,c
  7039  005A2A  EF33  F02D         	goto	l3846
  7040  005A2E                     l3842:
  7041  005A2E  90D8               	bcf	status,0,c
  7042  005A30  3461               	rlcf	floorf@u^0,w,c
  7043  005A32  6E55               	movwf	??_floorf^0,c
  7044  005A34  3462               	rlcf	(floorf@u+1)^0,w,c
  7045  005A36  6E56               	movwf	(??_floorf+1)^0,c
  7046  005A38  3463               	rlcf	(floorf@u+2)^0,w,c
  7047  005A3A  6E57               	movwf	(??_floorf+2)^0,c
  7048  005A3C  3464               	rlcf	(floorf@u+3)^0,w,c
  7049  005A3E  6E58               	movwf	(??_floorf+3)^0,c
  7050  005A40  5055               	movf	??_floorf^0,w,c
  7051  005A42  1056               	iorwf	(??_floorf+1)^0,w,c
  7052  005A44  1057               	iorwf	(??_floorf+2)^0,w,c
  7053  005A46  1058               	iorwf	(??_floorf+3)^0,w,c
  7054  005A48  B4D8               	btfsc	status,2,c
  7055  005A4A  EF29  F02D         	goto	u4261
  7056  005A4E  EF2B  F02D         	goto	u4260
  7057  005A52                     u4261:
  7058  005A52  EF33  F02D         	goto	l3846
  7059  005A56                     u4260:
  7060  005A56  0E00               	movlw	0
  7061  005A58  6E61               	movwf	floorf@u^0,c
  7062  005A5A  0E00               	movlw	0
  7063  005A5C  6E62               	movwf	(floorf@u+1)^0,c
  7064  005A5E  0E80               	movlw	128
  7065  005A60  6E63               	movwf	(floorf@u+2)^0,c
  7066  005A62  0EBF               	movlw	191
  7067  005A64  6E64               	movwf	(floorf@u+3)^0,c
  7068  005A66                     l3846:
  7069  005A66  C061  F051         	movff	floorf@u,?_floorf
  7070  005A6A  C062  F052         	movff	floorf@u+1,?_floorf+1
  7071  005A6E  C063  F053         	movff	floorf@u+2,?_floorf+2
  7072  005A72  C064  F054         	movff	floorf@u+3,?_floorf+3
  7073  005A76                     l1106:
  7074  005A76  0012               	return		;funcret
  7075  005A78                     __end_of_floorf:
  7076                           	callstack 0
  7077                           
  7078 ;; *************** function ___fpclassifyf *****************
  7079 ;; Defined at:
  7080 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  7081 ;; Parameters:    Size  Location     Type
  7082 ;;  x               4    0[COMRAM] float 
  7083 ;; Auto vars:     Size  Location     Type
  7084 ;;  u               4   10[COMRAM] struct .
  7085 ;;  e               2    8[COMRAM] int 
  7086 ;; Return value:  Size  Location     Type
  7087 ;;                  2    0[COMRAM] int 
  7088 ;; Registers used:
  7089 ;;		wreg, status,2, status,0
  7090 ;; Tracked objects:
  7091 ;;		On entry : 0/0
  7092 ;;		On exit  : 0/0
  7093 ;;		Unchanged: 0/0
  7094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7095 ;;      Params:         4       0       0       0       0       0       0
  7096 ;;      Locals:         6       0       0       0       0       0       0
  7097 ;;      Temps:          4       0       0       0       0       0       0
  7098 ;;      Totals:        14       0       0       0       0       0       0
  7099 ;;Total ram usage:       14 bytes
  7100 ;; Hardware stack levels used:    1
  7101 ;; This function calls:
  7102 ;;		Nothing
  7103 ;; This function is called by:
  7104 ;;		_efgtoa
  7105 ;; This function uses a non-reentrant model
  7106 ;;
  7107                           
  7108                           	psect	text20
  7109  004EDC                     __ptext20:
  7110                           	callstack 0
  7111  004EDC                     ___fpclassifyf:
  7112                           	callstack 25
  7113  004EDC  C104  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  7114  004EE0  C105  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  7115  004EE4  C106  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  7116  004EE8  C107  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  7117  004EEC  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  7118  004EF0  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  7119  004EF4  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  7120  004EF8  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  7121  004EFC  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  7122  004F00  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7123  004F04  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7124  004F08  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7125  004F0C  0E18               	movlw	24
  7126  004F0E  EF8E  F027         	goto	u4050
  7127  004F12                     u4055:
  7128  004F12  90D8               	bcf	status,0,c
  7129  004F14  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  7130  004F16  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  7131  004F18  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  7132  004F1A  3205               	rrcf	??___fpclassifyf^0,f,c
  7133  004F1C                     u4050:
  7134  004F1C  2EE8               	decfsz	wreg,f,c
  7135  004F1E  EF89  F027         	goto	u4055
  7136  004F22  5005               	movf	??___fpclassifyf^0,w,c
  7137  004F24  6E09               	movwf	___fpclassifyf@e^0,c
  7138  004F26  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  7139  004F28  5009               	movf	___fpclassifyf@e^0,w,c
  7140  004F2A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7141  004F2C  A4D8               	btfss	status,2,c
  7142  004F2E  EF9B  F027         	goto	u4061
  7143  004F32  EF9D  F027         	goto	u4060
  7144  004F36                     u4061:
  7145  004F36  EFBD  F027         	goto	l3798
  7146  004F3A                     u4060:
  7147  004F3A  90D8               	bcf	status,0,c
  7148  004F3C  340B               	rlcf	___fpclassifyf@u^0,w,c
  7149  004F3E  6E05               	movwf	??___fpclassifyf^0,c
  7150  004F40  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  7151  004F42  6E06               	movwf	(??___fpclassifyf+1)^0,c
  7152  004F44  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  7153  004F46  6E07               	movwf	(??___fpclassifyf+2)^0,c
  7154  004F48  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  7155  004F4A  6E08               	movwf	(??___fpclassifyf+3)^0,c
  7156  004F4C  5005               	movf	??___fpclassifyf^0,w,c
  7157  004F4E  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  7158  004F50  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  7159  004F52  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  7160  004F54  A4D8               	btfss	status,2,c
  7161  004F56  EFAF  F027         	goto	u4071
  7162  004F5A  EFB1  F027         	goto	u4070
  7163  004F5E                     u4071:
  7164  004F5E  EFB7  F027         	goto	l3794
  7165  004F62                     u4070:
  7166  004F62  0E00               	movlw	0
  7167  004F64  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7168  004F66  0E02               	movlw	2
  7169  004F68  6E01               	movwf	?___fpclassifyf^0,c
  7170  004F6A  EFEC  F027         	goto	l1068
  7171  004F6E                     l3794:
  7172  004F6E  0E00               	movlw	0
  7173  004F70  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7174  004F72  0E03               	movlw	3
  7175  004F74  6E01               	movwf	?___fpclassifyf^0,c
  7176  004F76  EFEC  F027         	goto	l1068
  7177  004F7A                     l3798:
  7178  004F7A  2809               	incf	___fpclassifyf@e^0,w,c
  7179  004F7C  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7180  004F7E  A4D8               	btfss	status,2,c
  7181  004F80  EFC4  F027         	goto	u4081
  7182  004F84  EFC6  F027         	goto	u4080
  7183  004F88                     u4081:
  7184  004F88  EFE8  F027         	goto	l3804
  7185  004F8C                     u4080:
  7186  004F8C  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  7187  004F90  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7188  004F94  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7189  004F98  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7190  004F9C  0E09               	movlw	9
  7191  004F9E                     u4095:
  7192  004F9E  90D8               	bcf	status,0,c
  7193  004FA0  3605               	rlcf	??___fpclassifyf^0,f,c
  7194  004FA2  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  7195  004FA4  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  7196  004FA6  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  7197  004FA8  2EE8               	decfsz	wreg,f,c
  7198  004FAA  EFCF  F027         	goto	u4095
  7199  004FAE  5005               	movf	??___fpclassifyf^0,w,c
  7200  004FB0  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  7201  004FB2  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  7202  004FB4  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  7203  004FB6  B4D8               	btfsc	status,2,c
  7204  004FB8  EFE0  F027         	goto	u4101
  7205  004FBC  EFE3  F027         	goto	u4100
  7206  004FC0                     u4101:
  7207  004FC0  0E01               	movlw	1
  7208  004FC2  EFE4  F027         	goto	u4110
  7209  004FC6                     u4100:
  7210  004FC6  0E00               	movlw	0
  7211  004FC8                     u4110:
  7212  004FC8  6E01               	movwf	?___fpclassifyf^0,c
  7213  004FCA  6A02               	clrf	(?___fpclassifyf+1)^0,c
  7214  004FCC  EFEC  F027         	goto	l1068
  7215  004FD0                     l3804:
  7216  004FD0  0E00               	movlw	0
  7217  004FD2  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7218  004FD4  0E04               	movlw	4
  7219  004FD6  6E01               	movwf	?___fpclassifyf^0,c
  7220  004FD8                     l1068:
  7221  004FD8  0012               	return		;funcret
  7222  004FDA                     __end_of___fpclassifyf:
  7223                           	callstack 0
  7224                           
  7225 ;; *************** function ___fltol *****************
  7226 ;; Defined at:
  7227 ;;		line 43 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\fltol.c"
  7228 ;; Parameters:    Size  Location     Type
  7229 ;;  f1              4   80[COMRAM] int 
  7230 ;; Auto vars:     Size  Location     Type
  7231 ;;  exp1            1   89[COMRAM] unsigned char 
  7232 ;;  sign1           1   88[COMRAM] unsigned char 
  7233 ;; Return value:  Size  Location     Type
  7234 ;;                  4   80[COMRAM] long 
  7235 ;; Registers used:
  7236 ;;		wreg, status,2, status,0
  7237 ;; Tracked objects:
  7238 ;;		On entry : 0/0
  7239 ;;		On exit  : 0/0
  7240 ;;		Unchanged: 0/0
  7241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7242 ;;      Params:         4       0       0       0       0       0       0
  7243 ;;      Locals:         2       0       0       0       0       0       0
  7244 ;;      Temps:          4       0       0       0       0       0       0
  7245 ;;      Totals:        10       0       0       0       0       0       0
  7246 ;;Total ram usage:       10 bytes
  7247 ;; Hardware stack levels used:    1
  7248 ;; This function calls:
  7249 ;;		Nothing
  7250 ;; This function is called by:
  7251 ;;		_encher_tanque
  7252 ;;		_esvaziar_tanque
  7253 ;;		_efgtoa
  7254 ;; This function uses a non-reentrant model
  7255 ;;
  7256                           
  7257                           	psect	text21
  7258  0050DE                     __ptext21:
  7259                           	callstack 0
  7260  0050DE                     ___fltol:
  7261                           	callstack 25
  7262  0050DE  3453               	rlcf	(___fltol@f1+2)^0,w,c
  7263  0050E0  3454               	rlcf	(___fltol@f1+3)^0,w,c
  7264  0050E2  6E5A               	movwf	___fltol@exp1^0,c
  7265  0050E4  505A               	movf	___fltol@exp1^0,w,c
  7266  0050E6  A4D8               	btfss	status,2,c
  7267  0050E8  EF78  F028         	goto	u3941
  7268  0050EC  EF7A  F028         	goto	u3940
  7269  0050F0                     u3941:
  7270  0050F0  EF84  F028         	goto	l3726
  7271  0050F4                     u3940:
  7272  0050F4                     l3722:
  7273  0050F4  0E00               	movlw	0
  7274  0050F6  6E51               	movwf	?___fltol^0,c
  7275  0050F8  0E00               	movlw	0
  7276  0050FA  6E52               	movwf	(?___fltol+1)^0,c
  7277  0050FC  0E00               	movlw	0
  7278  0050FE  6E53               	movwf	(?___fltol+2)^0,c
  7279  005100  0E00               	movlw	0
  7280  005102  6E54               	movwf	(?___fltol+3)^0,c
  7281  005104  EFF1  F028         	goto	l509
  7282  005108                     l3726:
  7283  005108  C051  F055         	movff	___fltol@f1,??___fltol
  7284  00510C  C052  F056         	movff	___fltol@f1+1,??___fltol+1
  7285  005110  C053  F057         	movff	___fltol@f1+2,??___fltol+2
  7286  005114  C054  F058         	movff	___fltol@f1+3,??___fltol+3
  7287  005118  0E20               	movlw	32
  7288  00511A  EF94  F028         	goto	u3950
  7289  00511E                     u3955:
  7290  00511E  90D8               	bcf	status,0,c
  7291  005120  3258               	rrcf	(??___fltol+3)^0,f,c
  7292  005122  3257               	rrcf	(??___fltol+2)^0,f,c
  7293  005124  3256               	rrcf	(??___fltol+1)^0,f,c
  7294  005126  3255               	rrcf	??___fltol^0,f,c
  7295  005128                     u3950:
  7296  005128  2EE8               	decfsz	wreg,f,c
  7297  00512A  EF8F  F028         	goto	u3955
  7298  00512E  5055               	movf	??___fltol^0,w,c
  7299  005130  6E59               	movwf	___fltol@sign1^0,c
  7300  005132  8E53               	bsf	(___fltol@f1+2)^0,7,c
  7301  005134  0EFF               	movlw	255
  7302  005136  1651               	andwf	___fltol@f1^0,f,c
  7303  005138  0EFF               	movlw	255
  7304  00513A  1652               	andwf	(___fltol@f1+1)^0,f,c
  7305  00513C  0EFF               	movlw	255
  7306  00513E  1653               	andwf	(___fltol@f1+2)^0,f,c
  7307  005140  0E00               	movlw	0
  7308  005142  1654               	andwf	(___fltol@f1+3)^0,f,c
  7309  005144  0E96               	movlw	150
  7310  005146  5E5A               	subwf	___fltol@exp1^0,f,c
  7311  005148  BE5A               	btfsc	___fltol@exp1^0,7,c
  7312  00514A  EFAB  F028         	goto	u3960
  7313  00514E  EFA9  F028         	goto	u3961
  7314  005152                     u3961:
  7315  005152  EFC1  F028         	goto	l3746
  7316  005156                     u3960:
  7317  005156  505A               	movf	___fltol@exp1^0,w,c
  7318  005158  0A80               	xorlw	128
  7319  00515A  0F97               	addlw	151
  7320  00515C  B0D8               	btfsc	status,0,c
  7321  00515E  EFB3  F028         	goto	u3971
  7322  005162  EFB5  F028         	goto	u3970
  7323  005166                     u3971:
  7324  005166  EFB7  F028         	goto	l3742
  7325  00516A                     u3970:
  7326  00516A  EF7A  F028         	goto	l3722
  7327  00516E                     l3742:
  7328  00516E  90D8               	bcf	status,0,c
  7329  005170  3254               	rrcf	(___fltol@f1+3)^0,f,c
  7330  005172  3253               	rrcf	(___fltol@f1+2)^0,f,c
  7331  005174  3252               	rrcf	(___fltol@f1+1)^0,f,c
  7332  005176  3251               	rrcf	___fltol@f1^0,f,c
  7333  005178  3E5A               	incfsz	___fltol@exp1^0,f,c
  7334  00517A  EFB7  F028         	goto	l3742
  7335  00517E  EFD9  F028         	goto	l3756
  7336  005182                     l3746:
  7337  005182  0E1F               	movlw	31
  7338  005184  645A               	cpfsgt	___fltol@exp1^0,c
  7339  005186  EFC7  F028         	goto	u3981
  7340  00518A  EFC9  F028         	goto	u3980
  7341  00518E                     u3981:
  7342  00518E  EFD1  F028         	goto	l3754
  7343  005192                     u3980:
  7344  005192  EF7A  F028         	goto	l3722
  7345  005196                     l3752:
  7346  005196  90D8               	bcf	status,0,c
  7347  005198  3651               	rlcf	___fltol@f1^0,f,c
  7348  00519A  3652               	rlcf	(___fltol@f1+1)^0,f,c
  7349  00519C  3653               	rlcf	(___fltol@f1+2)^0,f,c
  7350  00519E  3654               	rlcf	(___fltol@f1+3)^0,f,c
  7351  0051A0  065A               	decf	___fltol@exp1^0,f,c
  7352  0051A2                     l3754:
  7353  0051A2  505A               	movf	___fltol@exp1^0,w,c
  7354  0051A4  A4D8               	btfss	status,2,c
  7355  0051A6  EFD7  F028         	goto	u3991
  7356  0051AA  EFD9  F028         	goto	u3990
  7357  0051AE                     u3991:
  7358  0051AE  EFCB  F028         	goto	l3752
  7359  0051B2                     u3990:
  7360  0051B2                     l3756:
  7361  0051B2  5059               	movf	___fltol@sign1^0,w,c
  7362  0051B4  B4D8               	btfsc	status,2,c
  7363  0051B6  EFDF  F028         	goto	u4001
  7364  0051BA  EFE1  F028         	goto	u4000
  7365  0051BE                     u4001:
  7366  0051BE  EFE9  F028         	goto	l3760
  7367  0051C2                     u4000:
  7368  0051C2  1E54               	comf	(___fltol@f1+3)^0,f,c
  7369  0051C4  1E53               	comf	(___fltol@f1+2)^0,f,c
  7370  0051C6  1E52               	comf	(___fltol@f1+1)^0,f,c
  7371  0051C8  6C51               	negf	___fltol@f1^0,c
  7372  0051CA  0E00               	movlw	0
  7373  0051CC  2252               	addwfc	(___fltol@f1+1)^0,f,c
  7374  0051CE  2253               	addwfc	(___fltol@f1+2)^0,f,c
  7375  0051D0  2254               	addwfc	(___fltol@f1+3)^0,f,c
  7376  0051D2                     l3760:
  7377  0051D2  C051  F051         	movff	___fltol@f1,?___fltol
  7378  0051D6  C052  F052         	movff	___fltol@f1+1,?___fltol+1
  7379  0051DA  C053  F053         	movff	___fltol@f1+2,?___fltol+2
  7380  0051DE  C054  F054         	movff	___fltol@f1+3,?___fltol+3
  7381  0051E2                     l509:
  7382  0051E2  0012               	return		;funcret
  7383  0051E4                     __end_of___fltol:
  7384                           	callstack 0
  7385                           
  7386 ;; *************** function ___flsub *****************
  7387 ;; Defined at:
  7388 ;;		line 245 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  7389 ;; Parameters:    Size  Location     Type
  7390 ;;  b               4   55[COMRAM] long 
  7391 ;;  a               4   59[COMRAM] long 
  7392 ;; Auto vars:     Size  Location     Type
  7393 ;;		None
  7394 ;; Return value:  Size  Location     Type
  7395 ;;                  4   55[COMRAM] long 
  7396 ;; Registers used:
  7397 ;;		wreg, status,2, status,0, cstack
  7398 ;; Tracked objects:
  7399 ;;		On entry : 0/0
  7400 ;;		On exit  : 0/0
  7401 ;;		Unchanged: 0/0
  7402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7403 ;;      Params:         8       0       0       0       0       0       0
  7404 ;;      Locals:         0       0       0       0       0       0       0
  7405 ;;      Temps:          0       0       0       0       0       0       0
  7406 ;;      Totals:         8       0       0       0       0       0       0
  7407 ;;Total ram usage:        8 bytes
  7408 ;; Hardware stack levels used:    1
  7409 ;; Hardware stack levels required when called:    1
  7410 ;; This function calls:
  7411 ;;		___fladd
  7412 ;; This function is called by:
  7413 ;;		_esvaziar_tanque
  7414 ;;		_efgtoa
  7415 ;; This function uses a non-reentrant model
  7416 ;;
  7417                           
  7418                           	psect	text22
  7419  0044F0                     __ptext22:
  7420                           	callstack 0
  7421  0044F0                     ___flsub:
  7422                           	callstack 24
  7423  0044F0  0E00               	movlw	0
  7424  0044F2  1A3C               	xorwf	___flsub@a^0,f,c
  7425  0044F4  0E00               	movlw	0
  7426  0044F6  1A3D               	xorwf	(___flsub@a+1)^0,f,c
  7427  0044F8  0E00               	movlw	0
  7428  0044FA  1A3E               	xorwf	(___flsub@a+2)^0,f,c
  7429  0044FC  0E80               	movlw	128
  7430  0044FE  1A3F               	xorwf	(___flsub@a+3)^0,f,c
  7431  004500  C038  F028         	movff	___flsub@b,___fladd@b
  7432  004504  C039  F029         	movff	___flsub@b+1,___fladd@b+1
  7433  004508  C03A  F02A         	movff	___flsub@b+2,___fladd@b+2
  7434  00450C  C03B  F02B         	movff	___flsub@b+3,___fladd@b+3
  7435  004510  C03C  F02C         	movff	___flsub@a,___fladd@a
  7436  004514  C03D  F02D         	movff	___flsub@a+1,___fladd@a+1
  7437  004518  C03E  F02E         	movff	___flsub@a+2,___fladd@a+2
  7438  00451C  C03F  F02F         	movff	___flsub@a+3,___fladd@a+3
  7439  004520  EC8D  F034         	call	___fladd	;wreg free
  7440  004524  C028  F038         	movff	?___fladd,?___flsub
  7441  004528  C029  F039         	movff	?___fladd+1,?___flsub+1
  7442  00452C  C02A  F03A         	movff	?___fladd+2,?___flsub+2
  7443  004530  C02B  F03B         	movff	?___fladd+3,?___flsub+3
  7444  004534  0012               	return		;funcret
  7445  004536                     __end_of___flsub:
  7446                           	callstack 0
  7447                           
  7448 ;; *************** function ___fladd *****************
  7449 ;; Defined at:
  7450 ;;		line 10 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  7451 ;; Parameters:    Size  Location     Type
  7452 ;;  b               4   39[COMRAM] long 
  7453 ;;  a               4   43[COMRAM] long 
  7454 ;; Auto vars:     Size  Location     Type
  7455 ;;  grs             1   54[COMRAM] unsigned char 
  7456 ;;  bexp            1   53[COMRAM] unsigned char 
  7457 ;;  aexp            1   52[COMRAM] unsigned char 
  7458 ;;  signs           1   51[COMRAM] unsigned char 
  7459 ;; Return value:  Size  Location     Type
  7460 ;;                  4   39[COMRAM] unsigned char 
  7461 ;; Registers used:
  7462 ;;		wreg, status,2, status,0
  7463 ;; Tracked objects:
  7464 ;;		On entry : 0/0
  7465 ;;		On exit  : 0/0
  7466 ;;		Unchanged: 0/0
  7467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7468 ;;      Params:         8       0       0       0       0       0       0
  7469 ;;      Locals:         4       0       0       0       0       0       0
  7470 ;;      Temps:          4       0       0       0       0       0       0
  7471 ;;      Totals:        16       0       0       0       0       0       0
  7472 ;;Total ram usage:       16 bytes
  7473 ;; Hardware stack levels used:    1
  7474 ;; This function calls:
  7475 ;;		Nothing
  7476 ;; This function is called by:
  7477 ;;		_encher_tanque
  7478 ;;		___flsub
  7479 ;;		_efgtoa
  7480 ;; This function uses a non-reentrant model
  7481 ;;
  7482                           
  7483                           	psect	text23
  7484  00691A                     __ptext23:
  7485                           	callstack 0
  7486  00691A                     ___fladd:
  7487                           	callstack 24
  7488  00691A  502B               	movf	(___fladd@b+3)^0,w,c
  7489  00691C  0B80               	andlw	128
  7490  00691E  6E34               	movwf	___fladd@signs^0,c
  7491  006920  502B               	movf	(___fladd@b+3)^0,w,c
  7492  006922  242B               	addwf	(___fladd@b+3)^0,w,c
  7493  006924  6E36               	movwf	___fladd@bexp^0,c
  7494  006926  AE2A               	btfss	(___fladd@b+2)^0,7,c
  7495  006928  EF98  F034         	goto	u2881
  7496  00692C  EF9A  F034         	goto	u2880
  7497  006930                     u2881:
  7498  006930  EF9B  F034         	goto	l3096
  7499  006934                     u2880:
  7500  006934  8036               	bsf	___fladd@bexp^0,0,c
  7501  006936                     l3096:
  7502  006936  5036               	movf	___fladd@bexp^0,w,c
  7503  006938  B4D8               	btfsc	status,2,c
  7504  00693A  EFA1  F034         	goto	u2891
  7505  00693E  EFA3  F034         	goto	u2890
  7506  006942                     u2891:
  7507  006942  EFB8  F034         	goto	l3106
  7508  006946                     u2890:
  7509  006946  2836               	incf	___fladd@bexp^0,w,c
  7510  006948  A4D8               	btfss	status,2,c
  7511  00694A  EFA9  F034         	goto	u2901
  7512  00694E  EFAB  F034         	goto	u2900
  7513  006952                     u2901:
  7514  006952  EFB3  F034         	goto	l3102
  7515  006956                     u2900:
  7516  006956  0E00               	movlw	0
  7517  006958  6E28               	movwf	___fladd@b^0,c
  7518  00695A  0E00               	movlw	0
  7519  00695C  6E29               	movwf	(___fladd@b+1)^0,c
  7520  00695E  0E00               	movlw	0
  7521  006960  6E2A               	movwf	(___fladd@b+2)^0,c
  7522  006962  0E00               	movlw	0
  7523  006964  6E2B               	movwf	(___fladd@b+3)^0,c
  7524  006966                     l3102:
  7525  006966  8E2A               	bsf	(___fladd@b+2)^0,7,c
  7526  006968  0E00               	movlw	0
  7527  00696A  6E2B               	movwf	(___fladd@b+3)^0,c
  7528  00696C  EFC0  F034         	goto	l3108
  7529  006970                     l3106:
  7530  006970  0E00               	movlw	0
  7531  006972  6E28               	movwf	___fladd@b^0,c
  7532  006974  0E00               	movlw	0
  7533  006976  6E29               	movwf	(___fladd@b+1)^0,c
  7534  006978  0E00               	movlw	0
  7535  00697A  6E2A               	movwf	(___fladd@b+2)^0,c
  7536  00697C  0E00               	movlw	0
  7537  00697E  6E2B               	movwf	(___fladd@b+3)^0,c
  7538  006980                     l3108:
  7539  006980  502F               	movf	(___fladd@a+3)^0,w,c
  7540  006982  0B80               	andlw	128
  7541  006984  6E35               	movwf	___fladd@aexp^0,c
  7542  006986  5034               	movf	___fladd@signs^0,w,c
  7543  006988  1835               	xorwf	___fladd@aexp^0,w,c
  7544  00698A  B4D8               	btfsc	status,2,c
  7545  00698C  EFCA  F034         	goto	u2911
  7546  006990  EFCC  F034         	goto	u2910
  7547  006994                     u2911:
  7548  006994  EFCD  F034         	goto	l3114
  7549  006998                     u2910:
  7550  006998  8C34               	bsf	___fladd@signs^0,6,c
  7551  00699A                     l3114:
  7552  00699A  502F               	movf	(___fladd@a+3)^0,w,c
  7553  00699C  242F               	addwf	(___fladd@a+3)^0,w,c
  7554  00699E  6E35               	movwf	___fladd@aexp^0,c
  7555  0069A0  AE2E               	btfss	(___fladd@a+2)^0,7,c
  7556  0069A2  EFD5  F034         	goto	u2921
  7557  0069A6  EFD7  F034         	goto	u2920
  7558  0069AA                     u2921:
  7559  0069AA  EFD8  F034         	goto	l3120
  7560  0069AE                     u2920:
  7561  0069AE  8035               	bsf	___fladd@aexp^0,0,c
  7562  0069B0                     l3120:
  7563  0069B0  5035               	movf	___fladd@aexp^0,w,c
  7564  0069B2  B4D8               	btfsc	status,2,c
  7565  0069B4  EFDE  F034         	goto	u2931
  7566  0069B8  EFE0  F034         	goto	u2930
  7567  0069BC                     u2931:
  7568  0069BC  EFF5  F034         	goto	l3130
  7569  0069C0                     u2930:
  7570  0069C0  2835               	incf	___fladd@aexp^0,w,c
  7571  0069C2  A4D8               	btfss	status,2,c
  7572  0069C4  EFE6  F034         	goto	u2941
  7573  0069C8  EFE8  F034         	goto	u2940
  7574  0069CC                     u2941:
  7575  0069CC  EFF0  F034         	goto	l3126
  7576  0069D0                     u2940:
  7577  0069D0  0E00               	movlw	0
  7578  0069D2  6E2C               	movwf	___fladd@a^0,c
  7579  0069D4  0E00               	movlw	0
  7580  0069D6  6E2D               	movwf	(___fladd@a+1)^0,c
  7581  0069D8  0E00               	movlw	0
  7582  0069DA  6E2E               	movwf	(___fladd@a+2)^0,c
  7583  0069DC  0E00               	movlw	0
  7584  0069DE  6E2F               	movwf	(___fladd@a+3)^0,c
  7585  0069E0                     l3126:
  7586  0069E0  8E2E               	bsf	(___fladd@a+2)^0,7,c
  7587  0069E2  0E00               	movlw	0
  7588  0069E4  6E2F               	movwf	(___fladd@a+3)^0,c
  7589  0069E6  EFFD  F034         	goto	l3132
  7590  0069EA                     l3130:
  7591  0069EA  0E00               	movlw	0
  7592  0069EC  6E2C               	movwf	___fladd@a^0,c
  7593  0069EE  0E00               	movlw	0
  7594  0069F0  6E2D               	movwf	(___fladd@a+1)^0,c
  7595  0069F2  0E00               	movlw	0
  7596  0069F4  6E2E               	movwf	(___fladd@a+2)^0,c
  7597  0069F6  0E00               	movlw	0
  7598  0069F8  6E2F               	movwf	(___fladd@a+3)^0,c
  7599  0069FA                     l3132:
  7600  0069FA  5036               	movf	___fladd@bexp^0,w,c
  7601  0069FC  5C35               	subwf	___fladd@aexp^0,w,c
  7602  0069FE  B0D8               	btfsc	status,0,c
  7603  006A00  EF04  F035         	goto	u2951
  7604  006A04  EF06  F035         	goto	u2950
  7605  006A08                     u2951:
  7606  006A08  EF2D  F035         	goto	l3168
  7607  006A0C                     u2950:
  7608  006A0C  AC34               	btfss	___fladd@signs^0,6,c
  7609  006A0E  EF0B  F035         	goto	u2961
  7610  006A12  EF0D  F035         	goto	u2960
  7611  006A16                     u2961:
  7612  006A16  EF0F  F035         	goto	l3138
  7613  006A1A                     u2960:
  7614  006A1A  0E80               	movlw	128
  7615  006A1C  1A34               	xorwf	___fladd@signs^0,f,c
  7616  006A1E                     l3138:
  7617  006A1E  C036  F037         	movff	___fladd@bexp,___fladd@grs
  7618  006A22  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  7619  006A26  C037  F035         	movff	___fladd@grs,___fladd@aexp
  7620  006A2A  C028  F037         	movff	___fladd@b,___fladd@grs
  7621  006A2E  C02C  F028         	movff	___fladd@a,___fladd@b
  7622  006A32  C037  F02C         	movff	___fladd@grs,___fladd@a
  7623  006A36  C029  F037         	movff	___fladd@b+1,___fladd@grs
  7624  006A3A  C02D  F029         	movff	___fladd@a+1,___fladd@b+1
  7625  006A3E  C037  F02D         	movff	___fladd@grs,___fladd@a+1
  7626  006A42  C02A  F037         	movff	___fladd@b+2,___fladd@grs
  7627  006A46  C02E  F02A         	movff	___fladd@a+2,___fladd@b+2
  7628  006A4A  C037  F02E         	movff	___fladd@grs,___fladd@a+2
  7629  006A4E  C02B  F037         	movff	___fladd@b+3,___fladd@grs
  7630  006A52  C02F  F02B         	movff	___fladd@a+3,___fladd@b+3
  7631  006A56  C037  F02F         	movff	___fladd@grs,___fladd@a+3
  7632  006A5A                     l3168:
  7633  006A5A  0E00               	movlw	0
  7634  006A5C  6E37               	movwf	___fladd@grs^0,c
  7635  006A5E  5036               	movf	___fladd@bexp^0,w,c
  7636  006A60  C035  F030         	movff	___fladd@aexp,??___fladd
  7637  006A64  6A31               	clrf	(??___fladd+1)^0,c
  7638  006A66  5E30               	subwf	??___fladd^0,f,c
  7639  006A68  0E00               	movlw	0
  7640  006A6A  5A31               	subwfb	(??___fladd+1)^0,f,c
  7641  006A6C  BE31               	btfsc	(??___fladd+1)^0,7,c
  7642  006A6E  EF42  F035         	goto	u2971
  7643  006A72  5031               	movf	(??___fladd+1)^0,w,c
  7644  006A74  E109               	bnz	u2970
  7645  006A76  0E1A               	movlw	26
  7646  006A78  5C30               	subwf	??___fladd^0,w,c
  7647  006A7A  A0D8               	btfss	status,0,c
  7648  006A7C  EF42  F035         	goto	u2971
  7649  006A80  EF44  F035         	goto	u2970
  7650  006A84                     u2971:
  7651  006A84  EF7B  F035         	goto	l741
  7652  006A88                     u2970:
  7653  006A88  5028               	movf	___fladd@b^0,w,c
  7654  006A8A  1029               	iorwf	(___fladd@b+1)^0,w,c
  7655  006A8C  102A               	iorwf	(___fladd@b+2)^0,w,c
  7656  006A8E  102B               	iorwf	(___fladd@b+3)^0,w,c
  7657  006A90  A4D8               	btfss	status,2,c
  7658  006A92  EF4D  F035         	goto	u2981
  7659  006A96  EF50  F035         	goto	u2980
  7660  006A9A                     u2981:
  7661  006A9A  0E01               	movlw	1
  7662  006A9C  EF51  F035         	goto	u2990
  7663  006AA0                     u2980:
  7664  006AA0  0E00               	movlw	0
  7665  006AA2                     u2990:
  7666  006AA2  6E37               	movwf	___fladd@grs^0,c
  7667  006AA4  0E00               	movlw	0
  7668  006AA6  6E28               	movwf	___fladd@b^0,c
  7669  006AA8  0E00               	movlw	0
  7670  006AAA  6E29               	movwf	(___fladd@b+1)^0,c
  7671  006AAC  0E00               	movlw	0
  7672  006AAE  6E2A               	movwf	(___fladd@b+2)^0,c
  7673  006AB0  0E00               	movlw	0
  7674  006AB2  6E2B               	movwf	(___fladd@b+3)^0,c
  7675  006AB4  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  7676  006AB8  EF84  F035         	goto	l740
  7677  006ABC                     l742:
  7678  006ABC  A037               	btfss	___fladd@grs^0,0,c
  7679  006ABE  EF63  F035         	goto	u3001
  7680  006AC2  EF65  F035         	goto	u3000
  7681  006AC6                     u3001:
  7682  006AC6  EF6B  F035         	goto	l3180
  7683  006ACA                     u3000:
  7684  006ACA  90D8               	bcf	status,0,c
  7685  006ACC  3037               	rrcf	___fladd@grs^0,w,c
  7686  006ACE  0901               	iorlw	1
  7687  006AD0  6E37               	movwf	___fladd@grs^0,c
  7688  006AD2  EF6D  F035         	goto	l3182
  7689  006AD6                     l3180:
  7690  006AD6  90D8               	bcf	status,0,c
  7691  006AD8  3237               	rrcf	___fladd@grs^0,f,c
  7692  006ADA                     l3182:
  7693  006ADA  A028               	btfss	___fladd@b^0,0,c
  7694  006ADC  EF72  F035         	goto	u3011
  7695  006AE0  EF74  F035         	goto	u3010
  7696  006AE4                     u3011:
  7697  006AE4  EF75  F035         	goto	l3186
  7698  006AE8                     u3010:
  7699  006AE8  8E37               	bsf	___fladd@grs^0,7,c
  7700  006AEA                     l3186:
  7701  006AEA  342B               	rlcf	(___fladd@b+3)^0,w,c
  7702  006AEC  322B               	rrcf	(___fladd@b+3)^0,f,c
  7703  006AEE  322A               	rrcf	(___fladd@b+2)^0,f,c
  7704  006AF0  3229               	rrcf	(___fladd@b+1)^0,f,c
  7705  006AF2  3228               	rrcf	___fladd@b^0,f,c
  7706  006AF4  2A36               	incf	___fladd@bexp^0,f,c
  7707  006AF6                     l741:
  7708  006AF6  5035               	movf	___fladd@aexp^0,w,c
  7709  006AF8  5C36               	subwf	___fladd@bexp^0,w,c
  7710  006AFA  A0D8               	btfss	status,0,c
  7711  006AFC  EF82  F035         	goto	u3021
  7712  006B00  EF84  F035         	goto	u3020
  7713  006B04                     u3021:
  7714  006B04  EF5E  F035         	goto	l742
  7715  006B08                     u3020:
  7716  006B08                     l740:
  7717  006B08  BC34               	btfsc	___fladd@signs^0,6,c
  7718  006B0A  EF89  F035         	goto	u3031
  7719  006B0E  EF8B  F035         	goto	u3030
  7720  006B12                     u3031:
  7721  006B12  EFCB  F035         	goto	l3214
  7722  006B16                     u3030:
  7723  006B16  5036               	movf	___fladd@bexp^0,w,c
  7724  006B18  A4D8               	btfss	status,2,c
  7725  006B1A  EF91  F035         	goto	u3041
  7726  006B1E  EF93  F035         	goto	u3040
  7727  006B22                     u3041:
  7728  006B22  EF9D  F035         	goto	l3196
  7729  006B26                     u3040:
  7730  006B26  0E00               	movlw	0
  7731  006B28  6E28               	movwf	?___fladd^0,c
  7732  006B2A  0E00               	movlw	0
  7733  006B2C  6E29               	movwf	(?___fladd+1)^0,c
  7734  006B2E  0E00               	movlw	0
  7735  006B30  6E2A               	movwf	(?___fladd+2)^0,c
  7736  006B32  0E00               	movlw	0
  7737  006B34  6E2B               	movwf	(?___fladd+3)^0,c
  7738  006B36  EFEC  F036         	goto	l749
  7739  006B3A                     l3196:
  7740  006B3A  502C               	movf	___fladd@a^0,w,c
  7741  006B3C  2628               	addwf	___fladd@b^0,f,c
  7742  006B3E  502D               	movf	(___fladd@a+1)^0,w,c
  7743  006B40  2229               	addwfc	(___fladd@b+1)^0,f,c
  7744  006B42  502E               	movf	(___fladd@a+2)^0,w,c
  7745  006B44  222A               	addwfc	(___fladd@b+2)^0,f,c
  7746  006B46  502F               	movf	(___fladd@a+3)^0,w,c
  7747  006B48  222B               	addwfc	(___fladd@b+3)^0,f,c
  7748  006B4A  A02B               	btfss	(___fladd@b+3)^0,0,c
  7749  006B4C  EFAA  F035         	goto	u3051
  7750  006B50  EFAC  F035         	goto	u3050
  7751  006B54                     u3051:
  7752  006B54  EF58  F036         	goto	l3250
  7753  006B58                     u3050:
  7754  006B58  A037               	btfss	___fladd@grs^0,0,c
  7755  006B5A  EFB1  F035         	goto	u3061
  7756  006B5E  EFB3  F035         	goto	u3060
  7757  006B62                     u3061:
  7758  006B62  EFB9  F035         	goto	l3204
  7759  006B66                     u3060:
  7760  006B66  90D8               	bcf	status,0,c
  7761  006B68  3037               	rrcf	___fladd@grs^0,w,c
  7762  006B6A  0901               	iorlw	1
  7763  006B6C  6E37               	movwf	___fladd@grs^0,c
  7764  006B6E  EFBB  F035         	goto	l3206
  7765  006B72                     l3204:
  7766  006B72  90D8               	bcf	status,0,c
  7767  006B74  3237               	rrcf	___fladd@grs^0,f,c
  7768  006B76                     l3206:
  7769  006B76  A028               	btfss	___fladd@b^0,0,c
  7770  006B78  EFC0  F035         	goto	u3071
  7771  006B7C  EFC2  F035         	goto	u3070
  7772  006B80                     u3071:
  7773  006B80  EFC3  F035         	goto	l3210
  7774  006B84                     u3070:
  7775  006B84  8E37               	bsf	___fladd@grs^0,7,c
  7776  006B86                     l3210:
  7777  006B86  342B               	rlcf	(___fladd@b+3)^0,w,c
  7778  006B88  322B               	rrcf	(___fladd@b+3)^0,f,c
  7779  006B8A  322A               	rrcf	(___fladd@b+2)^0,f,c
  7780  006B8C  3229               	rrcf	(___fladd@b+1)^0,f,c
  7781  006B8E  3228               	rrcf	___fladd@b^0,f,c
  7782  006B90  2A36               	incf	___fladd@bexp^0,f,c
  7783  006B92  EF58  F036         	goto	l3250
  7784  006B96                     l3214:
  7785  006B96  502C               	movf	___fladd@a^0,w,c
  7786  006B98  5C28               	subwf	___fladd@b^0,w,c
  7787  006B9A  502D               	movf	(___fladd@a+1)^0,w,c
  7788  006B9C  5829               	subwfb	(___fladd@b+1)^0,w,c
  7789  006B9E  502E               	movf	(___fladd@a+2)^0,w,c
  7790  006BA0  582A               	subwfb	(___fladd@b+2)^0,w,c
  7791  006BA2  502B               	movf	(___fladd@b+3)^0,w,c
  7792  006BA4  0A80               	xorlw	128
  7793  006BA6  6E30               	movwf	??___fladd^0,c
  7794  006BA8  502F               	movf	(___fladd@a+3)^0,w,c
  7795  006BAA  0A80               	xorlw	128
  7796  006BAC  5830               	subwfb	??___fladd^0,w,c
  7797  006BAE  B0D8               	btfsc	status,0,c
  7798  006BB0  EFDC  F035         	goto	u3081
  7799  006BB4  EFDE  F035         	goto	u3080
  7800  006BB8                     u3081:
  7801  006BB8  EF09  F036         	goto	l3224
  7802  006BBC                     u3080:
  7803  006BBC  5028               	movf	___fladd@b^0,w,c
  7804  006BBE  5C2C               	subwf	___fladd@a^0,w,c
  7805  006BC0  6E30               	movwf	??___fladd^0,c
  7806  006BC2  5029               	movf	(___fladd@b+1)^0,w,c
  7807  006BC4  582D               	subwfb	(___fladd@a+1)^0,w,c
  7808  006BC6  6E31               	movwf	(??___fladd+1)^0,c
  7809  006BC8  502A               	movf	(___fladd@b+2)^0,w,c
  7810  006BCA  582E               	subwfb	(___fladd@a+2)^0,w,c
  7811  006BCC  6E32               	movwf	(??___fladd+2)^0,c
  7812  006BCE  502B               	movf	(___fladd@b+3)^0,w,c
  7813  006BD0  582F               	subwfb	(___fladd@a+3)^0,w,c
  7814  006BD2  6E33               	movwf	(??___fladd+3)^0,c
  7815  006BD4  0EFF               	movlw	255
  7816  006BD6  2430               	addwf	??___fladd^0,w,c
  7817  006BD8  6E28               	movwf	___fladd@b^0,c
  7818  006BDA  0EFF               	movlw	255
  7819  006BDC  2031               	addwfc	(??___fladd+1)^0,w,c
  7820  006BDE  6E29               	movwf	(___fladd@b+1)^0,c
  7821  006BE0  0EFF               	movlw	255
  7822  006BE2  2032               	addwfc	(??___fladd+2)^0,w,c
  7823  006BE4  6E2A               	movwf	(___fladd@b+2)^0,c
  7824  006BE6  0EFF               	movlw	255
  7825  006BE8  2033               	addwfc	(??___fladd+3)^0,w,c
  7826  006BEA  6E2B               	movwf	(___fladd@b+3)^0,c
  7827  006BEC  0E80               	movlw	128
  7828  006BEE  1A34               	xorwf	___fladd@signs^0,f,c
  7829  006BF0  6C37               	negf	___fladd@grs^0,c
  7830  006BF2  5037               	movf	___fladd@grs^0,w,c
  7831  006BF4  A4D8               	btfss	status,2,c
  7832  006BF6  EFFF  F035         	goto	u3091
  7833  006BFA  EF01  F036         	goto	u3090
  7834  006BFE                     u3091:
  7835  006BFE  EF11  F036         	goto	l757
  7836  006C02                     u3090:
  7837  006C02  0E01               	movlw	1
  7838  006C04  2628               	addwf	___fladd@b^0,f,c
  7839  006C06  0E00               	movlw	0
  7840  006C08  2229               	addwfc	(___fladd@b+1)^0,f,c
  7841  006C0A  222A               	addwfc	(___fladd@b+2)^0,f,c
  7842  006C0C  222B               	addwfc	(___fladd@b+3)^0,f,c
  7843  006C0E  EF11  F036         	goto	l757
  7844  006C12                     l3224:
  7845  006C12  502C               	movf	___fladd@a^0,w,c
  7846  006C14  5E28               	subwf	___fladd@b^0,f,c
  7847  006C16  502D               	movf	(___fladd@a+1)^0,w,c
  7848  006C18  5A29               	subwfb	(___fladd@b+1)^0,f,c
  7849  006C1A  502E               	movf	(___fladd@a+2)^0,w,c
  7850  006C1C  5A2A               	subwfb	(___fladd@b+2)^0,f,c
  7851  006C1E  502F               	movf	(___fladd@a+3)^0,w,c
  7852  006C20  5A2B               	subwfb	(___fladd@b+3)^0,f,c
  7853  006C22                     l757:
  7854  006C22  5028               	movf	___fladd@b^0,w,c
  7855  006C24  1029               	iorwf	(___fladd@b+1)^0,w,c
  7856  006C26  102A               	iorwf	(___fladd@b+2)^0,w,c
  7857  006C28  102B               	iorwf	(___fladd@b+3)^0,w,c
  7858  006C2A  A4D8               	btfss	status,2,c
  7859  006C2C  EF1A  F036         	goto	u3101
  7860  006C30  EF1C  F036         	goto	u3100
  7861  006C34                     u3101:
  7862  006C34  EF51  F036         	goto	l3248
  7863  006C38                     u3100:
  7864  006C38  5037               	movf	___fladd@grs^0,w,c
  7865  006C3A  A4D8               	btfss	status,2,c
  7866  006C3C  EF22  F036         	goto	u3111
  7867  006C40  EF24  F036         	goto	u3110
  7868  006C44                     u3111:
  7869  006C44  EF51  F036         	goto	l3248
  7870  006C48                     u3110:
  7871  006C48  0E00               	movlw	0
  7872  006C4A  6E28               	movwf	?___fladd^0,c
  7873  006C4C  0E00               	movlw	0
  7874  006C4E  6E29               	movwf	(?___fladd+1)^0,c
  7875  006C50  0E00               	movlw	0
  7876  006C52  6E2A               	movwf	(?___fladd+2)^0,c
  7877  006C54  0E00               	movlw	0
  7878  006C56  6E2B               	movwf	(?___fladd+3)^0,c
  7879  006C58  EFEC  F036         	goto	l749
  7880  006C5C                     l3232:
  7881  006C5C  90D8               	bcf	status,0,c
  7882  006C5E  3628               	rlcf	___fladd@b^0,f,c
  7883  006C60  3629               	rlcf	(___fladd@b+1)^0,f,c
  7884  006C62  362A               	rlcf	(___fladd@b+2)^0,f,c
  7885  006C64  362B               	rlcf	(___fladd@b+3)^0,f,c
  7886  006C66  AE37               	btfss	___fladd@grs^0,7,c
  7887  006C68  EF38  F036         	goto	u3121
  7888  006C6C  EF3A  F036         	goto	u3120
  7889  006C70                     u3121:
  7890  006C70  EF3B  F036         	goto	l3238
  7891  006C74                     u3120:
  7892  006C74  8028               	bsf	___fladd@b^0,0,c
  7893  006C76                     l3238:
  7894  006C76  A037               	btfss	___fladd@grs^0,0,c
  7895  006C78  EF40  F036         	goto	u3131
  7896  006C7C  EF42  F036         	goto	u3130
  7897  006C80                     u3131:
  7898  006C80  EF46  F036         	goto	l3242
  7899  006C84                     u3130:
  7900  006C84  80D8               	bsf	status,0,c
  7901  006C86  3637               	rlcf	___fladd@grs^0,f,c
  7902  006C88  EF48  F036         	goto	l3244
  7903  006C8C                     l3242:
  7904  006C8C  90D8               	bcf	status,0,c
  7905  006C8E  3637               	rlcf	___fladd@grs^0,f,c
  7906  006C90                     l3244:
  7907  006C90  5036               	movf	___fladd@bexp^0,w,c
  7908  006C92  B4D8               	btfsc	status,2,c
  7909  006C94  EF4E  F036         	goto	u3141
  7910  006C98  EF50  F036         	goto	u3140
  7911  006C9C                     u3141:
  7912  006C9C  EF51  F036         	goto	l3248
  7913  006CA0                     u3140:
  7914  006CA0  0636               	decf	___fladd@bexp^0,f,c
  7915  006CA2                     l3248:
  7916  006CA2  AE2A               	btfss	(___fladd@b+2)^0,7,c
  7917  006CA4  EF56  F036         	goto	u3151
  7918  006CA8  EF58  F036         	goto	u3150
  7919  006CAC                     u3151:
  7920  006CAC  EF2E  F036         	goto	l3232
  7921  006CB0                     u3150:
  7922  006CB0                     l3250:
  7923  006CB0  0E00               	movlw	0
  7924  006CB2  6E35               	movwf	___fladd@aexp^0,c
  7925  006CB4  AE37               	btfss	___fladd@grs^0,7,c
  7926  006CB6  EF5F  F036         	goto	u3161
  7927  006CBA  EF61  F036         	goto	u3160
  7928  006CBE                     u3161:
  7929  006CBE  EF79  F036         	goto	l766
  7930  006CC2                     u3160:
  7931  006CC2  C037  F030         	movff	___fladd@grs,??___fladd
  7932  006CC6  0E7F               	movlw	127
  7933  006CC8  1630               	andwf	??___fladd^0,f,c
  7934  006CCA  B4D8               	btfsc	status,2,c
  7935  006CCC  EF6A  F036         	goto	u3171
  7936  006CD0  EF6C  F036         	goto	u3170
  7937  006CD4                     u3171:
  7938  006CD4  EF70  F036         	goto	l767
  7939  006CD8                     u3170:
  7940  006CD8                     l3256:
  7941  006CD8  0E01               	movlw	1
  7942  006CDA  6E35               	movwf	___fladd@aexp^0,c
  7943  006CDC  EF79  F036         	goto	l766
  7944  006CE0                     l767:
  7945  006CE0  A028               	btfss	___fladd@b^0,0,c
  7946  006CE2  EF75  F036         	goto	u3181
  7947  006CE6  EF77  F036         	goto	u3180
  7948  006CEA                     u3181:
  7949  006CEA  EF79  F036         	goto	l766
  7950  006CEE                     u3180:
  7951  006CEE  EF6C  F036         	goto	l3256
  7952  006CF2                     l766:
  7953  006CF2  5035               	movf	___fladd@aexp^0,w,c
  7954  006CF4  B4D8               	btfsc	status,2,c
  7955  006CF6  EF7F  F036         	goto	u3191
  7956  006CFA  EF81  F036         	goto	u3190
  7957  006CFE                     u3191:
  7958  006CFE  EFAC  F036         	goto	l3268
  7959  006D02                     u3190:
  7960  006D02  0E01               	movlw	1
  7961  006D04  2628               	addwf	___fladd@b^0,f,c
  7962  006D06  0E00               	movlw	0
  7963  006D08  2229               	addwfc	(___fladd@b+1)^0,f,c
  7964  006D0A  222A               	addwfc	(___fladd@b+2)^0,f,c
  7965  006D0C  222B               	addwfc	(___fladd@b+3)^0,f,c
  7966  006D0E  A02B               	btfss	(___fladd@b+3)^0,0,c
  7967  006D10  EF8C  F036         	goto	u3201
  7968  006D14  EF8E  F036         	goto	u3200
  7969  006D18                     u3201:
  7970  006D18  EFAC  F036         	goto	l3268
  7971  006D1C                     u3200:
  7972  006D1C  C028  F030         	movff	___fladd@b,??___fladd
  7973  006D20  C029  F031         	movff	___fladd@b+1,??___fladd+1
  7974  006D24  C02A  F032         	movff	___fladd@b+2,??___fladd+2
  7975  006D28  C02B  F033         	movff	___fladd@b+3,??___fladd+3
  7976  006D2C  3433               	rlcf	(??___fladd+3)^0,w,c
  7977  006D2E  3233               	rrcf	(??___fladd+3)^0,f,c
  7978  006D30  3232               	rrcf	(??___fladd+2)^0,f,c
  7979  006D32  3231               	rrcf	(??___fladd+1)^0,f,c
  7980  006D34  3230               	rrcf	??___fladd^0,f,c
  7981  006D36  C030  F028         	movff	??___fladd,___fladd@b
  7982  006D3A  C031  F029         	movff	??___fladd+1,___fladd@b+1
  7983  006D3E  C032  F02A         	movff	??___fladd+2,___fladd@b+2
  7984  006D42  C033  F02B         	movff	??___fladd+3,___fladd@b+3
  7985  006D46  2836               	incf	___fladd@bexp^0,w,c
  7986  006D48  B4D8               	btfsc	status,2,c
  7987  006D4A  EFA9  F036         	goto	u3211
  7988  006D4E  EFAB  F036         	goto	u3210
  7989  006D52                     u3211:
  7990  006D52  EFAC  F036         	goto	l3268
  7991  006D56                     u3210:
  7992  006D56  2A36               	incf	___fladd@bexp^0,f,c
  7993  006D58                     l3268:
  7994  006D58  2836               	incf	___fladd@bexp^0,w,c
  7995  006D5A  B4D8               	btfsc	status,2,c
  7996  006D5C  EFB2  F036         	goto	u3221
  7997  006D60  EFB4  F036         	goto	u3220
  7998  006D64                     u3221:
  7999  006D64  EFBC  F036         	goto	l3272
  8000  006D68                     u3220:
  8001  006D68  5036               	movf	___fladd@bexp^0,w,c
  8002  006D6A  A4D8               	btfss	status,2,c
  8003  006D6C  EFBA  F036         	goto	u3231
  8004  006D70  EFBC  F036         	goto	u3230
  8005  006D74                     u3231:
  8006  006D74  EFCE  F036         	goto	l3276
  8007  006D78                     u3230:
  8008  006D78                     l3272:
  8009  006D78  0E00               	movlw	0
  8010  006D7A  6E28               	movwf	___fladd@b^0,c
  8011  006D7C  0E00               	movlw	0
  8012  006D7E  6E29               	movwf	(___fladd@b+1)^0,c
  8013  006D80  0E00               	movlw	0
  8014  006D82  6E2A               	movwf	(___fladd@b+2)^0,c
  8015  006D84  0E00               	movlw	0
  8016  006D86  6E2B               	movwf	(___fladd@b+3)^0,c
  8017  006D88  5036               	movf	___fladd@bexp^0,w,c
  8018  006D8A  A4D8               	btfss	status,2,c
  8019  006D8C  EFCA  F036         	goto	u3241
  8020  006D90  EFCC  F036         	goto	u3240
  8021  006D94                     u3241:
  8022  006D94  EFCE  F036         	goto	l3276
  8023  006D98                     u3240:
  8024  006D98  0E00               	movlw	0
  8025  006D9A  6E34               	movwf	___fladd@signs^0,c
  8026  006D9C                     l3276:
  8027  006D9C  A036               	btfss	___fladd@bexp^0,0,c
  8028  006D9E  EFD3  F036         	goto	u3251
  8029  006DA2  EFD5  F036         	goto	u3250
  8030  006DA6                     u3251:
  8031  006DA6  EFD8  F036         	goto	l3280
  8032  006DAA                     u3250:
  8033  006DAA  8E2A               	bsf	(___fladd@b+2)^0,7,c
  8034  006DAC  EFD9  F036         	goto	l3282
  8035  006DB0                     l3280:
  8036  006DB0  9E2A               	bcf	(___fladd@b+2)^0,7,c
  8037  006DB2                     l3282:
  8038  006DB2  90D8               	bcf	status,0,c
  8039  006DB4  3036               	rrcf	___fladd@bexp^0,w,c
  8040  006DB6  6E2B               	movwf	(___fladd@b+3)^0,c
  8041  006DB8  AE34               	btfss	___fladd@signs^0,7,c
  8042  006DBA  EFE1  F036         	goto	u3261
  8043  006DBE  EFE3  F036         	goto	u3260
  8044  006DC2                     u3261:
  8045  006DC2  EFE4  F036         	goto	l3288
  8046  006DC6                     u3260:
  8047  006DC6  8E2B               	bsf	(___fladd@b+3)^0,7,c
  8048  006DC8                     l3288:
  8049  006DC8  C028  F028         	movff	___fladd@b,?___fladd
  8050  006DCC  C029  F029         	movff	___fladd@b+1,?___fladd+1
  8051  006DD0  C02A  F02A         	movff	___fladd@b+2,?___fladd+2
  8052  006DD4  C02B  F02B         	movff	___fladd@b+3,?___fladd+3
  8053  006DD8                     l749:
  8054  006DD8  0012               	return		;funcret
  8055  006DDA                     __end_of___fladd:
  8056                           	callstack 0
  8057                           
  8058 ;; *************** function ___flneg *****************
  8059 ;; Defined at:
  8060 ;;		line 15 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\flneg.c"
  8061 ;; Parameters:    Size  Location     Type
  8062 ;;  f1              4    0[COMRAM] unsigned char 
  8063 ;; Auto vars:     Size  Location     Type
  8064 ;;		None
  8065 ;; Return value:  Size  Location     Type
  8066 ;;                  4    0[COMRAM] unsigned char 
  8067 ;; Registers used:
  8068 ;;		wreg, status,2, status,0
  8069 ;; Tracked objects:
  8070 ;;		On entry : 0/0
  8071 ;;		On exit  : 0/0
  8072 ;;		Unchanged: 0/0
  8073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8074 ;;      Params:         4       0       0       0       0       0       0
  8075 ;;      Locals:         0       0       0       0       0       0       0
  8076 ;;      Temps:          0       0       0       0       0       0       0
  8077 ;;      Totals:         4       0       0       0       0       0       0
  8078 ;;Total ram usage:        4 bytes
  8079 ;; Hardware stack levels used:    1
  8080 ;; This function calls:
  8081 ;;		Nothing
  8082 ;; This function is called by:
  8083 ;;		_efgtoa
  8084 ;; This function uses a non-reentrant model
  8085 ;;
  8086                           
  8087                           	psect	text24
  8088  00443C                     __ptext24:
  8089                           	callstack 0
  8090  00443C                     ___flneg:
  8091                           	callstack 25
  8092  00443C  5001               	movf	___flneg@f1^0,w,c
  8093  00443E  1002               	iorwf	(___flneg@f1+1)^0,w,c
  8094  004440  1003               	iorwf	(___flneg@f1+2)^0,w,c
  8095  004442  1004               	iorwf	(___flneg@f1+3)^0,w,c
  8096  004444  B4D8               	btfsc	status,2,c
  8097  004446  EF27  F022         	goto	u3931
  8098  00444A  EF29  F022         	goto	u3930
  8099  00444E                     u3931:
  8100  00444E  EF31  F022         	goto	l3716
  8101  004452                     u3930:
  8102  004452  0E00               	movlw	0
  8103  004454  1A01               	xorwf	___flneg@f1^0,f,c
  8104  004456  0E00               	movlw	0
  8105  004458  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  8106  00445A  0E00               	movlw	0
  8107  00445C  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  8108  00445E  0E80               	movlw	128
  8109  004460  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  8110  004462                     l3716:
  8111  004462  C001  F001         	movff	___flneg@f1,?___flneg
  8112  004466  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  8113  00446A  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  8114  00446E  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  8115  004472  0012               	return		;funcret
  8116  004474                     __end_of___flneg:
  8117                           	callstack 0
  8118                           
  8119 ;; *************** function ___flmul *****************
  8120 ;; Defined at:
  8121 ;;		line 8 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
  8122 ;; Parameters:    Size  Location     Type
  8123 ;;  b               4   14[COMRAM] unsigned char 
  8124 ;;  a               4   18[COMRAM] unsigned char 
  8125 ;; Auto vars:     Size  Location     Type
  8126 ;;  prod            4   33[COMRAM] struct .
  8127 ;;  grs             4   27[COMRAM] unsigned long 
  8128 ;;  temp            2   37[COMRAM] struct .
  8129 ;;  bexp            1   32[COMRAM] unsigned char 
  8130 ;;  aexp            1   31[COMRAM] unsigned char 
  8131 ;;  sign            1   26[COMRAM] unsigned char 
  8132 ;; Return value:  Size  Location     Type
  8133 ;;                  4   14[COMRAM] unsigned char 
  8134 ;; Registers used:
  8135 ;;		wreg, status,2, status,0, prodl, prodh
  8136 ;; Tracked objects:
  8137 ;;		On entry : 0/0
  8138 ;;		On exit  : 0/0
  8139 ;;		Unchanged: 0/0
  8140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8141 ;;      Params:         8       0       0       0       0       0       0
  8142 ;;      Locals:        13       0       0       0       0       0       0
  8143 ;;      Temps:          4       0       0       0       0       0       0
  8144 ;;      Totals:        25       0       0       0       0       0       0
  8145 ;;Total ram usage:       25 bytes
  8146 ;; Hardware stack levels used:    1
  8147 ;; This function calls:
  8148 ;;		Nothing
  8149 ;; This function is called by:
  8150 ;;		_encher_tanque
  8151 ;;		_efgtoa
  8152 ;; This function uses a non-reentrant model
  8153 ;;
  8154                           
  8155                           	psect	text25
  8156  006086                     __ptext25:
  8157                           	callstack 0
  8158  006086                     ___flmul:
  8159                           	callstack 25
  8160  006086  5012               	movf	(___flmul@b+3)^0,w,c
  8161  006088  0B80               	andlw	128
  8162  00608A  6E1B               	movwf	___flmul@sign^0,c
  8163  00608C  5012               	movf	(___flmul@b+3)^0,w,c
  8164  00608E  2412               	addwf	(___flmul@b+3)^0,w,c
  8165  006090  6E21               	movwf	___flmul@bexp^0,c
  8166  006092  AE11               	btfss	(___flmul@b+2)^0,7,c
  8167  006094  EF4E  F030         	goto	u3541
  8168  006098  EF50  F030         	goto	u3540
  8169  00609C                     u3541:
  8170  00609C  EF51  F030         	goto	l3464
  8171  0060A0                     u3540:
  8172  0060A0  8021               	bsf	___flmul@bexp^0,0,c
  8173  0060A2                     l3464:
  8174  0060A2  5021               	movf	___flmul@bexp^0,w,c
  8175  0060A4  B4D8               	btfsc	status,2,c
  8176  0060A6  EF57  F030         	goto	u3551
  8177  0060AA  EF59  F030         	goto	u3550
  8178  0060AE                     u3551:
  8179  0060AE  EF6C  F030         	goto	l3472
  8180  0060B2                     u3550:
  8181  0060B2  2821               	incf	___flmul@bexp^0,w,c
  8182  0060B4  A4D8               	btfss	status,2,c
  8183  0060B6  EF5F  F030         	goto	u3561
  8184  0060BA  EF61  F030         	goto	u3560
  8185  0060BE                     u3561:
  8186  0060BE  EF69  F030         	goto	l3470
  8187  0060C2                     u3560:
  8188  0060C2  0E00               	movlw	0
  8189  0060C4  6E0F               	movwf	___flmul@b^0,c
  8190  0060C6  0E00               	movlw	0
  8191  0060C8  6E10               	movwf	(___flmul@b+1)^0,c
  8192  0060CA  0E00               	movlw	0
  8193  0060CC  6E11               	movwf	(___flmul@b+2)^0,c
  8194  0060CE  0E00               	movlw	0
  8195  0060D0  6E12               	movwf	(___flmul@b+3)^0,c
  8196  0060D2                     l3470:
  8197  0060D2  8E11               	bsf	(___flmul@b+2)^0,7,c
  8198  0060D4  EF74  F030         	goto	l3474
  8199  0060D8                     l3472:
  8200  0060D8  0E00               	movlw	0
  8201  0060DA  6E0F               	movwf	___flmul@b^0,c
  8202  0060DC  0E00               	movlw	0
  8203  0060DE  6E10               	movwf	(___flmul@b+1)^0,c
  8204  0060E0  0E00               	movlw	0
  8205  0060E2  6E11               	movwf	(___flmul@b+2)^0,c
  8206  0060E4  0E00               	movlw	0
  8207  0060E6  6E12               	movwf	(___flmul@b+3)^0,c
  8208  0060E8                     l3474:
  8209  0060E8  5016               	movf	(___flmul@a+3)^0,w,c
  8210  0060EA  0B80               	andlw	128
  8211  0060EC  1A1B               	xorwf	___flmul@sign^0,f,c
  8212  0060EE  5016               	movf	(___flmul@a+3)^0,w,c
  8213  0060F0  2416               	addwf	(___flmul@a+3)^0,w,c
  8214  0060F2  6E20               	movwf	___flmul@aexp^0,c
  8215  0060F4  AE15               	btfss	(___flmul@a+2)^0,7,c
  8216  0060F6  EF7F  F030         	goto	u3571
  8217  0060FA  EF81  F030         	goto	u3570
  8218  0060FE                     u3571:
  8219  0060FE  EF82  F030         	goto	l3482
  8220  006102                     u3570:
  8221  006102  8020               	bsf	___flmul@aexp^0,0,c
  8222  006104                     l3482:
  8223  006104  5020               	movf	___flmul@aexp^0,w,c
  8224  006106  B4D8               	btfsc	status,2,c
  8225  006108  EF88  F030         	goto	u3581
  8226  00610C  EF8A  F030         	goto	u3580
  8227  006110                     u3581:
  8228  006110  EF9D  F030         	goto	l3490
  8229  006114                     u3580:
  8230  006114  2820               	incf	___flmul@aexp^0,w,c
  8231  006116  A4D8               	btfss	status,2,c
  8232  006118  EF90  F030         	goto	u3591
  8233  00611C  EF92  F030         	goto	u3590
  8234  006120                     u3591:
  8235  006120  EF9A  F030         	goto	l3488
  8236  006124                     u3590:
  8237  006124  0E00               	movlw	0
  8238  006126  6E13               	movwf	___flmul@a^0,c
  8239  006128  0E00               	movlw	0
  8240  00612A  6E14               	movwf	(___flmul@a+1)^0,c
  8241  00612C  0E00               	movlw	0
  8242  00612E  6E15               	movwf	(___flmul@a+2)^0,c
  8243  006130  0E00               	movlw	0
  8244  006132  6E16               	movwf	(___flmul@a+3)^0,c
  8245  006134                     l3488:
  8246  006134  8E15               	bsf	(___flmul@a+2)^0,7,c
  8247  006136  EFA5  F030         	goto	l826
  8248  00613A                     l3490:
  8249  00613A  0E00               	movlw	0
  8250  00613C  6E13               	movwf	___flmul@a^0,c
  8251  00613E  0E00               	movlw	0
  8252  006140  6E14               	movwf	(___flmul@a+1)^0,c
  8253  006142  0E00               	movlw	0
  8254  006144  6E15               	movwf	(___flmul@a+2)^0,c
  8255  006146  0E00               	movlw	0
  8256  006148  6E16               	movwf	(___flmul@a+3)^0,c
  8257  00614A                     l826:
  8258  00614A  5020               	movf	___flmul@aexp^0,w,c
  8259  00614C  B4D8               	btfsc	status,2,c
  8260  00614E  EFAB  F030         	goto	u3601
  8261  006152  EFAD  F030         	goto	u3600
  8262  006156                     u3601:
  8263  006156  EFB5  F030         	goto	l3494
  8264  00615A                     u3600:
  8265  00615A  5021               	movf	___flmul@bexp^0,w,c
  8266  00615C  A4D8               	btfss	status,2,c
  8267  00615E  EFB3  F030         	goto	u3611
  8268  006162  EFB5  F030         	goto	u3610
  8269  006166                     u3611:
  8270  006166  EFBF  F030         	goto	l3498
  8271  00616A                     u3610:
  8272  00616A                     l3494:
  8273  00616A  0E00               	movlw	0
  8274  00616C  6E0F               	movwf	?___flmul^0,c
  8275  00616E  0E00               	movlw	0
  8276  006170  6E10               	movwf	(?___flmul+1)^0,c
  8277  006172  0E00               	movlw	0
  8278  006174  6E11               	movwf	(?___flmul+2)^0,c
  8279  006176  0E00               	movlw	0
  8280  006178  6E12               	movwf	(?___flmul+3)^0,c
  8281  00617A  EF57  F032         	goto	l830
  8282  00617E                     l3498:
  8283  00617E  5015               	movf	(___flmul@a+2)^0,w,c
  8284  006180  020F               	mulwf	___flmul@b^0,c
  8285  006182  CFF3 F026          	movff	prodl,___flmul@temp
  8286  006186  CFF4 F027          	movff	prodh,___flmul@temp+1
  8287  00618A  5026               	movf	___flmul@temp^0,w,c
  8288  00618C  6E1C               	movwf	___flmul@grs^0,c
  8289  00618E  6A1D               	clrf	(___flmul@grs+1)^0,c
  8290  006190  6A1E               	clrf	(___flmul@grs+2)^0,c
  8291  006192  6A1F               	clrf	(___flmul@grs+3)^0,c
  8292  006194  5027               	movf	(___flmul@temp+1)^0,w,c
  8293  006196  6E22               	movwf	___flmul@prod^0,c
  8294  006198  6A23               	clrf	(___flmul@prod+1)^0,c
  8295  00619A  6A24               	clrf	(___flmul@prod+2)^0,c
  8296  00619C  6A25               	clrf	(___flmul@prod+3)^0,c
  8297  00619E  5014               	movf	(___flmul@a+1)^0,w,c
  8298  0061A0  0210               	mulwf	(___flmul@b+1)^0,c
  8299  0061A2  CFF3 F026          	movff	prodl,___flmul@temp
  8300  0061A6  CFF4 F027          	movff	prodh,___flmul@temp+1
  8301  0061AA  5026               	movf	___flmul@temp^0,w,c
  8302  0061AC  261C               	addwf	___flmul@grs^0,f,c
  8303  0061AE  0E00               	movlw	0
  8304  0061B0  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8305  0061B2  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8306  0061B4  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8307  0061B6  5027               	movf	(___flmul@temp+1)^0,w,c
  8308  0061B8  2622               	addwf	___flmul@prod^0,f,c
  8309  0061BA  0E00               	movlw	0
  8310  0061BC  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8311  0061BE  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8312  0061C0  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8313  0061C2  5013               	movf	___flmul@a^0,w,c
  8314  0061C4  0211               	mulwf	(___flmul@b+2)^0,c
  8315  0061C6  CFF3 F026          	movff	prodl,___flmul@temp
  8316  0061CA  CFF4 F027          	movff	prodh,___flmul@temp+1
  8317  0061CE  5026               	movf	___flmul@temp^0,w,c
  8318  0061D0  261C               	addwf	___flmul@grs^0,f,c
  8319  0061D2  0E00               	movlw	0
  8320  0061D4  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8321  0061D6  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8322  0061D8  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8323  0061DA  5027               	movf	(___flmul@temp+1)^0,w,c
  8324  0061DC  2622               	addwf	___flmul@prod^0,f,c
  8325  0061DE  0E00               	movlw	0
  8326  0061E0  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8327  0061E2  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8328  0061E4  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8329  0061E6  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8330  0061EA  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8331  0061EE  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8332  0061F2  6A1C               	clrf	___flmul@grs^0,c
  8333  0061F4  5013               	movf	___flmul@a^0,w,c
  8334  0061F6  0210               	mulwf	(___flmul@b+1)^0,c
  8335  0061F8  CFF3 F026          	movff	prodl,___flmul@temp
  8336  0061FC  CFF4 F027          	movff	prodh,___flmul@temp+1
  8337  006200  5026               	movf	___flmul@temp^0,w,c
  8338  006202  261C               	addwf	___flmul@grs^0,f,c
  8339  006204  5027               	movf	(___flmul@temp+1)^0,w,c
  8340  006206  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8341  006208  0E00               	movlw	0
  8342  00620A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8343  00620C  0E00               	movlw	0
  8344  00620E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8345  006210  5014               	movf	(___flmul@a+1)^0,w,c
  8346  006212  020F               	mulwf	___flmul@b^0,c
  8347  006214  CFF3 F026          	movff	prodl,___flmul@temp
  8348  006218  CFF4 F027          	movff	prodh,___flmul@temp+1
  8349  00621C  5026               	movf	___flmul@temp^0,w,c
  8350  00621E  261C               	addwf	___flmul@grs^0,f,c
  8351  006220  5027               	movf	(___flmul@temp+1)^0,w,c
  8352  006222  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8353  006224  0E00               	movlw	0
  8354  006226  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8355  006228  0E00               	movlw	0
  8356  00622A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8357  00622C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8358  006230  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8359  006234  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8360  006238  6A1C               	clrf	___flmul@grs^0,c
  8361  00623A  5013               	movf	___flmul@a^0,w,c
  8362  00623C  020F               	mulwf	___flmul@b^0,c
  8363  00623E  CFF3 F026          	movff	prodl,___flmul@temp
  8364  006242  CFF4 F027          	movff	prodh,___flmul@temp+1
  8365  006246  5026               	movf	___flmul@temp^0,w,c
  8366  006248  261C               	addwf	___flmul@grs^0,f,c
  8367  00624A  5027               	movf	(___flmul@temp+1)^0,w,c
  8368  00624C  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8369  00624E  0E00               	movlw	0
  8370  006250  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8371  006252  0E00               	movlw	0
  8372  006254  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8373  006256  5015               	movf	(___flmul@a+2)^0,w,c
  8374  006258  0210               	mulwf	(___flmul@b+1)^0,c
  8375  00625A  CFF3 F026          	movff	prodl,___flmul@temp
  8376  00625E  CFF4 F027          	movff	prodh,___flmul@temp+1
  8377  006262  5026               	movf	___flmul@temp^0,w,c
  8378  006264  2622               	addwf	___flmul@prod^0,f,c
  8379  006266  5027               	movf	(___flmul@temp+1)^0,w,c
  8380  006268  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8381  00626A  0E00               	movlw	0
  8382  00626C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8383  00626E  0E00               	movlw	0
  8384  006270  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8385  006272  5014               	movf	(___flmul@a+1)^0,w,c
  8386  006274  0211               	mulwf	(___flmul@b+2)^0,c
  8387  006276  CFF3 F026          	movff	prodl,___flmul@temp
  8388  00627A  CFF4 F027          	movff	prodh,___flmul@temp+1
  8389  00627E  5026               	movf	___flmul@temp^0,w,c
  8390  006280  2622               	addwf	___flmul@prod^0,f,c
  8391  006282  5027               	movf	(___flmul@temp+1)^0,w,c
  8392  006284  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8393  006286  0E00               	movlw	0
  8394  006288  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8395  00628A  0E00               	movlw	0
  8396  00628C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8397  00628E  5015               	movf	(___flmul@a+2)^0,w,c
  8398  006290  0211               	mulwf	(___flmul@b+2)^0,c
  8399  006292  CFF3 F026          	movff	prodl,___flmul@temp
  8400  006296  CFF4 F027          	movff	prodh,___flmul@temp+1
  8401  00629A  5026               	movf	___flmul@temp^0,w,c
  8402  00629C  6E17               	movwf	??___flmul^0,c
  8403  00629E  5027               	movf	(___flmul@temp+1)^0,w,c
  8404  0062A0  6E18               	movwf	(??___flmul+1)^0,c
  8405  0062A2  6A19               	clrf	(??___flmul+2)^0,c
  8406  0062A4  6A1A               	clrf	(??___flmul+3)^0,c
  8407  0062A6  C019  F01A         	movff	??___flmul+2,??___flmul+3
  8408  0062AA  C018  F019         	movff	??___flmul+1,??___flmul+2
  8409  0062AE  C017  F018         	movff	??___flmul,??___flmul+1
  8410  0062B2  6A17               	clrf	??___flmul^0,c
  8411  0062B4  5017               	movf	??___flmul^0,w,c
  8412  0062B6  2622               	addwf	___flmul@prod^0,f,c
  8413  0062B8  5018               	movf	(??___flmul+1)^0,w,c
  8414  0062BA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8415  0062BC  5019               	movf	(??___flmul+2)^0,w,c
  8416  0062BE  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8417  0062C0  501A               	movf	(??___flmul+3)^0,w,c
  8418  0062C2  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8419  0062C4  C01C  F017         	movff	___flmul@grs,??___flmul
  8420  0062C8  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  8421  0062CC  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  8422  0062D0  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  8423  0062D4  0E19               	movlw	25
  8424  0062D6  EF72  F031         	goto	u3620
  8425  0062DA                     u3625:
  8426  0062DA  90D8               	bcf	status,0,c
  8427  0062DC  321A               	rrcf	(??___flmul+3)^0,f,c
  8428  0062DE  3219               	rrcf	(??___flmul+2)^0,f,c
  8429  0062E0  3218               	rrcf	(??___flmul+1)^0,f,c
  8430  0062E2  3217               	rrcf	??___flmul^0,f,c
  8431  0062E4                     u3620:
  8432  0062E4  2EE8               	decfsz	wreg,f,c
  8433  0062E6  EF6D  F031         	goto	u3625
  8434  0062EA  5017               	movf	??___flmul^0,w,c
  8435  0062EC  2622               	addwf	___flmul@prod^0,f,c
  8436  0062EE  5018               	movf	(??___flmul+1)^0,w,c
  8437  0062F0  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8438  0062F2  5019               	movf	(??___flmul+2)^0,w,c
  8439  0062F4  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8440  0062F6  501A               	movf	(??___flmul+3)^0,w,c
  8441  0062F8  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8442  0062FA  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8443  0062FE  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8444  006302  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8445  006306  6A1C               	clrf	___flmul@grs^0,c
  8446  006308  5020               	movf	___flmul@aexp^0,w,c
  8447  00630A  C021  F017         	movff	___flmul@bexp,??___flmul
  8448  00630E  6A18               	clrf	(??___flmul+1)^0,c
  8449  006310  2617               	addwf	??___flmul^0,f,c
  8450  006312  0E00               	movlw	0
  8451  006314  2218               	addwfc	(??___flmul+1)^0,f,c
  8452  006316  0E82               	movlw	130
  8453  006318  2417               	addwf	??___flmul^0,w,c
  8454  00631A  6E26               	movwf	___flmul@temp^0,c
  8455  00631C  0EFF               	movlw	255
  8456  00631E  2018               	addwfc	(??___flmul+1)^0,w,c
  8457  006320  6E27               	movwf	(___flmul@temp+1)^0,c
  8458  006322  EFA8  F031         	goto	l3546
  8459  006326                     l3540:
  8460  006326  90D8               	bcf	status,0,c
  8461  006328  3622               	rlcf	___flmul@prod^0,f,c
  8462  00632A  3623               	rlcf	(___flmul@prod+1)^0,f,c
  8463  00632C  3624               	rlcf	(___flmul@prod+2)^0,f,c
  8464  00632E  3625               	rlcf	(___flmul@prod+3)^0,f,c
  8465  006330  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  8466  006332  EF9D  F031         	goto	u3631
  8467  006336  EF9F  F031         	goto	u3630
  8468  00633A                     u3631:
  8469  00633A  EFA0  F031         	goto	l833
  8470  00633E                     u3630:
  8471  00633E  8022               	bsf	___flmul@prod^0,0,c
  8472  006340                     l833:
  8473  006340  90D8               	bcf	status,0,c
  8474  006342  361C               	rlcf	___flmul@grs^0,f,c
  8475  006344  361D               	rlcf	(___flmul@grs+1)^0,f,c
  8476  006346  361E               	rlcf	(___flmul@grs+2)^0,f,c
  8477  006348  361F               	rlcf	(___flmul@grs+3)^0,f,c
  8478  00634A  0626               	decf	___flmul@temp^0,f,c
  8479  00634C  A0D8               	btfss	status,0,c
  8480  00634E  0627               	decf	(___flmul@temp+1)^0,f,c
  8481  006350                     l3546:
  8482  006350  AE24               	btfss	(___flmul@prod+2)^0,7,c
  8483  006352  EFAD  F031         	goto	u3641
  8484  006356  EFAF  F031         	goto	u3640
  8485  00635A                     u3641:
  8486  00635A  EF93  F031         	goto	l3540
  8487  00635E                     u3640:
  8488  00635E  0E00               	movlw	0
  8489  006360  6E20               	movwf	___flmul@aexp^0,c
  8490  006362  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  8491  006364  EFB6  F031         	goto	u3651
  8492  006368  EFB8  F031         	goto	u3650
  8493  00636C                     u3651:
  8494  00636C  EFDC  F031         	goto	l835
  8495  006370                     u3650:
  8496  006370  0EFF               	movlw	255
  8497  006372  141C               	andwf	___flmul@grs^0,w,c
  8498  006374  6E17               	movwf	??___flmul^0,c
  8499  006376  0EFF               	movlw	255
  8500  006378  141D               	andwf	(___flmul@grs+1)^0,w,c
  8501  00637A  6E18               	movwf	(??___flmul+1)^0,c
  8502  00637C  0EFF               	movlw	255
  8503  00637E  141E               	andwf	(___flmul@grs+2)^0,w,c
  8504  006380  6E19               	movwf	(??___flmul+2)^0,c
  8505  006382  0E7F               	movlw	127
  8506  006384  141F               	andwf	(___flmul@grs+3)^0,w,c
  8507  006386  6E1A               	movwf	(??___flmul+3)^0,c
  8508  006388  5017               	movf	??___flmul^0,w,c
  8509  00638A  1018               	iorwf	(??___flmul+1)^0,w,c
  8510  00638C  1019               	iorwf	(??___flmul+2)^0,w,c
  8511  00638E  101A               	iorwf	(??___flmul+3)^0,w,c
  8512  006390  B4D8               	btfsc	status,2,c
  8513  006392  EFCD  F031         	goto	u3661
  8514  006396  EFCF  F031         	goto	u3660
  8515  00639A                     u3661:
  8516  00639A  EFD3  F031         	goto	l836
  8517  00639E                     u3660:
  8518  00639E                     l3554:
  8519  00639E  0E01               	movlw	1
  8520  0063A0  6E20               	movwf	___flmul@aexp^0,c
  8521  0063A2  EFDC  F031         	goto	l835
  8522  0063A6                     l836:
  8523  0063A6  A022               	btfss	___flmul@prod^0,0,c
  8524  0063A8  EFD8  F031         	goto	u3671
  8525  0063AC  EFDA  F031         	goto	u3670
  8526  0063B0                     u3671:
  8527  0063B0  EFDC  F031         	goto	l835
  8528  0063B4                     u3670:
  8529  0063B4  EFCF  F031         	goto	l3554
  8530  0063B8                     l835:
  8531  0063B8  5020               	movf	___flmul@aexp^0,w,c
  8532  0063BA  B4D8               	btfsc	status,2,c
  8533  0063BC  EFE2  F031         	goto	u3681
  8534  0063C0  EFE4  F031         	goto	u3680
  8535  0063C4                     u3681:
  8536  0063C4  EF08  F032         	goto	l3566
  8537  0063C8                     u3680:
  8538  0063C8  0E01               	movlw	1
  8539  0063CA  2622               	addwf	___flmul@prod^0,f,c
  8540  0063CC  0E00               	movlw	0
  8541  0063CE  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8542  0063D0  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8543  0063D2  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8544  0063D4  A025               	btfss	(___flmul@prod+3)^0,0,c
  8545  0063D6  EFEF  F031         	goto	u3691
  8546  0063DA  EFF1  F031         	goto	u3690
  8547  0063DE                     u3691:
  8548  0063DE  EF08  F032         	goto	l3566
  8549  0063E2                     u3690:
  8550  0063E2  C022  F017         	movff	___flmul@prod,??___flmul
  8551  0063E6  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  8552  0063EA  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  8553  0063EE  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  8554  0063F2  341A               	rlcf	(??___flmul+3)^0,w,c
  8555  0063F4  321A               	rrcf	(??___flmul+3)^0,f,c
  8556  0063F6  3219               	rrcf	(??___flmul+2)^0,f,c
  8557  0063F8  3218               	rrcf	(??___flmul+1)^0,f,c
  8558  0063FA  3217               	rrcf	??___flmul^0,f,c
  8559  0063FC  C017  F022         	movff	??___flmul,___flmul@prod
  8560  006400  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  8561  006404  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  8562  006408  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  8563  00640C  4A26               	infsnz	___flmul@temp^0,f,c
  8564  00640E  2A27               	incf	(___flmul@temp+1)^0,f,c
  8565  006410                     l3566:
  8566  006410  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  8567  006412  EF13  F032         	goto	u3701
  8568  006416  5027               	movf	(___flmul@temp+1)^0,w,c
  8569  006418  E108               	bnz	u3700
  8570  00641A  2826               	incf	___flmul@temp^0,w,c
  8571  00641C  A0D8               	btfss	status,0,c
  8572  00641E  EF13  F032         	goto	u3701
  8573  006422  EF15  F032         	goto	u3700
  8574  006426                     u3701:
  8575  006426  EF1F  F032         	goto	l3570
  8576  00642A                     u3700:
  8577  00642A  0E00               	movlw	0
  8578  00642C  6E22               	movwf	___flmul@prod^0,c
  8579  00642E  0E00               	movlw	0
  8580  006430  6E23               	movwf	(___flmul@prod+1)^0,c
  8581  006432  0E80               	movlw	128
  8582  006434  6E24               	movwf	(___flmul@prod+2)^0,c
  8583  006436  0E7F               	movlw	127
  8584  006438  6E25               	movwf	(___flmul@prod+3)^0,c
  8585  00643A  EF4D  F032         	goto	l3582
  8586  00643E                     l3570:
  8587  00643E  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  8588  006440  EF2C  F032         	goto	u3710
  8589  006444  5027               	movf	(___flmul@temp+1)^0,w,c
  8590  006446  E106               	bnz	u3711
  8591  006448  0426               	decf	___flmul@temp^0,w,c
  8592  00644A  B0D8               	btfsc	status,0,c
  8593  00644C  EF2A  F032         	goto	u3711
  8594  006450  EF2C  F032         	goto	u3710
  8595  006454                     u3711:
  8596  006454  EF38  F032         	goto	l843
  8597  006458                     u3710:
  8598  006458  0E00               	movlw	0
  8599  00645A  6E22               	movwf	___flmul@prod^0,c
  8600  00645C  0E00               	movlw	0
  8601  00645E  6E23               	movwf	(___flmul@prod+1)^0,c
  8602  006460  0E00               	movlw	0
  8603  006462  6E24               	movwf	(___flmul@prod+2)^0,c
  8604  006464  0E00               	movlw	0
  8605  006466  6E25               	movwf	(___flmul@prod+3)^0,c
  8606  006468  0E00               	movlw	0
  8607  00646A  6E1B               	movwf	___flmul@sign^0,c
  8608  00646C  EF4D  F032         	goto	l3582
  8609  006470                     l843:
  8610  006470  C026  F021         	movff	___flmul@temp,___flmul@bexp
  8611  006474  0EFF               	movlw	255
  8612  006476  1622               	andwf	___flmul@prod^0,f,c
  8613  006478  0EFF               	movlw	255
  8614  00647A  1623               	andwf	(___flmul@prod+1)^0,f,c
  8615  00647C  0E7F               	movlw	127
  8616  00647E  1624               	andwf	(___flmul@prod+2)^0,f,c
  8617  006480  0E00               	movlw	0
  8618  006482  1625               	andwf	(___flmul@prod+3)^0,f,c
  8619  006484  A021               	btfss	___flmul@bexp^0,0,c
  8620  006486  EF47  F032         	goto	u3721
  8621  00648A  EF49  F032         	goto	u3720
  8622  00648E                     u3721:
  8623  00648E  EF4A  F032         	goto	l3580
  8624  006492                     u3720:
  8625  006492  8E24               	bsf	(___flmul@prod+2)^0,7,c
  8626  006494                     l3580:
  8627  006494  90D8               	bcf	status,0,c
  8628  006496  3021               	rrcf	___flmul@bexp^0,w,c
  8629  006498  6E25               	movwf	(___flmul@prod+3)^0,c
  8630  00649A                     l3582:
  8631  00649A  501B               	movf	___flmul@sign^0,w,c
  8632  00649C  1225               	iorwf	(___flmul@prod+3)^0,f,c
  8633  00649E  C022  F00F         	movff	___flmul@prod,?___flmul
  8634  0064A2  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  8635  0064A6  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  8636  0064AA  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  8637  0064AE                     l830:
  8638  0064AE  0012               	return		;funcret
  8639  0064B0                     __end_of___flmul:
  8640                           	callstack 0
  8641                           
  8642 ;; *************** function ___flge *****************
  8643 ;; Defined at:
  8644 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\flge.c"
  8645 ;; Parameters:    Size  Location     Type
  8646 ;;  ff1             4   55[COMRAM] unsigned char 
  8647 ;;  ff2             4   59[COMRAM] unsigned char 
  8648 ;; Auto vars:     Size  Location     Type
  8649 ;;		None
  8650 ;; Return value:  Size  Location     Type
  8651 ;;		None               void
  8652 ;; Registers used:
  8653 ;;		wreg, status,2, status,0
  8654 ;; Tracked objects:
  8655 ;;		On entry : 0/0
  8656 ;;		On exit  : 0/0
  8657 ;;		Unchanged: 0/0
  8658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8659 ;;      Params:         8       0       0       0       0       0       0
  8660 ;;      Locals:         0       0       0       0       0       0       0
  8661 ;;      Temps:          4       0       0       0       0       0       0
  8662 ;;      Totals:        12       0       0       0       0       0       0
  8663 ;;Total ram usage:       12 bytes
  8664 ;; Hardware stack levels used:    1
  8665 ;; This function calls:
  8666 ;;		Nothing
  8667 ;; This function is called by:
  8668 ;;		_encher_tanque
  8669 ;;		_efgtoa
  8670 ;; This function uses a non-reentrant model
  8671 ;;
  8672                           
  8673                           	psect	text26
  8674  004FDA                     __ptext26:
  8675                           	callstack 0
  8676  004FDA                     ___flge:
  8677                           	callstack 25
  8678  004FDA  0E00               	movlw	0
  8679  004FDC  1438               	andwf	___flge@ff1^0,w,c
  8680  004FDE  6E40               	movwf	??___flge^0,c
  8681  004FE0  0E00               	movlw	0
  8682  004FE2  1439               	andwf	(___flge@ff1+1)^0,w,c
  8683  004FE4  6E41               	movwf	(??___flge+1)^0,c
  8684  004FE6  0E80               	movlw	128
  8685  004FE8  143A               	andwf	(___flge@ff1+2)^0,w,c
  8686  004FEA  6E42               	movwf	(??___flge+2)^0,c
  8687  004FEC  0E7F               	movlw	127
  8688  004FEE  143B               	andwf	(___flge@ff1+3)^0,w,c
  8689  004FF0  6E43               	movwf	(??___flge+3)^0,c
  8690  004FF2  5040               	movf	??___flge^0,w,c
  8691  004FF4  1041               	iorwf	(??___flge+1)^0,w,c
  8692  004FF6  1042               	iorwf	(??___flge+2)^0,w,c
  8693  004FF8  1043               	iorwf	(??___flge+3)^0,w,c
  8694  004FFA  A4D8               	btfss	status,2,c
  8695  004FFC  EF02  F028         	goto	u3881
  8696  005000  EF04  F028         	goto	u3880
  8697  005004                     u3881:
  8698  005004  EF0C  F028         	goto	l3694
  8699  005008                     u3880:
  8700  005008  0E00               	movlw	0
  8701  00500A  6E38               	movwf	___flge@ff1^0,c
  8702  00500C  0E00               	movlw	0
  8703  00500E  6E39               	movwf	(___flge@ff1+1)^0,c
  8704  005010  0E00               	movlw	0
  8705  005012  6E3A               	movwf	(___flge@ff1+2)^0,c
  8706  005014  0E00               	movlw	0
  8707  005016  6E3B               	movwf	(___flge@ff1+3)^0,c
  8708  005018                     l3694:
  8709  005018  0E00               	movlw	0
  8710  00501A  143C               	andwf	___flge@ff2^0,w,c
  8711  00501C  6E40               	movwf	??___flge^0,c
  8712  00501E  0E00               	movlw	0
  8713  005020  143D               	andwf	(___flge@ff2+1)^0,w,c
  8714  005022  6E41               	movwf	(??___flge+1)^0,c
  8715  005024  0E80               	movlw	128
  8716  005026  143E               	andwf	(___flge@ff2+2)^0,w,c
  8717  005028  6E42               	movwf	(??___flge+2)^0,c
  8718  00502A  0E7F               	movlw	127
  8719  00502C  143F               	andwf	(___flge@ff2+3)^0,w,c
  8720  00502E  6E43               	movwf	(??___flge+3)^0,c
  8721  005030  5040               	movf	??___flge^0,w,c
  8722  005032  1041               	iorwf	(??___flge+1)^0,w,c
  8723  005034  1042               	iorwf	(??___flge+2)^0,w,c
  8724  005036  1043               	iorwf	(??___flge+3)^0,w,c
  8725  005038  A4D8               	btfss	status,2,c
  8726  00503A  EF21  F028         	goto	u3891
  8727  00503E  EF23  F028         	goto	u3890
  8728  005042                     u3891:
  8729  005042  EF2B  F028         	goto	l3698
  8730  005046                     u3890:
  8731  005046  0E00               	movlw	0
  8732  005048  6E3C               	movwf	___flge@ff2^0,c
  8733  00504A  0E00               	movlw	0
  8734  00504C  6E3D               	movwf	(___flge@ff2+1)^0,c
  8735  00504E  0E00               	movlw	0
  8736  005050  6E3E               	movwf	(___flge@ff2+2)^0,c
  8737  005052  0E00               	movlw	0
  8738  005054  6E3F               	movwf	(___flge@ff2+3)^0,c
  8739  005056                     l3698:
  8740  005056  AE3B               	btfss	(___flge@ff1+3)^0,7,c
  8741  005058  EF30  F028         	goto	u3901
  8742  00505C  EF32  F028         	goto	u3900
  8743  005060                     u3901:
  8744  005060  EF3B  F028         	goto	l3702
  8745  005064                     u3900:
  8746  005064  6C38               	negf	___flge@ff1^0,c
  8747  005066  1E39               	comf	(___flge@ff1+1)^0,f,c
  8748  005068  B0D8               	btfsc	status,0,c
  8749  00506A  2A39               	incf	(___flge@ff1+1)^0,f,c
  8750  00506C  1E3A               	comf	(___flge@ff1+2)^0,f,c
  8751  00506E  B0D8               	btfsc	status,0,c
  8752  005070  2A3A               	incf	(___flge@ff1+2)^0,f,c
  8753  005072  0E80               	movlw	128
  8754  005074  563B               	subfwb	(___flge@ff1+3)^0,f,c
  8755  005076                     l3702:
  8756  005076  AE3F               	btfss	(___flge@ff2+3)^0,7,c
  8757  005078  EF40  F028         	goto	u3911
  8758  00507C  EF42  F028         	goto	u3910
  8759  005080                     u3911:
  8760  005080  EF4B  F028         	goto	l477
  8761  005084                     u3910:
  8762  005084  6C3C               	negf	___flge@ff2^0,c
  8763  005086  1E3D               	comf	(___flge@ff2+1)^0,f,c
  8764  005088  B0D8               	btfsc	status,0,c
  8765  00508A  2A3D               	incf	(___flge@ff2+1)^0,f,c
  8766  00508C  1E3E               	comf	(___flge@ff2+2)^0,f,c
  8767  00508E  B0D8               	btfsc	status,0,c
  8768  005090  2A3E               	incf	(___flge@ff2+2)^0,f,c
  8769  005092  0E80               	movlw	128
  8770  005094  563F               	subfwb	(___flge@ff2+3)^0,f,c
  8771  005096                     l477:
  8772  005096  0E00               	movlw	0
  8773  005098  1A38               	xorwf	___flge@ff1^0,f,c
  8774  00509A  0E00               	movlw	0
  8775  00509C  1A39               	xorwf	(___flge@ff1+1)^0,f,c
  8776  00509E  0E00               	movlw	0
  8777  0050A0  1A3A               	xorwf	(___flge@ff1+2)^0,f,c
  8778  0050A2  0E80               	movlw	128
  8779  0050A4  1A3B               	xorwf	(___flge@ff1+3)^0,f,c
  8780  0050A6  0E00               	movlw	0
  8781  0050A8  1A3C               	xorwf	___flge@ff2^0,f,c
  8782  0050AA  0E00               	movlw	0
  8783  0050AC  1A3D               	xorwf	(___flge@ff2+1)^0,f,c
  8784  0050AE  0E00               	movlw	0
  8785  0050B0  1A3E               	xorwf	(___flge@ff2+2)^0,f,c
  8786  0050B2  0E80               	movlw	128
  8787  0050B4  1A3F               	xorwf	(___flge@ff2+3)^0,f,c
  8788  0050B6  503C               	movf	___flge@ff2^0,w,c
  8789  0050B8  5C38               	subwf	___flge@ff1^0,w,c
  8790  0050BA  503D               	movf	(___flge@ff2+1)^0,w,c
  8791  0050BC  5839               	subwfb	(___flge@ff1+1)^0,w,c
  8792  0050BE  503E               	movf	(___flge@ff2+2)^0,w,c
  8793  0050C0  583A               	subwfb	(___flge@ff1+2)^0,w,c
  8794  0050C2  503F               	movf	(___flge@ff2+3)^0,w,c
  8795  0050C4  583B               	subwfb	(___flge@ff1+3)^0,w,c
  8796  0050C6  B0D8               	btfsc	status,0,c
  8797  0050C8  EF68  F028         	goto	u3921
  8798  0050CC  EF6A  F028         	goto	u3920
  8799  0050D0                     u3921:
  8800  0050D0  EF6D  F028         	goto	l3708
  8801  0050D4                     u3920:
  8802  0050D4  90D8               	bcf	status,0,c
  8803  0050D6  EF6E  F028         	goto	l482
  8804  0050DA                     l3708:
  8805  0050DA  80D8               	bsf	status,0,c
  8806  0050DC                     l482:
  8807  0050DC  0012               	return		;funcret
  8808  0050DE                     __end_of___flge:
  8809                           	callstack 0
  8810                           
  8811 ;; *************** function ___fleq *****************
  8812 ;; Defined at:
  8813 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\fleq.c"
  8814 ;; Parameters:    Size  Location     Type
  8815 ;;  ff1             4    0[COMRAM] unsigned char 
  8816 ;;  ff2             4    4[COMRAM] unsigned char 
  8817 ;; Auto vars:     Size  Location     Type
  8818 ;;		None
  8819 ;; Return value:  Size  Location     Type
  8820 ;;		None               void
  8821 ;; Registers used:
  8822 ;;		wreg, status,2, status,0
  8823 ;; Tracked objects:
  8824 ;;		On entry : 0/0
  8825 ;;		On exit  : 0/0
  8826 ;;		Unchanged: 0/0
  8827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8828 ;;      Params:         8       0       0       0       0       0       0
  8829 ;;      Locals:         0       0       0       0       0       0       0
  8830 ;;      Temps:          4       0       0       0       0       0       0
  8831 ;;      Totals:        12       0       0       0       0       0       0
  8832 ;;Total ram usage:       12 bytes
  8833 ;; Hardware stack levels used:    1
  8834 ;; This function calls:
  8835 ;;		Nothing
  8836 ;; This function is called by:
  8837 ;;		_efgtoa
  8838 ;; This function uses a non-reentrant model
  8839 ;;
  8840                           
  8841                           	psect	text27
  8842  004972                     __ptext27:
  8843                           	callstack 0
  8844  004972                     ___fleq:
  8845                           	callstack 25
  8846  004972  0E00               	movlw	0
  8847  004974  1401               	andwf	___fleq@ff1^0,w,c
  8848  004976  6E09               	movwf	??___fleq^0,c
  8849  004978  0E00               	movlw	0
  8850  00497A  1402               	andwf	(___fleq@ff1+1)^0,w,c
  8851  00497C  6E0A               	movwf	(??___fleq+1)^0,c
  8852  00497E  0E80               	movlw	128
  8853  004980  1403               	andwf	(___fleq@ff1+2)^0,w,c
  8854  004982  6E0B               	movwf	(??___fleq+2)^0,c
  8855  004984  0E7F               	movlw	127
  8856  004986  1404               	andwf	(___fleq@ff1+3)^0,w,c
  8857  004988  6E0C               	movwf	(??___fleq+3)^0,c
  8858  00498A  5009               	movf	??___fleq^0,w,c
  8859  00498C  100A               	iorwf	(??___fleq+1)^0,w,c
  8860  00498E  100B               	iorwf	(??___fleq+2)^0,w,c
  8861  004990  100C               	iorwf	(??___fleq+3)^0,w,c
  8862  004992  A4D8               	btfss	status,2,c
  8863  004994  EFCE  F024         	goto	u3851
  8864  004998  EFD0  F024         	goto	u3850
  8865  00499C                     u3851:
  8866  00499C  EFD8  F024         	goto	l3678
  8867  0049A0                     u3850:
  8868  0049A0  0E00               	movlw	0
  8869  0049A2  6E01               	movwf	___fleq@ff1^0,c
  8870  0049A4  0E00               	movlw	0
  8871  0049A6  6E02               	movwf	(___fleq@ff1+1)^0,c
  8872  0049A8  0E00               	movlw	0
  8873  0049AA  6E03               	movwf	(___fleq@ff1+2)^0,c
  8874  0049AC  0E00               	movlw	0
  8875  0049AE  6E04               	movwf	(___fleq@ff1+3)^0,c
  8876  0049B0                     l3678:
  8877  0049B0  0E00               	movlw	0
  8878  0049B2  1405               	andwf	___fleq@ff2^0,w,c
  8879  0049B4  6E09               	movwf	??___fleq^0,c
  8880  0049B6  0E00               	movlw	0
  8881  0049B8  1406               	andwf	(___fleq@ff2+1)^0,w,c
  8882  0049BA  6E0A               	movwf	(??___fleq+1)^0,c
  8883  0049BC  0E80               	movlw	128
  8884  0049BE  1407               	andwf	(___fleq@ff2+2)^0,w,c
  8885  0049C0  6E0B               	movwf	(??___fleq+2)^0,c
  8886  0049C2  0E7F               	movlw	127
  8887  0049C4  1408               	andwf	(___fleq@ff2+3)^0,w,c
  8888  0049C6  6E0C               	movwf	(??___fleq+3)^0,c
  8889  0049C8  5009               	movf	??___fleq^0,w,c
  8890  0049CA  100A               	iorwf	(??___fleq+1)^0,w,c
  8891  0049CC  100B               	iorwf	(??___fleq+2)^0,w,c
  8892  0049CE  100C               	iorwf	(??___fleq+3)^0,w,c
  8893  0049D0  A4D8               	btfss	status,2,c
  8894  0049D2  EFED  F024         	goto	u3861
  8895  0049D6  EFEF  F024         	goto	u3860
  8896  0049DA                     u3861:
  8897  0049DA  EFF7  F024         	goto	l3682
  8898  0049DE                     u3860:
  8899  0049DE  0E00               	movlw	0
  8900  0049E0  6E05               	movwf	___fleq@ff2^0,c
  8901  0049E2  0E00               	movlw	0
  8902  0049E4  6E06               	movwf	(___fleq@ff2+1)^0,c
  8903  0049E6  0E00               	movlw	0
  8904  0049E8  6E07               	movwf	(___fleq@ff2+2)^0,c
  8905  0049EA  0E00               	movlw	0
  8906  0049EC  6E08               	movwf	(___fleq@ff2+3)^0,c
  8907  0049EE                     l3682:
  8908  0049EE  5005               	movf	___fleq@ff2^0,w,c
  8909  0049F0  1801               	xorwf	___fleq@ff1^0,w,c
  8910  0049F2  E10F               	bnz	u3870
  8911  0049F4  5006               	movf	(___fleq@ff2+1)^0,w,c
  8912  0049F6  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  8913  0049F8  E10C               	bnz	u3870
  8914  0049FA  5007               	movf	(___fleq@ff2+2)^0,w,c
  8915  0049FC  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  8916  0049FE  E109               	bnz	u3870
  8917  004A00  5008               	movf	(___fleq@ff2+3)^0,w,c
  8918  004A02  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  8919  004A04  B4D8               	btfsc	status,2,c
  8920  004A06  EF07  F025         	goto	u3871
  8921  004A0A  EF09  F025         	goto	u3870
  8922  004A0E                     u3871:
  8923  004A0E  EF0C  F025         	goto	l3686
  8924  004A12                     u3870:
  8925  004A12  90D8               	bcf	status,0,c
  8926  004A14  EF0D  F025         	goto	l471
  8927  004A18                     l3686:
  8928  004A18  80D8               	bsf	status,0,c
  8929  004A1A                     l471:
  8930  004A1A  0012               	return		;funcret
  8931  004A1C                     __end_of___fleq:
  8932                           	callstack 0
  8933                           
  8934 ;; *************** function ___fldiv *****************
  8935 ;; Defined at:
  8936 ;;		line 11 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
  8937 ;; Parameters:    Size  Location     Type
  8938 ;;  b               4   55[COMRAM] unsigned char 
  8939 ;;  a               4   59[COMRAM] unsigned char 
  8940 ;; Auto vars:     Size  Location     Type
  8941 ;;  grs             4   74[COMRAM] unsigned long 
  8942 ;;  rem             4   67[COMRAM] unsigned long 
  8943 ;;  new_exp         2   72[COMRAM] short 
  8944 ;;  aexp            1   79[COMRAM] unsigned char 
  8945 ;;  bexp            1   78[COMRAM] unsigned char 
  8946 ;;  sign            1   71[COMRAM] unsigned char 
  8947 ;; Return value:  Size  Location     Type
  8948 ;;                  4   55[COMRAM] unsigned char 
  8949 ;; Registers used:
  8950 ;;		wreg, status,2, status,0
  8951 ;; Tracked objects:
  8952 ;;		On entry : 0/0
  8953 ;;		On exit  : 0/0
  8954 ;;		Unchanged: 0/0
  8955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8956 ;;      Params:         8       0       0       0       0       0       0
  8957 ;;      Locals:        13       0       0       0       0       0       0
  8958 ;;      Temps:          4       0       0       0       0       0       0
  8959 ;;      Totals:        25       0       0       0       0       0       0
  8960 ;;Total ram usage:       25 bytes
  8961 ;; Hardware stack levels used:    1
  8962 ;; This function calls:
  8963 ;;		Nothing
  8964 ;; This function is called by:
  8965 ;;		_encher_tanque
  8966 ;;		_esvaziar_tanque
  8967 ;;		_efgtoa
  8968 ;; This function uses a non-reentrant model
  8969 ;;
  8970                           
  8971                           	psect	text28
  8972  005CEC                     __ptext28:
  8973                           	callstack 0
  8974  005CEC                     ___fldiv:
  8975                           	callstack 25
  8976  005CEC  503B               	movf	(___fldiv@b+3)^0,w,c
  8977  005CEE  0B80               	andlw	128
  8978  005CF0  6E48               	movwf	___fldiv@sign^0,c
  8979  005CF2  503B               	movf	(___fldiv@b+3)^0,w,c
  8980  005CF4  243B               	addwf	(___fldiv@b+3)^0,w,c
  8981  005CF6  6E4F               	movwf	___fldiv@bexp^0,c
  8982  005CF8  AE3A               	btfss	(___fldiv@b+2)^0,7,c
  8983  005CFA  EF81  F02E         	goto	u3311
  8984  005CFE  EF83  F02E         	goto	u3310
  8985  005D02                     u3311:
  8986  005D02  EF84  F02E         	goto	l3326
  8987  005D06                     u3310:
  8988  005D06  804F               	bsf	___fldiv@bexp^0,0,c
  8989  005D08                     l3326:
  8990  005D08  504F               	movf	___fldiv@bexp^0,w,c
  8991  005D0A  B4D8               	btfsc	status,2,c
  8992  005D0C  EF8A  F02E         	goto	u3321
  8993  005D10  EF8C  F02E         	goto	u3320
  8994  005D14                     u3321:
  8995  005D14  EFA1  F02E         	goto	l3336
  8996  005D18                     u3320:
  8997  005D18  284F               	incf	___fldiv@bexp^0,w,c
  8998  005D1A  A4D8               	btfss	status,2,c
  8999  005D1C  EF92  F02E         	goto	u3331
  9000  005D20  EF94  F02E         	goto	u3330
  9001  005D24                     u3331:
  9002  005D24  EF9C  F02E         	goto	l3332
  9003  005D28                     u3330:
  9004  005D28  0E00               	movlw	0
  9005  005D2A  6E38               	movwf	___fldiv@b^0,c
  9006  005D2C  0E00               	movlw	0
  9007  005D2E  6E39               	movwf	(___fldiv@b+1)^0,c
  9008  005D30  0E00               	movlw	0
  9009  005D32  6E3A               	movwf	(___fldiv@b+2)^0,c
  9010  005D34  0E00               	movlw	0
  9011  005D36  6E3B               	movwf	(___fldiv@b+3)^0,c
  9012  005D38                     l3332:
  9013  005D38  8E3A               	bsf	(___fldiv@b+2)^0,7,c
  9014  005D3A  0E00               	movlw	0
  9015  005D3C  6E3B               	movwf	(___fldiv@b+3)^0,c
  9016  005D3E  EFA9  F02E         	goto	l3338
  9017  005D42                     l3336:
  9018  005D42  0E00               	movlw	0
  9019  005D44  6E38               	movwf	___fldiv@b^0,c
  9020  005D46  0E00               	movlw	0
  9021  005D48  6E39               	movwf	(___fldiv@b+1)^0,c
  9022  005D4A  0E00               	movlw	0
  9023  005D4C  6E3A               	movwf	(___fldiv@b+2)^0,c
  9024  005D4E  0E00               	movlw	0
  9025  005D50  6E3B               	movwf	(___fldiv@b+3)^0,c
  9026  005D52                     l3338:
  9027  005D52  503F               	movf	(___fldiv@a+3)^0,w,c
  9028  005D54  0B80               	andlw	128
  9029  005D56  1A48               	xorwf	___fldiv@sign^0,f,c
  9030  005D58  503F               	movf	(___fldiv@a+3)^0,w,c
  9031  005D5A  243F               	addwf	(___fldiv@a+3)^0,w,c
  9032  005D5C  6E50               	movwf	___fldiv@aexp^0,c
  9033  005D5E  AE3E               	btfss	(___fldiv@a+2)^0,7,c
  9034  005D60  EFB4  F02E         	goto	u3341
  9035  005D64  EFB6  F02E         	goto	u3340
  9036  005D68                     u3341:
  9037  005D68  EFB7  F02E         	goto	l3346
  9038  005D6C                     u3340:
  9039  005D6C  8050               	bsf	___fldiv@aexp^0,0,c
  9040  005D6E                     l3346:
  9041  005D6E  5050               	movf	___fldiv@aexp^0,w,c
  9042  005D70  B4D8               	btfsc	status,2,c
  9043  005D72  EFBD  F02E         	goto	u3351
  9044  005D76  EFBF  F02E         	goto	u3350
  9045  005D7A                     u3351:
  9046  005D7A  EFD4  F02E         	goto	l3356
  9047  005D7E                     u3350:
  9048  005D7E  2850               	incf	___fldiv@aexp^0,w,c
  9049  005D80  A4D8               	btfss	status,2,c
  9050  005D82  EFC5  F02E         	goto	u3361
  9051  005D86  EFC7  F02E         	goto	u3360
  9052  005D8A                     u3361:
  9053  005D8A  EFCF  F02E         	goto	l3352
  9054  005D8E                     u3360:
  9055  005D8E  0E00               	movlw	0
  9056  005D90  6E3C               	movwf	___fldiv@a^0,c
  9057  005D92  0E00               	movlw	0
  9058  005D94  6E3D               	movwf	(___fldiv@a+1)^0,c
  9059  005D96  0E00               	movlw	0
  9060  005D98  6E3E               	movwf	(___fldiv@a+2)^0,c
  9061  005D9A  0E00               	movlw	0
  9062  005D9C  6E3F               	movwf	(___fldiv@a+3)^0,c
  9063  005D9E                     l3352:
  9064  005D9E  8E3E               	bsf	(___fldiv@a+2)^0,7,c
  9065  005DA0  0E00               	movlw	0
  9066  005DA2  6E3F               	movwf	(___fldiv@a+3)^0,c
  9067  005DA4  EFDC  F02E         	goto	l3358
  9068  005DA8                     l3356:
  9069  005DA8  0E00               	movlw	0
  9070  005DAA  6E3C               	movwf	___fldiv@a^0,c
  9071  005DAC  0E00               	movlw	0
  9072  005DAE  6E3D               	movwf	(___fldiv@a+1)^0,c
  9073  005DB0  0E00               	movlw	0
  9074  005DB2  6E3E               	movwf	(___fldiv@a+2)^0,c
  9075  005DB4  0E00               	movlw	0
  9076  005DB6  6E3F               	movwf	(___fldiv@a+3)^0,c
  9077  005DB8                     l3358:
  9078  005DB8  503C               	movf	___fldiv@a^0,w,c
  9079  005DBA  103D               	iorwf	(___fldiv@a+1)^0,w,c
  9080  005DBC  103E               	iorwf	(___fldiv@a+2)^0,w,c
  9081  005DBE  103F               	iorwf	(___fldiv@a+3)^0,w,c
  9082  005DC0  A4D8               	btfss	status,2,c
  9083  005DC2  EFE5  F02E         	goto	u3371
  9084  005DC6  EFE7  F02E         	goto	u3370
  9085  005DCA                     u3371:
  9086  005DCA  EFFF  F02E         	goto	l3370
  9087  005DCE                     u3370:
  9088  005DCE  0E00               	movlw	0
  9089  005DD0  6E38               	movwf	___fldiv@b^0,c
  9090  005DD2  0E00               	movlw	0
  9091  005DD4  6E39               	movwf	(___fldiv@b+1)^0,c
  9092  005DD6  0E00               	movlw	0
  9093  005DD8  6E3A               	movwf	(___fldiv@b+2)^0,c
  9094  005DDA  0E00               	movlw	0
  9095  005DDC  6E3B               	movwf	(___fldiv@b+3)^0,c
  9096  005DDE  0E80               	movlw	128
  9097  005DE0  123A               	iorwf	(___fldiv@b+2)^0,f,c
  9098  005DE2  0E7F               	movlw	127
  9099  005DE4  123B               	iorwf	(___fldiv@b+3)^0,f,c
  9100  005DE6                     l3364:
  9101  005DE6  5048               	movf	___fldiv@sign^0,w,c
  9102  005DE8  123B               	iorwf	(___fldiv@b+3)^0,f,c
  9103  005DEA  C038  F038         	movff	___fldiv@b,?___fldiv
  9104  005DEE  C039  F039         	movff	___fldiv@b+1,?___fldiv+1
  9105  005DF2  C03A  F03A         	movff	___fldiv@b+2,?___fldiv+2
  9106  005DF6  C03B  F03B         	movff	___fldiv@b+3,?___fldiv+3
  9107  005DFA  EF42  F030         	goto	l794
  9108  005DFE                     l3370:
  9109  005DFE  504F               	movf	___fldiv@bexp^0,w,c
  9110  005E00  A4D8               	btfss	status,2,c
  9111  005E02  EF05  F02F         	goto	u3381
  9112  005E06  EF07  F02F         	goto	u3380
  9113  005E0A                     u3381:
  9114  005E0A  EF11  F02F         	goto	l3378
  9115  005E0E                     u3380:
  9116  005E0E  0E00               	movlw	0
  9117  005E10  6E38               	movwf	?___fldiv^0,c
  9118  005E12  0E00               	movlw	0
  9119  005E14  6E39               	movwf	(?___fldiv+1)^0,c
  9120  005E16  0E00               	movlw	0
  9121  005E18  6E3A               	movwf	(?___fldiv+2)^0,c
  9122  005E1A  0E00               	movlw	0
  9123  005E1C  6E3B               	movwf	(?___fldiv+3)^0,c
  9124  005E1E  EF42  F030         	goto	l794
  9125  005E22                     l3378:
  9126  005E22  5050               	movf	___fldiv@aexp^0,w,c
  9127  005E24  C04F  F040         	movff	___fldiv@bexp,??___fldiv
  9128  005E28  6A41               	clrf	(??___fldiv+1)^0,c
  9129  005E2A  5E40               	subwf	??___fldiv^0,f,c
  9130  005E2C  0E00               	movlw	0
  9131  005E2E  5A41               	subwfb	(??___fldiv+1)^0,f,c
  9132  005E30  0E7F               	movlw	127
  9133  005E32  2440               	addwf	??___fldiv^0,w,c
  9134  005E34  6E49               	movwf	___fldiv@new_exp^0,c
  9135  005E36  0E00               	movlw	0
  9136  005E38  2041               	addwfc	(??___fldiv+1)^0,w,c
  9137  005E3A  6E4A               	movwf	(___fldiv@new_exp+1)^0,c
  9138  005E3C  C038  F044         	movff	___fldiv@b,___fldiv@rem
  9139  005E40  C039  F045         	movff	___fldiv@b+1,___fldiv@rem+1
  9140  005E44  C03A  F046         	movff	___fldiv@b+2,___fldiv@rem+2
  9141  005E48  C03B  F047         	movff	___fldiv@b+3,___fldiv@rem+3
  9142  005E4C  0E00               	movlw	0
  9143  005E4E  6E38               	movwf	___fldiv@b^0,c
  9144  005E50  0E00               	movlw	0
  9145  005E52  6E39               	movwf	(___fldiv@b+1)^0,c
  9146  005E54  0E00               	movlw	0
  9147  005E56  6E3A               	movwf	(___fldiv@b+2)^0,c
  9148  005E58  0E00               	movlw	0
  9149  005E5A  6E3B               	movwf	(___fldiv@b+3)^0,c
  9150  005E5C  0E00               	movlw	0
  9151  005E5E  6E4B               	movwf	___fldiv@grs^0,c
  9152  005E60  0E00               	movlw	0
  9153  005E62  6E4C               	movwf	(___fldiv@grs+1)^0,c
  9154  005E64  0E00               	movlw	0
  9155  005E66  6E4D               	movwf	(___fldiv@grs+2)^0,c
  9156  005E68  0E00               	movlw	0
  9157  005E6A  6E4E               	movwf	(___fldiv@grs+3)^0,c
  9158  005E6C  0E00               	movlw	0
  9159  005E6E  6E50               	movwf	___fldiv@aexp^0,c
  9160  005E70  EF72  F02F         	goto	l796
  9161  005E74                     l3388:
  9162  005E74  5050               	movf	___fldiv@aexp^0,w,c
  9163  005E76  B4D8               	btfsc	status,2,c
  9164  005E78  EF40  F02F         	goto	u3391
  9165  005E7C  EF42  F02F         	goto	u3390
  9166  005E80                     u3391:
  9167  005E80  EF59  F02F         	goto	l3396
  9168  005E84                     u3390:
  9169  005E84  90D8               	bcf	status,0,c
  9170  005E86  3644               	rlcf	___fldiv@rem^0,f,c
  9171  005E88  3645               	rlcf	(___fldiv@rem+1)^0,f,c
  9172  005E8A  3646               	rlcf	(___fldiv@rem+2)^0,f,c
  9173  005E8C  3647               	rlcf	(___fldiv@rem+3)^0,f,c
  9174  005E8E  90D8               	bcf	status,0,c
  9175  005E90  3638               	rlcf	___fldiv@b^0,f,c
  9176  005E92  3639               	rlcf	(___fldiv@b+1)^0,f,c
  9177  005E94  363A               	rlcf	(___fldiv@b+2)^0,f,c
  9178  005E96  363B               	rlcf	(___fldiv@b+3)^0,f,c
  9179  005E98  AE4E               	btfss	(___fldiv@grs+3)^0,7,c
  9180  005E9A  EF51  F02F         	goto	u3401
  9181  005E9E  EF53  F02F         	goto	u3400
  9182  005EA2                     u3401:
  9183  005EA2  EF54  F02F         	goto	l799
  9184  005EA6                     u3400:
  9185  005EA6  8038               	bsf	___fldiv@b^0,0,c
  9186  005EA8                     l799:
  9187  005EA8  90D8               	bcf	status,0,c
  9188  005EAA  364B               	rlcf	___fldiv@grs^0,f,c
  9189  005EAC  364C               	rlcf	(___fldiv@grs+1)^0,f,c
  9190  005EAE  364D               	rlcf	(___fldiv@grs+2)^0,f,c
  9191  005EB0  364E               	rlcf	(___fldiv@grs+3)^0,f,c
  9192  005EB2                     l3396:
  9193  005EB2  503C               	movf	___fldiv@a^0,w,c
  9194  005EB4  5C44               	subwf	___fldiv@rem^0,w,c
  9195  005EB6  503D               	movf	(___fldiv@a+1)^0,w,c
  9196  005EB8  5845               	subwfb	(___fldiv@rem+1)^0,w,c
  9197  005EBA  503E               	movf	(___fldiv@a+2)^0,w,c
  9198  005EBC  5846               	subwfb	(___fldiv@rem+2)^0,w,c
  9199  005EBE  503F               	movf	(___fldiv@a+3)^0,w,c
  9200  005EC0  5847               	subwfb	(___fldiv@rem+3)^0,w,c
  9201  005EC2  A0D8               	btfss	status,0,c
  9202  005EC4  EF66  F02F         	goto	u3411
  9203  005EC8  EF68  F02F         	goto	u3410
  9204  005ECC                     u3411:
  9205  005ECC  EF71  F02F         	goto	l3402
  9206  005ED0                     u3410:
  9207  005ED0  8C4E               	bsf	(___fldiv@grs+3)^0,6,c
  9208  005ED2  503C               	movf	___fldiv@a^0,w,c
  9209  005ED4  5E44               	subwf	___fldiv@rem^0,f,c
  9210  005ED6  503D               	movf	(___fldiv@a+1)^0,w,c
  9211  005ED8  5A45               	subwfb	(___fldiv@rem+1)^0,f,c
  9212  005EDA  503E               	movf	(___fldiv@a+2)^0,w,c
  9213  005EDC  5A46               	subwfb	(___fldiv@rem+2)^0,f,c
  9214  005EDE  503F               	movf	(___fldiv@a+3)^0,w,c
  9215  005EE0  5A47               	subwfb	(___fldiv@rem+3)^0,f,c
  9216  005EE2                     l3402:
  9217  005EE2  2A50               	incf	___fldiv@aexp^0,f,c
  9218  005EE4                     l796:
  9219  005EE4  0E19               	movlw	25
  9220  005EE6  6450               	cpfsgt	___fldiv@aexp^0,c
  9221  005EE8  EF78  F02F         	goto	u3421
  9222  005EEC  EF7A  F02F         	goto	u3420
  9223  005EF0                     u3421:
  9224  005EF0  EF3A  F02F         	goto	l3388
  9225  005EF4                     u3420:
  9226  005EF4  5044               	movf	___fldiv@rem^0,w,c
  9227  005EF6  1045               	iorwf	(___fldiv@rem+1)^0,w,c
  9228  005EF8  1046               	iorwf	(___fldiv@rem+2)^0,w,c
  9229  005EFA  1047               	iorwf	(___fldiv@rem+3)^0,w,c
  9230  005EFC  B4D8               	btfsc	status,2,c
  9231  005EFE  EF83  F02F         	goto	u3431
  9232  005F02  EF85  F02F         	goto	u3430
  9233  005F06                     u3431:
  9234  005F06  EF9D  F02F         	goto	l3414
  9235  005F0A                     u3430:
  9236  005F0A  804B               	bsf	___fldiv@grs^0,0,c
  9237  005F0C  EF9D  F02F         	goto	l3414
  9238  005F10                     l3408:
  9239  005F10  90D8               	bcf	status,0,c
  9240  005F12  3638               	rlcf	___fldiv@b^0,f,c
  9241  005F14  3639               	rlcf	(___fldiv@b+1)^0,f,c
  9242  005F16  363A               	rlcf	(___fldiv@b+2)^0,f,c
  9243  005F18  363B               	rlcf	(___fldiv@b+3)^0,f,c
  9244  005F1A  AE4E               	btfss	(___fldiv@grs+3)^0,7,c
  9245  005F1C  EF92  F02F         	goto	u3441
  9246  005F20  EF94  F02F         	goto	u3440
  9247  005F24                     u3441:
  9248  005F24  EF95  F02F         	goto	l805
  9249  005F28                     u3440:
  9250  005F28  8038               	bsf	___fldiv@b^0,0,c
  9251  005F2A                     l805:
  9252  005F2A  90D8               	bcf	status,0,c
  9253  005F2C  364B               	rlcf	___fldiv@grs^0,f,c
  9254  005F2E  364C               	rlcf	(___fldiv@grs+1)^0,f,c
  9255  005F30  364D               	rlcf	(___fldiv@grs+2)^0,f,c
  9256  005F32  364E               	rlcf	(___fldiv@grs+3)^0,f,c
  9257  005F34  0649               	decf	___fldiv@new_exp^0,f,c
  9258  005F36  A0D8               	btfss	status,0,c
  9259  005F38  064A               	decf	(___fldiv@new_exp+1)^0,f,c
  9260  005F3A                     l3414:
  9261  005F3A  AE3A               	btfss	(___fldiv@b+2)^0,7,c
  9262  005F3C  EFA2  F02F         	goto	u3451
  9263  005F40  EFA4  F02F         	goto	u3450
  9264  005F44                     u3451:
  9265  005F44  EF88  F02F         	goto	l3408
  9266  005F48                     u3450:
  9267  005F48  0E00               	movlw	0
  9268  005F4A  6E50               	movwf	___fldiv@aexp^0,c
  9269  005F4C  AE4E               	btfss	(___fldiv@grs+3)^0,7,c
  9270  005F4E  EFAB  F02F         	goto	u3461
  9271  005F52  EFAD  F02F         	goto	u3460
  9272  005F56                     u3461:
  9273  005F56  EFD1  F02F         	goto	l807
  9274  005F5A                     u3460:
  9275  005F5A  0EFF               	movlw	255
  9276  005F5C  144B               	andwf	___fldiv@grs^0,w,c
  9277  005F5E  6E40               	movwf	??___fldiv^0,c
  9278  005F60  0EFF               	movlw	255
  9279  005F62  144C               	andwf	(___fldiv@grs+1)^0,w,c
  9280  005F64  6E41               	movwf	(??___fldiv+1)^0,c
  9281  005F66  0EFF               	movlw	255
  9282  005F68  144D               	andwf	(___fldiv@grs+2)^0,w,c
  9283  005F6A  6E42               	movwf	(??___fldiv+2)^0,c
  9284  005F6C  0E7F               	movlw	127
  9285  005F6E  144E               	andwf	(___fldiv@grs+3)^0,w,c
  9286  005F70  6E43               	movwf	(??___fldiv+3)^0,c
  9287  005F72  5040               	movf	??___fldiv^0,w,c
  9288  005F74  1041               	iorwf	(??___fldiv+1)^0,w,c
  9289  005F76  1042               	iorwf	(??___fldiv+2)^0,w,c
  9290  005F78  1043               	iorwf	(??___fldiv+3)^0,w,c
  9291  005F7A  B4D8               	btfsc	status,2,c
  9292  005F7C  EFC2  F02F         	goto	u3471
  9293  005F80  EFC4  F02F         	goto	u3470
  9294  005F84                     u3471:
  9295  005F84  EFC8  F02F         	goto	l808
  9296  005F88                     u3470:
  9297  005F88                     l3422:
  9298  005F88  0E01               	movlw	1
  9299  005F8A  6E50               	movwf	___fldiv@aexp^0,c
  9300  005F8C  EFD1  F02F         	goto	l807
  9301  005F90                     l808:
  9302  005F90  A038               	btfss	___fldiv@b^0,0,c
  9303  005F92  EFCD  F02F         	goto	u3481
  9304  005F96  EFCF  F02F         	goto	u3480
  9305  005F9A                     u3481:
  9306  005F9A  EFD1  F02F         	goto	l807
  9307  005F9E                     u3480:
  9308  005F9E  EFC4  F02F         	goto	l3422
  9309  005FA2                     l807:
  9310  005FA2  5050               	movf	___fldiv@aexp^0,w,c
  9311  005FA4  B4D8               	btfsc	status,2,c
  9312  005FA6  EFD7  F02F         	goto	u3491
  9313  005FAA  EFD9  F02F         	goto	u3490
  9314  005FAE                     u3491:
  9315  005FAE  EFFD  F02F         	goto	l3434
  9316  005FB2                     u3490:
  9317  005FB2  0E01               	movlw	1
  9318  005FB4  2638               	addwf	___fldiv@b^0,f,c
  9319  005FB6  0E00               	movlw	0
  9320  005FB8  2239               	addwfc	(___fldiv@b+1)^0,f,c
  9321  005FBA  223A               	addwfc	(___fldiv@b+2)^0,f,c
  9322  005FBC  223B               	addwfc	(___fldiv@b+3)^0,f,c
  9323  005FBE  A03B               	btfss	(___fldiv@b+3)^0,0,c
  9324  005FC0  EFE4  F02F         	goto	u3501
  9325  005FC4  EFE6  F02F         	goto	u3500
  9326  005FC8                     u3501:
  9327  005FC8  EFFD  F02F         	goto	l3434
  9328  005FCC                     u3500:
  9329  005FCC  C038  F040         	movff	___fldiv@b,??___fldiv
  9330  005FD0  C039  F041         	movff	___fldiv@b+1,??___fldiv+1
  9331  005FD4  C03A  F042         	movff	___fldiv@b+2,??___fldiv+2
  9332  005FD8  C03B  F043         	movff	___fldiv@b+3,??___fldiv+3
  9333  005FDC  3443               	rlcf	(??___fldiv+3)^0,w,c
  9334  005FDE  3243               	rrcf	(??___fldiv+3)^0,f,c
  9335  005FE0  3242               	rrcf	(??___fldiv+2)^0,f,c
  9336  005FE2  3241               	rrcf	(??___fldiv+1)^0,f,c
  9337  005FE4  3240               	rrcf	??___fldiv^0,f,c
  9338  005FE6  C040  F038         	movff	??___fldiv,___fldiv@b
  9339  005FEA  C041  F039         	movff	??___fldiv+1,___fldiv@b+1
  9340  005FEE  C042  F03A         	movff	??___fldiv+2,___fldiv@b+2
  9341  005FF2  C043  F03B         	movff	??___fldiv+3,___fldiv@b+3
  9342  005FF6  4A49               	infsnz	___fldiv@new_exp^0,f,c
  9343  005FF8  2A4A               	incf	(___fldiv@new_exp+1)^0,f,c
  9344  005FFA                     l3434:
  9345  005FFA  BE4A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9346  005FFC  EF08  F030         	goto	u3511
  9347  006000  504A               	movf	(___fldiv@new_exp+1)^0,w,c
  9348  006002  E108               	bnz	u3510
  9349  006004  2849               	incf	___fldiv@new_exp^0,w,c
  9350  006006  A0D8               	btfss	status,0,c
  9351  006008  EF08  F030         	goto	u3511
  9352  00600C  EF0A  F030         	goto	u3510
  9353  006010                     u3511:
  9354  006010  EF15  F030         	goto	l3438
  9355  006014                     u3510:
  9356  006014  0E00               	movlw	0
  9357  006016  6E4A               	movwf	(___fldiv@new_exp+1)^0,c
  9358  006018  6849               	setf	___fldiv@new_exp^0,c
  9359  00601A  0E00               	movlw	0
  9360  00601C  6E38               	movwf	___fldiv@b^0,c
  9361  00601E  0E00               	movlw	0
  9362  006020  6E39               	movwf	(___fldiv@b+1)^0,c
  9363  006022  0E00               	movlw	0
  9364  006024  6E3A               	movwf	(___fldiv@b+2)^0,c
  9365  006026  0E00               	movlw	0
  9366  006028  6E3B               	movwf	(___fldiv@b+3)^0,c
  9367  00602A                     l3438:
  9368  00602A  BE4A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9369  00602C  EF22  F030         	goto	u3520
  9370  006030  504A               	movf	(___fldiv@new_exp+1)^0,w,c
  9371  006032  E106               	bnz	u3521
  9372  006034  0449               	decf	___fldiv@new_exp^0,w,c
  9373  006036  B0D8               	btfsc	status,0,c
  9374  006038  EF20  F030         	goto	u3521
  9375  00603C  EF22  F030         	goto	u3520
  9376  006040                     u3521:
  9377  006040  EF30  F030         	goto	l3442
  9378  006044                     u3520:
  9379  006044  0E00               	movlw	0
  9380  006046  6E4A               	movwf	(___fldiv@new_exp+1)^0,c
  9381  006048  0E00               	movlw	0
  9382  00604A  6E49               	movwf	___fldiv@new_exp^0,c
  9383  00604C  0E00               	movlw	0
  9384  00604E  6E38               	movwf	___fldiv@b^0,c
  9385  006050  0E00               	movlw	0
  9386  006052  6E39               	movwf	(___fldiv@b+1)^0,c
  9387  006054  0E00               	movlw	0
  9388  006056  6E3A               	movwf	(___fldiv@b+2)^0,c
  9389  006058  0E00               	movlw	0
  9390  00605A  6E3B               	movwf	(___fldiv@b+3)^0,c
  9391  00605C  0E00               	movlw	0
  9392  00605E  6E48               	movwf	___fldiv@sign^0,c
  9393  006060                     l3442:
  9394  006060  C049  F04F         	movff	___fldiv@new_exp,___fldiv@bexp
  9395  006064  A04F               	btfss	___fldiv@bexp^0,0,c
  9396  006066  EF37  F030         	goto	u3531
  9397  00606A  EF39  F030         	goto	u3530
  9398  00606E                     u3531:
  9399  00606E  EF3C  F030         	goto	l3448
  9400  006072                     u3530:
  9401  006072  8E3A               	bsf	(___fldiv@b+2)^0,7,c
  9402  006074  EF3D  F030         	goto	l3450
  9403  006078                     l3448:
  9404  006078  9E3A               	bcf	(___fldiv@b+2)^0,7,c
  9405  00607A                     l3450:
  9406  00607A  90D8               	bcf	status,0,c
  9407  00607C  304F               	rrcf	___fldiv@bexp^0,w,c
  9408  00607E  6E3B               	movwf	(___fldiv@b+3)^0,c
  9409  006080  EFF3  F02E         	goto	l3364
  9410  006084                     l794:
  9411  006084  0012               	return		;funcret
  9412  006086                     __end_of___fldiv:
  9413                           	callstack 0
  9414                           
  9415 ;; *************** function ___awmod *****************
  9416 ;; Defined at:
  9417 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\awmod.c"
  9418 ;; Parameters:    Size  Location     Type
  9419 ;;  dividend        2    0[COMRAM] int 
  9420 ;;  divisor         2    2[COMRAM] int 
  9421 ;; Auto vars:     Size  Location     Type
  9422 ;;  sign            1    5[COMRAM] unsigned char 
  9423 ;;  counter         1    4[COMRAM] unsigned char 
  9424 ;; Return value:  Size  Location     Type
  9425 ;;                  2    0[COMRAM] int 
  9426 ;; Registers used:
  9427 ;;		wreg, status,2, status,0
  9428 ;; Tracked objects:
  9429 ;;		On entry : 0/0
  9430 ;;		On exit  : 0/0
  9431 ;;		Unchanged: 0/0
  9432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9433 ;;      Params:         4       0       0       0       0       0       0
  9434 ;;      Locals:         2       0       0       0       0       0       0
  9435 ;;      Temps:          0       0       0       0       0       0       0
  9436 ;;      Totals:         6       0       0       0       0       0       0
  9437 ;;Total ram usage:        6 bytes
  9438 ;; Hardware stack levels used:    1
  9439 ;; This function calls:
  9440 ;;		Nothing
  9441 ;; This function is called by:
  9442 ;;		_encher_tanque
  9443 ;;		_efgtoa
  9444 ;; This function uses a non-reentrant model
  9445 ;;
  9446                           
  9447                           	psect	text29
  9448  004A1C                     __ptext29:
  9449                           	callstack 0
  9450  004A1C                     ___awmod:
  9451                           	callstack 25
  9452  004A1C  0E00               	movlw	0
  9453  004A1E  6E06               	movwf	___awmod@sign^0,c
  9454  004A20  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  9455  004A22  EF17  F025         	goto	u3790
  9456  004A26  EF15  F025         	goto	u3791
  9457  004A2A                     u3791:
  9458  004A2A  EF1D  F025         	goto	l3646
  9459  004A2E                     u3790:
  9460  004A2E  6C01               	negf	___awmod@dividend^0,c
  9461  004A30  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9462  004A32  B0D8               	btfsc	status,0,c
  9463  004A34  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9464  004A36  0E01               	movlw	1
  9465  004A38  6E06               	movwf	___awmod@sign^0,c
  9466  004A3A                     l3646:
  9467  004A3A  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  9468  004A3C  EF24  F025         	goto	u3800
  9469  004A40  EF22  F025         	goto	u3801
  9470  004A44                     u3801:
  9471  004A44  EF28  F025         	goto	l3650
  9472  004A48                     u3800:
  9473  004A48  6C03               	negf	___awmod@divisor^0,c
  9474  004A4A  1E04               	comf	(___awmod@divisor+1)^0,f,c
  9475  004A4C  B0D8               	btfsc	status,0,c
  9476  004A4E  2A04               	incf	(___awmod@divisor+1)^0,f,c
  9477  004A50                     l3650:
  9478  004A50  5003               	movf	___awmod@divisor^0,w,c
  9479  004A52  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  9480  004A54  B4D8               	btfsc	status,2,c
  9481  004A56  EF2F  F025         	goto	u3811
  9482  004A5A  EF31  F025         	goto	u3810
  9483  004A5E                     u3811:
  9484  004A5E  EF55  F025         	goto	l3666
  9485  004A62                     u3810:
  9486  004A62  0E01               	movlw	1
  9487  004A64  6E05               	movwf	___awmod@counter^0,c
  9488  004A66  EF39  F025         	goto	l3656
  9489  004A6A                     l3654:
  9490  004A6A  90D8               	bcf	status,0,c
  9491  004A6C  3603               	rlcf	___awmod@divisor^0,f,c
  9492  004A6E  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  9493  004A70  2A05               	incf	___awmod@counter^0,f,c
  9494  004A72                     l3656:
  9495  004A72  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  9496  004A74  EF3E  F025         	goto	u3821
  9497  004A78  EF40  F025         	goto	u3820
  9498  004A7C                     u3821:
  9499  004A7C  EF35  F025         	goto	l3654
  9500  004A80                     u3820:
  9501  004A80                     l3658:
  9502  004A80  5003               	movf	___awmod@divisor^0,w,c
  9503  004A82  5C01               	subwf	___awmod@dividend^0,w,c
  9504  004A84  5004               	movf	(___awmod@divisor+1)^0,w,c
  9505  004A86  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  9506  004A88  A0D8               	btfss	status,0,c
  9507  004A8A  EF49  F025         	goto	u3831
  9508  004A8E  EF4B  F025         	goto	u3830
  9509  004A92                     u3831:
  9510  004A92  EF4F  F025         	goto	l3662
  9511  004A96                     u3830:
  9512  004A96  5003               	movf	___awmod@divisor^0,w,c
  9513  004A98  5E01               	subwf	___awmod@dividend^0,f,c
  9514  004A9A  5004               	movf	(___awmod@divisor+1)^0,w,c
  9515  004A9C  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  9516  004A9E                     l3662:
  9517  004A9E  90D8               	bcf	status,0,c
  9518  004AA0  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  9519  004AA2  3203               	rrcf	___awmod@divisor^0,f,c
  9520  004AA4  2E05               	decfsz	___awmod@counter^0,f,c
  9521  004AA6  EF40  F025         	goto	l3658
  9522  004AAA                     l3666:
  9523  004AAA  5006               	movf	___awmod@sign^0,w,c
  9524  004AAC  B4D8               	btfsc	status,2,c
  9525  004AAE  EF5B  F025         	goto	u3841
  9526  004AB2  EF5D  F025         	goto	u3840
  9527  004AB6                     u3841:
  9528  004AB6  EF61  F025         	goto	l3670
  9529  004ABA                     u3840:
  9530  004ABA  6C01               	negf	___awmod@dividend^0,c
  9531  004ABC  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9532  004ABE  B0D8               	btfsc	status,0,c
  9533  004AC0  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9534  004AC2                     l3670:
  9535  004AC2  C001  F001         	movff	___awmod@dividend,?___awmod
  9536  004AC6  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  9537  004ACA  0012               	return		;funcret
  9538  004ACC                     __end_of___awmod:
  9539                           	callstack 0
  9540                           
  9541 ;; *************** function ___awdiv *****************
  9542 ;; Defined at:
  9543 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  9544 ;; Parameters:    Size  Location     Type
  9545 ;;  dividend        2    0[COMRAM] int 
  9546 ;;  divisor         2    2[COMRAM] int 
  9547 ;; Auto vars:     Size  Location     Type
  9548 ;;  quotient        2    6[COMRAM] int 
  9549 ;;  sign            1    5[COMRAM] unsigned char 
  9550 ;;  counter         1    4[COMRAM] unsigned char 
  9551 ;; Return value:  Size  Location     Type
  9552 ;;                  2    0[COMRAM] int 
  9553 ;; Registers used:
  9554 ;;		wreg, status,2, status,0
  9555 ;; Tracked objects:
  9556 ;;		On entry : 0/0
  9557 ;;		On exit  : 0/0
  9558 ;;		Unchanged: 0/0
  9559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9560 ;;      Params:         4       0       0       0       0       0       0
  9561 ;;      Locals:         4       0       0       0       0       0       0
  9562 ;;      Temps:          0       0       0       0       0       0       0
  9563 ;;      Totals:         8       0       0       0       0       0       0
  9564 ;;Total ram usage:        8 bytes
  9565 ;; Hardware stack levels used:    1
  9566 ;; This function calls:
  9567 ;;		Nothing
  9568 ;; This function is called by:
  9569 ;;		_encher_tanque
  9570 ;;		_efgtoa
  9571 ;; This function uses a non-reentrant model
  9572 ;;
  9573                           
  9574                           	psect	text30
  9575  004ACC                     __ptext30:
  9576                           	callstack 0
  9577  004ACC                     ___awdiv:
  9578                           	callstack 25
  9579  004ACC  0E00               	movlw	0
  9580  004ACE  6E06               	movwf	___awdiv@sign^0,c
  9581  004AD0  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  9582  004AD2  EF6F  F025         	goto	u3730
  9583  004AD6  EF6D  F025         	goto	u3731
  9584  004ADA                     u3731:
  9585  004ADA  EF75  F025         	goto	l3602
  9586  004ADE                     u3730:
  9587  004ADE  6C03               	negf	___awdiv@divisor^0,c
  9588  004AE0  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  9589  004AE2  B0D8               	btfsc	status,0,c
  9590  004AE4  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  9591  004AE6  0E01               	movlw	1
  9592  004AE8  6E06               	movwf	___awdiv@sign^0,c
  9593  004AEA                     l3602:
  9594  004AEA  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  9595  004AEC  EF7C  F025         	goto	u3740
  9596  004AF0  EF7A  F025         	goto	u3741
  9597  004AF4                     u3741:
  9598  004AF4  EF82  F025         	goto	l3608
  9599  004AF8                     u3740:
  9600  004AF8  6C01               	negf	___awdiv@dividend^0,c
  9601  004AFA  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  9602  004AFC  B0D8               	btfsc	status,0,c
  9603  004AFE  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  9604  004B00  0E01               	movlw	1
  9605  004B02  1A06               	xorwf	___awdiv@sign^0,f,c
  9606  004B04                     l3608:
  9607  004B04  0E00               	movlw	0
  9608  004B06  6E08               	movwf	(___awdiv@quotient+1)^0,c
  9609  004B08  0E00               	movlw	0
  9610  004B0A  6E07               	movwf	___awdiv@quotient^0,c
  9611  004B0C  5003               	movf	___awdiv@divisor^0,w,c
  9612  004B0E  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  9613  004B10  B4D8               	btfsc	status,2,c
  9614  004B12  EF8D  F025         	goto	u3751
  9615  004B16  EF8F  F025         	goto	u3750
  9616  004B1A                     u3751:
  9617  004B1A  EFB7  F025         	goto	l3630
  9618  004B1E                     u3750:
  9619  004B1E  0E01               	movlw	1
  9620  004B20  6E05               	movwf	___awdiv@counter^0,c
  9621  004B22  EF97  F025         	goto	l3616
  9622  004B26                     l3614:
  9623  004B26  90D8               	bcf	status,0,c
  9624  004B28  3603               	rlcf	___awdiv@divisor^0,f,c
  9625  004B2A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  9626  004B2C  2A05               	incf	___awdiv@counter^0,f,c
  9627  004B2E                     l3616:
  9628  004B2E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  9629  004B30  EF9C  F025         	goto	u3761
  9630  004B34  EF9E  F025         	goto	u3760
  9631  004B38                     u3761:
  9632  004B38  EF93  F025         	goto	l3614
  9633  004B3C                     u3760:
  9634  004B3C                     l3618:
  9635  004B3C  90D8               	bcf	status,0,c
  9636  004B3E  3607               	rlcf	___awdiv@quotient^0,f,c
  9637  004B40  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  9638  004B42  5003               	movf	___awdiv@divisor^0,w,c
  9639  004B44  5C01               	subwf	___awdiv@dividend^0,w,c
  9640  004B46  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9641  004B48  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  9642  004B4A  A0D8               	btfss	status,0,c
  9643  004B4C  EFAA  F025         	goto	u3771
  9644  004B50  EFAC  F025         	goto	u3770
  9645  004B54                     u3771:
  9646  004B54  EFB1  F025         	goto	l3626
  9647  004B58                     u3770:
  9648  004B58  5003               	movf	___awdiv@divisor^0,w,c
  9649  004B5A  5E01               	subwf	___awdiv@dividend^0,f,c
  9650  004B5C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9651  004B5E  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  9652  004B60  8007               	bsf	___awdiv@quotient^0,0,c
  9653  004B62                     l3626:
  9654  004B62  90D8               	bcf	status,0,c
  9655  004B64  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  9656  004B66  3203               	rrcf	___awdiv@divisor^0,f,c
  9657  004B68  2E05               	decfsz	___awdiv@counter^0,f,c
  9658  004B6A  EF9E  F025         	goto	l3618
  9659  004B6E                     l3630:
  9660  004B6E  5006               	movf	___awdiv@sign^0,w,c
  9661  004B70  B4D8               	btfsc	status,2,c
  9662  004B72  EFBD  F025         	goto	u3781
  9663  004B76  EFBF  F025         	goto	u3780
  9664  004B7A                     u3781:
  9665  004B7A  EFC3  F025         	goto	l3634
  9666  004B7E                     u3780:
  9667  004B7E  6C07               	negf	___awdiv@quotient^0,c
  9668  004B80  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  9669  004B82  B0D8               	btfsc	status,0,c
  9670  004B84  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  9671  004B86                     l3634:
  9672  004B86  C007  F001         	movff	___awdiv@quotient,?___awdiv
  9673  004B8A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  9674  004B8E  0012               	return		;funcret
  9675  004B90                     __end_of___awdiv:
  9676                           	callstack 0
  9677                           
  9678 ;; *************** function _atoi *****************
  9679 ;; Defined at:
  9680 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\atoi.c"
  9681 ;; Parameters:    Size  Location     Type
  9682 ;;  s               2    7[COMRAM] PTR const unsigned char 
  9683 ;;		 -> STR_28(5), STR_22(5), STR_12(5), 
  9684 ;; Auto vars:     Size  Location     Type
  9685 ;;  n               2   20[COMRAM] int 
  9686 ;;  neg             2   13[COMRAM] int 
  9687 ;; Return value:  Size  Location     Type
  9688 ;;                  2    7[COMRAM] int 
  9689 ;; Registers used:
  9690 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9691 ;; Tracked objects:
  9692 ;;		On entry : 0/0
  9693 ;;		On exit  : 0/0
  9694 ;;		Unchanged: 0/0
  9695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9696 ;;      Params:         2       0       0       0       0       0       0
  9697 ;;      Locals:         9       0       0       0       0       0       0
  9698 ;;      Temps:          4       0       0       0       0       0       0
  9699 ;;      Totals:        15       0       0       0       0       0       0
  9700 ;;Total ram usage:       15 bytes
  9701 ;; Hardware stack levels used:    1
  9702 ;; Hardware stack levels required when called:    1
  9703 ;; This function calls:
  9704 ;;		___wmul
  9705 ;;		_isdigit
  9706 ;;		_isspace
  9707 ;; This function is called by:
  9708 ;;		_vfpfcnvrt
  9709 ;; This function uses a non-reentrant model
  9710 ;;
  9711                           
  9712                           	psect	text31
  9713  005358                     __ptext31:
  9714                           	callstack 0
  9715  005358                     _atoi:
  9716                           	callstack 25
  9717  005358  0E00               	movlw	0
  9718  00535A  6E16               	movwf	(atoi@n+1)^0,c
  9719  00535C  0E00               	movlw	0
  9720  00535E  6E15               	movwf	atoi@n^0,c
  9721  005360  0E00               	movlw	0
  9722  005362  6E0F               	movwf	(atoi@neg+1)^0,c
  9723  005364  0E00               	movlw	0
  9724  005366  6E0E               	movwf	atoi@neg^0,c
  9725  005368  EFB8  F029         	goto	l4168
  9726  00536C                     l4166:
  9727  00536C  4A08               	infsnz	atoi@s^0,f,c
  9728  00536E  2A09               	incf	(atoi@s+1)^0,f,c
  9729  005370                     l4168:
  9730  005370  0E01               	movlw	1
  9731  005372  6E14               	movwf	_atoi$827^0,c
  9732  005374  C008  FFF6         	movff	atoi@s,tblptrl
  9733  005378  C009  FFF7         	movff	atoi@s+1,tblptrh
  9734  00537C                     	if	0	;tblptru may be non-zero
  9735  00537C                     	endif
  9736  00537C                     	if	0	;tblptru may be non-zero
  9737  00537C                     	endif
  9738  00537C  0008               	tblrd		*
  9739  00537E  50F5               	movf	tablat,w,c
  9740  005380  0A20               	xorlw	32
  9741  005382  B4D8               	btfsc	status,2,c
  9742  005384  EFC6  F029         	goto	u4831
  9743  005388  EFC8  F029         	goto	u4830
  9744  00538C                     u4831:
  9745  00538C  EFE5  F029         	goto	l4176
  9746  005390                     u4830:
  9747  005390  0EF7               	movlw	247
  9748  005392  6E0A               	movwf	??_atoi^0,c
  9749  005394  0EFF               	movlw	255
  9750  005396  6E0B               	movwf	(??_atoi+1)^0,c
  9751  005398  C008  FFF6         	movff	atoi@s,tblptrl
  9752  00539C  C009  FFF7         	movff	atoi@s+1,tblptrh
  9753  0053A0                     	if	0	;tblptru may be non-zero
  9754  0053A0                     	endif
  9755  0053A0                     	if	0	;tblptru may be non-zero
  9756  0053A0                     	endif
  9757  0053A0  0008               	tblrd		*
  9758  0053A2  50F5               	movf	tablat,w,c
  9759  0053A4  6E0C               	movwf	(??_atoi+2)^0,c
  9760  0053A6  6A0D               	clrf	(??_atoi+3)^0,c
  9761  0053A8  500A               	movf	??_atoi^0,w,c
  9762  0053AA  260C               	addwf	(??_atoi+2)^0,f,c
  9763  0053AC  500B               	movf	(??_atoi+1)^0,w,c
  9764  0053AE  220D               	addwfc	(??_atoi+3)^0,f,c
  9765  0053B0  500D               	movf	(??_atoi+3)^0,w,c
  9766  0053B2  E109               	bnz	u4840
  9767  0053B4  0E05               	movlw	5
  9768  0053B6  5C0C               	subwf	(??_atoi+2)^0,w,c
  9769  0053B8  A0D8               	btfss	status,0,c
  9770  0053BA  EFE1  F029         	goto	u4841
  9771  0053BE  EFE3  F029         	goto	u4840
  9772  0053C2                     u4841:
  9773  0053C2  EFE5  F029         	goto	l4176
  9774  0053C6                     u4840:
  9775  0053C6  0E00               	movlw	0
  9776  0053C8  6E14               	movwf	_atoi$827^0,c
  9777  0053CA                     l4176:
  9778  0053CA  C014  F010         	movff	_atoi$827,_atoi$826
  9779  0053CE  6A11               	clrf	(_atoi$826+1)^0,c
  9780  0053D0  5010               	movf	_atoi$826^0,w,c
  9781  0053D2  1011               	iorwf	(_atoi$826+1)^0,w,c
  9782  0053D4  A4D8               	btfss	status,2,c
  9783  0053D6  EFEF  F029         	goto	u4851
  9784  0053DA  EFF1  F029         	goto	u4850
  9785  0053DE                     u4851:
  9786  0053DE  EFB6  F029         	goto	l4166
  9787  0053E2                     u4850:
  9788  0053E2  EFFB  F029         	goto	l4186
  9789  0053E6                     l4182:
  9790  0053E6  0E00               	movlw	0
  9791  0053E8  6E0F               	movwf	(atoi@neg+1)^0,c
  9792  0053EA  0E01               	movlw	1
  9793  0053EC  6E0E               	movwf	atoi@neg^0,c
  9794  0053EE                     l4184:
  9795  0053EE  4A08               	infsnz	atoi@s^0,f,c
  9796  0053F0  2A09               	incf	(atoi@s+1)^0,f,c
  9797  0053F2  EF30  F02A         	goto	l4192
  9798  0053F6                     l4186:
  9799  0053F6  C008  FFF6         	movff	atoi@s,tblptrl
  9800  0053FA  C009  FFF7         	movff	atoi@s+1,tblptrh
  9801  0053FE                     	if	0	;tblptru may be non-zero
  9802  0053FE                     	endif
  9803  0053FE                     	if	0	;tblptru may be non-zero
  9804  0053FE                     	endif
  9805  0053FE  0008               	tblrd		*
  9806  005400  50F5               	movf	tablat,w,c
  9807  005402  6E0A               	movwf	??_atoi^0,c
  9808  005404  6A0B               	clrf	(??_atoi+1)^0,c
  9809                           
  9810                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9811                           ; Switch size 1, requested type "simple"
  9812                           ; Number of cases is 1, Range of values is 0 to 0
  9813                           ; switch strategies available:
  9814                           ; Name         Instructions Cycles
  9815                           ; simple_byte            4     3 (average)
  9816                           ;	Chosen strategy is simple_byte
  9817  005406  500B               	movf	(??_atoi+1)^0,w,c
  9818  005408  0A00               	xorlw	0	; case 0
  9819  00540A  B4D8               	btfsc	status,2,c
  9820  00540C  EF0A  F02A         	goto	l4958
  9821  005410  EF30  F02A         	goto	l4192
  9822  005414                     l4958:
  9823                           
  9824                           ; Switch size 1, requested type "simple"
  9825                           ; Number of cases is 2, Range of values is 43 to 45
  9826                           ; switch strategies available:
  9827                           ; Name         Instructions Cycles
  9828                           ; simple_byte            7     4 (average)
  9829                           ;	Chosen strategy is simple_byte
  9830  005414  500A               	movf	??_atoi^0,w,c
  9831  005416  0A2B               	xorlw	43	; case 43
  9832  005418  B4D8               	btfsc	status,2,c
  9833  00541A  EFF7  F029         	goto	l4184
  9834  00541E  0A06               	xorlw	6	; case 45
  9835  005420  B4D8               	btfsc	status,2,c
  9836  005422  EFF3  F029         	goto	l4182
  9837  005426  EF30  F02A         	goto	l4192
  9838  00542A                     l4188:
  9839  00542A  C015  F001         	movff	atoi@n,___wmul@multiplier
  9840  00542E  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  9841  005432  0E00               	movlw	0
  9842  005434  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9843  005436  0E0A               	movlw	10
  9844  005438  6E03               	movwf	___wmul@multiplicand^0,c
  9845  00543A  EC94  F021         	call	___wmul	;wreg free
  9846  00543E  C008  FFF6         	movff	atoi@s,tblptrl
  9847  005442  C009  FFF7         	movff	atoi@s+1,tblptrh
  9848  005446                     	if	0	;tblptru may be non-zero
  9849  005446                     	endif
  9850  005446                     	if	0	;tblptru may be non-zero
  9851  005446                     	endif
  9852  005446  0008               	tblrd		*
  9853  005448  50F5               	movf	tablat,w,c
  9854  00544A  5E01               	subwf	?___wmul^0,f,c
  9855  00544C  0E00               	movlw	0
  9856  00544E  5A02               	subwfb	(?___wmul+1)^0,f,c
  9857  005450  0E30               	movlw	48
  9858  005452  2401               	addwf	?___wmul^0,w,c
  9859  005454  6E15               	movwf	atoi@n^0,c
  9860  005456  0E00               	movlw	0
  9861  005458  2002               	addwfc	(?___wmul+1)^0,w,c
  9862  00545A  6E16               	movwf	(atoi@n+1)^0,c
  9863  00545C  EFF7  F029         	goto	l4184
  9864  005460                     l4192:
  9865  005460  0ED0               	movlw	208
  9866  005462  6E0A               	movwf	??_atoi^0,c
  9867  005464  0EFF               	movlw	255
  9868  005466  6E0B               	movwf	(??_atoi+1)^0,c
  9869  005468  C008  FFF6         	movff	atoi@s,tblptrl
  9870  00546C  C009  FFF7         	movff	atoi@s+1,tblptrh
  9871  005470                     	if	0	;tblptru may be non-zero
  9872  005470                     	endif
  9873  005470                     	if	0	;tblptru may be non-zero
  9874  005470                     	endif
  9875  005470  0008               	tblrd		*
  9876  005472  50F5               	movf	tablat,w,c
  9877  005474  6E0C               	movwf	(??_atoi+2)^0,c
  9878  005476  6A0D               	clrf	(??_atoi+3)^0,c
  9879  005478  500A               	movf	??_atoi^0,w,c
  9880  00547A  260C               	addwf	(??_atoi+2)^0,f,c
  9881  00547C  500B               	movf	(??_atoi+1)^0,w,c
  9882  00547E  220D               	addwfc	(??_atoi+3)^0,f,c
  9883  005480  500D               	movf	(??_atoi+3)^0,w,c
  9884  005482  E10A               	bnz	u4860
  9885  005484  0E0A               	movlw	10
  9886  005486  5C0C               	subwf	(??_atoi+2)^0,w,c
  9887  005488  A0D8               	btfss	status,0,c
  9888  00548A  EF49  F02A         	goto	u4861
  9889  00548E  EF4C  F02A         	goto	u4860
  9890  005492                     u4861:
  9891  005492  0E01               	movlw	1
  9892  005494  EF4D  F02A         	goto	u4870
  9893  005498                     u4860:
  9894  005498  0E00               	movlw	0
  9895  00549A                     u4870:
  9896  00549A  6E12               	movwf	_atoi$828^0,c
  9897  00549C  6A13               	clrf	(_atoi$828+1)^0,c
  9898  00549E  5012               	movf	_atoi$828^0,w,c
  9899  0054A0  1013               	iorwf	(_atoi$828+1)^0,w,c
  9900  0054A2  A4D8               	btfss	status,2,c
  9901  0054A4  EF56  F02A         	goto	u4881
  9902  0054A8  EF58  F02A         	goto	u4880
  9903  0054AC                     u4881:
  9904  0054AC  EF15  F02A         	goto	l4188
  9905  0054B0                     u4880:
  9906  0054B0  500E               	movf	atoi@neg^0,w,c
  9907  0054B2  100F               	iorwf	(atoi@neg+1)^0,w,c
  9908  0054B4  A4D8               	btfss	status,2,c
  9909  0054B6  EF5F  F02A         	goto	u4891
  9910  0054BA  EF61  F02A         	goto	u4890
  9911  0054BE                     u4891:
  9912  0054BE  EF6F  F02A         	goto	l1097
  9913  0054C2                     u4890:
  9914  0054C2  C015  F00A         	movff	atoi@n,??_atoi
  9915  0054C6  C016  F00B         	movff	atoi@n+1,??_atoi+1
  9916  0054CA  1E0A               	comf	??_atoi^0,f,c
  9917  0054CC  1E0B               	comf	(??_atoi+1)^0,f,c
  9918  0054CE  4A0A               	infsnz	??_atoi^0,f,c
  9919  0054D0  2A0B               	incf	(??_atoi+1)^0,f,c
  9920  0054D2  C00A  F008         	movff	??_atoi,?_atoi
  9921  0054D6  C00B  F009         	movff	??_atoi+1,?_atoi+1
  9922  0054DA  EF73  F02A         	goto	l1100
  9923  0054DE                     l1097:
  9924  0054DE  C015  F008         	movff	atoi@n,?_atoi
  9925  0054E2  C016  F009         	movff	atoi@n+1,?_atoi+1
  9926  0054E6                     l1100:
  9927  0054E6  0012               	return		;funcret
  9928  0054E8                     __end_of_atoi:
  9929                           	callstack 0
  9930                           
  9931 ;; *************** function _isspace *****************
  9932 ;; Defined at:
  9933 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\isspace.c"
  9934 ;; Parameters:    Size  Location     Type
  9935 ;;  c               2    0[COMRAM] int 
  9936 ;; Auto vars:     Size  Location     Type
  9937 ;;		None
  9938 ;; Return value:  Size  Location     Type
  9939 ;;                  2    0[COMRAM] int 
  9940 ;; Registers used:
  9941 ;;		wreg, status,2, status,0
  9942 ;; Tracked objects:
  9943 ;;		On entry : 0/0
  9944 ;;		On exit  : 0/0
  9945 ;;		Unchanged: 0/0
  9946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9947 ;;      Params:         2       0       0       0       0       0       0
  9948 ;;      Locals:         1       0       0       0       0       0       0
  9949 ;;      Temps:          4       0       0       0       0       0       0
  9950 ;;      Totals:         7       0       0       0       0       0       0
  9951 ;;Total ram usage:        7 bytes
  9952 ;; Hardware stack levels used:    1
  9953 ;; This function calls:
  9954 ;;		Nothing
  9955 ;; This function is called by:
  9956 ;;		_atoi
  9957 ;; This function uses a non-reentrant model
  9958 ;;
  9959                           
  9960                           	psect	text32
  9961  004536                     __ptext32:
  9962                           	callstack 0
  9963  004536                     _isspace:
  9964                           	callstack 25
  9965  004536  0E01               	movlw	1
  9966  004538  6E07               	movwf	_isspace$857^0,c
  9967  00453A  0E20               	movlw	32
  9968  00453C  1801               	xorwf	isspace@c^0,w,c
  9969  00453E  1002               	iorwf	(isspace@c+1)^0,w,c
  9970  004540  B4D8               	btfsc	status,2,c
  9971  004542  EFA5  F022         	goto	u4291
  9972  004546  EFA7  F022         	goto	u4290
  9973  00454A                     u4291:
  9974  00454A  EFC0  F022         	goto	l3862
  9975  00454E                     u4290:
  9976  00454E  0EF7               	movlw	247
  9977  004550  6E03               	movwf	??_isspace^0,c
  9978  004552  0EFF               	movlw	255
  9979  004554  6E04               	movwf	(??_isspace+1)^0,c
  9980  004556  C001  F005         	movff	isspace@c,??_isspace+2
  9981  00455A  C002  F006         	movff	isspace@c+1,??_isspace+3
  9982  00455E  5003               	movf	??_isspace^0,w,c
  9983  004560  2605               	addwf	(??_isspace+2)^0,f,c
  9984  004562  5004               	movf	(??_isspace+1)^0,w,c
  9985  004564  2206               	addwfc	(??_isspace+3)^0,f,c
  9986  004566  5006               	movf	(??_isspace+3)^0,w,c
  9987  004568  E109               	bnz	u4300
  9988  00456A  0E05               	movlw	5
  9989  00456C  5C05               	subwf	(??_isspace+2)^0,w,c
  9990  00456E  A0D8               	btfss	status,0,c
  9991  004570  EFBC  F022         	goto	u4301
  9992  004574  EFBE  F022         	goto	u4300
  9993  004578                     u4301:
  9994  004578  EFC0  F022         	goto	l3862
  9995  00457C                     u4300:
  9996  00457C  0E00               	movlw	0
  9997  00457E  6E07               	movwf	_isspace$857^0,c
  9998  004580                     l3862:
  9999  004580  C007  F001         	movff	_isspace$857,?_isspace
 10000  004584  6A02               	clrf	(?_isspace+1)^0,c
 10001  004586  0012               	return		;funcret
 10002  004588                     __end_of_isspace:
 10003                           	callstack 0
 10004                           
 10005 ;; *************** function _isdigit *****************
 10006 ;; Defined at:
 10007 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\isdigit.c"
 10008 ;; Parameters:    Size  Location     Type
 10009 ;;  c               2    0[COMRAM] int 
 10010 ;; Auto vars:     Size  Location     Type
 10011 ;;		None
 10012 ;; Return value:  Size  Location     Type
 10013 ;;                  2    0[COMRAM] int 
 10014 ;; Registers used:
 10015 ;;		wreg, status,2, status,0
 10016 ;; Tracked objects:
 10017 ;;		On entry : 0/0
 10018 ;;		On exit  : 0/0
 10019 ;;		Unchanged: 0/0
 10020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10021 ;;      Params:         2       0       0       0       0       0       0
 10022 ;;      Locals:         0       0       0       0       0       0       0
 10023 ;;      Temps:          4       0       0       0       0       0       0
 10024 ;;      Totals:         6       0       0       0       0       0       0
 10025 ;;Total ram usage:        6 bytes
 10026 ;; Hardware stack levels used:    1
 10027 ;; This function calls:
 10028 ;;		Nothing
 10029 ;; This function is called by:
 10030 ;;		_vfpfcnvrt
 10031 ;;		_atoi
 10032 ;; This function uses a non-reentrant model
 10033 ;;
 10034                           
 10035                           	psect	text33
 10036  004404                     __ptext33:
 10037                           	callstack 0
 10038  004404                     _isdigit:
 10039                           	callstack 26
 10040  004404  0ED0               	movlw	208
 10041  004406  6E03               	movwf	??_isdigit^0,c
 10042  004408  0EFF               	movlw	255
 10043  00440A  6E04               	movwf	(??_isdigit+1)^0,c
 10044  00440C  C001  F005         	movff	isdigit@c,??_isdigit+2
 10045  004410  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 10046  004414  5003               	movf	??_isdigit^0,w,c
 10047  004416  2605               	addwf	(??_isdigit+2)^0,f,c
 10048  004418  5004               	movf	(??_isdigit+1)^0,w,c
 10049  00441A  2206               	addwfc	(??_isdigit+3)^0,f,c
 10050  00441C  5006               	movf	(??_isdigit+3)^0,w,c
 10051  00441E  E10A               	bnz	u4270
 10052  004420  0E0A               	movlw	10
 10053  004422  5C05               	subwf	(??_isdigit+2)^0,w,c
 10054  004424  A0D8               	btfss	status,0,c
 10055  004426  EF17  F022         	goto	u4271
 10056  00442A  EF1A  F022         	goto	u4270
 10057  00442E                     u4271:
 10058  00442E  0E01               	movlw	1
 10059  004430  EF1B  F022         	goto	u4280
 10060  004434                     u4270:
 10061  004434  0E00               	movlw	0
 10062  004436                     u4280:
 10063  004436  6E01               	movwf	?_isdigit^0,c
 10064  004438  6A02               	clrf	(?_isdigit+1)^0,c
 10065  00443A  0012               	return		;funcret
 10066  00443C                     __end_of_isdigit:
 10067                           	callstack 0
 10068                           
 10069 ;; *************** function _pwmSet1 *****************
 10070 ;; Defined at:
 10071 ;;		line 23 in file "pwm.c"
 10072 ;; Parameters:    Size  Location     Type
 10073 ;;  porcento        1    wreg     unsigned char 
 10074 ;; Auto vars:     Size  Location     Type
 10075 ;;  porcento        1    9[COMRAM] unsigned char 
 10076 ;;  val             2   10[COMRAM] unsigned int 
 10077 ;; Return value:  Size  Location     Type
 10078 ;;                  1    wreg      void 
 10079 ;; Registers used:
 10080 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10081 ;; Tracked objects:
 10082 ;;		On entry : 0/0
 10083 ;;		On exit  : 0/0
 10084 ;;		Unchanged: 0/0
 10085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10086 ;;      Params:         0       0       0       0       0       0       0
 10087 ;;      Locals:         3       0       0       0       0       0       0
 10088 ;;      Temps:          2       0       0       0       0       0       0
 10089 ;;      Totals:         5       0       0       0       0       0       0
 10090 ;;Total ram usage:        5 bytes
 10091 ;; Hardware stack levels used:    1
 10092 ;; Hardware stack levels required when called:    1
 10093 ;; This function calls:
 10094 ;;		___lwdiv
 10095 ;;		___wmul
 10096 ;; This function is called by:
 10097 ;;		_encher_tanque
 10098 ;; This function uses a non-reentrant model
 10099 ;;
 10100                           
 10101                           	psect	text34
 10102  00481A                     __ptext34:
 10103                           	callstack 0
 10104  00481A                     _pwmSet1:
 10105                           	callstack 28
 10106                           
 10107                           ;incstack = 0
 10108                           ;pwmSet1@porcento stored from wreg
 10109  00481A  6E0A               	movwf	pwmSet1@porcento^0,c
 10110  00481C                     
 10111                           ;pwm.c: 23: void pwmSet1(unsigned char porcento);pwm.c: 24: {;pwm.c: 30:  unsigned int v
      +                          al = ((unsigned int)porcento) *((*(volatile __near unsigned char*)0xFCB)+1);
 10112  00481C  0E01               	movlw	1
 10113  00481E  24CB               	addwf	203,w,c	;volatile
 10114  004820  6E01               	movwf	___wmul@multiplier^0,c
 10115  004822  6A02               	clrf	(___wmul@multiplier+1)^0,c
 10116  004824  0E00               	movlw	0
 10117  004826  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
 10118  004828  C00A  F003         	movff	pwmSet1@porcento,___wmul@multiplicand
 10119  00482C  6A04               	clrf	(___wmul@multiplicand+1)^0,c
 10120  00482E  EC94  F021         	call	___wmul	;wreg free
 10121  004832  C001  F00B         	movff	?___wmul,pwmSet1@val
 10122  004836  C002  F00C         	movff	?___wmul+1,pwmSet1@val+1
 10123  00483A                     
 10124                           ;pwm.c: 31:  val = val / 25;
 10125  00483A  C00B  F001         	movff	pwmSet1@val,___lwdiv@dividend
 10126  00483E  C00C  F002         	movff	pwmSet1@val+1,___lwdiv@dividend+1
 10127  004842  0E00               	movlw	0
 10128  004844  6E04               	movwf	(___lwdiv@divisor+1)^0,c
 10129  004846  0E19               	movlw	25
 10130  004848  6E03               	movwf	___lwdiv@divisor^0,c
 10131  00484A  EC43  F024         	call	___lwdiv	;wreg free
 10132  00484E  C001  F00B         	movff	?___lwdiv,pwmSet1@val
 10133  004852  C002  F00C         	movff	?___lwdiv+1,pwmSet1@val+1
 10134  004856                     
 10135                           ;pwm.c: 33:  val &= 0x03ff;
 10136  004856  0EFF               	movlw	255
 10137  004858  160B               	andwf	pwmSet1@val^0,f,c
 10138  00485A  0E03               	movlw	3
 10139  00485C  160C               	andwf	(pwmSet1@val+1)^0,f,c
 10140  00485E                     
 10141                           ;pwm.c: 35:  (*(volatile __near unsigned char*)0xFBE) = val >> 2;
 10142  00485E  C00B  F008         	movff	pwmSet1@val,??_pwmSet1
 10143  004862  C00C  F009         	movff	pwmSet1@val+1,??_pwmSet1+1
 10144  004866  90D8               	bcf	status,0,c
 10145  004868  3209               	rrcf	(??_pwmSet1+1)^0,f,c
 10146  00486A  3208               	rrcf	??_pwmSet1^0,f,c
 10147  00486C  90D8               	bcf	status,0,c
 10148  00486E  3209               	rrcf	(??_pwmSet1+1)^0,f,c
 10149  004870  3208               	rrcf	??_pwmSet1^0,f,c
 10150  004872  5008               	movf	??_pwmSet1^0,w,c
 10151  004874  6EBE               	movwf	190,c	;volatile
 10152  004876                     
 10153                           ;pwm.c: 37:  (*(volatile __near unsigned char*)0xFBD) |= (val & 0x0003) << 4;
 10154  004876  C00B  F008         	movff	pwmSet1@val,??_pwmSet1
 10155  00487A  0E03               	movlw	3
 10156  00487C  1608               	andwf	??_pwmSet1^0,f,c
 10157  00487E  3808               	swapf	??_pwmSet1^0,w,c
 10158  004880  0BF0               	andlw	240
 10159  004882  12BD               	iorwf	189,f,c	;volatile
 10160  004884  0012               	return		;funcret
 10161  004886                     __end_of_pwmSet1:
 10162                           	callstack 0
 10163                           
 10164 ;; *************** function ___wmul *****************
 10165 ;; Defined at:
 10166 ;;		line 15 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 10167 ;; Parameters:    Size  Location     Type
 10168 ;;  multiplier      2    0[COMRAM] unsigned int 
 10169 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10170 ;; Auto vars:     Size  Location     Type
 10171 ;;  product         2    4[COMRAM] unsigned int 
 10172 ;; Return value:  Size  Location     Type
 10173 ;;                  2    0[COMRAM] unsigned int 
 10174 ;; Registers used:
 10175 ;;		wreg, status,2, status,0, prodl, prodh
 10176 ;; Tracked objects:
 10177 ;;		On entry : 0/0
 10178 ;;		On exit  : 0/0
 10179 ;;		Unchanged: 0/0
 10180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10181 ;;      Params:         4       0       0       0       0       0       0
 10182 ;;      Locals:         2       0       0       0       0       0       0
 10183 ;;      Temps:          0       0       0       0       0       0       0
 10184 ;;      Totals:         6       0       0       0       0       0       0
 10185 ;;Total ram usage:        6 bytes
 10186 ;; Hardware stack levels used:    1
 10187 ;; This function calls:
 10188 ;;		Nothing
 10189 ;; This function is called by:
 10190 ;;		_pwmSet1
 10191 ;;		_encher_tanque
 10192 ;;		_atoi
 10193 ;;		_pwmSet2
 10194 ;; This function uses a non-reentrant model
 10195 ;;
 10196                           
 10197                           	psect	text35
 10198  004328                     __ptext35:
 10199                           	callstack 0
 10200  004328                     ___wmul:
 10201                           	callstack 25
 10202  004328  5001               	movf	___wmul@multiplier^0,w,c
 10203  00432A  0203               	mulwf	___wmul@multiplicand^0,c
 10204  00432C  CFF3 F005          	movff	prodl,___wmul@product
 10205  004330  CFF4 F006          	movff	prodh,___wmul@product+1
 10206  004334  5001               	movf	___wmul@multiplier^0,w,c
 10207  004336  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 10208  004338  50F3               	movf	243,w,c
 10209  00433A  2606               	addwf	(___wmul@product+1)^0,f,c
 10210  00433C  5002               	movf	(___wmul@multiplier+1)^0,w,c
 10211  00433E  0203               	mulwf	___wmul@multiplicand^0,c
 10212  004340  50F3               	movf	243,w,c
 10213  004342  2606               	addwf	(___wmul@product+1)^0,f,c
 10214  004344  C005  F001         	movff	___wmul@product,?___wmul
 10215  004348  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10216  00434C  0012               	return		;funcret
 10217  00434E                     __end_of___wmul:
 10218                           	callstack 0
 10219                           
 10220 ;; *************** function ___lwdiv *****************
 10221 ;; Defined at:
 10222 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\lwdiv.c"
 10223 ;; Parameters:    Size  Location     Type
 10224 ;;  dividend        2    0[COMRAM] unsigned int 
 10225 ;;  divisor         2    2[COMRAM] unsigned int 
 10226 ;; Auto vars:     Size  Location     Type
 10227 ;;  quotient        2    4[COMRAM] unsigned int 
 10228 ;;  counter         1    6[COMRAM] unsigned char 
 10229 ;; Return value:  Size  Location     Type
 10230 ;;                  2    0[COMRAM] unsigned int 
 10231 ;; Registers used:
 10232 ;;		wreg, status,2, status,0
 10233 ;; Tracked objects:
 10234 ;;		On entry : 0/0
 10235 ;;		On exit  : 0/0
 10236 ;;		Unchanged: 0/0
 10237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10238 ;;      Params:         4       0       0       0       0       0       0
 10239 ;;      Locals:         3       0       0       0       0       0       0
 10240 ;;      Temps:          0       0       0       0       0       0       0
 10241 ;;      Totals:         7       0       0       0       0       0       0
 10242 ;;Total ram usage:        7 bytes
 10243 ;; Hardware stack levels used:    1
 10244 ;; This function calls:
 10245 ;;		Nothing
 10246 ;; This function is called by:
 10247 ;;		_pwmSet1
 10248 ;;		_pwmSet2
 10249 ;; This function uses a non-reentrant model
 10250 ;;
 10251                           
 10252                           	psect	text36
 10253  004886                     __ptext36:
 10254                           	callstack 0
 10255  004886                     ___lwdiv:
 10256                           	callstack 28
 10257  004886  0E00               	movlw	0
 10258  004888  6E06               	movwf	(___lwdiv@quotient+1)^0,c
 10259  00488A  0E00               	movlw	0
 10260  00488C  6E05               	movwf	___lwdiv@quotient^0,c
 10261  00488E  5003               	movf	___lwdiv@divisor^0,w,c
 10262  004890  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
 10263  004892  B4D8               	btfsc	status,2,c
 10264  004894  EF4E  F024         	goto	u5121
 10265  004898  EF50  F024         	goto	u5120
 10266  00489C                     u5121:
 10267  00489C  EF78  F024         	goto	l703
 10268  0048A0                     u5120:
 10269  0048A0  0E01               	movlw	1
 10270  0048A2  6E07               	movwf	___lwdiv@counter^0,c
 10271  0048A4  EF58  F024         	goto	l4366
 10272  0048A8                     l4364:
 10273  0048A8  90D8               	bcf	status,0,c
 10274  0048AA  3603               	rlcf	___lwdiv@divisor^0,f,c
 10275  0048AC  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
 10276  0048AE  2A07               	incf	___lwdiv@counter^0,f,c
 10277  0048B0                     l4366:
 10278  0048B0  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
 10279  0048B2  EF5D  F024         	goto	u5131
 10280  0048B6  EF5F  F024         	goto	u5130
 10281  0048BA                     u5131:
 10282  0048BA  EF54  F024         	goto	l4364
 10283  0048BE                     u5130:
 10284  0048BE                     l4368:
 10285  0048BE  90D8               	bcf	status,0,c
 10286  0048C0  3605               	rlcf	___lwdiv@quotient^0,f,c
 10287  0048C2  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
 10288  0048C4  5003               	movf	___lwdiv@divisor^0,w,c
 10289  0048C6  5C01               	subwf	___lwdiv@dividend^0,w,c
 10290  0048C8  5004               	movf	(___lwdiv@divisor+1)^0,w,c
 10291  0048CA  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
 10292  0048CC  A0D8               	btfss	status,0,c
 10293  0048CE  EF6B  F024         	goto	u5141
 10294  0048D2  EF6D  F024         	goto	u5140
 10295  0048D6                     u5141:
 10296  0048D6  EF72  F024         	goto	l4376
 10297  0048DA                     u5140:
 10298  0048DA  5003               	movf	___lwdiv@divisor^0,w,c
 10299  0048DC  5E01               	subwf	___lwdiv@dividend^0,f,c
 10300  0048DE  5004               	movf	(___lwdiv@divisor+1)^0,w,c
 10301  0048E0  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
 10302  0048E2  8005               	bsf	___lwdiv@quotient^0,0,c
 10303  0048E4                     l4376:
 10304  0048E4  90D8               	bcf	status,0,c
 10305  0048E6  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
 10306  0048E8  3203               	rrcf	___lwdiv@divisor^0,f,c
 10307  0048EA  2E07               	decfsz	___lwdiv@counter^0,f,c
 10308  0048EC  EF5F  F024         	goto	l4368
 10309  0048F0                     l703:
 10310  0048F0  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 10311  0048F4  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10312  0048F8  0012               	return		;funcret
 10313  0048FA                     __end_of___lwdiv:
 10314                           	callstack 0
 10315                           
 10316 ;; *************** function _pwmInit *****************
 10317 ;; Defined at:
 10318 ;;		line 59 in file "pwm.c"
 10319 ;; Parameters:    Size  Location     Type
 10320 ;;		None
 10321 ;; Auto vars:     Size  Location     Type
 10322 ;;		None
 10323 ;; Return value:  Size  Location     Type
 10324 ;;                  1    wreg      void 
 10325 ;; Registers used:
 10326 ;;		wreg, status,2, status,0
 10327 ;; Tracked objects:
 10328 ;;		On entry : 0/0
 10329 ;;		On exit  : 0/0
 10330 ;;		Unchanged: 0/0
 10331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10332 ;;      Params:         0       0       0       0       0       0       0
 10333 ;;      Locals:         0       0       0       0       0       0       0
 10334 ;;      Temps:          0       0       0       0       0       0       0
 10335 ;;      Totals:         0       0       0       0       0       0       0
 10336 ;;Total ram usage:        0 bytes
 10337 ;; Hardware stack levels used:    1
 10338 ;; This function calls:
 10339 ;;		Nothing
 10340 ;; This function is called by:
 10341 ;;		_encher_tanque
 10342 ;; This function uses a non-reentrant model
 10343 ;;
 10344                           
 10345                           	psect	text37
 10346  004314                     __ptext37:
 10347                           	callstack 0
 10348  004314                     _pwmInit:
 10349                           	callstack 29
 10350  004314                     
 10351                           ;pwm.c: 61:  (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<1));
 10352  004314  9294               	bcf	148,1,c	;volatile
 10353                           
 10354                           ;pwm.c: 62:  (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<2));
 10355  004316  9494               	bcf	148,2,c	;volatile
 10356  004318                     
 10357                           ;pwm.c: 64:  (*(volatile __near unsigned char*)0xFCA) |= 0b00000011;
 10358  004318  0E03               	movlw	3
 10359  00431A  12CA               	iorwf	202,f,c	;volatile
 10360  00431C                     
 10361                           ;pwm.c: 65:  (((*(volatile __near unsigned char*)0xFCA)) |= (1<<2));
 10362  00431C  84CA               	bsf	202,2,c	;volatile
 10363                           
 10364                           ;pwm.c: 68:  (*(volatile __near unsigned char*)0xFBD) |= 0b00001100;
 10365  00431E  0E0C               	movlw	12
 10366  004320  12BD               	iorwf	189,f,c	;volatile
 10367                           
 10368                           ;pwm.c: 69:  (*(volatile __near unsigned char*)0xFBA) |= 0b00001100;
 10369  004322  0E0C               	movlw	12
 10370  004324  12BA               	iorwf	186,f,c	;volatile
 10371  004326  0012               	return		;funcret
 10372  004328                     __end_of_pwmInit:
 10373                           	callstack 0
 10374                           
 10375 ;; *************** function _lcd_str *****************
 10376 ;; Defined at:
 10377 ;;		line 47 in file "lcd.c"
 10378 ;; Parameters:    Size  Location     Type
 10379 ;;  str             2    7[COMRAM] PTR const unsigned char 
 10380 ;;		 -> STR_31(9), STR_30(3), STR_29(8), ver_quantidade@y(8), 
 10381 ;;		 -> STR_27(13), STR_26(13), STR_25(9), STR_24(14), 
 10382 ;;		 -> STR_23(3), esvaziar_tanque@y(8), STR_21(11), STR_20(14), 
 10383 ;;		 -> STR_19(11), STR_18(11), STR_17(13), STR_16(13), 
 10384 ;;		 -> STR_15(9), STR_14(12), STR_13(3), encher_tanque@y(8), 
 10385 ;;		 -> STR_11(11), STR_10(16), STR_9(11), STR_8(11), 
 10386 ;;		 -> STR_7(14), STR_6(10), STR_5(15), STR_4(15), 
 10387 ;;		 -> STR_3(14), STR_2(11), STR_1(17), 
 10388 ;; Auto vars:     Size  Location     Type
 10389 ;;  i               1   11[COMRAM] unsigned char 
 10390 ;; Return value:  Size  Location     Type
 10391 ;;                  1    wreg      void 
 10392 ;; Registers used:
 10393 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10394 ;; Tracked objects:
 10395 ;;		On entry : 0/0
 10396 ;;		On exit  : 0/0
 10397 ;;		Unchanged: 0/0
 10398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10399 ;;      Params:         2       0       0       0       0       0       0
 10400 ;;      Locals:         1       0       0       0       0       0       0
 10401 ;;      Temps:          2       0       0       0       0       0       0
 10402 ;;      Totals:         5       0       0       0       0       0       0
 10403 ;;Total ram usage:        5 bytes
 10404 ;; Hardware stack levels used:    1
 10405 ;; Hardware stack levels required when called:    2
 10406 ;; This function calls:
 10407 ;;		_lcd_dat
 10408 ;; This function is called by:
 10409 ;;		_main
 10410 ;;		_encher_tanque
 10411 ;;		_esvaziar_tanque
 10412 ;;		_ver_quantidade
 10413 ;; This function uses a non-reentrant model
 10414 ;;
 10415                           
 10416                           	psect	text38
 10417  0048FA                     __ptext38:
 10418                           	callstack 0
 10419  0048FA                     _lcd_str:
 10420                           	callstack 27
 10421  0048FA                     
 10422                           ;lcd.c: 48:     unsigned char i = 0;
 10423  0048FA  0E00               	movlw	0
 10424  0048FC  6E0C               	movwf	lcd_str@i^0,c
 10425                           
 10426                           ;lcd.c: 50:     while (str[i] != 0) {
 10427  0048FE  EF9A  F024         	goto	l4408
 10428  004902                     l4404:
 10429                           
 10430                           ;lcd.c: 51:         lcd_dat(str[i]);
 10431  004902  500C               	movf	lcd_str@i^0,w,c
 10432  004904  2408               	addwf	lcd_str@str^0,w,c
 10433  004906  6E0A               	movwf	??_lcd_str^0,c
 10434  004908  0E00               	movlw	0
 10435  00490A  2009               	addwfc	(lcd_str@str+1)^0,w,c
 10436  00490C  6E0B               	movwf	(??_lcd_str+1)^0,c
 10437  00490E  C00A  FFF6         	movff	??_lcd_str,tblptrl
 10438  004912  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
 10439  004916  6AF8               	clrf	tblptru,c
 10440  004918  0E05               	movlw	(high __ramtop+-1)
 10441  00491A  64F7               	cpfsgt	tblptrh,c
 10442  00491C  D003               	bra	u5167
 10443  00491E  0008               	tblrd		*
 10444  004920  50F5               	movf	tablat,w,c
 10445  004922  D005               	bra	u5160
 10446  004924                     u5167:
 10447  004924  CFF6 FFE9          	movff	tblptrl,fsr0l
 10448  004928  CFF7 FFEA          	movff	tblptrh,fsr0h
 10449  00492C  50EF               	movf	indf0,w,c
 10450  00492E                     u5160:
 10451  00492E  ECBC  F021         	call	_lcd_dat
 10452  004932                     
 10453                           ;lcd.c: 52:         i++;
 10454  004932  2A0C               	incf	lcd_str@i^0,f,c
 10455  004934                     l4408:
 10456                           
 10457                           ;lcd.c: 50:     while (str[i] != 0) {
 10458  004934  500C               	movf	lcd_str@i^0,w,c
 10459  004936  2408               	addwf	lcd_str@str^0,w,c
 10460  004938  6E0A               	movwf	??_lcd_str^0,c
 10461  00493A  0E00               	movlw	0
 10462  00493C  2009               	addwfc	(lcd_str@str+1)^0,w,c
 10463  00493E  6E0B               	movwf	(??_lcd_str+1)^0,c
 10464  004940  C00A  FFF6         	movff	??_lcd_str,tblptrl
 10465  004944  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
 10466  004948  6AF8               	clrf	tblptru,c
 10467  00494A  0E05               	movlw	(high __ramtop+-1)
 10468  00494C  64F7               	cpfsgt	tblptrh,c
 10469  00494E  D003               	bra	u5177
 10470  004950  0008               	tblrd		*
 10471  004952  50F5               	movf	tablat,w,c
 10472  004954  D005               	bra	u5170
 10473  004956                     u5177:
 10474  004956  CFF6 FFE9          	movff	tblptrl,fsr0l
 10475  00495A  CFF7 FFEA          	movff	tblptrh,fsr0h
 10476  00495E  50EF               	movf	indf0,w,c
 10477  004960                     u5170:
 10478  004960  0900               	iorlw	0
 10479  004962  A4D8               	btfss	status,2,c
 10480  004964  EFB6  F024         	goto	u5181
 10481  004968  EFB8  F024         	goto	u5180
 10482  00496C                     u5181:
 10483  00496C  EF81  F024         	goto	l4404
 10484  004970                     u5180:
 10485  004970  0012               	return		;funcret
 10486  004972                     __end_of_lcd_str:
 10487                           	callstack 0
 10488                           
 10489 ;; *************** function _lcd_dat *****************
 10490 ;; Defined at:
 10491 ;;		line 19 in file "lcd.c"
 10492 ;; Parameters:    Size  Location     Type
 10493 ;;  val             1    wreg     unsigned char 
 10494 ;; Auto vars:     Size  Location     Type
 10495 ;;  val             1    6[COMRAM] unsigned char 
 10496 ;; Return value:  Size  Location     Type
 10497 ;;                  1    wreg      void 
 10498 ;; Registers used:
 10499 ;;		wreg, status,2, status,0, cstack
 10500 ;; Tracked objects:
 10501 ;;		On entry : 0/0
 10502 ;;		On exit  : 0/0
 10503 ;;		Unchanged: 0/0
 10504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10505 ;;      Params:         0       0       0       0       0       0       0
 10506 ;;      Locals:         1       0       0       0       0       0       0
 10507 ;;      Temps:          0       0       0       0       0       0       0
 10508 ;;      Totals:         1       0       0       0       0       0       0
 10509 ;;Total ram usage:        1 bytes
 10510 ;; Hardware stack levels used:    1
 10511 ;; Hardware stack levels required when called:    1
 10512 ;; This function calls:
 10513 ;;		_atraso_ms
 10514 ;;		_lcd_wr
 10515 ;; This function is called by:
 10516 ;;		_lcd_str
 10517 ;;		_encher_tanque
 10518 ;; This function uses a non-reentrant model
 10519 ;;
 10520                           
 10521                           	psect	text39
 10522  004378                     __ptext39:
 10523                           	callstack 0
 10524  004378                     _lcd_dat:
 10525                           	callstack 27
 10526                           
 10527                           ;incstack = 0
 10528                           ;lcd_dat@val stored from wreg
 10529  004378  6E07               	movwf	lcd_dat@val^0,c
 10530  00437A                     
 10531                           ;lcd.c: 20:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
 10532  00437A  8284               	bsf	132,1,c	;volatile
 10533  00437C                     
 10534                           ;lcd.c: 21:     lcd_wr(val);
 10535  00437C  5007               	movf	lcd_dat@val^0,w,c
 10536  00437E  EC86  F021         	call	_lcd_wr
 10537  004382                     
 10538                           ;lcd.c: 22:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<2));
 10539  004382  8484               	bsf	132,2,c	;volatile
 10540  004384                     
 10541                           ;lcd.c: 23:     atraso_ms(3);
 10542  004384  0E00               	movlw	0
 10543  004386  6E02               	movwf	(atraso_ms@t+1)^0,c
 10544  004388  0E03               	movlw	3
 10545  00438A  6E01               	movwf	atraso_ms@t^0,c
 10546  00438C  ECDB  F023         	call	_atraso_ms	;wreg free
 10547  004390                     
 10548                           ;lcd.c: 24:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
 10549  004390  9284               	bcf	132,1,c	;volatile
 10550  004392                     
 10551                           ;lcd.c: 25:     atraso_ms(3);
 10552  004392  0E00               	movlw	0
 10553  004394  6E02               	movwf	(atraso_ms@t+1)^0,c
 10554  004396  0E03               	movlw	3
 10555  004398  6E01               	movwf	atraso_ms@t^0,c
 10556  00439A  ECDB  F023         	call	_atraso_ms	;wreg free
 10557  00439E                     
 10558                           ;lcd.c: 26:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
 10559  00439E  8284               	bsf	132,1,c	;volatile
 10560  0043A0  0012               	return		;funcret
 10561  0043A2                     __end_of_lcd_dat:
 10562                           	callstack 0
 10563                           
 10564 ;; *************** function _lcd_cmd *****************
 10565 ;; Defined at:
 10566 ;;		line 9 in file "lcd.c"
 10567 ;; Parameters:    Size  Location     Type
 10568 ;;  val             1    wreg     unsigned char 
 10569 ;; Auto vars:     Size  Location     Type
 10570 ;;  val             1    6[COMRAM] unsigned char 
 10571 ;; Return value:  Size  Location     Type
 10572 ;;                  1    wreg      void 
 10573 ;; Registers used:
 10574 ;;		wreg, status,2, status,0, cstack
 10575 ;; Tracked objects:
 10576 ;;		On entry : 0/0
 10577 ;;		On exit  : 0/0
 10578 ;;		Unchanged: 0/0
 10579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10580 ;;      Params:         0       0       0       0       0       0       0
 10581 ;;      Locals:         1       0       0       0       0       0       0
 10582 ;;      Temps:          0       0       0       0       0       0       0
 10583 ;;      Totals:         1       0       0       0       0       0       0
 10584 ;;Total ram usage:        1 bytes
 10585 ;; Hardware stack levels used:    1
 10586 ;; Hardware stack levels required when called:    1
 10587 ;; This function calls:
 10588 ;;		_atraso_ms
 10589 ;;		_lcd_wr
 10590 ;; This function is called by:
 10591 ;;		_main
 10592 ;;		_lcd_init
 10593 ;;		_encher_tanque
 10594 ;;		_esvaziar_tanque
 10595 ;;		_ver_quantidade
 10596 ;; This function uses a non-reentrant model
 10597 ;;
 10598                           
 10599                           	psect	text40
 10600  00434E                     __ptext40:
 10601                           	callstack 0
 10602  00434E                     _lcd_cmd:
 10603                           	callstack 28
 10604                           
 10605                           ;incstack = 0
 10606                           ;lcd_cmd@val stored from wreg
 10607  00434E  6E07               	movwf	lcd_cmd@val^0,c
 10608  004350                     
 10609                           ;lcd.c: 10:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
 10610  004350  8284               	bsf	132,1,c	;volatile
 10611  004352                     
 10612                           ;lcd.c: 11:     lcd_wr(val);
 10613  004352  5007               	movf	lcd_cmd@val^0,w,c
 10614  004354  EC86  F021         	call	_lcd_wr
 10615  004358                     
 10616                           ;lcd.c: 12:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<2));
 10617  004358  9484               	bcf	132,2,c	;volatile
 10618  00435A                     
 10619                           ;lcd.c: 13:     atraso_ms(3);
 10620  00435A  0E00               	movlw	0
 10621  00435C  6E02               	movwf	(atraso_ms@t+1)^0,c
 10622  00435E  0E03               	movlw	3
 10623  004360  6E01               	movwf	atraso_ms@t^0,c
 10624  004362  ECDB  F023         	call	_atraso_ms	;wreg free
 10625  004366                     
 10626                           ;lcd.c: 14:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
 10627  004366  9284               	bcf	132,1,c	;volatile
 10628  004368                     
 10629                           ;lcd.c: 15:     atraso_ms(3);
 10630  004368  0E00               	movlw	0
 10631  00436A  6E02               	movwf	(atraso_ms@t+1)^0,c
 10632  00436C  0E03               	movlw	3
 10633  00436E  6E01               	movwf	atraso_ms@t^0,c
 10634  004370  ECDB  F023         	call	_atraso_ms	;wreg free
 10635  004374                     
 10636                           ;lcd.c: 16:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
 10637  004374  8284               	bsf	132,1,c	;volatile
 10638  004376  0012               	return		;funcret
 10639  004378                     __end_of_lcd_cmd:
 10640                           	callstack 0
 10641                           
 10642 ;; *************** function _lcd_wr *****************
 10643 ;; Defined at:
 10644 ;;		line 5 in file "lcd.c"
 10645 ;; Parameters:    Size  Location     Type
 10646 ;;  val             1    wreg     unsigned char 
 10647 ;; Auto vars:     Size  Location     Type
 10648 ;;  val             1    0[COMRAM] unsigned char 
 10649 ;; Return value:  Size  Location     Type
 10650 ;;                  1    wreg      void 
 10651 ;; Registers used:
 10652 ;;		wreg
 10653 ;; Tracked objects:
 10654 ;;		On entry : 0/0
 10655 ;;		On exit  : 0/0
 10656 ;;		Unchanged: 0/0
 10657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10658 ;;      Params:         0       0       0       0       0       0       0
 10659 ;;      Locals:         1       0       0       0       0       0       0
 10660 ;;      Temps:          0       0       0       0       0       0       0
 10661 ;;      Totals:         1       0       0       0       0       0       0
 10662 ;;Total ram usage:        1 bytes
 10663 ;; Hardware stack levels used:    1
 10664 ;; This function calls:
 10665 ;;		Nothing
 10666 ;; This function is called by:
 10667 ;;		_lcd_cmd
 10668 ;;		_lcd_dat
 10669 ;; This function uses a non-reentrant model
 10670 ;;
 10671                           
 10672                           	psect	text41
 10673  00430C                     __ptext41:
 10674                           	callstack 0
 10675  00430C                     _lcd_wr:
 10676                           	callstack 27
 10677                           
 10678                           ;incstack = 0
 10679                           ;lcd_wr@val stored from wreg
 10680  00430C  6E01               	movwf	lcd_wr@val^0,c
 10681  00430E                     
 10682                           ;lcd.c: 6:     (*(volatile __near unsigned char*)0xF83) = val;
 10683  00430E  C001  FF83         	movff	lcd_wr@val,3971	;volatile
 10684  004312  0012               	return		;funcret
 10685  004314                     __end_of_lcd_wr:
 10686                           	callstack 0
 10687                           
 10688 ;; *************** function _atraso_ms *****************
 10689 ;; Defined at:
 10690 ;;		line 3 in file "delay.c"
 10691 ;; Parameters:    Size  Location     Type
 10692 ;;  t               2    0[COMRAM] int 
 10693 ;; Auto vars:     Size  Location     Type
 10694 ;;  i               2    2[COMRAM] volatile unsigned int 
 10695 ;;  k               1    5[COMRAM] volatile unsigned char 
 10696 ;;  j               1    4[COMRAM] volatile unsigned char 
 10697 ;; Return value:  Size  Location     Type
 10698 ;;                  1    wreg      void 
 10699 ;; Registers used:
 10700 ;;		wreg, status,2, status,0
 10701 ;; Tracked objects:
 10702 ;;		On entry : 0/0
 10703 ;;		On exit  : 0/0
 10704 ;;		Unchanged: 0/0
 10705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10706 ;;      Params:         2       0       0       0       0       0       0
 10707 ;;      Locals:         4       0       0       0       0       0       0
 10708 ;;      Temps:          0       0       0       0       0       0       0
 10709 ;;      Totals:         6       0       0       0       0       0       0
 10710 ;;Total ram usage:        6 bytes
 10711 ;; Hardware stack levels used:    1
 10712 ;; This function calls:
 10713 ;;		Nothing
 10714 ;; This function is called by:
 10715 ;;		_main
 10716 ;;		_tc_tecla
 10717 ;;		_lcd_cmd
 10718 ;;		_lcd_dat
 10719 ;;		_lcd_init
 10720 ;;		_encher_tanque
 10721 ;;		_esvaziar_tanque
 10722 ;; This function uses a non-reentrant model
 10723 ;;
 10724                           
 10725                           	psect	text42
 10726  0047B6                     __ptext42:
 10727                           	callstack 0
 10728  0047B6                     _atraso_ms:
 10729                           	callstack 28
 10730  0047B6                     
 10731                           ;delay.c: 4:     volatile unsigned char j, k;;delay.c: 5:     volatile unsigned int i;;d
      +                          elay.c: 7:     for (i = 0; i < (t); i++) {
 10732  0047B6  0E00               	movlw	0
 10733  0047B8  6E04               	movwf	(atraso_ms@i+1)^0,c	;volatile
 10734  0047BA  0E00               	movlw	0
 10735  0047BC  6E03               	movwf	atraso_ms@i^0,c	;volatile
 10736  0047BE  EF01  F024         	goto	l4250
 10737  0047C2                     l4228:
 10738                           
 10739                           ;delay.c: 8:         for (j = 0; j < 41; j++) {
 10740  0047C2  0E00               	movlw	0
 10741  0047C4  6E05               	movwf	atraso_ms@j^0,c	;volatile
 10742  0047C6                     l4230:
 10743  0047C6  0E28               	movlw	40
 10744  0047C8  6405               	cpfsgt	atraso_ms@j^0,c	;volatile
 10745  0047CA  EFE9  F023         	goto	u4951
 10746  0047CE  EFEB  F023         	goto	u4950
 10747  0047D2                     u4951:
 10748  0047D2  EFED  F023         	goto	l4234
 10749  0047D6                     u4950:
 10750  0047D6  EFFF  F023         	goto	l4248
 10751  0047DA                     l4234:
 10752                           
 10753                           ;delay.c: 9:             for (k = 0; k < 3; k++);
 10754  0047DA  0E00               	movlw	0
 10755  0047DC  6E06               	movwf	atraso_ms@k^0,c	;volatile
 10756  0047DE                     l4236:
 10757  0047DE  0E02               	movlw	2
 10758  0047E0  6406               	cpfsgt	atraso_ms@k^0,c	;volatile
 10759  0047E2  EFF5  F023         	goto	u4961
 10760  0047E6  EFF7  F023         	goto	u4960
 10761  0047EA                     u4961:
 10762  0047EA  EFF9  F023         	goto	l4240
 10763  0047EE                     u4960:
 10764  0047EE  EFFC  F023         	goto	l4244
 10765  0047F2                     l4240:
 10766  0047F2  2A06               	incf	atraso_ms@k^0,f,c	;volatile
 10767  0047F4  EFEF  F023         	goto	l4236
 10768  0047F8                     l4244:
 10769                           
 10770                           ;delay.c: 10:         }
 10771  0047F8  2A05               	incf	atraso_ms@j^0,f,c	;volatile
 10772  0047FA  EFE3  F023         	goto	l4230
 10773  0047FE                     l4248:
 10774                           
 10775                           ;delay.c: 11:     }
 10776  0047FE  4A03               	infsnz	atraso_ms@i^0,f,c	;volatile
 10777  004800  2A04               	incf	(atraso_ms@i+1)^0,f,c	;volatile
 10778  004802                     l4250:
 10779  004802  5001               	movf	atraso_ms@t^0,w,c
 10780  004804  5C03               	subwf	atraso_ms@i^0,w,c	;volatile
 10781  004806  5002               	movf	(atraso_ms@t+1)^0,w,c
 10782  004808  5804               	subwfb	(atraso_ms@i+1)^0,w,c	;volatile
 10783  00480A  A0D8               	btfss	status,0,c
 10784  00480C  EF0A  F024         	goto	u4971
 10785  004810  EF0C  F024         	goto	u4970
 10786  004814                     u4971:
 10787  004814  EFE1  F023         	goto	l4228
 10788  004818                     u4970:
 10789  004818  0012               	return		;funcret
 10790  00481A                     __end_of_atraso_ms:
 10791                           	callstack 0
 10792                           
 10793 ;; *************** function ___xxtofl *****************
 10794 ;; Defined at:
 10795 ;;		line 10 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
 10796 ;; Parameters:    Size  Location     Type
 10797 ;;  sign            1    wreg     unsigned char 
 10798 ;;  val             4    0[COMRAM] long 
 10799 ;; Auto vars:     Size  Location     Type
 10800 ;;  sign            1    8[COMRAM] unsigned char 
 10801 ;;  arg             4   10[COMRAM] unsigned long 
 10802 ;;  exp             1    9[COMRAM] unsigned char 
 10803 ;; Return value:  Size  Location     Type
 10804 ;;                  4    0[COMRAM] unsigned char 
 10805 ;; Registers used:
 10806 ;;		wreg, status,2, status,0
 10807 ;; Tracked objects:
 10808 ;;		On entry : 0/0
 10809 ;;		On exit  : 0/0
 10810 ;;		Unchanged: 0/0
 10811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10812 ;;      Params:         4       0       0       0       0       0       0
 10813 ;;      Locals:         6       0       0       0       0       0       0
 10814 ;;      Temps:          4       0       0       0       0       0       0
 10815 ;;      Totals:        14       0       0       0       0       0       0
 10816 ;;Total ram usage:       14 bytes
 10817 ;; Hardware stack levels used:    1
 10818 ;; This function calls:
 10819 ;;		Nothing
 10820 ;; This function is called by:
 10821 ;;		_encher_tanque
 10822 ;; This function uses a non-reentrant model
 10823 ;;
 10824                           
 10825                           	psect	text43
 10826  0054E8                     __ptext43:
 10827                           	callstack 0
 10828  0054E8                     ___xxtofl:
 10829                           	callstack 29
 10830                           
 10831                           ;incstack = 0
 10832                           ;___xxtofl@sign stored from wreg
 10833  0054E8  6E09               	movwf	___xxtofl@sign^0,c
 10834  0054EA  5009               	movf	___xxtofl@sign^0,w,c
 10835  0054EC  B4D8               	btfsc	status,2,c
 10836  0054EE  EF7B  F02A         	goto	u5371
 10837  0054F2  EF7D  F02A         	goto	u5370
 10838  0054F6                     u5371:
 10839  0054F6  EF9F  F02A         	goto	l867
 10840  0054FA                     u5370:
 10841  0054FA  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 10842  0054FC  EF84  F02A         	goto	u5380
 10843  005500  EF82  F02A         	goto	u5381
 10844  005504                     u5381:
 10845  005504  EF9F  F02A         	goto	l867
 10846  005508                     u5380:
 10847  005508  C001  F005         	movff	___xxtofl@val,??___xxtofl
 10848  00550C  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 10849  005510  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 10850  005514  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 10851  005518  1E05               	comf	??___xxtofl^0,f,c
 10852  00551A  1E06               	comf	(??___xxtofl+1)^0,f,c
 10853  00551C  1E07               	comf	(??___xxtofl+2)^0,f,c
 10854  00551E  1E08               	comf	(??___xxtofl+3)^0,f,c
 10855  005520  2A05               	incf	??___xxtofl^0,f,c
 10856  005522  0E00               	movlw	0
 10857  005524  2206               	addwfc	(??___xxtofl+1)^0,f,c
 10858  005526  2207               	addwfc	(??___xxtofl+2)^0,f,c
 10859  005528  2208               	addwfc	(??___xxtofl+3)^0,f,c
 10860  00552A  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 10861  00552E  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 10862  005532  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 10863  005536  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 10864  00553A  EFA7  F02A         	goto	l4518
 10865  00553E                     l867:
 10866  00553E  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 10867  005542  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10868  005546  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10869  00554A  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10870  00554E                     l4518:
 10871  00554E  5001               	movf	___xxtofl@val^0,w,c
 10872  005550  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 10873  005552  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 10874  005554  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 10875  005556  A4D8               	btfss	status,2,c
 10876  005558  EFB0  F02A         	goto	u5391
 10877  00555C  EFB2  F02A         	goto	u5390
 10878  005560                     u5391:
 10879  005560  EFBC  F02A         	goto	l4524
 10880  005564                     u5390:
 10881  005564  0E00               	movlw	0
 10882  005566  6E01               	movwf	?___xxtofl^0,c
 10883  005568  0E00               	movlw	0
 10884  00556A  6E02               	movwf	(?___xxtofl+1)^0,c
 10885  00556C  0E00               	movlw	0
 10886  00556E  6E03               	movwf	(?___xxtofl+2)^0,c
 10887  005570  0E00               	movlw	0
 10888  005572  6E04               	movwf	(?___xxtofl+3)^0,c
 10889  005574  EF4D  F02B         	goto	l870
 10890  005578                     l4524:
 10891  005578  0E96               	movlw	150
 10892  00557A  6E0A               	movwf	___xxtofl@exp^0,c
 10893  00557C  EFC6  F02A         	goto	l4528
 10894  005580                     l4526:
 10895  005580  2A0A               	incf	___xxtofl@exp^0,f,c
 10896  005582  90D8               	bcf	status,0,c
 10897  005584  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 10898  005586  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 10899  005588  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 10900  00558A  320B               	rrcf	___xxtofl@arg^0,f,c
 10901  00558C                     l4528:
 10902  00558C  0E00               	movlw	0
 10903  00558E  140B               	andwf	___xxtofl@arg^0,w,c
 10904  005590  6E05               	movwf	??___xxtofl^0,c
 10905  005592  0E00               	movlw	0
 10906  005594  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 10907  005596  6E06               	movwf	(??___xxtofl+1)^0,c
 10908  005598  0E00               	movlw	0
 10909  00559A  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 10910  00559C  6E07               	movwf	(??___xxtofl+2)^0,c
 10911  00559E  0EFE               	movlw	254
 10912  0055A0  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 10913  0055A2  6E08               	movwf	(??___xxtofl+3)^0,c
 10914  0055A4  5005               	movf	??___xxtofl^0,w,c
 10915  0055A6  1006               	iorwf	(??___xxtofl+1)^0,w,c
 10916  0055A8  1007               	iorwf	(??___xxtofl+2)^0,w,c
 10917  0055AA  1008               	iorwf	(??___xxtofl+3)^0,w,c
 10918  0055AC  A4D8               	btfss	status,2,c
 10919  0055AE  EFDB  F02A         	goto	u5401
 10920  0055B2  EFDD  F02A         	goto	u5400
 10921  0055B6                     u5401:
 10922  0055B6  EFC0  F02A         	goto	l4526
 10923  0055BA                     u5400:
 10924  0055BA  EFEB  F02A         	goto	l874
 10925  0055BE                     l4530:
 10926  0055BE  2A0A               	incf	___xxtofl@exp^0,f,c
 10927  0055C0  0E01               	movlw	1
 10928  0055C2  260B               	addwf	___xxtofl@arg^0,f,c
 10929  0055C4  0E00               	movlw	0
 10930  0055C6  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 10931  0055C8  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 10932  0055CA  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 10933  0055CC  90D8               	bcf	status,0,c
 10934  0055CE  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 10935  0055D0  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 10936  0055D2  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 10937  0055D4  320B               	rrcf	___xxtofl@arg^0,f,c
 10938  0055D6                     l874:
 10939  0055D6  0E00               	movlw	0
 10940  0055D8  140B               	andwf	___xxtofl@arg^0,w,c
 10941  0055DA  6E05               	movwf	??___xxtofl^0,c
 10942  0055DC  0E00               	movlw	0
 10943  0055DE  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 10944  0055E0  6E06               	movwf	(??___xxtofl+1)^0,c
 10945  0055E2  0E00               	movlw	0
 10946  0055E4  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 10947  0055E6  6E07               	movwf	(??___xxtofl+2)^0,c
 10948  0055E8  0EFF               	movlw	255
 10949  0055EA  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 10950  0055EC  6E08               	movwf	(??___xxtofl+3)^0,c
 10951  0055EE  5005               	movf	??___xxtofl^0,w,c
 10952  0055F0  1006               	iorwf	(??___xxtofl+1)^0,w,c
 10953  0055F2  1007               	iorwf	(??___xxtofl+2)^0,w,c
 10954  0055F4  1008               	iorwf	(??___xxtofl+3)^0,w,c
 10955  0055F6  A4D8               	btfss	status,2,c
 10956  0055F8  EF00  F02B         	goto	u5411
 10957  0055FC  EF02  F02B         	goto	u5410
 10958  005600                     u5411:
 10959  005600  EFDF  F02A         	goto	l4530
 10960  005604                     u5410:
 10961  005604  EF0A  F02B         	goto	l4538
 10962  005608                     l4536:
 10963  005608  060A               	decf	___xxtofl@exp^0,f,c
 10964  00560A  90D8               	bcf	status,0,c
 10965  00560C  360B               	rlcf	___xxtofl@arg^0,f,c
 10966  00560E  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 10967  005610  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 10968  005612  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 10969  005614                     l4538:
 10970  005614  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 10971  005616  EF0F  F02B         	goto	u5421
 10972  00561A  EF11  F02B         	goto	u5420
 10973  00561E                     u5421:
 10974  00561E  EF19  F02B         	goto	l881
 10975  005622                     u5420:
 10976  005622  0E02               	movlw	2
 10977  005624  600A               	cpfslt	___xxtofl@exp^0,c
 10978  005626  EF17  F02B         	goto	u5431
 10979  00562A  EF19  F02B         	goto	u5430
 10980  00562E                     u5431:
 10981  00562E  EF04  F02B         	goto	l4536
 10982  005632                     u5430:
 10983  005632                     l881:
 10984  005632  B00A               	btfsc	___xxtofl@exp^0,0,c
 10985  005634  EF1E  F02B         	goto	u5441
 10986  005638  EF20  F02B         	goto	u5440
 10987  00563C                     u5441:
 10988  00563C  EF21  F02B         	goto	l4544
 10989  005640                     u5440:
 10990  005640  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 10991  005642                     l4544:
 10992  005642  90D8               	bcf	status,0,c
 10993  005644  320A               	rrcf	___xxtofl@exp^0,f,c
 10994  005646  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 10995  00564A  6A06               	clrf	(??___xxtofl+1)^0,c
 10996  00564C  6A07               	clrf	(??___xxtofl+2)^0,c
 10997  00564E  6A08               	clrf	(??___xxtofl+3)^0,c
 10998  005650  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 10999  005654  6A07               	clrf	(??___xxtofl+2)^0,c
 11000  005656  6A06               	clrf	(??___xxtofl+1)^0,c
 11001  005658  6A05               	clrf	??___xxtofl^0,c
 11002  00565A  5005               	movf	??___xxtofl^0,w,c
 11003  00565C  120B               	iorwf	___xxtofl@arg^0,f,c
 11004  00565E  5006               	movf	(??___xxtofl+1)^0,w,c
 11005  005660  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 11006  005662  5007               	movf	(??___xxtofl+2)^0,w,c
 11007  005664  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 11008  005666  5008               	movf	(??___xxtofl+3)^0,w,c
 11009  005668  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 11010  00566A  5009               	movf	___xxtofl@sign^0,w,c
 11011  00566C  B4D8               	btfsc	status,2,c
 11012  00566E  EF3B  F02B         	goto	u5451
 11013  005672  EF3D  F02B         	goto	u5450
 11014  005676                     u5451:
 11015  005676  EF45  F02B         	goto	l4554
 11016  00567A                     u5450:
 11017  00567A  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 11018  00567C  EF44  F02B         	goto	u5460
 11019  005680  EF42  F02B         	goto	u5461
 11020  005684                     u5461:
 11021  005684  EF45  F02B         	goto	l4554
 11022  005688                     u5460:
 11023  005688  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 11024  00568A                     l4554:
 11025  00568A  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 11026  00568E  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 11027  005692  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 11028  005696  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 11029  00569A                     l870:
 11030  00569A  0012               	return		;funcret
 11031  00569C                     __end_of___xxtofl:
 11032                           	callstack 0
 11033                           
 11034                           	psect	rparam
 11035  0000                     
 11036                           	psect	idloc
 11037                           
 11038                           ;Config register IDLOC0 @ 0x200000
 11039                           ;	unspecified, using default values
 11040  200000                     	org	2097152
 11041  200000  FF                 	db	255
 11042                           
 11043                           ;Config register IDLOC1 @ 0x200001
 11044                           ;	unspecified, using default values
 11045  200001                     	org	2097153
 11046  200001  FF                 	db	255
 11047                           
 11048                           ;Config register IDLOC2 @ 0x200002
 11049                           ;	unspecified, using default values
 11050  200002                     	org	2097154
 11051  200002  FF                 	db	255
 11052                           
 11053                           ;Config register IDLOC3 @ 0x200003
 11054                           ;	unspecified, using default values
 11055  200003                     	org	2097155
 11056  200003  FF                 	db	255
 11057                           
 11058                           ;Config register IDLOC4 @ 0x200004
 11059                           ;	unspecified, using default values
 11060  200004                     	org	2097156
 11061  200004  FF                 	db	255
 11062                           
 11063                           ;Config register IDLOC5 @ 0x200005
 11064                           ;	unspecified, using default values
 11065  200005                     	org	2097157
 11066  200005  FF                 	db	255
 11067                           
 11068                           ;Config register IDLOC6 @ 0x200006
 11069                           ;	unspecified, using default values
 11070  200006                     	org	2097158
 11071  200006  FF                 	db	255
 11072                           
 11073                           ;Config register IDLOC7 @ 0x200007
 11074                           ;	unspecified, using default values
 11075  200007                     	org	2097159
 11076  200007  FF                 	db	255
 11077                           
 11078                           	psect	config
 11079                           
 11080                           ; Padding undefined space
 11081  300000                     	org	3145728
 11082  300000  FF                 	db	255
 11083                           
 11084                           ;Config register CONFIG1H @ 0x300001
 11085                           ;	Oscillator Selection bits
 11086                           ;	OSC = HS, HS oscillator
 11087                           ;	Fail-Safe Clock Monitor Enable bit
 11088                           ;	FCMEN = 0x0, unprogrammed default
 11089                           ;	Internal/External Oscillator Switchover bit
 11090                           ;	IESO = 0x0, unprogrammed default
 11091  300001                     	org	3145729
 11092  300001  02                 	db	2
 11093                           
 11094                           ;Config register CONFIG2L @ 0x300002
 11095                           ;	unspecified, using default values
 11096                           ;	Power-up Timer Enable bit
 11097                           ;	PWRT = 0x1, unprogrammed default
 11098                           ;	Brown-out Reset Enable bits
 11099                           ;	BOREN = 0x3, unprogrammed default
 11100                           ;	Brown Out Reset Voltage bits
 11101                           ;	BORV = 0x3, unprogrammed default
 11102  300002                     	org	3145730
 11103  300002  1F                 	db	31
 11104                           
 11105                           ;Config register CONFIG2H @ 0x300003
 11106                           ;	Watchdog Timer Enable bit
 11107                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 11108                           ;	Watchdog Timer Postscale Select bits
 11109                           ;	WDTPS = 1, 1:1
 11110  300003                     	org	3145731
 11111  300003  00                 	db	0
 11112                           
 11113                           ; Padding undefined space
 11114  300004                     	org	3145732
 11115  300004  FF                 	db	255
 11116                           
 11117                           ;Config register CONFIG3H @ 0x300005
 11118                           ;	unspecified, using default values
 11119                           ;	CCP2 MUX bit
 11120                           ;	CCP2MX = 0x1, unprogrammed default
 11121                           ;	PORTB A/D Enable bit
 11122                           ;	PBADEN = 0x1, unprogrammed default
 11123                           ;	Low-Power Timer1 Oscillator Enable bit
 11124                           ;	LPT1OSC = 0x0, unprogrammed default
 11125                           ;	MCLR Pin Enable bit
 11126                           ;	MCLRE = 0x1, unprogrammed default
 11127  300005                     	org	3145733
 11128  300005  83                 	db	131
 11129                           
 11130                           ;Config register CONFIG4L @ 0x300006
 11131                           ;	Stack Full/Underflow Reset Enable bit
 11132                           ;	STVREN = 0x1, unprogrammed default
 11133                           ;	Single-Supply ICSP Enable bit
 11134                           ;	LVP = OFF, Single-Supply ICSP disabled
 11135                           ;	Extended Instruction Set Enable bit
 11136                           ;	XINST = 0x0, unprogrammed default
 11137                           ;	Background Debugger Enable bit
 11138                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 11139  300006                     	org	3145734
 11140  300006  81                 	db	129
 11141                           
 11142                           ; Padding undefined space
 11143  300007                     	org	3145735
 11144  300007  FF                 	db	255
 11145                           
 11146                           ;Config register CONFIG5L @ 0x300008
 11147                           ;	unspecified, using default values
 11148                           ;	Code Protection bit
 11149                           ;	CP0 = 0x1, unprogrammed default
 11150                           ;	Code Protection bit
 11151                           ;	CP1 = 0x1, unprogrammed default
 11152                           ;	Code Protection bit
 11153                           ;	CP2 = 0x1, unprogrammed default
 11154                           ;	Code Protection bit
 11155                           ;	CP3 = 0x1, unprogrammed default
 11156  300008                     	org	3145736
 11157  300008  0F                 	db	15
 11158                           
 11159                           ;Config register CONFIG5H @ 0x300009
 11160                           ;	unspecified, using default values
 11161                           ;	Boot Block Code Protection bit
 11162                           ;	CPB = 0x1, unprogrammed default
 11163                           ;	Data EEPROM Code Protection bit
 11164                           ;	CPD = 0x1, unprogrammed default
 11165  300009                     	org	3145737
 11166  300009  C0                 	db	192
 11167                           
 11168                           ;Config register CONFIG6L @ 0x30000A
 11169                           ;	unspecified, using default values
 11170                           ;	Write Protection bit
 11171                           ;	WRT0 = 0x1, unprogrammed default
 11172                           ;	Write Protection bit
 11173                           ;	WRT1 = 0x1, unprogrammed default
 11174                           ;	Write Protection bit
 11175                           ;	WRT2 = 0x1, unprogrammed default
 11176                           ;	Write Protection bit
 11177                           ;	WRT3 = 0x1, unprogrammed default
 11178  30000A                     	org	3145738
 11179  30000A  0F                 	db	15
 11180                           
 11181                           ;Config register CONFIG6H @ 0x30000B
 11182                           ;	unspecified, using default values
 11183                           ;	Configuration Register Write Protection bit
 11184                           ;	WRTC = 0x1, unprogrammed default
 11185                           ;	Boot Block Write Protection bit
 11186                           ;	WRTB = 0x1, unprogrammed default
 11187                           ;	Data EEPROM Write Protection bit
 11188                           ;	WRTD = 0x1, unprogrammed default
 11189  30000B                     	org	3145739
 11190  30000B  E0                 	db	224
 11191                           
 11192                           ;Config register CONFIG7L @ 0x30000C
 11193                           ;	unspecified, using default values
 11194                           ;	Table Read Protection bit
 11195                           ;	EBTR0 = 0x1, unprogrammed default
 11196                           ;	Table Read Protection bit
 11197                           ;	EBTR1 = 0x1, unprogrammed default
 11198                           ;	Table Read Protection bit
 11199                           ;	EBTR2 = 0x1, unprogrammed default
 11200                           ;	Table Read Protection bit
 11201                           ;	EBTR3 = 0x1, unprogrammed default
 11202  30000C                     	org	3145740
 11203  30000C  0F                 	db	15
 11204                           
 11205                           ;Config register CONFIG7H @ 0x30000D
 11206                           ;	unspecified, using default values
 11207                           ;	Boot Block Table Read Protection bit
 11208                           ;	EBTRB = 0x1, unprogrammed default
 11209  30000D                     	org	3145741
 11210  30000D  40                 	db	64
 11211                           tosu	equ	0xFFF
 11212                           tosh	equ	0xFFE
 11213                           tosl	equ	0xFFD
 11214                           stkptr	equ	0xFFC
 11215                           pclatu	equ	0xFFB
 11216                           pclath	equ	0xFFA
 11217                           pcl	equ	0xFF9
 11218                           tblptru	equ	0xFF8
 11219                           tblptrh	equ	0xFF7
 11220                           tblptrl	equ	0xFF6
 11221                           tablat	equ	0xFF5
 11222                           prodh	equ	0xFF4
 11223                           prodl	equ	0xFF3
 11224                           indf0	equ	0xFEF
 11225                           postinc0	equ	0xFEE
 11226                           postdec0	equ	0xFED
 11227                           preinc0	equ	0xFEC
 11228                           plusw0	equ	0xFEB
 11229                           fsr0h	equ	0xFEA
 11230                           fsr0l	equ	0xFE9
 11231                           wreg	equ	0xFE8
 11232                           indf1	equ	0xFE7
 11233                           postinc1	equ	0xFE6
 11234                           postdec1	equ	0xFE5
 11235                           preinc1	equ	0xFE4
 11236                           plusw1	equ	0xFE3
 11237                           fsr1h	equ	0xFE2
 11238                           fsr1l	equ	0xFE1
 11239                           bsr	equ	0xFE0
 11240                           indf2	equ	0xFDF
 11241                           postinc2	equ	0xFDE
 11242                           postdec2	equ	0xFDD
 11243                           preinc2	equ	0xFDC
 11244                           plusw2	equ	0xFDB
 11245                           fsr2h	equ	0xFDA
 11246                           fsr2l	equ	0xFD9
 11247                           status	equ	0xFD8

Data Sizes:
    Strings     255
    Constant    4
    Data        50
    BSS         102
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    126     126
    BANK0           128    108     128
    BANK1           256     53     185
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_42(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_42(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_37(CODE[4]), STR_36(CODE[4]), STR_33(CODE[4]), STR_32(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_37(CODE[4]), STR_36(CODE[4]), STR_33(CODE[4]), STR_32(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> ver_quantidade@y(BANK0[8]), esvaziar_tanque@y(BANK1[8]), encher_tanque@y(BANK1[8]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_28(CODE[5]), STR_22(CODE[5]), STR_12(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_28(CODE[5]), STR_22(CODE[5]), STR_12(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_28(CODE[5]), STR_22(CODE[5]), STR_12(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_28(CODE[5]), STR_22(CODE[5]), STR_12(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 8
		 -> ver_quantidade@y(BANK0[8]), esvaziar_tanque@y(BANK1[8]), encher_tanque@y(BANK1[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S637_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 8
		 -> ver_quantidade@y(BANK0[8]), esvaziar_tanque@y(BANK1[8]), encher_tanque@y(BANK1[8]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> ver_quantidade@y(BANK0[8]), esvaziar_tanque@y(BANK1[8]), encher_tanque@y(BANK1[8]), 

    ver_quantidade@vol	PTR  size(2) Largest target is 4
		 -> volume(BANK0[4]), 

    esvaziar_tanque@vol	PTR  size(2) Largest target is 4
		 -> volume(BANK0[4]), 

    encher_tanque@vol	PTR  size(2) Largest target is 4
		 -> volume(BANK0[4]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_31(CODE[9]), STR_30(CODE[3]), STR_29(CODE[8]), ver_quantidade@y(BANK0[8]), 
		 -> STR_27(CODE[13]), STR_26(CODE[13]), STR_25(CODE[9]), STR_24(CODE[14]), 
		 -> STR_23(CODE[3]), esvaziar_tanque@y(BANK1[8]), STR_21(CODE[11]), STR_20(CODE[14]), 
		 -> STR_19(CODE[11]), STR_18(CODE[11]), STR_17(CODE[13]), STR_16(CODE[13]), 
		 -> STR_15(CODE[9]), STR_14(CODE[12]), STR_13(CODE[3]), encher_tanque@y(BANK1[8]), 
		 -> STR_11(CODE[11]), STR_10(CODE[16]), STR_9(CODE[11]), STR_8(CODE[11]), 
		 -> STR_7(CODE[14]), STR_6(CODE[10]), STR_5(CODE[15]), STR_4(CODE[15]), 
		 -> STR_3(CODE[14]), STR_2(CODE[11]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_encher_tanque
    _main->_esvaziar_tanque
    _main->_ver_quantidade
    _lcd_init->_lcd_cmd
    _tc_tecla->_atraso_ms
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___fltol->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___flge->___fladd
    ___fldiv->___fladd
    _atoi->_isspace
    _pwmSet1->___lwdiv
    _lcd_str->_lcd_dat
    _lcd_dat->_atraso_ms
    _lcd_cmd->_atraso_ms

Critical Paths under _main in BANK0

    _main->_ver_quantidade
    _ver_quantidade->_sprintf
    _esvaziar_tanque->_sprintf
    _encher_tanque->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    _main->_encher_tanque

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  156716
                                            105 BANK0      3     3      0
                          _atraso_ms
                      _encher_tanque
                    _esvaziar_tanque
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                           _tc_tecla
                     _ver_quantidade
 ---------------------------------------------------------------------------------
 (1) _ver_quantidade                                      15    13      2   39253
                                            124 COMRAM     2     0      2
                                             92 BANK0     13    13      0
                            _lcd_cmd
                            _lcd_str
                            _sprintf
                           _tc_tecla
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    3360
                          _atraso_ms
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _esvaziar_tanque                                     41    39      2   47606
                                            124 COMRAM     2     0      2
                                              0 BANK1     39    39      0
                            ___fldiv
                            ___flsub
                            ___fltol
                          _atraso_ms
                            _lcd_cmd
                            _lcd_str
                            _sprintf
                           _tc_tecla
 ---------------------------------------------------------------------------------
 (1) _encher_tanque                                       59    57      2   56475
                                            124 COMRAM     2     0      2
                                             92 BANK0      4     4      0
                                              0 BANK1     53    53      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                             ___wmul
                           ___xxtofl
                          _atraso_ms
                            _lcd_cmd
                            _lcd_dat
                            _lcd_str
                            _pwmInit
                            _pwmSet1
                            _sprintf
                           _tc_tecla
 ---------------------------------------------------------------------------------
 (2) _tc_tecla                                             7     5      2    2402
                                              6 COMRAM     7     5      2
                          _atraso_ms
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   30761
                                             74 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   30100
                                            122 COMRAM     2     2      0
                                             68 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   29728
                                            112 COMRAM    10     4      6
                                             56 BANK0     12    12      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   23973
                                            100 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             80 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     533
                                             80 COMRAM    10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    3649
                                             55 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2870
                                             39 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2656
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     790
                                             55 COMRAM    12     4      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2311
                                             55 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1608
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _pwmSet1                                              5     5      0    1324
                                              7 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     767
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _pwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lcd_str                                              5     3      2    4148
                                              7 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (3) _lcd_dat                                              1     1      0    1702
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0    1702
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (4) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _atraso_ms                                            6     4      2    1658
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     702
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atraso_ms
   _encher_tanque
     ___awdiv
     ___awmod
     ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flge
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___wmul
     ___xxtofl
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_dat
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _pwmInit
     _pwmSet1
       ___lwdiv
       ___wmul
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
     _tc_tecla
       _atraso_ms
   _esvaziar_tanque
     ___fldiv
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flsub
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
     _tc_tecla
       _atraso_ms
   _lcd_cmd
     _atraso_ms
     _lcd_wr
   _lcd_init
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
   _lcd_str
     _lcd_dat
       _atraso_ms
       _lcd_wr
   _tc_tecla
     _atraso_ms
   _ver_quantidade
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
     _tc_tecla
       _atraso_ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     35      B9       7       72.3%
BITBANK0            80      0       0       4        0.0%
BANK0               80     6C      80       5      100.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7E      7E       1       99.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B7      15        0.0%
DATA                 0      0     1B7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Jul 05 14:48:30 2020

             ___fldiv@aexp 0050  esvaziar_tanque@decremento 0179               ___fldiv@bexp 004F  
                        _i 00F4               ___fldiv@sign 0048                         l60 5706  
                       l70 5786                         l62 56F0                         l72 576E  
                       l65 5746                         l90 4884                         l67 572E  
                       l77 57AE                         l87 5864                         l99 4326  
             ___awdiv@sign 0006        ___wmul@multiplicand 0003             encher_tanque@i 0188  
           encher_tanque@y 016C                        l110 43A0                        l104 4312  
                      l113 4690                        l107 4376                        l212 434C  
                      l205 4EA2                        l119 4970                        l129 4818  
                      l209 4EDA                        l192 5CEA                        l169 7348  
                      l443 4B8E                        l509 51E2                        l710 48F8  
                      l703 48F0                        l471 4A1A                        l456 4ACA  
                      l482 50DC                        l740 6B08                        l805 5F2A  
                      l477 5096                        l741 6AF6                        l830 64AE  
                      l486 4472                        l742 6ABC                        l807 5FA2  
                      l808 5F90                        l833 6340                        l826 614A  
                      l843 6470                        l835 63B8                        l931 4BD6  
                      l836 63A6                        l757 6C22                        l749 6DD8  
                      l870 569A                        l766 6CF2                        l782 4534  
                      l934 4C18                        l767 6CE0                        l936 4C54  
                      l881 5632                        l874 55D6                        l794 6084  
                      l954 7EF8                        l890 45D8                        l867 553E  
                      l796 5EE4                        l972 7736                        l799 5EA8  
                      l998 7ACE                        _pad 4B90               ___awmod@sign 0006  
                      wreg 000FE8            ?_ver_quantidade 007D            encher_tanque@t1 0186  
          encher_tanque@t2 018A               ___flmul@aexp 0020               ___flmul@bexp 0021  
              _tolower$921 000D               ___flmul@sign 001B               ___flmul@temp 0026  
             ___flmul@prod 0022       encher_tanque@numeros 0158               ___fltol@exp1 005A  
                     l1100 54E6                       l1106 5A76                       l1130 44AA  
                     l1051 6862                       l1116 443A                       l1124 4586  
                     l1044 6918                       l1109 59BA                       l1145 4D1E  
                     l1153 44EE                       l1057 474A                       l1162 4634  
                     l1058 4752                       l3100 6956                       l1068 4FD8  
                     l1156 4304                       l1172 4DF4                       l3110 6986  
                     l3102 6966                       l1182 46E8                       l3200 6B58  
                     l3120 69B0                       l3112 6998                       l3104 6968  
                     l1168 4402                       l4000 7854                       l1097 54DE  
                     l3210 6B86                       l3202 6B66                       l3122 69C0  
                     l3130 69EA                       l3114 699A                       l3106 6970  
                     l4010 793C                       l4002 785C                       l1187 46F0  
                     l3220 6BF2                       l3212 6B90                       l3204 6B72  
                     l3140 6A22                       l3132 69FA                       l3124 69D0  
                     l3116 69A0                       l3108 6980                       l3300 43CE  
                     l4100 7D42                       l4020 79FA                       l4012 7970  
                     l4004 786C                       l3222 6C02                       l3206 6B76  
                     l3214 6B96                       l3150 6A36                       l3142 6A26  
                     l3134 6A0C                       l3126 69E0                       l3118 69AE  
                     l3302 43DA                       l3310 4474                       l4110 7D82  
                     l4102 7D54                       l4030 7A96                       l4022 7A10  
                     l4006 7880                       l4014 7976                       l4200 54C2  
                     l3400 5ED2                       l3320 5CEC                       l3240 6C84  
                     l3232 6C5C                       l3216 6BBC                       l3224 6C12  
                     l3208 6B84                       l3160 6A4A                       l3152 6A3A  
                     l3144 6A2A                       l3136 6A1A                       l3128 69E2  
                     l3080 4C7A                       l3304 43DE                       l4120 7DCA  
                     l4112 7D8A                       l4104 7D5C                       l4040 7B4E  
                     l4032 7AA6                       l4024 7A42                       l4016 7994  
                     l4008 78E4                       l3314 4328                       l3410 5F1A  
                     l3402 5EE2                       l3330 5D28                       l3322 5CF8  
                     l3242 6C8C                       l3234 6C66                       l3226 6C38  
                     l3218 6BF0                       l3250 6CB0                       l3170 6A5E  
                     l3162 6A4E                       l3154 6A3E                       l3146 6A2E  
                     l3138 6A1E                       l3090 691A                       l3082 4C84  
                     l3306 43F6                       l4130 7E20                       l4122 7DE6  
                     l4114 7D92                       l4106 7D6C                       l4042 7B5E  
                     l4050 7B98                       l4034 7ABA                       l4026 7A52  
                     l4018 79C8                       l3316 4344                       l3420 5F5A  
                     l3412 5F28                       l3404 5EF4                       l3340 5D58  
                     l3332 5D38                       l3324 5D06                       l3500 618A  
                     l3260 6D02                       l3252 6CB4                       l3244 6C90  
                     l3236 6C74                       l3228 6C48                       l3180 6AD6  
                     l3172 6A88                       l3164 6A52                       l3156 6A42  
                     l3148 6A32                       l3092 6926                       l3084 4CA2  
                     l3076 4C56                       l4140 7E5C                       l4132 7E26  
                     l4124 7DEE                       l4116 7D9E                       l4108 7D74  
                     l4060 7BD2                       l4052 7BAA                       l4044 7B70  
                     l4036 7AC6                       l4028 7A62                       l4220 4DAA  
                     l4212 4D56                       l4300 6724                       l4230 47C6  
                     l3430 5FCC                       l3422 5F88                       l3406 5F0A  
                     l3414 5F3A                       l3350 5D8E                       l3342 5D5E  
                     l3334 5D3A                       l3326 5D08                       l3510 61DA  
                     l3502 6194                       l3270 6D68                       l3262 6D0E  
                     l3254 6CC2                       l3246 6CA0                       l3238 6C76  
                     l3190 6B16                       l3182 6ADA                       l3174 6AA4  
                     l3166 6A56                       l3158 6A46                       l3094 6934  
                     l3086 4CD8                       l3078 4C68                       l4150 7EAE  
                     l4142 7E62                       l4134 7E38                       l4118 7DA4  
                     l4126 7DF4                       l4062 7BDE                       l4054 7BB8  
                     l4070 7BFE                       l4046 7B82                       l4038 7AEA  
                     l4222 4DD2                       l4214 4D64                       l4206 4D20  
                     l4310 67EC                       l4240 47F2                       l4400 4374  
                     l3600 4AE6                       l3440 6044                       l3432 5FF6  
                     l3416 5F48                       l3408 5F10                       l3360 5DCE  
                     l3352 5D9E                       l3344 5D6C                       l3328 5D18  
                     l3336 5D42                       l3520 621C                       l3512 61E6  
                     l3504 61AA                       l3280 6DB0                       l3272 6D78  
                     l3264 6D1C                       l3256 6CD8                       l3248 6CA2  
                     l3192 6B26                       l3184 6AE8                       l3176 6AB4  
                     l3168 6A5A                       l3096 6936                       l4152 7EBA  
                     l4144 7E68                       l4136 7E44                       l4128 7E06  
                     l4080 7C84                       l4072 7C10                       l4064 7BEE  
                     l4056 7BC8                       l4048 7B90                       l4216 4D7C  
                     l4208 4D4A                       l4312 67FE                       l4320 6876  
                     l4304 6750                       l4234 47DA                       l4250 4802  
                     l4226 47B6                       l4402 48FA                       l4170 5374  
                     l3610 4B0C                       l3602 4AEA                       l3450 607A  
                     l3442 6060                       l3426 5FB2                       l3434 5FFA  
                     l3418 5F4C                       l3362 5DDE                       l3370 5DFE  
                     l3354 5DA0                       l3346 5D6E                       l3338 5D52  
                     l3530 627E                       l3522 622C                       l3514 61F4  
                     l3506 61B6                       l3282 6DB2                       l3274 6D98  
                     l3266 6D56                       l3186 6AEA                       l3178 6ACA  
                     l3098 6946                       l4154 7EC2                       l4138 7E4C  
                     l4090 7CFE                       l4082 7CB8                       l4074 7C22  
                     l4066 7BF2                       l4058 7BCC                       l4218 4D98  
                     l4322 689A                       l4330 68C8                       l4314 6832  
                     l4306 677E                       l4410 569C                       l4244 47F8  
                     l4236 47DE                       l4228 47C2                       l4252 430E  
                     l4404 4902                       l4180 53D0                       l4172 5390  
                     l4164 5358                       l3620 4B42                       l3612 4B1E  
                     l3604 4AF8                       l3444 6064                       l3436 6014  
                     l3428 5FBE                       l3380 5E3C                       l3372 5E0E  
                     l3364 5DE6                       l3348 5D7E                       l3356 5DA8  
                     l3700 5064                       l3540 6326                       l3532 629A  
                     l3524 6246                       l3516 6200                       l3508 61CE  
                     l3460 6092                       l3284 6DB8                       l3276 6D9C  
                     l3268 6D58                       l3196 6B3A                       l3188 6AF4  
                     l3292 44AC                       l4156 7ED2                       l4148 7E9C  
                     l4092 7D10                       l4084 7CC0                       l4076 7C26  
                     l4068 7BF8                       l4332 68D6                       l4324 68A8  
                     l4260 64F4                       l4500 4588                       l4420 56B4  
                     l4412 56A8                       l4350 4384                       l4406 4932  
                     l4182 53E6                       l4174 53C6                       l4166 536C  
                     l3622 4B58                       l3614 4B26                       l3630 4B6E  
                     l3606 4B00                       l3446 6072                       l3438 602A  
                     l3390 5E84                       l3382 5E4C                       l3374 5E0E  
                     l3366 5DEA                       l3358 5DB8                       l3702 5076  
                     l3550 6362                       l3542 6330                       l3534 62C4  
                     l3526 6256                       l3518 6210                       l3470 60D2  
                     l3462 60A0                       l3286 6DC6                       l3278 6DAA  
                     l3198 6B4A                       l3294 44B8                       l4158 7ED8  
                     l4094 7D1E                       l4078 7C2C                       l4086 7CC4  
                     l4326 68BC                       l4270 6556                       l4262 64F8  
                     l4254 64B0                       l4502 459A                       l4430 56FE  
                     l4422 56C8                       l4414 56B0                       l4520 5564  
                     l4512 54EA                       l4248 47FE                       l4352 4390  
                     l4344 437A                       l4408 4934                       l4360 488E  
                     l4192 5460                       l4184 53EE                       l4176 53CA  
                     l4168 5370                       l3632 4B7E                       l3624 4B60  
                     l3616 4B2E                       l3608 4B04                       l3640 4A20  
                     l3448 6078                       l3392 5E98                       l3384 5E5C  
                     l3704 5084                       l3560 63D4                       l3552 6370  
                     l3544 633E                       l3536 62FA                       l3528 6272  
                     l3480 6102                       l3472 60D8                       l3464 60A2  
                     l3712 443C                       l3288 6DC8                       l3720 50DE  
                     l3800 4F8C                       l3296 44CA                       l4096 7D2E  
                     l4088 7CE2                       l4280 6606                       l4272 6590  
                     l4264 651C                       l4256 64D4                       l4336 68E2  
                     l4504 45A2                       l4440 5754                       l4432 5714  
                     l4424 56D6                       l4600 4EBC                       l4530 55BE  
                     l4514 54FA                       l4354 4392                       l4346 437C  
                     l4370 48C4                       l4362 48A0                       l4186 53F6  
                     l3634 4B86                       l3626 4B62                       l3618 4B3C  
                     l3650 4A50                       l3642 4A2E                       l3394 5EA6  
                     l3386 5E6C                       l3378 5E22                       l3706 50D4  
                     l3570 643E                       l3562 63E2                       l3554 639E  
                     l3546 6350                       l3538 6308                       l3490 613A  
                     l3482 6104                       l3474 60E8                       l3466 60B2  
                     l3458 6086                       l3714 4452                       l3730 5134  
                     l3722 50F4                       l3298 44CE                       l3810 45EA  
                     l4098 7D32                       l4338 6906                       l4290 668C  
                     l4274 65B0                       l4266 6524                       l4282 6618  
                     l4258 64E2                       l4506 45AA                       l4450 57A0  
                     l4442 5760                       l4434 5720                       l4426 56E2  
                     l4610 6DF2                       l4602 4EC8                       l4540 5622  
                     l4532 55C0                       l4524 5578                       l4516 5508  
                     l4356 439E                       l4348 4382                       l4372 48DA  
                     l4364 48A8                       l4196 549E                       l4188 542A  
                     l3628 4B68                       l3660 4A96                       l3652 4A62  
                     l3644 4A36                       l3396 5EB2                       l3388 5E74  
                     l3708 50DA                       l3580 6494                       l3572 6458  
                     l3564 640C                       l3548 635E                       l3492 615A  
                     l3484 6114                       l3476 60EE                       l3468 60C2  
                     l3716 4462                       l3732 5144                       l3804 4FD0  
                     l3812 4692                       l4292 66BE                       l4284 663A  
                     l4276 65BE                       l4268 6532                       l4380 46F2  
                     l4508 45C6                       l4460 57DA                       l4700 720E  
                     l4620 6E20                       l4612 6E04                       l4550 567A  
                     l4542 5640                       l4534 55CC                       l4526 5580  
                     l4518 554E                       l4390 4352                       l4374 48E2  
                     l4366 48B0                       l4358 4886                       l4198 54B0  
                     l3670 4AC2                       l3662 4A9E                       l3654 4A6A  
                     l3646 4A3A                       l3638 4A1C                       l3398 5ED0  
                     l3574 6474                       l3582 649A                       l3558 63C8  
                     l3566 6410                       l3494 616A                       l3486 6124  
                     l3478 60F4                       l3590 4500                       l3742 516E  
                     l3734 5148                       l3726 5108                       l3830 58FE  
                     l3822 5866                       l3910 74B0                       l3902 7460  
                     l4294 66D0                       l4286 664A                       l4382 46FA  
                     l4470 5826                       l4454 57BC                       l4446 577C  
                     l4438 573C                       l4462 57EA                       l4710 7238  
                     l4702 7210                       l4630 6E88                       l4622 6E32  
                     l4614 6E0A                       l4606 6DDA                       ?_pad 0011  
                     l4552 5688                       l4544 5642                       l4536 5608  
                     l4528 558C                       l4392 4358                       l4376 48E4  
                     l4368 48BE                       l3664 4AA4                       l3656 4A72  
                     l3648 4A48                       l3680 49DE                       l3584 649E  
                     l3576 6484                       l3568 642A                       l3488 6134  
                     l3760 51D2                       l3752 5196                       l3744 5178  
                     l3736 5156                       l3728 5132                       l3840 5A1A  
                     l3824 5886                       l3808 45DA                       l3816 46C8  
                     l3920 7534                       l3904 7472                       l4296 66E6  
                     l4288 667C                       l4384 4708                       l4480 585E  
                     l4472 5836                       l4464 57F6                       l4448 5794  
                     l4456 57C6                       l4720 727C                       l4712 723A  
                     l4704 7212                       l4640 6EEC                       l4632 6EC0  
                     l4624 6E36                       l4616 6E14                       l4608 6DE6  
                     l4800 5C0E                       l4560 463A                       l4554 568A  
                     l4546 5646                       l4538 5614                       l4394 435A  
                     l4378 48EA                       l4490 485E                       l3850 4404  
                     l3594 4ACC                       l3658 4A80                       l3666 4AAA  
                     l3682 49EE                       l3674 4972                       l3690 4FDA  
                     l3578 6492                       l3498 617E                       l3754 51A2  
                     l3746 5182                       l3842 5A2E                       l3834 596E  
                     l3826 58DC                       l3770 4BC2                       l3818 46DA  
                     l3922 7546                       l3906 748E                       l3914 74D8  
                     l4298 66F4                       l4386 472E                       l4474 5846  
                     l4458 57D8                       l4466 57FE                       l4722 728E  
                     l4714 7252                       l4706 722A                       l4730 72AE  
                     l4650 6F88                       l4642 6EF2                       l4626 6E3C  
                     l4618 6E1C                       l4634 6EC4                       l4810 5C38  
                     l4802 5C14                       l4562 4646                       l4570 4E30  
                     l4548 566A                       l4396 4366                       l4388 4350  
                     l4492 4876                       l4484 481C                       l3860 457C  
                     l3596 4AD0                       l3668 4ABA                       l3684 4A12  
                     l3676 49A0                       l3692 5008                       l3588 44F0  
                     l3756 51B2                       l3844 5A56                       l3836 59AA  
                     l3828 58F0                       l3780 4C28                       l3772 4BCE  
                     l3764 4B90                       l3940 7602                       l3924 7562  
                     l3916 74FE                       l3932 757E                       l3908 74A6  
                     l4476 5848                       l4468 5814                       l4740 72DE  
                     l4732 72C2                       l4724 7294                       l4716 725E  
                     l4708 7236                       l4660 7026                       l4652 6F9A  
                     l4644 6F00                       l4636 6ED8                       l4628 6E50  
                     l4820 5C76                       l4812 5C40                       l4804 5C1A  
                     l4580 4E66                       l4572 4E3C                       l4564 4DF6  
                     l4900 52BE                       l4398 4368                       l4494 4314  
                     l4486 483A                       l3862 4580                       l3854 4536  
                     l3598 4ADE                       l3686 4A18                       l3678 49B0  
                     l3694 5018                       l3758 51C2                       l3790 4F3A  
                     l3846 5A66                       l3838 59DE                       l3782 4C3C  
                     l3774 4BE2                       l3766 4BA0                       l3942 7608  
                     l3950 76D0                       l3934 7598                       l3870 7364  
                     l4478 585A                       l4750 72FE                       l4742 72E0  
                     l4734 72D4                       l4726 72A0                       l4718 7274  
                     l4670 7066                       l4662 7032                       l4654 6F9C  
                     l4646 6F70                       l4638 6EE0                       l4830 5C90  
                     l4806 5C26                       l4558 4636                       l4590 4E7C  
                     l4582 4E6C                       l4574 4E48                       l4566 4E24  
                     l4496 4318                       l4488 4856                       l3856 453A  
                     l3696 5046                       l3792 4F62                       l3776 4BF6  
                     l3768 4BB4                       l3960 7710                       l3952 76E0  
                     l3944 7662                       l3880 73B0                       l3872 7372  
                     l4760 7328                       l4744 72E6                       l4736 72DA  
                     l4728 72AA                       l4680 7088                       l4672 7066  
                     l4664 703E                       l4752 730A                       l4648 6F7C  
                     l4656 6FA2                       l4840 5CB6                       l4832 5C9C  
                     l4824 5C82                       l4816 5C54                       l4808 5C2C  
                     l4592 4E82                       l4576 4E54                       l4568 4E2A  
                     l4920 532E                       l4912 52F6                       l4498 431C  
                     l3858 454E                       l3698 5056                       l3794 4F6E  
                     l3786 4EDC                       l3778 4BFA                       l3970 7754  
                     l3962 772A                       l3954 76E4                       l3946 7696  
                     l3938 75CE                       l3890 73F6                       l3882 73C2  
                     l3874 737A                       l3866 734A                       l4762 7334  
                     l4754 730E                       l4746 72EC                       l4738 72DC  
                     l4690 70C6                       l4682 7094                       l4674 7078  
                     l4666 704A                       l4658 6FF8                       l4842 5CC8  
                     l4834 5CA2                       l4826 5C84                       l4818 5C6A  
                     l4770 5A90                       l4594 4E9E                       l4578 4E5A  
                     l4914 530A                       l4906 52D4                       l4850 51E4  
                     l3788 4EFC                       l3972 7766                       l3980 77C4  
                     l3956 76F6                       l3964 7742                       l3948 769E  
                     l3892 73FA                       l3884 73D0                       l3876 739E  
                     l3868 7354                       l4764 7346                       l4756 7312  
                     l4748 72F8                       l4692 70E6                       l4684 709A  
                     l4676 707C                       l4668 705E                       l4844 5CCC  
                     l4828 5C8A                       l4836 5CAE                       l4780 5B00  
                     l4772 5AA2                       l4596 4EA6                       l4588 4E76  
                     l4924 533E                       l4908 52E6                       l4860 5210  
                     l4852 51F4                       l3798 4F7A                       l3990 7802  
                     l3982 77CC                       l3974 7782                       l3958 7708  
                     l3894 73FE                       l3886 73E2                       l3878 73A8  
                     l4758 7324                       l4694 71EA                       l4686 70A6  
                     l4678 7082                       l4846 5CD8                       l4838 5CB2  
                     l4790 5BA0                       l4782 5B0C                       l4774 5AA8  
                     l4766 5A78                       l4598 4EB8                       l4926 5344  
                     l4918 531A                       l4870 523A                       l4862 5216  
                     l4854 51F8                       l3992 7814                       l3984 77DE  
                     l3976 77B8                       l3888 73EE                       l3896 7404  
                     l4696 7200                       l4688 70AA                       l4792 5BAC  
                     l4784 5B18                       l4776 5AB4                       l4768 5A84  
                     l4880 526A                       l4872 5246                       l4864 5222  
                     l4856 51FE                       l3994 7822                       l3986 77F0  
                     l3978 77C0                       l3898 742A                       l4698 7208  
                     l4794 5BB8                       l4786 5B2E                       l4778 5AC6  
                     l4890 5294                       l4882 5270                       l4874 524C  
                     l4866 522E                       l4858 5204                       l3996 783A  
                     l3988 77FE                       l4796 5BF8                       l4788 5B72  
                     l4892 5298                       l4884 5276                       l4876 5258  
                     l4868 5234                       l4958 5414                       l3998 784C  
                     l4798 5C0A                       l4894 529C                       l4886 5282  
                     l4878 5264                       l4896 52AE                       l4888 5288  
                     l4898 52B2                       STR_1 7EFF                       STR_2 7FBD  
                     STR_3 7F68                       STR_4 7F2F                       STR_5 7F20  
                     STR_6 7FC8                       STR_7 7F5A                       STR_8 7F9C  
                     STR_9 7FB2                       u3000 6ACA                       u3001 6AC6  
                     u3010 6AE8                       u3011 6AE4                       u3100 6C38  
                     u3020 6B08                       u3101 6C34                       u3021 6B04  
                     u3110 6C48                       u3030 6B16                       u3111 6C44  
                     u3031 6B12                       u3200 6D1C                       u3120 6C74  
                     u3040 6B26                       u4000 51C2                       u3201 6D18  
                     u3121 6C70                       u3041 6B22                       u4001 51BE  
                     u3210 6D56                       u3130 6C84                       u3050 6B58  
                     u4010 4BA0                       u3211 6D52                       u3131 6C80  
                     u3051 6B54                       u4011 4B9C                       u3220 6D68  
                     u3140 6CA0                       u3060 6B66                       u4100 4FC6  
                     u4020 4BC2                       u3300 44A6                       u3221 6D64  
                     u3141 6C9C                       u3061 6B62                       u4101 4FC0  
                     u4021 4BBE                       u3310 5D06                       u3230 6D78  
                     u3150 6CB0                       u3070 6B84                       u4110 4FC8  
                     u4030 4C18                       u3311 5D02                       u3231 6D74  
                     u3151 6CAC                       u3071 6B80                       u4031 4C14  
                     u3400 5EA6                       u3320 5D18                       u3240 6D98  
                     u3160 6CC2                       u3080 6BBC                       u4040 4C28  
                     u4120 4622                       u5000 6556                       u3401 5EA2  
                     u3321 5D14                       u3241 6D94                       u3161 6CBE  
                     u3081 6BB8                       u4041 4C24                       u5001 6552  
                     u3410 5ED0                       u3330 5D28                       u3250 6DAA  
                     u3170 6CD8                       u3090 6C02                       u4050 4F1C  
                     u4210 596A                       u4130 4634                       u5010 65FE  
                     u3411 5ECC                       u3331 5D24                       u3251 6DA6  
                     u3171 6CD4                       u3091 6BFE                       u4211 5966  
                     u4131 4630                       u5011 65F8                       u4300 457C  
                     u3500 5FCC                       u3420 5EF4                       u3340 5D6C  
                     u3260 6DC6                       u3180 6CEE                       u4060 4F3A  
                     u4220 598E                       u4140 46C2                       u5100 67FE  
                     u5020 6600                       u4301 4578                       u3501 5FC8  
                     u3421 5EF0                       u3341 5D68                       u3261 6DC2  
                     u3181 6CEA                       u4061 4F36                       u4205 5912  
                     u4141 46BC                       u5101 67FA                       u3510 6014  
                     u3430 5F0A                       u3350 5D7E                       u3190 6D02  
                     u4070 4F62                       u4230 59AA                       u4206 591C  
                     u3270 44EE                       u4150 46C4                       u4310 7372  
                     u5110 689A                       u5030 6618                       u3511 6010  
                     u3431 5F06                       u3351 5D7A                       u3191 6CFE  
                     u4071 4F5E                       u4055 4F12                       u4231 59A6  
                     u4207 592C                       u3271 44EA                       u4127 4618  
                     u4311 736E                       u5111 6896                       u5031 6614  
                     u5120 48A0                       u3520 6044                       u3440 5F28  
                     u3360 5D8E                       u3600 615A                       u4080 4F8C  
                     u4240 59FE                       u3280 43F6                       u4160 46DA  
                     u4400 752C                       u4320 73C2                       u5040 664A  
                     u5200 56F0                       u5121 489C                       u3521 6040  
                     u3441 5F24                       u3361 5D8A                       u3601 6156  
                     u4081 4F88                       u4225 5984                       u3281 43F2  
                     u4161 46D6                       u4401 7526                       u4321 73BE  
                     u5041 6646                       u5201 56EC                       u5130 48BE  
                     u3530 6072                       u3450 5F48                       u3370 5DCE  
                     u3610 616A                       u4250 5A1A                       u4170 58AE  
                     u3290 44A4                       u4410 752E                       u4330 73D0  
                     u5050 668C                       u5210 56FE                       u5131 48BA  
                     u3531 606E                       u3451 5F44                       u3371 5DCA  
                     u3611 6166                       u4251 5A16                       u3291 449E  
                     u4331 73CC                       u5051 6688                       u5211 56FA  
                     u5140 48DA                       u3460 5F5A                       u3380 5E0E  
                     u3700 642A                       u3620 62E4                       u3540 60A0  
                     u2900 6956                       u4260 5A56                       u4180 58DC  
                     u4500 7766                       u4420 7546                       u4340 73E2  
                     u5060 66D0                       u5300 57BC                       u5220 5714  
                     u5141 48D6                       u3461 5F56                       u3381 5E0A  
                     u3701 6426                       u3541 609C                       u2901 6952  
                     u4261 5A52                       u4245 59F4                       u4181 58D8  
                     u4501 7762                       u4421 7542                       u4341 73DE  
                     u5061 66CC                       u5301 57B8                       u5221 5710  
                     u4270 4434                       u3470 5F88                       u3390 5E84  
                     u3710 6458                       u3630 633E                       u3550 60B2  
                     u2910 6998                       u4190 58FE                       u4510 7782  
                     u4430 75CA                       u4350 742A                       u5070 677E  
                     u5150 474A                       u5310 57EA                       u5230 572E  
                     u4271 442E                       u3471 5F84                       u3391 5E80  
                     u3711 6454                       u3631 633A                       u3551 60AE  
                     u2911 6994                       u4095 4F9E                       u4191 58FA  
                     u4175 58A4                       u4511 777E                       u4431 75C6  
                     u4351 7426                       u5071 677A                       u5151 4746  
                     u5311 57E6                       u5231 572A                       u5400 55BA  
                     u5160 492E                       u4280 4436                       u3800 4A48  
                     u3480 5F9E                       u3720 6492                       u3640 635E  
                     u3560 60C2                       u2920 69AE                       u2840 4C68  
                     u4600 79FA                       u4520 77B8                       u4440 765E  
                     u4360 7458                       u5080 67E4                       u5320 5814  
                     u5240 573C                       u5401 55B6                       u3801 4A44  
                     u3481 5F9A                       u3721 648E                       u3641 635A  
                     u3625 62DA                       u3561 60BE                       u2921 69AA  
                     u2841 4C64                       u4601 79F6                       u4521 77B4  
                     u4441 765A                       u4361 7452                       u5081 67DE  
                     u5321 5810                       u5241 5738                       u5410 5604  
                     u5170 4960                       u4290 454E                       u3730 4ADE  
                     u3810 4A62                       u3490 5FB2                       u3650 6370  
                     u3570 6102                       u2930 69C0                       u2850 4C7A  
                     u4610 7A42                       u4530 77DE                       u4450 76D0  
                     u4370 745A                       u5090 67E6                       u5330 5826  
                     u5250 5754                       u5411 5600                       u4291 454A  
                     u3731 4ADA                       u3811 4A5E                       u3491 5FAE  
                     u3651 636C                       u3571 60FE                       u2931 69BC  
                     u2851 4C76                       u4611 7A3E                       u4531 77DA  
                     u4451 76CC                       u5331 5822                       u5251 5750  
                     u5420 5622                       u5180 4970                       u3740 4AF8  
                     u3820 4A80                       u3900 5064                       u3660 639E  
                     u3580 6114                       u2940 69D0                       u2860 4CA2  
                     u4700 7C10                       u4620 7A52                       u4540 77F0  
                     u4460 76F6                       u4380 7472                       u5340 5836  
                     u5260 576E                       u5500 6ED8                       u5421 561E  
                     u5181 496C                       u3741 4AF4                       u3821 4A7C  
                     u3901 5060                       u3661 639A                       u3581 6110  
                     u2941 69CC                       u2861 4C9E                       u4701 7C0C  
                     u4621 7A4E                       u4541 77EC                       u4461 76F2  
                     u4381 746E                       u5341 5832                       u5261 576A  
                     u5501 6ED4                       u5430 5632                       u3750 4B1E  
                     u3830 4A96                       u3910 5084                       u3670 63B4  
                     u3590 6124                       u2950 6A0C                       u2870 4CD8  
                     u4710 7CE2                       u4630 7ABA                       u4550 77FE  
                     u4470 7708                       u4390 74FE                       u5350 5846  
                     u5270 577C                       u5190 56D6                       u5510 6F70  
                     u5431 562E                       u5167 4924                       u3751 4B1A  
                     u3831 4A92                       u3911 5080                       u3671 63B0  
                     u3591 6120                       u2951 6A08                       u2871 4CD4  
                     u4711 7CDE                       u4631 7AB6                       u4551 77FA  
                     u4471 7704                       u4391 74FA                       u5351 5842  
                     u5271 5778                       u5191 56D2                       u5511 6F6C  
                     u5440 5640                       u3760 4B3C                       u3840 4ABA  
                     u3920 50D4                       u3680 63C8                       u2960 6A1A  
                     u2880 6934                       u4800 7E96                       u4720 7CFE  
                     u4640 7B5E                       u4560 7814                       u4480 772A  
                     u5360 585A                       u5280 5794                       u5441 563C  
                     u5177 4956                       u3761 4B38                       u3841 4AB6  
                     u3921 50D0                       u3681 63C4                       u2961 6A16  
                     u2881 6930                       u4801 7E90                       u4721 7CFA  
                     u4641 7B5A                       u4561 7810                       u4481 7726  
                     u5361 5856                       u5281 5790                       u5521 7070  
                     u5601 5C02                       u5450 567A                       u5370 54FA  
                     u3770 4B58                       u3850 49A0                       u3690 63E2  
                     u3930 4452                       u2970 6A88                       u2890 6946  
                     u4810 7E98                       u4730 7D10                       u4650 7B70  
                     u4570 7822                       u4490 7750                       u5290 57AE  
                     u5530 7200                       u5610 5C50                       u5451 5676  
                     u5371 54F6                       u3771 4B54                       u3851 499C  
                     u3691 63DE                       u3931 444E                       u2971 6A84  
                     u2891 6942                       u4731 7D0C                       u4651 7B6C  
                     u4571 781E                       u4491 774C                       u5291 57AA  
                     u5531 71FC                       u5611 5C4C                       u5460 5688  
                     u5380 5508                       u3780 4B7E                       u3860 49DE  
                     u2980 6AA0                       u3940 50F4                       u4820 7EAE  
                     u4740 7D1E                       u4660 7B82                       u4580 784C  
                     u4900 4D4A                       u5540 7274                       u5620 5CEA  
                     u5461 5684                       u5381 5504                       u3781 4B7A  
                     u3861 49DA                       u2981 6A9A                       u3941 50F0  
                     u4821 7EAA                       u4741 7D1A                       u4661 7B7E  
                     u4581 7848                       u4901 4D46                       u5541 7270  
                     u5621 5CE6                       u5390 5564                       u4830 5390  
                     u3790 4A2E                       u3870 4A12                       u2990 6AA2  
                     u3950 5128                       u4750 7D54                       u4670 7B90  
                     u4590 7994                       u4910 4D7C                       u5550 728E  
                     u5470 4E9E                       u5630 52D0                       u5391 5560  
                     u4831 538C                       u3791 4A2A                       u3871 4A0E  
                     u4751 7D50                       u4671 7B8C                       u4591 7990  
                     u4911 4D78                       u5551 728A                       u5471 4E9A  
                     u5631 52CC                       u4840 53C6                       u3880 5008  
                     u3960 5156                       u4760 7D82                       u4680 7BAA  
                     u4920 4D98                       u5560 72C2                       u5480 4EDA  
                     u5640 52E6                       u4841 53C2                       u3881 5004  
                     u3961 5152                       u4761 7D7E                       u4681 7BA6  
                     u4921 4D94                       u5561 72BE                       u5481 4ED6  
                     u5641 52E2                       u4850 53E2                       u3890 5046  
                     u3970 516A                       u4770 7E06                       u4690 7BB8  
                     u4930 4DAA                       u5570 72D4                       u5490 6E50  
                     u5650 530A                       u4851 53DE                       u3891 5042  
                     u3971 5166                       u3955 511E                       u4771 7E02  
                     u4691 7BB4                       u4931 4DA6                       u5571 72D0  
                     u5491 6E4C                       u5651 5306                       u4860 5498  
                     u3980 5192                       u4780 7E20                       u4940 4DD2  
                     u5580 7346                       u5660 532E                       u4861 5492  
                     u3981 518E                       u4781 7E1C                       u4941 4DCE  
                     u5581 7342                       u5661 532A                       u4950 47D6  
                     u4870 549A                       u3990 51B2                       u4790 7E38  
                     u5590 5B00                       u4951 47D2                       u3991 51AE  
                     u4791 7E34                       u5591 5AFC                       u4960 47EE  
                     u4880 54B0                       u4961 47EA                       u4881 54AC  
                     u4970 4818                       u4890 54C2                       u4971 4814  
                     u4891 54BE                       u4980 64D4                       u4981 64D0  
                     u4990 651C                       u4991 6518                       _dbuf 0108  
                     _atoi 5358                       _main 51E4                       _prec 00F0  
                     _nout 00EC                       pad@i 0018                       pad@p 0015  
                     fsr0h 000FEA                       fsr1h 000FE2                       indf0 000FEF  
                     fsr2h 000FDA                       fsr0l 000FE9                       indf2 000FDF  
                     fsr1l 000FE1                       pad@w 001A                       fsr2l 000FD9  
            ___fpclassifyf 4EDC            ??_encher_tanque 00DC                       prodh 000FF4  
                     prodl 000FF3                       start 0000            ___fldiv@new_exp 0049  
         encher_tanque@num 017C           encher_tanque@opt 0178           encher_tanque@tmp 018C  
         encher_tanque@vol 007D               ___param_bank 000000      encher_tanque@porcento 0174  
    encher_tanque@potencia 0180                      ??_pad 0017              ___fltol@sign1 0059  
                    ?_atoi 0008            __end_of___fladd 6DDA                      ?_main 0001  
          __end_of___fldiv 6086            __end_of___awdiv 4B90            __end_of___flneg 4474  
                    STR_10 7F10                      STR_11 7FA7                      STR_12 7FE3  
                    STR_20 7F4C                      STR_21 7FA7                      STR_13 7FFB  
                    STR_30 7FFB                      STR_22 7FE3                      STR_14 7F90  
                    STR_23 7FFB                      STR_31 7F87                      STR_15 7FD2  
                    STR_40 7FF8                      STR_32 7FE8                      STR_16 7F76  
                    STR_24 7F3E                      STR_25 7FD2                      STR_33 7FF0  
                    STR_17 7F83                      STR_18 7F9C                      STR_26 7F76  
                    STR_42 7FF8                      STR_27 7F83                      STR_19 7FB2  
                    STR_28 7FE3                      STR_36 7FEC            __end_of___awmod 4ACC  
                    STR_37 7FF4                      STR_29 7FDB            __end_of___flmul 64B0  
          __end_of___flsub 4536            __end_of___fltol 51E4            ___awdiv@divisor 0003  
 __size_of_esvaziar_tanque 0274            __end_of___lwdiv 48FA            ___awdiv@counter 0005  
             vfpfcnvrt@fmt 0073           esvaziar_tanque@i 017D           esvaziar_tanque@y 016C  
          __end_of_lcd_dat 43A2            __end_of_lcd_cmd 4378            __end_of_lcd_str 4972  
                    _flags 00F2                      _linha 7EFB                      _fputc 4C56  
                    _fputs 44AC            __end_of_isdigit 443C                      atoi@n 0015  
                    pad@fp 0011                      atoi@s 0008                      _width 00EE  
                    _putch 4304            __end_of_isspace 4588            __end_of_isupper 44AC  
                    tablat 000FF5            __end_of_pwmSet1 4886            __end_of_pwmInit 4328  
        encher_tanque@F356 01A1                      plusw1 000FE3                      plusw2 000FDB  
                    status 000FD8            __end_of_sprintf 45DA             ?___fpclassifyf 0001  
          __end_of_tolower 46F2            __end_of_strncmp 4DF6            __initialization 4754  
             __end_of_atoi 54E8               __end_of_main 5358                     ??_atoi 000A  
                   ??_main 007F              __activetblptr 000002            tc_tecla@timeout 0007  
                   ?_fputc 0001                     ?_fputs 000A           ___awdiv@dividend 0001  
                   ?_putch 0001           __end_of___xxtofl 569C    encher_tanque@incremento 0182  
   esvaziar_tanque@numeros 0158               vfprintf@cfmt 007B           __end_of_lcd_init 4692  
                   ___flge 4FDA                     ___fleq 4972                  ??___fladd 0030  
                   ___wmul 4328                  ??___fldiv 0040                  ??___awdiv 0005  
                ??___flneg 0005                  ??___awmod 0005                  ??___flmul 0017  
                ??___flsub 0040                  ??___fltol 0055                     _efgtoa 734A  
                ??___lwdiv 0005                     _lcd_wr 430C                     _atraso 01B5  
                   _floorf 5866                     clear_0 479A                     clear_1 47A6  
         ___awdiv@quotient 0007            ___awmod@divisor 0003            ___awmod@counter 0005  
                   pad@buf 0013                  ??_lcd_dat 0007                  ??_lcd_cmd 0007  
         __end_of_tc_tecla 5866                     _strcpy 45DA                     _strlen 43CE  
                   _volume 00F6                  ??_lcd_str 000A                     fputc@c 0001  
                   fputs@c 000E                     fputs@i 000F                     fputs@s 000A  
                ??_isdigit 0003            ___fpclassifyf@e 0009            ___fpclassifyf@u 000B  
          ___fpclassifyf@x 0001               __mediumconst 7EFA                  ??_isspace 0003  
                   tblptrh 000FF7                  ??_isupper 0003                     tblptrl 000FF6  
                   tblptru 000FF8                  ??_pwmSet1 0008                  ??_pwmInit 0001  
                   putch@c 0001           __end_of_vfprintf 4754          ??_esvaziar_tanque 007F  
                ??_sprintf 007D                  ??_tolower 0009                  ??_strncmp 0007  
               ___flge@ff1 0038                 ___flge@ff2 003C            ??___fpclassifyf 0005  
             ___xxtofl@arg 000B         encher_tanque@i_150 017A               ___xxtofl@exp 000A  
             ___xxtofl@val 0001                 ___fleq@ff1 0001                 ___fleq@ff2 0005  
               __accesstop 0080    __end_of__initialization 47AC                 ___flneg@f1 0001  
            ___rparam_used 000001         encher_tanque@tempo 0184                 ___fltol@f1 0051  
           __pcstackCOMRAM 0001               __pidataBANK0 4306               __pidataBANK1 43A2  
            __end_of_linha 7EFF              __end_of_fputc 4D20              __end_of_fputs 44F0  
            __end_of_putch 4306           ??_ver_quantidade 007F                    ??_fputc 0005  
                  ??_fputs 000E         __size_of_atraso_ms 0064                    ??_putch 0001  
               __pbssBANK0 00EC                 __pbssBANK1 0100                tc_tecla@ret 000C  
              tc_tecla@tmp 000B                 _efgtoa$762 0084                 _efgtoa$763 0086  
               _efgtoa$772 008A                 _efgtoa$773 008C                 _efgtoa$774 008E  
               _efgtoa$768 0088                    ?___flge 0038                    ?___fleq 0001  
                  ?___wmul 0001                    ?_efgtoa 0065                    ?_lcd_wr 0001  
                  ?_floorf 0051                    ?_strcpy 0001                    ?_strlen 0001  
                ?___xxtofl 0001         __size_of_vfpfcnvrt 046A                  ?_lcd_init 0001  
               _atraso_min 01B7         esvaziar_tanque@opt 0176         esvaziar_tanque@tmp 0178  
       esvaziar_tanque@vol 007D                  ?_tc_tecla 0007                    __Hparam 0000  
                  __Lparam 0000      __end_of_encher_tanque 734A            __size_of___flge 0104  
          __size_of___fleq 00AA                    ___fladd 691A                    ___fldiv 5CEC  
                  ___awdiv 4ACC                    ___flneg 443C                    ___awmod 4A1C  
                  ___flmul 6086                    ___flsub 44F0                    ___fltol 50DE  
          __size_of___wmul 0026                    ___lwdiv 4886                  ?_vfprintf 00C4  
        __end_of_atraso_ms 481A            __size_of_efgtoa 0BB0            __size_of_lcd_wr 0008  
          __size_of_floorf 0212                    __pcinit 4754                    __ramtop 0600  
                  __ptext0 51E4                    __ptext1 4DF6                    __ptext2 4636  
                  __ptext3 5A78                    __ptext4 6DDA                    __ptext5 569C  
                  __ptext6 4588                    __ptext7 46F2                    __ptext8 64B0  
                  __ptext9 4D20                    _lcd_dat 4378                    _lcd_cmd 434E  
                  _lcd_str 48FA            __size_of_strcpy 005C            __size_of_strlen 0036  
             __size_of_pad 00C6                    _isdigit 4404                 ??___xxtofl 0005  
         ___awmod@dividend 0001                    _isspace 4536                    _isupper 4474  
                  efgtoa@c 006B                    efgtoa@d 0098                    efgtoa@e 00B0  
                  efgtoa@f 0067                    efgtoa@g 00AC                    efgtoa@h 00A2  
                  efgtoa@i 00AA                    efgtoa@l 00A6                    efgtoa@m 0094  
                  efgtoa@n 00B2                    efgtoa@p 009C                    efgtoa@t 0090  
                  efgtoa@u 00B4                    efgtoa@w 009F                    _pwmSet1 481A  
                  _pwmInit 4314                    atoi@neg 000E                    _sprintf 4588  
                  _tolower 4692                    main@opt 00EA                    main@tmp 00E9  
               ??_lcd_init 0008                    _strncmp 4D20       end_of_initialization 47AC  
                  floorf@e 005F                    floorf@m 005B                    floorf@u 0061  
                  floorf@x 0051                    fputc@fp 0003              __Lmediumconst 7EFA  
                  fputs@fp 000C                 ??_tc_tecla 0009          __end_of_vfpfcnvrt 691A  
               efgtoa@mode 00A1                 efgtoa@sign 009A                    postdec1 000FE5  
                  postdec2 000FDD                    postinc0 000FEE                    postinc1 000FE6  
                  postinc2 000FDE                 ??_vfprintf 007B                    strcpy@d 0009  
                  strlen@a 0003                    strcpy@s 0007                    strlen@s 0001  
          _esvaziar_tanque 5A78                ___fladd@grs 0037              ___xxtofl@sign 0009  
               lcd_dat@val 0007                 lcd_cmd@val 0007                ___fldiv@grs 004B  
              ___fldiv@rem 0044                ___flmul@grs 001C                 lcd_str@str 0008  
           __end_of___flge 50DE             __end_of___fleq 4A1C                 atraso_ms@i 0003  
               atraso_ms@j 0005                 atraso_ms@k 0006                 atraso_ms@t 0001  
              vfpfcnvrt@ap 0075                vfpfcnvrt@ct 00C0                vfpfcnvrt@fp 0071  
           __end_of___wmul 434E       esvaziar_tanque@tempo 0174             __end_of_efgtoa 7EFA  
           __end_of_lcd_wr 4314             __end_of_floorf 5A78                 floorf@F524 0100  
           __end_of_strcpy 4636             __end_of_strlen 4404        start_initialization 4754  
              __end_of_pad 4C56      __end_of___fpclassifyf 4FDA                vfprintf@fmt 00C6  
  __end_of_esvaziar_tanque 5CEC                   ??___flge 0040                   ??___fleq 0009  
                 ??___wmul 0005                   ??_efgtoa 006C                   ??_lcd_wr 0001  
              __pdataBANK0 00FA                __pdataBANK1 018D                   ??_floorf 0055  
                 ??_strcpy 0005                   ??_strlen 0003                  ___fladd@a 002C  
                ___fladd@b 0028                  ___fldiv@a 003C                  ___fldiv@b 0038  
                ___flmul@a 0013                  ___flmul@b 000F                  ___flsub@a 003C  
                ___flsub@b 0038              __pcstackBANK0 0080              __pcstackBANK1 0158  
        __size_of___xxtofl 01B4          __size_of_lcd_init 005C                 tc_tecla@to 0009  
         ___lwdiv@dividend 0001          __size_of_tc_tecla 01CA              __pmediumconst 7EFA  
                 ?___fladd 0028                   ?___fldiv 0038                   ?___awdiv 0001  
                 ?___flneg 0001                   ?___awmod 0001                   ?___flmul 000F  
                 ?___flsub 0038                   ?___fltol 0051                   ?___lwdiv 0001  
                 ?_lcd_dat 0001                   ?_lcd_cmd 0001          __size_of_vfprintf 0062  
                 ?_lcd_str 0008                  _atrasoMed 00FC                  _atrasoMax 00FA  
                _atrasoMin 00FE                  _atraso_ms 47B6                   ?_isdigit 0001  
          ver_quantidade@i 00E7            ver_quantidade@y 00DC                   ?_isspace 0001  
                 ?_isupper 0001                   ?_pwmSet1 0001                   ?_pwmInit 0001  
         ___lwdiv@quotient 0005                   ?_sprintf 00CA                   ?_tolower 0007  
  __size_of_ver_quantidade 00E6             __size_of_fputc 00CA             __size_of_fputs 0044  
                 ?_strncmp 0001             __size_of_putch 0002             ___wmul@product 0005  
         ?_esvaziar_tanque 007D                 pwmSet1@val 000B                  _vfpfcnvrt 64B0  
        ___wmul@multiplier 0001                 ?_atraso_ms 0001                  lcd_wr@val 0001  
      esvaziar_tanque@F342 018D     __size_of_encher_tanque 0570                 vfpfcnvrt@c 00C3  
               vfpfcnvrt@f 00BC                  copy_data0 4768                  copy_data1 4788  
        ver_quantidade@num 00E4          ver_quantidade@tmp 00E6          ver_quantidade@vol 007D  
                 __Hrparam 0000                 vfprintf@ap 00C8                   __Lrparam 0000  
               vfprintf@fp 00C4           __size_of___fladd 04C0           __size_of___fldiv 039A  
         __size_of___awdiv 00C4           __size_of___flneg 0038           __size_of___awmod 00B0  
         __size_of___flmul 042A           __size_of___flsub 0046           __size_of___fltol 0106  
               ?_vfpfcnvrt 0071           __size_of___lwdiv 0074            pwmSet1@porcento 000A  
       ___fpclassifyf@F463 0104           __size_of_lcd_dat 002A           __size_of_lcd_cmd 002A  
               sprintf@fmt 00CC           __size_of_lcd_str 0078                   ___xxtofl 54E8  
                 _atoi$826 0010                   _atoi$827 0014                   _atoi$828 0012  
                tc_tecla@i 000D           __size_of_isdigit 0038            ___lwdiv@divisor 0003  
         __size_of_isspace 0052            ___lwdiv@counter 0007                   __ptext10 734A  
                 __ptext11 4692                   __ptext20 4EDC                   __ptext12 4474  
                 __ptext21 50DE                   __ptext13 45DA                   __ptext30 4ACC  
                 __ptext22 44F0                   __ptext14 4B90                   __ptext31 5358  
                 __ptext23 691A                   __ptext15 43CE                   __ptext40 434E  
                 __ptext32 4536                   __ptext24 443C                   __ptext16 44AC  
                 __ptext41 430C                   __ptext33 4404                   __ptext25 6086  
                 __ptext17 4C56                   __ptext42 47B6                   __ptext34 481A  
                 __ptext26 4FDA                   __ptext18 4304                   __ptext43 54E8  
                 __ptext35 4328                   __ptext27 4972                   __ptext19 5866  
                 __ptext36 4886                   __ptext28 5CEC                   __ptext37 4314  
                 __ptext29 4A1C                   __ptext38 48FA                   __ptext39 4378  
         __size_of_isupper 0038           __size_of_pwmSet1 006C           __size_of_pwmInit 0014  
                 _lcd_init 4636           __size_of_sprintf 0052           __size_of_tolower 0060  
               strcpy@dest 0001           __size_of_strncmp 00D6              __size_of_atoi 0190  
            __size_of_main 0174                   _tc_tecla 569C                   efgtoa@fp 0065  
                 efgtoa@ne 0096                   efgtoa@pp 0092                   efgtoa@ou 0080  
            _encher_tanque 6DDA                   _vfprintf 46F2                   lcd_str@i 000C  
              _isspace$857 0007                ??_atraso_ms 0003                   isdigit@c 0001  
           _ver_quantidade 4DF6                  sprintf@ap 00D4                   isspace@c 0001  
                strcpy@src 0003                   isupper@c 0001                  strncmp@_l 0001  
                strncmp@_r 0003             ?_encher_tanque 007D                efgtoa@nmode 009E  
              ??_vfpfcnvrt 0077              _vfpfcnvrt$792 00BA              _vfpfcnvrt$788 00B8  
                 sprintf@f 00D6                   tolower@c 0007                   sprintf@s 00CA  
   __size_of___fpclassifyf 00FE     __end_of_ver_quantidade 4EDC                   strncmp@l 0008  
                 strncmp@n 0005                   strncmp@r 000A              ___fladd@signs 0034  
             ___fladd@aexp 0035               ___fladd@bexp 0036  



Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Jul 04 14:39:05 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58  0000                     
    59                           ; Version 2.20
    60                           ; Generated 09/04/2020 GMT
    61                           ; 
    62                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F4520 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     
    94                           	psect	idataBANK0
    95  003AFE                     __pidataBANK0:
    96                           	callstack 0
    97                           
    98                           ;initializer for encher_tanque@F342
    99  003AFE  003F               	dw	63
   100  003B00  0006               	dw	6
   101  003B02  005B               	dw	91
   102  003B04  004F               	dw	79
   103  003B06  0066               	dw	102
   104  003B08  006D               	dw	109
   105  003B0A  007D               	dw	125
   106  003B0C  0007               	dw	7
   107  003B0E  007F               	dw	127
   108  003B10  006F               	dw	111
   109                           
   110                           ;initializer for _atrasoMax
   111  003B12  03E8               	dw	1000
   112                           
   113                           ;initializer for _atrasoMed
   114  003B14  01F4               	dw	500
   115                           
   116                           ;initializer for _atrasoMin
   117  003B16  0014               	dw	20
   118                           
   119                           ;initializer for _atraso
   120  003B18  000F               	dw	15
   121                           
   122                           ;initializer for _atraso_min
   123  003B1A  0005               	dw	5
   124                           
   125                           	psect	idataBANK1
   126  003B1C                     __pidataBANK1:
   127                           	callstack 0
   128                           
   129                           ;initializer for esvaziar_tanque@F342
   130  003B1C  003F               	dw	63
   131  003B1E  0006               	dw	6
   132  003B20  005B               	dw	91
   133  003B22  004F               	dw	79
   134  003B24  0066               	dw	102
   135  003B26  006D               	dw	109
   136  003B28  007D               	dw	125
   137  003B2A  0007               	dw	7
   138  003B2C  007F               	dw	127
   139  003B2E  006F               	dw	111
   140                           
   141                           	psect	smallconst
   142  000600                     __psmallconst:
   143                           	callstack 0
   144  000600  00                 	db	0
   145  000601                     _linha:
   146                           	callstack 0
   147  000601  01                 	db	1
   148  000602  02                 	db	2
   149  000603  04                 	db	4
   150  000604  00                 	db	0
   151  000605                     __end_of_linha:
   152                           	callstack 0
   153  000605                     STR_5:
   154  000605  52                 	db	82	;'R'
   155  000606  42                 	db	66	;'B'
   156  000607  33                 	db	51	;'3'
   157  000608  2D                 	db	45
   158  000609  56                 	db	86	;'V'
   159  00060A  65                 	db	101	;'e'
   160  00060B  72                 	db	114	;'r'
   161  00060C  20                 	db	32
   162  00060D  52                 	db	82	;'R'
   163  00060E  42                 	db	66	;'B'
   164  00060F  34                 	db	52	;'4'
   165  000610  2D                 	db	45
   166  000611  45                 	db	69	;'E'
   167  000612  6E                 	db	110	;'n'
   168  000613  63                 	db	99	;'c'
   169  000614  68                 	db	104	;'h'
   170  000615  65                 	db	101	;'e'
   171  000616  72                 	db	114	;'r'
   172  000617  00                 	db	0
   173  000618                     STR_1:
   174  000618  41                 	db	65	;'A'
   175  000619  62                 	db	98	;'b'
   176  00061A  61                 	db	97	;'a'
   177  00061B  73                 	db	115	;'s'
   178  00061C  74                 	db	116	;'t'
   179  00061D  65                 	db	101	;'e'
   180  00061E  63                 	db	99	;'c'
   181  00061F  69                 	db	105	;'i'
   182  000620  6D                 	db	109	;'m'
   183  000621  65                 	db	101	;'e'
   184  000622  6E                 	db	110	;'n'
   185  000623  74                 	db	116	;'t'
   186  000624  6F                 	db	111	;'o'
   187  000625  20                 	db	32
   188  000626  64                 	db	100	;'d'
   189  000627  65                 	db	101	;'e'
   190  000628  00                 	db	0
   191  000629                     STR_9:
   192  000629  45                 	db	69	;'E'
   193  00062A  52                 	db	82	;'R'
   194  00062B  52                 	db	82	;'R'
   195  00062C  4F                 	db	79	;'O'
   196  00062D  3A                 	db	58	;':'
   197  00062E  20                 	db	32
   198  00062F  76                 	db	118	;'v'
   199  000630  6F                 	db	111	;'o'
   200  000631  6C                 	db	108	;'l'
   201  000632  20                 	db	32
   202  000633  3E                 	db	62	;'>'
   203  000634  20                 	db	32
   204  000635  4D                 	db	77	;'M'
   205  000636  41                 	db	65	;'A'
   206  000637  58                 	db	88	;'X'
   207  000638  00                 	db	0
   208  000639                     STR_4:
   209  000639  56                 	db	86	;'V'
   210  00063A  61                 	db	97	;'a'
   211  00063B  7A                 	db	122	;'z'
   212  00063C  61                 	db	97	;'a'
   213  00063D  6F                 	db	111	;'o'
   214  00063E  3A                 	db	58	;':'
   215  00063F  20                 	db	32
   216  000640  31                 	db	49	;'1'
   217  000641  2E                 	db	46
   218  000642  35                 	db	53	;'5'
   219  000643  20                 	db	32
   220  000644  4C                 	db	76	;'L'
   221  000645  2F                 	db	47
   222  000646  73                 	db	115	;'s'
   223  000647  00                 	db	0
   224  000648                     STR_27:
   225  000648  45                 	db	69	;'E'
   226  000649  73                 	db	115	;'s'
   227  00064A  76                 	db	118	;'v'
   228  00064B  61                 	db	97	;'a'
   229  00064C  7A                 	db	122	;'z'
   230  00064D  69                 	db	105	;'i'
   231  00064E  61                 	db	97	;'a'
   232  00064F  6E                 	db	110	;'n'
   233  000650  64                 	db	100	;'d'
   234  000651  6F                 	db	111	;'o'
   235  000652  2E                 	db	46
   236  000653  2E                 	db	46
   237  000654  2E                 	db	46
   238  000655  00                 	db	0
   239  000656                     STR_23:
   240  000656  45                 	db	69	;'E'
   241  000657  52                 	db	82	;'R'
   242  000658  52                 	db	82	;'R'
   243  000659  4F                 	db	79	;'O'
   244  00065A  3A                 	db	58	;':'
   245  00065B  20                 	db	32
   246  00065C  76                 	db	118	;'v'
   247  00065D  6F                 	db	111	;'o'
   248  00065E  6C                 	db	108	;'l'
   249  00065F  20                 	db	32
   250  000660  3C                 	db	60	;'<'
   251  000661  20                 	db	32
   252  000662  30                 	db	48	;'0'
   253  000663  00                 	db	0
   254  000664                     STR_16:
   255  000664  20                 	db	32
   256  000665  20                 	db	32
   257  000666  20                 	db	32
   258  000667  52                 	db	82	;'R'
   259  000668  42                 	db	66	;'B'
   260  000669  31                 	db	49	;'1'
   261  00066A  2D                 	db	45
   262  00066B  56                 	db	86	;'V'
   263  00066C  6F                 	db	111	;'o'
   264  00066D  6C                 	db	108	;'l'
   265  00066E  74                 	db	116	;'t'
   266  00066F  61                 	db	97	;'a'
   267  000670  72                 	db	114	;'r'
   268  000671  00                 	db	0
   269  000672                     STR_3:
   270  000672  56                 	db	86	;'V'
   271  000673  6F                 	db	111	;'o'
   272  000674  6C                 	db	108	;'l'
   273  000675  20                 	db	32
   274  000676  6D                 	db	109	;'m'
   275  000677  61                 	db	97	;'a'
   276  000678  78                 	db	120	;'x'
   277  000679  20                 	db	32
   278  00067A  3D                 	db	61	;'='
   279  00067B  20                 	db	32
   280  00067C  37                 	db	55	;'7'
   281  00067D  30                 	db	48	;'0'
   282  00067E  4C                 	db	76	;'L'
   283  00067F  00                 	db	0
   284  000680                     STR_15:
   285  000680  20                 	db	32
   286  000681  20                 	db	32
   287  000682  20                 	db	32
   288  000683  20                 	db	32
   289  000684  53                 	db	83	;'S'
   290  000685  55                 	db	85	;'U'
   291  000686  43                 	db	67	;'C'
   292  000687  45                 	db	69	;'E'
   293  000688  53                 	db	83	;'S'
   294  000689  53                 	db	83	;'S'
   295  00068A  4F                 	db	79	;'O'
   296  00068B  21                 	db	33
   297  00068C  00                 	db	0
   298  00068D                     STR_13:
   299  00068D  45                 	db	69	;'E'
   300  00068E  6E                 	db	110	;'n'
   301  00068F  63                 	db	99	;'c'
   302  000690  68                 	db	104	;'h'
   303  000691  65                 	db	101	;'e'
   304  000692  6E                 	db	110	;'n'
   305  000693  64                 	db	100	;'d'
   306  000694  6F                 	db	111	;'o'
   307  000695  2E                 	db	46
   308  000696  2E                 	db	46
   309  000697  2E                 	db	46
   310  000698  00                 	db	0
   311  000699                     STR_6:
   312  000699  52                 	db	82	;'R'
   313  00069A  42                 	db	66	;'B'
   314  00069B  35                 	db	53	;'5'
   315  00069C  2D                 	db	45
   316  00069D  52                 	db	82	;'R'
   317  00069E  65                 	db	101	;'e'
   318  00069F  74                 	db	116	;'t'
   319  0006A0  69                 	db	105	;'i'
   320  0006A1  72                 	db	114	;'r'
   321  0006A2  61                 	db	97	;'a'
   322  0006A3  72                 	db	114	;'r'
   323  0006A4  00                 	db	0
   324  0006A5                     STR_7:
   325  0006A5  51                 	db	81	;'Q'
   326  0006A6  75                 	db	117	;'u'
   327  0006A7  61                 	db	97	;'a'
   328  0006A8  6E                 	db	110	;'n'
   329  0006A9  74                 	db	116	;'t'
   330  0006AA  28                 	db	40
   331  0006AB  4C                 	db	76	;'L'
   332  0006AC  29                 	db	41
   333  0006AD  3A                 	db	58	;':'
   334  0006AE  20                 	db	32
   335  0006AF  00                 	db	0
   336  0006B0                     STR_8:
   337  0006B0  52                 	db	82	;'R'
   338  0006B1  42                 	db	66	;'B'
   339  0006B2  31                 	db	49	;'1'
   340  0006B3  2D                 	db	45
   341  0006B4  76                 	db	118	;'v'
   342  0006B5  6F                 	db	111	;'o'
   343  0006B6  6C                 	db	108	;'l'
   344  0006B7  74                 	db	116	;'t'
   345  0006B8  61                 	db	97	;'a'
   346  0006B9  72                 	db	114	;'r'
   347  0006BA  00                 	db	0
   348  0006BB                     STR_2:
   349  0006BB  20                 	db	32
   350  0006BC  20                 	db	32
   351  0006BD  20                 	db	32
   352  0006BE  20                 	db	32
   353  0006BF  20                 	db	32
   354  0006C0  20                 	db	32
   355  0006C1  61                 	db	97	;'a'
   356  0006C2  67                 	db	103	;'g'
   357  0006C3  75                 	db	117	;'u'
   358  0006C4  61                 	db	97	;'a'
   359  0006C5  00                 	db	0
   360  0006C6                     STR_14:
   361  0006C6  41                 	db	65	;'A'
   362  0006C7  67                 	db	103	;'g'
   363  0006C8  75                 	db	117	;'u'
   364  0006C9  61                 	db	97	;'a'
   365  0006CA  72                 	db	114	;'r'
   366  0006CB  64                 	db	100	;'d'
   367  0006CC  65                 	db	101	;'e'
   368  0006CD  21                 	db	33
   369  0006CE  00                 	db	0
   370  0006CF                     STR_18:
   371  0006CF  41                 	db	65	;'A'
   372  0006D0  74                 	db	116	;'t'
   373  0006D1  75                 	db	117	;'u'
   374  0006D2  61                 	db	97	;'a'
   375  0006D3  6C                 	db	108	;'l'
   376  0006D4  3A                 	db	58	;':'
   377  0006D5  20                 	db	32
   378  0006D6  00                 	db	0
   379  0006D7                     STR_11:
   380  0006D7  25                 	db	37
   381  0006D8  2E                 	db	46
   382  0006D9  31                 	db	49	;'1'
   383  0006DA  66                 	db	102	;'f'
   384  0006DB  00                 	db	0
   385  0006DC                     STR_31:
   386  0006DC  49                 	db	73	;'I'
   387  0006DD  4E                 	db	78	;'N'
   388  0006DE  46                 	db	70	;'F'
   389  0006DF  00                 	db	0
   390  0006E0                     STR_35:
   391  0006E0  4E                 	db	78	;'N'
   392  0006E1  41                 	db	65	;'A'
   393  0006E2  4E                 	db	78	;'N'
   394  0006E3  00                 	db	0
   395  0006E4                     STR_32:
   396  0006E4  69                 	db	105	;'i'
   397  0006E5  6E                 	db	110	;'n'
   398  0006E6  66                 	db	102	;'f'
   399  0006E7  00                 	db	0
   400  0006E8                     STR_36:
   401  0006E8  6E                 	db	110	;'n'
   402  0006E9  61                 	db	97	;'a'
   403  0006EA  6E                 	db	110	;'n'
   404  0006EB  00                 	db	0
   405  0006EC                     STR_39:
   406  0006EC  6C                 	db	108	;'l'
   407  0006ED  66                 	db	102	;'f'
   408  0006EE  00                 	db	0
   409  0006EF                     STR_12:
   410  0006EF  20                 	db	32
   411  0006F0  4C                 	db	76	;'L'
   412  0006F1  00                 	db	0
   413  0006F2  00                 	db	0	; dummy byte at the end
   414  0000                     
   415                           ; #config settings
   416                           
   417                           	psect	cinit
   418  00369C                     __pcinit:
   419                           	callstack 0
   420  00369C                     start_initialization:
   421                           	callstack 0
   422  00369C                     __initialization:
   423                           	callstack 0
   424                           
   425                           ; Initialize objects allocated to BANK1 (20 bytes)
   426                           ; load TBLPTR registers with __pidataBANK1
   427  00369C  0E1C               	movlw	low __pidataBANK1
   428  00369E  6EF6               	movwf	tblptrl,c
   429  0036A0  0E3B               	movlw	high __pidataBANK1
   430  0036A2  6EF7               	movwf	tblptrh,c
   431  0036A4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   432  0036A6  6EF8               	movwf	tblptru,c
   433  0036A8  EE01  F050         	lfsr	0,__pdataBANK1
   434  0036AC  EE10 F014          	lfsr	1,20
   435  0036B0                     copy_data0:
   436  0036B0  0009               	tblrd		*+
   437  0036B2  CFF5 FFEE          	movff	tablat,postinc0
   438  0036B6  50E5               	movf	postdec1,w,c
   439  0036B8  50E1               	movf	fsr1l,w,c
   440  0036BA  E1FA               	bnz	copy_data0
   441                           
   442                           ; Initialize objects allocated to BANK0 (30 bytes)
   443                           ; load TBLPTR registers with __pidataBANK0
   444  0036BC  0EFE               	movlw	low __pidataBANK0
   445  0036BE  6EF6               	movwf	tblptrl,c
   446  0036C0  0E3A               	movlw	high __pidataBANK0
   447  0036C2  6EF7               	movwf	tblptrh,c
   448  0036C4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   449  0036C6  6EF8               	movwf	tblptru,c
   450  0036C8  EE00  F0C8         	lfsr	0,__pdataBANK0
   451  0036CC  EE10 F01E          	lfsr	1,30
   452  0036D0                     copy_data1:
   453  0036D0  0009               	tblrd		*+
   454  0036D2  CFF5 FFEE          	movff	tablat,postinc0
   455  0036D6  50E5               	movf	postdec1,w,c
   456  0036D8  50E1               	movf	fsr1l,w,c
   457  0036DA  E1FA               	bnz	copy_data1
   458                           
   459                           ; Clear objects allocated to BANK1 (80 bytes)
   460  0036DC  EE01  F000         	lfsr	0,__pbssBANK1
   461  0036E0  0E50               	movlw	80
   462  0036E2                     clear_0:
   463  0036E2  6AEE               	clrf	postinc0,c
   464  0036E4  06E8               	decf	wreg,f,c
   465  0036E6  E1FD               	bnz	clear_0
   466                           
   467                           ; Clear objects allocated to BANK0 (22 bytes)
   468  0036E8  EE00  F0E6         	lfsr	0,__pbssBANK0
   469  0036EC  0E16               	movlw	22
   470  0036EE                     clear_1:
   471  0036EE  6AEE               	clrf	postinc0,c
   472  0036F0  06E8               	decf	wreg,f,c
   473  0036F2  E1FD               	bnz	clear_1
   474  0036F4                     end_of_initialization:
   475                           	callstack 0
   476  0036F4                     __end_of__initialization:
   477                           	callstack 0
   478  0036F4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   479  0036F6  6EF8               	movwf	tblptru,c
   480  0036F8  0100               	movlb	0
   481  0036FA  EF21  F015         	goto	_main	;jump to C main() function
   482                           
   483                           	psect	bssBANK0
   484  0000E6                     __pbssBANK0:
   485                           	callstack 0
   486  0000E6                     floorf@F524:
   487                           	callstack 0
   488  0000E6                     	ds	4
   489  0000EA                     ___fpclassifyf@F463:
   490                           	callstack 0
   491  0000EA                     	ds	4
   492  0000EE                     _nout:
   493                           	callstack 0
   494  0000EE                     	ds	2
   495  0000F0                     _width:
   496                           	callstack 0
   497  0000F0                     	ds	2
   498  0000F2                     _prec:
   499                           	callstack 0
   500  0000F2                     	ds	2
   501  0000F4                     _flags:
   502                           	callstack 0
   503  0000F4                     	ds	2
   504  0000F6                     _i:
   505                           	callstack 0
   506  0000F6                     	ds	2
   507  0000F8                     _volume:
   508                           	callstack 0
   509  0000F8                     	ds	4
   510                           
   511                           	psect	dataBANK0
   512  0000C8                     __pdataBANK0:
   513                           	callstack 0
   514  0000C8                     encher_tanque@F342:
   515                           	callstack 0
   516  0000C8                     	ds	20
   517  0000DC                     _atrasoMax:
   518                           	callstack 0
   519  0000DC                     	ds	2
   520  0000DE                     _atrasoMed:
   521                           	callstack 0
   522  0000DE                     	ds	2
   523  0000E0                     _atrasoMin:
   524                           	callstack 0
   525  0000E0                     	ds	2
   526  0000E2                     _atraso:
   527                           	callstack 0
   528  0000E2                     	ds	2
   529  0000E4                     _atraso_min:
   530                           	callstack 0
   531  0000E4                     	ds	2
   532                           
   533                           	psect	bssBANK1
   534  000100                     __pbssBANK1:
   535                           	callstack 0
   536  000100                     _dbuf:
   537                           	callstack 0
   538  000100                     	ds	80
   539                           
   540                           	psect	dataBANK1
   541  000150                     __pdataBANK1:
   542                           	callstack 0
   543  000150                     esvaziar_tanque@F342:
   544                           	callstack 0
   545  000150                     	ds	20
   546                           
   547                           	psect	cstackBANK0
   548  000080                     __pcstackBANK0:
   549                           	callstack 0
   550  000080                     _vfpfcnvrt$749:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x0
   554  000080                     	ds	2
   555  000082                     _vfpfcnvrt$753:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x2
   559  000082                     	ds	2
   560  000084                     vfpfcnvrt@f:
   561                           	callstack 0
   562                           
   563                           ; 4 bytes @ 0x4
   564  000084                     	ds	4
   565  000088                     vfpfcnvrt@ct:
   566                           	callstack 0
   567                           
   568                           ; 3 bytes @ 0x8
   569  000088                     	ds	3
   570  00008B                     vfpfcnvrt@c:
   571                           	callstack 0
   572                           
   573                           ; 1 bytes @ 0xB
   574  00008B                     	ds	1
   575  00008C                     ?_vfprintf:
   576                           	callstack 0
   577  00008C                     vfprintf@fp:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0xC
   581  00008C                     	ds	2
   582  00008E                     vfprintf@fmt:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0xE
   586  00008E                     	ds	2
   587  000090                     vfprintf@ap:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x10
   591  000090                     	ds	2
   592  000092                     ?_sprintf:
   593                           	callstack 0
   594  000092                     sprintf@s:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x12
   598  000092                     	ds	2
   599  000094                     sprintf@fmt:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x14
   603  000094                     	ds	8
   604  00009C                     sprintf@ap:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x1C
   608  00009C                     	ds	2
   609  00009E                     sprintf@f:
   610                           	callstack 0
   611                           
   612                           ; 6 bytes @ 0x1E
   613  00009E                     	ds	6
   614  0000A4                     ver_quantidade@y:
   615                           	callstack 0
   616  0000A4                     encher_tanque@numeros:
   617                           	callstack 0
   618  0000A4                     esvaziar_tanque@numeros:
   619                           	callstack 0
   620                           
   621                           ; 20 bytes @ 0x24
   622  0000A4                     	ds	8
   623  0000AC                     ver_quantidade@i:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0x2C
   627  0000AC                     	ds	12
   628  0000B8                     encher_tanque@y:
   629                           	callstack 0
   630  0000B8                     esvaziar_tanque@y:
   631                           	callstack 0
   632                           
   633                           ; 8 bytes @ 0x38
   634  0000B8                     	ds	8
   635  0000C0                     encher_tanque@tempo:
   636                           	callstack 0
   637  0000C0                     esvaziar_tanque@tempo:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x40
   641  0000C0                     	ds	2
   642  0000C2                     encher_tanque@incremento:
   643                           	callstack 0
   644  0000C2                     esvaziar_tanque@decremento:
   645                           	callstack 0
   646                           
   647                           ; 4 bytes @ 0x42
   648  0000C2                     	ds	4
   649  0000C6                     encher_tanque@i:
   650                           	callstack 0
   651  0000C6                     esvaziar_tanque@i:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x46
   655  0000C6                     	ds	2
   656                           
   657                           	psect	cstackCOMRAM
   658  000001                     __pcstackCOMRAM:
   659                           	callstack 0
   660  000001                     ?_strlen:
   661                           	callstack 0
   662  000001                     ?___fpclassifyf:
   663                           	callstack 0
   664  000001                     ?_isupper:
   665                           	callstack 0
   666  000001                     ?_isdigit:
   667                           	callstack 0
   668  000001                     ?_strncmp:
   669                           	callstack 0
   670  000001                     ?_isspace:
   671                           	callstack 0
   672  000001                     ?___wmul:
   673                           	callstack 0
   674  000001                     ?___awdiv:
   675                           	callstack 0
   676  000001                     ?___awmod:
   677                           	callstack 0
   678  000001                     ?___fladd:
   679                           	callstack 0
   680  000001                     ?___fldiv:
   681                           	callstack 0
   682  000001                     ?___flmul:
   683                           	callstack 0
   684  000001                     ?___flneg:
   685                           	callstack 0
   686  000001                     lcd_wr@val:
   687                           	callstack 0
   688  000001                     atraso_ms@t:
   689                           	callstack 0
   690  000001                     ___wmul@multiplier:
   691                           	callstack 0
   692  000001                     ___awdiv@dividend:
   693                           	callstack 0
   694  000001                     ___awmod@dividend:
   695                           	callstack 0
   696  000001                     isdigit@c:
   697                           	callstack 0
   698  000001                     isspace@c:
   699                           	callstack 0
   700  000001                     isupper@c:
   701                           	callstack 0
   702  000001                     fputc@c:
   703                           	callstack 0
   704  000001                     strcpy@dest:
   705                           	callstack 0
   706  000001                     strlen@s:
   707                           	callstack 0
   708  000001                     strncmp@_l:
   709                           	callstack 0
   710  000001                     ___fleq@ff1:
   711                           	callstack 0
   712  000001                     ___flneg@f1:
   713                           	callstack 0
   714  000001                     ___fladd@b:
   715                           	callstack 0
   716  000001                     ___fldiv@b:
   717                           	callstack 0
   718  000001                     ___flmul@b:
   719                           	callstack 0
   720  000001                     ___fpclassifyf@x:
   721                           	callstack 0
   722                           
   723                           ; 4 bytes @ 0x0
   724  000001                     	ds	2
   725  000003                     ??_isupper:
   726  000003                     ??_isdigit:
   727  000003                     ??_isspace:
   728  000003                     atraso_ms@i:
   729                           	callstack 0
   730  000003                     ___wmul@multiplicand:
   731                           	callstack 0
   732  000003                     ___awdiv@divisor:
   733                           	callstack 0
   734  000003                     ___awmod@divisor:
   735                           	callstack 0
   736  000003                     fputc@fp:
   737                           	callstack 0
   738  000003                     strcpy@src:
   739                           	callstack 0
   740  000003                     strlen@a:
   741                           	callstack 0
   742  000003                     strncmp@_r:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x2
   746  000003                     	ds	2
   747  000005                     ??_fputc:
   748  000005                     ??___fpclassifyf:
   749  000005                     ??_strcpy:
   750  000005                     atraso_ms@j:
   751                           	callstack 0
   752  000005                     ___awdiv@counter:
   753                           	callstack 0
   754  000005                     ___awmod@counter:
   755                           	callstack 0
   756  000005                     ___wmul@product:
   757                           	callstack 0
   758  000005                     strncmp@n:
   759                           	callstack 0
   760  000005                     ___fleq@ff2:
   761                           	callstack 0
   762  000005                     ___fladd@a:
   763                           	callstack 0
   764  000005                     ___fldiv@a:
   765                           	callstack 0
   766  000005                     ___flmul@a:
   767                           	callstack 0
   768                           
   769                           ; 4 bytes @ 0x4
   770  000005                     	ds	1
   771  000006                     atraso_ms@k:
   772                           	callstack 0
   773  000006                     ___awdiv@sign:
   774                           	callstack 0
   775  000006                     ___awmod@sign:
   776                           	callstack 0
   777                           
   778                           ; 1 bytes @ 0x5
   779  000006                     	ds	1
   780  000007                     ??_strncmp:
   781  000007                     ?_tolower:
   782                           	callstack 0
   783  000007                     lcd_cmd@val:
   784                           	callstack 0
   785  000007                     lcd_dat@val:
   786                           	callstack 0
   787  000007                     _isspace$818:
   788                           	callstack 0
   789  000007                     ___awdiv@quotient:
   790                           	callstack 0
   791  000007                     strcpy@s:
   792                           	callstack 0
   793  000007                     tolower@c:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0x6
   797  000007                     	ds	1
   798  000008                     ?_atoi:
   799                           	callstack 0
   800  000008                     lcd_str@str:
   801                           	callstack 0
   802  000008                     atoi@s:
   803                           	callstack 0
   804  000008                     strncmp@l:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0x7
   808  000008                     	ds	1
   809  000009                     ??___fladd:
   810  000009                     ??___fldiv:
   811  000009                     ??___flmul:
   812  000009                     ??_tolower:
   813  000009                     ??___fleq:
   814  000009                     ___fpclassifyf@e:
   815                           	callstack 0
   816  000009                     strcpy@d:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x8
   820  000009                     	ds	1
   821  00000A                     ??_atoi:
   822  00000A                     ??_lcd_str:
   823  00000A                     fputs@s:
   824                           	callstack 0
   825  00000A                     strncmp@r:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x9
   829  00000A                     	ds	1
   830  00000B                     ___fpclassifyf@u:
   831                           	callstack 0
   832                           
   833                           ; 4 bytes @ 0xA
   834  00000B                     	ds	1
   835  00000C                     lcd_str@i:
   836                           	callstack 0
   837  00000C                     fputs@fp:
   838                           	callstack 0
   839                           
   840                           ; 2 bytes @ 0xB
   841  00000C                     	ds	1
   842  00000D                     ___fladd@signs:
   843                           	callstack 0
   844  00000D                     ___flmul@sign:
   845                           	callstack 0
   846  00000D                     _tolower$882:
   847                           	callstack 0
   848  00000D                     ___fldiv@rem:
   849                           	callstack 0
   850                           
   851                           ; 4 bytes @ 0xC
   852  00000D                     	ds	1
   853  00000E                     ___fladd@aexp:
   854                           	callstack 0
   855  00000E                     fputs@c:
   856                           	callstack 0
   857  00000E                     atoi@neg:
   858                           	callstack 0
   859  00000E                     ___flmul@grs:
   860                           	callstack 0
   861                           
   862                           ; 4 bytes @ 0xD
   863  00000E                     	ds	1
   864  00000F                     ___fladd@bexp:
   865                           	callstack 0
   866  00000F                     fputs@i:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0xE
   870  00000F                     	ds	1
   871  000010                     ___fladd@grs:
   872                           	callstack 0
   873  000010                     _atoi$787:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0xF
   877  000010                     	ds	1
   878  000011                     ?_pad:
   879                           	callstack 0
   880  000011                     ___fldiv@sign:
   881                           	callstack 0
   882  000011                     pad@fp:
   883                           	callstack 0
   884                           
   885                           ; 2 bytes @ 0x10
   886  000011                     	ds	1
   887  000012                     ___flmul@aexp:
   888                           	callstack 0
   889  000012                     ___fldiv@new_exp:
   890                           	callstack 0
   891  000012                     _atoi$789:
   892                           	callstack 0
   893                           
   894                           ; 2 bytes @ 0x11
   895  000012                     	ds	1
   896  000013                     ___flmul@bexp:
   897                           	callstack 0
   898  000013                     pad@buf:
   899                           	callstack 0
   900                           
   901                           ; 2 bytes @ 0x12
   902  000013                     	ds	1
   903  000014                     _atoi$788:
   904                           	callstack 0
   905  000014                     ___fldiv@grs:
   906                           	callstack 0
   907  000014                     ___flmul@prod:
   908                           	callstack 0
   909                           
   910                           ; 4 bytes @ 0x13
   911  000014                     	ds	1
   912  000015                     pad@p:
   913                           	callstack 0
   914  000015                     atoi@n:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x14
   918  000015                     	ds	2
   919  000017                     ??_pad:
   920                           
   921                           ; 1 bytes @ 0x16
   922  000017                     	ds	1
   923  000018                     ___fldiv@bexp:
   924                           	callstack 0
   925  000018                     ___flmul@temp:
   926                           	callstack 0
   927  000018                     pad@i:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0x17
   931  000018                     	ds	1
   932  000019                     ___fldiv@aexp:
   933                           	callstack 0
   934                           
   935                           ; 1 bytes @ 0x18
   936  000019                     	ds	1
   937  00001A                     ?___flsub:
   938                           	callstack 0
   939  00001A                     ?_floorf:
   940                           	callstack 0
   941  00001A                     ?___fltol:
   942                           	callstack 0
   943  00001A                     pad@w:
   944                           	callstack 0
   945  00001A                     ___flge@ff1:
   946                           	callstack 0
   947  00001A                     ___fltol@f1:
   948                           	callstack 0
   949  00001A                     ___flsub@b:
   950                           	callstack 0
   951  00001A                     floorf@x:
   952                           	callstack 0
   953                           
   954                           ; 4 bytes @ 0x19
   955  00001A                     	ds	4
   956  00001E                     ??_floorf:
   957  00001E                     ??___fltol:
   958  00001E                     ___flge@ff2:
   959                           	callstack 0
   960  00001E                     ___flsub@a:
   961                           	callstack 0
   962                           
   963                           ; 4 bytes @ 0x1D
   964  00001E                     	ds	4
   965  000022                     ??___flge:
   966  000022                     ___fltol@sign1:
   967                           	callstack 0
   968                           
   969                           ; 1 bytes @ 0x21
   970  000022                     	ds	1
   971  000023                     ___fltol@exp1:
   972                           	callstack 0
   973                           
   974                           ; 1 bytes @ 0x22
   975  000023                     	ds	1
   976  000024                     floorf@m:
   977                           	callstack 0
   978                           
   979                           ; 4 bytes @ 0x23
   980  000024                     	ds	4
   981  000028                     floorf@e:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0x27
   985  000028                     	ds	2
   986  00002A                     floorf@u:
   987                           	callstack 0
   988                           
   989                           ; 4 bytes @ 0x29
   990  00002A                     	ds	4
   991  00002E                     ?_efgtoa:
   992                           	callstack 0
   993  00002E                     efgtoa@fp:
   994                           	callstack 0
   995                           
   996                           ; 2 bytes @ 0x2D
   997  00002E                     	ds	2
   998  000030                     efgtoa@f:
   999                           	callstack 0
  1000                           
  1001                           ; 4 bytes @ 0x2F
  1002  000030                     	ds	4
  1003  000034                     efgtoa@c:
  1004                           	callstack 0
  1005                           
  1006                           ; 1 bytes @ 0x33
  1007  000034                     	ds	1
  1008  000035                     ??_efgtoa:
  1009                           
  1010                           ; 1 bytes @ 0x34
  1011  000035                     	ds	5
  1012  00003A                     efgtoa@ou:
  1013                           	callstack 0
  1014                           
  1015                           ; 4 bytes @ 0x39
  1016  00003A                     	ds	4
  1017  00003E                     _efgtoa$723:
  1018                           	callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x3D
  1021  00003E                     	ds	2
  1022  000040                     _efgtoa$724:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x3F
  1026  000040                     	ds	2
  1027  000042                     _efgtoa$729:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x41
  1031  000042                     	ds	2
  1032  000044                     _efgtoa$733:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x43
  1036  000044                     	ds	2
  1037  000046                     _efgtoa$734:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0x45
  1041  000046                     	ds	2
  1042  000048                     _efgtoa$735:
  1043                           	callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x47
  1046  000048                     	ds	2
  1047  00004A                     efgtoa@t:
  1048                           	callstack 0
  1049                           
  1050                           ; 2 bytes @ 0x49
  1051  00004A                     	ds	2
  1052  00004C                     efgtoa@pp:
  1053                           	callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x4B
  1056  00004C                     	ds	2
  1057  00004E                     efgtoa@m:
  1058                           	callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x4D
  1061  00004E                     	ds	2
  1062  000050                     efgtoa@ne:
  1063                           	callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x4F
  1066  000050                     	ds	2
  1067  000052                     efgtoa@d:
  1068                           	callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x51
  1071  000052                     	ds	2
  1072  000054                     efgtoa@sign:
  1073                           	callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x53
  1076  000054                     	ds	2
  1077  000056                     efgtoa@p:
  1078                           	callstack 0
  1079                           
  1080                           ; 2 bytes @ 0x55
  1081  000056                     	ds	2
  1082  000058                     efgtoa@nmode:
  1083                           	callstack 0
  1084                           
  1085                           ; 1 bytes @ 0x57
  1086  000058                     	ds	1
  1087  000059                     efgtoa@w:
  1088                           	callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x58
  1091  000059                     	ds	2
  1092  00005B                     efgtoa@mode:
  1093                           	callstack 0
  1094                           
  1095                           ; 1 bytes @ 0x5A
  1096  00005B                     	ds	1
  1097  00005C                     efgtoa@h:
  1098                           	callstack 0
  1099                           
  1100                           ; 4 bytes @ 0x5B
  1101  00005C                     	ds	4
  1102  000060                     efgtoa@l:
  1103                           	callstack 0
  1104                           
  1105                           ; 4 bytes @ 0x5F
  1106  000060                     	ds	4
  1107  000064                     efgtoa@i:
  1108                           	callstack 0
  1109                           
  1110                           ; 2 bytes @ 0x63
  1111  000064                     	ds	2
  1112  000066                     efgtoa@g:
  1113                           	callstack 0
  1114                           
  1115                           ; 4 bytes @ 0x65
  1116  000066                     	ds	4
  1117  00006A                     efgtoa@e:
  1118                           	callstack 0
  1119                           
  1120                           ; 2 bytes @ 0x69
  1121  00006A                     	ds	2
  1122  00006C                     efgtoa@n:
  1123                           	callstack 0
  1124                           
  1125                           ; 2 bytes @ 0x6B
  1126  00006C                     	ds	2
  1127  00006E                     efgtoa@u:
  1128                           	callstack 0
  1129                           
  1130                           ; 4 bytes @ 0x6D
  1131  00006E                     	ds	4
  1132  000072                     ?_vfpfcnvrt:
  1133                           	callstack 0
  1134  000072                     vfpfcnvrt@fp:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x71
  1138  000072                     	ds	2
  1139  000074                     vfpfcnvrt@fmt:
  1140                           	callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x73
  1143  000074                     	ds	2
  1144  000076                     vfpfcnvrt@ap:
  1145                           	callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x75
  1148  000076                     	ds	2
  1149  000078                     ??_vfpfcnvrt:
  1150                           
  1151                           ; 1 bytes @ 0x77
  1152  000078                     	ds	4
  1153  00007C                     vfprintf@cfmt:
  1154                           	callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x7B
  1157  00007C                     	ds	2
  1158  00007E                     encher_tanque@vol:
  1159                           	callstack 0
  1160  00007E                     ver_quantidade@vol:
  1161                           	callstack 0
  1162  00007E                     esvaziar_tanque@vol:
  1163                           	callstack 0
  1164                           
  1165                           ; 2 bytes @ 0x7D
  1166  00007E                     	ds	2
  1167  000080                     
  1168                           ; 1 bytes @ 0x7F
  1169 ;;
  1170 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1171 ;;
  1172 ;; *************** function _main *****************
  1173 ;; Defined at:
  1174 ;;		line 16 in file "main.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;		None
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;		None
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  1    wreg      void 
  1181 ;; Registers used:
  1182 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1188 ;;      Params:         0       0       0       0       0       0       0
  1189 ;;      Locals:         0       0       0       0       0       0       0
  1190 ;;      Temps:          0       0       0       0       0       0       0
  1191 ;;      Totals:         0       0       0       0       0       0       0
  1192 ;;Total ram usage:        0 bytes
  1193 ;; Hardware stack levels required when called:    9
  1194 ;; This function calls:
  1195 ;;		_atraso_ms
  1196 ;;		_encher_tanque
  1197 ;;		_esvaziar_tanque
  1198 ;;		_lcd_cmd
  1199 ;;		_lcd_init
  1200 ;;		_lcd_str
  1201 ;;		_ver_quantidade
  1202 ;; This function is called by:
  1203 ;;		Startup code after reset
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207                           	psect	text0
  1208  002A42                     __ptext0:
  1209                           	callstack 0
  1210  002A42                     _main:
  1211                           	callstack 22
  1212  002A42                     
  1213                           ;main.c: 18:     (*(volatile __near unsigned char*)0xFC1) = 0x06;
  1214  002A42  0E06               	movlw	6
  1215  002A44  6EC1               	movwf	193,c	;volatile
  1216                           
  1217                           ;main.c: 19:     (*(volatile __near unsigned char*)0xF93) = 0x01;
  1218  002A46  0E01               	movlw	1
  1219  002A48  6E93               	movwf	147,c	;volatile
  1220                           
  1221                           ;main.c: 20:     (*(volatile __near unsigned char*)0xF95) = 0x00;
  1222  002A4A  0E00               	movlw	0
  1223  002A4C  6E95               	movwf	149,c	;volatile
  1224                           
  1225                           ;main.c: 21:     (*(volatile __near unsigned char*)0xF96) = 0x00;
  1226  002A4E  0E00               	movlw	0
  1227  002A50  6E96               	movwf	150,c	;volatile
  1228  002A52                     
  1229                           ;main.c: 23:     lcd_init();
  1230  002A52  ECE0  F01B         	call	_lcd_init	;wreg free
  1231  002A56                     
  1232                           ;main.c: 26:     lcd_cmd(0x01);
  1233  002A56  0E01               	movlw	1
  1234  002A58  EC57  F01D         	call	_lcd_cmd
  1235  002A5C                     
  1236                           ;main.c: 27:     lcd_cmd(0x80);
  1237  002A5C  0E80               	movlw	128
  1238  002A5E  EC57  F01D         	call	_lcd_cmd
  1239  002A62                     
  1240                           ;main.c: 28:     lcd_str("Abastecimento de");
  1241  002A62  0E18               	movlw	low STR_1
  1242  002A64  6E08               	movwf	lcd_str@str^0,c
  1243  002A66  0E06               	movlw	high STR_1
  1244  002A68  6E09               	movwf	(lcd_str@str+1)^0,c
  1245  002A6A  ECE0  F01A         	call	_lcd_str	;wreg free
  1246  002A6E                     
  1247                           ;main.c: 29:     lcd_cmd(0xC0);
  1248  002A6E  0EC0               	movlw	192
  1249  002A70  EC57  F01D         	call	_lcd_cmd
  1250  002A74                     
  1251                           ;main.c: 30:     lcd_str("      agua");
  1252  002A74  0EBB               	movlw	low STR_2
  1253  002A76  6E08               	movwf	lcd_str@str^0,c
  1254  002A78  0E06               	movlw	high STR_2
  1255  002A7A  6E09               	movwf	(lcd_str@str+1)^0,c
  1256  002A7C  ECE0  F01A         	call	_lcd_str	;wreg free
  1257  002A80                     
  1258                           ;main.c: 31:     atraso_ms(1000);
  1259  002A80  0E03               	movlw	3
  1260  002A82  6E02               	movwf	(atraso_ms@t+1)^0,c
  1261  002A84  0EE8               	movlw	232
  1262  002A86  6E01               	movwf	atraso_ms@t^0,c
  1263  002A88  EC1C  F01B         	call	_atraso_ms	;wreg free
  1264  002A8C                     
  1265                           ;main.c: 32:     lcd_cmd(0x01);
  1266  002A8C  0E01               	movlw	1
  1267  002A8E  EC57  F01D         	call	_lcd_cmd
  1268  002A92                     
  1269                           ;main.c: 35:     lcd_cmd(0x80);
  1270  002A92  0E80               	movlw	128
  1271  002A94  EC57  F01D         	call	_lcd_cmd
  1272  002A98                     
  1273                           ;main.c: 36:     lcd_str("Vol max = 70L");
  1274  002A98  0E72               	movlw	low STR_3
  1275  002A9A  6E08               	movwf	lcd_str@str^0,c
  1276  002A9C  0E06               	movlw	high STR_3
  1277  002A9E  6E09               	movwf	(lcd_str@str+1)^0,c
  1278  002AA0  ECE0  F01A         	call	_lcd_str	;wreg free
  1279  002AA4                     
  1280                           ;main.c: 37:     lcd_cmd(0xC0);
  1281  002AA4  0EC0               	movlw	192
  1282  002AA6  EC57  F01D         	call	_lcd_cmd
  1283  002AAA                     
  1284                           ;main.c: 38:     lcd_str("Vazao: 1.5 L/s");
  1285  002AAA  0E39               	movlw	low STR_4
  1286  002AAC  6E08               	movwf	lcd_str@str^0,c
  1287  002AAE  0E06               	movlw	high STR_4
  1288  002AB0  6E09               	movwf	(lcd_str@str+1)^0,c
  1289  002AB2  ECE0  F01A         	call	_lcd_str	;wreg free
  1290  002AB6                     
  1291                           ;main.c: 39:     atraso_ms(2000);
  1292  002AB6  0E07               	movlw	7
  1293  002AB8  6E02               	movwf	(atraso_ms@t+1)^0,c
  1294  002ABA  0ED0               	movlw	208
  1295  002ABC  6E01               	movwf	atraso_ms@t^0,c
  1296  002ABE  EC1C  F01B         	call	_atraso_ms	;wreg free
  1297  002AC2                     
  1298                           ;main.c: 40:     lcd_cmd(0x01);
  1299  002AC2  0E01               	movlw	1
  1300  002AC4  EC57  F01D         	call	_lcd_cmd
  1301  002AC8                     l4496:
  1302                           
  1303                           ;main.c: 44:     lcd_cmd(0x01);
  1304  002AC8  0E01               	movlw	1
  1305  002ACA  EC57  F01D         	call	_lcd_cmd
  1306  002ACE                     
  1307                           ;main.c: 45:     lcd_cmd(0x80);
  1308  002ACE  0E80               	movlw	128
  1309  002AD0  EC57  F01D         	call	_lcd_cmd
  1310  002AD4                     
  1311                           ;main.c: 46:     lcd_str("RB3-Ver RB4-Encher");
  1312  002AD4  0E05               	movlw	low STR_5
  1313  002AD6  6E08               	movwf	lcd_str@str^0,c
  1314  002AD8  0E06               	movlw	high STR_5
  1315  002ADA  6E09               	movwf	(lcd_str@str+1)^0,c
  1316  002ADC  ECE0  F01A         	call	_lcd_str	;wreg free
  1317  002AE0                     
  1318                           ;main.c: 47:     lcd_cmd(0xC0);
  1319  002AE0  0EC0               	movlw	192
  1320  002AE2  EC57  F01D         	call	_lcd_cmd
  1321  002AE6                     
  1322                           ;main.c: 48:     lcd_str("RB5-Retirar");
  1323  002AE6  0E99               	movlw	low STR_6
  1324  002AE8  6E08               	movwf	lcd_str@str^0,c
  1325  002AEA  0E06               	movlw	high STR_6
  1326  002AEC  6E09               	movwf	(lcd_str@str+1)^0,c
  1327  002AEE  ECE0  F01A         	call	_lcd_str	;wreg free
  1328  002AF2                     
  1329                           ;main.c: 49:     for (i = 0; i < 2; i++) {
  1330  002AF2  0E00               	movlw	0
  1331  002AF4  0100               	movlb	0	; () banked
  1332  002AF6  6FF7               	movwf	(_i+1)& (0+255),b
  1333  002AF8  0E00               	movlw	0
  1334  002AFA  6FF6               	movwf	_i& (0+255),b
  1335  002AFC                     l4512:
  1336                           
  1337                           ; BSR set to: 0
  1338                           ;main.c: 50:         atraso_ms(350);
  1339  002AFC  0E01               	movlw	1
  1340  002AFE  6E02               	movwf	(atraso_ms@t+1)^0,c
  1341  002B00  0E5E               	movlw	94
  1342  002B02  6E01               	movwf	atraso_ms@t^0,c
  1343  002B04  EC1C  F01B         	call	_atraso_ms	;wreg free
  1344                           
  1345                           ;main.c: 51:         lcd_cmd(0x18);
  1346  002B08  0E18               	movlw	24
  1347  002B0A  EC57  F01D         	call	_lcd_cmd
  1348  002B0E                     
  1349                           ;main.c: 52:     }
  1350  002B0E  0100               	movlb	0	; () banked
  1351  002B10  4BF6               	infsnz	_i& (0+255),f,b
  1352  002B12  2BF7               	incf	(_i+1)& (0+255),f,b
  1353  002B14                     
  1354                           ; BSR set to: 0
  1355  002B14  BFF7               	btfsc	(_i+1)& (0+255),7,b
  1356  002B16  EF96  F015         	goto	u5271
  1357  002B1A  51F7               	movf	(_i+1)& (0+255),w,b
  1358  002B1C  E109               	bnz	u5270
  1359  002B1E  0E02               	movlw	2
  1360  002B20  5DF6               	subwf	_i& (0+255),w,b
  1361  002B22  A0D8               	btfss	status,0,c
  1362  002B24  EF96  F015         	goto	u5271
  1363  002B28  EF98  F015         	goto	u5270
  1364  002B2C                     u5271:
  1365  002B2C  EF7E  F015         	goto	l4512
  1366  002B30                     u5270:
  1367  002B30                     
  1368                           ; BSR set to: 0
  1369                           ;main.c: 53:     for (i = 0; i < 2; i++) {
  1370  002B30  0E00               	movlw	0
  1371  002B32  6FF7               	movwf	(_i+1)& (0+255),b
  1372  002B34  0E00               	movlw	0
  1373  002B36  6FF6               	movwf	_i& (0+255),b
  1374  002B38                     l4524:
  1375                           
  1376                           ; BSR set to: 0
  1377                           ;main.c: 54:         atraso_ms(350);
  1378  002B38  0E01               	movlw	1
  1379  002B3A  6E02               	movwf	(atraso_ms@t+1)^0,c
  1380  002B3C  0E5E               	movlw	94
  1381  002B3E  6E01               	movwf	atraso_ms@t^0,c
  1382  002B40  EC1C  F01B         	call	_atraso_ms	;wreg free
  1383                           
  1384                           ;main.c: 55:         lcd_cmd(0x1C);
  1385  002B44  0E1C               	movlw	28
  1386  002B46  EC57  F01D         	call	_lcd_cmd
  1387  002B4A                     
  1388                           ;main.c: 56:     }
  1389  002B4A  0100               	movlb	0	; () banked
  1390  002B4C  4BF6               	infsnz	_i& (0+255),f,b
  1391  002B4E  2BF7               	incf	(_i+1)& (0+255),f,b
  1392  002B50                     
  1393                           ; BSR set to: 0
  1394  002B50  BFF7               	btfsc	(_i+1)& (0+255),7,b
  1395  002B52  EFB4  F015         	goto	u5281
  1396  002B56  51F7               	movf	(_i+1)& (0+255),w,b
  1397  002B58  E109               	bnz	u5280
  1398  002B5A  0E02               	movlw	2
  1399  002B5C  5DF6               	subwf	_i& (0+255),w,b
  1400  002B5E  A0D8               	btfss	status,0,c
  1401  002B60  EFB4  F015         	goto	u5281
  1402  002B64  EFB6  F015         	goto	u5280
  1403  002B68                     u5281:
  1404  002B68  EF9C  F015         	goto	l4524
  1405  002B6C                     u5280:
  1406  002B6C                     
  1407                           ; BSR set to: 0
  1408                           ;main.c: 59:     (*(volatile __near unsigned char*)0xF93) = 0xF8;
  1409  002B6C  0EF8               	movlw	248
  1410  002B6E  6E93               	movwf	147,c	;volatile
  1411                           
  1412                           ;main.c: 60:     (*(volatile __near unsigned char*)0xF92) = 0x20;
  1413  002B70  0E20               	movlw	32
  1414  002B72  6E92               	movwf	146,c	;volatile
  1415                           
  1416                           ;main.c: 61:     (*(volatile __near unsigned char*)0xF93) = 0x3F;
  1417  002B74  0E3F               	movlw	63
  1418  002B76  6E93               	movwf	147,c	;volatile
  1419                           
  1420                           ;main.c: 62:     (*(volatile __near unsigned char*)0xF92) = 0x20;
  1421  002B78  0E20               	movlw	32
  1422  002B7A  6E92               	movwf	146,c	;volatile
  1423                           
  1424                           ;main.c: 63:     (*(volatile __near unsigned char*)0xF93) = 0x3F;
  1425  002B7C  0E3F               	movlw	63
  1426  002B7E  6E93               	movwf	147,c	;volatile
  1427                           
  1428                           ;main.c: 64:     (*(volatile __near unsigned char*)0xF96) = 0x00;
  1429  002B80  0E00               	movlw	0
  1430  002B82  6E96               	movwf	150,c	;volatile
  1431  002B84                     l4532:
  1432                           
  1433                           ;main.c: 77:         if (!((((*(volatile __near unsigned char*)0xF81)) & (1<<1)))) {
  1434  002B84  B281               	btfsc	129,1,c	;volatile
  1435  002B86  EFC7  F015         	goto	u5291
  1436  002B8A  EFC9  F015         	goto	u5290
  1437  002B8E                     u5291:
  1438  002B8E  EFCB  F015         	goto	l119
  1439  002B92                     u5290:
  1440  002B92  EF64  F015         	goto	l4496
  1441  002B96                     l119:
  1442                           
  1443                           ;main.c: 80:         if (!((((*(volatile __near unsigned char*)0xF81)) & (1<<3)))) {
  1444  002B96  B681               	btfsc	129,3,c	;volatile
  1445  002B98  EFD0  F015         	goto	u5301
  1446  002B9C  EFD2  F015         	goto	u5300
  1447  002BA0                     u5301:
  1448  002BA0  EFD8  F015         	goto	l4538
  1449  002BA4                     u5300:
  1450  002BA4                     
  1451                           ;main.c: 81:             ver_quantidade(&volume);
  1452  002BA4  0EF8               	movlw	low _volume
  1453  002BA6  6E7E               	movwf	ver_quantidade@vol^0,c
  1454  002BA8  0E00               	movlw	high _volume
  1455  002BAA  6E7F               	movwf	(ver_quantidade@vol+1)^0,c
  1456  002BAC  ECD7  F019         	call	_ver_quantidade	;wreg free
  1457  002BB0                     l4538:
  1458                           
  1459                           ;main.c: 83:         if (!((((*(volatile __near unsigned char*)0xF81)) & (1<<4)))) {
  1460  002BB0  B881               	btfsc	129,4,c	;volatile
  1461  002BB2  EFDD  F015         	goto	u5311
  1462  002BB6  EFDF  F015         	goto	u5310
  1463  002BBA                     u5311:
  1464  002BBA  EFE5  F015         	goto	l4542
  1465  002BBE                     u5310:
  1466  002BBE                     
  1467                           ;main.c: 84:             encher_tanque(&volume);
  1468  002BBE  0EF8               	movlw	low _volume
  1469  002BC0  6E7E               	movwf	encher_tanque@vol^0,c
  1470  002BC2  0E00               	movlw	high _volume
  1471  002BC4  6E7F               	movwf	(encher_tanque@vol+1)^0,c
  1472  002BC6  ECBE  F011         	call	_encher_tanque	;wreg free
  1473  002BCA                     l4542:
  1474                           
  1475                           ;main.c: 86:         if (!((((*(volatile __near unsigned char*)0xF81)) & (1<<5)))) {
  1476  002BCA  BA81               	btfsc	129,5,c	;volatile
  1477  002BCC  EFEA  F015         	goto	u5321
  1478  002BD0  EFEC  F015         	goto	u5320
  1479  002BD4                     u5321:
  1480  002BD4  EFC2  F015         	goto	l4532
  1481  002BD8                     u5320:
  1482  002BD8                     
  1483                           ;main.c: 87:             esvaziar_tanque(&volume);
  1484  002BD8  0EF8               	movlw	low _volume
  1485  002BDA  6E7E               	movwf	esvaziar_tanque@vol^0,c
  1486  002BDC  0E00               	movlw	high _volume
  1487  002BDE  6E7F               	movwf	(esvaziar_tanque@vol+1)^0,c
  1488  002BE0  ECF4  F012         	call	_esvaziar_tanque	;wreg free
  1489  002BE4  EFC2  F015         	goto	l4532
  1490  002BE8  EF00  F000         	goto	start
  1491  002BEC                     __end_of_main:
  1492                           	callstack 0
  1493                           
  1494 ;; *************** function _ver_quantidade *****************
  1495 ;; Defined at:
  1496 ;;		line 7 in file "ver.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;  vol             2  125[COMRAM] PTR 
  1499 ;;		 -> volume(4), 
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  y               8   36[BANK0 ] unsigned char [8]
  1502 ;;  i               2   44[BANK0 ] int 
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  1    wreg      void 
  1505 ;; Registers used:
  1506 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1512 ;;      Params:         2       0       0       0       0       0       0
  1513 ;;      Locals:         0      10       0       0       0       0       0
  1514 ;;      Temps:          0       0       0       0       0       0       0
  1515 ;;      Totals:         2      10       0       0       0       0       0
  1516 ;;Total ram usage:       12 bytes
  1517 ;; Hardware stack levels used:    1
  1518 ;; Hardware stack levels required when called:    8
  1519 ;; This function calls:
  1520 ;;		_lcd_cmd
  1521 ;;		_lcd_str
  1522 ;;		_sprintf
  1523 ;; This function is called by:
  1524 ;;		_main
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           
  1528                           	psect	text1
  1529  0033AE                     __ptext1:
  1530                           	callstack 0
  1531  0033AE                     _ver_quantidade:
  1532                           	callstack 22
  1533  0033AE                     
  1534                           ;ver.c: 9:     int i;;ver.c: 10:     char y[8];;ver.c: 11:     sprintf(y, "%.1f", *vol);
  1535  0033AE  0EA4               	movlw	low ver_quantidade@y
  1536  0033B0  0100               	movlb	0	; () banked
  1537  0033B2  6F92               	movwf	sprintf@s& (0+255),b
  1538  0033B4  0E00               	movlw	high ver_quantidade@y
  1539  0033B6  6F93               	movwf	(sprintf@s+1)& (0+255),b
  1540  0033B8  0ED7               	movlw	low STR_11
  1541  0033BA  6F94               	movwf	sprintf@fmt& (0+255),b
  1542  0033BC  0E06               	movlw	high STR_11
  1543  0033BE  6F95               	movwf	(sprintf@fmt+1)& (0+255),b
  1544  0033C0  C07E  FFD9         	movff	ver_quantidade@vol,fsr2l
  1545  0033C4  C07F  FFDA         	movff	ver_quantidade@vol+1,fsr2h
  1546  0033C8  CFDE F096          	movff	postinc2,?_sprintf+4
  1547  0033CC  CFDE F097          	movff	postinc2,?_sprintf+5
  1548  0033D0  CFDE F098          	movff	postinc2,?_sprintf+6
  1549  0033D4  CFDE F099          	movff	postinc2,?_sprintf+7
  1550  0033D8  EC3C  F01C         	call	_sprintf	;wreg free
  1551  0033DC                     
  1552                           ;ver.c: 13:     lcd_cmd(0x01);
  1553  0033DC  0E01               	movlw	1
  1554  0033DE  EC57  F01D         	call	_lcd_cmd
  1555  0033E2                     
  1556                           ;ver.c: 14:     lcd_cmd(0x80);
  1557  0033E2  0E80               	movlw	128
  1558  0033E4  EC57  F01D         	call	_lcd_cmd
  1559  0033E8                     
  1560                           ;ver.c: 15:     lcd_str("Atual: ");
  1561  0033E8  0ECF               	movlw	low STR_18
  1562  0033EA  6E08               	movwf	lcd_str@str^0,c
  1563  0033EC  0E06               	movlw	high STR_18
  1564  0033EE  6E09               	movwf	(lcd_str@str+1)^0,c
  1565  0033F0  ECE0  F01A         	call	_lcd_str	;wreg free
  1566  0033F4                     
  1567                           ;ver.c: 16:     lcd_str(y);
  1568  0033F4  0EA4               	movlw	low ver_quantidade@y
  1569  0033F6  6E08               	movwf	lcd_str@str^0,c
  1570  0033F8  0E00               	movlw	high ver_quantidade@y
  1571  0033FA  6E09               	movwf	(lcd_str@str+1)^0,c
  1572  0033FC  ECE0  F01A         	call	_lcd_str	;wreg free
  1573  003400                     
  1574                           ;ver.c: 17:     lcd_str(" L");
  1575  003400  0EEF               	movlw	low STR_12
  1576  003402  6E08               	movwf	lcd_str@str^0,c
  1577  003404  0E06               	movlw	high STR_12
  1578  003406  6E09               	movwf	(lcd_str@str+1)^0,c
  1579  003408  ECE0  F01A         	call	_lcd_str	;wreg free
  1580  00340C                     
  1581                           ;ver.c: 18:     lcd_cmd(0xC0);
  1582  00340C  0EC0               	movlw	192
  1583  00340E  EC57  F01D         	call	_lcd_cmd
  1584  003412                     
  1585                           ;ver.c: 19:     lcd_str("RB1-Voltar");
  1586  003412  0E67               	movlw	low (STR_16+3)
  1587  003414  6E08               	movwf	lcd_str@str^0,c
  1588  003416  0E06               	movlw	high (STR_16+3)
  1589  003418  6E09               	movwf	(lcd_str@str+1)^0,c
  1590  00341A  ECE0  F01A         	call	_lcd_str	;wreg free
  1591  00341E                     
  1592                           ;ver.c: 20:     lcd_cmd(0xC0);
  1593  00341E  0EC0               	movlw	192
  1594  003420  EC57  F01D         	call	_lcd_cmd
  1595  003424                     
  1596                           ;ver.c: 22:     for (i = 0; i < 7; i++) {
  1597  003424  0E00               	movlw	0
  1598  003426  0100               	movlb	0	; () banked
  1599  003428  6FAD               	movwf	(ver_quantidade@i+1)& (0+255),b
  1600  00342A  0E00               	movlw	0
  1601  00342C  6FAC               	movwf	ver_quantidade@i& (0+255),b
  1602  00342E                     l4222:
  1603                           
  1604                           ; BSR set to: 0
  1605                           ;ver.c: 23:         lcd_cmd(0x10);
  1606  00342E  0E10               	movlw	16
  1607  003430  EC57  F01D         	call	_lcd_cmd
  1608  003434                     
  1609                           ;ver.c: 24:     }
  1610  003434  0100               	movlb	0	; () banked
  1611  003436  4BAC               	infsnz	ver_quantidade@i& (0+255),f,b
  1612  003438  2BAD               	incf	(ver_quantidade@i+1)& (0+255),f,b
  1613  00343A                     
  1614                           ; BSR set to: 0
  1615  00343A  BFAD               	btfsc	(ver_quantidade@i+1)& (0+255),7,b
  1616  00343C  EF29  F01A         	goto	u4991
  1617  003440  51AD               	movf	(ver_quantidade@i+1)& (0+255),w,b
  1618  003442  E109               	bnz	u4990
  1619  003444  0E07               	movlw	7
  1620  003446  5DAC               	subwf	ver_quantidade@i& (0+255),w,b
  1621  003448  A0D8               	btfss	status,0,c
  1622  00344A  EF29  F01A         	goto	u4991
  1623  00344E  EF2B  F01A         	goto	u4990
  1624  003452                     u4991:
  1625  003452  EF17  F01A         	goto	l4222
  1626  003456                     u4990:
  1627  003456                     l156:
  1628                           
  1629                           ;ver.c: 31:     while(((((*(volatile __near unsigned char*)0xF81)) & (1<<1)))){
  1630  003456  B281               	btfsc	129,1,c	;volatile
  1631  003458  EF30  F01A         	goto	u5001
  1632  00345C  EF32  F01A         	goto	u5000
  1633  003460                     u5001:
  1634  003460  EF2B  F01A         	goto	l156
  1635  003464                     u5000:
  1636  003464  0012               	return		;funcret
  1637  003466                     __end_of_ver_quantidade:
  1638                           	callstack 0
  1639                           
  1640 ;; *************** function _lcd_init *****************
  1641 ;; Defined at:
  1642 ;;		line 29 in file "lcd.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;		None
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;		None
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  1    wreg      void 
  1649 ;; Registers used:
  1650 ;;		wreg, status,2, status,0, cstack
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1656 ;;      Params:         0       0       0       0       0       0       0
  1657 ;;      Locals:         0       0       0       0       0       0       0
  1658 ;;      Temps:          0       0       0       0       0       0       0
  1659 ;;      Totals:         0       0       0       0       0       0       0
  1660 ;;Total ram usage:        0 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; Hardware stack levels required when called:    2
  1663 ;; This function calls:
  1664 ;;		_atraso_ms
  1665 ;;		_lcd_cmd
  1666 ;; This function is called by:
  1667 ;;		_main
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671                           	psect	text2
  1672  0037C0                     __ptext2:
  1673                           	callstack 0
  1674  0037C0                     _lcd_init:
  1675                           	callstack 28
  1676  0037C0                     
  1677                           ;lcd.c: 30:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  1678  0037C0  9284               	bcf	132,1,c	;volatile
  1679                           
  1680                           ;lcd.c: 31:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<2));
  1681  0037C2  9484               	bcf	132,2,c	;volatile
  1682  0037C4                     
  1683                           ;lcd.c: 32:     atraso_ms(20);
  1684  0037C4  0E00               	movlw	0
  1685  0037C6  6E02               	movwf	(atraso_ms@t+1)^0,c
  1686  0037C8  0E14               	movlw	20
  1687  0037CA  6E01               	movwf	atraso_ms@t^0,c
  1688  0037CC  EC1C  F01B         	call	_atraso_ms	;wreg free
  1689  0037D0                     
  1690                           ;lcd.c: 33:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  1691  0037D0  8284               	bsf	132,1,c	;volatile
  1692                           
  1693                           ;lcd.c: 35:     lcd_cmd(0x38);
  1694  0037D2  0E38               	movlw	56
  1695  0037D4  EC57  F01D         	call	_lcd_cmd
  1696                           
  1697                           ;lcd.c: 36:     atraso_ms(5);
  1698  0037D8  0E00               	movlw	0
  1699  0037DA  6E02               	movwf	(atraso_ms@t+1)^0,c
  1700  0037DC  0E05               	movlw	5
  1701  0037DE  6E01               	movwf	atraso_ms@t^0,c
  1702  0037E0  EC1C  F01B         	call	_atraso_ms	;wreg free
  1703                           
  1704                           ;lcd.c: 37:     lcd_cmd(0x38);
  1705  0037E4  0E38               	movlw	56
  1706  0037E6  EC57  F01D         	call	_lcd_cmd
  1707                           
  1708                           ;lcd.c: 38:     atraso_ms(1);
  1709  0037EA  0E00               	movlw	0
  1710  0037EC  6E02               	movwf	(atraso_ms@t+1)^0,c
  1711  0037EE  0E01               	movlw	1
  1712  0037F0  6E01               	movwf	atraso_ms@t^0,c
  1713  0037F2  EC1C  F01B         	call	_atraso_ms	;wreg free
  1714                           
  1715                           ;lcd.c: 39:     lcd_cmd(0x38);
  1716  0037F6  0E38               	movlw	56
  1717  0037F8  EC57  F01D         	call	_lcd_cmd
  1718                           
  1719                           ;lcd.c: 40:     lcd_cmd(0x08);
  1720  0037FC  0E08               	movlw	8
  1721  0037FE  EC57  F01D         	call	_lcd_cmd
  1722                           
  1723                           ;lcd.c: 41:     lcd_cmd(0x0F);
  1724  003802  0E0F               	movlw	15
  1725  003804  EC57  F01D         	call	_lcd_cmd
  1726                           
  1727                           ;lcd.c: 42:     lcd_cmd(0x01);
  1728  003808  0E01               	movlw	1
  1729  00380A  EC57  F01D         	call	_lcd_cmd
  1730                           
  1731                           ;lcd.c: 43:     lcd_cmd(0x38);
  1732  00380E  0E38               	movlw	56
  1733  003810  EC57  F01D         	call	_lcd_cmd
  1734                           
  1735                           ;lcd.c: 44:     lcd_cmd(0x80);
  1736  003814  0E80               	movlw	128
  1737  003816  EC57  F01D         	call	_lcd_cmd
  1738  00381A  0012               	return		;funcret
  1739  00381C                     __end_of_lcd_init:
  1740                           	callstack 0
  1741                           
  1742 ;; *************** function _esvaziar_tanque *****************
  1743 ;; Defined at:
  1744 ;;		line 8 in file "esvaziar.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;  vol             2  125[COMRAM] PTR 
  1747 ;;		 -> volume(4), 
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;  numeros        20   36[BANK0 ] int [10]
  1750 ;;  y               8   56[BANK0 ] unsigned char [8]
  1751 ;;  i               2   70[BANK0 ] int 
  1752 ;;  tempo           2   64[BANK0 ] int 
  1753 ;;  decremento      4   66[BANK0 ] int 
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  1    wreg      void 
  1756 ;; Registers used:
  1757 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1763 ;;      Params:         2       0       0       0       0       0       0
  1764 ;;      Locals:         0      36       0       0       0       0       0
  1765 ;;      Temps:          0       0       0       0       0       0       0
  1766 ;;      Totals:         2      36       0       0       0       0       0
  1767 ;;Total ram usage:       38 bytes
  1768 ;; Hardware stack levels used:    1
  1769 ;; Hardware stack levels required when called:    8
  1770 ;; This function calls:
  1771 ;;		___fldiv
  1772 ;;		___flsub
  1773 ;;		___fltol
  1774 ;;		_atraso_ms
  1775 ;;		_lcd_cmd
  1776 ;;		_lcd_str
  1777 ;;		_sprintf
  1778 ;; This function is called by:
  1779 ;;		_main
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text3
  1784  0025E8                     __ptext3:
  1785                           	callstack 0
  1786  0025E8                     _esvaziar_tanque:
  1787                           	callstack 22
  1788  0025E8                     
  1789                           ;esvaziar.c: 11:     lcd_cmd(0x01);
  1790  0025E8  0E01               	movlw	1
  1791  0025EA  EC57  F01D         	call	_lcd_cmd
  1792                           
  1793                           ;esvaziar.c: 12:     lcd_cmd(0x80);
  1794  0025EE  0E80               	movlw	128
  1795  0025F0  EC57  F01D         	call	_lcd_cmd
  1796  0025F4                     
  1797                           ;esvaziar.c: 13:     lcd_str("Quant(L): ");
  1798  0025F4  0EA5               	movlw	low STR_7
  1799  0025F6  6E08               	movwf	lcd_str@str^0,c
  1800  0025F8  0E06               	movlw	high STR_7
  1801  0025FA  6E09               	movwf	(lcd_str@str+1)^0,c
  1802  0025FC  ECE0  F01A         	call	_lcd_str	;wreg free
  1803  002600                     
  1804                           ;esvaziar.c: 14:     lcd_cmd(0xC0);
  1805  002600  0EC0               	movlw	192
  1806  002602  EC57  F01D         	call	_lcd_cmd
  1807                           
  1808                           ;esvaziar.c: 15:     lcd_str("RB1-voltar");
  1809  002606  0EB0               	movlw	low STR_8
  1810  002608  6E08               	movwf	lcd_str@str^0,c
  1811  00260A  0E06               	movlw	high STR_8
  1812  00260C  6E09               	movwf	(lcd_str@str+1)^0,c
  1813  00260E  ECE0  F01A         	call	_lcd_str	;wreg free
  1814  002612                     
  1815                           ;esvaziar.c: 16:     lcd_cmd(0x80 +10);
  1816  002612  0E8A               	movlw	138
  1817  002614  EC57  F01D         	call	_lcd_cmd
  1818  002618                     
  1819                           ;esvaziar.c: 17:     atraso_ms(1000);
  1820  002618  0E03               	movlw	3
  1821  00261A  6E02               	movwf	(atraso_ms@t+1)^0,c
  1822  00261C  0EE8               	movlw	232
  1823  00261E  6E01               	movwf	atraso_ms@t^0,c
  1824  002620  EC1C  F01B         	call	_atraso_ms	;wreg free
  1825  002624                     
  1826                           ;esvaziar.c: 19:     double decremento = 5;
  1827  002624  0E00               	movlw	0
  1828  002626  0100               	movlb	0	; () banked
  1829  002628  6FC2               	movwf	esvaziar_tanque@decremento& (0+255),b
  1830  00262A  0E00               	movlw	0
  1831  00262C  6FC3               	movwf	(esvaziar_tanque@decremento+1)& (0+255),b
  1832  00262E  0EA0               	movlw	160
  1833  002630  6FC4               	movwf	(esvaziar_tanque@decremento+2)& (0+255),b
  1834  002632  0E40               	movlw	64
  1835  002634  6FC5               	movwf	(esvaziar_tanque@decremento+3)& (0+255),b
  1836  002636                     
  1837                           ; BSR set to: 0
  1838                           ;esvaziar.c: 21:     if (*vol - decremento < 0) {
  1839  002636  C07E  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  1840  00263A  C07F  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  1841  00263E  CFDE F01A          	movff	postinc2,___flsub@b
  1842  002642  CFDE F01B          	movff	postinc2,___flsub@b+1
  1843  002646  CFDE F01C          	movff	postinc2,___flsub@b+2
  1844  00264A  CFDE F01D          	movff	postinc2,___flsub@b+3
  1845  00264E  C0C2  F01E         	movff	esvaziar_tanque@decremento,___flsub@a
  1846  002652  C0C3  F01F         	movff	esvaziar_tanque@decremento+1,___flsub@a+1
  1847  002656  C0C4  F020         	movff	esvaziar_tanque@decremento+2,___flsub@a+2
  1848  00265A  C0C5  F021         	movff	esvaziar_tanque@decremento+3,___flsub@a+3
  1849  00265E  EC8E  F01C         	call	___flsub	;wreg free
  1850  002662  BE1D               	btfsc	(?___flsub+3)^0,7,c
  1851  002664  EF38  F013         	goto	u5050
  1852  002668  EF36  F013         	goto	u5051
  1853  00266C                     u5051:
  1854  00266C  EF4F  F013         	goto	l4320
  1855  002670                     u5050:
  1856  002670                     
  1857                           ;esvaziar.c: 24:         lcd_cmd(0x01);
  1858  002670  0E01               	movlw	1
  1859  002672  EC57  F01D         	call	_lcd_cmd
  1860                           
  1861                           ;esvaziar.c: 25:         lcd_cmd(0x80);
  1862  002676  0E80               	movlw	128
  1863  002678  EC57  F01D         	call	_lcd_cmd
  1864  00267C                     
  1865                           ;esvaziar.c: 26:         lcd_str("ERRO: vol < 0");
  1866  00267C  0E56               	movlw	low STR_23
  1867  00267E  6E08               	movwf	lcd_str@str^0,c
  1868  002680  0E06               	movlw	high STR_23
  1869  002682  6E09               	movwf	(lcd_str@str+1)^0,c
  1870  002684  ECE0  F01A         	call	_lcd_str	;wreg free
  1871  002688                     
  1872                           ;esvaziar.c: 27:         lcd_cmd(0xC0);
  1873  002688  0EC0               	movlw	192
  1874  00268A  EC57  F01D         	call	_lcd_cmd
  1875                           
  1876                           ;esvaziar.c: 28:         lcd_str("RB1-Voltar");
  1877  00268E  0E67               	movlw	low (STR_16+3)
  1878  002690  6E08               	movwf	lcd_str@str^0,c
  1879  002692  0E06               	movlw	high (STR_16+3)
  1880  002694  6E09               	movwf	(lcd_str@str+1)^0,c
  1881  002696  ECE0  F01A         	call	_lcd_str	;wreg free
  1882                           
  1883                           ;esvaziar.c: 34:     } else {
  1884  00269A  EF10  F014         	goto	l176
  1885  00269E                     l4320:
  1886                           
  1887                           ;esvaziar.c: 36:         *vol -= decremento;
  1888  00269E  C07E  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  1889  0026A2  C07F  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  1890  0026A6  CFDE F01A          	movff	postinc2,___flsub@b
  1891  0026AA  CFDE F01B          	movff	postinc2,___flsub@b+1
  1892  0026AE  CFDE F01C          	movff	postinc2,___flsub@b+2
  1893  0026B2  CFDE F01D          	movff	postinc2,___flsub@b+3
  1894  0026B6  C0C2  F01E         	movff	esvaziar_tanque@decremento,___flsub@a
  1895  0026BA  C0C3  F01F         	movff	esvaziar_tanque@decremento+1,___flsub@a+1
  1896  0026BE  C0C4  F020         	movff	esvaziar_tanque@decremento+2,___flsub@a+2
  1897  0026C2  C0C5  F021         	movff	esvaziar_tanque@decremento+3,___flsub@a+3
  1898  0026C6  EC8E  F01C         	call	___flsub	;wreg free
  1899  0026CA  C07E  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  1900  0026CE  C07F  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  1901  0026D2  C01A  FFDE         	movff	?___flsub,postinc2
  1902  0026D6  C01B  FFDE         	movff	?___flsub+1,postinc2
  1903  0026DA  C01C  FFDE         	movff	?___flsub+2,postinc2
  1904  0026DE  C01D  FFDE         	movff	?___flsub+3,postinc2
  1905  0026E2                     
  1906                           ;esvaziar.c: 37:         char y[8];;esvaziar.c: 38:         sprintf(y, "%.1f", *vol);
  1907  0026E2  0EB8               	movlw	low esvaziar_tanque@y
  1908  0026E4  0100               	movlb	0	; () banked
  1909  0026E6  6F92               	movwf	sprintf@s& (0+255),b
  1910  0026E8  0E00               	movlw	high esvaziar_tanque@y
  1911  0026EA  6F93               	movwf	(sprintf@s+1)& (0+255),b
  1912  0026EC  0ED7               	movlw	low STR_11
  1913  0026EE  6F94               	movwf	sprintf@fmt& (0+255),b
  1914  0026F0  0E06               	movlw	high STR_11
  1915  0026F2  6F95               	movwf	(sprintf@fmt+1)& (0+255),b
  1916  0026F4  C07E  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  1917  0026F8  C07F  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  1918  0026FC  CFDE F096          	movff	postinc2,?_sprintf+4
  1919  002700  CFDE F097          	movff	postinc2,?_sprintf+5
  1920  002704  CFDE F098          	movff	postinc2,?_sprintf+6
  1921  002708  CFDE F099          	movff	postinc2,?_sprintf+7
  1922  00270C  EC3C  F01C         	call	_sprintf	;wreg free
  1923  002710                     
  1924                           ;esvaziar.c: 39:         lcd_str(y);
  1925  002710  0EB8               	movlw	low esvaziar_tanque@y
  1926  002712  6E08               	movwf	lcd_str@str^0,c
  1927  002714  0E00               	movlw	high esvaziar_tanque@y
  1928  002716  6E09               	movwf	(lcd_str@str+1)^0,c
  1929  002718  ECE0  F01A         	call	_lcd_str	;wreg free
  1930  00271C                     
  1931                           ;esvaziar.c: 40:         lcd_str(" L");
  1932  00271C  0EEF               	movlw	low STR_12
  1933  00271E  6E08               	movwf	lcd_str@str^0,c
  1934  002720  0E06               	movlw	high STR_12
  1935  002722  6E09               	movwf	(lcd_str@str+1)^0,c
  1936  002724  ECE0  F01A         	call	_lcd_str	;wreg free
  1937  002728                     
  1938                           ;esvaziar.c: 43:         int tempo = decremento / 2;
  1939  002728  0E00               	movlw	0
  1940  00272A  6E05               	movwf	___fldiv@a^0,c
  1941  00272C  0E00               	movlw	0
  1942  00272E  6E06               	movwf	(___fldiv@a+1)^0,c
  1943  002730  0E00               	movlw	0
  1944  002732  6E07               	movwf	(___fldiv@a+2)^0,c
  1945  002734  0E40               	movlw	64
  1946  002736  6E08               	movwf	(___fldiv@a+3)^0,c
  1947  002738  C0C2  F001         	movff	esvaziar_tanque@decremento,___fldiv@b
  1948  00273C  C0C3  F002         	movff	esvaziar_tanque@decremento+1,___fldiv@b+1
  1949  002740  C0C4  F003         	movff	esvaziar_tanque@decremento+2,___fldiv@b+2
  1950  002744  C0C5  F004         	movff	esvaziar_tanque@decremento+3,___fldiv@b+3
  1951  002748  ECF1  F00F         	call	___fldiv	;wreg free
  1952  00274C  C001  F01A         	movff	?___fldiv,___fltol@f1
  1953  002750  C002  F01B         	movff	?___fldiv+1,___fltol@f1+1
  1954  002754  C003  F01C         	movff	?___fldiv+2,___fltol@f1+2
  1955  002758  C004  F01D         	movff	?___fldiv+3,___fltol@f1+3
  1956  00275C  ECBE  F016         	call	___fltol	;wreg free
  1957  002760  C01A  F0C0         	movff	?___fltol,esvaziar_tanque@tempo
  1958  002764  C01B  F0C1         	movff	?___fltol+1,esvaziar_tanque@tempo+1
  1959  002768                     
  1960                           ;esvaziar.c: 44:         int i;;esvaziar.c: 45:         int numeros[10] = {0x3F, 0x06, 0
      +                          x5B, 0x4F, 0x66, 0x6D, 0x7D,
  1961  002768  EE21  F050         	lfsr	2,esvaziar_tanque@F342
  1962  00276C  EE10  F0A4         	lfsr	1,esvaziar_tanque@numeros
  1963  002770  0E13               	movlw	19
  1964  002772                     u5061:
  1965  002772  CFDB FFE3          	movff	plusw2,plusw1
  1966  002776  06E8               	decf	wreg,f,c
  1967  002778  E2FC               	bc	u5061
  1968  00277A                     
  1969                           ;esvaziar.c: 48:         (*(volatile __near unsigned char*)0xF92) = 0x00;
  1970  00277A  0E00               	movlw	0
  1971  00277C  6E92               	movwf	146,c	;volatile
  1972  00277E                     
  1973                           ;esvaziar.c: 49:         (((*(volatile __near unsigned char*)0xF80)) |= (1<<5));
  1974  00277E  8A80               	bsf	128,5,c	;volatile
  1975  002780                     
  1976                           ;esvaziar.c: 54:         lcd_cmd(0x01);
  1977  002780  0E01               	movlw	1
  1978  002782  EC57  F01D         	call	_lcd_cmd
  1979  002786                     
  1980                           ;esvaziar.c: 55:         lcd_cmd(0x80);
  1981  002786  0E80               	movlw	128
  1982  002788  EC57  F01D         	call	_lcd_cmd
  1983  00278C                     
  1984                           ;esvaziar.c: 56:         lcd_str("Esvaziando...");
  1985  00278C  0E48               	movlw	low STR_27
  1986  00278E  6E08               	movwf	lcd_str@str^0,c
  1987  002790  0E06               	movlw	high STR_27
  1988  002792  6E09               	movwf	(lcd_str@str+1)^0,c
  1989  002794  ECE0  F01A         	call	_lcd_str	;wreg free
  1990  002798                     
  1991                           ;esvaziar.c: 57:         lcd_cmd(0xC0);
  1992  002798  0EC0               	movlw	192
  1993  00279A  EC57  F01D         	call	_lcd_cmd
  1994  00279E                     
  1995                           ;esvaziar.c: 58:         lcd_str("Aguarde!");
  1996  00279E  0EC6               	movlw	low STR_14
  1997  0027A0  6E08               	movwf	lcd_str@str^0,c
  1998  0027A2  0E06               	movlw	high STR_14
  1999  0027A4  6E09               	movwf	(lcd_str@str+1)^0,c
  2000  0027A6  ECE0  F01A         	call	_lcd_str	;wreg free
  2001  0027AA                     
  2002                           ;esvaziar.c: 65:         for (i = tempo; i >= 0; i--) {
  2003  0027AA  C0C0  F0C6         	movff	esvaziar_tanque@tempo,esvaziar_tanque@i
  2004  0027AE  C0C1  F0C7         	movff	esvaziar_tanque@tempo+1,esvaziar_tanque@i+1
  2005  0027B2                     l4348:
  2006  0027B2  0100               	movlb	0	; () banked
  2007  0027B4  BFC7               	btfsc	(esvaziar_tanque@i+1)& (0+255),7,b
  2008  0027B6  EFE1  F013         	goto	u5070
  2009  0027BA  EFDF  F013         	goto	u5071
  2010  0027BE                     u5071:
  2011  0027BE  EFE3  F013         	goto	l4352
  2012  0027C2                     u5070:
  2013  0027C2  EFFA  F013         	goto	l4360
  2014  0027C6                     l4352:
  2015                           
  2016                           ; BSR set to: 0
  2017                           ;esvaziar.c: 66:             (*(volatile __near unsigned char*)0xF83) = numeros[i];
  2018  0027C6  90D8               	bcf	status,0,c
  2019  0027C8  35C6               	rlcf	esvaziar_tanque@i& (0+255),w,b
  2020  0027CA  6ED9               	movwf	fsr2l,c
  2021  0027CC  35C7               	rlcf	(esvaziar_tanque@i+1)& (0+255),w,b
  2022  0027CE  6EDA               	movwf	fsr2h,c
  2023  0027D0  0EA4               	movlw	low esvaziar_tanque@numeros
  2024  0027D2  26D9               	addwf	fsr2l,f,c
  2025  0027D4  0E00               	movlw	high esvaziar_tanque@numeros
  2026  0027D6  22DA               	addwfc	fsr2h,f,c
  2027  0027D8  50DF               	movf	indf2,w,c
  2028  0027DA  6E83               	movwf	131,c	;volatile
  2029  0027DC                     
  2030                           ; BSR set to: 0
  2031                           ;esvaziar.c: 67:             atraso_ms(1000);
  2032  0027DC  0E03               	movlw	3
  2033  0027DE  6E02               	movwf	(atraso_ms@t+1)^0,c
  2034  0027E0  0EE8               	movlw	232
  2035  0027E2  6E01               	movwf	atraso_ms@t^0,c
  2036  0027E4  EC1C  F01B         	call	_atraso_ms	;wreg free
  2037  0027E8                     
  2038                           ;esvaziar.c: 68:         }
  2039  0027E8  0100               	movlb	0	; () banked
  2040  0027EA  07C6               	decf	esvaziar_tanque@i& (0+255),f,b
  2041  0027EC  A0D8               	btfss	status,0,c
  2042  0027EE  07C7               	decf	(esvaziar_tanque@i+1)& (0+255),f,b
  2043  0027F0  EFD9  F013         	goto	l4348
  2044  0027F4                     l4360:
  2045                           
  2046                           ; BSR set to: 0
  2047                           ;esvaziar.c: 69:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  2048  0027F4  9A80               	bcf	128,5,c	;volatile
  2049  0027F6                     
  2050                           ; BSR set to: 0
  2051                           ;esvaziar.c: 72:         lcd_cmd(0x01);
  2052  0027F6  0E01               	movlw	1
  2053  0027F8  EC57  F01D         	call	_lcd_cmd
  2054  0027FC                     
  2055                           ;esvaziar.c: 73:         lcd_cmd(0x80);
  2056  0027FC  0E80               	movlw	128
  2057  0027FE  EC57  F01D         	call	_lcd_cmd
  2058  002802                     
  2059                           ;esvaziar.c: 74:         lcd_str("    SUCESSO!");
  2060  002802  0E80               	movlw	low STR_15
  2061  002804  6E08               	movwf	lcd_str@str^0,c
  2062  002806  0E06               	movlw	high STR_15
  2063  002808  6E09               	movwf	(lcd_str@str+1)^0,c
  2064  00280A  ECE0  F01A         	call	_lcd_str	;wreg free
  2065  00280E                     
  2066                           ;esvaziar.c: 75:         lcd_cmd(0xC0);
  2067  00280E  0EC0               	movlw	192
  2068  002810  EC57  F01D         	call	_lcd_cmd
  2069  002814                     
  2070                           ;esvaziar.c: 76:         lcd_str("   RB1-Voltar");
  2071  002814  0E64               	movlw	low STR_16
  2072  002816  6E08               	movwf	lcd_str@str^0,c
  2073  002818  0E06               	movlw	high STR_16
  2074  00281A  6E09               	movwf	(lcd_str@str+1)^0,c
  2075  00281C  ECE0  F01A         	call	_lcd_str	;wreg free
  2076  002820                     l176:
  2077                           
  2078                           ;esvaziar.c: 94:     while(((((*(volatile __near unsigned char*)0xF81)) & (1<<1)))){
  2079  002820  B281               	btfsc	129,1,c	;volatile
  2080  002822  EF15  F014         	goto	u5081
  2081  002826  EF17  F014         	goto	u5080
  2082  00282A                     u5081:
  2083  00282A  EF10  F014         	goto	l176
  2084  00282E                     u5080:
  2085  00282E  0012               	return		;funcret
  2086  002830                     __end_of_esvaziar_tanque:
  2087                           	callstack 0
  2088                           
  2089 ;; *************** function _encher_tanque *****************
  2090 ;; Defined at:
  2091 ;;		line 8 in file "encher.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;  vol             2  125[COMRAM] PTR 
  2094 ;;		 -> volume(4), 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;  numeros        20   36[BANK0 ] int [10]
  2097 ;;  y               8   56[BANK0 ] unsigned char [8]
  2098 ;;  i               2   70[BANK0 ] int 
  2099 ;;  tempo           2   64[BANK0 ] int 
  2100 ;;  incremento      4   66[BANK0 ] int 
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      void 
  2103 ;; Registers used:
  2104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2110 ;;      Params:         2       0       0       0       0       0       0
  2111 ;;      Locals:         0      36       0       0       0       0       0
  2112 ;;      Temps:          0       0       0       0       0       0       0
  2113 ;;      Totals:         2      36       0       0       0       0       0
  2114 ;;Total ram usage:       38 bytes
  2115 ;; Hardware stack levels used:    1
  2116 ;; Hardware stack levels required when called:    8
  2117 ;; This function calls:
  2118 ;;		___fladd
  2119 ;;		___fldiv
  2120 ;;		___flge
  2121 ;;		___fltol
  2122 ;;		_atraso_ms
  2123 ;;		_lcd_cmd
  2124 ;;		_lcd_str
  2125 ;;		_sprintf
  2126 ;; This function is called by:
  2127 ;;		_main
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           	psect	text4
  2132  00237C                     __ptext4:
  2133                           	callstack 0
  2134  00237C                     _encher_tanque:
  2135                           	callstack 22
  2136  00237C                     
  2137                           ;encher.c: 11:     lcd_cmd(0x01);
  2138  00237C  0E01               	movlw	1
  2139  00237E  EC57  F01D         	call	_lcd_cmd
  2140                           
  2141                           ;encher.c: 12:     lcd_cmd(0x80);
  2142  002382  0E80               	movlw	128
  2143  002384  EC57  F01D         	call	_lcd_cmd
  2144  002388                     
  2145                           ;encher.c: 13:     lcd_str("Quant(L): ");
  2146  002388  0EA5               	movlw	low STR_7
  2147  00238A  6E08               	movwf	lcd_str@str^0,c
  2148  00238C  0E06               	movlw	high STR_7
  2149  00238E  6E09               	movwf	(lcd_str@str+1)^0,c
  2150  002390  ECE0  F01A         	call	_lcd_str	;wreg free
  2151  002394                     
  2152                           ;encher.c: 14:     lcd_cmd(0xC0);
  2153  002394  0EC0               	movlw	192
  2154  002396  EC57  F01D         	call	_lcd_cmd
  2155                           
  2156                           ;encher.c: 15:     lcd_str("RB1-voltar");
  2157  00239A  0EB0               	movlw	low STR_8
  2158  00239C  6E08               	movwf	lcd_str@str^0,c
  2159  00239E  0E06               	movlw	high STR_8
  2160  0023A0  6E09               	movwf	(lcd_str@str+1)^0,c
  2161  0023A2  ECE0  F01A         	call	_lcd_str	;wreg free
  2162  0023A6                     
  2163                           ;encher.c: 16:     lcd_cmd(0x80 +10);
  2164  0023A6  0E8A               	movlw	138
  2165  0023A8  EC57  F01D         	call	_lcd_cmd
  2166  0023AC                     
  2167                           ;encher.c: 17:     atraso_ms(1000);
  2168  0023AC  0E03               	movlw	3
  2169  0023AE  6E02               	movwf	(atraso_ms@t+1)^0,c
  2170  0023B0  0EE8               	movlw	232
  2171  0023B2  6E01               	movwf	atraso_ms@t^0,c
  2172  0023B4  EC1C  F01B         	call	_atraso_ms	;wreg free
  2173  0023B8                     
  2174                           ;encher.c: 19:     double incremento = 10;
  2175  0023B8  0E00               	movlw	0
  2176  0023BA  0100               	movlb	0	; () banked
  2177  0023BC  6FC2               	movwf	encher_tanque@incremento& (0+255),b
  2178  0023BE  0E00               	movlw	0
  2179  0023C0  6FC3               	movwf	(encher_tanque@incremento+1)& (0+255),b
  2180  0023C2  0E20               	movlw	32
  2181  0023C4  6FC4               	movwf	(encher_tanque@incremento+2)& (0+255),b
  2182  0023C6  0E41               	movlw	65
  2183  0023C8  6FC5               	movwf	(encher_tanque@incremento+3)& (0+255),b
  2184  0023CA                     
  2185                           ; BSR set to: 0
  2186                           ;encher.c: 21:     if (*vol + incremento > 70) {
  2187  0023CA  0E00               	movlw	0
  2188  0023CC  6E1A               	movwf	___flge@ff1^0,c
  2189  0023CE  0E00               	movlw	0
  2190  0023D0  6E1B               	movwf	(___flge@ff1+1)^0,c
  2191  0023D2  0E8C               	movlw	140
  2192  0023D4  6E1C               	movwf	(___flge@ff1+2)^0,c
  2193  0023D6  0E42               	movlw	66
  2194  0023D8  6E1D               	movwf	(___flge@ff1+3)^0,c
  2195  0023DA  C0C2  F005         	movff	encher_tanque@incremento,___fladd@a
  2196  0023DE  C0C3  F006         	movff	encher_tanque@incremento+1,___fladd@a+1
  2197  0023E2  C0C4  F007         	movff	encher_tanque@incremento+2,___fladd@a+2
  2198  0023E6  C0C5  F008         	movff	encher_tanque@incremento+3,___fladd@a+3
  2199  0023EA  C07E  FFD9         	movff	encher_tanque@vol,fsr2l
  2200  0023EE  C07F  FFDA         	movff	encher_tanque@vol+1,fsr2h
  2201  0023F2  CFDE F001          	movff	postinc2,___fladd@b
  2202  0023F6  CFDE F002          	movff	postinc2,___fladd@b+1
  2203  0023FA  CFDE F003          	movff	postinc2,___fladd@b+2
  2204  0023FE  CFDE F004          	movff	postinc2,___fladd@b+3
  2205  002402  EC47  F009         	call	___fladd	;wreg free
  2206  002406  C001  F01E         	movff	?___fladd,___flge@ff2
  2207  00240A  C002  F01F         	movff	?___fladd+1,___flge@ff2+1
  2208  00240E  C003  F020         	movff	?___fladd+2,___flge@ff2+2
  2209  002412  C004  F021         	movff	?___fladd+3,___flge@ff2+3
  2210  002416  EC41  F017         	call	___flge	;wreg free
  2211  00241A  B0D8               	btfsc	status,0,c
  2212  00241C  EF12  F012         	goto	u5011
  2213  002420  EF14  F012         	goto	u5010
  2214  002424                     u5011:
  2215  002424  EF2B  F012         	goto	l4248
  2216  002428                     u5010:
  2217  002428                     
  2218                           ;encher.c: 24:         lcd_cmd(0x01);
  2219  002428  0E01               	movlw	1
  2220  00242A  EC57  F01D         	call	_lcd_cmd
  2221                           
  2222                           ;encher.c: 25:         lcd_cmd(0x80);
  2223  00242E  0E80               	movlw	128
  2224  002430  EC57  F01D         	call	_lcd_cmd
  2225  002434                     
  2226                           ;encher.c: 26:         lcd_str("ERRO: vol > MAX");
  2227  002434  0E29               	movlw	low STR_9
  2228  002436  6E08               	movwf	lcd_str@str^0,c
  2229  002438  0E06               	movlw	high STR_9
  2230  00243A  6E09               	movwf	(lcd_str@str+1)^0,c
  2231  00243C  ECE0  F01A         	call	_lcd_str	;wreg free
  2232  002440                     
  2233                           ;encher.c: 27:         lcd_cmd(0xC0);
  2234  002440  0EC0               	movlw	192
  2235  002442  EC57  F01D         	call	_lcd_cmd
  2236                           
  2237                           ;encher.c: 28:         lcd_str("RB1-Voltar");
  2238  002446  0E67               	movlw	low (STR_16+3)
  2239  002448  6E08               	movwf	lcd_str@str^0,c
  2240  00244A  0E06               	movlw	high (STR_16+3)
  2241  00244C  6E09               	movwf	(lcd_str@str+1)^0,c
  2242  00244E  ECE0  F01A         	call	_lcd_str	;wreg free
  2243                           
  2244                           ;encher.c: 34:     } else {
  2245  002452  EFEC  F012         	goto	l142
  2246  002456                     l4248:
  2247                           
  2248                           ;encher.c: 36:         *vol += incremento;
  2249  002456  C07E  FFD9         	movff	encher_tanque@vol,fsr2l
  2250  00245A  C07F  FFDA         	movff	encher_tanque@vol+1,fsr2h
  2251  00245E  CFDE F001          	movff	postinc2,___fladd@b
  2252  002462  CFDE F002          	movff	postinc2,___fladd@b+1
  2253  002466  CFDE F003          	movff	postinc2,___fladd@b+2
  2254  00246A  CFDE F004          	movff	postinc2,___fladd@b+3
  2255  00246E  C0C2  F005         	movff	encher_tanque@incremento,___fladd@a
  2256  002472  C0C3  F006         	movff	encher_tanque@incremento+1,___fladd@a+1
  2257  002476  C0C4  F007         	movff	encher_tanque@incremento+2,___fladd@a+2
  2258  00247A  C0C5  F008         	movff	encher_tanque@incremento+3,___fladd@a+3
  2259  00247E  EC47  F009         	call	___fladd	;wreg free
  2260  002482  C07E  FFD9         	movff	encher_tanque@vol,fsr2l
  2261  002486  C07F  FFDA         	movff	encher_tanque@vol+1,fsr2h
  2262  00248A  C001  FFDE         	movff	?___fladd,postinc2
  2263  00248E  C002  FFDE         	movff	?___fladd+1,postinc2
  2264  002492  C003  FFDE         	movff	?___fladd+2,postinc2
  2265  002496  C004  FFDE         	movff	?___fladd+3,postinc2
  2266  00249A                     
  2267                           ;encher.c: 37:         char y[8];;encher.c: 38:         sprintf(y, "%.1f", *vol);
  2268  00249A  0EB8               	movlw	low encher_tanque@y
  2269  00249C  0100               	movlb	0	; () banked
  2270  00249E  6F92               	movwf	sprintf@s& (0+255),b
  2271  0024A0  0E00               	movlw	high encher_tanque@y
  2272  0024A2  6F93               	movwf	(sprintf@s+1)& (0+255),b
  2273  0024A4  0ED7               	movlw	low STR_11
  2274  0024A6  6F94               	movwf	sprintf@fmt& (0+255),b
  2275  0024A8  0E06               	movlw	high STR_11
  2276  0024AA  6F95               	movwf	(sprintf@fmt+1)& (0+255),b
  2277  0024AC  C07E  FFD9         	movff	encher_tanque@vol,fsr2l
  2278  0024B0  C07F  FFDA         	movff	encher_tanque@vol+1,fsr2h
  2279  0024B4  CFDE F096          	movff	postinc2,?_sprintf+4
  2280  0024B8  CFDE F097          	movff	postinc2,?_sprintf+5
  2281  0024BC  CFDE F098          	movff	postinc2,?_sprintf+6
  2282  0024C0  CFDE F099          	movff	postinc2,?_sprintf+7
  2283  0024C4  EC3C  F01C         	call	_sprintf	;wreg free
  2284  0024C8                     
  2285                           ;encher.c: 39:         lcd_str(y);
  2286  0024C8  0EB8               	movlw	low encher_tanque@y
  2287  0024CA  6E08               	movwf	lcd_str@str^0,c
  2288  0024CC  0E00               	movlw	high encher_tanque@y
  2289  0024CE  6E09               	movwf	(lcd_str@str+1)^0,c
  2290  0024D0  ECE0  F01A         	call	_lcd_str	;wreg free
  2291  0024D4                     
  2292                           ;encher.c: 40:         lcd_str(" L");
  2293  0024D4  0EEF               	movlw	low STR_12
  2294  0024D6  6E08               	movwf	lcd_str@str^0,c
  2295  0024D8  0E06               	movlw	high STR_12
  2296  0024DA  6E09               	movwf	(lcd_str@str+1)^0,c
  2297  0024DC  ECE0  F01A         	call	_lcd_str	;wreg free
  2298  0024E0                     
  2299                           ;encher.c: 43:         int tempo = incremento / 2;
  2300  0024E0  0E00               	movlw	0
  2301  0024E2  6E05               	movwf	___fldiv@a^0,c
  2302  0024E4  0E00               	movlw	0
  2303  0024E6  6E06               	movwf	(___fldiv@a+1)^0,c
  2304  0024E8  0E00               	movlw	0
  2305  0024EA  6E07               	movwf	(___fldiv@a+2)^0,c
  2306  0024EC  0E40               	movlw	64
  2307  0024EE  6E08               	movwf	(___fldiv@a+3)^0,c
  2308  0024F0  C0C2  F001         	movff	encher_tanque@incremento,___fldiv@b
  2309  0024F4  C0C3  F002         	movff	encher_tanque@incremento+1,___fldiv@b+1
  2310  0024F8  C0C4  F003         	movff	encher_tanque@incremento+2,___fldiv@b+2
  2311  0024FC  C0C5  F004         	movff	encher_tanque@incremento+3,___fldiv@b+3
  2312  002500  ECF1  F00F         	call	___fldiv	;wreg free
  2313  002504  C001  F01A         	movff	?___fldiv,___fltol@f1
  2314  002508  C002  F01B         	movff	?___fldiv+1,___fltol@f1+1
  2315  00250C  C003  F01C         	movff	?___fldiv+2,___fltol@f1+2
  2316  002510  C004  F01D         	movff	?___fldiv+3,___fltol@f1+3
  2317  002514  ECBE  F016         	call	___fltol	;wreg free
  2318  002518  C01A  F0C0         	movff	?___fltol,encher_tanque@tempo
  2319  00251C  C01B  F0C1         	movff	?___fltol+1,encher_tanque@tempo+1
  2320  002520                     
  2321                           ;encher.c: 44:         int i;;encher.c: 45:         int numeros[10] = {0x3F, 0x06, 0x5B,
      +                           0x4F, 0x66, 0x6D, 0x7D,
  2322  002520  EE20  F0C8         	lfsr	2,encher_tanque@F342
  2323  002524  EE10  F0A4         	lfsr	1,encher_tanque@numeros
  2324  002528  0E13               	movlw	19
  2325  00252A                     u5021:
  2326  00252A  CFDB FFE3          	movff	plusw2,plusw1
  2327  00252E  06E8               	decf	wreg,f,c
  2328  002530  E2FC               	bc	u5021
  2329  002532                     
  2330                           ;encher.c: 48:         (*(volatile __near unsigned char*)0xF92) = 0x00;
  2331  002532  0E00               	movlw	0
  2332  002534  6E92               	movwf	146,c	;volatile
  2333  002536                     
  2334                           ;encher.c: 49:         (((*(volatile __near unsigned char*)0xF80)) |= (1<<5));
  2335  002536  8A80               	bsf	128,5,c	;volatile
  2336  002538                     
  2337                           ;encher.c: 54:         lcd_cmd(0x01);
  2338  002538  0E01               	movlw	1
  2339  00253A  EC57  F01D         	call	_lcd_cmd
  2340  00253E                     
  2341                           ;encher.c: 55:         lcd_cmd(0x80);
  2342  00253E  0E80               	movlw	128
  2343  002540  EC57  F01D         	call	_lcd_cmd
  2344  002544                     
  2345                           ;encher.c: 56:         lcd_str("Enchendo...");
  2346  002544  0E8D               	movlw	low STR_13
  2347  002546  6E08               	movwf	lcd_str@str^0,c
  2348  002548  0E06               	movlw	high STR_13
  2349  00254A  6E09               	movwf	(lcd_str@str+1)^0,c
  2350  00254C  ECE0  F01A         	call	_lcd_str	;wreg free
  2351  002550                     
  2352                           ;encher.c: 57:         lcd_cmd(0xC0);
  2353  002550  0EC0               	movlw	192
  2354  002552  EC57  F01D         	call	_lcd_cmd
  2355  002556                     
  2356                           ;encher.c: 58:         lcd_str("Aguarde!");
  2357  002556  0EC6               	movlw	low STR_14
  2358  002558  6E08               	movwf	lcd_str@str^0,c
  2359  00255A  0E06               	movlw	high STR_14
  2360  00255C  6E09               	movwf	(lcd_str@str+1)^0,c
  2361  00255E  ECE0  F01A         	call	_lcd_str	;wreg free
  2362  002562                     
  2363                           ;encher.c: 65:         for (i = tempo; i >= 0; i--) {
  2364  002562  C0C0  F0C6         	movff	encher_tanque@tempo,encher_tanque@i
  2365  002566  C0C1  F0C7         	movff	encher_tanque@tempo+1,encher_tanque@i+1
  2366  00256A                     l4276:
  2367  00256A  0100               	movlb	0	; () banked
  2368  00256C  BFC7               	btfsc	(encher_tanque@i+1)& (0+255),7,b
  2369  00256E  EFBD  F012         	goto	u5030
  2370  002572  EFBB  F012         	goto	u5031
  2371  002576                     u5031:
  2372  002576  EFBF  F012         	goto	l4280
  2373  00257A                     u5030:
  2374  00257A  EFD6  F012         	goto	l4288
  2375  00257E                     l4280:
  2376                           
  2377                           ; BSR set to: 0
  2378                           ;encher.c: 66:             (*(volatile __near unsigned char*)0xF83) = numeros[i];
  2379  00257E  90D8               	bcf	status,0,c
  2380  002580  35C6               	rlcf	encher_tanque@i& (0+255),w,b
  2381  002582  6ED9               	movwf	fsr2l,c
  2382  002584  35C7               	rlcf	(encher_tanque@i+1)& (0+255),w,b
  2383  002586  6EDA               	movwf	fsr2h,c
  2384  002588  0EA4               	movlw	low encher_tanque@numeros
  2385  00258A  26D9               	addwf	fsr2l,f,c
  2386  00258C  0E00               	movlw	high encher_tanque@numeros
  2387  00258E  22DA               	addwfc	fsr2h,f,c
  2388  002590  50DF               	movf	indf2,w,c
  2389  002592  6E83               	movwf	131,c	;volatile
  2390  002594                     
  2391                           ; BSR set to: 0
  2392                           ;encher.c: 67:             atraso_ms(1000);
  2393  002594  0E03               	movlw	3
  2394  002596  6E02               	movwf	(atraso_ms@t+1)^0,c
  2395  002598  0EE8               	movlw	232
  2396  00259A  6E01               	movwf	atraso_ms@t^0,c
  2397  00259C  EC1C  F01B         	call	_atraso_ms	;wreg free
  2398  0025A0                     
  2399                           ;encher.c: 68:         }
  2400  0025A0  0100               	movlb	0	; () banked
  2401  0025A2  07C6               	decf	encher_tanque@i& (0+255),f,b
  2402  0025A4  A0D8               	btfss	status,0,c
  2403  0025A6  07C7               	decf	(encher_tanque@i+1)& (0+255),f,b
  2404  0025A8  EFB5  F012         	goto	l4276
  2405  0025AC                     l4288:
  2406                           
  2407                           ; BSR set to: 0
  2408                           ;encher.c: 69:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  2409  0025AC  9A80               	bcf	128,5,c	;volatile
  2410  0025AE                     
  2411                           ; BSR set to: 0
  2412                           ;encher.c: 72:         lcd_cmd(0x01);
  2413  0025AE  0E01               	movlw	1
  2414  0025B0  EC57  F01D         	call	_lcd_cmd
  2415  0025B4                     
  2416                           ;encher.c: 73:         lcd_cmd(0x80);
  2417  0025B4  0E80               	movlw	128
  2418  0025B6  EC57  F01D         	call	_lcd_cmd
  2419  0025BA                     
  2420                           ;encher.c: 74:         lcd_str("    SUCESSO!");
  2421  0025BA  0E80               	movlw	low STR_15
  2422  0025BC  6E08               	movwf	lcd_str@str^0,c
  2423  0025BE  0E06               	movlw	high STR_15
  2424  0025C0  6E09               	movwf	(lcd_str@str+1)^0,c
  2425  0025C2  ECE0  F01A         	call	_lcd_str	;wreg free
  2426  0025C6                     
  2427                           ;encher.c: 75:         lcd_cmd(0xC0);
  2428  0025C6  0EC0               	movlw	192
  2429  0025C8  EC57  F01D         	call	_lcd_cmd
  2430  0025CC                     
  2431                           ;encher.c: 76:         lcd_str("   RB1-Voltar");
  2432  0025CC  0E64               	movlw	low STR_16
  2433  0025CE  6E08               	movwf	lcd_str@str^0,c
  2434  0025D0  0E06               	movlw	high STR_16
  2435  0025D2  6E09               	movwf	(lcd_str@str+1)^0,c
  2436  0025D4  ECE0  F01A         	call	_lcd_str	;wreg free
  2437  0025D8                     l142:
  2438                           
  2439                           ;encher.c: 94:     while(((((*(volatile __near unsigned char*)0xF81)) & (1<<1)))){
  2440  0025D8  B281               	btfsc	129,1,c	;volatile
  2441  0025DA  EFF1  F012         	goto	u5041
  2442  0025DE  EFF3  F012         	goto	u5040
  2443  0025E2                     u5041:
  2444  0025E2  EFEC  F012         	goto	l142
  2445  0025E6                     u5040:
  2446  0025E6  0012               	return		;funcret
  2447  0025E8                     __end_of_encher_tanque:
  2448                           	callstack 0
  2449                           
  2450 ;; *************** function _sprintf *****************
  2451 ;; Defined at:
  2452 ;;		line 9 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  2453 ;; Parameters:    Size  Location     Type
  2454 ;;  s               2   18[BANK0 ] PTR unsigned char 
  2455 ;;		 -> esvaziar_tanque@y(8), ver_quantidade@y(8), encher_tanque@y(8), 
  2456 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
  2457 ;;		 -> STR_25(5), STR_17(5), STR_11(5), 
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;  f               6   30[BANK0 ] struct _IO_FILE
  2460 ;;  ap              2   28[BANK0 ] PTR void [1]
  2461 ;;		 -> ?_sprintf(2), 
  2462 ;;  ret             2    0        int 
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  2   18[BANK0 ] int 
  2465 ;; Registers used:
  2466 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2472 ;;      Params:         0       8       0       0       0       0       0
  2473 ;;      Locals:         0      10       0       0       0       0       0
  2474 ;;      Temps:          0       0       0       0       0       0       0
  2475 ;;      Totals:         0      18       0       0       0       0       0
  2476 ;;Total ram usage:       18 bytes
  2477 ;; Hardware stack levels used:    1
  2478 ;; Hardware stack levels required when called:    7
  2479 ;; This function calls:
  2480 ;;		_vfprintf
  2481 ;; This function is called by:
  2482 ;;		_encher_tanque
  2483 ;;		_ver_quantidade
  2484 ;;		_esvaziar_tanque
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text5
  2489  003878                     __ptext5:
  2490                           	callstack 0
  2491  003878                     _sprintf:
  2492                           	callstack 22
  2493  003878  0E96               	movlw	low (?_sprintf+4)
  2494  00387A  0100               	movlb	0	; () banked
  2495  00387C  6F9C               	movwf	sprintf@ap& (0+255),b
  2496  00387E  0E00               	movlw	high (?_sprintf+4)
  2497  003880  6F9D               	movwf	(sprintf@ap+1)& (0+255),b
  2498  003882  C092  F09E         	movff	sprintf@s,sprintf@f
  2499  003886  C093  F09F         	movff	sprintf@s+1,sprintf@f+1
  2500  00388A                     
  2501                           ; BSR set to: 0
  2502  00388A  0E00               	movlw	0
  2503  00388C  6FA1               	movwf	(sprintf@f+3)& (0+255),b
  2504  00388E  0E00               	movlw	0
  2505  003890  6FA0               	movwf	(sprintf@f+2)& (0+255),b
  2506  003892                     
  2507                           ; BSR set to: 0
  2508  003892  0E00               	movlw	0
  2509  003894  6FA3               	movwf	(sprintf@f+5)& (0+255),b
  2510  003896  0E00               	movlw	0
  2511  003898  6FA2               	movwf	(sprintf@f+4)& (0+255),b
  2512  00389A                     
  2513                           ; BSR set to: 0
  2514  00389A  0E9E               	movlw	low sprintf@f
  2515  00389C  6F8C               	movwf	vfprintf@fp& (0+255),b
  2516  00389E  0E00               	movlw	high sprintf@f
  2517  0038A0  6F8D               	movwf	(vfprintf@fp+1)& (0+255),b
  2518  0038A2  C094  F08E         	movff	sprintf@fmt,vfprintf@fmt
  2519  0038A6  C095  F08F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2520  0038AA  0E9C               	movlw	low sprintf@ap
  2521  0038AC  6F90               	movwf	vfprintf@ap& (0+255),b
  2522  0038AE  0E00               	movlw	high sprintf@ap
  2523  0038B0  6F91               	movwf	(vfprintf@ap+1)& (0+255),b
  2524  0038B2  EC7F  F01B         	call	_vfprintf	;wreg free
  2525  0038B6  0100               	movlb	0	; () banked
  2526  0038B8  51A0               	movf	(sprintf@f+2)& (0+255),w,b
  2527  0038BA  2592               	addwf	sprintf@s& (0+255),w,b
  2528  0038BC  6ED9               	movwf	fsr2l,c
  2529  0038BE  51A1               	movf	(sprintf@f+3)& (0+255),w,b
  2530  0038C0  2193               	addwfc	(sprintf@s+1)& (0+255),w,b
  2531  0038C2  6EDA               	movwf	fsr2h,c
  2532  0038C4  0E00               	movlw	0
  2533  0038C6  6EDF               	movwf	indf2,c
  2534  0038C8                     
  2535                           ; BSR set to: 0
  2536  0038C8  0012               	return		;funcret
  2537  0038CA                     __end_of_sprintf:
  2538                           	callstack 0
  2539                           
  2540 ;; *************** function _vfprintf *****************
  2541 ;; Defined at:
  2542 ;;		line 1368 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  2545 ;;		 -> sprintf@f(6), 
  2546 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  2547 ;;		 -> STR_25(5), STR_17(5), STR_11(5), 
  2548 ;;  ap              2   16[BANK0 ] PTR PTR void 
  2549 ;;		 -> sprintf@ap(2), 
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;  cfmt            2  123[COMRAM] PTR unsigned char 
  2552 ;;		 -> STR_25(5), STR_17(5), STR_11(5), 
  2553 ;; Return value:  Size  Location     Type
  2554 ;;                  2   12[BANK0 ] int 
  2555 ;; Registers used:
  2556 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2557 ;; Tracked objects:
  2558 ;;		On entry : 0/0
  2559 ;;		On exit  : 0/0
  2560 ;;		Unchanged: 0/0
  2561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2562 ;;      Params:         0       6       0       0       0       0       0
  2563 ;;      Locals:         2       0       0       0       0       0       0
  2564 ;;      Temps:          0       0       0       0       0       0       0
  2565 ;;      Totals:         2       6       0       0       0       0       0
  2566 ;;Total ram usage:        8 bytes
  2567 ;; Hardware stack levels used:    1
  2568 ;; Hardware stack levels required when called:    6
  2569 ;; This function calls:
  2570 ;;		_vfpfcnvrt
  2571 ;; This function is called by:
  2572 ;;		_sprintf
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575                           
  2576                           	psect	text6
  2577  0036FE                     __ptext6:
  2578                           	callstack 0
  2579  0036FE                     _vfprintf:
  2580                           	callstack 22
  2581  0036FE                     
  2582                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprintf(FIL
      +                          E *fp, const char *fmt, va_list ap);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1369: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 13
      +                          71:     char *cfmt;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 137
      +                          3:     cfmt = (char *)fmt;
  2583  0036FE  C08E  F07C         	movff	vfprintf@fmt,vfprintf@cfmt
  2584  003702  C08F  F07D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2585  003706                     
  2586                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 0;
  2587  003706  0E00               	movlw	0
  2588  003708  0100               	movlb	0	; () banked
  2589  00370A  6FEF               	movwf	(_nout+1)& (0+255),b
  2590  00370C  0E00               	movlw	0
  2591  00370E  6FEE               	movwf	_nout& (0+255),b
  2592                           
  2593                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt
      +                          ) {
  2594  003710  EF9D  F01B         	goto	l4156
  2595  003714                     l4154:
  2596                           
  2597                           ; BSR set to: 0
  2598                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nout += 
      +                          vfpfcnvrt(fp, &cfmt, ap);
  2599  003714  C08C  F072         	movff	vfprintf@fp,vfpfcnvrt@fp
  2600  003718  C08D  F073         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2601  00371C  0E7C               	movlw	low vfprintf@cfmt
  2602  00371E  6E74               	movwf	vfpfcnvrt@fmt^0,c
  2603  003720  0E00               	movlw	high vfprintf@cfmt
  2604  003722  6E75               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2605  003724  C090  F076         	movff	vfprintf@ap,vfpfcnvrt@ap
  2606  003728  C091  F077         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2607  00372C  ECA7  F00B         	call	_vfpfcnvrt	;wreg free
  2608  003730  5072               	movf	?_vfpfcnvrt^0,w,c
  2609  003732  0100               	movlb	0	; () banked
  2610  003734  27EE               	addwf	_nout& (0+255),f,b
  2611  003736  5073               	movf	(?_vfpfcnvrt+1)^0,w,c
  2612  003738  23EF               	addwfc	(_nout+1)& (0+255),f,b
  2613  00373A                     l4156:
  2614                           
  2615                           ; BSR set to: 0
  2616                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt
      +                          ) {
  2617  00373A  C07C  FFF6         	movff	vfprintf@cfmt,tblptrl
  2618  00373E  C07D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2619  003742                     	if	0	;tblptru may be non-zero
  2620  003742                     	endif
  2621  003742                     	if	0	;tblptru may be non-zero
  2622  003742                     	endif
  2623  003742  0008               	tblrd		*
  2624  003744  50F5               	movf	tablat,w,c
  2625  003746  0900               	iorlw	0
  2626  003748  A4D8               	btfss	status,2,c
  2627  00374A  EFA9  F01B         	goto	u4951
  2628  00374E  EFAB  F01B         	goto	u4950
  2629  003752                     u4951:
  2630  003752  EF8A  F01B         	goto	l4154
  2631  003756                     u4950:
  2632  003756                     
  2633                           ; BSR set to: 0
  2634                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return nout;
  2635  003756  C0EE  F08C         	movff	_nout,?_vfprintf
  2636  00375A  C0EF  F08D         	movff	_nout+1,?_vfprintf+1
  2637  00375E                     
  2638                           ; BSR set to: 0
  2639  00375E  0012               	return		;funcret
  2640  003760                     __end_of_vfprintf:
  2641                           	callstack 0
  2642                           
  2643 ;; *************** function _vfpfcnvrt *****************
  2644 ;; Defined at:
  2645 ;;		line 670 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;  fp              2  113[COMRAM] PTR struct _IO_FILE
  2648 ;;		 -> sprintf@f(6), 
  2649 ;;  fmt             2  115[COMRAM] PTR PTR unsigned char 
  2650 ;;		 -> vfprintf@cfmt(2), 
  2651 ;;  ap              2  117[COMRAM] PTR PTR void 
  2652 ;;		 -> sprintf@ap(2), 
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;  llu             8    0        unsigned long long 
  2655 ;;  ll              8    0        long long 
  2656 ;;  f               4    4[BANK0 ] long long 
  2657 ;;  ct              3    8[BANK0 ] unsigned char [3]
  2658 ;;  vp              3    0        PTR void 
  2659 ;;  cp              3    0        PTR unsigned char 
  2660 ;;  i               2    0        int 
  2661 ;;  done            2    0        int 
  2662 ;;  c               1   11[BANK0 ] unsigned char 
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  2  113[COMRAM] int 
  2665 ;; Registers used:
  2666 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2672 ;;      Params:         6       0       0       0       0       0       0
  2673 ;;      Locals:         0      12       0       0       0       0       0
  2674 ;;      Temps:          4       0       0       0       0       0       0
  2675 ;;      Totals:        10      12       0       0       0       0       0
  2676 ;;Total ram usage:       22 bytes
  2677 ;; Hardware stack levels used:    1
  2678 ;; Hardware stack levels required when called:    5
  2679 ;; This function calls:
  2680 ;;		_atoi
  2681 ;;		_efgtoa
  2682 ;;		_fputc
  2683 ;;		_isdigit
  2684 ;;		_isupper
  2685 ;;		_strncmp
  2686 ;;		_tolower
  2687 ;; This function is called by:
  2688 ;;		_vfprintf
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           	psect	text7
  2693  00174E                     __ptext7:
  2694                           	callstack 0
  2695  00174E                     _vfpfcnvrt:
  2696                           	callstack 22
  2697  00174E                     
  2698                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int vfpfcn
      +                          vrt(FILE *fp, char *fmt[], va_list ap);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\c
      +                          ommon\doprnt.c: 671: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          672:     char c, *cp, ct[3];;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\dopr
      +                          nt.c: 673:     int done, i;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 674:     long long ll;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 675:     unsigned long long llu;
  2699  00174E  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2700  001752  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2701  001756  CFDE FFF6          	movff	postinc2,tblptrl
  2702  00175A  CFDD FFF7          	movff	postdec2,tblptrh
  2703  00175E                     	if	0	;tblptru may be non-zero
  2704  00175E                     	endif
  2705  00175E                     	if	0	;tblptru may be non-zero
  2706  00175E                     	endif
  2707  00175E  0008               	tblrd		*
  2708  001760  50F5               	movf	tablat,w,c
  2709  001762  0A25               	xorlw	37
  2710  001764  A4D8               	btfss	status,2,c
  2711  001766  EFB7  F00B         	goto	u4811
  2712  00176A  EFB9  F00B         	goto	u4810
  2713  00176E                     u4811:
  2714  00176E  EFC0  F00D         	goto	l4128
  2715  001772                     u4810:
  2716  001772                     
  2717                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*fmt;
  2718  001772  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2719  001776  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2720  00177A  2ADE               	incf	postinc2,f,c
  2721  00177C  0E00               	movlw	0
  2722  00177E  22DD               	addwfc	postdec2,f,c
  2723  001780                     
  2724                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flags = w
      +                          idth = 0;
  2725  001780  0E00               	movlw	0
  2726  001782  0100               	movlb	0	; () banked
  2727  001784  6FF1               	movwf	(_width+1)& (0+255),b
  2728  001786  0E00               	movlw	0
  2729  001788  6FF0               	movwf	_width& (0+255),b
  2730  00178A  C0F0  F0F4         	movff	_width,_flags
  2731  00178E  C0F1  F0F5         	movff	_width+1,_flags+1
  2732  001792                     
  2733                           ; BSR set to: 0
  2734                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec = -1
      +                          ;
  2735  001792  69F2               	setf	_prec& (0+255),b
  2736  001794  69F3               	setf	(_prec+1)& (0+255),b
  2737  001796                     
  2738                           ; BSR set to: 0
  2739                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if ((*fmt
      +                          )[0] == '.') {
  2740  001796  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2741  00179A  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2742  00179E  CFDE FFF6          	movff	postinc2,tblptrl
  2743  0017A2  CFDD FFF7          	movff	postdec2,tblptrh
  2744  0017A6                     	if	0	;tblptru may be non-zero
  2745  0017A6                     	endif
  2746  0017A6                     	if	0	;tblptru may be non-zero
  2747  0017A6                     	endif
  2748  0017A6  0008               	tblrd		*
  2749  0017A8  50F5               	movf	tablat,w,c
  2750  0017AA  0A2E               	xorlw	46
  2751  0017AC  A4D8               	btfss	status,2,c
  2752  0017AE  EFDB  F00B         	goto	u4821
  2753  0017B2  EFDD  F00B         	goto	u4820
  2754  0017B6                     u4821:
  2755  0017B6  EF5B  F00C         	goto	l4074
  2756  0017BA                     u4820:
  2757  0017BA                     
  2758                           ; BSR set to: 0
  2759                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             prec 
      +                          = 0;
  2760  0017BA  0E00               	movlw	0
  2761  0017BC  6FF3               	movwf	(_prec+1)& (0+255),b
  2762  0017BE  0E00               	movlw	0
  2763  0017C0  6FF2               	movwf	_prec& (0+255),b
  2764  0017C2                     
  2765                           ; BSR set to: 0
  2766                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             ++*fm
      +                          t;
  2767  0017C2  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2768  0017C6  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2769  0017CA  2ADE               	incf	postinc2,f,c
  2770  0017CC  0E00               	movlw	0
  2771  0017CE  22DD               	addwfc	postdec2,f,c
  2772  0017D0                     
  2773                           ; BSR set to: 0
  2774                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             if ((
      +                          *fmt)[0] == '*') {
  2775  0017D0  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2776  0017D4  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2777  0017D8  CFDE FFF6          	movff	postinc2,tblptrl
  2778  0017DC  CFDD FFF7          	movff	postdec2,tblptrh
  2779  0017E0                     	if	0	;tblptru may be non-zero
  2780  0017E0                     	endif
  2781  0017E0                     	if	0	;tblptru may be non-zero
  2782  0017E0                     	endif
  2783  0017E0  0008               	tblrd		*
  2784  0017E2  50F5               	movf	tablat,w,c
  2785  0017E4  0A2A               	xorlw	42
  2786  0017E6  A4D8               	btfss	status,2,c
  2787  0017E8  EFF8  F00B         	goto	u4831
  2788  0017EC  EFFA  F00B         	goto	u4830
  2789  0017F0                     u4831:
  2790  0017F0  EF17  F00C         	goto	l4064
  2791  0017F4                     u4830:
  2792  0017F4                     
  2793                           ; BSR set to: 0
  2794                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:                 +
      +                          +*fmt;
  2795  0017F4  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2796  0017F8  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2797  0017FC  2ADE               	incf	postinc2,f,c
  2798  0017FE  0E00               	movlw	0
  2799  001800  22DD               	addwfc	postdec2,f,c
  2800                           
  2801                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:                 p
      +                          rec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2802  001802  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2803  001806  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2804  00180A  CFDF F078          	movff	indf2,??_vfpfcnvrt
  2805  00180E  0E02               	movlw	2
  2806  001810  26DE               	addwf	postinc2,f,c
  2807  001812  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  2808  001816  0E00               	movlw	0
  2809  001818  22DD               	addwfc	postdec2,f,c
  2810  00181A  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2811  00181E  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2812  001822  CFDE F0F2          	movff	postinc2,_prec
  2813  001826  CFDD F0F3          	movff	postdec2,_prec+1
  2814                           
  2815                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             } els
      +                          e {
  2816  00182A  EF5B  F00C         	goto	l4074
  2817  00182E                     l4064:
  2818                           
  2819                           ; BSR set to: 0
  2820                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:                 p
      +                          rec = atoi(*fmt);
  2821  00182E  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2822  001832  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2823  001836  CFDE F008          	movff	postinc2,atoi@s
  2824  00183A  CFDD F009          	movff	postdec2,atoi@s+1
  2825  00183E  ECF6  F015         	call	_atoi	;wreg free
  2826  001842  C008  F0F2         	movff	?_atoi,_prec
  2827  001846  C009  F0F3         	movff	?_atoi+1,_prec+1
  2828                           
  2829                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:                 w
      +                          hile ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2830  00184A  EF2E  F00C         	goto	l4068
  2831  00184E                     l4066:
  2832                           
  2833                           ; BSR set to: 0
  2834                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:                  
      +                             ++*fmt;
  2835  00184E  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2836  001852  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2837  001856  2ADE               	incf	postinc2,f,c
  2838  001858  0E00               	movlw	0
  2839  00185A  22DD               	addwfc	postdec2,f,c
  2840  00185C                     l4068:
  2841  00185C  0ED0               	movlw	208
  2842  00185E  6E78               	movwf	??_vfpfcnvrt^0,c
  2843  001860  0EFF               	movlw	255
  2844  001862  6E79               	movwf	(??_vfpfcnvrt+1)^0,c
  2845  001864  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2846  001868  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2847  00186C  CFDE FFF6          	movff	postinc2,tblptrl
  2848  001870  CFDD FFF7          	movff	postdec2,tblptrh
  2849  001874                     	if	0	;tblptru may be non-zero
  2850  001874                     	endif
  2851  001874                     	if	0	;tblptru may be non-zero
  2852  001874                     	endif
  2853  001874  0008               	tblrd		*
  2854  001876  50F5               	movf	tablat,w,c
  2855  001878  6E7A               	movwf	(??_vfpfcnvrt+2)^0,c
  2856  00187A  6A7B               	clrf	(??_vfpfcnvrt+3)^0,c
  2857  00187C  5078               	movf	??_vfpfcnvrt^0,w,c
  2858  00187E  267A               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2859  001880  5079               	movf	(??_vfpfcnvrt+1)^0,w,c
  2860  001882  227B               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2861  001884  507B               	movf	(??_vfpfcnvrt+3)^0,w,c
  2862  001886  E10A               	bnz	u4840
  2863  001888  0E0A               	movlw	10
  2864  00188A  5C7A               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2865  00188C  A0D8               	btfss	status,0,c
  2866  00188E  EF4B  F00C         	goto	u4841
  2867  001892  EF4E  F00C         	goto	u4840
  2868  001896                     u4841:
  2869  001896  0E01               	movlw	1
  2870  001898  EF4F  F00C         	goto	u4850
  2871  00189C                     u4840:
  2872  00189C  0E00               	movlw	0
  2873  00189E                     u4850:
  2874  00189E  0100               	movlb	0	; () banked
  2875  0018A0  6F80               	movwf	_vfpfcnvrt$749& (0+255),b
  2876  0018A2  6B81               	clrf	(_vfpfcnvrt$749+1)& (0+255),b
  2877  0018A4                     
  2878                           ; BSR set to: 0
  2879  0018A4  5180               	movf	_vfpfcnvrt$749& (0+255),w,b
  2880  0018A6  1181               	iorwf	(_vfpfcnvrt$749+1)& (0+255),w,b
  2881  0018A8  A4D8               	btfss	status,2,c
  2882  0018AA  EF59  F00C         	goto	u4861
  2883  0018AE  EF5B  F00C         	goto	u4860
  2884  0018B2                     u4861:
  2885  0018B2  EF27  F00C         	goto	l4066
  2886  0018B6                     u4860:
  2887  0018B6                     l4074:
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0] = t
      +                          olower((int)(*fmt)[0]);
  2891  0018B6  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2892  0018BA  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2893  0018BE  CFDE FFF6          	movff	postinc2,tblptrl
  2894  0018C2  CFDD FFF7          	movff	postdec2,tblptrh
  2895  0018C6                     	if	0	;tblptru may be non-zero
  2896  0018C6                     	endif
  2897  0018C6                     	if	0	;tblptru may be non-zero
  2898  0018C6                     	endif
  2899  0018C6  0008               	tblrd		*
  2900  0018C8  50F5               	movf	tablat,w,c
  2901  0018CA  6E07               	movwf	tolower@c^0,c
  2902  0018CC  6A08               	clrf	(tolower@c+1)^0,c
  2903  0018CE  ECB0  F01B         	call	_tolower	;wreg free
  2904  0018D2  5007               	movf	?_tolower^0,w,c
  2905  0018D4  0100               	movlb	0	; () banked
  2906  0018D6  6F88               	movwf	vfpfcnvrt@ct& (0+255),b
  2907  0018D8                     
  2908                           ; BSR set to: 0
  2909                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (ct[0]
      +                          ) {
  2910  0018D8  5188               	movf	vfpfcnvrt@ct& (0+255),w,b
  2911  0018DA  B4D8               	btfsc	status,2,c
  2912  0018DC  EF72  F00C         	goto	u4871
  2913  0018E0  EF74  F00C         	goto	u4870
  2914  0018E4                     u4871:
  2915  0018E4  EFAE  F00C         	goto	l4084
  2916  0018E8                     u4870:
  2917  0018E8                     
  2918                           ; BSR set to: 0
  2919                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             ct[1]
      +                           = tolower((int)(*fmt)[1]);
  2920  0018E8  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2921  0018EC  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2922  0018F0  CFDE F078          	movff	postinc2,??_vfpfcnvrt
  2923  0018F4  CFDD F079          	movff	postdec2,??_vfpfcnvrt+1
  2924  0018F8  0E01               	movlw	1
  2925  0018FA  2678               	addwf	??_vfpfcnvrt^0,f,c
  2926  0018FC  0E00               	movlw	0
  2927  0018FE  2279               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2928  001900  C078  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2929  001904  C079  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2930  001908                     	if	0	;tblptru may be non-zero
  2931  001908                     	endif
  2932  001908                     	if	0	;tblptru may be non-zero
  2933  001908                     	endif
  2934  001908  0008               	tblrd		*
  2935  00190A  50F5               	movf	tablat,w,c
  2936  00190C  6E07               	movwf	tolower@c^0,c
  2937  00190E  6A08               	clrf	(tolower@c+1)^0,c
  2938  001910  ECB0  F01B         	call	_tolower	;wreg free
  2939  001914  5007               	movf	?_tolower^0,w,c
  2940  001916  0100               	movlb	0	; () banked
  2941  001918  6F89               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2942  00191A                     
  2943                           ; BSR set to: 0
  2944                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             if (c
      +                          t[1]) {
  2945  00191A  5189               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2946  00191C  B4D8               	btfsc	status,2,c
  2947  00191E  EF93  F00C         	goto	u4881
  2948  001922  EF95  F00C         	goto	u4880
  2949  001926                     u4881:
  2950  001926  EFAE  F00C         	goto	l4084
  2951  00192A                     u4880:
  2952  00192A                     
  2953                           ; BSR set to: 0
  2954                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:                 c
      +                          t[2] = tolower((int)(*fmt)[2]);
  2955  00192A  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2956  00192E  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2957  001932  CFDE F078          	movff	postinc2,??_vfpfcnvrt
  2958  001936  CFDD F079          	movff	postdec2,??_vfpfcnvrt+1
  2959  00193A  0E02               	movlw	2
  2960  00193C  2678               	addwf	??_vfpfcnvrt^0,f,c
  2961  00193E  0E00               	movlw	0
  2962  001940  2279               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2963  001942  C078  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2964  001946  C079  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2965  00194A                     	if	0	;tblptru may be non-zero
  2966  00194A                     	endif
  2967  00194A                     	if	0	;tblptru may be non-zero
  2968  00194A                     	endif
  2969  00194A  0008               	tblrd		*
  2970  00194C  50F5               	movf	tablat,w,c
  2971  00194E  6E07               	movwf	tolower@c^0,c
  2972  001950  6A08               	clrf	(tolower@c+1)^0,c
  2973  001952  ECB0  F01B         	call	_tolower	;wreg free
  2974  001956  5007               	movf	?_tolower^0,w,c
  2975  001958  0100               	movlb	0	; () banked
  2976  00195A  6F8A               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2977  00195C                     l4084:
  2978                           
  2979                           ; BSR set to: 0
  2980                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (ct[0]
      +                           == 'f') {
  2981  00195C  0E66               	movlw	102
  2982  00195E  1988               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2983  001960  A4D8               	btfss	status,2,c
  2984  001962  EFB5  F00C         	goto	u4891
  2985  001966  EFB7  F00C         	goto	u4890
  2986  00196A                     u4891:
  2987  00196A  EFF7  F00C         	goto	l4096
  2988  00196E                     u4890:
  2989  00196E                     
  2990                           ; BSR set to: 0
  2991                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             c = (
      +                          *fmt)[0];
  2992  00196E  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2993  001972  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2994  001976  CFDE FFF6          	movff	postinc2,tblptrl
  2995  00197A  CFDD FFF7          	movff	postdec2,tblptrh
  2996  00197E                     	if	0	;tblptru may be non-zero
  2997  00197E                     	endif
  2998  00197E                     	if	0	;tblptru may be non-zero
  2999  00197E                     	endif
  3000  00197E  0008               	tblrd		*
  3001  001980  CFF5 F08B          	movff	tablat,vfpfcnvrt@c
  3002  001984                     
  3003                           ; BSR set to: 0
  3004                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             ++*fm
      +                          t;
  3005  001984  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3006  001988  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3007  00198C  2ADE               	incf	postinc2,f,c
  3008  00198E  0E00               	movlw	0
  3009  001990  22DD               	addwfc	postdec2,f,c
  3010  001992                     
  3011                           ; BSR set to: 0
  3012                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             f = (
      +                          long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3013  001992  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3014  001996  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3015  00199A  CFDF F078          	movff	indf2,??_vfpfcnvrt
  3016  00199E  0E04               	movlw	4
  3017  0019A0  26DE               	addwf	postinc2,f,c
  3018  0019A2  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  3019  0019A6  0E00               	movlw	0
  3020  0019A8  22DD               	addwfc	postdec2,f,c
  3021  0019AA  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3022  0019AE  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3023  0019B2  CFDE F084          	movff	postinc2,vfpfcnvrt@f
  3024  0019B6  CFDE F085          	movff	postinc2,vfpfcnvrt@f+1
  3025  0019BA  CFDE F086          	movff	postinc2,vfpfcnvrt@f+2
  3026  0019BE  CFDE F087          	movff	postinc2,vfpfcnvrt@f+3
  3027  0019C2                     l4092:
  3028                           
  3029                           ; BSR set to: 0
  3030                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             retur
      +                          n efgtoa(fp, f, c);
  3031  0019C2  C072  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  3032  0019C6  C073  F02F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3033  0019CA  C084  F030         	movff	vfpfcnvrt@f,efgtoa@f
  3034  0019CE  C085  F031         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3035  0019D2  C086  F032         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3036  0019D6  C087  F033         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3037  0019DA  C08B  F034         	movff	vfpfcnvrt@c,efgtoa@c
  3038  0019DE  EC7A  F003         	call	_efgtoa	;wreg free
  3039  0019E2  C02E  F072         	movff	?_efgtoa,?_vfpfcnvrt
  3040  0019E6  C02F  F073         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3041  0019EA  EFDB  F00D         	goto	l1014
  3042  0019EE                     l4096:
  3043                           
  3044                           ; BSR set to: 0
  3045                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (!strn
      +                          cmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3046  0019EE  0E88               	movlw	low vfpfcnvrt@ct
  3047  0019F0  6E01               	movwf	strncmp@_l^0,c
  3048  0019F2  0E00               	movlw	high vfpfcnvrt@ct
  3049  0019F4  6E02               	movwf	(strncmp@_l+1)^0,c
  3050  0019F6  0EEC               	movlw	low STR_39
  3051  0019F8  6E03               	movwf	strncmp@_r^0,c
  3052  0019FA  0E06               	movlw	high STR_39
  3053  0019FC  6E04               	movwf	(strncmp@_r+1)^0,c
  3054  0019FE  0E00               	movlw	0
  3055  001A00  6E06               	movwf	(strncmp@n+1)^0,c
  3056  001A02  0E02               	movlw	2
  3057  001A04  6E05               	movwf	strncmp@n^0,c
  3058  001A06  EC42  F018         	call	_strncmp	;wreg free
  3059  001A0A  5001               	movf	?_strncmp^0,w,c
  3060  001A0C  1002               	iorwf	(?_strncmp+1)^0,w,c
  3061  001A0E  A4D8               	btfss	status,2,c
  3062  001A10  EF0C  F00D         	goto	u4901
  3063  001A14  EF0E  F00D         	goto	u4900
  3064  001A18                     u4901:
  3065  001A18  EF8A  F00D         	goto	l4112
  3066  001A1C                     u4900:
  3067  001A1C                     
  3068                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             if ((
      +                          0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3069  001A1C  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3070  001A20  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3071  001A24  CFDE F078          	movff	postinc2,??_vfpfcnvrt
  3072  001A28  CFDD F079          	movff	postdec2,??_vfpfcnvrt+1
  3073  001A2C  0E01               	movlw	1
  3074  001A2E  2678               	addwf	??_vfpfcnvrt^0,f,c
  3075  001A30  0E00               	movlw	0
  3076  001A32  2279               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3077  001A34  C078  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3078  001A38  C079  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3079  001A3C                     	if	0	;tblptru may be non-zero
  3080  001A3C                     	endif
  3081  001A3C                     	if	0	;tblptru may be non-zero
  3082  001A3C                     	endif
  3083  001A3C  0008               	tblrd		*
  3084  001A3E  CFF5 F08B          	movff	tablat,vfpfcnvrt@c
  3085  001A42  0EBF               	movlw	191
  3086  001A44  6E78               	movwf	??_vfpfcnvrt^0,c
  3087  001A46  0EFF               	movlw	255
  3088  001A48  6E79               	movwf	(??_vfpfcnvrt+1)^0,c
  3089  001A4A  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3090  001A4E  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3091  001A52  CFDE FFF6          	movff	postinc2,tblptrl
  3092  001A56  CFDD FFF7          	movff	postdec2,tblptrh
  3093  001A5A                     	if	0	;tblptru may be non-zero
  3094  001A5A                     	endif
  3095  001A5A                     	if	0	;tblptru may be non-zero
  3096  001A5A                     	endif
  3097  001A5A  0008               	tblrd		*
  3098  001A5C  50F5               	movf	tablat,w,c
  3099  001A5E  6E7A               	movwf	(??_vfpfcnvrt+2)^0,c
  3100  001A60  6A7B               	clrf	(??_vfpfcnvrt+3)^0,c
  3101  001A62  5078               	movf	??_vfpfcnvrt^0,w,c
  3102  001A64  267A               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3103  001A66  5079               	movf	(??_vfpfcnvrt+1)^0,w,c
  3104  001A68  227B               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3105  001A6A  507B               	movf	(??_vfpfcnvrt+3)^0,w,c
  3106  001A6C  E10A               	bnz	u4910
  3107  001A6E  0E1A               	movlw	26
  3108  001A70  5C7A               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3109  001A72  A0D8               	btfss	status,0,c
  3110  001A74  EF3E  F00D         	goto	u4911
  3111  001A78  EF41  F00D         	goto	u4910
  3112  001A7C                     u4911:
  3113  001A7C  0E01               	movlw	1
  3114  001A7E  EF42  F00D         	goto	u4920
  3115  001A82                     u4910:
  3116  001A82  0E00               	movlw	0
  3117  001A84                     u4920:
  3118  001A84  0100               	movlb	0	; () banked
  3119  001A86  6F82               	movwf	_vfpfcnvrt$753& (0+255),b
  3120  001A88  6B83               	clrf	(_vfpfcnvrt$753+1)& (0+255),b
  3121  001A8A                     
  3122                           ; BSR set to: 0
  3123  001A8A  5182               	movf	_vfpfcnvrt$753& (0+255),w,b
  3124  001A8C  1183               	iorwf	(_vfpfcnvrt$753+1)& (0+255),w,b
  3125  001A8E  B4D8               	btfsc	status,2,c
  3126  001A90  EF4C  F00D         	goto	u4931
  3127  001A94  EF4E  F00D         	goto	u4930
  3128  001A98                     u4931:
  3129  001A98  EF68  F00D         	goto	l4106
  3130  001A9C                     u4930:
  3131  001A9C                     
  3132                           ; BSR set to: 0
  3133                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:                 f
      +                           = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3134  001A9C  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3135  001AA0  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3136  001AA4  CFDF F078          	movff	indf2,??_vfpfcnvrt
  3137  001AA8  0E04               	movlw	4
  3138  001AAA  26DE               	addwf	postinc2,f,c
  3139  001AAC  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  3140  001AB0  0E00               	movlw	0
  3141  001AB2  22DD               	addwfc	postdec2,f,c
  3142  001AB4  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3143  001AB8  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3144  001ABC  CFDE F084          	movff	postinc2,vfpfcnvrt@f
  3145  001AC0  CFDE F085          	movff	postinc2,vfpfcnvrt@f+1
  3146  001AC4  CFDE F086          	movff	postinc2,vfpfcnvrt@f+2
  3147  001AC8  CFDE F087          	movff	postinc2,vfpfcnvrt@f+3
  3148                           
  3149                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             } els
      +                          e {
  3150  001ACC  EF80  F00D         	goto	l1021
  3151  001AD0                     l4106:
  3152                           
  3153                           ; BSR set to: 0
  3154                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:                 f
      +                           = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3155  001AD0  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3156  001AD4  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3157  001AD8  CFDF F078          	movff	indf2,??_vfpfcnvrt
  3158  001ADC  0E04               	movlw	4
  3159  001ADE  26DE               	addwf	postinc2,f,c
  3160  001AE0  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  3161  001AE4  0E00               	movlw	0
  3162  001AE6  22DD               	addwfc	postdec2,f,c
  3163  001AE8  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3164  001AEC  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3165  001AF0  CFDE F084          	movff	postinc2,vfpfcnvrt@f
  3166  001AF4  CFDE F085          	movff	postinc2,vfpfcnvrt@f+1
  3167  001AF8  CFDE F086          	movff	postinc2,vfpfcnvrt@f+2
  3168  001AFC  CFDE F087          	movff	postinc2,vfpfcnvrt@f+3
  3169  001B00                     l1021:
  3170                           
  3171                           ; BSR set to: 0
  3172                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             *fmt 
      +                          += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3173  001B00  0E02               	movlw	2
  3174  001B02  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3175  001B06  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3176  001B0A  26DE               	addwf	postinc2,f,c
  3177  001B0C  0E00               	movlw	0
  3178  001B0E  22DD               	addwfc	postdec2,f,c
  3179  001B10  EFE1  F00C         	goto	l4092
  3180  001B14                     l4112:
  3181                           
  3182                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if ((*fm
      +                          t)[0] == '%') {
  3183  001B14  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3184  001B18  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3185  001B1C  CFDE FFF6          	movff	postinc2,tblptrl
  3186  001B20  CFDD FFF7          	movff	postdec2,tblptrh
  3187  001B24                     	if	0	;tblptru may be non-zero
  3188  001B24                     	endif
  3189  001B24                     	if	0	;tblptru may be non-zero
  3190  001B24                     	endif
  3191  001B24  0008               	tblrd		*
  3192  001B26  50F5               	movf	tablat,w,c
  3193  001B28  0A25               	xorlw	37
  3194  001B2A  A4D8               	btfss	status,2,c
  3195  001B2C  EF9A  F00D         	goto	u4941
  3196  001B30  EF9C  F00D         	goto	u4940
  3197  001B34                     u4941:
  3198  001B34  EFB3  F00D         	goto	l4122
  3199  001B38                     u4940:
  3200  001B38                     
  3201                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:             ++*f
      +                          mt;
  3202  001B38  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3203  001B3C  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3204  001B40  2ADE               	incf	postinc2,f,c
  3205  001B42  0E00               	movlw	0
  3206  001B44  22DD               	addwfc	postdec2,f,c
  3207  001B46                     
  3208                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:             fput
      +                          c((int)'%', fp);
  3209  001B46  0E00               	movlw	0
  3210  001B48  6E02               	movwf	(fputc@c+1)^0,c
  3211  001B4A  0E25               	movlw	37
  3212  001B4C  6E01               	movwf	fputc@c^0,c
  3213  001B4E  C072  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3214  001B52  C073  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3215  001B56  ECAD  F018         	call	_fputc	;wreg free
  3216  001B5A                     l4118:
  3217                           
  3218                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:             retu
      +                          rn 1;
  3219  001B5A  0E00               	movlw	0
  3220  001B5C  6E73               	movwf	(?_vfpfcnvrt+1)^0,c
  3221  001B5E  0E01               	movlw	1
  3222  001B60  6E72               	movwf	?_vfpfcnvrt^0,c
  3223  001B62  EFDB  F00D         	goto	l1014
  3224  001B66                     l4122:
  3225                           
  3226                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*fmt;
  3227  001B66  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3228  001B6A  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3229  001B6E  2ADE               	incf	postinc2,f,c
  3230  001B70  0E00               	movlw	0
  3231  001B72  22DD               	addwfc	postdec2,f,c
  3232  001B74                     
  3233                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         return 0
      +                          ;
  3234  001B74  0E00               	movlw	0
  3235  001B76  6E73               	movwf	(?_vfpfcnvrt+1)^0,c
  3236  001B78  0E00               	movlw	0
  3237  001B7A  6E72               	movwf	?_vfpfcnvrt^0,c
  3238  001B7C  EFDB  F00D         	goto	l1014
  3239  001B80                     l4128:
  3240                           
  3241                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((int)(
      +                          *fmt)[0], fp);
  3242  001B80  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3243  001B84  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3244  001B88  CFDE FFF6          	movff	postinc2,tblptrl
  3245  001B8C  CFDD FFF7          	movff	postdec2,tblptrh
  3246  001B90                     	if	0	;tblptru may be non-zero
  3247  001B90                     	endif
  3248  001B90                     	if	0	;tblptru may be non-zero
  3249  001B90                     	endif
  3250  001B90  0008               	tblrd		*
  3251  001B92  50F5               	movf	tablat,w,c
  3252  001B94  6E01               	movwf	fputc@c^0,c
  3253  001B96  6A02               	clrf	(fputc@c+1)^0,c
  3254  001B98  C072  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3255  001B9C  C073  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3256  001BA0  ECAD  F018         	call	_fputc	;wreg free
  3257  001BA4                     
  3258                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  3259  001BA4  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3260  001BA8  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3261  001BAC  2ADE               	incf	postinc2,f,c
  3262  001BAE  0E00               	movlw	0
  3263  001BB0  22DD               	addwfc	postdec2,f,c
  3264  001BB2  EFAD  F00D         	goto	l4118
  3265  001BB6                     l1014:
  3266  001BB6  0012               	return		;funcret
  3267  001BB8                     __end_of_vfpfcnvrt:
  3268                           	callstack 0
  3269                           
  3270 ;; *************** function _strncmp *****************
  3271 ;; Defined at:
  3272 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  3275 ;;		 -> vfpfcnvrt@ct(3), 
  3276 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  3277 ;;		 -> STR_41(3), 
  3278 ;;  n               2    4[COMRAM] unsigned int 
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;  r               2    9[COMRAM] PTR const unsigned char 
  3281 ;;		 -> STR_41(3), 
  3282 ;;  l               2    7[COMRAM] PTR const unsigned char 
  3283 ;;		 -> vfpfcnvrt@ct(3), 
  3284 ;; Return value:  Size  Location     Type
  3285 ;;                  2    0[COMRAM] int 
  3286 ;; Registers used:
  3287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3288 ;; Tracked objects:
  3289 ;;		On entry : 0/0
  3290 ;;		On exit  : 0/0
  3291 ;;		Unchanged: 0/0
  3292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3293 ;;      Params:         6       0       0       0       0       0       0
  3294 ;;      Locals:         4       0       0       0       0       0       0
  3295 ;;      Temps:          1       0       0       0       0       0       0
  3296 ;;      Totals:        11       0       0       0       0       0       0
  3297 ;;Total ram usage:       11 bytes
  3298 ;; Hardware stack levels used:    1
  3299 ;; This function calls:
  3300 ;;		Nothing
  3301 ;; This function is called by:
  3302 ;;		_vfpfcnvrt
  3303 ;; This function uses a non-reentrant model
  3304 ;;
  3305                           
  3306                           	psect	text8
  3307  003084                     __ptext8:
  3308                           	callstack 0
  3309  003084                     _strncmp:
  3310                           	callstack 26
  3311  003084  C001  F008         	movff	strncmp@_l,strncmp@l
  3312  003088  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  3313  00308C  C003  F00A         	movff	strncmp@_r,strncmp@r
  3314  003090  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  3315  003094  0605               	decf	strncmp@n^0,f,c
  3316  003096  A0D8               	btfss	status,0,c
  3317  003098  0606               	decf	(strncmp@n+1)^0,f,c
  3318  00309A  2805               	incf	strncmp@n^0,w,c
  3319  00309C  E106               	bnz	u4731
  3320  00309E  2806               	incf	(strncmp@n+1)^0,w,c
  3321  0030A0  A4D8               	btfss	status,2,c
  3322  0030A2  EF55  F018         	goto	u4731
  3323  0030A6  EF57  F018         	goto	u4730
  3324  0030AA                     u4731:
  3325  0030AA  EF64  F018         	goto	l4006
  3326  0030AE                     u4730:
  3327  0030AE  0E00               	movlw	0
  3328  0030B0  6E02               	movwf	(?_strncmp+1)^0,c
  3329  0030B2  0E00               	movlw	0
  3330  0030B4  6E01               	movwf	?_strncmp^0,c
  3331  0030B6  EFAC  F018         	goto	l1142
  3332  0030BA                     l4004:
  3333  0030BA  4A08               	infsnz	strncmp@l^0,f,c
  3334  0030BC  2A09               	incf	(strncmp@l+1)^0,f,c
  3335  0030BE  4A0A               	infsnz	strncmp@r^0,f,c
  3336  0030C0  2A0B               	incf	(strncmp@r+1)^0,f,c
  3337  0030C2  0605               	decf	strncmp@n^0,f,c
  3338  0030C4  A0D8               	btfss	status,0,c
  3339  0030C6  0606               	decf	(strncmp@n+1)^0,f,c
  3340  0030C8                     l4006:
  3341  0030C8  C008  FFD9         	movff	strncmp@l,fsr2l
  3342  0030CC  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3343  0030D0  50DF               	movf	indf2,w,c
  3344  0030D2  B4D8               	btfsc	status,2,c
  3345  0030D4  EF6E  F018         	goto	u4741
  3346  0030D8  EF70  F018         	goto	u4740
  3347  0030DC                     u4741:
  3348  0030DC  EF9B  F018         	goto	l4014
  3349  0030E0                     u4740:
  3350  0030E0  C00A  FFF6         	movff	strncmp@r,tblptrl
  3351  0030E4  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3352  0030E8                     	if	0	;tblptru may be non-zero
  3353  0030E8                     	endif
  3354  0030E8                     	if	0	;tblptru may be non-zero
  3355  0030E8                     	endif
  3356  0030E8  0008               	tblrd		*
  3357  0030EA  50F5               	movf	tablat,w,c
  3358  0030EC  0900               	iorlw	0
  3359  0030EE  B4D8               	btfsc	status,2,c
  3360  0030F0  EF7C  F018         	goto	u4751
  3361  0030F4  EF7E  F018         	goto	u4750
  3362  0030F8                     u4751:
  3363  0030F8  EF9B  F018         	goto	l4014
  3364  0030FC                     u4750:
  3365  0030FC  5005               	movf	strncmp@n^0,w,c
  3366  0030FE  1006               	iorwf	(strncmp@n+1)^0,w,c
  3367  003100  B4D8               	btfsc	status,2,c
  3368  003102  EF85  F018         	goto	u4761
  3369  003106  EF87  F018         	goto	u4760
  3370  00310A                     u4761:
  3371  00310A  EF9B  F018         	goto	l4014
  3372  00310E                     u4760:
  3373  00310E  C008  FFD9         	movff	strncmp@l,fsr2l
  3374  003112  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3375  003116  50DF               	movf	indf2,w,c
  3376  003118  6E07               	movwf	??_strncmp^0,c
  3377  00311A  C00A  FFF6         	movff	strncmp@r,tblptrl
  3378  00311E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3379  003122                     	if	0	;tblptru may be non-zero
  3380  003122                     	endif
  3381  003122                     	if	0	;tblptru may be non-zero
  3382  003122                     	endif
  3383  003122  0008               	tblrd		*
  3384  003124  50F5               	movf	tablat,w,c
  3385  003126  1807               	xorwf	??_strncmp^0,w,c
  3386  003128  B4D8               	btfsc	status,2,c
  3387  00312A  EF99  F018         	goto	u4771
  3388  00312E  EF9B  F018         	goto	u4770
  3389  003132                     u4771:
  3390  003132  EF5D  F018         	goto	l4004
  3391  003136                     u4770:
  3392  003136                     l4014:
  3393  003136  C008  FFD9         	movff	strncmp@l,fsr2l
  3394  00313A  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3395  00313E  50DF               	movf	indf2,w,c
  3396  003140  6E07               	movwf	??_strncmp^0,c
  3397  003142  C00A  FFF6         	movff	strncmp@r,tblptrl
  3398  003146  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3399  00314A                     	if	0	;tblptru may be non-zero
  3400  00314A                     	endif
  3401  00314A                     	if	0	;tblptru may be non-zero
  3402  00314A                     	endif
  3403  00314A  0008               	tblrd		*
  3404  00314C  50F5               	movf	tablat,w,c
  3405  00314E  5C07               	subwf	??_strncmp^0,w,c
  3406  003150  6E01               	movwf	?_strncmp^0,c
  3407  003152  6A02               	clrf	(?_strncmp+1)^0,c
  3408  003154  A0D8               	btfss	status,0,c
  3409  003156  0602               	decf	(?_strncmp+1)^0,f,c
  3410  003158                     l1142:
  3411  003158  0012               	return		;funcret
  3412  00315A                     __end_of_strncmp:
  3413                           	callstack 0
  3414                           
  3415 ;; *************** function _efgtoa *****************
  3416 ;; Defined at:
  3417 ;;		line 319 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3418 ;; Parameters:    Size  Location     Type
  3419 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  3420 ;;		 -> sprintf@f(6), 
  3421 ;;  f               4   47[COMRAM] PTR struct _IO_FILE
  3422 ;;  c               1   51[COMRAM] unsigned char 
  3423 ;; Auto vars:     Size  Location     Type
  3424 ;;  u               4  109[COMRAM] unsigned char 
  3425 ;;  g               4  101[COMRAM] unsigned char 
  3426 ;;  l               4   95[COMRAM] unsigned char 
  3427 ;;  h               4   91[COMRAM] unsigned char 
  3428 ;;  ou              4   57[COMRAM] unsigned char 
  3429 ;;  n               2  107[COMRAM] int 
  3430 ;;  e               2  105[COMRAM] int 
  3431 ;;  i               2   99[COMRAM] int 
  3432 ;;  w               2   88[COMRAM] int 
  3433 ;;  p               2   85[COMRAM] int 
  3434 ;;  sign            2   83[COMRAM] int 
  3435 ;;  d               2   81[COMRAM] int 
  3436 ;;  ne              2   79[COMRAM] int 
  3437 ;;  m               2   77[COMRAM] int 
  3438 ;;  pp              2   75[COMRAM] int 
  3439 ;;  t               2   73[COMRAM] int 
  3440 ;;  mode            1   90[COMRAM] unsigned char 
  3441 ;;  nmode           1   87[COMRAM] unsigned char 
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  2   45[COMRAM] int 
  3444 ;; Registers used:
  3445 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3451 ;;      Params:         7       0       0       0       0       0       0
  3452 ;;      Locals:        56       0       0       0       0       0       0
  3453 ;;      Temps:          5       0       0       0       0       0       0
  3454 ;;      Totals:        68       0       0       0       0       0       0
  3455 ;;Total ram usage:       68 bytes
  3456 ;; Hardware stack levels used:    1
  3457 ;; Hardware stack levels required when called:    4
  3458 ;; This function calls:
  3459 ;;		___awdiv
  3460 ;;		___awmod
  3461 ;;		___fladd
  3462 ;;		___fldiv
  3463 ;;		___fleq
  3464 ;;		___flge
  3465 ;;		___flmul
  3466 ;;		___flneg
  3467 ;;		___flsub
  3468 ;;		___fltol
  3469 ;;		___fpclassifyf
  3470 ;;		_floorf
  3471 ;;		_isupper
  3472 ;;		_pad
  3473 ;;		_strcpy
  3474 ;;		_tolower
  3475 ;; This function is called by:
  3476 ;;		_vfpfcnvrt
  3477 ;; This function uses a non-reentrant model
  3478 ;;
  3479                           
  3480                           	psect	text9
  3481  0006F4                     __ptext9:
  3482                           	callstack 0
  3483  0006F4                     _efgtoa:
  3484                           	callstack 22
  3485  0006F4                     
  3486                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int efgtoa
      +                          (FILE *fp, long double f, char c);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common
      +                          \doprnt.c: 320: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 321: 
      +                              char mode, nmode;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 3
      +                          22:     int d, e, i, m, n, ne, p, pp, sign, t, w;;D:\Programs\Microship\xc8\v2.20\pic\so
      +                          urces\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;;D:\Programs\Microship\xc
      +                          8\v2.20\pic\sources\c99\common\doprnt.c: 326:     sign = 0;
  3487  0006F4  0E00               	movlw	0
  3488  0006F6  6E55               	movwf	(efgtoa@sign+1)^0,c
  3489  0006F8  0E00               	movlw	0
  3490  0006FA  6E54               	movwf	efgtoa@sign^0,c
  3491  0006FC                     
  3492                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  3493  0006FC  C030  F066         	movff	efgtoa@f,efgtoa@g
  3494  000700  C031  F067         	movff	efgtoa@f+1,efgtoa@g+1
  3495  000704  C032  F068         	movff	efgtoa@f+2,efgtoa@g+2
  3496  000708  C033  F069         	movff	efgtoa@f+3,efgtoa@g+3
  3497  00070C                     
  3498                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 0.0) 
      +                          {
  3499  00070C  BE69               	btfsc	(efgtoa@g+3)^0,7,c
  3500  00070E  EF8D  F003         	goto	u4140
  3501  000712  EF8B  F003         	goto	u4141
  3502  000716                     u4141:
  3503  000716  EFA3  F003         	goto	l3668
  3504  00071A                     u4140:
  3505  00071A                     
  3506                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign = 1;
  3507  00071A  0E00               	movlw	0
  3508  00071C  6E55               	movwf	(efgtoa@sign+1)^0,c
  3509  00071E  0E01               	movlw	1
  3510  000720  6E54               	movwf	efgtoa@sign^0,c
  3511  000722                     
  3512                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = -g;
  3513  000722  C066  F001         	movff	efgtoa@g,___flneg@f1
  3514  000726  C067  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3515  00072A  C068  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3516  00072E  C069  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3517  000732  ECEF  F01C         	call	___flneg	;wreg free
  3518  000736  C001  F066         	movff	?___flneg,efgtoa@g
  3519  00073A  C002  F067         	movff	?___flneg+1,efgtoa@g+1
  3520  00073E  C003  F068         	movff	?___flneg+2,efgtoa@g+2
  3521  000742  C004  F069         	movff	?___flneg+3,efgtoa@g+3
  3522  000746                     l3668:
  3523                           
  3524                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  3525  000746  0E00               	movlw	0
  3526  000748  6E6D               	movwf	(efgtoa@n+1)^0,c
  3527  00074A  0E00               	movlw	0
  3528  00074C  6E6C               	movwf	efgtoa@n^0,c
  3529  00074E                     
  3530                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = width;
  3531  00074E  C0F0  F059         	movff	_width,efgtoa@w
  3532  000752  C0F1  F05A         	movff	_width+1,efgtoa@w+1
  3533  000756                     
  3534                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign || (
      +                          flags & (1 << 2))) {
  3535  000756  5054               	movf	efgtoa@sign^0,w,c
  3536  000758  1055               	iorwf	(efgtoa@sign+1)^0,w,c
  3537  00075A  A4D8               	btfss	status,2,c
  3538  00075C  EFB2  F003         	goto	u4151
  3539  000760  EFB4  F003         	goto	u4150
  3540  000764                     u4151:
  3541  000764  EFBC  F003         	goto	l3676
  3542  000768                     u4150:
  3543  000768  0100               	movlb	0	; () banked
  3544  00076A  A5F4               	btfss	_flags& (0+255),2,b
  3545  00076C  EFBA  F003         	goto	u4161
  3546  000770  EFBC  F003         	goto	u4160
  3547  000774                     u4161:
  3548  000774  EFD6  F003         	goto	l3688
  3549  000778                     u4160:
  3550  000778                     l3676:
  3551                           
  3552                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf[n] =
      +                           sign ? '-' : '+';
  3553  000778  5054               	movf	efgtoa@sign^0,w,c
  3554  00077A  1055               	iorwf	(efgtoa@sign+1)^0,w,c
  3555  00077C  A4D8               	btfss	status,2,c
  3556  00077E  EFC3  F003         	goto	u4171
  3557  000782  EFC5  F003         	goto	u4170
  3558  000786                     u4171:
  3559  000786  EFCB  F003         	goto	l3680
  3560  00078A                     u4170:
  3561  00078A  0E00               	movlw	0
  3562  00078C  6E3F               	movwf	(_efgtoa$723+1)^0,c
  3563  00078E  0E2B               	movlw	43
  3564  000790  6E3E               	movwf	_efgtoa$723^0,c
  3565  000792  EFCF  F003         	goto	l3682
  3566  000796                     l3680:
  3567  000796  0E00               	movlw	0
  3568  000798  6E3F               	movwf	(_efgtoa$723+1)^0,c
  3569  00079A  0E2D               	movlw	45
  3570  00079C  6E3E               	movwf	_efgtoa$723^0,c
  3571  00079E                     l3682:
  3572  00079E  C03E  F100         	movff	_efgtoa$723,_dbuf
  3573  0007A2                     
  3574                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  3575  0007A2  4A6C               	infsnz	efgtoa@n^0,f,c
  3576  0007A4  2A6D               	incf	(efgtoa@n+1)^0,f,c
  3577  0007A6                     
  3578                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  3579  0007A6  0659               	decf	efgtoa@w^0,f,c
  3580  0007A8  A0D8               	btfss	status,0,c
  3581  0007AA  065A               	decf	(efgtoa@w+1)^0,f,c
  3582  0007AC                     l3688:
  3583                           
  3584                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if ((0 ? 
      +                          isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3585  0007AC  C066  F001         	movff	efgtoa@g,___fpclassifyf@x
  3586  0007B0  C067  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3587  0007B4  C068  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3588  0007B8  C069  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3589  0007BC  ECC3  F017         	call	___fpclassifyf	;wreg free
  3590  0007C0  0401               	decf	?___fpclassifyf^0,w,c
  3591  0007C2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3592  0007C4  A4D8               	btfss	status,2,c
  3593  0007C6  EFE7  F003         	goto	u4181
  3594  0007CA  EFE9  F003         	goto	u4180
  3595  0007CE                     u4181:
  3596  0007CE  EF3E  F004         	goto	l3706
  3597  0007D2                     u4180:
  3598  0007D2  0EBF               	movlw	191
  3599  0007D4  6E35               	movwf	??_efgtoa^0,c
  3600  0007D6  0EFF               	movlw	255
  3601  0007D8  6E36               	movwf	(??_efgtoa+1)^0,c
  3602  0007DA  5034               	movf	efgtoa@c^0,w,c
  3603  0007DC  6E37               	movwf	(??_efgtoa+2)^0,c
  3604  0007DE  6A38               	clrf	(??_efgtoa+3)^0,c
  3605  0007E0  5035               	movf	??_efgtoa^0,w,c
  3606  0007E2  2637               	addwf	(??_efgtoa+2)^0,f,c
  3607  0007E4  5036               	movf	(??_efgtoa+1)^0,w,c
  3608  0007E6  2238               	addwfc	(??_efgtoa+3)^0,f,c
  3609  0007E8  5038               	movf	(??_efgtoa+3)^0,w,c
  3610  0007EA  E10A               	bnz	u4190
  3611  0007EC  0E1A               	movlw	26
  3612  0007EE  5C37               	subwf	(??_efgtoa+2)^0,w,c
  3613  0007F0  A0D8               	btfss	status,0,c
  3614  0007F2  EFFD  F003         	goto	u4191
  3615  0007F6  EF00  F004         	goto	u4190
  3616  0007FA                     u4191:
  3617  0007FA  0E01               	movlw	1
  3618  0007FC  EF01  F004         	goto	u4200
  3619  000800                     u4190:
  3620  000800  0E00               	movlw	0
  3621  000802                     u4200:
  3622  000802  6E40               	movwf	_efgtoa$724^0,c
  3623  000804  6A41               	clrf	(_efgtoa$724+1)^0,c
  3624  000806  5040               	movf	_efgtoa$724^0,w,c
  3625  000808  1041               	iorwf	(_efgtoa$724+1)^0,w,c
  3626  00080A  B4D8               	btfsc	status,2,c
  3627  00080C  EF0A  F004         	goto	u4211
  3628  000810  EF0C  F004         	goto	u4210
  3629  000814                     u4211:
  3630  000814  EF1A  F004         	goto	l3698
  3631  000818                     u4210:
  3632  000818                     
  3633                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             strcp
      +                          y(&dbuf[n], "INF");
  3634  000818  0E00               	movlw	low _dbuf
  3635  00081A  246C               	addwf	efgtoa@n^0,w,c
  3636  00081C  6E01               	movwf	strcpy@dest^0,c
  3637  00081E  0E01               	movlw	high _dbuf
  3638  000820  206D               	addwfc	(efgtoa@n+1)^0,w,c
  3639  000822  6E02               	movwf	(strcpy@dest+1)^0,c
  3640  000824  0EDC               	movlw	low STR_31
  3641  000826  6E03               	movwf	strcpy@src^0,c
  3642  000828  0E06               	movlw	high STR_31
  3643  00082A  6E04               	movwf	(strcpy@src+1)^0,c
  3644  00082C  EC0E  F01C         	call	_strcpy	;wreg free
  3645                           
  3646                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } else {
  3647  000830  EF26  F004         	goto	l3700
  3648  000834                     l3698:
  3649                           
  3650                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             strcp
      +                          y(&dbuf[n], "inf");
  3651  000834  0E00               	movlw	low _dbuf
  3652  000836  246C               	addwf	efgtoa@n^0,w,c
  3653  000838  6E01               	movwf	strcpy@dest^0,c
  3654  00083A  0E01               	movlw	high _dbuf
  3655  00083C  206D               	addwfc	(efgtoa@n+1)^0,w,c
  3656  00083E  6E02               	movwf	(strcpy@dest+1)^0,c
  3657  000840  0EE4               	movlw	low STR_32
  3658  000842  6E03               	movwf	strcpy@src^0,c
  3659  000844  0E06               	movlw	high STR_32
  3660  000846  6E04               	movwf	(strcpy@src+1)^0,c
  3661  000848  EC0E  F01C         	call	_strcpy	;wreg free
  3662  00084C                     l3700:
  3663                           
  3664                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -= ((si
      +                          zeof("inf")/sizeof("inf"[0]))-1);
  3665  00084C  0EFD               	movlw	253
  3666  00084E  2659               	addwf	efgtoa@w^0,f,c
  3667  000850  0EFF               	movlw	255
  3668  000852  225A               	addwfc	(efgtoa@w+1)^0,f,c
  3669  000854                     l3702:
  3670                           
  3671                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         return pa
      +                          d(fp, &dbuf[0], w);
  3672  000854  C02E  F011         	movff	efgtoa@fp,pad@fp
  3673  000858  C02F  F012         	movff	efgtoa@fp+1,pad@fp+1
  3674  00085C  0E00               	movlw	low _dbuf
  3675  00085E  6E13               	movwf	pad@buf^0,c
  3676  000860  0E01               	movlw	high _dbuf
  3677  000862  6E14               	movwf	(pad@buf+1)^0,c
  3678  000864  C059  F015         	movff	efgtoa@w,pad@p
  3679  000868  C05A  F016         	movff	efgtoa@w+1,pad@p+1
  3680  00086C  EC12  F019         	call	_pad	;wreg free
  3681  000870  C011  F02E         	movff	?_pad,?_efgtoa
  3682  000874  C012  F02F         	movff	?_pad+1,?_efgtoa+1
  3683  000878  EF46  F009         	goto	l924
  3684  00087C                     l3706:
  3685                           
  3686                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if ((0 ? 
      +                          isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3687  00087C  C066  F001         	movff	efgtoa@g,___fpclassifyf@x
  3688  000880  C067  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3689  000884  C068  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3690  000888  C069  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3691  00088C  ECC3  F017         	call	___fpclassifyf	;wreg free
  3692  000890  5001               	movf	?___fpclassifyf^0,w,c
  3693  000892  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3694  000894  A4D8               	btfss	status,2,c
  3695  000896  EF4F  F004         	goto	u4221
  3696  00089A  EF51  F004         	goto	u4220
  3697  00089E                     u4221:
  3698  00089E  EF90  F004         	goto	l3724
  3699  0008A2                     u4220:
  3700  0008A2  0EBF               	movlw	191
  3701  0008A4  6E35               	movwf	??_efgtoa^0,c
  3702  0008A6  0EFF               	movlw	255
  3703  0008A8  6E36               	movwf	(??_efgtoa+1)^0,c
  3704  0008AA  5034               	movf	efgtoa@c^0,w,c
  3705  0008AC  6E37               	movwf	(??_efgtoa+2)^0,c
  3706  0008AE  6A38               	clrf	(??_efgtoa+3)^0,c
  3707  0008B0  5035               	movf	??_efgtoa^0,w,c
  3708  0008B2  2637               	addwf	(??_efgtoa+2)^0,f,c
  3709  0008B4  5036               	movf	(??_efgtoa+1)^0,w,c
  3710  0008B6  2238               	addwfc	(??_efgtoa+3)^0,f,c
  3711  0008B8  5038               	movf	(??_efgtoa+3)^0,w,c
  3712  0008BA  E10A               	bnz	u4230
  3713  0008BC  0E1A               	movlw	26
  3714  0008BE  5C37               	subwf	(??_efgtoa+2)^0,w,c
  3715  0008C0  A0D8               	btfss	status,0,c
  3716  0008C2  EF65  F004         	goto	u4231
  3717  0008C6  EF68  F004         	goto	u4230
  3718  0008CA                     u4231:
  3719  0008CA  0E01               	movlw	1
  3720  0008CC  EF69  F004         	goto	u4240
  3721  0008D0                     u4230:
  3722  0008D0  0E00               	movlw	0
  3723  0008D2                     u4240:
  3724  0008D2  6E42               	movwf	_efgtoa$729^0,c
  3725  0008D4  6A43               	clrf	(_efgtoa$729+1)^0,c
  3726  0008D6  5042               	movf	_efgtoa$729^0,w,c
  3727  0008D8  1043               	iorwf	(_efgtoa$729+1)^0,w,c
  3728  0008DA  B4D8               	btfsc	status,2,c
  3729  0008DC  EF72  F004         	goto	u4251
  3730  0008E0  EF74  F004         	goto	u4250
  3731  0008E4                     u4251:
  3732  0008E4  EF82  F004         	goto	l3716
  3733  0008E8                     u4250:
  3734  0008E8                     
  3735                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             strcp
      +                          y(&dbuf[n], "NAN");
  3736  0008E8  0E00               	movlw	low _dbuf
  3737  0008EA  246C               	addwf	efgtoa@n^0,w,c
  3738  0008EC  6E01               	movwf	strcpy@dest^0,c
  3739  0008EE  0E01               	movlw	high _dbuf
  3740  0008F0  206D               	addwfc	(efgtoa@n+1)^0,w,c
  3741  0008F2  6E02               	movwf	(strcpy@dest+1)^0,c
  3742  0008F4  0EE0               	movlw	low STR_35
  3743  0008F6  6E03               	movwf	strcpy@src^0,c
  3744  0008F8  0E06               	movlw	high STR_35
  3745  0008FA  6E04               	movwf	(strcpy@src+1)^0,c
  3746  0008FC  EC0E  F01C         	call	_strcpy	;wreg free
  3747                           
  3748                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } else {
  3749  000900  EF26  F004         	goto	l3700
  3750  000904                     l3716:
  3751                           
  3752                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             strcp
      +                          y(&dbuf[n], "nan");
  3753  000904  0E00               	movlw	low _dbuf
  3754  000906  246C               	addwf	efgtoa@n^0,w,c
  3755  000908  6E01               	movwf	strcpy@dest^0,c
  3756  00090A  0E01               	movlw	high _dbuf
  3757  00090C  206D               	addwfc	(efgtoa@n+1)^0,w,c
  3758  00090E  6E02               	movwf	(strcpy@dest+1)^0,c
  3759  000910  0EE8               	movlw	low STR_36
  3760  000912  6E03               	movwf	strcpy@src^0,c
  3761  000914  0E06               	movlw	high STR_36
  3762  000916  6E04               	movwf	(strcpy@src+1)^0,c
  3763  000918  EC0E  F01C         	call	_strcpy	;wreg free
  3764  00091C  EF26  F004         	goto	l3700
  3765  000920                     l3724:
  3766                           
  3767                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  3768  000920  0E00               	movlw	0
  3769  000922  6E6E               	movwf	efgtoa@u^0,c
  3770  000924  0E00               	movlw	0
  3771  000926  6E6F               	movwf	(efgtoa@u+1)^0,c
  3772  000928  0E80               	movlw	128
  3773  00092A  6E70               	movwf	(efgtoa@u+2)^0,c
  3774  00092C  0E3F               	movlw	63
  3775  00092E  6E71               	movwf	(efgtoa@u+3)^0,c
  3776                           
  3777                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  3778  000930  0E00               	movlw	0
  3779  000932  6E6B               	movwf	(efgtoa@e+1)^0,c
  3780  000934  0E00               	movlw	0
  3781  000936  6E6A               	movwf	efgtoa@e^0,c
  3782  000938                     
  3783                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g == 0.
      +                          0)) {
  3784  000938  C066  F001         	movff	efgtoa@g,___fleq@ff1
  3785  00093C  C067  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3786  000940  C068  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3787  000944  C069  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3788  000948  0E00               	movlw	0
  3789  00094A  6E05               	movwf	___fleq@ff2^0,c
  3790  00094C  0E00               	movlw	0
  3791  00094E  6E06               	movwf	(___fleq@ff2+1)^0,c
  3792  000950  0E00               	movlw	0
  3793  000952  6E07               	movwf	(___fleq@ff2+2)^0,c
  3794  000954  0E00               	movlw	0
  3795  000956  6E08               	movwf	(___fleq@ff2+3)^0,c
  3796  000958  EC8B  F01A         	call	___fleq	;wreg free
  3797  00095C  B0D8               	btfsc	status,0,c
  3798  00095E  EFB3  F004         	goto	u4261
  3799  000962  EFB5  F004         	goto	u4260
  3800  000966                     u4261:
  3801  000966  EF36  F005         	goto	l3742
  3802  00096A                     u4260:
  3803  00096A  EFD3  F004         	goto	l3734
  3804  00096E                     l3730:
  3805                           
  3806                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             u = u
      +                          *10.0;
  3807  00096E  C06E  F001         	movff	efgtoa@u,___flmul@b
  3808  000972  C06F  F002         	movff	efgtoa@u+1,___flmul@b+1
  3809  000976  C070  F003         	movff	efgtoa@u+2,___flmul@b+2
  3810  00097A  C071  F004         	movff	efgtoa@u+3,___flmul@b+3
  3811  00097E  0E00               	movlw	0
  3812  000980  6E05               	movwf	___flmul@a^0,c
  3813  000982  0E00               	movlw	0
  3814  000984  6E06               	movwf	(___flmul@a+1)^0,c
  3815  000986  0E20               	movlw	32
  3816  000988  6E07               	movwf	(___flmul@a+2)^0,c
  3817  00098A  0E41               	movlw	65
  3818  00098C  6E08               	movwf	(___flmul@a+3)^0,c
  3819  00098E  ECDC  F00D         	call	___flmul	;wreg free
  3820  000992  C001  F06E         	movff	?___flmul,efgtoa@u
  3821  000996  C002  F06F         	movff	?___flmul+1,efgtoa@u+1
  3822  00099A  C003  F070         	movff	?___flmul+2,efgtoa@u+2
  3823  00099E  C004  F071         	movff	?___flmul+3,efgtoa@u+3
  3824  0009A2                     
  3825                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             ++e;
  3826  0009A2  4A6A               	infsnz	efgtoa@e^0,f,c
  3827  0009A4  2A6B               	incf	(efgtoa@e+1)^0,f,c
  3828  0009A6                     l3734:
  3829                           
  3830                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         while (!(
      +                          g < (u*10.0))) {
  3831  0009A6  C066  F01A         	movff	efgtoa@g,___flge@ff1
  3832  0009AA  C067  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  3833  0009AE  C068  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  3834  0009B2  C069  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  3835  0009B6  0E00               	movlw	0
  3836  0009B8  6E05               	movwf	___flmul@a^0,c
  3837  0009BA  0E00               	movlw	0
  3838  0009BC  6E06               	movwf	(___flmul@a+1)^0,c
  3839  0009BE  0E20               	movlw	32
  3840  0009C0  6E07               	movwf	(___flmul@a+2)^0,c
  3841  0009C2  0E41               	movlw	65
  3842  0009C4  6E08               	movwf	(___flmul@a+3)^0,c
  3843  0009C6  C06E  F001         	movff	efgtoa@u,___flmul@b
  3844  0009CA  C06F  F002         	movff	efgtoa@u+1,___flmul@b+1
  3845  0009CE  C070  F003         	movff	efgtoa@u+2,___flmul@b+2
  3846  0009D2  C071  F004         	movff	efgtoa@u+3,___flmul@b+3
  3847  0009D6  ECDC  F00D         	call	___flmul	;wreg free
  3848  0009DA  C001  F01E         	movff	?___flmul,___flge@ff2
  3849  0009DE  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  3850  0009E2  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  3851  0009E6  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  3852  0009EA  EC41  F017         	call	___flge	;wreg free
  3853  0009EE  B0D8               	btfsc	status,0,c
  3854  0009F0  EFFC  F004         	goto	u4271
  3855  0009F4  EFFE  F004         	goto	u4270
  3856  0009F8                     u4271:
  3857  0009F8  EFB7  F004         	goto	l3730
  3858  0009FC                     u4270:
  3859  0009FC  EF1D  F005         	goto	l3740
  3860  000A00                     l3736:
  3861                           
  3862                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             u = u
      +                          /10.0;
  3863  000A00  C06E  F001         	movff	efgtoa@u,___fldiv@b
  3864  000A04  C06F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3865  000A08  C070  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3866  000A0C  C071  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3867  000A10  0E00               	movlw	0
  3868  000A12  6E05               	movwf	___fldiv@a^0,c
  3869  000A14  0E00               	movlw	0
  3870  000A16  6E06               	movwf	(___fldiv@a+1)^0,c
  3871  000A18  0E20               	movlw	32
  3872  000A1A  6E07               	movwf	(___fldiv@a+2)^0,c
  3873  000A1C  0E41               	movlw	65
  3874  000A1E  6E08               	movwf	(___fldiv@a+3)^0,c
  3875  000A20  ECF1  F00F         	call	___fldiv	;wreg free
  3876  000A24  C001  F06E         	movff	?___fldiv,efgtoa@u
  3877  000A28  C002  F06F         	movff	?___fldiv+1,efgtoa@u+1
  3878  000A2C  C003  F070         	movff	?___fldiv+2,efgtoa@u+2
  3879  000A30  C004  F071         	movff	?___fldiv+3,efgtoa@u+3
  3880  000A34                     
  3881                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             --e;
  3882  000A34  066A               	decf	efgtoa@e^0,f,c
  3883  000A36  A0D8               	btfss	status,0,c
  3884  000A38  066B               	decf	(efgtoa@e+1)^0,f,c
  3885  000A3A                     l3740:
  3886                           
  3887                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         while (g 
      +                          < u) {
  3888  000A3A  C066  F01A         	movff	efgtoa@g,___flge@ff1
  3889  000A3E  C067  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  3890  000A42  C068  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  3891  000A46  C069  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  3892  000A4A  C06E  F01E         	movff	efgtoa@u,___flge@ff2
  3893  000A4E  C06F  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  3894  000A52  C070  F020         	movff	efgtoa@u+2,___flge@ff2+2
  3895  000A56  C071  F021         	movff	efgtoa@u+3,___flge@ff2+3
  3896  000A5A  EC41  F017         	call	___flge	;wreg free
  3897  000A5E  A0D8               	btfss	status,0,c
  3898  000A60  EF34  F005         	goto	u4281
  3899  000A64  EF36  F005         	goto	u4280
  3900  000A68                     u4281:
  3901  000A68  EF00  F005         	goto	l3736
  3902  000A6C                     u4280:
  3903  000A6C                     l3742:
  3904                           
  3905                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = tolowe
      +                          r((int)c);
  3906  000A6C  C034  F007         	movff	efgtoa@c,tolower@c
  3907  000A70  6A08               	clrf	(tolower@c+1)^0,c
  3908  000A72  ECB0  F01B         	call	_tolower	;wreg free
  3909  000A76  5007               	movf	?_tolower^0,w,c
  3910  000A78  6E5B               	movwf	efgtoa@mode^0,c
  3911  000A7A                     
  3912                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = mode;
  3913  000A7A  C05B  F058         	movff	efgtoa@mode,efgtoa@nmode
  3914  000A7E                     
  3915                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode == '
      +                          g') {
  3916  000A7E  0E67               	movlw	103
  3917  000A80  185B               	xorwf	efgtoa@mode^0,w,c
  3918  000A82  A4D8               	btfss	status,2,c
  3919  000A84  EF46  F005         	goto	u4291
  3920  000A88  EF48  F005         	goto	u4290
  3921  000A8C                     u4291:
  3922  000A8C  EF6F  F005         	goto	l3756
  3923  000A90                     u4290:
  3924  000A90                     
  3925                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec == 0) 
      +                          {
  3926  000A90  0100               	movlb	0	; () banked
  3927  000A92  51F2               	movf	_prec& (0+255),w,b
  3928  000A94  11F3               	iorwf	(_prec+1)& (0+255),w,b
  3929  000A96  A4D8               	btfss	status,2,c
  3930  000A98  EF50  F005         	goto	u4301
  3931  000A9C  EF52  F005         	goto	u4300
  3932  000AA0                     u4301:
  3933  000AA0  EF56  F005         	goto	l3752
  3934  000AA4                     u4300:
  3935  000AA4                     
  3936                           ; BSR set to: 0
  3937                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  3938  000AA4  0E00               	movlw	0
  3939  000AA6  6FF3               	movwf	(_prec+1)& (0+255),b
  3940  000AA8  0E01               	movlw	1
  3941  000AAA  6FF2               	movwf	_prec& (0+255),b
  3942  000AAC                     l3752:
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = (0 < 
      +                          prec) ? prec : 6;
  3946  000AAC  BFF3               	btfsc	(_prec+1)& (0+255),7,b
  3947  000AAE  EF63  F005         	goto	u4310
  3948  000AB2  51F3               	movf	(_prec+1)& (0+255),w,b
  3949  000AB4  E106               	bnz	u4311
  3950  000AB6  05F2               	decf	_prec& (0+255),w,b
  3951  000AB8  B0D8               	btfsc	status,0,c
  3952  000ABA  EF61  F005         	goto	u4311
  3953  000ABE  EF63  F005         	goto	u4310
  3954  000AC2                     u4311:
  3955  000AC2  EF69  F005         	goto	l942
  3956  000AC6                     u4310:
  3957  000AC6                     l3754:
  3958                           
  3959                           ; BSR set to: 0
  3960  000AC6  0E00               	movlw	0
  3961  000AC8  6E57               	movwf	(efgtoa@p+1)^0,c
  3962  000ACA  0E06               	movlw	6
  3963  000ACC  6E56               	movwf	efgtoa@p^0,c
  3964  000ACE  EF79  F005         	goto	l3762
  3965  000AD2                     l942:
  3966                           
  3967                           ; BSR set to: 0
  3968  000AD2  C0F2  F056         	movff	_prec,efgtoa@p
  3969  000AD6  C0F3  F057         	movff	_prec+1,efgtoa@p+1
  3970  000ADA  EF79  F005         	goto	l3762
  3971  000ADE                     l3756:
  3972                           
  3973                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = (prec
      +                           < 0) ? 6 : prec;
  3974  000ADE  0100               	movlb	0	; () banked
  3975  000AE0  BFF3               	btfsc	(_prec+1)& (0+255),7,b
  3976  000AE2  EF75  F005         	goto	u4321
  3977  000AE6  EF77  F005         	goto	u4320
  3978  000AEA                     u4321:
  3979  000AEA  EF63  F005         	goto	l3754
  3980  000AEE                     u4320:
  3981  000AEE  EF69  F005         	goto	l942
  3982  000AF2                     l3762:
  3983                           
  3984                           ; BSR set to: 0
  3985                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode == '
      +                          g') {
  3986  000AF2  0E67               	movlw	103
  3987  000AF4  185B               	xorwf	efgtoa@mode^0,w,c
  3988  000AF6  A4D8               	btfss	status,2,c
  3989  000AF8  EF80  F005         	goto	u4331
  3990  000AFC  EF82  F005         	goto	u4330
  3991  000B00                     u4331:
  3992  000B00  EFB1  F005         	goto	l3772
  3993  000B04                     u4330:
  3994  000B04                     
  3995                           ; BSR set to: 0
  3996                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (!(e <
      +                           -4) && !((p - 1) < e)) {
  3997  000B04  AE6B               	btfss	(efgtoa@e+1)^0,7,c
  3998  000B06  EF90  F005         	goto	u4340
  3999  000B0A  0EFC               	movlw	252
  4000  000B0C  5C6A               	subwf	efgtoa@e^0,w,c
  4001  000B0E  0EFF               	movlw	255
  4002  000B10  586B               	subwfb	(efgtoa@e+1)^0,w,c
  4003  000B12  A0D8               	btfss	status,0,c
  4004  000B14  EF8E  F005         	goto	u4341
  4005  000B18  EF90  F005         	goto	u4340
  4006  000B1C                     u4341:
  4007  000B1C  EFAF  F005         	goto	l3770
  4008  000B20                     u4340:
  4009  000B20                     
  4010                           ; BSR set to: 0
  4011  000B20  0EFF               	movlw	255
  4012  000B22  6E35               	movwf	??_efgtoa^0,c
  4013  000B24  0EFF               	movlw	255
  4014  000B26  6E36               	movwf	(??_efgtoa+1)^0,c
  4015  000B28  C056  F037         	movff	efgtoa@p,??_efgtoa+2
  4016  000B2C  C057  F038         	movff	efgtoa@p+1,??_efgtoa+3
  4017  000B30  5035               	movf	??_efgtoa^0,w,c
  4018  000B32  2637               	addwf	(??_efgtoa+2)^0,f,c
  4019  000B34  5036               	movf	(??_efgtoa+1)^0,w,c
  4020  000B36  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4021  000B38  506A               	movf	efgtoa@e^0,w,c
  4022  000B3A  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4023  000B3C  5038               	movf	(??_efgtoa+3)^0,w,c
  4024  000B3E  0A80               	xorlw	128
  4025  000B40  6E39               	movwf	(??_efgtoa+4)^0,c
  4026  000B42  506B               	movf	(efgtoa@e+1)^0,w,c
  4027  000B44  0A80               	xorlw	128
  4028  000B46  5839               	subwfb	(??_efgtoa+4)^0,w,c
  4029  000B48  A0D8               	btfss	status,0,c
  4030  000B4A  EFA9  F005         	goto	u4351
  4031  000B4E  EFAB  F005         	goto	u4350
  4032  000B52                     u4351:
  4033  000B52  EFAF  F005         	goto	l3770
  4034  000B56                     u4350:
  4035  000B56                     
  4036                           ; BSR set to: 0
  4037                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             nmode
      +                           = 'f';
  4038  000B56  0E66               	movlw	102
  4039  000B58  6E58               	movwf	efgtoa@nmode^0,c
  4040                           
  4041                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } else {
  4042  000B5A  EFB1  F005         	goto	l3772
  4043  000B5E                     l3770:
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             nmode
      +                           = 'e';
  4047  000B5E  0E65               	movlw	101
  4048  000B60  6E58               	movwf	efgtoa@nmode^0,c
  4049  000B62                     l3772:
  4050                           
  4051                           ; BSR set to: 0
  4052                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  4053  000B62  C056  F04E         	movff	efgtoa@p,efgtoa@m
  4054  000B66  C057  F04F         	movff	efgtoa@p+1,efgtoa@m+1
  4055  000B6A                     
  4056                           ; BSR set to: 0
  4057                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mode ==
      +                           'g') || ((nmode == 'f') && (e < 0))) {
  4058  000B6A  0E67               	movlw	103
  4059  000B6C  185B               	xorwf	efgtoa@mode^0,w,c
  4060  000B6E  A4D8               	btfss	status,2,c
  4061  000B70  EFBC  F005         	goto	u4361
  4062  000B74  EFBE  F005         	goto	u4360
  4063  000B78                     u4361:
  4064  000B78  EFCE  F005         	goto	l3780
  4065  000B7C                     u4360:
  4066  000B7C                     
  4067                           ; BSR set to: 0
  4068  000B7C  0E66               	movlw	102
  4069  000B7E  1858               	xorwf	efgtoa@nmode^0,w,c
  4070  000B80  A4D8               	btfss	status,2,c
  4071  000B82  EFC5  F005         	goto	u4371
  4072  000B86  EFC7  F005         	goto	u4370
  4073  000B8A                     u4371:
  4074  000B8A  EFD0  F005         	goto	l3782
  4075  000B8E                     u4370:
  4076  000B8E                     
  4077                           ; BSR set to: 0
  4078  000B8E  BE6B               	btfsc	(efgtoa@e+1)^0,7,c
  4079  000B90  EFCE  F005         	goto	u4380
  4080  000B94  EFCC  F005         	goto	u4381
  4081  000B98                     u4381:
  4082  000B98  EFD0  F005         	goto	l3782
  4083  000B9C                     u4380:
  4084  000B9C                     l3780:
  4085                           
  4086                           ; BSR set to: 0
  4087                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  4088  000B9C  4A4E               	infsnz	efgtoa@m^0,f,c
  4089  000B9E  2A4F               	incf	(efgtoa@m+1)^0,f,c
  4090  000BA0                     l3782:
  4091                           
  4092                           ; BSR set to: 0
  4093                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmode == 
      +                          'f') {
  4094  000BA0  0E66               	movlw	102
  4095  000BA2  1858               	xorwf	efgtoa@nmode^0,w,c
  4096  000BA4  A4D8               	btfss	status,2,c
  4097  000BA6  EFD7  F005         	goto	u4391
  4098  000BAA  EFD9  F005         	goto	u4390
  4099  000BAE                     u4391:
  4100  000BAE  EFF9  F005         	goto	l3792
  4101  000BB2                     u4390:
  4102  000BB2                     
  4103                           ; BSR set to: 0
  4104                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (e < 0
      +                          ) {
  4105  000BB2  BE6B               	btfsc	(efgtoa@e+1)^0,7,c
  4106  000BB4  EFE0  F005         	goto	u4400
  4107  000BB8  EFDE  F005         	goto	u4401
  4108  000BBC                     u4401:
  4109  000BBC  EFEC  F005         	goto	l3788
  4110  000BC0                     u4400:
  4111  000BC0                     
  4112                           ; BSR set to: 0
  4113                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             u = 1
      +                          .0;
  4114  000BC0  0E00               	movlw	0
  4115  000BC2  6E6E               	movwf	efgtoa@u^0,c
  4116  000BC4  0E00               	movlw	0
  4117  000BC6  6E6F               	movwf	(efgtoa@u+1)^0,c
  4118  000BC8  0E80               	movlw	128
  4119  000BCA  6E70               	movwf	(efgtoa@u+2)^0,c
  4120  000BCC  0E3F               	movlw	63
  4121  000BCE  6E71               	movwf	(efgtoa@u+3)^0,c
  4122                           
  4123                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             e = 0
      +                          ;
  4124  000BD0  0E00               	movlw	0
  4125  000BD2  6E6B               	movwf	(efgtoa@e+1)^0,c
  4126  000BD4  0E00               	movlw	0
  4127  000BD6  6E6A               	movwf	efgtoa@e^0,c
  4128  000BD8                     l3788:
  4129                           
  4130                           ; BSR set to: 0
  4131                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (!(mod
      +                          e == 'g')) {
  4132  000BD8  0E67               	movlw	103
  4133  000BDA  185B               	xorwf	efgtoa@mode^0,w,c
  4134  000BDC  B4D8               	btfsc	status,2,c
  4135  000BDE  EFF3  F005         	goto	u4411
  4136  000BE2  EFF5  F005         	goto	u4410
  4137  000BE6                     u4411:
  4138  000BE6  EFF9  F005         	goto	l3792
  4139  000BEA                     u4410:
  4140  000BEA                     
  4141                           ; BSR set to: 0
  4142                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             m += 
      +                          e;
  4143  000BEA  506A               	movf	efgtoa@e^0,w,c
  4144  000BEC  264E               	addwf	efgtoa@m^0,f,c
  4145  000BEE  506B               	movf	(efgtoa@e+1)^0,w,c
  4146  000BF0  224F               	addwfc	(efgtoa@m+1)^0,f,c
  4147  000BF2                     l3792:
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  4151  000BF2  0E00               	movlw	0
  4152  000BF4  6E65               	movwf	(efgtoa@i+1)^0,c
  4153  000BF6  0E00               	movlw	0
  4154  000BF8  6E64               	movwf	efgtoa@i^0,c
  4155  000BFA                     
  4156                           ; BSR set to: 0
  4157                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  4158  000BFA  C066  F05C         	movff	efgtoa@g,efgtoa@h
  4159  000BFE  C067  F05D         	movff	efgtoa@g+1,efgtoa@h+1
  4160  000C02  C068  F05E         	movff	efgtoa@g+2,efgtoa@h+2
  4161  000C06  C069  F05F         	movff	efgtoa@g+3,efgtoa@h+3
  4162  000C0A                     
  4163                           ; BSR set to: 0
  4164                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  4165  000C0A  C06E  F03A         	movff	efgtoa@u,efgtoa@ou
  4166  000C0E  C06F  F03B         	movff	efgtoa@u+1,efgtoa@ou+1
  4167  000C12  C070  F03C         	movff	efgtoa@u+2,efgtoa@ou+2
  4168  000C16  C071  F03D         	movff	efgtoa@u+3,efgtoa@ou+3
  4169                           
  4170                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i < m)
      +                           {
  4171  000C1A  EF89  F006         	goto	l3806
  4172  000C1E                     l3798:
  4173                           
  4174                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = floor
      +                          f(h/u);
  4175  000C1E  C05C  F001         	movff	efgtoa@h,___fldiv@b
  4176  000C22  C05D  F002         	movff	efgtoa@h+1,___fldiv@b+1
  4177  000C26  C05E  F003         	movff	efgtoa@h+2,___fldiv@b+2
  4178  000C2A  C05F  F004         	movff	efgtoa@h+3,___fldiv@b+3
  4179  000C2E  C06E  F005         	movff	efgtoa@u,___fldiv@a
  4180  000C32  C06F  F006         	movff	efgtoa@u+1,___fldiv@a+1
  4181  000C36  C070  F007         	movff	efgtoa@u+2,___fldiv@a+2
  4182  000C3A  C071  F008         	movff	efgtoa@u+3,___fldiv@a+3
  4183  000C3E  ECF1  F00F         	call	___fldiv	;wreg free
  4184  000C42  C001  F01A         	movff	?___fldiv,floorf@x
  4185  000C46  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  4186  000C4A  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  4187  000C4E  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  4188  000C52  EC18  F014         	call	_floorf	;wreg free
  4189  000C56  C01A  F060         	movff	?_floorf,efgtoa@l
  4190  000C5A  C01B  F061         	movff	?_floorf+1,efgtoa@l+1
  4191  000C5E  C01C  F062         	movff	?_floorf+2,efgtoa@l+2
  4192  000C62  C01D  F063         	movff	?_floorf+3,efgtoa@l+3
  4193                           
  4194                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = (int)
      +                          l;
  4195  000C66  C060  F01A         	movff	efgtoa@l,___fltol@f1
  4196  000C6A  C061  F01B         	movff	efgtoa@l+1,___fltol@f1+1
  4197  000C6E  C062  F01C         	movff	efgtoa@l+2,___fltol@f1+2
  4198  000C72  C063  F01D         	movff	efgtoa@l+3,___fltol@f1+3
  4199  000C76  ECBE  F016         	call	___fltol	;wreg free
  4200  000C7A  C01A  F052         	movff	?___fltol,efgtoa@d
  4201  000C7E  C01B  F053         	movff	?___fltol+1,efgtoa@d+1
  4202  000C82                     
  4203                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -= l*u;
  4204  000C82  C05C  F01A         	movff	efgtoa@h,___flsub@b
  4205  000C86  C05D  F01B         	movff	efgtoa@h+1,___flsub@b+1
  4206  000C8A  C05E  F01C         	movff	efgtoa@h+2,___flsub@b+2
  4207  000C8E  C05F  F01D         	movff	efgtoa@h+3,___flsub@b+3
  4208  000C92  C06E  F005         	movff	efgtoa@u,___flmul@a
  4209  000C96  C06F  F006         	movff	efgtoa@u+1,___flmul@a+1
  4210  000C9A  C070  F007         	movff	efgtoa@u+2,___flmul@a+2
  4211  000C9E  C071  F008         	movff	efgtoa@u+3,___flmul@a+3
  4212  000CA2  C060  F001         	movff	efgtoa@l,___flmul@b
  4213  000CA6  C061  F002         	movff	efgtoa@l+1,___flmul@b+1
  4214  000CAA  C062  F003         	movff	efgtoa@l+2,___flmul@b+2
  4215  000CAE  C063  F004         	movff	efgtoa@l+3,___flmul@b+3
  4216  000CB2  ECDC  F00D         	call	___flmul	;wreg free
  4217  000CB6  C001  F01E         	movff	?___flmul,___flsub@a
  4218  000CBA  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  4219  000CBE  C003  F020         	movff	?___flmul+2,___flsub@a+2
  4220  000CC2  C004  F021         	movff	?___flmul+3,___flsub@a+3
  4221  000CC6  EC8E  F01C         	call	___flsub	;wreg free
  4222  000CCA  C01A  F05C         	movff	?___flsub,efgtoa@h
  4223  000CCE  C01B  F05D         	movff	?___flsub+1,efgtoa@h+1
  4224  000CD2  C01C  F05E         	movff	?___flsub+2,efgtoa@h+2
  4225  000CD6  C01D  F05F         	movff	?___flsub+3,efgtoa@h+3
  4226  000CDA                     
  4227                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = u/10.
      +                          0;
  4228  000CDA  C06E  F001         	movff	efgtoa@u,___fldiv@b
  4229  000CDE  C06F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4230  000CE2  C070  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4231  000CE6  C071  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4232  000CEA  0E00               	movlw	0
  4233  000CEC  6E05               	movwf	___fldiv@a^0,c
  4234  000CEE  0E00               	movlw	0
  4235  000CF0  6E06               	movwf	(___fldiv@a+1)^0,c
  4236  000CF2  0E20               	movlw	32
  4237  000CF4  6E07               	movwf	(___fldiv@a+2)^0,c
  4238  000CF6  0E41               	movlw	65
  4239  000CF8  6E08               	movwf	(___fldiv@a+3)^0,c
  4240  000CFA  ECF1  F00F         	call	___fldiv	;wreg free
  4241  000CFE  C001  F06E         	movff	?___fldiv,efgtoa@u
  4242  000D02  C002  F06F         	movff	?___fldiv+1,efgtoa@u+1
  4243  000D06  C003  F070         	movff	?___fldiv+2,efgtoa@u+2
  4244  000D0A  C004  F071         	movff	?___fldiv+3,efgtoa@u+3
  4245  000D0E                     
  4246                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  4247  000D0E  4A64               	infsnz	efgtoa@i^0,f,c
  4248  000D10  2A65               	incf	(efgtoa@i+1)^0,f,c
  4249  000D12                     l3806:
  4250                           
  4251                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i < m)
      +                           {
  4252  000D12  504E               	movf	efgtoa@m^0,w,c
  4253  000D14  5C64               	subwf	efgtoa@i^0,w,c
  4254  000D16  5065               	movf	(efgtoa@i+1)^0,w,c
  4255  000D18  0A80               	xorlw	128
  4256  000D1A  6E35               	movwf	??_efgtoa^0,c
  4257  000D1C  504F               	movf	(efgtoa@m+1)^0,w,c
  4258  000D1E  0A80               	xorlw	128
  4259  000D20  5835               	subwfb	??_efgtoa^0,w,c
  4260  000D22  A0D8               	btfss	status,0,c
  4261  000D24  EF96  F006         	goto	u4421
  4262  000D28  EF98  F006         	goto	u4420
  4263  000D2C                     u4421:
  4264  000D2C  EF0F  F006         	goto	l3798
  4265  000D30                     u4420:
  4266  000D30                     
  4267                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.0;
  4268  000D30  C06E  F001         	movff	efgtoa@u,___flmul@b
  4269  000D34  C06F  F002         	movff	efgtoa@u+1,___flmul@b+1
  4270  000D38  C070  F003         	movff	efgtoa@u+2,___flmul@b+2
  4271  000D3C  C071  F004         	movff	efgtoa@u+3,___flmul@b+3
  4272  000D40  0E00               	movlw	0
  4273  000D42  6E05               	movwf	___flmul@a^0,c
  4274  000D44  0E00               	movlw	0
  4275  000D46  6E06               	movwf	(___flmul@a+1)^0,c
  4276  000D48  0EA0               	movlw	160
  4277  000D4A  6E07               	movwf	(___flmul@a+2)^0,c
  4278  000D4C  0E40               	movlw	64
  4279  000D4E  6E08               	movwf	(___flmul@a+3)^0,c
  4280  000D50  ECDC  F00D         	call	___flmul	;wreg free
  4281  000D54  C001  F060         	movff	?___flmul,efgtoa@l
  4282  000D58  C002  F061         	movff	?___flmul+1,efgtoa@l+1
  4283  000D5C  C003  F062         	movff	?___flmul+2,efgtoa@l+2
  4284  000D60  C004  F063         	movff	?___flmul+3,efgtoa@l+3
  4285  000D64                     
  4286                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < l) {
  4287  000D64  C05C  F01A         	movff	efgtoa@h,___flge@ff1
  4288  000D68  C05D  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  4289  000D6C  C05E  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  4290  000D70  C05F  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  4291  000D74  C060  F01E         	movff	efgtoa@l,___flge@ff2
  4292  000D78  C061  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  4293  000D7C  C062  F020         	movff	efgtoa@l+2,___flge@ff2+2
  4294  000D80  C063  F021         	movff	efgtoa@l+3,___flge@ff2+3
  4295  000D84  EC41  F017         	call	___flge	;wreg free
  4296  000D88  B0D8               	btfsc	status,0,c
  4297  000D8A  EFC9  F006         	goto	u4431
  4298  000D8E  EFCB  F006         	goto	u4430
  4299  000D92                     u4431:
  4300  000D92  EFD5  F006         	goto	l3814
  4301  000D96                     u4430:
  4302  000D96                     
  4303                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 0.0;
  4304  000D96  0E00               	movlw	0
  4305  000D98  6E60               	movwf	efgtoa@l^0,c
  4306  000D9A  0E00               	movlw	0
  4307  000D9C  6E61               	movwf	(efgtoa@l+1)^0,c
  4308  000D9E  0E00               	movlw	0
  4309  000DA0  6E62               	movwf	(efgtoa@l+2)^0,c
  4310  000DA2  0E00               	movlw	0
  4311  000DA4  6E63               	movwf	(efgtoa@l+3)^0,c
  4312                           
  4313                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  4314  000DA6  EFFD  F006         	goto	l3820
  4315  000DAA                     l3814:
  4316                           
  4317                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if ((h ==
      +                           l) && !(d % 2)) {
  4318  000DAA  C05C  F001         	movff	efgtoa@h,___fleq@ff1
  4319  000DAE  C05D  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4320  000DB2  C05E  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4321  000DB6  C05F  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4322  000DBA  C060  F005         	movff	efgtoa@l,___fleq@ff2
  4323  000DBE  C061  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4324  000DC2  C062  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4325  000DC6  C063  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4326  000DCA  EC8B  F01A         	call	___fleq	;wreg free
  4327  000DCE  A0D8               	btfss	status,0,c
  4328  000DD0  EFEC  F006         	goto	u4441
  4329  000DD4  EFEE  F006         	goto	u4440
  4330  000DD8                     u4441:
  4331  000DD8  EFFD  F006         	goto	l3820
  4332  000DDC                     u4440:
  4333  000DDC  B052               	btfsc	efgtoa@d^0,0,c
  4334  000DDE  EFF3  F006         	goto	u4451
  4335  000DE2  EFF5  F006         	goto	u4450
  4336  000DE6                     u4451:
  4337  000DE6  EFFD  F006         	goto	l3820
  4338  000DEA                     u4450:
  4339  000DEA                     
  4340                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             l = 0
      +                          .0;
  4341  000DEA  0E00               	movlw	0
  4342  000DEC  6E60               	movwf	efgtoa@l^0,c
  4343  000DEE  0E00               	movlw	0
  4344  000DF0  6E61               	movwf	(efgtoa@l+1)^0,c
  4345  000DF2  0E00               	movlw	0
  4346  000DF4  6E62               	movwf	(efgtoa@l+2)^0,c
  4347  000DF6  0E00               	movlw	0
  4348  000DF8  6E63               	movwf	(efgtoa@l+3)^0,c
  4349  000DFA                     l3820:
  4350                           
  4351                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + l;
  4352  000DFA  C066  F001         	movff	efgtoa@g,___fladd@b
  4353  000DFE  C067  F002         	movff	efgtoa@g+1,___fladd@b+1
  4354  000E02  C068  F003         	movff	efgtoa@g+2,___fladd@b+2
  4355  000E06  C069  F004         	movff	efgtoa@g+3,___fladd@b+3
  4356  000E0A  C060  F005         	movff	efgtoa@l,___fladd@a
  4357  000E0E  C061  F006         	movff	efgtoa@l+1,___fladd@a+1
  4358  000E12  C062  F007         	movff	efgtoa@l+2,___fladd@a+2
  4359  000E16  C063  F008         	movff	efgtoa@l+3,___fladd@a+3
  4360  000E1A  EC47  F009         	call	___fladd	;wreg free
  4361  000E1E  C001  F05C         	movff	?___fladd,efgtoa@h
  4362  000E22  C002  F05D         	movff	?___fladd+1,efgtoa@h+1
  4363  000E26  C003  F05E         	movff	?___fladd+2,efgtoa@h+2
  4364  000E2A  C004  F05F         	movff	?___fladd+3,efgtoa@h+3
  4365  000E2E                     
  4366                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  4367  000E2E  C03A  F06E         	movff	efgtoa@ou,efgtoa@u
  4368  000E32  C03B  F06F         	movff	efgtoa@ou+1,efgtoa@u+1
  4369  000E36  C03C  F070         	movff	efgtoa@ou+2,efgtoa@u+2
  4370  000E3A  C03D  F071         	movff	efgtoa@ou+3,efgtoa@u+3
  4371  000E3E                     
  4372                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nmode =
      +                          = 'e') ? 0 : e;
  4373  000E3E  0E65               	movlw	101
  4374  000E40  1858               	xorwf	efgtoa@nmode^0,w,c
  4375  000E42  B4D8               	btfsc	status,2,c
  4376  000E44  EF26  F007         	goto	u4461
  4377  000E48  EF28  F007         	goto	u4460
  4378  000E4C                     u4461:
  4379  000E4C  EF2E  F007         	goto	l3828
  4380  000E50                     u4460:
  4381  000E50  C06A  F050         	movff	efgtoa@e,efgtoa@ne
  4382  000E54  C06B  F051         	movff	efgtoa@e+1,efgtoa@ne+1
  4383  000E58  EF32  F007         	goto	l968
  4384  000E5C                     l3828:
  4385  000E5C  0E00               	movlw	0
  4386  000E5E  6E51               	movwf	(efgtoa@ne+1)^0,c
  4387  000E60  0E00               	movlw	0
  4388  000E62  6E50               	movwf	efgtoa@ne^0,c
  4389  000E64                     l968:
  4390                           
  4391                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  4392  000E64  0E00               	movlw	0
  4393  000E66  6E4D               	movwf	(efgtoa@pp+1)^0,c
  4394  000E68  0E00               	movlw	0
  4395  000E6A  6E4C               	movwf	efgtoa@pp^0,c
  4396                           
  4397                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  4398  000E6C  0E00               	movlw	0
  4399  000E6E  6E4B               	movwf	(efgtoa@t+1)^0,c
  4400  000E70  0E00               	movlw	0
  4401  000E72  6E4A               	movwf	efgtoa@t^0,c
  4402                           
  4403                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  4404  000E74  0E00               	movlw	0
  4405  000E76  6E65               	movwf	(efgtoa@i+1)^0,c
  4406  000E78  0E00               	movlw	0
  4407  000E7A  6E64               	movwf	efgtoa@i^0,c
  4408                           
  4409                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((i < m
      +                          ) && (n < (80 - 5))) {
  4410  000E7C  EF2C  F008         	goto	l3878
  4411  000E80                     l3830:
  4412                           
  4413                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = floor
      +                          f(h/u);
  4414  000E80  C05C  F001         	movff	efgtoa@h,___fldiv@b
  4415  000E84  C05D  F002         	movff	efgtoa@h+1,___fldiv@b+1
  4416  000E88  C05E  F003         	movff	efgtoa@h+2,___fldiv@b+2
  4417  000E8C  C05F  F004         	movff	efgtoa@h+3,___fldiv@b+3
  4418  000E90  C06E  F005         	movff	efgtoa@u,___fldiv@a
  4419  000E94  C06F  F006         	movff	efgtoa@u+1,___fldiv@a+1
  4420  000E98  C070  F007         	movff	efgtoa@u+2,___fldiv@a+2
  4421  000E9C  C071  F008         	movff	efgtoa@u+3,___fldiv@a+3
  4422  000EA0  ECF1  F00F         	call	___fldiv	;wreg free
  4423  000EA4  C001  F01A         	movff	?___fldiv,floorf@x
  4424  000EA8  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  4425  000EAC  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  4426  000EB0  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  4427  000EB4  EC18  F014         	call	_floorf	;wreg free
  4428  000EB8  C01A  F060         	movff	?_floorf,efgtoa@l
  4429  000EBC  C01B  F061         	movff	?_floorf+1,efgtoa@l+1
  4430  000EC0  C01C  F062         	movff	?_floorf+2,efgtoa@l+2
  4431  000EC4  C01D  F063         	movff	?_floorf+3,efgtoa@l+3
  4432                           
  4433                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = (int)
      +                          l;
  4434  000EC8  C060  F01A         	movff	efgtoa@l,___fltol@f1
  4435  000ECC  C061  F01B         	movff	efgtoa@l+1,___fltol@f1+1
  4436  000ED0  C062  F01C         	movff	efgtoa@l+2,___fltol@f1+2
  4437  000ED4  C063  F01D         	movff	efgtoa@l+3,___fltol@f1+3
  4438  000ED8  ECBE  F016         	call	___fltol	;wreg free
  4439  000EDC  C01A  F052         	movff	?___fltol,efgtoa@d
  4440  000EE0  C01B  F053         	movff	?___fltol+1,efgtoa@d+1
  4441  000EE4                     
  4442                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (!(fla
      +                          gs & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4443  000EE4  0100               	movlb	0	; () banked
  4444  000EE6  B9F4               	btfsc	_flags& (0+255),4,b
  4445  000EE8  EF78  F007         	goto	u4471
  4446  000EEC  EF7A  F007         	goto	u4470
  4447  000EF0                     u4471:
  4448  000EF0  EF97  F007         	goto	l3842
  4449  000EF4                     u4470:
  4450  000EF4                     
  4451                           ; BSR set to: 0
  4452  000EF4  5052               	movf	efgtoa@d^0,w,c
  4453  000EF6  1053               	iorwf	(efgtoa@d+1)^0,w,c
  4454  000EF8  A4D8               	btfss	status,2,c
  4455  000EFA  EF81  F007         	goto	u4481
  4456  000EFE  EF83  F007         	goto	u4480
  4457  000F02                     u4481:
  4458  000F02  EF97  F007         	goto	l3842
  4459  000F06                     u4480:
  4460  000F06                     
  4461                           ; BSR set to: 0
  4462  000F06  0E67               	movlw	103
  4463  000F08  185B               	xorwf	efgtoa@mode^0,w,c
  4464  000F0A  A4D8               	btfss	status,2,c
  4465  000F0C  EF8A  F007         	goto	u4491
  4466  000F10  EF8C  F007         	goto	u4490
  4467  000F14                     u4491:
  4468  000F14  EF97  F007         	goto	l3842
  4469  000F18                     u4490:
  4470  000F18                     
  4471                           ; BSR set to: 0
  4472  000F18  BE51               	btfsc	(efgtoa@ne+1)^0,7,c
  4473  000F1A  EF93  F007         	goto	u4500
  4474  000F1E  EF91  F007         	goto	u4501
  4475  000F22                     u4501:
  4476  000F22  EF97  F007         	goto	l3842
  4477  000F26                     u4500:
  4478  000F26                     
  4479                           ; BSR set to: 0
  4480                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             ++t;
  4481  000F26  4A4A               	infsnz	efgtoa@t^0,f,c
  4482  000F28  2A4B               	incf	(efgtoa@t+1)^0,f,c
  4483                           
  4484                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } else {
  4485  000F2A  EFE1  F007         	goto	l3870
  4486  000F2E                     l3842:
  4487                           
  4488                           ; BSR set to: 0
  4489                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             if (!
      +                          pp && (ne < 0)) {
  4490  000F2E  504C               	movf	efgtoa@pp^0,w,c
  4491  000F30  104D               	iorwf	(efgtoa@pp+1)^0,w,c
  4492  000F32  A4D8               	btfss	status,2,c
  4493  000F34  EF9E  F007         	goto	u4511
  4494  000F38  EFA0  F007         	goto	u4510
  4495  000F3C                     u4511:
  4496  000F3C  EFCA  F007         	goto	l3862
  4497  000F40                     u4510:
  4498  000F40                     
  4499                           ; BSR set to: 0
  4500  000F40  BE51               	btfsc	(efgtoa@ne+1)^0,7,c
  4501  000F42  EFA7  F007         	goto	u4520
  4502  000F46  EFA5  F007         	goto	u4521
  4503  000F4A                     u4521:
  4504  000F4A  EFCA  F007         	goto	l3862
  4505  000F4E                     u4520:
  4506  000F4E                     
  4507                           ; BSR set to: 0
  4508                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:                 d
      +                          buf[n++] = '.';
  4509  000F4E  0E00               	movlw	low _dbuf
  4510  000F50  246C               	addwf	efgtoa@n^0,w,c
  4511  000F52  6ED9               	movwf	fsr2l,c
  4512  000F54  0E01               	movlw	high _dbuf
  4513  000F56  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4514  000F58  6EDA               	movwf	fsr2h,c
  4515  000F5A  0E2E               	movlw	46
  4516  000F5C  6EDF               	movwf	indf2,c
  4517  000F5E                     
  4518                           ; BSR set to: 0
  4519  000F5E  4A6C               	infsnz	efgtoa@n^0,f,c
  4520  000F60  2A6D               	incf	(efgtoa@n+1)^0,f,c
  4521  000F62                     
  4522                           ; BSR set to: 0
  4523                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:                 -
      +                          -w;
  4524  000F62  0659               	decf	efgtoa@w^0,f,c
  4525  000F64  A0D8               	btfss	status,0,c
  4526  000F66  065A               	decf	(efgtoa@w+1)^0,f,c
  4527  000F68                     
  4528                           ; BSR set to: 0
  4529                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:                 p
      +                          p = 1;
  4530  000F68  0E00               	movlw	0
  4531  000F6A  6E4D               	movwf	(efgtoa@pp+1)^0,c
  4532  000F6C  0E01               	movlw	1
  4533  000F6E  6E4C               	movwf	efgtoa@pp^0,c
  4534  000F70  EFCA  F007         	goto	l3862
  4535  000F74                     l3854:
  4536                           
  4537                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:                 d
      +                          buf[n++] = '0';
  4538  000F74  0E00               	movlw	low _dbuf
  4539  000F76  246C               	addwf	efgtoa@n^0,w,c
  4540  000F78  6ED9               	movwf	fsr2l,c
  4541  000F7A  0E01               	movlw	high _dbuf
  4542  000F7C  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4543  000F7E  6EDA               	movwf	fsr2h,c
  4544  000F80  0E30               	movlw	48
  4545  000F82  6EDF               	movwf	indf2,c
  4546  000F84  4A6C               	infsnz	efgtoa@n^0,f,c
  4547  000F86  2A6D               	incf	(efgtoa@n+1)^0,f,c
  4548  000F88                     
  4549                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:                 -
      +                          -w;
  4550  000F88  0659               	decf	efgtoa@w^0,f,c
  4551  000F8A  A0D8               	btfss	status,0,c
  4552  000F8C  065A               	decf	(efgtoa@w+1)^0,f,c
  4553  000F8E                     
  4554                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:                 -
      +                          -t;
  4555  000F8E  064A               	decf	efgtoa@t^0,f,c
  4556  000F90  A0D8               	btfss	status,0,c
  4557  000F92  064B               	decf	(efgtoa@t+1)^0,f,c
  4558  000F94                     l3862:
  4559                           
  4560                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             while
      +                           (t) {
  4561  000F94  504A               	movf	efgtoa@t^0,w,c
  4562  000F96  104B               	iorwf	(efgtoa@t+1)^0,w,c
  4563  000F98  A4D8               	btfss	status,2,c
  4564  000F9A  EFD1  F007         	goto	u4531
  4565  000F9E  EFD3  F007         	goto	u4530
  4566  000FA2                     u4531:
  4567  000FA2  EFBA  F007         	goto	l3854
  4568  000FA6                     u4530:
  4569  000FA6                     
  4570                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             dbuf[
      +                          n++] = '0' + d;
  4571  000FA6  0E00               	movlw	low _dbuf
  4572  000FA8  246C               	addwf	efgtoa@n^0,w,c
  4573  000FAA  6ED9               	movwf	fsr2l,c
  4574  000FAC  0E01               	movlw	high _dbuf
  4575  000FAE  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4576  000FB0  6EDA               	movwf	fsr2h,c
  4577  000FB2  5052               	movf	efgtoa@d^0,w,c
  4578  000FB4  0F30               	addlw	48
  4579  000FB6  6EDF               	movwf	indf2,c
  4580  000FB8  4A6C               	infsnz	efgtoa@n^0,f,c
  4581  000FBA  2A6D               	incf	(efgtoa@n+1)^0,f,c
  4582  000FBC                     
  4583                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             --w;
  4584  000FBC  0659               	decf	efgtoa@w^0,f,c
  4585  000FBE  A0D8               	btfss	status,0,c
  4586  000FC0  065A               	decf	(efgtoa@w+1)^0,f,c
  4587  000FC2                     l3870:
  4588                           
  4589                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -= l*u;
  4590  000FC2  C05C  F01A         	movff	efgtoa@h,___flsub@b
  4591  000FC6  C05D  F01B         	movff	efgtoa@h+1,___flsub@b+1
  4592  000FCA  C05E  F01C         	movff	efgtoa@h+2,___flsub@b+2
  4593  000FCE  C05F  F01D         	movff	efgtoa@h+3,___flsub@b+3
  4594  000FD2  C06E  F005         	movff	efgtoa@u,___flmul@a
  4595  000FD6  C06F  F006         	movff	efgtoa@u+1,___flmul@a+1
  4596  000FDA  C070  F007         	movff	efgtoa@u+2,___flmul@a+2
  4597  000FDE  C071  F008         	movff	efgtoa@u+3,___flmul@a+3
  4598  000FE2  C060  F001         	movff	efgtoa@l,___flmul@b
  4599  000FE6  C061  F002         	movff	efgtoa@l+1,___flmul@b+1
  4600  000FEA  C062  F003         	movff	efgtoa@l+2,___flmul@b+2
  4601  000FEE  C063  F004         	movff	efgtoa@l+3,___flmul@b+3
  4602  000FF2  ECDC  F00D         	call	___flmul	;wreg free
  4603  000FF6  C001  F01E         	movff	?___flmul,___flsub@a
  4604  000FFA  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  4605  000FFE  C003  F020         	movff	?___flmul+2,___flsub@a+2
  4606  001002  C004  F021         	movff	?___flmul+3,___flsub@a+3
  4607  001006  EC8E  F01C         	call	___flsub	;wreg free
  4608  00100A  C01A  F05C         	movff	?___flsub,efgtoa@h
  4609  00100E  C01B  F05D         	movff	?___flsub+1,efgtoa@h+1
  4610  001012  C01C  F05E         	movff	?___flsub+2,efgtoa@h+2
  4611  001016  C01D  F05F         	movff	?___flsub+3,efgtoa@h+3
  4612  00101A                     
  4613                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = u/10.
      +                          0;
  4614  00101A  C06E  F001         	movff	efgtoa@u,___fldiv@b
  4615  00101E  C06F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4616  001022  C070  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4617  001026  C071  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4618  00102A  0E00               	movlw	0
  4619  00102C  6E05               	movwf	___fldiv@a^0,c
  4620  00102E  0E00               	movlw	0
  4621  001030  6E06               	movwf	(___fldiv@a+1)^0,c
  4622  001032  0E20               	movlw	32
  4623  001034  6E07               	movwf	(___fldiv@a+2)^0,c
  4624  001036  0E41               	movlw	65
  4625  001038  6E08               	movwf	(___fldiv@a+3)^0,c
  4626  00103A  ECF1  F00F         	call	___fldiv	;wreg free
  4627  00103E  C001  F06E         	movff	?___fldiv,efgtoa@u
  4628  001042  C002  F06F         	movff	?___fldiv+1,efgtoa@u+1
  4629  001046  C003  F070         	movff	?___fldiv+2,efgtoa@u+2
  4630  00104A  C004  F071         	movff	?___fldiv+3,efgtoa@u+3
  4631  00104E                     
  4632                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne;
  4633  00104E  0650               	decf	efgtoa@ne^0,f,c
  4634  001050  A0D8               	btfss	status,0,c
  4635  001052  0651               	decf	(efgtoa@ne+1)^0,f,c
  4636  001054                     
  4637                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  4638  001054  4A64               	infsnz	efgtoa@i^0,f,c
  4639  001056  2A65               	incf	(efgtoa@i+1)^0,f,c
  4640  001058                     l3878:
  4641                           
  4642                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((i < m
      +                          ) && (n < (80 - 5))) {
  4643  001058  504E               	movf	efgtoa@m^0,w,c
  4644  00105A  5C64               	subwf	efgtoa@i^0,w,c
  4645  00105C  5065               	movf	(efgtoa@i+1)^0,w,c
  4646  00105E  0A80               	xorlw	128
  4647  001060  6E35               	movwf	??_efgtoa^0,c
  4648  001062  504F               	movf	(efgtoa@m+1)^0,w,c
  4649  001064  0A80               	xorlw	128
  4650  001066  5835               	subwfb	??_efgtoa^0,w,c
  4651  001068  B0D8               	btfsc	status,0,c
  4652  00106A  EF39  F008         	goto	u4541
  4653  00106E  EF3B  F008         	goto	u4540
  4654  001072                     u4541:
  4655  001072  EF49  F008         	goto	l3882
  4656  001076                     u4540:
  4657  001076  BE6D               	btfsc	(efgtoa@n+1)^0,7,c
  4658  001078  EF47  F008         	goto	u4551
  4659  00107C  506D               	movf	(efgtoa@n+1)^0,w,c
  4660  00107E  E109               	bnz	u4550
  4661  001080  0E4B               	movlw	75
  4662  001082  5C6C               	subwf	efgtoa@n^0,w,c
  4663  001084  A0D8               	btfss	status,0,c
  4664  001086  EF47  F008         	goto	u4551
  4665  00108A  EF49  F008         	goto	u4550
  4666  00108E                     u4551:
  4667  00108E  EF40  F007         	goto	l3830
  4668  001092                     u4550:
  4669  001092                     l3882:
  4670                           
  4671                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp && (f
      +                          lags & (1 << 4))) {
  4672  001092  504C               	movf	efgtoa@pp^0,w,c
  4673  001094  104D               	iorwf	(efgtoa@pp+1)^0,w,c
  4674  001096  A4D8               	btfss	status,2,c
  4675  001098  EF50  F008         	goto	u4561
  4676  00109C  EF52  F008         	goto	u4560
  4677  0010A0                     u4561:
  4678  0010A0  EF64  F008         	goto	l3890
  4679  0010A4                     u4560:
  4680  0010A4  0100               	movlb	0	; () banked
  4681  0010A6  A9F4               	btfss	_flags& (0+255),4,b
  4682  0010A8  EF58  F008         	goto	u4571
  4683  0010AC  EF5A  F008         	goto	u4570
  4684  0010B0                     u4571:
  4685  0010B0  EF64  F008         	goto	l3890
  4686  0010B4                     u4570:
  4687  0010B4                     
  4688                           ; BSR set to: 0
  4689                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf[n++]
      +                           = '.';
  4690  0010B4  0E00               	movlw	low _dbuf
  4691  0010B6  246C               	addwf	efgtoa@n^0,w,c
  4692  0010B8  6ED9               	movwf	fsr2l,c
  4693  0010BA  0E01               	movlw	high _dbuf
  4694  0010BC  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4695  0010BE  6EDA               	movwf	fsr2h,c
  4696  0010C0  0E2E               	movlw	46
  4697  0010C2  6EDF               	movwf	indf2,c
  4698  0010C4                     
  4699                           ; BSR set to: 0
  4700  0010C4  4A6C               	infsnz	efgtoa@n^0,f,c
  4701  0010C6  2A6D               	incf	(efgtoa@n+1)^0,f,c
  4702  0010C8                     l3890:
  4703                           
  4704                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] = '\0
      +                          ';
  4705  0010C8  0E00               	movlw	low _dbuf
  4706  0010CA  246C               	addwf	efgtoa@n^0,w,c
  4707  0010CC  6ED9               	movwf	fsr2l,c
  4708  0010CE  0E01               	movlw	high _dbuf
  4709  0010D0  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4710  0010D2  6EDA               	movwf	fsr2h,c
  4711  0010D4  0E00               	movlw	0
  4712  0010D6  6EDF               	movwf	indf2,c
  4713  0010D8                     
  4714                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmode == 
      +                          'e') {
  4715  0010D8  0E65               	movlw	101
  4716  0010DA  1858               	xorwf	efgtoa@nmode^0,w,c
  4717  0010DC  A4D8               	btfss	status,2,c
  4718  0010DE  EF73  F008         	goto	u4581
  4719  0010E2  EF75  F008         	goto	u4580
  4720  0010E6                     u4581:
  4721  0010E6  EF2A  F004         	goto	l3702
  4722  0010EA                     u4580:
  4723  0010EA                     
  4724                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = sizeo
      +                          f(dbuf) - 1;
  4725  0010EA  0E00               	movlw	0
  4726  0010EC  6E65               	movwf	(efgtoa@i+1)^0,c
  4727  0010EE  0E4F               	movlw	79
  4728  0010F0  6E64               	movwf	efgtoa@i^0,c
  4729  0010F2                     
  4730                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf[i] =
      +                           '\0';
  4731  0010F2  0E00               	movlw	low _dbuf
  4732  0010F4  2464               	addwf	efgtoa@i^0,w,c
  4733  0010F6  6ED9               	movwf	fsr2l,c
  4734  0010F8  0E01               	movlw	high _dbuf
  4735  0010FA  2065               	addwfc	(efgtoa@i+1)^0,w,c
  4736  0010FC  6EDA               	movwf	fsr2h,c
  4737  0010FE  0E00               	movlw	0
  4738  001100  6EDF               	movwf	indf2,c
  4739  001102                     
  4740                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign = 0;
  4741  001102  0E00               	movlw	0
  4742  001104  6E55               	movwf	(efgtoa@sign+1)^0,c
  4743  001106  0E00               	movlw	0
  4744  001108  6E54               	movwf	efgtoa@sign^0,c
  4745  00110A                     
  4746                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (e < 0
      +                          ) {
  4747  00110A  BE6B               	btfsc	(efgtoa@e+1)^0,7,c
  4748  00110C  EF8C  F008         	goto	u4590
  4749  001110  EF8A  F008         	goto	u4591
  4750  001114                     u4591:
  4751  001114  EF94  F008         	goto	l3906
  4752  001118                     u4590:
  4753  001118                     
  4754                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             sign 
      +                          = 1;
  4755  001118  0E00               	movlw	0
  4756  00111A  6E55               	movwf	(efgtoa@sign+1)^0,c
  4757  00111C  0E01               	movlw	1
  4758  00111E  6E54               	movwf	efgtoa@sign^0,c
  4759  001120                     
  4760                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             e = -
      +                          e;
  4761  001120  6C6A               	negf	efgtoa@e^0,c
  4762  001122  1E6B               	comf	(efgtoa@e+1)^0,f,c
  4763  001124  B0D8               	btfsc	status,0,c
  4764  001126  2A6B               	incf	(efgtoa@e+1)^0,f,c
  4765  001128                     l3906:
  4766                           
  4767                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 2;
  4768  001128  0E00               	movlw	0
  4769  00112A  6E57               	movwf	(efgtoa@p+1)^0,c
  4770  00112C  0E02               	movlw	2
  4771  00112E  6E56               	movwf	efgtoa@p^0,c
  4772                           
  4773                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         while (e 
      +                          || (0 < p)) {
  4774  001130  EFC4  F008         	goto	l3918
  4775  001134                     l3908:
  4776                           
  4777                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             --i;
  4778  001134  0664               	decf	efgtoa@i^0,f,c
  4779  001136  A0D8               	btfss	status,0,c
  4780  001138  0665               	decf	(efgtoa@i+1)^0,f,c
  4781  00113A                     
  4782                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             dbuf[
      +                          i] = '0' + (e % 10);
  4783  00113A  0E00               	movlw	low _dbuf
  4784  00113C  2464               	addwf	efgtoa@i^0,w,c
  4785  00113E  6ED9               	movwf	fsr2l,c
  4786  001140  0E01               	movlw	high _dbuf
  4787  001142  2065               	addwfc	(efgtoa@i+1)^0,w,c
  4788  001144  6EDA               	movwf	fsr2h,c
  4789  001146  C06A  F001         	movff	efgtoa@e,___awmod@dividend
  4790  00114A  C06B  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4791  00114E  0E00               	movlw	0
  4792  001150  6E04               	movwf	(___awmod@divisor+1)^0,c
  4793  001152  0E0A               	movlw	10
  4794  001154  6E03               	movwf	___awmod@divisor^0,c
  4795  001156  EC33  F01A         	call	___awmod	;wreg free
  4796  00115A  5001               	movf	?___awmod^0,w,c
  4797  00115C  0F30               	addlw	48
  4798  00115E  6EDF               	movwf	indf2,c
  4799  001160                     
  4800                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             e = e
      +                           / 10;
  4801  001160  C06A  F001         	movff	efgtoa@e,___awdiv@dividend
  4802  001164  C06B  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4803  001168  0E00               	movlw	0
  4804  00116A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4805  00116C  0E0A               	movlw	10
  4806  00116E  6E03               	movwf	___awdiv@divisor^0,c
  4807  001170  EC75  F019         	call	___awdiv	;wreg free
  4808  001174  C001  F06A         	movff	?___awdiv,efgtoa@e
  4809  001178  C002  F06B         	movff	?___awdiv+1,efgtoa@e+1
  4810  00117C                     
  4811                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             --p;
  4812  00117C  0656               	decf	efgtoa@p^0,f,c
  4813  00117E  A0D8               	btfss	status,0,c
  4814  001180  0657               	decf	(efgtoa@p+1)^0,f,c
  4815  001182                     
  4816                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             --w;
  4817  001182  0659               	decf	efgtoa@w^0,f,c
  4818  001184  A0D8               	btfss	status,0,c
  4819  001186  065A               	decf	(efgtoa@w+1)^0,f,c
  4820  001188                     l3918:
  4821                           
  4822                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         while (e 
      +                          || (0 < p)) {
  4823  001188  506A               	movf	efgtoa@e^0,w,c
  4824  00118A  106B               	iorwf	(efgtoa@e+1)^0,w,c
  4825  00118C  A4D8               	btfss	status,2,c
  4826  00118E  EFCB  F008         	goto	u4601
  4827  001192  EFCD  F008         	goto	u4600
  4828  001196                     u4601:
  4829  001196  EF9A  F008         	goto	l3908
  4830  00119A                     u4600:
  4831  00119A  BE57               	btfsc	(efgtoa@p+1)^0,7,c
  4832  00119C  EFDA  F008         	goto	u4610
  4833  0011A0  5057               	movf	(efgtoa@p+1)^0,w,c
  4834  0011A2  E106               	bnz	u4611
  4835  0011A4  0456               	decf	efgtoa@p^0,w,c
  4836  0011A6  B0D8               	btfsc	status,0,c
  4837  0011A8  EFD8  F008         	goto	u4611
  4838  0011AC  EFDA  F008         	goto	u4610
  4839  0011B0                     u4611:
  4840  0011B0  EF9A  F008         	goto	l3908
  4841  0011B4                     u4610:
  4842  0011B4                     
  4843                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  4844  0011B4  0664               	decf	efgtoa@i^0,f,c
  4845  0011B6  A0D8               	btfss	status,0,c
  4846  0011B8  0665               	decf	(efgtoa@i+1)^0,f,c
  4847  0011BA                     
  4848                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf[i] =
      +                           sign ? '-' : '+';
  4849  0011BA  5054               	movf	efgtoa@sign^0,w,c
  4850  0011BC  1055               	iorwf	(efgtoa@sign+1)^0,w,c
  4851  0011BE  A4D8               	btfss	status,2,c
  4852  0011C0  EFE4  F008         	goto	u4621
  4853  0011C4  EFE6  F008         	goto	u4620
  4854  0011C8                     u4621:
  4855  0011C8  EFEC  F008         	goto	l3928
  4856  0011CC                     u4620:
  4857  0011CC  0E00               	movlw	0
  4858  0011CE  6E45               	movwf	(_efgtoa$733+1)^0,c
  4859  0011D0  0E2B               	movlw	43
  4860  0011D2  6E44               	movwf	_efgtoa$733^0,c
  4861  0011D4  EFF0  F008         	goto	l3930
  4862  0011D8                     l3928:
  4863  0011D8  0E00               	movlw	0
  4864  0011DA  6E45               	movwf	(_efgtoa$733+1)^0,c
  4865  0011DC  0E2D               	movlw	45
  4866  0011DE  6E44               	movwf	_efgtoa$733^0,c
  4867  0011E0                     l3930:
  4868  0011E0  0E00               	movlw	low _dbuf
  4869  0011E2  2464               	addwf	efgtoa@i^0,w,c
  4870  0011E4  6ED9               	movwf	fsr2l,c
  4871  0011E6  0E01               	movlw	high _dbuf
  4872  0011E8  2065               	addwfc	(efgtoa@i+1)^0,w,c
  4873  0011EA  6EDA               	movwf	fsr2h,c
  4874  0011EC  C044  FFDF         	movff	_efgtoa$733,indf2
  4875  0011F0                     
  4876                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  4877  0011F0  0659               	decf	efgtoa@w^0,f,c
  4878  0011F2  A0D8               	btfss	status,0,c
  4879  0011F4  065A               	decf	(efgtoa@w+1)^0,f,c
  4880  0011F6                     
  4881                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf[i] =
      +                           (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4882  0011F6  0664               	decf	efgtoa@i^0,f,c
  4883  0011F8  A0D8               	btfss	status,0,c
  4884  0011FA  0665               	decf	(efgtoa@i+1)^0,f,c
  4885  0011FC  0EBF               	movlw	191
  4886  0011FE  6E35               	movwf	??_efgtoa^0,c
  4887  001200  0EFF               	movlw	255
  4888  001202  6E36               	movwf	(??_efgtoa+1)^0,c
  4889  001204  5034               	movf	efgtoa@c^0,w,c
  4890  001206  6E37               	movwf	(??_efgtoa+2)^0,c
  4891  001208  6A38               	clrf	(??_efgtoa+3)^0,c
  4892  00120A  5035               	movf	??_efgtoa^0,w,c
  4893  00120C  2637               	addwf	(??_efgtoa+2)^0,f,c
  4894  00120E  5036               	movf	(??_efgtoa+1)^0,w,c
  4895  001210  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4896  001212  5038               	movf	(??_efgtoa+3)^0,w,c
  4897  001214  E10A               	bnz	u4630
  4898  001216  0E1A               	movlw	26
  4899  001218  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4900  00121A  A0D8               	btfss	status,0,c
  4901  00121C  EF12  F009         	goto	u4631
  4902  001220  EF15  F009         	goto	u4630
  4903  001224                     u4631:
  4904  001224  0E01               	movlw	1
  4905  001226  EF16  F009         	goto	u4640
  4906  00122A                     u4630:
  4907  00122A  0E00               	movlw	0
  4908  00122C                     u4640:
  4909  00122C  6E48               	movwf	_efgtoa$735^0,c
  4910  00122E  6A49               	clrf	(_efgtoa$735+1)^0,c
  4911  001230  5048               	movf	_efgtoa$735^0,w,c
  4912  001232  1049               	iorwf	(_efgtoa$735+1)^0,w,c
  4913  001234  A4D8               	btfss	status,2,c
  4914  001236  EF1F  F009         	goto	u4651
  4915  00123A  EF21  F009         	goto	u4650
  4916  00123E                     u4651:
  4917  00123E  EF27  F009         	goto	l3944
  4918  001242                     u4650:
  4919  001242  0E00               	movlw	0
  4920  001244  6E47               	movwf	(_efgtoa$734+1)^0,c
  4921  001246  0E65               	movlw	101
  4922  001248  6E46               	movwf	_efgtoa$734^0,c
  4923  00124A  EF2B  F009         	goto	l3946
  4924  00124E                     l3944:
  4925  00124E  0E00               	movlw	0
  4926  001250  6E47               	movwf	(_efgtoa$734+1)^0,c
  4927  001252  0E45               	movlw	69
  4928  001254  6E46               	movwf	_efgtoa$734^0,c
  4929  001256                     l3946:
  4930  001256  0E00               	movlw	low _dbuf
  4931  001258  2464               	addwf	efgtoa@i^0,w,c
  4932  00125A  6ED9               	movwf	fsr2l,c
  4933  00125C  0E01               	movlw	high _dbuf
  4934  00125E  2065               	addwfc	(efgtoa@i+1)^0,w,c
  4935  001260  6EDA               	movwf	fsr2h,c
  4936  001262  C046  FFDF         	movff	_efgtoa$734,indf2
  4937  001266                     
  4938                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  4939  001266  0659               	decf	efgtoa@w^0,f,c
  4940  001268  A0D8               	btfss	status,0,c
  4941  00126A  065A               	decf	(efgtoa@w+1)^0,f,c
  4942  00126C                     
  4943                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strcpy(&d
      +                          buf[n], &dbuf[i]);
  4944  00126C  0E00               	movlw	low _dbuf
  4945  00126E  246C               	addwf	efgtoa@n^0,w,c
  4946  001270  6E01               	movwf	strcpy@dest^0,c
  4947  001272  0E01               	movlw	high _dbuf
  4948  001274  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4949  001276  6E02               	movwf	(strcpy@dest+1)^0,c
  4950  001278  0E00               	movlw	low _dbuf
  4951  00127A  2464               	addwf	efgtoa@i^0,w,c
  4952  00127C  6E03               	movwf	strcpy@src^0,c
  4953  00127E  0E01               	movlw	high _dbuf
  4954  001280  2065               	addwfc	(efgtoa@i+1)^0,w,c
  4955  001282  6E04               	movwf	(strcpy@src+1)^0,c
  4956  001284  EC0E  F01C         	call	_strcpy	;wreg free
  4957  001288  EF2A  F004         	goto	l3702
  4958  00128C                     l924:
  4959  00128C  0012               	return		;funcret
  4960  00128E                     __end_of_efgtoa:
  4961                           	callstack 0
  4962                           
  4963 ;; *************** function _tolower *****************
  4964 ;; Defined at:
  4965 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\tolower.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;  c               2    6[COMRAM] int 
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;		None
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  2    6[COMRAM] int 
  4972 ;; Registers used:
  4973 ;;		wreg, status,2, status,0
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4979 ;;      Params:         2       0       0       0       0       0       0
  4980 ;;      Locals:         2       0       0       0       0       0       0
  4981 ;;      Temps:          4       0       0       0       0       0       0
  4982 ;;      Totals:         8       0       0       0       0       0       0
  4983 ;;Total ram usage:        8 bytes
  4984 ;; Hardware stack levels used:    1
  4985 ;; Hardware stack levels required when called:    1
  4986 ;; This function calls:
  4987 ;;		_isupper
  4988 ;; This function is called by:
  4989 ;;		_efgtoa
  4990 ;;		_vfpfcnvrt
  4991 ;; This function uses a non-reentrant model
  4992 ;;
  4993                           
  4994                           	psect	text10
  4995  003760                     __ptext10:
  4996                           	callstack 0
  4997  003760                     _tolower:
  4998                           	callstack 25
  4999  003760  0EBF               	movlw	191
  5000  003762  6E09               	movwf	??_tolower^0,c
  5001  003764  0EFF               	movlw	255
  5002  003766  6E0A               	movwf	(??_tolower+1)^0,c
  5003  003768  C007  F00B         	movff	tolower@c,??_tolower+2
  5004  00376C  C008  F00C         	movff	tolower@c+1,??_tolower+3
  5005  003770  5009               	movf	??_tolower^0,w,c
  5006  003772  260B               	addwf	(??_tolower+2)^0,f,c
  5007  003774  500A               	movf	(??_tolower+1)^0,w,c
  5008  003776  220C               	addwfc	(??_tolower+3)^0,f,c
  5009  003778  500C               	movf	(??_tolower+3)^0,w,c
  5010  00377A  E10A               	bnz	u3970
  5011  00377C  0E1A               	movlw	26
  5012  00377E  5C0B               	subwf	(??_tolower+2)^0,w,c
  5013  003780  A0D8               	btfss	status,0,c
  5014  003782  EFC5  F01B         	goto	u3971
  5015  003786  EFC8  F01B         	goto	u3970
  5016  00378A                     u3971:
  5017  00378A  0E01               	movlw	1
  5018  00378C  EFC9  F01B         	goto	u3980
  5019  003790                     u3970:
  5020  003790  0E00               	movlw	0
  5021  003792                     u3980:
  5022  003792  6E0D               	movwf	_tolower$882^0,c
  5023  003794  6A0E               	clrf	(_tolower$882+1)^0,c
  5024  003796  500D               	movf	_tolower$882^0,w,c
  5025  003798  100E               	iorwf	(_tolower$882+1)^0,w,c
  5026  00379A  B4D8               	btfsc	status,2,c
  5027  00379C  EFD2  F01B         	goto	u3991
  5028  0037A0  EFD4  F01B         	goto	u3990
  5029  0037A4                     u3991:
  5030  0037A4  EFDB  F01B         	goto	l1152
  5031  0037A8                     u3990:
  5032  0037A8  0E20               	movlw	32
  5033  0037AA  1007               	iorwf	tolower@c^0,w,c
  5034  0037AC  6E07               	movwf	?_tolower^0,c
  5035  0037AE  5008               	movf	(tolower@c+1)^0,w,c
  5036  0037B0  6E08               	movwf	(?_tolower+1)^0,c
  5037  0037B2  EFDF  F01B         	goto	l1157
  5038  0037B6                     l1152:
  5039  0037B6  C007  F007         	movff	tolower@c,?_tolower
  5040  0037BA  C008  F008         	movff	tolower@c+1,?_tolower+1
  5041  0037BE                     l1157:
  5042  0037BE  0012               	return		;funcret
  5043  0037C0                     __end_of_tolower:
  5044                           	callstack 0
  5045                           
  5046 ;; *************** function _isupper *****************
  5047 ;; Defined at:
  5048 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\isupper.c"
  5049 ;; Parameters:    Size  Location     Type
  5050 ;;  c               2    0[COMRAM] int 
  5051 ;; Auto vars:     Size  Location     Type
  5052 ;;		None
  5053 ;; Return value:  Size  Location     Type
  5054 ;;                  2    0[COMRAM] int 
  5055 ;; Registers used:
  5056 ;;		wreg, status,2, status,0
  5057 ;; Tracked objects:
  5058 ;;		On entry : 0/0
  5059 ;;		On exit  : 0/0
  5060 ;;		Unchanged: 0/0
  5061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5062 ;;      Params:         2       0       0       0       0       0       0
  5063 ;;      Locals:         0       0       0       0       0       0       0
  5064 ;;      Temps:          4       0       0       0       0       0       0
  5065 ;;      Totals:         6       0       0       0       0       0       0
  5066 ;;Total ram usage:        6 bytes
  5067 ;; Hardware stack levels used:    1
  5068 ;; This function calls:
  5069 ;;		Nothing
  5070 ;; This function is called by:
  5071 ;;		_efgtoa
  5072 ;;		_vfpfcnvrt
  5073 ;;		_tolower
  5074 ;; This function uses a non-reentrant model
  5075 ;;
  5076                           
  5077                           	psect	text11
  5078  0039A6                     __ptext11:
  5079                           	callstack 0
  5080  0039A6                     _isupper:
  5081                           	callstack 25
  5082  0039A6  0EBF               	movlw	191
  5083  0039A8  6E03               	movwf	??_isupper^0,c
  5084  0039AA  0EFF               	movlw	255
  5085  0039AC  6E04               	movwf	(??_isupper+1)^0,c
  5086  0039AE  C001  F005         	movff	isupper@c,??_isupper+2
  5087  0039B2  C002  F006         	movff	isupper@c+1,??_isupper+3
  5088  0039B6  5003               	movf	??_isupper^0,w,c
  5089  0039B8  2605               	addwf	(??_isupper+2)^0,f,c
  5090  0039BA  5004               	movf	(??_isupper+1)^0,w,c
  5091  0039BC  2206               	addwfc	(??_isupper+3)^0,f,c
  5092  0039BE  5006               	movf	(??_isupper+3)^0,w,c
  5093  0039C0  E10A               	bnz	u3120
  5094  0039C2  0E1A               	movlw	26
  5095  0039C4  5C05               	subwf	(??_isupper+2)^0,w,c
  5096  0039C6  A0D8               	btfss	status,0,c
  5097  0039C8  EFE8  F01C         	goto	u3121
  5098  0039CC  EFEB  F01C         	goto	u3120
  5099  0039D0                     u3121:
  5100  0039D0  0E01               	movlw	1
  5101  0039D2  EFEC  F01C         	goto	u3130
  5102  0039D6                     u3120:
  5103  0039D6  0E00               	movlw	0
  5104  0039D8                     u3130:
  5105  0039D8  6E01               	movwf	?_isupper^0,c
  5106  0039DA  6A02               	clrf	(?_isupper+1)^0,c
  5107  0039DC  0012               	return		;funcret
  5108  0039DE                     __end_of_isupper:
  5109                           	callstack 0
  5110                           
  5111 ;; *************** function _strcpy *****************
  5112 ;; Defined at:
  5113 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  5114 ;; Parameters:    Size  Location     Type
  5115 ;;  dest            2    0[COMRAM] PTR unsigned char 
  5116 ;;		 -> dbuf(80), 
  5117 ;;  src             2    2[COMRAM] PTR const unsigned char 
  5118 ;;		 -> STR_36(4), STR_35(4), STR_32(4), STR_31(4), 
  5119 ;;		 -> dbuf(80), 
  5120 ;; Auto vars:     Size  Location     Type
  5121 ;;  d               2    8[COMRAM] PTR unsigned char 
  5122 ;;		 -> dbuf(80), 
  5123 ;;  s               2    6[COMRAM] PTR const unsigned char 
  5124 ;;		 -> STR_36(4), STR_35(4), STR_32(4), STR_31(4), 
  5125 ;;		 -> dbuf(80), 
  5126 ;; Return value:  Size  Location     Type
  5127 ;;                  2    0[COMRAM] PTR unsigned char 
  5128 ;; Registers used:
  5129 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5130 ;; Tracked objects:
  5131 ;;		On entry : 0/0
  5132 ;;		On exit  : 0/0
  5133 ;;		Unchanged: 0/0
  5134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5135 ;;      Params:         4       0       0       0       0       0       0
  5136 ;;      Locals:         4       0       0       0       0       0       0
  5137 ;;      Temps:          2       0       0       0       0       0       0
  5138 ;;      Totals:        10       0       0       0       0       0       0
  5139 ;;Total ram usage:       10 bytes
  5140 ;; Hardware stack levels used:    1
  5141 ;; This function calls:
  5142 ;;		Nothing
  5143 ;; This function is called by:
  5144 ;;		_efgtoa
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148                           	psect	text12
  5149  00381C                     __ptext12:
  5150                           	callstack 0
  5151  00381C                     _strcpy:
  5152                           	callstack 25
  5153  00381C  C003  F007         	movff	strcpy@src,strcpy@s
  5154  003820  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  5155  003824  C001  F009         	movff	strcpy@dest,strcpy@d
  5156  003828  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  5157  00382C                     l3602:
  5158  00382C  5007               	movf	strcpy@s^0,w,c
  5159  00382E  6E05               	movwf	??_strcpy^0,c
  5160  003830  5008               	movf	(strcpy@s+1)^0,w,c
  5161  003832  6E06               	movwf	(??_strcpy+1)^0,c
  5162  003834  4A07               	infsnz	strcpy@s^0,f,c
  5163  003836  2A08               	incf	(strcpy@s+1)^0,f,c
  5164  003838  C005  FFF6         	movff	??_strcpy,tblptrl
  5165  00383C  C006  FFF7         	movff	??_strcpy+1,tblptrh
  5166  003840  6AF8               	clrf	tblptru,c
  5167  003842  C009  FFD9         	movff	strcpy@d,fsr2l
  5168  003846  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  5169  00384A  4A09               	infsnz	strcpy@d^0,f,c
  5170  00384C  2A0A               	incf	(strcpy@d+1)^0,f,c
  5171  00384E  0E05               	movlw	(high __ramtop+-1)
  5172  003850  64F7               	cpfsgt	tblptrh,c
  5173  003852  D003               	bra	u3957
  5174  003854  0008               	tblrd		*
  5175  003856  50F5               	movf	tablat,w,c
  5176  003858  D005               	bra	u3950
  5177  00385A                     u3957:
  5178  00385A  CFF6 FFE9          	movff	tblptrl,fsr0l
  5179  00385E  CFF7 FFEA          	movff	tblptrh,fsr0h
  5180  003862  50EF               	movf	indf0,w,c
  5181  003864                     u3950:
  5182  003864  6EDF               	movwf	indf2,c
  5183  003866  50DF               	movf	indf2,w,c
  5184  003868  A4D8               	btfss	status,2,c
  5185  00386A  EF39  F01C         	goto	u3961
  5186  00386E  EF3B  F01C         	goto	u3960
  5187  003872                     u3961:
  5188  003872  EF16  F01C         	goto	l3602
  5189  003876                     u3960:
  5190  003876  0012               	return		;funcret
  5191  003878                     __end_of_strcpy:
  5192                           	callstack 0
  5193                           
  5194 ;; *************** function _pad *****************
  5195 ;; Defined at:
  5196 ;;		line 72 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5197 ;; Parameters:    Size  Location     Type
  5198 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5199 ;;		 -> sprintf@f(6), 
  5200 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5201 ;;		 -> dbuf(80), 
  5202 ;;  p               2   20[COMRAM] int 
  5203 ;; Auto vars:     Size  Location     Type
  5204 ;;  w               2   25[COMRAM] int 
  5205 ;;  i               2   23[COMRAM] int 
  5206 ;; Return value:  Size  Location     Type
  5207 ;;                  2   16[COMRAM] int 
  5208 ;; Registers used:
  5209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5210 ;; Tracked objects:
  5211 ;;		On entry : 0/0
  5212 ;;		On exit  : 0/0
  5213 ;;		Unchanged: 0/0
  5214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5215 ;;      Params:         6       0       0       0       0       0       0
  5216 ;;      Locals:         4       0       0       0       0       0       0
  5217 ;;      Temps:          1       0       0       0       0       0       0
  5218 ;;      Totals:        11       0       0       0       0       0       0
  5219 ;;Total ram usage:       11 bytes
  5220 ;; Hardware stack levels used:    1
  5221 ;; Hardware stack levels required when called:    3
  5222 ;; This function calls:
  5223 ;;		_fputc
  5224 ;;		_fputs
  5225 ;;		_strlen
  5226 ;; This function is called by:
  5227 ;;		_efgtoa
  5228 ;; This function uses a non-reentrant model
  5229 ;;
  5230                           
  5231                           	psect	text13
  5232  003224                     __ptext13:
  5233                           	callstack 0
  5234  003224                     _pad:
  5235                           	callstack 22
  5236  003224                     
  5237                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pad(FIL
      +                          E *fp, char *buf, int p);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c
      +                          : 73: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 74:     int i, 
      +                          w;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 77:     if (flags & 
      +                          (1 << 0)) {
  5238  003224  0100               	movlb	0	; () banked
  5239  003226  A1F4               	btfss	_flags& (0+255),0,b
  5240  003228  EF18  F019         	goto	u3841
  5241  00322C  EF1A  F019         	goto	u3840
  5242  003230                     u3841:
  5243  003230  EF24  F019         	goto	l3560
  5244  003234                     u3840:
  5245  003234                     
  5246                           ; BSR set to: 0
  5247                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs((con
      +                          st char *)buf, fp);
  5248  003234  C013  F00A         	movff	pad@buf,fputs@s
  5249  003238  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5250  00323C  C011  F00C         	movff	pad@fp,fputs@fp
  5251  003240  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5252  003244  ECB1  F01C         	call	_fputs	;wreg free
  5253  003248                     l3560:
  5254                           
  5255                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ? 
      +                          0 : p;
  5256  003248  BE16               	btfsc	(pad@p+1)^0,7,c
  5257  00324A  EF29  F019         	goto	u3851
  5258  00324E  EF2B  F019         	goto	u3850
  5259  003252                     u3851:
  5260  003252  EF31  F019         	goto	l3564
  5261  003256                     u3850:
  5262  003256  C015  F01A         	movff	pad@p,pad@w
  5263  00325A  C016  F01B         	movff	pad@p+1,pad@w+1
  5264  00325E  EF35  F019         	goto	l901
  5265  003262                     l3564:
  5266  003262  0E00               	movlw	0
  5267  003264  6E1B               	movwf	(pad@w+1)^0,c
  5268  003266  0E00               	movlw	0
  5269  003268  6E1A               	movwf	pad@w^0,c
  5270  00326A                     l901:
  5271                           
  5272                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5273  00326A  0E00               	movlw	0
  5274  00326C  6E19               	movwf	(pad@i+1)^0,c
  5275  00326E  0E00               	movlw	0
  5276  003270  6E18               	movwf	pad@i^0,c
  5277                           
  5278                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  5279  003272  EF47  F019         	goto	l3570
  5280  003276                     l3566:
  5281                           
  5282                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc(' ',
      +                           fp);
  5283  003276  0E00               	movlw	0
  5284  003278  6E02               	movwf	(fputc@c+1)^0,c
  5285  00327A  0E20               	movlw	32
  5286  00327C  6E01               	movwf	fputc@c^0,c
  5287  00327E  C011  F003         	movff	pad@fp,fputc@fp
  5288  003282  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5289  003286  ECAD  F018         	call	_fputc	;wreg free
  5290  00328A                     
  5291                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5292  00328A  4A18               	infsnz	pad@i^0,f,c
  5293  00328C  2A19               	incf	(pad@i+1)^0,f,c
  5294  00328E                     l3570:
  5295                           
  5296                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  5297  00328E  501A               	movf	pad@w^0,w,c
  5298  003290  5C18               	subwf	pad@i^0,w,c
  5299  003292  5019               	movf	(pad@i+1)^0,w,c
  5300  003294  0A80               	xorlw	128
  5301  003296  6E17               	movwf	??_pad^0,c
  5302  003298  501B               	movf	(pad@w+1)^0,w,c
  5303  00329A  0A80               	xorlw	128
  5304  00329C  5817               	subwfb	??_pad^0,w,c
  5305  00329E  A0D8               	btfss	status,0,c
  5306  0032A0  EF54  F019         	goto	u3861
  5307  0032A4  EF56  F019         	goto	u3860
  5308  0032A8                     u3861:
  5309  0032A8  EF3B  F019         	goto	l3566
  5310  0032AC                     u3860:
  5311  0032AC                     
  5312                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(flags & 
      +                          (1 << 0))) {
  5313  0032AC  0100               	movlb	0	; () banked
  5314  0032AE  B1F4               	btfsc	_flags& (0+255),0,b
  5315  0032B0  EF5C  F019         	goto	u3871
  5316  0032B4  EF5E  F019         	goto	u3870
  5317  0032B8                     u3871:
  5318  0032B8  EF68  F019         	goto	l3574
  5319  0032BC                     u3870:
  5320  0032BC                     
  5321                           ; BSR set to: 0
  5322                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs((con
      +                          st char *)buf, fp);
  5323  0032BC  C013  F00A         	movff	pad@buf,fputs@s
  5324  0032C0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5325  0032C4  C011  F00C         	movff	pad@fp,fputs@fp
  5326  0032C8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5327  0032CC  ECB1  F01C         	call	_fputs	;wreg free
  5328  0032D0                     l3574:
  5329                           
  5330                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return strlen(
      +                          buf) + w;
  5331  0032D0  C013  F001         	movff	pad@buf,strlen@s
  5332  0032D4  C014  F002         	movff	pad@buf+1,strlen@s+1
  5333  0032D8  EC27  F01D         	call	_strlen	;wreg free
  5334  0032DC  501A               	movf	pad@w^0,w,c
  5335  0032DE  2401               	addwf	?_strlen^0,w,c
  5336  0032E0  6E11               	movwf	?_pad^0,c
  5337  0032E2  501B               	movf	(pad@w+1)^0,w,c
  5338  0032E4  2002               	addwfc	(?_strlen+1)^0,w,c
  5339  0032E6  6E12               	movwf	(?_pad+1)^0,c
  5340  0032E8  0012               	return		;funcret
  5341  0032EA                     __end_of_pad:
  5342                           	callstack 0
  5343                           
  5344 ;; *************** function _strlen *****************
  5345 ;; Defined at:
  5346 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strlen.c"
  5347 ;; Parameters:    Size  Location     Type
  5348 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5349 ;;		 -> dbuf(80), 
  5350 ;; Auto vars:     Size  Location     Type
  5351 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5352 ;;		 -> dbuf(80), 
  5353 ;; Return value:  Size  Location     Type
  5354 ;;                  2    0[COMRAM] unsigned int 
  5355 ;; Registers used:
  5356 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5357 ;; Tracked objects:
  5358 ;;		On entry : 0/0
  5359 ;;		On exit  : 0/0
  5360 ;;		Unchanged: 0/0
  5361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5362 ;;      Params:         2       0       0       0       0       0       0
  5363 ;;      Locals:         2       0       0       0       0       0       0
  5364 ;;      Temps:          0       0       0       0       0       0       0
  5365 ;;      Totals:         4       0       0       0       0       0       0
  5366 ;;Total ram usage:        4 bytes
  5367 ;; Hardware stack levels used:    1
  5368 ;; This function calls:
  5369 ;;		Nothing
  5370 ;; This function is called by:
  5371 ;;		_pad
  5372 ;; This function uses a non-reentrant model
  5373 ;;
  5374                           
  5375                           	psect	text14
  5376  003A4E                     __ptext14:
  5377                           	callstack 0
  5378  003A4E                     _strlen:
  5379                           	callstack 24
  5380  003A4E  C001  F003         	movff	strlen@s,strlen@a
  5381  003A52  C002  F004         	movff	strlen@s+1,strlen@a+1
  5382  003A56  EF2F  F01D         	goto	l3096
  5383  003A5A                     l3094:
  5384  003A5A  4A01               	infsnz	strlen@s^0,f,c
  5385  003A5C  2A02               	incf	(strlen@s+1)^0,f,c
  5386  003A5E                     l3096:
  5387  003A5E  C001  FFD9         	movff	strlen@s,fsr2l
  5388  003A62  C002  FFDA         	movff	strlen@s+1,fsr2h
  5389  003A66  50DF               	movf	indf2,w,c
  5390  003A68  A4D8               	btfss	status,2,c
  5391  003A6A  EF39  F01D         	goto	u3111
  5392  003A6E  EF3B  F01D         	goto	u3110
  5393  003A72                     u3111:
  5394  003A72  EF2D  F01D         	goto	l3094
  5395  003A76                     u3110:
  5396  003A76  5003               	movf	strlen@a^0,w,c
  5397  003A78  5C01               	subwf	strlen@s^0,w,c
  5398  003A7A  6E01               	movwf	?_strlen^0,c
  5399  003A7C  5004               	movf	(strlen@a+1)^0,w,c
  5400  003A7E  5802               	subwfb	(strlen@s+1)^0,w,c
  5401  003A80  6E02               	movwf	(?_strlen+1)^0,c
  5402  003A82  0012               	return		;funcret
  5403  003A84                     __end_of_strlen:
  5404                           	callstack 0
  5405                           
  5406 ;; *************** function _fputs *****************
  5407 ;; Defined at:
  5408 ;;		line 8 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5411 ;;		 -> dbuf(80), 
  5412 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5413 ;;		 -> sprintf@f(6), 
  5414 ;; Auto vars:     Size  Location     Type
  5415 ;;  i               2   14[COMRAM] int 
  5416 ;;  c               1   13[COMRAM] unsigned char 
  5417 ;; Return value:  Size  Location     Type
  5418 ;;                  2    9[COMRAM] int 
  5419 ;; Registers used:
  5420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5421 ;; Tracked objects:
  5422 ;;		On entry : 0/0
  5423 ;;		On exit  : 0/0
  5424 ;;		Unchanged: 0/0
  5425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5426 ;;      Params:         4       0       0       0       0       0       0
  5427 ;;      Locals:         3       0       0       0       0       0       0
  5428 ;;      Temps:          0       0       0       0       0       0       0
  5429 ;;      Totals:         7       0       0       0       0       0       0
  5430 ;;Total ram usage:        7 bytes
  5431 ;; Hardware stack levels used:    1
  5432 ;; Hardware stack levels required when called:    2
  5433 ;; This function calls:
  5434 ;;		_fputc
  5435 ;; This function is called by:
  5436 ;;		_pad
  5437 ;; This function uses a non-reentrant model
  5438 ;;
  5439                           
  5440                           	psect	text15
  5441  003962                     __ptext15:
  5442                           	callstack 0
  5443  003962                     _fputs:
  5444                           	callstack 22
  5445  003962  0E00               	movlw	0
  5446  003964  6E10               	movwf	(fputs@i+1)^0,c
  5447  003966  0E00               	movlw	0
  5448  003968  6E0F               	movwf	fputs@i^0,c
  5449  00396A  EFC2  F01C         	goto	l3090
  5450  00396E                     l3086:
  5451  00396E  C00E  F001         	movff	fputs@c,fputc@c
  5452  003972  6A02               	clrf	(fputc@c+1)^0,c
  5453  003974  C00C  F003         	movff	fputs@fp,fputc@fp
  5454  003978  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5455  00397C  ECAD  F018         	call	_fputc	;wreg free
  5456  003980  4A0F               	infsnz	fputs@i^0,f,c
  5457  003982  2A10               	incf	(fputs@i+1)^0,f,c
  5458  003984                     l3090:
  5459  003984  500F               	movf	fputs@i^0,w,c
  5460  003986  240A               	addwf	fputs@s^0,w,c
  5461  003988  6ED9               	movwf	fsr2l,c
  5462  00398A  5010               	movf	(fputs@i+1)^0,w,c
  5463  00398C  200B               	addwfc	(fputs@s+1)^0,w,c
  5464  00398E  6EDA               	movwf	fsr2h,c
  5465  003990  50DF               	movf	indf2,w,c
  5466  003992  6E0E               	movwf	fputs@c^0,c
  5467  003994  500E               	movf	fputs@c^0,w,c
  5468  003996  A4D8               	btfss	status,2,c
  5469  003998  EFD0  F01C         	goto	u3101
  5470  00399C  EFD2  F01C         	goto	u3100
  5471  0039A0                     u3101:
  5472  0039A0  EFB7  F01C         	goto	l3086
  5473  0039A4                     u3100:
  5474  0039A4  0012               	return		;funcret
  5475  0039A6                     __end_of_fputs:
  5476                           	callstack 0
  5477                           
  5478 ;; *************** function _fputc *****************
  5479 ;; Defined at:
  5480 ;;		line 8 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;  c               2    0[COMRAM] int 
  5483 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5484 ;;		 -> sprintf@f(6), 
  5485 ;; Auto vars:     Size  Location     Type
  5486 ;;		None
  5487 ;; Return value:  Size  Location     Type
  5488 ;;                  2    0[COMRAM] int 
  5489 ;; Registers used:
  5490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5491 ;; Tracked objects:
  5492 ;;		On entry : 0/0
  5493 ;;		On exit  : 0/0
  5494 ;;		Unchanged: 0/0
  5495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5496 ;;      Params:         4       0       0       0       0       0       0
  5497 ;;      Locals:         0       0       0       0       0       0       0
  5498 ;;      Temps:          5       0       0       0       0       0       0
  5499 ;;      Totals:         9       0       0       0       0       0       0
  5500 ;;Total ram usage:        9 bytes
  5501 ;; Hardware stack levels used:    1
  5502 ;; Hardware stack levels required when called:    1
  5503 ;; This function calls:
  5504 ;;		_putch
  5505 ;; This function is called by:
  5506 ;;		_pad
  5507 ;;		_vfpfcnvrt
  5508 ;;		_fputs
  5509 ;; This function uses a non-reentrant model
  5510 ;;
  5511                           
  5512                           	psect	text16
  5513  00315A                     __ptext16:
  5514                           	callstack 0
  5515  00315A                     _fputc:
  5516                           	callstack 25
  5517  00315A  5003               	movf	fputc@fp^0,w,c
  5518  00315C  1004               	iorwf	(fputc@fp+1)^0,w,c
  5519  00315E  B4D8               	btfsc	status,2,c
  5520  003160  EFB4  F018         	goto	u2671
  5521  003164  EFB6  F018         	goto	u2670
  5522  003168                     u2671:
  5523  003168  EFBF  F018         	goto	l2872
  5524  00316C                     u2670:
  5525  00316C  5003               	movf	fputc@fp^0,w,c
  5526  00316E  1004               	iorwf	(fputc@fp+1)^0,w,c
  5527  003170  A4D8               	btfss	status,2,c
  5528  003172  EFBD  F018         	goto	u2681
  5529  003176  EFBF  F018         	goto	u2680
  5530  00317A                     u2681:
  5531  00317A  EFC4  F018         	goto	l2874
  5532  00317E                     u2680:
  5533  00317E                     l2872:
  5534  00317E  5001               	movf	fputc@c^0,w,c
  5535  003180  EC9C  F01D         	call	_putch
  5536  003184  EF11  F019         	goto	l1115
  5537  003188                     l2874:
  5538  003188  EE20 F004          	lfsr	2,4
  5539  00318C  5003               	movf	fputc@fp^0,w,c
  5540  00318E  26D9               	addwf	fsr2l,f,c
  5541  003190  5004               	movf	(fputc@fp+1)^0,w,c
  5542  003192  22DA               	addwfc	fsr2h,f,c
  5543  003194  50DE               	movf	postinc2,w,c
  5544  003196  10DE               	iorwf	postinc2,w,c
  5545  003198  B4D8               	btfsc	status,2,c
  5546  00319A  EFD1  F018         	goto	u2691
  5547  00319E  EFD3  F018         	goto	u2690
  5548  0031A2                     u2691:
  5549  0031A2  EFEE  F018         	goto	l2878
  5550  0031A6                     u2690:
  5551  0031A6  EE20 F004          	lfsr	2,4
  5552  0031AA  5003               	movf	fputc@fp^0,w,c
  5553  0031AC  26D9               	addwf	fsr2l,f,c
  5554  0031AE  5004               	movf	(fputc@fp+1)^0,w,c
  5555  0031B0  22DA               	addwfc	fsr2h,f,c
  5556  0031B2  EE10 F002          	lfsr	1,2
  5557  0031B6  5003               	movf	fputc@fp^0,w,c
  5558  0031B8  26E1               	addwf	fsr1l,f,c
  5559  0031BA  5004               	movf	(fputc@fp+1)^0,w,c
  5560  0031BC  22E2               	addwfc	fsr1h,f,c
  5561  0031BE  50DE               	movf	postinc2,w,c
  5562  0031C0  5CE6               	subwf	postinc1,w,c
  5563  0031C2  50E6               	movf	postinc1,w,c
  5564  0031C4  0A80               	xorlw	128
  5565  0031C6  6E09               	movwf	(??_fputc+4)^0,c
  5566  0031C8  50DE               	movf	postinc2,w,c
  5567  0031CA  0A80               	xorlw	128
  5568  0031CC  5809               	subwfb	(??_fputc+4)^0,w,c
  5569  0031CE  B0D8               	btfsc	status,0,c
  5570  0031D0  EFEC  F018         	goto	u2701
  5571  0031D4  EFEE  F018         	goto	u2700
  5572  0031D8                     u2701:
  5573  0031D8  EF11  F019         	goto	l1115
  5574  0031DC                     u2700:
  5575  0031DC                     l2878:
  5576  0031DC  EE20 F002          	lfsr	2,2
  5577  0031E0  5003               	movf	fputc@fp^0,w,c
  5578  0031E2  26D9               	addwf	fsr2l,f,c
  5579  0031E4  5004               	movf	(fputc@fp+1)^0,w,c
  5580  0031E6  22DA               	addwfc	fsr2h,f,c
  5581  0031E8  CFDE F005          	movff	postinc2,??_fputc
  5582  0031EC  CFDD F006          	movff	postdec2,??_fputc+1
  5583  0031F0  C003  FFD9         	movff	fputc@fp,fsr2l
  5584  0031F4  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5585  0031F8  CFDE F007          	movff	postinc2,??_fputc+2
  5586  0031FC  CFDD F008          	movff	postdec2,??_fputc+3
  5587  003200  5005               	movf	??_fputc^0,w,c
  5588  003202  2407               	addwf	(??_fputc+2)^0,w,c
  5589  003204  6ED9               	movwf	fsr2l,c
  5590  003206  5006               	movf	(??_fputc+1)^0,w,c
  5591  003208  2008               	addwfc	(??_fputc+3)^0,w,c
  5592  00320A  6EDA               	movwf	fsr2h,c
  5593  00320C  C001  FFDF         	movff	fputc@c,indf2
  5594  003210  EE20 F002          	lfsr	2,2
  5595  003214  5003               	movf	fputc@fp^0,w,c
  5596  003216  26D9               	addwf	fsr2l,f,c
  5597  003218  5004               	movf	(fputc@fp+1)^0,w,c
  5598  00321A  22DA               	addwfc	fsr2h,f,c
  5599  00321C  2ADE               	incf	postinc2,f,c
  5600  00321E  0E00               	movlw	0
  5601  003220  22DD               	addwfc	postdec2,f,c
  5602  003222                     l1115:
  5603  003222  0012               	return		;funcret
  5604  003224                     __end_of_fputc:
  5605                           	callstack 0
  5606                           
  5607 ;; *************** function _putch *****************
  5608 ;; Defined at:
  5609 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\putch.c"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;  c               1    wreg     unsigned char 
  5612 ;; Auto vars:     Size  Location     Type
  5613 ;;  c               1    0[COMRAM] unsigned char 
  5614 ;; Return value:  Size  Location     Type
  5615 ;;                  1    wreg      void 
  5616 ;; Registers used:
  5617 ;;		wreg
  5618 ;; Tracked objects:
  5619 ;;		On entry : 0/0
  5620 ;;		On exit  : 0/0
  5621 ;;		Unchanged: 0/0
  5622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5623 ;;      Params:         0       0       0       0       0       0       0
  5624 ;;      Locals:         0       0       0       0       0       0       0
  5625 ;;      Temps:          0       0       0       0       0       0       0
  5626 ;;      Totals:         0       0       0       0       0       0       0
  5627 ;;Total ram usage:        0 bytes
  5628 ;; Hardware stack levels used:    1
  5629 ;; This function calls:
  5630 ;;		Nothing
  5631 ;; This function is called by:
  5632 ;;		_fputc
  5633 ;; This function uses a non-reentrant model
  5634 ;;
  5635                           
  5636                           	psect	text17
  5637  003B38                     __ptext17:
  5638                           	callstack 0
  5639  003B38                     _putch:
  5640                           	callstack 25
  5641  003B38  0012               	return		;funcret
  5642  003B3A                     __end_of_putch:
  5643                           	callstack 0
  5644                           
  5645 ;; *************** function _floorf *****************
  5646 ;; Defined at:
  5647 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\floorf.c"
  5648 ;; Parameters:    Size  Location     Type
  5649 ;;  x               4   25[COMRAM] float 
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;  u               4   41[COMRAM] struct .
  5652 ;;  m               4   35[COMRAM] unsigned long 
  5653 ;;  e               2   39[COMRAM] int 
  5654 ;; Return value:  Size  Location     Type
  5655 ;;                  4   25[COMRAM] float 
  5656 ;; Registers used:
  5657 ;;		wreg, status,2, status,0
  5658 ;; Tracked objects:
  5659 ;;		On entry : 0/0
  5660 ;;		On exit  : 0/0
  5661 ;;		Unchanged: 0/0
  5662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5663 ;;      Params:         4       0       0       0       0       0       0
  5664 ;;      Locals:        10       0       0       0       0       0       0
  5665 ;;      Temps:          6       0       0       0       0       0       0
  5666 ;;      Totals:        20       0       0       0       0       0       0
  5667 ;;Total ram usage:       20 bytes
  5668 ;; Hardware stack levels used:    1
  5669 ;; This function calls:
  5670 ;;		Nothing
  5671 ;; This function is called by:
  5672 ;;		_efgtoa
  5673 ;; This function uses a non-reentrant model
  5674 ;;
  5675                           
  5676                           	psect	text18
  5677  002830                     __ptext18:
  5678                           	callstack 0
  5679  002830                     _floorf:
  5680                           	callstack 25
  5681  002830  C0E6  F02A         	movff	floorf@F524,floorf@u
  5682  002834  C0E7  F02B         	movff	floorf@F524+1,floorf@u+1
  5683  002838  C0E8  F02C         	movff	floorf@F524+2,floorf@u+2
  5684  00283C  C0E9  F02D         	movff	floorf@F524+3,floorf@u+3
  5685  002840  C01A  F02A         	movff	floorf@x,floorf@u
  5686  002844  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  5687  002848  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  5688  00284C  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  5689  002850  0E81               	movlw	129
  5690  002852  6E1E               	movwf	??_floorf^0,c
  5691  002854  0EFF               	movlw	255
  5692  002856  6E1F               	movwf	(??_floorf+1)^0,c
  5693  002858  C02A  F020         	movff	floorf@u,??_floorf+2
  5694  00285C  C02B  F021         	movff	floorf@u+1,??_floorf+3
  5695  002860  C02C  F022         	movff	floorf@u+2,??_floorf+4
  5696  002864  C02D  F023         	movff	floorf@u+3,??_floorf+5
  5697  002868  0E18               	movlw	24
  5698  00286A  EF3C  F014         	goto	u4000
  5699  00286E                     u4005:
  5700  00286E  90D8               	bcf	status,0,c
  5701  002870  3223               	rrcf	(??_floorf+5)^0,f,c
  5702  002872  3222               	rrcf	(??_floorf+4)^0,f,c
  5703  002874  3221               	rrcf	(??_floorf+3)^0,f,c
  5704  002876  3220               	rrcf	(??_floorf+2)^0,f,c
  5705  002878                     u4000:
  5706  002878  2EE8               	decfsz	wreg,f,c
  5707  00287A  EF37  F014         	goto	u4005
  5708  00287E  5020               	movf	(??_floorf+2)^0,w,c
  5709  002880  241E               	addwf	??_floorf^0,w,c
  5710  002882  6E28               	movwf	floorf@e^0,c
  5711  002884  0E00               	movlw	0
  5712  002886  201F               	addwfc	(??_floorf+1)^0,w,c
  5713  002888  6E29               	movwf	(floorf@e+1)^0,c
  5714  00288A  BE29               	btfsc	(floorf@e+1)^0,7,c
  5715  00288C  EF51  F014         	goto	u4011
  5716  002890  5029               	movf	(floorf@e+1)^0,w,c
  5717  002892  E109               	bnz	u4010
  5718  002894  0E17               	movlw	23
  5719  002896  5C28               	subwf	floorf@e^0,w,c
  5720  002898  A0D8               	btfss	status,0,c
  5721  00289A  EF51  F014         	goto	u4011
  5722  00289E  EF53  F014         	goto	u4010
  5723  0028A2                     u4011:
  5724  0028A2  EF5D  F014         	goto	l3620
  5725  0028A6                     u4010:
  5726  0028A6                     l3618:
  5727  0028A6  C01A  F01A         	movff	floorf@x,?_floorf
  5728  0028AA  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  5729  0028AE  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  5730  0028B2  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  5731  0028B6  EF20  F015         	goto	l1076
  5732  0028BA                     l3620:
  5733  0028BA  BE29               	btfsc	(floorf@e+1)^0,7,c
  5734  0028BC  EF62  F014         	goto	u4021
  5735  0028C0  EF64  F014         	goto	u4020
  5736  0028C4                     u4021:
  5737  0028C4  EFD4  F014         	goto	l3630
  5738  0028C8                     u4020:
  5739  0028C8  C028  F01E         	movff	floorf@e,??_floorf
  5740  0028CC  0EFF               	movlw	255
  5741  0028CE  6E1F               	movwf	(??_floorf+1)^0,c
  5742  0028D0  0EFF               	movlw	255
  5743  0028D2  6E20               	movwf	(??_floorf+2)^0,c
  5744  0028D4  0E7F               	movlw	127
  5745  0028D6  6E21               	movwf	(??_floorf+3)^0,c
  5746  0028D8  0E00               	movlw	0
  5747  0028DA  6E22               	movwf	(??_floorf+4)^0,c
  5748  0028DC                     u4035:
  5749  0028DC  661E               	tstfsz	??_floorf^0,c
  5750  0028DE  EF73  F014         	goto	u4036
  5751  0028E2  EF7B  F014         	goto	u4037
  5752  0028E6                     u4036:
  5753  0028E6  3422               	rlcf	(??_floorf+4)^0,w,c
  5754  0028E8  3222               	rrcf	(??_floorf+4)^0,f,c
  5755  0028EA  3221               	rrcf	(??_floorf+3)^0,f,c
  5756  0028EC  3220               	rrcf	(??_floorf+2)^0,f,c
  5757  0028EE  321F               	rrcf	(??_floorf+1)^0,f,c
  5758  0028F0  2E1E               	decfsz	??_floorf^0,f,c
  5759  0028F2  EF6E  F014         	goto	u4035
  5760  0028F6                     u4037:
  5761  0028F6  C01F  F024         	movff	??_floorf+1,floorf@m
  5762  0028FA  C020  F025         	movff	??_floorf+2,floorf@m+1
  5763  0028FE  C021  F026         	movff	??_floorf+3,floorf@m+2
  5764  002902  C022  F027         	movff	??_floorf+4,floorf@m+3
  5765  002906  5024               	movf	floorf@m^0,w,c
  5766  002908  142A               	andwf	floorf@u^0,w,c
  5767  00290A  6E1E               	movwf	??_floorf^0,c
  5768  00290C  5025               	movf	(floorf@m+1)^0,w,c
  5769  00290E  142B               	andwf	(floorf@u+1)^0,w,c
  5770  002910  6E1F               	movwf	(??_floorf+1)^0,c
  5771  002912  5026               	movf	(floorf@m+2)^0,w,c
  5772  002914  142C               	andwf	(floorf@u+2)^0,w,c
  5773  002916  6E20               	movwf	(??_floorf+2)^0,c
  5774  002918  5027               	movf	(floorf@m+3)^0,w,c
  5775  00291A  142D               	andwf	(floorf@u+3)^0,w,c
  5776  00291C  6E21               	movwf	(??_floorf+3)^0,c
  5777  00291E  501E               	movf	??_floorf^0,w,c
  5778  002920  101F               	iorwf	(??_floorf+1)^0,w,c
  5779  002922  1020               	iorwf	(??_floorf+2)^0,w,c
  5780  002924  1021               	iorwf	(??_floorf+3)^0,w,c
  5781  002926  A4D8               	btfss	status,2,c
  5782  002928  EF98  F014         	goto	u4041
  5783  00292C  EF9A  F014         	goto	u4040
  5784  002930                     u4041:
  5785  002930  EF9C  F014         	goto	l3626
  5786  002934                     u4040:
  5787  002934  EF53  F014         	goto	l3618
  5788  002938                     l3626:
  5789  002938  C02A  F01E         	movff	floorf@u,??_floorf
  5790  00293C  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5791  002940  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5792  002944  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5793  002948  0E20               	movlw	32
  5794  00294A  EFAC  F014         	goto	u4050
  5795  00294E                     u4055:
  5796  00294E  90D8               	bcf	status,0,c
  5797  002950  3221               	rrcf	(??_floorf+3)^0,f,c
  5798  002952  3220               	rrcf	(??_floorf+2)^0,f,c
  5799  002954  321F               	rrcf	(??_floorf+1)^0,f,c
  5800  002956  321E               	rrcf	??_floorf^0,f,c
  5801  002958                     u4050:
  5802  002958  2EE8               	decfsz	wreg,f,c
  5803  00295A  EFA7  F014         	goto	u4055
  5804  00295E  501E               	movf	??_floorf^0,w,c
  5805  002960  101F               	iorwf	(??_floorf+1)^0,w,c
  5806  002962  1020               	iorwf	(??_floorf+2)^0,w,c
  5807  002964  1021               	iorwf	(??_floorf+3)^0,w,c
  5808  002966  B4D8               	btfsc	status,2,c
  5809  002968  EFB8  F014         	goto	u4061
  5810  00296C  EFBA  F014         	goto	u4060
  5811  002970                     u4061:
  5812  002970  EFC2  F014         	goto	l1079
  5813  002974                     u4060:
  5814  002974  5024               	movf	floorf@m^0,w,c
  5815  002976  262A               	addwf	floorf@u^0,f,c
  5816  002978  5025               	movf	(floorf@m+1)^0,w,c
  5817  00297A  222B               	addwfc	(floorf@u+1)^0,f,c
  5818  00297C  5026               	movf	(floorf@m+2)^0,w,c
  5819  00297E  222C               	addwfc	(floorf@u+2)^0,f,c
  5820  002980  5027               	movf	(floorf@m+3)^0,w,c
  5821  002982  222D               	addwfc	(floorf@u+3)^0,f,c
  5822  002984                     l1079:
  5823  002984  1C24               	comf	floorf@m^0,w,c
  5824  002986  6E1E               	movwf	??_floorf^0,c
  5825  002988  1C25               	comf	(floorf@m+1)^0,w,c
  5826  00298A  6E1F               	movwf	(??_floorf+1)^0,c
  5827  00298C  1C26               	comf	(floorf@m+2)^0,w,c
  5828  00298E  6E20               	movwf	(??_floorf+2)^0,c
  5829  002990  1C27               	comf	(floorf@m+3)^0,w,c
  5830  002992  6E21               	movwf	(??_floorf+3)^0,c
  5831  002994  501E               	movf	??_floorf^0,w,c
  5832  002996  162A               	andwf	floorf@u^0,f,c
  5833  002998  501F               	movf	(??_floorf+1)^0,w,c
  5834  00299A  162B               	andwf	(floorf@u+1)^0,f,c
  5835  00299C  5020               	movf	(??_floorf+2)^0,w,c
  5836  00299E  162C               	andwf	(floorf@u+2)^0,f,c
  5837  0029A0  5021               	movf	(??_floorf+3)^0,w,c
  5838  0029A2  162D               	andwf	(floorf@u+3)^0,f,c
  5839  0029A4  EF18  F015         	goto	l3638
  5840  0029A8                     l3630:
  5841  0029A8  C02A  F01E         	movff	floorf@u,??_floorf
  5842  0029AC  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5843  0029B0  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5844  0029B4  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5845  0029B8  0E20               	movlw	32
  5846  0029BA  EFE4  F014         	goto	u4070
  5847  0029BE                     u4075:
  5848  0029BE  90D8               	bcf	status,0,c
  5849  0029C0  3221               	rrcf	(??_floorf+3)^0,f,c
  5850  0029C2  3220               	rrcf	(??_floorf+2)^0,f,c
  5851  0029C4  321F               	rrcf	(??_floorf+1)^0,f,c
  5852  0029C6  321E               	rrcf	??_floorf^0,f,c
  5853  0029C8                     u4070:
  5854  0029C8  2EE8               	decfsz	wreg,f,c
  5855  0029CA  EFDF  F014         	goto	u4075
  5856  0029CE  501E               	movf	??_floorf^0,w,c
  5857  0029D0  101F               	iorwf	(??_floorf+1)^0,w,c
  5858  0029D2  1020               	iorwf	(??_floorf+2)^0,w,c
  5859  0029D4  1021               	iorwf	(??_floorf+3)^0,w,c
  5860  0029D6  A4D8               	btfss	status,2,c
  5861  0029D8  EFF0  F014         	goto	u4081
  5862  0029DC  EFF2  F014         	goto	u4080
  5863  0029E0                     u4081:
  5864  0029E0  EFFC  F014         	goto	l3634
  5865  0029E4                     u4080:
  5866  0029E4  0E00               	movlw	0
  5867  0029E6  6E2A               	movwf	floorf@u^0,c
  5868  0029E8  0E00               	movlw	0
  5869  0029EA  6E2B               	movwf	(floorf@u+1)^0,c
  5870  0029EC  0E00               	movlw	0
  5871  0029EE  6E2C               	movwf	(floorf@u+2)^0,c
  5872  0029F0  0E00               	movlw	0
  5873  0029F2  6E2D               	movwf	(floorf@u+3)^0,c
  5874  0029F4  EF18  F015         	goto	l3638
  5875  0029F8                     l3634:
  5876  0029F8  90D8               	bcf	status,0,c
  5877  0029FA  342A               	rlcf	floorf@u^0,w,c
  5878  0029FC  6E1E               	movwf	??_floorf^0,c
  5879  0029FE  342B               	rlcf	(floorf@u+1)^0,w,c
  5880  002A00  6E1F               	movwf	(??_floorf+1)^0,c
  5881  002A02  342C               	rlcf	(floorf@u+2)^0,w,c
  5882  002A04  6E20               	movwf	(??_floorf+2)^0,c
  5883  002A06  342D               	rlcf	(floorf@u+3)^0,w,c
  5884  002A08  6E21               	movwf	(??_floorf+3)^0,c
  5885  002A0A  501E               	movf	??_floorf^0,w,c
  5886  002A0C  101F               	iorwf	(??_floorf+1)^0,w,c
  5887  002A0E  1020               	iorwf	(??_floorf+2)^0,w,c
  5888  002A10  1021               	iorwf	(??_floorf+3)^0,w,c
  5889  002A12  B4D8               	btfsc	status,2,c
  5890  002A14  EF0E  F015         	goto	u4091
  5891  002A18  EF10  F015         	goto	u4090
  5892  002A1C                     u4091:
  5893  002A1C  EF18  F015         	goto	l3638
  5894  002A20                     u4090:
  5895  002A20  0E00               	movlw	0
  5896  002A22  6E2A               	movwf	floorf@u^0,c
  5897  002A24  0E00               	movlw	0
  5898  002A26  6E2B               	movwf	(floorf@u+1)^0,c
  5899  002A28  0E80               	movlw	128
  5900  002A2A  6E2C               	movwf	(floorf@u+2)^0,c
  5901  002A2C  0EBF               	movlw	191
  5902  002A2E  6E2D               	movwf	(floorf@u+3)^0,c
  5903  002A30                     l3638:
  5904  002A30  C02A  F01A         	movff	floorf@u,?_floorf
  5905  002A34  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  5906  002A38  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  5907  002A3C  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  5908  002A40                     l1076:
  5909  002A40  0012               	return		;funcret
  5910  002A42                     __end_of_floorf:
  5911                           	callstack 0
  5912                           
  5913 ;; *************** function ___fpclassifyf *****************
  5914 ;; Defined at:
  5915 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;  x               4    0[COMRAM] float 
  5918 ;; Auto vars:     Size  Location     Type
  5919 ;;  u               4   10[COMRAM] struct .
  5920 ;;  e               2    8[COMRAM] int 
  5921 ;; Return value:  Size  Location     Type
  5922 ;;                  2    0[COMRAM] int 
  5923 ;; Registers used:
  5924 ;;		wreg, status,2, status,0
  5925 ;; Tracked objects:
  5926 ;;		On entry : 0/0
  5927 ;;		On exit  : 0/0
  5928 ;;		Unchanged: 0/0
  5929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5930 ;;      Params:         4       0       0       0       0       0       0
  5931 ;;      Locals:         6       0       0       0       0       0       0
  5932 ;;      Temps:          4       0       0       0       0       0       0
  5933 ;;      Totals:        14       0       0       0       0       0       0
  5934 ;;Total ram usage:       14 bytes
  5935 ;; Hardware stack levels used:    1
  5936 ;; This function calls:
  5937 ;;		Nothing
  5938 ;; This function is called by:
  5939 ;;		_efgtoa
  5940 ;; This function uses a non-reentrant model
  5941 ;;
  5942                           
  5943                           	psect	text19
  5944  002F86                     __ptext19:
  5945                           	callstack 0
  5946  002F86                     ___fpclassifyf:
  5947                           	callstack 25
  5948  002F86  C0EA  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5949  002F8A  C0EB  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5950  002F8E  C0EC  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5951  002F92  C0ED  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5952  002F96  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5953  002F9A  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5954  002F9E  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5955  002FA2  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5956  002FA6  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5957  002FAA  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5958  002FAE  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5959  002FB2  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5960  002FB6  0E18               	movlw	24
  5961  002FB8  EFE3  F017         	goto	u3880
  5962  002FBC                     u3885:
  5963  002FBC  90D8               	bcf	status,0,c
  5964  002FBE  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5965  002FC0  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5966  002FC2  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5967  002FC4  3205               	rrcf	??___fpclassifyf^0,f,c
  5968  002FC6                     u3880:
  5969  002FC6  2EE8               	decfsz	wreg,f,c
  5970  002FC8  EFDE  F017         	goto	u3885
  5971  002FCC  5005               	movf	??___fpclassifyf^0,w,c
  5972  002FCE  6E09               	movwf	___fpclassifyf@e^0,c
  5973  002FD0  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5974  002FD2  5009               	movf	___fpclassifyf@e^0,w,c
  5975  002FD4  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5976  002FD6  A4D8               	btfss	status,2,c
  5977  002FD8  EFF0  F017         	goto	u3891
  5978  002FDC  EFF2  F017         	goto	u3890
  5979  002FE0                     u3891:
  5980  002FE0  EF12  F018         	goto	l3590
  5981  002FE4                     u3890:
  5982  002FE4  90D8               	bcf	status,0,c
  5983  002FE6  340B               	rlcf	___fpclassifyf@u^0,w,c
  5984  002FE8  6E05               	movwf	??___fpclassifyf^0,c
  5985  002FEA  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5986  002FEC  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5987  002FEE  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5988  002FF0  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5989  002FF2  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5990  002FF4  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5991  002FF6  5005               	movf	??___fpclassifyf^0,w,c
  5992  002FF8  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5993  002FFA  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5994  002FFC  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5995  002FFE  A4D8               	btfss	status,2,c
  5996  003000  EF04  F018         	goto	u3901
  5997  003004  EF06  F018         	goto	u3900
  5998  003008                     u3901:
  5999  003008  EF0C  F018         	goto	l3586
  6000  00300C                     u3900:
  6001  00300C  0E00               	movlw	0
  6002  00300E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6003  003010  0E02               	movlw	2
  6004  003012  6E01               	movwf	?___fpclassifyf^0,c
  6005  003014  EF41  F018         	goto	l1038
  6006  003018                     l3586:
  6007  003018  0E00               	movlw	0
  6008  00301A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6009  00301C  0E03               	movlw	3
  6010  00301E  6E01               	movwf	?___fpclassifyf^0,c
  6011  003020  EF41  F018         	goto	l1038
  6012  003024                     l3590:
  6013  003024  2809               	incf	___fpclassifyf@e^0,w,c
  6014  003026  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6015  003028  A4D8               	btfss	status,2,c
  6016  00302A  EF19  F018         	goto	u3911
  6017  00302E  EF1B  F018         	goto	u3910
  6018  003032                     u3911:
  6019  003032  EF3D  F018         	goto	l3596
  6020  003036                     u3910:
  6021  003036  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6022  00303A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6023  00303E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6024  003042  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6025  003046  0E09               	movlw	9
  6026  003048                     u3925:
  6027  003048  90D8               	bcf	status,0,c
  6028  00304A  3605               	rlcf	??___fpclassifyf^0,f,c
  6029  00304C  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  6030  00304E  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  6031  003050  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  6032  003052  2EE8               	decfsz	wreg,f,c
  6033  003054  EF24  F018         	goto	u3925
  6034  003058  5005               	movf	??___fpclassifyf^0,w,c
  6035  00305A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6036  00305C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6037  00305E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6038  003060  B4D8               	btfsc	status,2,c
  6039  003062  EF35  F018         	goto	u3931
  6040  003066  EF38  F018         	goto	u3930
  6041  00306A                     u3931:
  6042  00306A  0E01               	movlw	1
  6043  00306C  EF39  F018         	goto	u3940
  6044  003070                     u3930:
  6045  003070  0E00               	movlw	0
  6046  003072                     u3940:
  6047  003072  6E01               	movwf	?___fpclassifyf^0,c
  6048  003074  6A02               	clrf	(?___fpclassifyf+1)^0,c
  6049  003076  EF41  F018         	goto	l1038
  6050  00307A                     l3596:
  6051  00307A  0E00               	movlw	0
  6052  00307C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6053  00307E  0E04               	movlw	4
  6054  003080  6E01               	movwf	?___fpclassifyf^0,c
  6055  003082                     l1038:
  6056  003082  0012               	return		;funcret
  6057  003084                     __end_of___fpclassifyf:
  6058                           	callstack 0
  6059                           
  6060 ;; *************** function ___fltol *****************
  6061 ;; Defined at:
  6062 ;;		line 43 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\fltol.c"
  6063 ;; Parameters:    Size  Location     Type
  6064 ;;  f1              4   25[COMRAM] int 
  6065 ;; Auto vars:     Size  Location     Type
  6066 ;;  exp1            1   34[COMRAM] unsigned char 
  6067 ;;  sign1           1   33[COMRAM] unsigned char 
  6068 ;; Return value:  Size  Location     Type
  6069 ;;                  4   25[COMRAM] long 
  6070 ;; Registers used:
  6071 ;;		wreg, status,2, status,0
  6072 ;; Tracked objects:
  6073 ;;		On entry : 0/0
  6074 ;;		On exit  : 0/0
  6075 ;;		Unchanged: 0/0
  6076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6077 ;;      Params:         4       0       0       0       0       0       0
  6078 ;;      Locals:         2       0       0       0       0       0       0
  6079 ;;      Temps:          4       0       0       0       0       0       0
  6080 ;;      Totals:        10       0       0       0       0       0       0
  6081 ;;Total ram usage:       10 bytes
  6082 ;; Hardware stack levels used:    1
  6083 ;; This function calls:
  6084 ;;		Nothing
  6085 ;; This function is called by:
  6086 ;;		_encher_tanque
  6087 ;;		_esvaziar_tanque
  6088 ;;		_efgtoa
  6089 ;; This function uses a non-reentrant model
  6090 ;;
  6091                           
  6092                           	psect	text20
  6093  002D7C                     __ptext20:
  6094                           	callstack 0
  6095  002D7C                     ___fltol:
  6096                           	callstack 25
  6097  002D7C  341C               	rlcf	(___fltol@f1+2)^0,w,c
  6098  002D7E  341D               	rlcf	(___fltol@f1+3)^0,w,c
  6099  002D80  6E23               	movwf	___fltol@exp1^0,c
  6100  002D82  5023               	movf	___fltol@exp1^0,w,c
  6101  002D84  A4D8               	btfss	status,2,c
  6102  002D86  EFC7  F016         	goto	u3771
  6103  002D8A  EFC9  F016         	goto	u3770
  6104  002D8E                     u3771:
  6105  002D8E  EFD3  F016         	goto	l3518
  6106  002D92                     u3770:
  6107  002D92                     l3514:
  6108  002D92  0E00               	movlw	0
  6109  002D94  6E1A               	movwf	?___fltol^0,c
  6110  002D96  0E00               	movlw	0
  6111  002D98  6E1B               	movwf	(?___fltol+1)^0,c
  6112  002D9A  0E00               	movlw	0
  6113  002D9C  6E1C               	movwf	(?___fltol+2)^0,c
  6114  002D9E  0E00               	movlw	0
  6115  002DA0  6E1D               	movwf	(?___fltol+3)^0,c
  6116  002DA2  EF40  F017         	goto	l479
  6117  002DA6                     l3518:
  6118  002DA6  C01A  F01E         	movff	___fltol@f1,??___fltol
  6119  002DAA  C01B  F01F         	movff	___fltol@f1+1,??___fltol+1
  6120  002DAE  C01C  F020         	movff	___fltol@f1+2,??___fltol+2
  6121  002DB2  C01D  F021         	movff	___fltol@f1+3,??___fltol+3
  6122  002DB6  0E20               	movlw	32
  6123  002DB8  EFE3  F016         	goto	u3780
  6124  002DBC                     u3785:
  6125  002DBC  90D8               	bcf	status,0,c
  6126  002DBE  3221               	rrcf	(??___fltol+3)^0,f,c
  6127  002DC0  3220               	rrcf	(??___fltol+2)^0,f,c
  6128  002DC2  321F               	rrcf	(??___fltol+1)^0,f,c
  6129  002DC4  321E               	rrcf	??___fltol^0,f,c
  6130  002DC6                     u3780:
  6131  002DC6  2EE8               	decfsz	wreg,f,c
  6132  002DC8  EFDE  F016         	goto	u3785
  6133  002DCC  501E               	movf	??___fltol^0,w,c
  6134  002DCE  6E22               	movwf	___fltol@sign1^0,c
  6135  002DD0  8E1C               	bsf	(___fltol@f1+2)^0,7,c
  6136  002DD2  0EFF               	movlw	255
  6137  002DD4  161A               	andwf	___fltol@f1^0,f,c
  6138  002DD6  0EFF               	movlw	255
  6139  002DD8  161B               	andwf	(___fltol@f1+1)^0,f,c
  6140  002DDA  0EFF               	movlw	255
  6141  002DDC  161C               	andwf	(___fltol@f1+2)^0,f,c
  6142  002DDE  0E00               	movlw	0
  6143  002DE0  161D               	andwf	(___fltol@f1+3)^0,f,c
  6144  002DE2  0E96               	movlw	150
  6145  002DE4  5E23               	subwf	___fltol@exp1^0,f,c
  6146  002DE6  BE23               	btfsc	___fltol@exp1^0,7,c
  6147  002DE8  EFFA  F016         	goto	u3790
  6148  002DEC  EFF8  F016         	goto	u3791
  6149  002DF0                     u3791:
  6150  002DF0  EF10  F017         	goto	l3538
  6151  002DF4                     u3790:
  6152  002DF4  5023               	movf	___fltol@exp1^0,w,c
  6153  002DF6  0A80               	xorlw	128
  6154  002DF8  0F97               	addlw	151
  6155  002DFA  B0D8               	btfsc	status,0,c
  6156  002DFC  EF02  F017         	goto	u3801
  6157  002E00  EF04  F017         	goto	u3800
  6158  002E04                     u3801:
  6159  002E04  EF06  F017         	goto	l3534
  6160  002E08                     u3800:
  6161  002E08  EFC9  F016         	goto	l3514
  6162  002E0C                     l3534:
  6163  002E0C  90D8               	bcf	status,0,c
  6164  002E0E  321D               	rrcf	(___fltol@f1+3)^0,f,c
  6165  002E10  321C               	rrcf	(___fltol@f1+2)^0,f,c
  6166  002E12  321B               	rrcf	(___fltol@f1+1)^0,f,c
  6167  002E14  321A               	rrcf	___fltol@f1^0,f,c
  6168  002E16  3E23               	incfsz	___fltol@exp1^0,f,c
  6169  002E18  EF06  F017         	goto	l3534
  6170  002E1C  EF28  F017         	goto	l3548
  6171  002E20                     l3538:
  6172  002E20  0E1F               	movlw	31
  6173  002E22  6423               	cpfsgt	___fltol@exp1^0,c
  6174  002E24  EF16  F017         	goto	u3811
  6175  002E28  EF18  F017         	goto	u3810
  6176  002E2C                     u3811:
  6177  002E2C  EF20  F017         	goto	l3546
  6178  002E30                     u3810:
  6179  002E30  EFC9  F016         	goto	l3514
  6180  002E34                     l3544:
  6181  002E34  90D8               	bcf	status,0,c
  6182  002E36  361A               	rlcf	___fltol@f1^0,f,c
  6183  002E38  361B               	rlcf	(___fltol@f1+1)^0,f,c
  6184  002E3A  361C               	rlcf	(___fltol@f1+2)^0,f,c
  6185  002E3C  361D               	rlcf	(___fltol@f1+3)^0,f,c
  6186  002E3E  0623               	decf	___fltol@exp1^0,f,c
  6187  002E40                     l3546:
  6188  002E40  5023               	movf	___fltol@exp1^0,w,c
  6189  002E42  A4D8               	btfss	status,2,c
  6190  002E44  EF26  F017         	goto	u3821
  6191  002E48  EF28  F017         	goto	u3820
  6192  002E4C                     u3821:
  6193  002E4C  EF1A  F017         	goto	l3544
  6194  002E50                     u3820:
  6195  002E50                     l3548:
  6196  002E50  5022               	movf	___fltol@sign1^0,w,c
  6197  002E52  B4D8               	btfsc	status,2,c
  6198  002E54  EF2E  F017         	goto	u3831
  6199  002E58  EF30  F017         	goto	u3830
  6200  002E5C                     u3831:
  6201  002E5C  EF38  F017         	goto	l3552
  6202  002E60                     u3830:
  6203  002E60  1E1D               	comf	(___fltol@f1+3)^0,f,c
  6204  002E62  1E1C               	comf	(___fltol@f1+2)^0,f,c
  6205  002E64  1E1B               	comf	(___fltol@f1+1)^0,f,c
  6206  002E66  6C1A               	negf	___fltol@f1^0,c
  6207  002E68  0E00               	movlw	0
  6208  002E6A  221B               	addwfc	(___fltol@f1+1)^0,f,c
  6209  002E6C  221C               	addwfc	(___fltol@f1+2)^0,f,c
  6210  002E6E  221D               	addwfc	(___fltol@f1+3)^0,f,c
  6211  002E70                     l3552:
  6212  002E70  C01A  F01A         	movff	___fltol@f1,?___fltol
  6213  002E74  C01B  F01B         	movff	___fltol@f1+1,?___fltol+1
  6214  002E78  C01C  F01C         	movff	___fltol@f1+2,?___fltol+2
  6215  002E7C  C01D  F01D         	movff	___fltol@f1+3,?___fltol+3
  6216  002E80                     l479:
  6217  002E80  0012               	return		;funcret
  6218  002E82                     __end_of___fltol:
  6219                           	callstack 0
  6220                           
  6221 ;; *************** function ___flsub *****************
  6222 ;; Defined at:
  6223 ;;		line 245 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  6224 ;; Parameters:    Size  Location     Type
  6225 ;;  b               4   25[COMRAM] long 
  6226 ;;  a               4   29[COMRAM] long 
  6227 ;; Auto vars:     Size  Location     Type
  6228 ;;		None
  6229 ;; Return value:  Size  Location     Type
  6230 ;;                  4   25[COMRAM] long 
  6231 ;; Registers used:
  6232 ;;		wreg, status,2, status,0, cstack
  6233 ;; Tracked objects:
  6234 ;;		On entry : 0/0
  6235 ;;		On exit  : 0/0
  6236 ;;		Unchanged: 0/0
  6237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6238 ;;      Params:         8       0       0       0       0       0       0
  6239 ;;      Locals:         0       0       0       0       0       0       0
  6240 ;;      Temps:          0       0       0       0       0       0       0
  6241 ;;      Totals:         8       0       0       0       0       0       0
  6242 ;;Total ram usage:        8 bytes
  6243 ;; Hardware stack levels used:    1
  6244 ;; Hardware stack levels required when called:    1
  6245 ;; This function calls:
  6246 ;;		___fladd
  6247 ;; This function is called by:
  6248 ;;		_esvaziar_tanque
  6249 ;;		_efgtoa
  6250 ;; This function uses a non-reentrant model
  6251 ;;
  6252                           
  6253                           	psect	text21
  6254  00391C                     __ptext21:
  6255                           	callstack 0
  6256  00391C                     ___flsub:
  6257                           	callstack 24
  6258  00391C  0E00               	movlw	0
  6259  00391E  1A1E               	xorwf	___flsub@a^0,f,c
  6260  003920  0E00               	movlw	0
  6261  003922  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  6262  003924  0E00               	movlw	0
  6263  003926  1A20               	xorwf	(___flsub@a+2)^0,f,c
  6264  003928  0E80               	movlw	128
  6265  00392A  1A21               	xorwf	(___flsub@a+3)^0,f,c
  6266  00392C  C01A  F001         	movff	___flsub@b,___fladd@b
  6267  003930  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  6268  003934  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  6269  003938  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  6270  00393C  C01E  F005         	movff	___flsub@a,___fladd@a
  6271  003940  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  6272  003944  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  6273  003948  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  6274  00394C  EC47  F009         	call	___fladd	;wreg free
  6275  003950  C001  F01A         	movff	?___fladd,?___flsub
  6276  003954  C002  F01B         	movff	?___fladd+1,?___flsub+1
  6277  003958  C003  F01C         	movff	?___fladd+2,?___flsub+2
  6278  00395C  C004  F01D         	movff	?___fladd+3,?___flsub+3
  6279  003960  0012               	return		;funcret
  6280  003962                     __end_of___flsub:
  6281                           	callstack 0
  6282                           
  6283 ;; *************** function ___fladd *****************
  6284 ;; Defined at:
  6285 ;;		line 10 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  6286 ;; Parameters:    Size  Location     Type
  6287 ;;  b               4    0[COMRAM] long 
  6288 ;;  a               4    4[COMRAM] long 
  6289 ;; Auto vars:     Size  Location     Type
  6290 ;;  grs             1   15[COMRAM] unsigned char 
  6291 ;;  bexp            1   14[COMRAM] unsigned char 
  6292 ;;  aexp            1   13[COMRAM] unsigned char 
  6293 ;;  signs           1   12[COMRAM] unsigned char 
  6294 ;; Return value:  Size  Location     Type
  6295 ;;                  4    0[COMRAM] unsigned char 
  6296 ;; Registers used:
  6297 ;;		wreg, status,2, status,0
  6298 ;; Tracked objects:
  6299 ;;		On entry : 0/0
  6300 ;;		On exit  : 0/0
  6301 ;;		Unchanged: 0/0
  6302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6303 ;;      Params:         8       0       0       0       0       0       0
  6304 ;;      Locals:         4       0       0       0       0       0       0
  6305 ;;      Temps:          4       0       0       0       0       0       0
  6306 ;;      Totals:        16       0       0       0       0       0       0
  6307 ;;Total ram usage:       16 bytes
  6308 ;; Hardware stack levels used:    1
  6309 ;; This function calls:
  6310 ;;		Nothing
  6311 ;; This function is called by:
  6312 ;;		_encher_tanque
  6313 ;;		___flsub
  6314 ;;		_efgtoa
  6315 ;; This function uses a non-reentrant model
  6316 ;;
  6317                           
  6318                           	psect	text22
  6319  00128E                     __ptext22:
  6320                           	callstack 0
  6321  00128E                     ___fladd:
  6322                           	callstack 24
  6323  00128E  5004               	movf	(___fladd@b+3)^0,w,c
  6324  001290  0B80               	andlw	128
  6325  001292  6E0D               	movwf	___fladd@signs^0,c
  6326  001294  5004               	movf	(___fladd@b+3)^0,w,c
  6327  001296  2404               	addwf	(___fladd@b+3)^0,w,c
  6328  001298  6E0F               	movwf	___fladd@bexp^0,c
  6329  00129A  AE03               	btfss	(___fladd@b+2)^0,7,c
  6330  00129C  EF52  F009         	goto	u2711
  6331  0012A0  EF54  F009         	goto	u2710
  6332  0012A4                     u2711:
  6333  0012A4  EF55  F009         	goto	l2888
  6334  0012A8                     u2710:
  6335  0012A8  800F               	bsf	___fladd@bexp^0,0,c
  6336  0012AA                     l2888:
  6337  0012AA  500F               	movf	___fladd@bexp^0,w,c
  6338  0012AC  B4D8               	btfsc	status,2,c
  6339  0012AE  EF5B  F009         	goto	u2721
  6340  0012B2  EF5D  F009         	goto	u2720
  6341  0012B6                     u2721:
  6342  0012B6  EF72  F009         	goto	l2898
  6343  0012BA                     u2720:
  6344  0012BA  280F               	incf	___fladd@bexp^0,w,c
  6345  0012BC  A4D8               	btfss	status,2,c
  6346  0012BE  EF63  F009         	goto	u2731
  6347  0012C2  EF65  F009         	goto	u2730
  6348  0012C6                     u2731:
  6349  0012C6  EF6D  F009         	goto	l2894
  6350  0012CA                     u2730:
  6351  0012CA  0E00               	movlw	0
  6352  0012CC  6E01               	movwf	___fladd@b^0,c
  6353  0012CE  0E00               	movlw	0
  6354  0012D0  6E02               	movwf	(___fladd@b+1)^0,c
  6355  0012D2  0E00               	movlw	0
  6356  0012D4  6E03               	movwf	(___fladd@b+2)^0,c
  6357  0012D6  0E00               	movlw	0
  6358  0012D8  6E04               	movwf	(___fladd@b+3)^0,c
  6359  0012DA                     l2894:
  6360  0012DA  8E03               	bsf	(___fladd@b+2)^0,7,c
  6361  0012DC  0E00               	movlw	0
  6362  0012DE  6E04               	movwf	(___fladd@b+3)^0,c
  6363  0012E0  EF7A  F009         	goto	l2900
  6364  0012E4                     l2898:
  6365  0012E4  0E00               	movlw	0
  6366  0012E6  6E01               	movwf	___fladd@b^0,c
  6367  0012E8  0E00               	movlw	0
  6368  0012EA  6E02               	movwf	(___fladd@b+1)^0,c
  6369  0012EC  0E00               	movlw	0
  6370  0012EE  6E03               	movwf	(___fladd@b+2)^0,c
  6371  0012F0  0E00               	movlw	0
  6372  0012F2  6E04               	movwf	(___fladd@b+3)^0,c
  6373  0012F4                     l2900:
  6374  0012F4  5008               	movf	(___fladd@a+3)^0,w,c
  6375  0012F6  0B80               	andlw	128
  6376  0012F8  6E0E               	movwf	___fladd@aexp^0,c
  6377  0012FA  500D               	movf	___fladd@signs^0,w,c
  6378  0012FC  180E               	xorwf	___fladd@aexp^0,w,c
  6379  0012FE  B4D8               	btfsc	status,2,c
  6380  001300  EF84  F009         	goto	u2741
  6381  001304  EF86  F009         	goto	u2740
  6382  001308                     u2741:
  6383  001308  EF87  F009         	goto	l2906
  6384  00130C                     u2740:
  6385  00130C  8C0D               	bsf	___fladd@signs^0,6,c
  6386  00130E                     l2906:
  6387  00130E  5008               	movf	(___fladd@a+3)^0,w,c
  6388  001310  2408               	addwf	(___fladd@a+3)^0,w,c
  6389  001312  6E0E               	movwf	___fladd@aexp^0,c
  6390  001314  AE07               	btfss	(___fladd@a+2)^0,7,c
  6391  001316  EF8F  F009         	goto	u2751
  6392  00131A  EF91  F009         	goto	u2750
  6393  00131E                     u2751:
  6394  00131E  EF92  F009         	goto	l2912
  6395  001322                     u2750:
  6396  001322  800E               	bsf	___fladd@aexp^0,0,c
  6397  001324                     l2912:
  6398  001324  500E               	movf	___fladd@aexp^0,w,c
  6399  001326  B4D8               	btfsc	status,2,c
  6400  001328  EF98  F009         	goto	u2761
  6401  00132C  EF9A  F009         	goto	u2760
  6402  001330                     u2761:
  6403  001330  EFAF  F009         	goto	l2922
  6404  001334                     u2760:
  6405  001334  280E               	incf	___fladd@aexp^0,w,c
  6406  001336  A4D8               	btfss	status,2,c
  6407  001338  EFA0  F009         	goto	u2771
  6408  00133C  EFA2  F009         	goto	u2770
  6409  001340                     u2771:
  6410  001340  EFAA  F009         	goto	l2918
  6411  001344                     u2770:
  6412  001344  0E00               	movlw	0
  6413  001346  6E05               	movwf	___fladd@a^0,c
  6414  001348  0E00               	movlw	0
  6415  00134A  6E06               	movwf	(___fladd@a+1)^0,c
  6416  00134C  0E00               	movlw	0
  6417  00134E  6E07               	movwf	(___fladd@a+2)^0,c
  6418  001350  0E00               	movlw	0
  6419  001352  6E08               	movwf	(___fladd@a+3)^0,c
  6420  001354                     l2918:
  6421  001354  8E07               	bsf	(___fladd@a+2)^0,7,c
  6422  001356  0E00               	movlw	0
  6423  001358  6E08               	movwf	(___fladd@a+3)^0,c
  6424  00135A  EFB7  F009         	goto	l2924
  6425  00135E                     l2922:
  6426  00135E  0E00               	movlw	0
  6427  001360  6E05               	movwf	___fladd@a^0,c
  6428  001362  0E00               	movlw	0
  6429  001364  6E06               	movwf	(___fladd@a+1)^0,c
  6430  001366  0E00               	movlw	0
  6431  001368  6E07               	movwf	(___fladd@a+2)^0,c
  6432  00136A  0E00               	movlw	0
  6433  00136C  6E08               	movwf	(___fladd@a+3)^0,c
  6434  00136E                     l2924:
  6435  00136E  500F               	movf	___fladd@bexp^0,w,c
  6436  001370  5C0E               	subwf	___fladd@aexp^0,w,c
  6437  001372  B0D8               	btfsc	status,0,c
  6438  001374  EFBE  F009         	goto	u2781
  6439  001378  EFC0  F009         	goto	u2780
  6440  00137C                     u2781:
  6441  00137C  EFE7  F009         	goto	l2960
  6442  001380                     u2780:
  6443  001380  AC0D               	btfss	___fladd@signs^0,6,c
  6444  001382  EFC5  F009         	goto	u2791
  6445  001386  EFC7  F009         	goto	u2790
  6446  00138A                     u2791:
  6447  00138A  EFC9  F009         	goto	l2930
  6448  00138E                     u2790:
  6449  00138E  0E80               	movlw	128
  6450  001390  1A0D               	xorwf	___fladd@signs^0,f,c
  6451  001392                     l2930:
  6452  001392  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  6453  001396  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6454  00139A  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  6455  00139E  C001  F010         	movff	___fladd@b,___fladd@grs
  6456  0013A2  C005  F001         	movff	___fladd@a,___fladd@b
  6457  0013A6  C010  F005         	movff	___fladd@grs,___fladd@a
  6458  0013AA  C002  F010         	movff	___fladd@b+1,___fladd@grs
  6459  0013AE  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  6460  0013B2  C010  F006         	movff	___fladd@grs,___fladd@a+1
  6461  0013B6  C003  F010         	movff	___fladd@b+2,___fladd@grs
  6462  0013BA  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  6463  0013BE  C010  F007         	movff	___fladd@grs,___fladd@a+2
  6464  0013C2  C004  F010         	movff	___fladd@b+3,___fladd@grs
  6465  0013C6  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  6466  0013CA  C010  F008         	movff	___fladd@grs,___fladd@a+3
  6467  0013CE                     l2960:
  6468  0013CE  0E00               	movlw	0
  6469  0013D0  6E10               	movwf	___fladd@grs^0,c
  6470  0013D2  500F               	movf	___fladd@bexp^0,w,c
  6471  0013D4  C00E  F009         	movff	___fladd@aexp,??___fladd
  6472  0013D8  6A0A               	clrf	(??___fladd+1)^0,c
  6473  0013DA  5E09               	subwf	??___fladd^0,f,c
  6474  0013DC  0E00               	movlw	0
  6475  0013DE  5A0A               	subwfb	(??___fladd+1)^0,f,c
  6476  0013E0  BE0A               	btfsc	(??___fladd+1)^0,7,c
  6477  0013E2  EFFC  F009         	goto	u2801
  6478  0013E6  500A               	movf	(??___fladd+1)^0,w,c
  6479  0013E8  E109               	bnz	u2800
  6480  0013EA  0E1A               	movlw	26
  6481  0013EC  5C09               	subwf	??___fladd^0,w,c
  6482  0013EE  A0D8               	btfss	status,0,c
  6483  0013F0  EFFC  F009         	goto	u2801
  6484  0013F4  EFFE  F009         	goto	u2800
  6485  0013F8                     u2801:
  6486  0013F8  EF35  F00A         	goto	l711
  6487  0013FC                     u2800:
  6488  0013FC  5001               	movf	___fladd@b^0,w,c
  6489  0013FE  1002               	iorwf	(___fladd@b+1)^0,w,c
  6490  001400  1003               	iorwf	(___fladd@b+2)^0,w,c
  6491  001402  1004               	iorwf	(___fladd@b+3)^0,w,c
  6492  001404  A4D8               	btfss	status,2,c
  6493  001406  EF07  F00A         	goto	u2811
  6494  00140A  EF0A  F00A         	goto	u2810
  6495  00140E                     u2811:
  6496  00140E  0E01               	movlw	1
  6497  001410  EF0B  F00A         	goto	u2820
  6498  001414                     u2810:
  6499  001414  0E00               	movlw	0
  6500  001416                     u2820:
  6501  001416  6E10               	movwf	___fladd@grs^0,c
  6502  001418  0E00               	movlw	0
  6503  00141A  6E01               	movwf	___fladd@b^0,c
  6504  00141C  0E00               	movlw	0
  6505  00141E  6E02               	movwf	(___fladd@b+1)^0,c
  6506  001420  0E00               	movlw	0
  6507  001422  6E03               	movwf	(___fladd@b+2)^0,c
  6508  001424  0E00               	movlw	0
  6509  001426  6E04               	movwf	(___fladd@b+3)^0,c
  6510  001428  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6511  00142C  EF3E  F00A         	goto	l710
  6512  001430                     l712:
  6513  001430  A010               	btfss	___fladd@grs^0,0,c
  6514  001432  EF1D  F00A         	goto	u2831
  6515  001436  EF1F  F00A         	goto	u2830
  6516  00143A                     u2831:
  6517  00143A  EF25  F00A         	goto	l2972
  6518  00143E                     u2830:
  6519  00143E  90D8               	bcf	status,0,c
  6520  001440  3010               	rrcf	___fladd@grs^0,w,c
  6521  001442  0901               	iorlw	1
  6522  001444  6E10               	movwf	___fladd@grs^0,c
  6523  001446  EF27  F00A         	goto	l2974
  6524  00144A                     l2972:
  6525  00144A  90D8               	bcf	status,0,c
  6526  00144C  3210               	rrcf	___fladd@grs^0,f,c
  6527  00144E                     l2974:
  6528  00144E  A001               	btfss	___fladd@b^0,0,c
  6529  001450  EF2C  F00A         	goto	u2841
  6530  001454  EF2E  F00A         	goto	u2840
  6531  001458                     u2841:
  6532  001458  EF2F  F00A         	goto	l2978
  6533  00145C                     u2840:
  6534  00145C  8E10               	bsf	___fladd@grs^0,7,c
  6535  00145E                     l2978:
  6536  00145E  3404               	rlcf	(___fladd@b+3)^0,w,c
  6537  001460  3204               	rrcf	(___fladd@b+3)^0,f,c
  6538  001462  3203               	rrcf	(___fladd@b+2)^0,f,c
  6539  001464  3202               	rrcf	(___fladd@b+1)^0,f,c
  6540  001466  3201               	rrcf	___fladd@b^0,f,c
  6541  001468  2A0F               	incf	___fladd@bexp^0,f,c
  6542  00146A                     l711:
  6543  00146A  500E               	movf	___fladd@aexp^0,w,c
  6544  00146C  5C0F               	subwf	___fladd@bexp^0,w,c
  6545  00146E  A0D8               	btfss	status,0,c
  6546  001470  EF3C  F00A         	goto	u2851
  6547  001474  EF3E  F00A         	goto	u2850
  6548  001478                     u2851:
  6549  001478  EF18  F00A         	goto	l712
  6550  00147C                     u2850:
  6551  00147C                     l710:
  6552  00147C  BC0D               	btfsc	___fladd@signs^0,6,c
  6553  00147E  EF43  F00A         	goto	u2861
  6554  001482  EF45  F00A         	goto	u2860
  6555  001486                     u2861:
  6556  001486  EF85  F00A         	goto	l3006
  6557  00148A                     u2860:
  6558  00148A  500F               	movf	___fladd@bexp^0,w,c
  6559  00148C  A4D8               	btfss	status,2,c
  6560  00148E  EF4B  F00A         	goto	u2871
  6561  001492  EF4D  F00A         	goto	u2870
  6562  001496                     u2871:
  6563  001496  EF57  F00A         	goto	l2988
  6564  00149A                     u2870:
  6565  00149A  0E00               	movlw	0
  6566  00149C  6E01               	movwf	?___fladd^0,c
  6567  00149E  0E00               	movlw	0
  6568  0014A0  6E02               	movwf	(?___fladd+1)^0,c
  6569  0014A2  0E00               	movlw	0
  6570  0014A4  6E03               	movwf	(?___fladd+2)^0,c
  6571  0014A6  0E00               	movlw	0
  6572  0014A8  6E04               	movwf	(?___fladd+3)^0,c
  6573  0014AA  EFA6  F00B         	goto	l719
  6574  0014AE                     l2988:
  6575  0014AE  5005               	movf	___fladd@a^0,w,c
  6576  0014B0  2601               	addwf	___fladd@b^0,f,c
  6577  0014B2  5006               	movf	(___fladd@a+1)^0,w,c
  6578  0014B4  2202               	addwfc	(___fladd@b+1)^0,f,c
  6579  0014B6  5007               	movf	(___fladd@a+2)^0,w,c
  6580  0014B8  2203               	addwfc	(___fladd@b+2)^0,f,c
  6581  0014BA  5008               	movf	(___fladd@a+3)^0,w,c
  6582  0014BC  2204               	addwfc	(___fladd@b+3)^0,f,c
  6583  0014BE  A004               	btfss	(___fladd@b+3)^0,0,c
  6584  0014C0  EF64  F00A         	goto	u2881
  6585  0014C4  EF66  F00A         	goto	u2880
  6586  0014C8                     u2881:
  6587  0014C8  EF12  F00B         	goto	l3042
  6588  0014CC                     u2880:
  6589  0014CC  A010               	btfss	___fladd@grs^0,0,c
  6590  0014CE  EF6B  F00A         	goto	u2891
  6591  0014D2  EF6D  F00A         	goto	u2890
  6592  0014D6                     u2891:
  6593  0014D6  EF73  F00A         	goto	l2996
  6594  0014DA                     u2890:
  6595  0014DA  90D8               	bcf	status,0,c
  6596  0014DC  3010               	rrcf	___fladd@grs^0,w,c
  6597  0014DE  0901               	iorlw	1
  6598  0014E0  6E10               	movwf	___fladd@grs^0,c
  6599  0014E2  EF75  F00A         	goto	l2998
  6600  0014E6                     l2996:
  6601  0014E6  90D8               	bcf	status,0,c
  6602  0014E8  3210               	rrcf	___fladd@grs^0,f,c
  6603  0014EA                     l2998:
  6604  0014EA  A001               	btfss	___fladd@b^0,0,c
  6605  0014EC  EF7A  F00A         	goto	u2901
  6606  0014F0  EF7C  F00A         	goto	u2900
  6607  0014F4                     u2901:
  6608  0014F4  EF7D  F00A         	goto	l3002
  6609  0014F8                     u2900:
  6610  0014F8  8E10               	bsf	___fladd@grs^0,7,c
  6611  0014FA                     l3002:
  6612  0014FA  3404               	rlcf	(___fladd@b+3)^0,w,c
  6613  0014FC  3204               	rrcf	(___fladd@b+3)^0,f,c
  6614  0014FE  3203               	rrcf	(___fladd@b+2)^0,f,c
  6615  001500  3202               	rrcf	(___fladd@b+1)^0,f,c
  6616  001502  3201               	rrcf	___fladd@b^0,f,c
  6617  001504  2A0F               	incf	___fladd@bexp^0,f,c
  6618  001506  EF12  F00B         	goto	l3042
  6619  00150A                     l3006:
  6620  00150A  5005               	movf	___fladd@a^0,w,c
  6621  00150C  5C01               	subwf	___fladd@b^0,w,c
  6622  00150E  5006               	movf	(___fladd@a+1)^0,w,c
  6623  001510  5802               	subwfb	(___fladd@b+1)^0,w,c
  6624  001512  5007               	movf	(___fladd@a+2)^0,w,c
  6625  001514  5803               	subwfb	(___fladd@b+2)^0,w,c
  6626  001516  5004               	movf	(___fladd@b+3)^0,w,c
  6627  001518  0A80               	xorlw	128
  6628  00151A  6E09               	movwf	??___fladd^0,c
  6629  00151C  5008               	movf	(___fladd@a+3)^0,w,c
  6630  00151E  0A80               	xorlw	128
  6631  001520  5809               	subwfb	??___fladd^0,w,c
  6632  001522  B0D8               	btfsc	status,0,c
  6633  001524  EF96  F00A         	goto	u2911
  6634  001528  EF98  F00A         	goto	u2910
  6635  00152C                     u2911:
  6636  00152C  EFC3  F00A         	goto	l3016
  6637  001530                     u2910:
  6638  001530  5001               	movf	___fladd@b^0,w,c
  6639  001532  5C05               	subwf	___fladd@a^0,w,c
  6640  001534  6E09               	movwf	??___fladd^0,c
  6641  001536  5002               	movf	(___fladd@b+1)^0,w,c
  6642  001538  5806               	subwfb	(___fladd@a+1)^0,w,c
  6643  00153A  6E0A               	movwf	(??___fladd+1)^0,c
  6644  00153C  5003               	movf	(___fladd@b+2)^0,w,c
  6645  00153E  5807               	subwfb	(___fladd@a+2)^0,w,c
  6646  001540  6E0B               	movwf	(??___fladd+2)^0,c
  6647  001542  5004               	movf	(___fladd@b+3)^0,w,c
  6648  001544  5808               	subwfb	(___fladd@a+3)^0,w,c
  6649  001546  6E0C               	movwf	(??___fladd+3)^0,c
  6650  001548  0EFF               	movlw	255
  6651  00154A  2409               	addwf	??___fladd^0,w,c
  6652  00154C  6E01               	movwf	___fladd@b^0,c
  6653  00154E  0EFF               	movlw	255
  6654  001550  200A               	addwfc	(??___fladd+1)^0,w,c
  6655  001552  6E02               	movwf	(___fladd@b+1)^0,c
  6656  001554  0EFF               	movlw	255
  6657  001556  200B               	addwfc	(??___fladd+2)^0,w,c
  6658  001558  6E03               	movwf	(___fladd@b+2)^0,c
  6659  00155A  0EFF               	movlw	255
  6660  00155C  200C               	addwfc	(??___fladd+3)^0,w,c
  6661  00155E  6E04               	movwf	(___fladd@b+3)^0,c
  6662  001560  0E80               	movlw	128
  6663  001562  1A0D               	xorwf	___fladd@signs^0,f,c
  6664  001564  6C10               	negf	___fladd@grs^0,c
  6665  001566  5010               	movf	___fladd@grs^0,w,c
  6666  001568  A4D8               	btfss	status,2,c
  6667  00156A  EFB9  F00A         	goto	u2921
  6668  00156E  EFBB  F00A         	goto	u2920
  6669  001572                     u2921:
  6670  001572  EFCB  F00A         	goto	l727
  6671  001576                     u2920:
  6672  001576  0E01               	movlw	1
  6673  001578  2601               	addwf	___fladd@b^0,f,c
  6674  00157A  0E00               	movlw	0
  6675  00157C  2202               	addwfc	(___fladd@b+1)^0,f,c
  6676  00157E  2203               	addwfc	(___fladd@b+2)^0,f,c
  6677  001580  2204               	addwfc	(___fladd@b+3)^0,f,c
  6678  001582  EFCB  F00A         	goto	l727
  6679  001586                     l3016:
  6680  001586  5005               	movf	___fladd@a^0,w,c
  6681  001588  5E01               	subwf	___fladd@b^0,f,c
  6682  00158A  5006               	movf	(___fladd@a+1)^0,w,c
  6683  00158C  5A02               	subwfb	(___fladd@b+1)^0,f,c
  6684  00158E  5007               	movf	(___fladd@a+2)^0,w,c
  6685  001590  5A03               	subwfb	(___fladd@b+2)^0,f,c
  6686  001592  5008               	movf	(___fladd@a+3)^0,w,c
  6687  001594  5A04               	subwfb	(___fladd@b+3)^0,f,c
  6688  001596                     l727:
  6689  001596  5001               	movf	___fladd@b^0,w,c
  6690  001598  1002               	iorwf	(___fladd@b+1)^0,w,c
  6691  00159A  1003               	iorwf	(___fladd@b+2)^0,w,c
  6692  00159C  1004               	iorwf	(___fladd@b+3)^0,w,c
  6693  00159E  A4D8               	btfss	status,2,c
  6694  0015A0  EFD4  F00A         	goto	u2931
  6695  0015A4  EFD6  F00A         	goto	u2930
  6696  0015A8                     u2931:
  6697  0015A8  EF0B  F00B         	goto	l3040
  6698  0015AC                     u2930:
  6699  0015AC  5010               	movf	___fladd@grs^0,w,c
  6700  0015AE  A4D8               	btfss	status,2,c
  6701  0015B0  EFDC  F00A         	goto	u2941
  6702  0015B4  EFDE  F00A         	goto	u2940
  6703  0015B8                     u2941:
  6704  0015B8  EF0B  F00B         	goto	l3040
  6705  0015BC                     u2940:
  6706  0015BC  0E00               	movlw	0
  6707  0015BE  6E01               	movwf	?___fladd^0,c
  6708  0015C0  0E00               	movlw	0
  6709  0015C2  6E02               	movwf	(?___fladd+1)^0,c
  6710  0015C4  0E00               	movlw	0
  6711  0015C6  6E03               	movwf	(?___fladd+2)^0,c
  6712  0015C8  0E00               	movlw	0
  6713  0015CA  6E04               	movwf	(?___fladd+3)^0,c
  6714  0015CC  EFA6  F00B         	goto	l719
  6715  0015D0                     l3024:
  6716  0015D0  90D8               	bcf	status,0,c
  6717  0015D2  3601               	rlcf	___fladd@b^0,f,c
  6718  0015D4  3602               	rlcf	(___fladd@b+1)^0,f,c
  6719  0015D6  3603               	rlcf	(___fladd@b+2)^0,f,c
  6720  0015D8  3604               	rlcf	(___fladd@b+3)^0,f,c
  6721  0015DA  AE10               	btfss	___fladd@grs^0,7,c
  6722  0015DC  EFF2  F00A         	goto	u2951
  6723  0015E0  EFF4  F00A         	goto	u2950
  6724  0015E4                     u2951:
  6725  0015E4  EFF5  F00A         	goto	l3030
  6726  0015E8                     u2950:
  6727  0015E8  8001               	bsf	___fladd@b^0,0,c
  6728  0015EA                     l3030:
  6729  0015EA  A010               	btfss	___fladd@grs^0,0,c
  6730  0015EC  EFFA  F00A         	goto	u2961
  6731  0015F0  EFFC  F00A         	goto	u2960
  6732  0015F4                     u2961:
  6733  0015F4  EF00  F00B         	goto	l3034
  6734  0015F8                     u2960:
  6735  0015F8  80D8               	bsf	status,0,c
  6736  0015FA  3610               	rlcf	___fladd@grs^0,f,c
  6737  0015FC  EF02  F00B         	goto	l3036
  6738  001600                     l3034:
  6739  001600  90D8               	bcf	status,0,c
  6740  001602  3610               	rlcf	___fladd@grs^0,f,c
  6741  001604                     l3036:
  6742  001604  500F               	movf	___fladd@bexp^0,w,c
  6743  001606  B4D8               	btfsc	status,2,c
  6744  001608  EF08  F00B         	goto	u2971
  6745  00160C  EF0A  F00B         	goto	u2970
  6746  001610                     u2971:
  6747  001610  EF0B  F00B         	goto	l3040
  6748  001614                     u2970:
  6749  001614  060F               	decf	___fladd@bexp^0,f,c
  6750  001616                     l3040:
  6751  001616  AE03               	btfss	(___fladd@b+2)^0,7,c
  6752  001618  EF10  F00B         	goto	u2981
  6753  00161C  EF12  F00B         	goto	u2980
  6754  001620                     u2981:
  6755  001620  EFE8  F00A         	goto	l3024
  6756  001624                     u2980:
  6757  001624                     l3042:
  6758  001624  0E00               	movlw	0
  6759  001626  6E0E               	movwf	___fladd@aexp^0,c
  6760  001628  AE10               	btfss	___fladd@grs^0,7,c
  6761  00162A  EF19  F00B         	goto	u2991
  6762  00162E  EF1B  F00B         	goto	u2990
  6763  001632                     u2991:
  6764  001632  EF33  F00B         	goto	l736
  6765  001636                     u2990:
  6766  001636  C010  F009         	movff	___fladd@grs,??___fladd
  6767  00163A  0E7F               	movlw	127
  6768  00163C  1609               	andwf	??___fladd^0,f,c
  6769  00163E  B4D8               	btfsc	status,2,c
  6770  001640  EF24  F00B         	goto	u3001
  6771  001644  EF26  F00B         	goto	u3000
  6772  001648                     u3001:
  6773  001648  EF2A  F00B         	goto	l737
  6774  00164C                     u3000:
  6775  00164C                     l3048:
  6776  00164C  0E01               	movlw	1
  6777  00164E  6E0E               	movwf	___fladd@aexp^0,c
  6778  001650  EF33  F00B         	goto	l736
  6779  001654                     l737:
  6780  001654  A001               	btfss	___fladd@b^0,0,c
  6781  001656  EF2F  F00B         	goto	u3011
  6782  00165A  EF31  F00B         	goto	u3010
  6783  00165E                     u3011:
  6784  00165E  EF33  F00B         	goto	l736
  6785  001662                     u3010:
  6786  001662  EF26  F00B         	goto	l3048
  6787  001666                     l736:
  6788  001666  500E               	movf	___fladd@aexp^0,w,c
  6789  001668  B4D8               	btfsc	status,2,c
  6790  00166A  EF39  F00B         	goto	u3021
  6791  00166E  EF3B  F00B         	goto	u3020
  6792  001672                     u3021:
  6793  001672  EF66  F00B         	goto	l3060
  6794  001676                     u3020:
  6795  001676  0E01               	movlw	1
  6796  001678  2601               	addwf	___fladd@b^0,f,c
  6797  00167A  0E00               	movlw	0
  6798  00167C  2202               	addwfc	(___fladd@b+1)^0,f,c
  6799  00167E  2203               	addwfc	(___fladd@b+2)^0,f,c
  6800  001680  2204               	addwfc	(___fladd@b+3)^0,f,c
  6801  001682  A004               	btfss	(___fladd@b+3)^0,0,c
  6802  001684  EF46  F00B         	goto	u3031
  6803  001688  EF48  F00B         	goto	u3030
  6804  00168C                     u3031:
  6805  00168C  EF66  F00B         	goto	l3060
  6806  001690                     u3030:
  6807  001690  C001  F009         	movff	___fladd@b,??___fladd
  6808  001694  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6809  001698  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6810  00169C  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6811  0016A0  340C               	rlcf	(??___fladd+3)^0,w,c
  6812  0016A2  320C               	rrcf	(??___fladd+3)^0,f,c
  6813  0016A4  320B               	rrcf	(??___fladd+2)^0,f,c
  6814  0016A6  320A               	rrcf	(??___fladd+1)^0,f,c
  6815  0016A8  3209               	rrcf	??___fladd^0,f,c
  6816  0016AA  C009  F001         	movff	??___fladd,___fladd@b
  6817  0016AE  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6818  0016B2  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6819  0016B6  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6820  0016BA  280F               	incf	___fladd@bexp^0,w,c
  6821  0016BC  B4D8               	btfsc	status,2,c
  6822  0016BE  EF63  F00B         	goto	u3041
  6823  0016C2  EF65  F00B         	goto	u3040
  6824  0016C6                     u3041:
  6825  0016C6  EF66  F00B         	goto	l3060
  6826  0016CA                     u3040:
  6827  0016CA  2A0F               	incf	___fladd@bexp^0,f,c
  6828  0016CC                     l3060:
  6829  0016CC  280F               	incf	___fladd@bexp^0,w,c
  6830  0016CE  B4D8               	btfsc	status,2,c
  6831  0016D0  EF6C  F00B         	goto	u3051
  6832  0016D4  EF6E  F00B         	goto	u3050
  6833  0016D8                     u3051:
  6834  0016D8  EF76  F00B         	goto	l3064
  6835  0016DC                     u3050:
  6836  0016DC  500F               	movf	___fladd@bexp^0,w,c
  6837  0016DE  A4D8               	btfss	status,2,c
  6838  0016E0  EF74  F00B         	goto	u3061
  6839  0016E4  EF76  F00B         	goto	u3060
  6840  0016E8                     u3061:
  6841  0016E8  EF88  F00B         	goto	l3068
  6842  0016EC                     u3060:
  6843  0016EC                     l3064:
  6844  0016EC  0E00               	movlw	0
  6845  0016EE  6E01               	movwf	___fladd@b^0,c
  6846  0016F0  0E00               	movlw	0
  6847  0016F2  6E02               	movwf	(___fladd@b+1)^0,c
  6848  0016F4  0E00               	movlw	0
  6849  0016F6  6E03               	movwf	(___fladd@b+2)^0,c
  6850  0016F8  0E00               	movlw	0
  6851  0016FA  6E04               	movwf	(___fladd@b+3)^0,c
  6852  0016FC  500F               	movf	___fladd@bexp^0,w,c
  6853  0016FE  A4D8               	btfss	status,2,c
  6854  001700  EF84  F00B         	goto	u3071
  6855  001704  EF86  F00B         	goto	u3070
  6856  001708                     u3071:
  6857  001708  EF88  F00B         	goto	l3068
  6858  00170C                     u3070:
  6859  00170C  0E00               	movlw	0
  6860  00170E  6E0D               	movwf	___fladd@signs^0,c
  6861  001710                     l3068:
  6862  001710  A00F               	btfss	___fladd@bexp^0,0,c
  6863  001712  EF8D  F00B         	goto	u3081
  6864  001716  EF8F  F00B         	goto	u3080
  6865  00171A                     u3081:
  6866  00171A  EF92  F00B         	goto	l3072
  6867  00171E                     u3080:
  6868  00171E  8E03               	bsf	(___fladd@b+2)^0,7,c
  6869  001720  EF93  F00B         	goto	l3074
  6870  001724                     l3072:
  6871  001724  9E03               	bcf	(___fladd@b+2)^0,7,c
  6872  001726                     l3074:
  6873  001726  90D8               	bcf	status,0,c
  6874  001728  300F               	rrcf	___fladd@bexp^0,w,c
  6875  00172A  6E04               	movwf	(___fladd@b+3)^0,c
  6876  00172C  AE0D               	btfss	___fladd@signs^0,7,c
  6877  00172E  EF9B  F00B         	goto	u3091
  6878  001732  EF9D  F00B         	goto	u3090
  6879  001736                     u3091:
  6880  001736  EF9E  F00B         	goto	l3080
  6881  00173A                     u3090:
  6882  00173A  8E04               	bsf	(___fladd@b+3)^0,7,c
  6883  00173C                     l3080:
  6884  00173C  C001  F001         	movff	___fladd@b,?___fladd
  6885  001740  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6886  001744  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6887  001748  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6888  00174C                     l719:
  6889  00174C  0012               	return		;funcret
  6890  00174E                     __end_of___fladd:
  6891                           	callstack 0
  6892                           
  6893 ;; *************** function ___flneg *****************
  6894 ;; Defined at:
  6895 ;;		line 15 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\flneg.c"
  6896 ;; Parameters:    Size  Location     Type
  6897 ;;  f1              4    0[COMRAM] unsigned char 
  6898 ;; Auto vars:     Size  Location     Type
  6899 ;;		None
  6900 ;; Return value:  Size  Location     Type
  6901 ;;                  4    0[COMRAM] unsigned char 
  6902 ;; Registers used:
  6903 ;;		wreg, status,2, status,0
  6904 ;; Tracked objects:
  6905 ;;		On entry : 0/0
  6906 ;;		On exit  : 0/0
  6907 ;;		Unchanged: 0/0
  6908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6909 ;;      Params:         4       0       0       0       0       0       0
  6910 ;;      Locals:         0       0       0       0       0       0       0
  6911 ;;      Temps:          0       0       0       0       0       0       0
  6912 ;;      Totals:         4       0       0       0       0       0       0
  6913 ;;Total ram usage:        4 bytes
  6914 ;; Hardware stack levels used:    1
  6915 ;; This function calls:
  6916 ;;		Nothing
  6917 ;; This function is called by:
  6918 ;;		_efgtoa
  6919 ;; This function uses a non-reentrant model
  6920 ;;
  6921                           
  6922                           	psect	text23
  6923  0039DE                     __ptext23:
  6924                           	callstack 0
  6925  0039DE                     ___flneg:
  6926                           	callstack 25
  6927  0039DE  5001               	movf	___flneg@f1^0,w,c
  6928  0039E0  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6929  0039E2  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6930  0039E4  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6931  0039E6  B4D8               	btfsc	status,2,c
  6932  0039E8  EFF8  F01C         	goto	u3761
  6933  0039EC  EFFA  F01C         	goto	u3760
  6934  0039F0                     u3761:
  6935  0039F0  EF02  F01D         	goto	l3508
  6936  0039F4                     u3760:
  6937  0039F4  0E00               	movlw	0
  6938  0039F6  1A01               	xorwf	___flneg@f1^0,f,c
  6939  0039F8  0E00               	movlw	0
  6940  0039FA  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6941  0039FC  0E00               	movlw	0
  6942  0039FE  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6943  003A00  0E80               	movlw	128
  6944  003A02  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6945  003A04                     l3508:
  6946  003A04  C001  F001         	movff	___flneg@f1,?___flneg
  6947  003A08  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6948  003A0C  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6949  003A10  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6950  003A14  0012               	return		;funcret
  6951  003A16                     __end_of___flneg:
  6952                           	callstack 0
  6953                           
  6954 ;; *************** function ___flmul *****************
  6955 ;; Defined at:
  6956 ;;		line 8 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
  6957 ;; Parameters:    Size  Location     Type
  6958 ;;  b               4    0[COMRAM] unsigned char 
  6959 ;;  a               4    4[COMRAM] unsigned char 
  6960 ;; Auto vars:     Size  Location     Type
  6961 ;;  prod            4   19[COMRAM] struct .
  6962 ;;  grs             4   13[COMRAM] unsigned long 
  6963 ;;  temp            2   23[COMRAM] struct .
  6964 ;;  bexp            1   18[COMRAM] unsigned char 
  6965 ;;  aexp            1   17[COMRAM] unsigned char 
  6966 ;;  sign            1   12[COMRAM] unsigned char 
  6967 ;; Return value:  Size  Location     Type
  6968 ;;                  4    0[COMRAM] unsigned char 
  6969 ;; Registers used:
  6970 ;;		wreg, status,2, status,0, prodl, prodh
  6971 ;; Tracked objects:
  6972 ;;		On entry : 0/0
  6973 ;;		On exit  : 0/0
  6974 ;;		Unchanged: 0/0
  6975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6976 ;;      Params:         8       0       0       0       0       0       0
  6977 ;;      Locals:        13       0       0       0       0       0       0
  6978 ;;      Temps:          4       0       0       0       0       0       0
  6979 ;;      Totals:        25       0       0       0       0       0       0
  6980 ;;Total ram usage:       25 bytes
  6981 ;; Hardware stack levels used:    1
  6982 ;; This function calls:
  6983 ;;		Nothing
  6984 ;; This function is called by:
  6985 ;;		_efgtoa
  6986 ;; This function uses a non-reentrant model
  6987 ;;
  6988                           
  6989                           	psect	text24
  6990  001BB8                     __ptext24:
  6991                           	callstack 0
  6992  001BB8                     ___flmul:
  6993                           	callstack 25
  6994  001BB8  5004               	movf	(___flmul@b+3)^0,w,c
  6995  001BBA  0B80               	andlw	128
  6996  001BBC  6E0D               	movwf	___flmul@sign^0,c
  6997  001BBE  5004               	movf	(___flmul@b+3)^0,w,c
  6998  001BC0  2404               	addwf	(___flmul@b+3)^0,w,c
  6999  001BC2  6E13               	movwf	___flmul@bexp^0,c
  7000  001BC4  AE03               	btfss	(___flmul@b+2)^0,7,c
  7001  001BC6  EFE7  F00D         	goto	u3371
  7002  001BCA  EFE9  F00D         	goto	u3370
  7003  001BCE                     u3371:
  7004  001BCE  EFEA  F00D         	goto	l3256
  7005  001BD2                     u3370:
  7006  001BD2  8013               	bsf	___flmul@bexp^0,0,c
  7007  001BD4                     l3256:
  7008  001BD4  5013               	movf	___flmul@bexp^0,w,c
  7009  001BD6  B4D8               	btfsc	status,2,c
  7010  001BD8  EFF0  F00D         	goto	u3381
  7011  001BDC  EFF2  F00D         	goto	u3380
  7012  001BE0                     u3381:
  7013  001BE0  EF05  F00E         	goto	l3264
  7014  001BE4                     u3380:
  7015  001BE4  2813               	incf	___flmul@bexp^0,w,c
  7016  001BE6  A4D8               	btfss	status,2,c
  7017  001BE8  EFF8  F00D         	goto	u3391
  7018  001BEC  EFFA  F00D         	goto	u3390
  7019  001BF0                     u3391:
  7020  001BF0  EF02  F00E         	goto	l3262
  7021  001BF4                     u3390:
  7022  001BF4  0E00               	movlw	0
  7023  001BF6  6E01               	movwf	___flmul@b^0,c
  7024  001BF8  0E00               	movlw	0
  7025  001BFA  6E02               	movwf	(___flmul@b+1)^0,c
  7026  001BFC  0E00               	movlw	0
  7027  001BFE  6E03               	movwf	(___flmul@b+2)^0,c
  7028  001C00  0E00               	movlw	0
  7029  001C02  6E04               	movwf	(___flmul@b+3)^0,c
  7030  001C04                     l3262:
  7031  001C04  8E03               	bsf	(___flmul@b+2)^0,7,c
  7032  001C06  EF0D  F00E         	goto	l3266
  7033  001C0A                     l3264:
  7034  001C0A  0E00               	movlw	0
  7035  001C0C  6E01               	movwf	___flmul@b^0,c
  7036  001C0E  0E00               	movlw	0
  7037  001C10  6E02               	movwf	(___flmul@b+1)^0,c
  7038  001C12  0E00               	movlw	0
  7039  001C14  6E03               	movwf	(___flmul@b+2)^0,c
  7040  001C16  0E00               	movlw	0
  7041  001C18  6E04               	movwf	(___flmul@b+3)^0,c
  7042  001C1A                     l3266:
  7043  001C1A  5008               	movf	(___flmul@a+3)^0,w,c
  7044  001C1C  0B80               	andlw	128
  7045  001C1E  1A0D               	xorwf	___flmul@sign^0,f,c
  7046  001C20  5008               	movf	(___flmul@a+3)^0,w,c
  7047  001C22  2408               	addwf	(___flmul@a+3)^0,w,c
  7048  001C24  6E12               	movwf	___flmul@aexp^0,c
  7049  001C26  AE07               	btfss	(___flmul@a+2)^0,7,c
  7050  001C28  EF18  F00E         	goto	u3401
  7051  001C2C  EF1A  F00E         	goto	u3400
  7052  001C30                     u3401:
  7053  001C30  EF1B  F00E         	goto	l3274
  7054  001C34                     u3400:
  7055  001C34  8012               	bsf	___flmul@aexp^0,0,c
  7056  001C36                     l3274:
  7057  001C36  5012               	movf	___flmul@aexp^0,w,c
  7058  001C38  B4D8               	btfsc	status,2,c
  7059  001C3A  EF21  F00E         	goto	u3411
  7060  001C3E  EF23  F00E         	goto	u3410
  7061  001C42                     u3411:
  7062  001C42  EF36  F00E         	goto	l3282
  7063  001C46                     u3410:
  7064  001C46  2812               	incf	___flmul@aexp^0,w,c
  7065  001C48  A4D8               	btfss	status,2,c
  7066  001C4A  EF29  F00E         	goto	u3421
  7067  001C4E  EF2B  F00E         	goto	u3420
  7068  001C52                     u3421:
  7069  001C52  EF33  F00E         	goto	l3280
  7070  001C56                     u3420:
  7071  001C56  0E00               	movlw	0
  7072  001C58  6E05               	movwf	___flmul@a^0,c
  7073  001C5A  0E00               	movlw	0
  7074  001C5C  6E06               	movwf	(___flmul@a+1)^0,c
  7075  001C5E  0E00               	movlw	0
  7076  001C60  6E07               	movwf	(___flmul@a+2)^0,c
  7077  001C62  0E00               	movlw	0
  7078  001C64  6E08               	movwf	(___flmul@a+3)^0,c
  7079  001C66                     l3280:
  7080  001C66  8E07               	bsf	(___flmul@a+2)^0,7,c
  7081  001C68  EF3E  F00E         	goto	l796
  7082  001C6C                     l3282:
  7083  001C6C  0E00               	movlw	0
  7084  001C6E  6E05               	movwf	___flmul@a^0,c
  7085  001C70  0E00               	movlw	0
  7086  001C72  6E06               	movwf	(___flmul@a+1)^0,c
  7087  001C74  0E00               	movlw	0
  7088  001C76  6E07               	movwf	(___flmul@a+2)^0,c
  7089  001C78  0E00               	movlw	0
  7090  001C7A  6E08               	movwf	(___flmul@a+3)^0,c
  7091  001C7C                     l796:
  7092  001C7C  5012               	movf	___flmul@aexp^0,w,c
  7093  001C7E  B4D8               	btfsc	status,2,c
  7094  001C80  EF44  F00E         	goto	u3431
  7095  001C84  EF46  F00E         	goto	u3430
  7096  001C88                     u3431:
  7097  001C88  EF4E  F00E         	goto	l3286
  7098  001C8C                     u3430:
  7099  001C8C  5013               	movf	___flmul@bexp^0,w,c
  7100  001C8E  A4D8               	btfss	status,2,c
  7101  001C90  EF4C  F00E         	goto	u3441
  7102  001C94  EF4E  F00E         	goto	u3440
  7103  001C98                     u3441:
  7104  001C98  EF58  F00E         	goto	l3290
  7105  001C9C                     u3440:
  7106  001C9C                     l3286:
  7107  001C9C  0E00               	movlw	0
  7108  001C9E  6E01               	movwf	?___flmul^0,c
  7109  001CA0  0E00               	movlw	0
  7110  001CA2  6E02               	movwf	(?___flmul+1)^0,c
  7111  001CA4  0E00               	movlw	0
  7112  001CA6  6E03               	movwf	(?___flmul+2)^0,c
  7113  001CA8  0E00               	movlw	0
  7114  001CAA  6E04               	movwf	(?___flmul+3)^0,c
  7115  001CAC  EFF0  F00F         	goto	l800
  7116  001CB0                     l3290:
  7117  001CB0  5007               	movf	(___flmul@a+2)^0,w,c
  7118  001CB2  0201               	mulwf	___flmul@b^0,c
  7119  001CB4  CFF3 F018          	movff	prodl,___flmul@temp
  7120  001CB8  CFF4 F019          	movff	prodh,___flmul@temp+1
  7121  001CBC  5018               	movf	___flmul@temp^0,w,c
  7122  001CBE  6E0E               	movwf	___flmul@grs^0,c
  7123  001CC0  6A0F               	clrf	(___flmul@grs+1)^0,c
  7124  001CC2  6A10               	clrf	(___flmul@grs+2)^0,c
  7125  001CC4  6A11               	clrf	(___flmul@grs+3)^0,c
  7126  001CC6  5019               	movf	(___flmul@temp+1)^0,w,c
  7127  001CC8  6E14               	movwf	___flmul@prod^0,c
  7128  001CCA  6A15               	clrf	(___flmul@prod+1)^0,c
  7129  001CCC  6A16               	clrf	(___flmul@prod+2)^0,c
  7130  001CCE  6A17               	clrf	(___flmul@prod+3)^0,c
  7131  001CD0  5006               	movf	(___flmul@a+1)^0,w,c
  7132  001CD2  0202               	mulwf	(___flmul@b+1)^0,c
  7133  001CD4  CFF3 F018          	movff	prodl,___flmul@temp
  7134  001CD8  CFF4 F019          	movff	prodh,___flmul@temp+1
  7135  001CDC  5018               	movf	___flmul@temp^0,w,c
  7136  001CDE  260E               	addwf	___flmul@grs^0,f,c
  7137  001CE0  0E00               	movlw	0
  7138  001CE2  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7139  001CE4  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7140  001CE6  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7141  001CE8  5019               	movf	(___flmul@temp+1)^0,w,c
  7142  001CEA  2614               	addwf	___flmul@prod^0,f,c
  7143  001CEC  0E00               	movlw	0
  7144  001CEE  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7145  001CF0  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7146  001CF2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7147  001CF4  5005               	movf	___flmul@a^0,w,c
  7148  001CF6  0203               	mulwf	(___flmul@b+2)^0,c
  7149  001CF8  CFF3 F018          	movff	prodl,___flmul@temp
  7150  001CFC  CFF4 F019          	movff	prodh,___flmul@temp+1
  7151  001D00  5018               	movf	___flmul@temp^0,w,c
  7152  001D02  260E               	addwf	___flmul@grs^0,f,c
  7153  001D04  0E00               	movlw	0
  7154  001D06  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7155  001D08  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7156  001D0A  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7157  001D0C  5019               	movf	(___flmul@temp+1)^0,w,c
  7158  001D0E  2614               	addwf	___flmul@prod^0,f,c
  7159  001D10  0E00               	movlw	0
  7160  001D12  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7161  001D14  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7162  001D16  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7163  001D18  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7164  001D1C  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7165  001D20  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7166  001D24  6A0E               	clrf	___flmul@grs^0,c
  7167  001D26  5005               	movf	___flmul@a^0,w,c
  7168  001D28  0202               	mulwf	(___flmul@b+1)^0,c
  7169  001D2A  CFF3 F018          	movff	prodl,___flmul@temp
  7170  001D2E  CFF4 F019          	movff	prodh,___flmul@temp+1
  7171  001D32  5018               	movf	___flmul@temp^0,w,c
  7172  001D34  260E               	addwf	___flmul@grs^0,f,c
  7173  001D36  5019               	movf	(___flmul@temp+1)^0,w,c
  7174  001D38  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7175  001D3A  0E00               	movlw	0
  7176  001D3C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7177  001D3E  0E00               	movlw	0
  7178  001D40  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7179  001D42  5006               	movf	(___flmul@a+1)^0,w,c
  7180  001D44  0201               	mulwf	___flmul@b^0,c
  7181  001D46  CFF3 F018          	movff	prodl,___flmul@temp
  7182  001D4A  CFF4 F019          	movff	prodh,___flmul@temp+1
  7183  001D4E  5018               	movf	___flmul@temp^0,w,c
  7184  001D50  260E               	addwf	___flmul@grs^0,f,c
  7185  001D52  5019               	movf	(___flmul@temp+1)^0,w,c
  7186  001D54  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7187  001D56  0E00               	movlw	0
  7188  001D58  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7189  001D5A  0E00               	movlw	0
  7190  001D5C  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7191  001D5E  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7192  001D62  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7193  001D66  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7194  001D6A  6A0E               	clrf	___flmul@grs^0,c
  7195  001D6C  5005               	movf	___flmul@a^0,w,c
  7196  001D6E  0201               	mulwf	___flmul@b^0,c
  7197  001D70  CFF3 F018          	movff	prodl,___flmul@temp
  7198  001D74  CFF4 F019          	movff	prodh,___flmul@temp+1
  7199  001D78  5018               	movf	___flmul@temp^0,w,c
  7200  001D7A  260E               	addwf	___flmul@grs^0,f,c
  7201  001D7C  5019               	movf	(___flmul@temp+1)^0,w,c
  7202  001D7E  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7203  001D80  0E00               	movlw	0
  7204  001D82  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7205  001D84  0E00               	movlw	0
  7206  001D86  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7207  001D88  5007               	movf	(___flmul@a+2)^0,w,c
  7208  001D8A  0202               	mulwf	(___flmul@b+1)^0,c
  7209  001D8C  CFF3 F018          	movff	prodl,___flmul@temp
  7210  001D90  CFF4 F019          	movff	prodh,___flmul@temp+1
  7211  001D94  5018               	movf	___flmul@temp^0,w,c
  7212  001D96  2614               	addwf	___flmul@prod^0,f,c
  7213  001D98  5019               	movf	(___flmul@temp+1)^0,w,c
  7214  001D9A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7215  001D9C  0E00               	movlw	0
  7216  001D9E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7217  001DA0  0E00               	movlw	0
  7218  001DA2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7219  001DA4  5006               	movf	(___flmul@a+1)^0,w,c
  7220  001DA6  0203               	mulwf	(___flmul@b+2)^0,c
  7221  001DA8  CFF3 F018          	movff	prodl,___flmul@temp
  7222  001DAC  CFF4 F019          	movff	prodh,___flmul@temp+1
  7223  001DB0  5018               	movf	___flmul@temp^0,w,c
  7224  001DB2  2614               	addwf	___flmul@prod^0,f,c
  7225  001DB4  5019               	movf	(___flmul@temp+1)^0,w,c
  7226  001DB6  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7227  001DB8  0E00               	movlw	0
  7228  001DBA  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7229  001DBC  0E00               	movlw	0
  7230  001DBE  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7231  001DC0  5007               	movf	(___flmul@a+2)^0,w,c
  7232  001DC2  0203               	mulwf	(___flmul@b+2)^0,c
  7233  001DC4  CFF3 F018          	movff	prodl,___flmul@temp
  7234  001DC8  CFF4 F019          	movff	prodh,___flmul@temp+1
  7235  001DCC  5018               	movf	___flmul@temp^0,w,c
  7236  001DCE  6E09               	movwf	??___flmul^0,c
  7237  001DD0  5019               	movf	(___flmul@temp+1)^0,w,c
  7238  001DD2  6E0A               	movwf	(??___flmul+1)^0,c
  7239  001DD4  6A0B               	clrf	(??___flmul+2)^0,c
  7240  001DD6  6A0C               	clrf	(??___flmul+3)^0,c
  7241  001DD8  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  7242  001DDC  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  7243  001DE0  C009  F00A         	movff	??___flmul,??___flmul+1
  7244  001DE4  6A09               	clrf	??___flmul^0,c
  7245  001DE6  5009               	movf	??___flmul^0,w,c
  7246  001DE8  2614               	addwf	___flmul@prod^0,f,c
  7247  001DEA  500A               	movf	(??___flmul+1)^0,w,c
  7248  001DEC  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7249  001DEE  500B               	movf	(??___flmul+2)^0,w,c
  7250  001DF0  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7251  001DF2  500C               	movf	(??___flmul+3)^0,w,c
  7252  001DF4  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7253  001DF6  C00E  F009         	movff	___flmul@grs,??___flmul
  7254  001DFA  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  7255  001DFE  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  7256  001E02  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  7257  001E06  0E19               	movlw	25
  7258  001E08  EF0B  F00F         	goto	u3450
  7259  001E0C                     u3455:
  7260  001E0C  90D8               	bcf	status,0,c
  7261  001E0E  320C               	rrcf	(??___flmul+3)^0,f,c
  7262  001E10  320B               	rrcf	(??___flmul+2)^0,f,c
  7263  001E12  320A               	rrcf	(??___flmul+1)^0,f,c
  7264  001E14  3209               	rrcf	??___flmul^0,f,c
  7265  001E16                     u3450:
  7266  001E16  2EE8               	decfsz	wreg,f,c
  7267  001E18  EF06  F00F         	goto	u3455
  7268  001E1C  5009               	movf	??___flmul^0,w,c
  7269  001E1E  2614               	addwf	___flmul@prod^0,f,c
  7270  001E20  500A               	movf	(??___flmul+1)^0,w,c
  7271  001E22  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7272  001E24  500B               	movf	(??___flmul+2)^0,w,c
  7273  001E26  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7274  001E28  500C               	movf	(??___flmul+3)^0,w,c
  7275  001E2A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7276  001E2C  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7277  001E30  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7278  001E34  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7279  001E38  6A0E               	clrf	___flmul@grs^0,c
  7280  001E3A  5012               	movf	___flmul@aexp^0,w,c
  7281  001E3C  C013  F009         	movff	___flmul@bexp,??___flmul
  7282  001E40  6A0A               	clrf	(??___flmul+1)^0,c
  7283  001E42  2609               	addwf	??___flmul^0,f,c
  7284  001E44  0E00               	movlw	0
  7285  001E46  220A               	addwfc	(??___flmul+1)^0,f,c
  7286  001E48  0E82               	movlw	130
  7287  001E4A  2409               	addwf	??___flmul^0,w,c
  7288  001E4C  6E18               	movwf	___flmul@temp^0,c
  7289  001E4E  0EFF               	movlw	255
  7290  001E50  200A               	addwfc	(??___flmul+1)^0,w,c
  7291  001E52  6E19               	movwf	(___flmul@temp+1)^0,c
  7292  001E54  EF41  F00F         	goto	l3338
  7293  001E58                     l3332:
  7294  001E58  90D8               	bcf	status,0,c
  7295  001E5A  3614               	rlcf	___flmul@prod^0,f,c
  7296  001E5C  3615               	rlcf	(___flmul@prod+1)^0,f,c
  7297  001E5E  3616               	rlcf	(___flmul@prod+2)^0,f,c
  7298  001E60  3617               	rlcf	(___flmul@prod+3)^0,f,c
  7299  001E62  AE11               	btfss	(___flmul@grs+3)^0,7,c
  7300  001E64  EF36  F00F         	goto	u3461
  7301  001E68  EF38  F00F         	goto	u3460
  7302  001E6C                     u3461:
  7303  001E6C  EF39  F00F         	goto	l803
  7304  001E70                     u3460:
  7305  001E70  8014               	bsf	___flmul@prod^0,0,c
  7306  001E72                     l803:
  7307  001E72  90D8               	bcf	status,0,c
  7308  001E74  360E               	rlcf	___flmul@grs^0,f,c
  7309  001E76  360F               	rlcf	(___flmul@grs+1)^0,f,c
  7310  001E78  3610               	rlcf	(___flmul@grs+2)^0,f,c
  7311  001E7A  3611               	rlcf	(___flmul@grs+3)^0,f,c
  7312  001E7C  0618               	decf	___flmul@temp^0,f,c
  7313  001E7E  A0D8               	btfss	status,0,c
  7314  001E80  0619               	decf	(___flmul@temp+1)^0,f,c
  7315  001E82                     l3338:
  7316  001E82  AE16               	btfss	(___flmul@prod+2)^0,7,c
  7317  001E84  EF46  F00F         	goto	u3471
  7318  001E88  EF48  F00F         	goto	u3470
  7319  001E8C                     u3471:
  7320  001E8C  EF2C  F00F         	goto	l3332
  7321  001E90                     u3470:
  7322  001E90  0E00               	movlw	0
  7323  001E92  6E12               	movwf	___flmul@aexp^0,c
  7324  001E94  AE11               	btfss	(___flmul@grs+3)^0,7,c
  7325  001E96  EF4F  F00F         	goto	u3481
  7326  001E9A  EF51  F00F         	goto	u3480
  7327  001E9E                     u3481:
  7328  001E9E  EF75  F00F         	goto	l805
  7329  001EA2                     u3480:
  7330  001EA2  0EFF               	movlw	255
  7331  001EA4  140E               	andwf	___flmul@grs^0,w,c
  7332  001EA6  6E09               	movwf	??___flmul^0,c
  7333  001EA8  0EFF               	movlw	255
  7334  001EAA  140F               	andwf	(___flmul@grs+1)^0,w,c
  7335  001EAC  6E0A               	movwf	(??___flmul+1)^0,c
  7336  001EAE  0EFF               	movlw	255
  7337  001EB0  1410               	andwf	(___flmul@grs+2)^0,w,c
  7338  001EB2  6E0B               	movwf	(??___flmul+2)^0,c
  7339  001EB4  0E7F               	movlw	127
  7340  001EB6  1411               	andwf	(___flmul@grs+3)^0,w,c
  7341  001EB8  6E0C               	movwf	(??___flmul+3)^0,c
  7342  001EBA  5009               	movf	??___flmul^0,w,c
  7343  001EBC  100A               	iorwf	(??___flmul+1)^0,w,c
  7344  001EBE  100B               	iorwf	(??___flmul+2)^0,w,c
  7345  001EC0  100C               	iorwf	(??___flmul+3)^0,w,c
  7346  001EC2  B4D8               	btfsc	status,2,c
  7347  001EC4  EF66  F00F         	goto	u3491
  7348  001EC8  EF68  F00F         	goto	u3490
  7349  001ECC                     u3491:
  7350  001ECC  EF6C  F00F         	goto	l806
  7351  001ED0                     u3490:
  7352  001ED0                     l3346:
  7353  001ED0  0E01               	movlw	1
  7354  001ED2  6E12               	movwf	___flmul@aexp^0,c
  7355  001ED4  EF75  F00F         	goto	l805
  7356  001ED8                     l806:
  7357  001ED8  A014               	btfss	___flmul@prod^0,0,c
  7358  001EDA  EF71  F00F         	goto	u3501
  7359  001EDE  EF73  F00F         	goto	u3500
  7360  001EE2                     u3501:
  7361  001EE2  EF75  F00F         	goto	l805
  7362  001EE6                     u3500:
  7363  001EE6  EF68  F00F         	goto	l3346
  7364  001EEA                     l805:
  7365  001EEA  5012               	movf	___flmul@aexp^0,w,c
  7366  001EEC  B4D8               	btfsc	status,2,c
  7367  001EEE  EF7B  F00F         	goto	u3511
  7368  001EF2  EF7D  F00F         	goto	u3510
  7369  001EF6                     u3511:
  7370  001EF6  EFA1  F00F         	goto	l3358
  7371  001EFA                     u3510:
  7372  001EFA  0E01               	movlw	1
  7373  001EFC  2614               	addwf	___flmul@prod^0,f,c
  7374  001EFE  0E00               	movlw	0
  7375  001F00  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7376  001F02  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7377  001F04  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7378  001F06  A017               	btfss	(___flmul@prod+3)^0,0,c
  7379  001F08  EF88  F00F         	goto	u3521
  7380  001F0C  EF8A  F00F         	goto	u3520
  7381  001F10                     u3521:
  7382  001F10  EFA1  F00F         	goto	l3358
  7383  001F14                     u3520:
  7384  001F14  C014  F009         	movff	___flmul@prod,??___flmul
  7385  001F18  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  7386  001F1C  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  7387  001F20  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  7388  001F24  340C               	rlcf	(??___flmul+3)^0,w,c
  7389  001F26  320C               	rrcf	(??___flmul+3)^0,f,c
  7390  001F28  320B               	rrcf	(??___flmul+2)^0,f,c
  7391  001F2A  320A               	rrcf	(??___flmul+1)^0,f,c
  7392  001F2C  3209               	rrcf	??___flmul^0,f,c
  7393  001F2E  C009  F014         	movff	??___flmul,___flmul@prod
  7394  001F32  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  7395  001F36  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  7396  001F3A  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  7397  001F3E  4A18               	infsnz	___flmul@temp^0,f,c
  7398  001F40  2A19               	incf	(___flmul@temp+1)^0,f,c
  7399  001F42                     l3358:
  7400  001F42  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  7401  001F44  EFAC  F00F         	goto	u3531
  7402  001F48  5019               	movf	(___flmul@temp+1)^0,w,c
  7403  001F4A  E108               	bnz	u3530
  7404  001F4C  2818               	incf	___flmul@temp^0,w,c
  7405  001F4E  A0D8               	btfss	status,0,c
  7406  001F50  EFAC  F00F         	goto	u3531
  7407  001F54  EFAE  F00F         	goto	u3530
  7408  001F58                     u3531:
  7409  001F58  EFB8  F00F         	goto	l3362
  7410  001F5C                     u3530:
  7411  001F5C  0E00               	movlw	0
  7412  001F5E  6E14               	movwf	___flmul@prod^0,c
  7413  001F60  0E00               	movlw	0
  7414  001F62  6E15               	movwf	(___flmul@prod+1)^0,c
  7415  001F64  0E80               	movlw	128
  7416  001F66  6E16               	movwf	(___flmul@prod+2)^0,c
  7417  001F68  0E7F               	movlw	127
  7418  001F6A  6E17               	movwf	(___flmul@prod+3)^0,c
  7419  001F6C  EFE6  F00F         	goto	l3374
  7420  001F70                     l3362:
  7421  001F70  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  7422  001F72  EFC5  F00F         	goto	u3540
  7423  001F76  5019               	movf	(___flmul@temp+1)^0,w,c
  7424  001F78  E106               	bnz	u3541
  7425  001F7A  0418               	decf	___flmul@temp^0,w,c
  7426  001F7C  B0D8               	btfsc	status,0,c
  7427  001F7E  EFC3  F00F         	goto	u3541
  7428  001F82  EFC5  F00F         	goto	u3540
  7429  001F86                     u3541:
  7430  001F86  EFD1  F00F         	goto	l813
  7431  001F8A                     u3540:
  7432  001F8A  0E00               	movlw	0
  7433  001F8C  6E14               	movwf	___flmul@prod^0,c
  7434  001F8E  0E00               	movlw	0
  7435  001F90  6E15               	movwf	(___flmul@prod+1)^0,c
  7436  001F92  0E00               	movlw	0
  7437  001F94  6E16               	movwf	(___flmul@prod+2)^0,c
  7438  001F96  0E00               	movlw	0
  7439  001F98  6E17               	movwf	(___flmul@prod+3)^0,c
  7440  001F9A  0E00               	movlw	0
  7441  001F9C  6E0D               	movwf	___flmul@sign^0,c
  7442  001F9E  EFE6  F00F         	goto	l3374
  7443  001FA2                     l813:
  7444  001FA2  C018  F013         	movff	___flmul@temp,___flmul@bexp
  7445  001FA6  0EFF               	movlw	255
  7446  001FA8  1614               	andwf	___flmul@prod^0,f,c
  7447  001FAA  0EFF               	movlw	255
  7448  001FAC  1615               	andwf	(___flmul@prod+1)^0,f,c
  7449  001FAE  0E7F               	movlw	127
  7450  001FB0  1616               	andwf	(___flmul@prod+2)^0,f,c
  7451  001FB2  0E00               	movlw	0
  7452  001FB4  1617               	andwf	(___flmul@prod+3)^0,f,c
  7453  001FB6  A013               	btfss	___flmul@bexp^0,0,c
  7454  001FB8  EFE0  F00F         	goto	u3551
  7455  001FBC  EFE2  F00F         	goto	u3550
  7456  001FC0                     u3551:
  7457  001FC0  EFE3  F00F         	goto	l3372
  7458  001FC4                     u3550:
  7459  001FC4  8E16               	bsf	(___flmul@prod+2)^0,7,c
  7460  001FC6                     l3372:
  7461  001FC6  90D8               	bcf	status,0,c
  7462  001FC8  3013               	rrcf	___flmul@bexp^0,w,c
  7463  001FCA  6E17               	movwf	(___flmul@prod+3)^0,c
  7464  001FCC                     l3374:
  7465  001FCC  500D               	movf	___flmul@sign^0,w,c
  7466  001FCE  1217               	iorwf	(___flmul@prod+3)^0,f,c
  7467  001FD0  C014  F001         	movff	___flmul@prod,?___flmul
  7468  001FD4  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  7469  001FD8  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  7470  001FDC  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  7471  001FE0                     l800:
  7472  001FE0  0012               	return		;funcret
  7473  001FE2                     __end_of___flmul:
  7474                           	callstack 0
  7475                           
  7476 ;; *************** function ___flge *****************
  7477 ;; Defined at:
  7478 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\flge.c"
  7479 ;; Parameters:    Size  Location     Type
  7480 ;;  ff1             4   25[COMRAM] unsigned char 
  7481 ;;  ff2             4   29[COMRAM] unsigned char 
  7482 ;; Auto vars:     Size  Location     Type
  7483 ;;		None
  7484 ;; Return value:  Size  Location     Type
  7485 ;;		None               void
  7486 ;; Registers used:
  7487 ;;		wreg, status,2, status,0
  7488 ;; Tracked objects:
  7489 ;;		On entry : 0/0
  7490 ;;		On exit  : 0/0
  7491 ;;		Unchanged: 0/0
  7492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7493 ;;      Params:         8       0       0       0       0       0       0
  7494 ;;      Locals:         0       0       0       0       0       0       0
  7495 ;;      Temps:          4       0       0       0       0       0       0
  7496 ;;      Totals:        12       0       0       0       0       0       0
  7497 ;;Total ram usage:       12 bytes
  7498 ;; Hardware stack levels used:    1
  7499 ;; This function calls:
  7500 ;;		Nothing
  7501 ;; This function is called by:
  7502 ;;		_encher_tanque
  7503 ;;		_efgtoa
  7504 ;; This function uses a non-reentrant model
  7505 ;;
  7506                           
  7507                           	psect	text25
  7508  002E82                     __ptext25:
  7509                           	callstack 0
  7510  002E82                     ___flge:
  7511                           	callstack 25
  7512  002E82  0E00               	movlw	0
  7513  002E84  141A               	andwf	___flge@ff1^0,w,c
  7514  002E86  6E22               	movwf	??___flge^0,c
  7515  002E88  0E00               	movlw	0
  7516  002E8A  141B               	andwf	(___flge@ff1+1)^0,w,c
  7517  002E8C  6E23               	movwf	(??___flge+1)^0,c
  7518  002E8E  0E80               	movlw	128
  7519  002E90  141C               	andwf	(___flge@ff1+2)^0,w,c
  7520  002E92  6E24               	movwf	(??___flge+2)^0,c
  7521  002E94  0E7F               	movlw	127
  7522  002E96  141D               	andwf	(___flge@ff1+3)^0,w,c
  7523  002E98  6E25               	movwf	(??___flge+3)^0,c
  7524  002E9A  5022               	movf	??___flge^0,w,c
  7525  002E9C  1023               	iorwf	(??___flge+1)^0,w,c
  7526  002E9E  1024               	iorwf	(??___flge+2)^0,w,c
  7527  002EA0  1025               	iorwf	(??___flge+3)^0,w,c
  7528  002EA2  A4D8               	btfss	status,2,c
  7529  002EA4  EF56  F017         	goto	u3711
  7530  002EA8  EF58  F017         	goto	u3710
  7531  002EAC                     u3711:
  7532  002EAC  EF60  F017         	goto	l3486
  7533  002EB0                     u3710:
  7534  002EB0  0E00               	movlw	0
  7535  002EB2  6E1A               	movwf	___flge@ff1^0,c
  7536  002EB4  0E00               	movlw	0
  7537  002EB6  6E1B               	movwf	(___flge@ff1+1)^0,c
  7538  002EB8  0E00               	movlw	0
  7539  002EBA  6E1C               	movwf	(___flge@ff1+2)^0,c
  7540  002EBC  0E00               	movlw	0
  7541  002EBE  6E1D               	movwf	(___flge@ff1+3)^0,c
  7542  002EC0                     l3486:
  7543  002EC0  0E00               	movlw	0
  7544  002EC2  141E               	andwf	___flge@ff2^0,w,c
  7545  002EC4  6E22               	movwf	??___flge^0,c
  7546  002EC6  0E00               	movlw	0
  7547  002EC8  141F               	andwf	(___flge@ff2+1)^0,w,c
  7548  002ECA  6E23               	movwf	(??___flge+1)^0,c
  7549  002ECC  0E80               	movlw	128
  7550  002ECE  1420               	andwf	(___flge@ff2+2)^0,w,c
  7551  002ED0  6E24               	movwf	(??___flge+2)^0,c
  7552  002ED2  0E7F               	movlw	127
  7553  002ED4  1421               	andwf	(___flge@ff2+3)^0,w,c
  7554  002ED6  6E25               	movwf	(??___flge+3)^0,c
  7555  002ED8  5022               	movf	??___flge^0,w,c
  7556  002EDA  1023               	iorwf	(??___flge+1)^0,w,c
  7557  002EDC  1024               	iorwf	(??___flge+2)^0,w,c
  7558  002EDE  1025               	iorwf	(??___flge+3)^0,w,c
  7559  002EE0  A4D8               	btfss	status,2,c
  7560  002EE2  EF75  F017         	goto	u3721
  7561  002EE6  EF77  F017         	goto	u3720
  7562  002EEA                     u3721:
  7563  002EEA  EF7F  F017         	goto	l3490
  7564  002EEE                     u3720:
  7565  002EEE  0E00               	movlw	0
  7566  002EF0  6E1E               	movwf	___flge@ff2^0,c
  7567  002EF2  0E00               	movlw	0
  7568  002EF4  6E1F               	movwf	(___flge@ff2+1)^0,c
  7569  002EF6  0E00               	movlw	0
  7570  002EF8  6E20               	movwf	(___flge@ff2+2)^0,c
  7571  002EFA  0E00               	movlw	0
  7572  002EFC  6E21               	movwf	(___flge@ff2+3)^0,c
  7573  002EFE                     l3490:
  7574  002EFE  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  7575  002F00  EF84  F017         	goto	u3731
  7576  002F04  EF86  F017         	goto	u3730
  7577  002F08                     u3731:
  7578  002F08  EF8F  F017         	goto	l3494
  7579  002F0C                     u3730:
  7580  002F0C  6C1A               	negf	___flge@ff1^0,c
  7581  002F0E  1E1B               	comf	(___flge@ff1+1)^0,f,c
  7582  002F10  B0D8               	btfsc	status,0,c
  7583  002F12  2A1B               	incf	(___flge@ff1+1)^0,f,c
  7584  002F14  1E1C               	comf	(___flge@ff1+2)^0,f,c
  7585  002F16  B0D8               	btfsc	status,0,c
  7586  002F18  2A1C               	incf	(___flge@ff1+2)^0,f,c
  7587  002F1A  0E80               	movlw	128
  7588  002F1C  561D               	subfwb	(___flge@ff1+3)^0,f,c
  7589  002F1E                     l3494:
  7590  002F1E  AE21               	btfss	(___flge@ff2+3)^0,7,c
  7591  002F20  EF94  F017         	goto	u3741
  7592  002F24  EF96  F017         	goto	u3740
  7593  002F28                     u3741:
  7594  002F28  EF9F  F017         	goto	l447
  7595  002F2C                     u3740:
  7596  002F2C  6C1E               	negf	___flge@ff2^0,c
  7597  002F2E  1E1F               	comf	(___flge@ff2+1)^0,f,c
  7598  002F30  B0D8               	btfsc	status,0,c
  7599  002F32  2A1F               	incf	(___flge@ff2+1)^0,f,c
  7600  002F34  1E20               	comf	(___flge@ff2+2)^0,f,c
  7601  002F36  B0D8               	btfsc	status,0,c
  7602  002F38  2A20               	incf	(___flge@ff2+2)^0,f,c
  7603  002F3A  0E80               	movlw	128
  7604  002F3C  5621               	subfwb	(___flge@ff2+3)^0,f,c
  7605  002F3E                     l447:
  7606  002F3E  0E00               	movlw	0
  7607  002F40  1A1A               	xorwf	___flge@ff1^0,f,c
  7608  002F42  0E00               	movlw	0
  7609  002F44  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  7610  002F46  0E00               	movlw	0
  7611  002F48  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  7612  002F4A  0E80               	movlw	128
  7613  002F4C  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  7614  002F4E  0E00               	movlw	0
  7615  002F50  1A1E               	xorwf	___flge@ff2^0,f,c
  7616  002F52  0E00               	movlw	0
  7617  002F54  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  7618  002F56  0E00               	movlw	0
  7619  002F58  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  7620  002F5A  0E80               	movlw	128
  7621  002F5C  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  7622  002F5E  501E               	movf	___flge@ff2^0,w,c
  7623  002F60  5C1A               	subwf	___flge@ff1^0,w,c
  7624  002F62  501F               	movf	(___flge@ff2+1)^0,w,c
  7625  002F64  581B               	subwfb	(___flge@ff1+1)^0,w,c
  7626  002F66  5020               	movf	(___flge@ff2+2)^0,w,c
  7627  002F68  581C               	subwfb	(___flge@ff1+2)^0,w,c
  7628  002F6A  5021               	movf	(___flge@ff2+3)^0,w,c
  7629  002F6C  581D               	subwfb	(___flge@ff1+3)^0,w,c
  7630  002F6E  B0D8               	btfsc	status,0,c
  7631  002F70  EFBC  F017         	goto	u3751
  7632  002F74  EFBE  F017         	goto	u3750
  7633  002F78                     u3751:
  7634  002F78  EFC1  F017         	goto	l3500
  7635  002F7C                     u3750:
  7636  002F7C  90D8               	bcf	status,0,c
  7637  002F7E  EFC2  F017         	goto	l452
  7638  002F82                     l3500:
  7639  002F82  80D8               	bsf	status,0,c
  7640  002F84                     l452:
  7641  002F84  0012               	return		;funcret
  7642  002F86                     __end_of___flge:
  7643                           	callstack 0
  7644                           
  7645 ;; *************** function ___fleq *****************
  7646 ;; Defined at:
  7647 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\fleq.c"
  7648 ;; Parameters:    Size  Location     Type
  7649 ;;  ff1             4    0[COMRAM] unsigned char 
  7650 ;;  ff2             4    4[COMRAM] unsigned char 
  7651 ;; Auto vars:     Size  Location     Type
  7652 ;;		None
  7653 ;; Return value:  Size  Location     Type
  7654 ;;		None               void
  7655 ;; Registers used:
  7656 ;;		wreg, status,2, status,0
  7657 ;; Tracked objects:
  7658 ;;		On entry : 0/0
  7659 ;;		On exit  : 0/0
  7660 ;;		Unchanged: 0/0
  7661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7662 ;;      Params:         8       0       0       0       0       0       0
  7663 ;;      Locals:         0       0       0       0       0       0       0
  7664 ;;      Temps:          4       0       0       0       0       0       0
  7665 ;;      Totals:        12       0       0       0       0       0       0
  7666 ;;Total ram usage:       12 bytes
  7667 ;; Hardware stack levels used:    1
  7668 ;; This function calls:
  7669 ;;		Nothing
  7670 ;; This function is called by:
  7671 ;;		_efgtoa
  7672 ;; This function uses a non-reentrant model
  7673 ;;
  7674                           
  7675                           	psect	text26
  7676  003516                     __ptext26:
  7677                           	callstack 0
  7678  003516                     ___fleq:
  7679                           	callstack 25
  7680  003516  0E00               	movlw	0
  7681  003518  1401               	andwf	___fleq@ff1^0,w,c
  7682  00351A  6E09               	movwf	??___fleq^0,c
  7683  00351C  0E00               	movlw	0
  7684  00351E  1402               	andwf	(___fleq@ff1+1)^0,w,c
  7685  003520  6E0A               	movwf	(??___fleq+1)^0,c
  7686  003522  0E80               	movlw	128
  7687  003524  1403               	andwf	(___fleq@ff1+2)^0,w,c
  7688  003526  6E0B               	movwf	(??___fleq+2)^0,c
  7689  003528  0E7F               	movlw	127
  7690  00352A  1404               	andwf	(___fleq@ff1+3)^0,w,c
  7691  00352C  6E0C               	movwf	(??___fleq+3)^0,c
  7692  00352E  5009               	movf	??___fleq^0,w,c
  7693  003530  100A               	iorwf	(??___fleq+1)^0,w,c
  7694  003532  100B               	iorwf	(??___fleq+2)^0,w,c
  7695  003534  100C               	iorwf	(??___fleq+3)^0,w,c
  7696  003536  A4D8               	btfss	status,2,c
  7697  003538  EFA0  F01A         	goto	u3681
  7698  00353C  EFA2  F01A         	goto	u3680
  7699  003540                     u3681:
  7700  003540  EFAA  F01A         	goto	l3470
  7701  003544                     u3680:
  7702  003544  0E00               	movlw	0
  7703  003546  6E01               	movwf	___fleq@ff1^0,c
  7704  003548  0E00               	movlw	0
  7705  00354A  6E02               	movwf	(___fleq@ff1+1)^0,c
  7706  00354C  0E00               	movlw	0
  7707  00354E  6E03               	movwf	(___fleq@ff1+2)^0,c
  7708  003550  0E00               	movlw	0
  7709  003552  6E04               	movwf	(___fleq@ff1+3)^0,c
  7710  003554                     l3470:
  7711  003554  0E00               	movlw	0
  7712  003556  1405               	andwf	___fleq@ff2^0,w,c
  7713  003558  6E09               	movwf	??___fleq^0,c
  7714  00355A  0E00               	movlw	0
  7715  00355C  1406               	andwf	(___fleq@ff2+1)^0,w,c
  7716  00355E  6E0A               	movwf	(??___fleq+1)^0,c
  7717  003560  0E80               	movlw	128
  7718  003562  1407               	andwf	(___fleq@ff2+2)^0,w,c
  7719  003564  6E0B               	movwf	(??___fleq+2)^0,c
  7720  003566  0E7F               	movlw	127
  7721  003568  1408               	andwf	(___fleq@ff2+3)^0,w,c
  7722  00356A  6E0C               	movwf	(??___fleq+3)^0,c
  7723  00356C  5009               	movf	??___fleq^0,w,c
  7724  00356E  100A               	iorwf	(??___fleq+1)^0,w,c
  7725  003570  100B               	iorwf	(??___fleq+2)^0,w,c
  7726  003572  100C               	iorwf	(??___fleq+3)^0,w,c
  7727  003574  A4D8               	btfss	status,2,c
  7728  003576  EFBF  F01A         	goto	u3691
  7729  00357A  EFC1  F01A         	goto	u3690
  7730  00357E                     u3691:
  7731  00357E  EFC9  F01A         	goto	l3474
  7732  003582                     u3690:
  7733  003582  0E00               	movlw	0
  7734  003584  6E05               	movwf	___fleq@ff2^0,c
  7735  003586  0E00               	movlw	0
  7736  003588  6E06               	movwf	(___fleq@ff2+1)^0,c
  7737  00358A  0E00               	movlw	0
  7738  00358C  6E07               	movwf	(___fleq@ff2+2)^0,c
  7739  00358E  0E00               	movlw	0
  7740  003590  6E08               	movwf	(___fleq@ff2+3)^0,c
  7741  003592                     l3474:
  7742  003592  5005               	movf	___fleq@ff2^0,w,c
  7743  003594  1801               	xorwf	___fleq@ff1^0,w,c
  7744  003596  E10F               	bnz	u3700
  7745  003598  5006               	movf	(___fleq@ff2+1)^0,w,c
  7746  00359A  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  7747  00359C  E10C               	bnz	u3700
  7748  00359E  5007               	movf	(___fleq@ff2+2)^0,w,c
  7749  0035A0  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  7750  0035A2  E109               	bnz	u3700
  7751  0035A4  5008               	movf	(___fleq@ff2+3)^0,w,c
  7752  0035A6  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  7753  0035A8  B4D8               	btfsc	status,2,c
  7754  0035AA  EFD9  F01A         	goto	u3701
  7755  0035AE  EFDB  F01A         	goto	u3700
  7756  0035B2                     u3701:
  7757  0035B2  EFDE  F01A         	goto	l3478
  7758  0035B6                     u3700:
  7759  0035B6  90D8               	bcf	status,0,c
  7760  0035B8  EFDF  F01A         	goto	l441
  7761  0035BC                     l3478:
  7762  0035BC  80D8               	bsf	status,0,c
  7763  0035BE                     l441:
  7764  0035BE  0012               	return		;funcret
  7765  0035C0                     __end_of___fleq:
  7766                           	callstack 0
  7767                           
  7768 ;; *************** function ___fldiv *****************
  7769 ;; Defined at:
  7770 ;;		line 11 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
  7771 ;; Parameters:    Size  Location     Type
  7772 ;;  b               4    0[COMRAM] unsigned char 
  7773 ;;  a               4    4[COMRAM] unsigned char 
  7774 ;; Auto vars:     Size  Location     Type
  7775 ;;  grs             4   19[COMRAM] unsigned long 
  7776 ;;  rem             4   12[COMRAM] unsigned long 
  7777 ;;  new_exp         2   17[COMRAM] short 
  7778 ;;  aexp            1   24[COMRAM] unsigned char 
  7779 ;;  bexp            1   23[COMRAM] unsigned char 
  7780 ;;  sign            1   16[COMRAM] unsigned char 
  7781 ;; Return value:  Size  Location     Type
  7782 ;;                  4    0[COMRAM] unsigned char 
  7783 ;; Registers used:
  7784 ;;		wreg, status,2, status,0
  7785 ;; Tracked objects:
  7786 ;;		On entry : 0/0
  7787 ;;		On exit  : 0/0
  7788 ;;		Unchanged: 0/0
  7789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7790 ;;      Params:         8       0       0       0       0       0       0
  7791 ;;      Locals:        13       0       0       0       0       0       0
  7792 ;;      Temps:          4       0       0       0       0       0       0
  7793 ;;      Totals:        25       0       0       0       0       0       0
  7794 ;;Total ram usage:       25 bytes
  7795 ;; Hardware stack levels used:    1
  7796 ;; This function calls:
  7797 ;;		Nothing
  7798 ;; This function is called by:
  7799 ;;		_encher_tanque
  7800 ;;		_esvaziar_tanque
  7801 ;;		_efgtoa
  7802 ;; This function uses a non-reentrant model
  7803 ;;
  7804                           
  7805                           	psect	text27
  7806  001FE2                     __ptext27:
  7807                           	callstack 0
  7808  001FE2                     ___fldiv:
  7809                           	callstack 25
  7810  001FE2  5004               	movf	(___fldiv@b+3)^0,w,c
  7811  001FE4  0B80               	andlw	128
  7812  001FE6  6E11               	movwf	___fldiv@sign^0,c
  7813  001FE8  5004               	movf	(___fldiv@b+3)^0,w,c
  7814  001FEA  2404               	addwf	(___fldiv@b+3)^0,w,c
  7815  001FEC  6E18               	movwf	___fldiv@bexp^0,c
  7816  001FEE  AE03               	btfss	(___fldiv@b+2)^0,7,c
  7817  001FF0  EFFC  F00F         	goto	u3141
  7818  001FF4  EFFE  F00F         	goto	u3140
  7819  001FF8                     u3141:
  7820  001FF8  EFFF  F00F         	goto	l3118
  7821  001FFC                     u3140:
  7822  001FFC  8018               	bsf	___fldiv@bexp^0,0,c
  7823  001FFE                     l3118:
  7824  001FFE  5018               	movf	___fldiv@bexp^0,w,c
  7825  002000  B4D8               	btfsc	status,2,c
  7826  002002  EF05  F010         	goto	u3151
  7827  002006  EF07  F010         	goto	u3150
  7828  00200A                     u3151:
  7829  00200A  EF1C  F010         	goto	l3128
  7830  00200E                     u3150:
  7831  00200E  2818               	incf	___fldiv@bexp^0,w,c
  7832  002010  A4D8               	btfss	status,2,c
  7833  002012  EF0D  F010         	goto	u3161
  7834  002016  EF0F  F010         	goto	u3160
  7835  00201A                     u3161:
  7836  00201A  EF17  F010         	goto	l3124
  7837  00201E                     u3160:
  7838  00201E  0E00               	movlw	0
  7839  002020  6E01               	movwf	___fldiv@b^0,c
  7840  002022  0E00               	movlw	0
  7841  002024  6E02               	movwf	(___fldiv@b+1)^0,c
  7842  002026  0E00               	movlw	0
  7843  002028  6E03               	movwf	(___fldiv@b+2)^0,c
  7844  00202A  0E00               	movlw	0
  7845  00202C  6E04               	movwf	(___fldiv@b+3)^0,c
  7846  00202E                     l3124:
  7847  00202E  8E03               	bsf	(___fldiv@b+2)^0,7,c
  7848  002030  0E00               	movlw	0
  7849  002032  6E04               	movwf	(___fldiv@b+3)^0,c
  7850  002034  EF24  F010         	goto	l3130
  7851  002038                     l3128:
  7852  002038  0E00               	movlw	0
  7853  00203A  6E01               	movwf	___fldiv@b^0,c
  7854  00203C  0E00               	movlw	0
  7855  00203E  6E02               	movwf	(___fldiv@b+1)^0,c
  7856  002040  0E00               	movlw	0
  7857  002042  6E03               	movwf	(___fldiv@b+2)^0,c
  7858  002044  0E00               	movlw	0
  7859  002046  6E04               	movwf	(___fldiv@b+3)^0,c
  7860  002048                     l3130:
  7861  002048  5008               	movf	(___fldiv@a+3)^0,w,c
  7862  00204A  0B80               	andlw	128
  7863  00204C  1A11               	xorwf	___fldiv@sign^0,f,c
  7864  00204E  5008               	movf	(___fldiv@a+3)^0,w,c
  7865  002050  2408               	addwf	(___fldiv@a+3)^0,w,c
  7866  002052  6E19               	movwf	___fldiv@aexp^0,c
  7867  002054  AE07               	btfss	(___fldiv@a+2)^0,7,c
  7868  002056  EF2F  F010         	goto	u3171
  7869  00205A  EF31  F010         	goto	u3170
  7870  00205E                     u3171:
  7871  00205E  EF32  F010         	goto	l3138
  7872  002062                     u3170:
  7873  002062  8019               	bsf	___fldiv@aexp^0,0,c
  7874  002064                     l3138:
  7875  002064  5019               	movf	___fldiv@aexp^0,w,c
  7876  002066  B4D8               	btfsc	status,2,c
  7877  002068  EF38  F010         	goto	u3181
  7878  00206C  EF3A  F010         	goto	u3180
  7879  002070                     u3181:
  7880  002070  EF4F  F010         	goto	l3148
  7881  002074                     u3180:
  7882  002074  2819               	incf	___fldiv@aexp^0,w,c
  7883  002076  A4D8               	btfss	status,2,c
  7884  002078  EF40  F010         	goto	u3191
  7885  00207C  EF42  F010         	goto	u3190
  7886  002080                     u3191:
  7887  002080  EF4A  F010         	goto	l3144
  7888  002084                     u3190:
  7889  002084  0E00               	movlw	0
  7890  002086  6E05               	movwf	___fldiv@a^0,c
  7891  002088  0E00               	movlw	0
  7892  00208A  6E06               	movwf	(___fldiv@a+1)^0,c
  7893  00208C  0E00               	movlw	0
  7894  00208E  6E07               	movwf	(___fldiv@a+2)^0,c
  7895  002090  0E00               	movlw	0
  7896  002092  6E08               	movwf	(___fldiv@a+3)^0,c
  7897  002094                     l3144:
  7898  002094  8E07               	bsf	(___fldiv@a+2)^0,7,c
  7899  002096  0E00               	movlw	0
  7900  002098  6E08               	movwf	(___fldiv@a+3)^0,c
  7901  00209A  EF57  F010         	goto	l3150
  7902  00209E                     l3148:
  7903  00209E  0E00               	movlw	0
  7904  0020A0  6E05               	movwf	___fldiv@a^0,c
  7905  0020A2  0E00               	movlw	0
  7906  0020A4  6E06               	movwf	(___fldiv@a+1)^0,c
  7907  0020A6  0E00               	movlw	0
  7908  0020A8  6E07               	movwf	(___fldiv@a+2)^0,c
  7909  0020AA  0E00               	movlw	0
  7910  0020AC  6E08               	movwf	(___fldiv@a+3)^0,c
  7911  0020AE                     l3150:
  7912  0020AE  5005               	movf	___fldiv@a^0,w,c
  7913  0020B0  1006               	iorwf	(___fldiv@a+1)^0,w,c
  7914  0020B2  1007               	iorwf	(___fldiv@a+2)^0,w,c
  7915  0020B4  1008               	iorwf	(___fldiv@a+3)^0,w,c
  7916  0020B6  A4D8               	btfss	status,2,c
  7917  0020B8  EF60  F010         	goto	u3201
  7918  0020BC  EF62  F010         	goto	u3200
  7919  0020C0                     u3201:
  7920  0020C0  EF7A  F010         	goto	l3162
  7921  0020C4                     u3200:
  7922  0020C4  0E00               	movlw	0
  7923  0020C6  6E01               	movwf	___fldiv@b^0,c
  7924  0020C8  0E00               	movlw	0
  7925  0020CA  6E02               	movwf	(___fldiv@b+1)^0,c
  7926  0020CC  0E00               	movlw	0
  7927  0020CE  6E03               	movwf	(___fldiv@b+2)^0,c
  7928  0020D0  0E00               	movlw	0
  7929  0020D2  6E04               	movwf	(___fldiv@b+3)^0,c
  7930  0020D4  0E80               	movlw	128
  7931  0020D6  1203               	iorwf	(___fldiv@b+2)^0,f,c
  7932  0020D8  0E7F               	movlw	127
  7933  0020DA  1204               	iorwf	(___fldiv@b+3)^0,f,c
  7934  0020DC                     l3156:
  7935  0020DC  5011               	movf	___fldiv@sign^0,w,c
  7936  0020DE  1204               	iorwf	(___fldiv@b+3)^0,f,c
  7937  0020E0  C001  F001         	movff	___fldiv@b,?___fldiv
  7938  0020E4  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  7939  0020E8  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  7940  0020EC  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  7941  0020F0  EFBD  F011         	goto	l764
  7942  0020F4                     l3162:
  7943  0020F4  5018               	movf	___fldiv@bexp^0,w,c
  7944  0020F6  A4D8               	btfss	status,2,c
  7945  0020F8  EF80  F010         	goto	u3211
  7946  0020FC  EF82  F010         	goto	u3210
  7947  002100                     u3211:
  7948  002100  EF8C  F010         	goto	l3170
  7949  002104                     u3210:
  7950  002104  0E00               	movlw	0
  7951  002106  6E01               	movwf	?___fldiv^0,c
  7952  002108  0E00               	movlw	0
  7953  00210A  6E02               	movwf	(?___fldiv+1)^0,c
  7954  00210C  0E00               	movlw	0
  7955  00210E  6E03               	movwf	(?___fldiv+2)^0,c
  7956  002110  0E00               	movlw	0
  7957  002112  6E04               	movwf	(?___fldiv+3)^0,c
  7958  002114  EFBD  F011         	goto	l764
  7959  002118                     l3170:
  7960  002118  5019               	movf	___fldiv@aexp^0,w,c
  7961  00211A  C018  F009         	movff	___fldiv@bexp,??___fldiv
  7962  00211E  6A0A               	clrf	(??___fldiv+1)^0,c
  7963  002120  5E09               	subwf	??___fldiv^0,f,c
  7964  002122  0E00               	movlw	0
  7965  002124  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  7966  002126  0E7F               	movlw	127
  7967  002128  2409               	addwf	??___fldiv^0,w,c
  7968  00212A  6E12               	movwf	___fldiv@new_exp^0,c
  7969  00212C  0E00               	movlw	0
  7970  00212E  200A               	addwfc	(??___fldiv+1)^0,w,c
  7971  002130  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7972  002132  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  7973  002136  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  7974  00213A  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  7975  00213E  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  7976  002142  0E00               	movlw	0
  7977  002144  6E01               	movwf	___fldiv@b^0,c
  7978  002146  0E00               	movlw	0
  7979  002148  6E02               	movwf	(___fldiv@b+1)^0,c
  7980  00214A  0E00               	movlw	0
  7981  00214C  6E03               	movwf	(___fldiv@b+2)^0,c
  7982  00214E  0E00               	movlw	0
  7983  002150  6E04               	movwf	(___fldiv@b+3)^0,c
  7984  002152  0E00               	movlw	0
  7985  002154  6E14               	movwf	___fldiv@grs^0,c
  7986  002156  0E00               	movlw	0
  7987  002158  6E15               	movwf	(___fldiv@grs+1)^0,c
  7988  00215A  0E00               	movlw	0
  7989  00215C  6E16               	movwf	(___fldiv@grs+2)^0,c
  7990  00215E  0E00               	movlw	0
  7991  002160  6E17               	movwf	(___fldiv@grs+3)^0,c
  7992  002162  0E00               	movlw	0
  7993  002164  6E19               	movwf	___fldiv@aexp^0,c
  7994  002166  EFED  F010         	goto	l766
  7995  00216A                     l3180:
  7996  00216A  5019               	movf	___fldiv@aexp^0,w,c
  7997  00216C  B4D8               	btfsc	status,2,c
  7998  00216E  EFBB  F010         	goto	u3221
  7999  002172  EFBD  F010         	goto	u3220
  8000  002176                     u3221:
  8001  002176  EFD4  F010         	goto	l3188
  8002  00217A                     u3220:
  8003  00217A  90D8               	bcf	status,0,c
  8004  00217C  360D               	rlcf	___fldiv@rem^0,f,c
  8005  00217E  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  8006  002180  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  8007  002182  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  8008  002184  90D8               	bcf	status,0,c
  8009  002186  3601               	rlcf	___fldiv@b^0,f,c
  8010  002188  3602               	rlcf	(___fldiv@b+1)^0,f,c
  8011  00218A  3603               	rlcf	(___fldiv@b+2)^0,f,c
  8012  00218C  3604               	rlcf	(___fldiv@b+3)^0,f,c
  8013  00218E  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8014  002190  EFCC  F010         	goto	u3231
  8015  002194  EFCE  F010         	goto	u3230
  8016  002198                     u3231:
  8017  002198  EFCF  F010         	goto	l769
  8018  00219C                     u3230:
  8019  00219C  8001               	bsf	___fldiv@b^0,0,c
  8020  00219E                     l769:
  8021  00219E  90D8               	bcf	status,0,c
  8022  0021A0  3614               	rlcf	___fldiv@grs^0,f,c
  8023  0021A2  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  8024  0021A4  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  8025  0021A6  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  8026  0021A8                     l3188:
  8027  0021A8  5005               	movf	___fldiv@a^0,w,c
  8028  0021AA  5C0D               	subwf	___fldiv@rem^0,w,c
  8029  0021AC  5006               	movf	(___fldiv@a+1)^0,w,c
  8030  0021AE  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  8031  0021B0  5007               	movf	(___fldiv@a+2)^0,w,c
  8032  0021B2  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  8033  0021B4  5008               	movf	(___fldiv@a+3)^0,w,c
  8034  0021B6  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  8035  0021B8  A0D8               	btfss	status,0,c
  8036  0021BA  EFE1  F010         	goto	u3241
  8037  0021BE  EFE3  F010         	goto	u3240
  8038  0021C2                     u3241:
  8039  0021C2  EFEC  F010         	goto	l3194
  8040  0021C6                     u3240:
  8041  0021C6  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  8042  0021C8  5005               	movf	___fldiv@a^0,w,c
  8043  0021CA  5E0D               	subwf	___fldiv@rem^0,f,c
  8044  0021CC  5006               	movf	(___fldiv@a+1)^0,w,c
  8045  0021CE  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  8046  0021D0  5007               	movf	(___fldiv@a+2)^0,w,c
  8047  0021D2  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  8048  0021D4  5008               	movf	(___fldiv@a+3)^0,w,c
  8049  0021D6  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  8050  0021D8                     l3194:
  8051  0021D8  2A19               	incf	___fldiv@aexp^0,f,c
  8052  0021DA                     l766:
  8053  0021DA  0E19               	movlw	25
  8054  0021DC  6419               	cpfsgt	___fldiv@aexp^0,c
  8055  0021DE  EFF3  F010         	goto	u3251
  8056  0021E2  EFF5  F010         	goto	u3250
  8057  0021E6                     u3251:
  8058  0021E6  EFB5  F010         	goto	l3180
  8059  0021EA                     u3250:
  8060  0021EA  500D               	movf	___fldiv@rem^0,w,c
  8061  0021EC  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  8062  0021EE  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  8063  0021F0  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  8064  0021F2  B4D8               	btfsc	status,2,c
  8065  0021F4  EFFE  F010         	goto	u3261
  8066  0021F8  EF00  F011         	goto	u3260
  8067  0021FC                     u3261:
  8068  0021FC  EF18  F011         	goto	l3206
  8069  002200                     u3260:
  8070  002200  8014               	bsf	___fldiv@grs^0,0,c
  8071  002202  EF18  F011         	goto	l3206
  8072  002206                     l3200:
  8073  002206  90D8               	bcf	status,0,c
  8074  002208  3601               	rlcf	___fldiv@b^0,f,c
  8075  00220A  3602               	rlcf	(___fldiv@b+1)^0,f,c
  8076  00220C  3603               	rlcf	(___fldiv@b+2)^0,f,c
  8077  00220E  3604               	rlcf	(___fldiv@b+3)^0,f,c
  8078  002210  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8079  002212  EF0D  F011         	goto	u3271
  8080  002216  EF0F  F011         	goto	u3270
  8081  00221A                     u3271:
  8082  00221A  EF10  F011         	goto	l775
  8083  00221E                     u3270:
  8084  00221E  8001               	bsf	___fldiv@b^0,0,c
  8085  002220                     l775:
  8086  002220  90D8               	bcf	status,0,c
  8087  002222  3614               	rlcf	___fldiv@grs^0,f,c
  8088  002224  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  8089  002226  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  8090  002228  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  8091  00222A  0612               	decf	___fldiv@new_exp^0,f,c
  8092  00222C  A0D8               	btfss	status,0,c
  8093  00222E  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  8094  002230                     l3206:
  8095  002230  AE03               	btfss	(___fldiv@b+2)^0,7,c
  8096  002232  EF1D  F011         	goto	u3281
  8097  002236  EF1F  F011         	goto	u3280
  8098  00223A                     u3281:
  8099  00223A  EF03  F011         	goto	l3200
  8100  00223E                     u3280:
  8101  00223E  0E00               	movlw	0
  8102  002240  6E19               	movwf	___fldiv@aexp^0,c
  8103  002242  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8104  002244  EF26  F011         	goto	u3291
  8105  002248  EF28  F011         	goto	u3290
  8106  00224C                     u3291:
  8107  00224C  EF4C  F011         	goto	l777
  8108  002250                     u3290:
  8109  002250  0EFF               	movlw	255
  8110  002252  1414               	andwf	___fldiv@grs^0,w,c
  8111  002254  6E09               	movwf	??___fldiv^0,c
  8112  002256  0EFF               	movlw	255
  8113  002258  1415               	andwf	(___fldiv@grs+1)^0,w,c
  8114  00225A  6E0A               	movwf	(??___fldiv+1)^0,c
  8115  00225C  0EFF               	movlw	255
  8116  00225E  1416               	andwf	(___fldiv@grs+2)^0,w,c
  8117  002260  6E0B               	movwf	(??___fldiv+2)^0,c
  8118  002262  0E7F               	movlw	127
  8119  002264  1417               	andwf	(___fldiv@grs+3)^0,w,c
  8120  002266  6E0C               	movwf	(??___fldiv+3)^0,c
  8121  002268  5009               	movf	??___fldiv^0,w,c
  8122  00226A  100A               	iorwf	(??___fldiv+1)^0,w,c
  8123  00226C  100B               	iorwf	(??___fldiv+2)^0,w,c
  8124  00226E  100C               	iorwf	(??___fldiv+3)^0,w,c
  8125  002270  B4D8               	btfsc	status,2,c
  8126  002272  EF3D  F011         	goto	u3301
  8127  002276  EF3F  F011         	goto	u3300
  8128  00227A                     u3301:
  8129  00227A  EF43  F011         	goto	l778
  8130  00227E                     u3300:
  8131  00227E                     l3214:
  8132  00227E  0E01               	movlw	1
  8133  002280  6E19               	movwf	___fldiv@aexp^0,c
  8134  002282  EF4C  F011         	goto	l777
  8135  002286                     l778:
  8136  002286  A001               	btfss	___fldiv@b^0,0,c
  8137  002288  EF48  F011         	goto	u3311
  8138  00228C  EF4A  F011         	goto	u3310
  8139  002290                     u3311:
  8140  002290  EF4C  F011         	goto	l777
  8141  002294                     u3310:
  8142  002294  EF3F  F011         	goto	l3214
  8143  002298                     l777:
  8144  002298  5019               	movf	___fldiv@aexp^0,w,c
  8145  00229A  B4D8               	btfsc	status,2,c
  8146  00229C  EF52  F011         	goto	u3321
  8147  0022A0  EF54  F011         	goto	u3320
  8148  0022A4                     u3321:
  8149  0022A4  EF78  F011         	goto	l3226
  8150  0022A8                     u3320:
  8151  0022A8  0E01               	movlw	1
  8152  0022AA  2601               	addwf	___fldiv@b^0,f,c
  8153  0022AC  0E00               	movlw	0
  8154  0022AE  2202               	addwfc	(___fldiv@b+1)^0,f,c
  8155  0022B0  2203               	addwfc	(___fldiv@b+2)^0,f,c
  8156  0022B2  2204               	addwfc	(___fldiv@b+3)^0,f,c
  8157  0022B4  A004               	btfss	(___fldiv@b+3)^0,0,c
  8158  0022B6  EF5F  F011         	goto	u3331
  8159  0022BA  EF61  F011         	goto	u3330
  8160  0022BE                     u3331:
  8161  0022BE  EF78  F011         	goto	l3226
  8162  0022C2                     u3330:
  8163  0022C2  C001  F009         	movff	___fldiv@b,??___fldiv
  8164  0022C6  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  8165  0022CA  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  8166  0022CE  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  8167  0022D2  340C               	rlcf	(??___fldiv+3)^0,w,c
  8168  0022D4  320C               	rrcf	(??___fldiv+3)^0,f,c
  8169  0022D6  320B               	rrcf	(??___fldiv+2)^0,f,c
  8170  0022D8  320A               	rrcf	(??___fldiv+1)^0,f,c
  8171  0022DA  3209               	rrcf	??___fldiv^0,f,c
  8172  0022DC  C009  F001         	movff	??___fldiv,___fldiv@b
  8173  0022E0  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  8174  0022E4  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  8175  0022E8  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  8176  0022EC  4A12               	infsnz	___fldiv@new_exp^0,f,c
  8177  0022EE  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  8178  0022F0                     l3226:
  8179  0022F0  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8180  0022F2  EF83  F011         	goto	u3341
  8181  0022F6  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  8182  0022F8  E108               	bnz	u3340
  8183  0022FA  2812               	incf	___fldiv@new_exp^0,w,c
  8184  0022FC  A0D8               	btfss	status,0,c
  8185  0022FE  EF83  F011         	goto	u3341
  8186  002302  EF85  F011         	goto	u3340
  8187  002306                     u3341:
  8188  002306  EF90  F011         	goto	l3230
  8189  00230A                     u3340:
  8190  00230A  0E00               	movlw	0
  8191  00230C  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8192  00230E  6812               	setf	___fldiv@new_exp^0,c
  8193  002310  0E00               	movlw	0
  8194  002312  6E01               	movwf	___fldiv@b^0,c
  8195  002314  0E00               	movlw	0
  8196  002316  6E02               	movwf	(___fldiv@b+1)^0,c
  8197  002318  0E00               	movlw	0
  8198  00231A  6E03               	movwf	(___fldiv@b+2)^0,c
  8199  00231C  0E00               	movlw	0
  8200  00231E  6E04               	movwf	(___fldiv@b+3)^0,c
  8201  002320                     l3230:
  8202  002320  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8203  002322  EF9D  F011         	goto	u3350
  8204  002326  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  8205  002328  E106               	bnz	u3351
  8206  00232A  0412               	decf	___fldiv@new_exp^0,w,c
  8207  00232C  B0D8               	btfsc	status,0,c
  8208  00232E  EF9B  F011         	goto	u3351
  8209  002332  EF9D  F011         	goto	u3350
  8210  002336                     u3351:
  8211  002336  EFAB  F011         	goto	l3234
  8212  00233A                     u3350:
  8213  00233A  0E00               	movlw	0
  8214  00233C  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8215  00233E  0E00               	movlw	0
  8216  002340  6E12               	movwf	___fldiv@new_exp^0,c
  8217  002342  0E00               	movlw	0
  8218  002344  6E01               	movwf	___fldiv@b^0,c
  8219  002346  0E00               	movlw	0
  8220  002348  6E02               	movwf	(___fldiv@b+1)^0,c
  8221  00234A  0E00               	movlw	0
  8222  00234C  6E03               	movwf	(___fldiv@b+2)^0,c
  8223  00234E  0E00               	movlw	0
  8224  002350  6E04               	movwf	(___fldiv@b+3)^0,c
  8225  002352  0E00               	movlw	0
  8226  002354  6E11               	movwf	___fldiv@sign^0,c
  8227  002356                     l3234:
  8228  002356  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  8229  00235A  A018               	btfss	___fldiv@bexp^0,0,c
  8230  00235C  EFB2  F011         	goto	u3361
  8231  002360  EFB4  F011         	goto	u3360
  8232  002364                     u3361:
  8233  002364  EFB7  F011         	goto	l3240
  8234  002368                     u3360:
  8235  002368  8E03               	bsf	(___fldiv@b+2)^0,7,c
  8236  00236A  EFB8  F011         	goto	l3242
  8237  00236E                     l3240:
  8238  00236E  9E03               	bcf	(___fldiv@b+2)^0,7,c
  8239  002370                     l3242:
  8240  002370  90D8               	bcf	status,0,c
  8241  002372  3018               	rrcf	___fldiv@bexp^0,w,c
  8242  002374  6E04               	movwf	(___fldiv@b+3)^0,c
  8243  002376  EF6E  F010         	goto	l3156
  8244  00237A                     l764:
  8245  00237A  0012               	return		;funcret
  8246  00237C                     __end_of___fldiv:
  8247                           	callstack 0
  8248                           
  8249 ;; *************** function ___awmod *****************
  8250 ;; Defined at:
  8251 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\awmod.c"
  8252 ;; Parameters:    Size  Location     Type
  8253 ;;  dividend        2    0[COMRAM] int 
  8254 ;;  divisor         2    2[COMRAM] int 
  8255 ;; Auto vars:     Size  Location     Type
  8256 ;;  sign            1    5[COMRAM] unsigned char 
  8257 ;;  counter         1    4[COMRAM] unsigned char 
  8258 ;; Return value:  Size  Location     Type
  8259 ;;                  2    0[COMRAM] int 
  8260 ;; Registers used:
  8261 ;;		wreg, status,2, status,0
  8262 ;; Tracked objects:
  8263 ;;		On entry : 0/0
  8264 ;;		On exit  : 0/0
  8265 ;;		Unchanged: 0/0
  8266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8267 ;;      Params:         4       0       0       0       0       0       0
  8268 ;;      Locals:         2       0       0       0       0       0       0
  8269 ;;      Temps:          0       0       0       0       0       0       0
  8270 ;;      Totals:         6       0       0       0       0       0       0
  8271 ;;Total ram usage:        6 bytes
  8272 ;; Hardware stack levels used:    1
  8273 ;; This function calls:
  8274 ;;		Nothing
  8275 ;; This function is called by:
  8276 ;;		_efgtoa
  8277 ;; This function uses a non-reentrant model
  8278 ;;
  8279                           
  8280                           	psect	text28
  8281  003466                     __ptext28:
  8282                           	callstack 0
  8283  003466                     ___awmod:
  8284                           	callstack 25
  8285  003466  0E00               	movlw	0
  8286  003468  6E06               	movwf	___awmod@sign^0,c
  8287  00346A  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  8288  00346C  EF3C  F01A         	goto	u3620
  8289  003470  EF3A  F01A         	goto	u3621
  8290  003474                     u3621:
  8291  003474  EF42  F01A         	goto	l3438
  8292  003478                     u3620:
  8293  003478  6C01               	negf	___awmod@dividend^0,c
  8294  00347A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  8295  00347C  B0D8               	btfsc	status,0,c
  8296  00347E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  8297  003480  0E01               	movlw	1
  8298  003482  6E06               	movwf	___awmod@sign^0,c
  8299  003484                     l3438:
  8300  003484  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  8301  003486  EF49  F01A         	goto	u3630
  8302  00348A  EF47  F01A         	goto	u3631
  8303  00348E                     u3631:
  8304  00348E  EF4D  F01A         	goto	l3442
  8305  003492                     u3630:
  8306  003492  6C03               	negf	___awmod@divisor^0,c
  8307  003494  1E04               	comf	(___awmod@divisor+1)^0,f,c
  8308  003496  B0D8               	btfsc	status,0,c
  8309  003498  2A04               	incf	(___awmod@divisor+1)^0,f,c
  8310  00349A                     l3442:
  8311  00349A  5003               	movf	___awmod@divisor^0,w,c
  8312  00349C  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  8313  00349E  B4D8               	btfsc	status,2,c
  8314  0034A0  EF54  F01A         	goto	u3641
  8315  0034A4  EF56  F01A         	goto	u3640
  8316  0034A8                     u3641:
  8317  0034A8  EF7A  F01A         	goto	l3458
  8318  0034AC                     u3640:
  8319  0034AC  0E01               	movlw	1
  8320  0034AE  6E05               	movwf	___awmod@counter^0,c
  8321  0034B0  EF5E  F01A         	goto	l3448
  8322  0034B4                     l3446:
  8323  0034B4  90D8               	bcf	status,0,c
  8324  0034B6  3603               	rlcf	___awmod@divisor^0,f,c
  8325  0034B8  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  8326  0034BA  2A05               	incf	___awmod@counter^0,f,c
  8327  0034BC                     l3448:
  8328  0034BC  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  8329  0034BE  EF63  F01A         	goto	u3651
  8330  0034C2  EF65  F01A         	goto	u3650
  8331  0034C6                     u3651:
  8332  0034C6  EF5A  F01A         	goto	l3446
  8333  0034CA                     u3650:
  8334  0034CA                     l3450:
  8335  0034CA  5003               	movf	___awmod@divisor^0,w,c
  8336  0034CC  5C01               	subwf	___awmod@dividend^0,w,c
  8337  0034CE  5004               	movf	(___awmod@divisor+1)^0,w,c
  8338  0034D0  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  8339  0034D2  A0D8               	btfss	status,0,c
  8340  0034D4  EF6E  F01A         	goto	u3661
  8341  0034D8  EF70  F01A         	goto	u3660
  8342  0034DC                     u3661:
  8343  0034DC  EF74  F01A         	goto	l3454
  8344  0034E0                     u3660:
  8345  0034E0  5003               	movf	___awmod@divisor^0,w,c
  8346  0034E2  5E01               	subwf	___awmod@dividend^0,f,c
  8347  0034E4  5004               	movf	(___awmod@divisor+1)^0,w,c
  8348  0034E6  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  8349  0034E8                     l3454:
  8350  0034E8  90D8               	bcf	status,0,c
  8351  0034EA  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  8352  0034EC  3203               	rrcf	___awmod@divisor^0,f,c
  8353  0034EE  2E05               	decfsz	___awmod@counter^0,f,c
  8354  0034F0  EF65  F01A         	goto	l3450
  8355  0034F4                     l3458:
  8356  0034F4  5006               	movf	___awmod@sign^0,w,c
  8357  0034F6  B4D8               	btfsc	status,2,c
  8358  0034F8  EF80  F01A         	goto	u3671
  8359  0034FC  EF82  F01A         	goto	u3670
  8360  003500                     u3671:
  8361  003500  EF86  F01A         	goto	l3462
  8362  003504                     u3670:
  8363  003504  6C01               	negf	___awmod@dividend^0,c
  8364  003506  1E02               	comf	(___awmod@dividend+1)^0,f,c
  8365  003508  B0D8               	btfsc	status,0,c
  8366  00350A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  8367  00350C                     l3462:
  8368  00350C  C001  F001         	movff	___awmod@dividend,?___awmod
  8369  003510  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  8370  003514  0012               	return		;funcret
  8371  003516                     __end_of___awmod:
  8372                           	callstack 0
  8373                           
  8374 ;; *************** function ___awdiv *****************
  8375 ;; Defined at:
  8376 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  8377 ;; Parameters:    Size  Location     Type
  8378 ;;  dividend        2    0[COMRAM] int 
  8379 ;;  divisor         2    2[COMRAM] int 
  8380 ;; Auto vars:     Size  Location     Type
  8381 ;;  quotient        2    6[COMRAM] int 
  8382 ;;  sign            1    5[COMRAM] unsigned char 
  8383 ;;  counter         1    4[COMRAM] unsigned char 
  8384 ;; Return value:  Size  Location     Type
  8385 ;;                  2    0[COMRAM] int 
  8386 ;; Registers used:
  8387 ;;		wreg, status,2, status,0
  8388 ;; Tracked objects:
  8389 ;;		On entry : 0/0
  8390 ;;		On exit  : 0/0
  8391 ;;		Unchanged: 0/0
  8392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8393 ;;      Params:         4       0       0       0       0       0       0
  8394 ;;      Locals:         4       0       0       0       0       0       0
  8395 ;;      Temps:          0       0       0       0       0       0       0
  8396 ;;      Totals:         8       0       0       0       0       0       0
  8397 ;;Total ram usage:        8 bytes
  8398 ;; Hardware stack levels used:    1
  8399 ;; This function calls:
  8400 ;;		Nothing
  8401 ;; This function is called by:
  8402 ;;		_efgtoa
  8403 ;; This function uses a non-reentrant model
  8404 ;;
  8405                           
  8406                           	psect	text29
  8407  0032EA                     __ptext29:
  8408                           	callstack 0
  8409  0032EA                     ___awdiv:
  8410                           	callstack 25
  8411  0032EA  0E00               	movlw	0
  8412  0032EC  6E06               	movwf	___awdiv@sign^0,c
  8413  0032EE  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  8414  0032F0  EF7E  F019         	goto	u3560
  8415  0032F4  EF7C  F019         	goto	u3561
  8416  0032F8                     u3561:
  8417  0032F8  EF84  F019         	goto	l3394
  8418  0032FC                     u3560:
  8419  0032FC  6C03               	negf	___awdiv@divisor^0,c
  8420  0032FE  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  8421  003300  B0D8               	btfsc	status,0,c
  8422  003302  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  8423  003304  0E01               	movlw	1
  8424  003306  6E06               	movwf	___awdiv@sign^0,c
  8425  003308                     l3394:
  8426  003308  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  8427  00330A  EF8B  F019         	goto	u3570
  8428  00330E  EF89  F019         	goto	u3571
  8429  003312                     u3571:
  8430  003312  EF91  F019         	goto	l3400
  8431  003316                     u3570:
  8432  003316  6C01               	negf	___awdiv@dividend^0,c
  8433  003318  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  8434  00331A  B0D8               	btfsc	status,0,c
  8435  00331C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  8436  00331E  0E01               	movlw	1
  8437  003320  1A06               	xorwf	___awdiv@sign^0,f,c
  8438  003322                     l3400:
  8439  003322  0E00               	movlw	0
  8440  003324  6E08               	movwf	(___awdiv@quotient+1)^0,c
  8441  003326  0E00               	movlw	0
  8442  003328  6E07               	movwf	___awdiv@quotient^0,c
  8443  00332A  5003               	movf	___awdiv@divisor^0,w,c
  8444  00332C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  8445  00332E  B4D8               	btfsc	status,2,c
  8446  003330  EF9C  F019         	goto	u3581
  8447  003334  EF9E  F019         	goto	u3580
  8448  003338                     u3581:
  8449  003338  EFC6  F019         	goto	l3422
  8450  00333C                     u3580:
  8451  00333C  0E01               	movlw	1
  8452  00333E  6E05               	movwf	___awdiv@counter^0,c
  8453  003340  EFA6  F019         	goto	l3408
  8454  003344                     l3406:
  8455  003344  90D8               	bcf	status,0,c
  8456  003346  3603               	rlcf	___awdiv@divisor^0,f,c
  8457  003348  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  8458  00334A  2A05               	incf	___awdiv@counter^0,f,c
  8459  00334C                     l3408:
  8460  00334C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  8461  00334E  EFAB  F019         	goto	u3591
  8462  003352  EFAD  F019         	goto	u3590
  8463  003356                     u3591:
  8464  003356  EFA2  F019         	goto	l3406
  8465  00335A                     u3590:
  8466  00335A                     l3410:
  8467  00335A  90D8               	bcf	status,0,c
  8468  00335C  3607               	rlcf	___awdiv@quotient^0,f,c
  8469  00335E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  8470  003360  5003               	movf	___awdiv@divisor^0,w,c
  8471  003362  5C01               	subwf	___awdiv@dividend^0,w,c
  8472  003364  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8473  003366  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  8474  003368  A0D8               	btfss	status,0,c
  8475  00336A  EFB9  F019         	goto	u3601
  8476  00336E  EFBB  F019         	goto	u3600
  8477  003372                     u3601:
  8478  003372  EFC0  F019         	goto	l3418
  8479  003376                     u3600:
  8480  003376  5003               	movf	___awdiv@divisor^0,w,c
  8481  003378  5E01               	subwf	___awdiv@dividend^0,f,c
  8482  00337A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8483  00337C  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  8484  00337E  8007               	bsf	___awdiv@quotient^0,0,c
  8485  003380                     l3418:
  8486  003380  90D8               	bcf	status,0,c
  8487  003382  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  8488  003384  3203               	rrcf	___awdiv@divisor^0,f,c
  8489  003386  2E05               	decfsz	___awdiv@counter^0,f,c
  8490  003388  EFAD  F019         	goto	l3410
  8491  00338C                     l3422:
  8492  00338C  5006               	movf	___awdiv@sign^0,w,c
  8493  00338E  B4D8               	btfsc	status,2,c
  8494  003390  EFCC  F019         	goto	u3611
  8495  003394  EFCE  F019         	goto	u3610
  8496  003398                     u3611:
  8497  003398  EFD2  F019         	goto	l3426
  8498  00339C                     u3610:
  8499  00339C  6C07               	negf	___awdiv@quotient^0,c
  8500  00339E  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  8501  0033A0  B0D8               	btfsc	status,0,c
  8502  0033A2  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  8503  0033A4                     l3426:
  8504  0033A4  C007  F001         	movff	___awdiv@quotient,?___awdiv
  8505  0033A8  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  8506  0033AC  0012               	return		;funcret
  8507  0033AE                     __end_of___awdiv:
  8508                           	callstack 0
  8509                           
  8510 ;; *************** function _atoi *****************
  8511 ;; Defined at:
  8512 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\atoi.c"
  8513 ;; Parameters:    Size  Location     Type
  8514 ;;  s               2    7[COMRAM] PTR const unsigned char 
  8515 ;;		 -> STR_25(5), STR_17(5), STR_11(5), 
  8516 ;; Auto vars:     Size  Location     Type
  8517 ;;  n               2   20[COMRAM] int 
  8518 ;;  neg             2   13[COMRAM] int 
  8519 ;; Return value:  Size  Location     Type
  8520 ;;                  2    7[COMRAM] int 
  8521 ;; Registers used:
  8522 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8523 ;; Tracked objects:
  8524 ;;		On entry : 0/0
  8525 ;;		On exit  : 0/0
  8526 ;;		Unchanged: 0/0
  8527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8528 ;;      Params:         2       0       0       0       0       0       0
  8529 ;;      Locals:         9       0       0       0       0       0       0
  8530 ;;      Temps:          4       0       0       0       0       0       0
  8531 ;;      Totals:        15       0       0       0       0       0       0
  8532 ;;Total ram usage:       15 bytes
  8533 ;; Hardware stack levels used:    1
  8534 ;; Hardware stack levels required when called:    1
  8535 ;; This function calls:
  8536 ;;		___wmul
  8537 ;;		_isdigit
  8538 ;;		_isspace
  8539 ;; This function is called by:
  8540 ;;		_vfpfcnvrt
  8541 ;; This function uses a non-reentrant model
  8542 ;;
  8543                           
  8544                           	psect	text30
  8545  002BEC                     __ptext30:
  8546                           	callstack 0
  8547  002BEC                     _atoi:
  8548                           	callstack 25
  8549  002BEC  0E00               	movlw	0
  8550  002BEE  6E16               	movwf	(atoi@n+1)^0,c
  8551  002BF0  0E00               	movlw	0
  8552  002BF2  6E15               	movwf	atoi@n^0,c
  8553  002BF4  0E00               	movlw	0
  8554  002BF6  6E0F               	movwf	(atoi@neg+1)^0,c
  8555  002BF8  0E00               	movlw	0
  8556  002BFA  6E0E               	movwf	atoi@neg^0,c
  8557  002BFC  EF02  F016         	goto	l3960
  8558  002C00                     l3958:
  8559  002C00  4A08               	infsnz	atoi@s^0,f,c
  8560  002C02  2A09               	incf	(atoi@s+1)^0,f,c
  8561  002C04                     l3960:
  8562  002C04  0E01               	movlw	1
  8563  002C06  6E14               	movwf	_atoi$788^0,c
  8564  002C08  C008  FFF6         	movff	atoi@s,tblptrl
  8565  002C0C  C009  FFF7         	movff	atoi@s+1,tblptrh
  8566  002C10                     	if	0	;tblptru may be non-zero
  8567  002C10                     	endif
  8568  002C10                     	if	0	;tblptru may be non-zero
  8569  002C10                     	endif
  8570  002C10  0008               	tblrd		*
  8571  002C12  50F5               	movf	tablat,w,c
  8572  002C14  0A20               	xorlw	32
  8573  002C16  B4D8               	btfsc	status,2,c
  8574  002C18  EF10  F016         	goto	u4661
  8575  002C1C  EF12  F016         	goto	u4660
  8576  002C20                     u4661:
  8577  002C20  EF2F  F016         	goto	l3968
  8578  002C24                     u4660:
  8579  002C24  0EF7               	movlw	247
  8580  002C26  6E0A               	movwf	??_atoi^0,c
  8581  002C28  0EFF               	movlw	255
  8582  002C2A  6E0B               	movwf	(??_atoi+1)^0,c
  8583  002C2C  C008  FFF6         	movff	atoi@s,tblptrl
  8584  002C30  C009  FFF7         	movff	atoi@s+1,tblptrh
  8585  002C34                     	if	0	;tblptru may be non-zero
  8586  002C34                     	endif
  8587  002C34                     	if	0	;tblptru may be non-zero
  8588  002C34                     	endif
  8589  002C34  0008               	tblrd		*
  8590  002C36  50F5               	movf	tablat,w,c
  8591  002C38  6E0C               	movwf	(??_atoi+2)^0,c
  8592  002C3A  6A0D               	clrf	(??_atoi+3)^0,c
  8593  002C3C  500A               	movf	??_atoi^0,w,c
  8594  002C3E  260C               	addwf	(??_atoi+2)^0,f,c
  8595  002C40  500B               	movf	(??_atoi+1)^0,w,c
  8596  002C42  220D               	addwfc	(??_atoi+3)^0,f,c
  8597  002C44  500D               	movf	(??_atoi+3)^0,w,c
  8598  002C46  E109               	bnz	u4670
  8599  002C48  0E05               	movlw	5
  8600  002C4A  5C0C               	subwf	(??_atoi+2)^0,w,c
  8601  002C4C  A0D8               	btfss	status,0,c
  8602  002C4E  EF2B  F016         	goto	u4671
  8603  002C52  EF2D  F016         	goto	u4670
  8604  002C56                     u4671:
  8605  002C56  EF2F  F016         	goto	l3968
  8606  002C5A                     u4670:
  8607  002C5A  0E00               	movlw	0
  8608  002C5C  6E14               	movwf	_atoi$788^0,c
  8609  002C5E                     l3968:
  8610  002C5E  C014  F010         	movff	_atoi$788,_atoi$787
  8611  002C62  6A11               	clrf	(_atoi$787+1)^0,c
  8612  002C64  5010               	movf	_atoi$787^0,w,c
  8613  002C66  1011               	iorwf	(_atoi$787+1)^0,w,c
  8614  002C68  A4D8               	btfss	status,2,c
  8615  002C6A  EF39  F016         	goto	u4681
  8616  002C6E  EF3B  F016         	goto	u4680
  8617  002C72                     u4681:
  8618  002C72  EF00  F016         	goto	l3958
  8619  002C76                     u4680:
  8620  002C76  EF45  F016         	goto	l3978
  8621  002C7A                     l3974:
  8622  002C7A  0E00               	movlw	0
  8623  002C7C  6E0F               	movwf	(atoi@neg+1)^0,c
  8624  002C7E  0E01               	movlw	1
  8625  002C80  6E0E               	movwf	atoi@neg^0,c
  8626  002C82                     l3976:
  8627  002C82  4A08               	infsnz	atoi@s^0,f,c
  8628  002C84  2A09               	incf	(atoi@s+1)^0,f,c
  8629  002C86  EF7A  F016         	goto	l3984
  8630  002C8A                     l3978:
  8631  002C8A  C008  FFF6         	movff	atoi@s,tblptrl
  8632  002C8E  C009  FFF7         	movff	atoi@s+1,tblptrh
  8633  002C92                     	if	0	;tblptru may be non-zero
  8634  002C92                     	endif
  8635  002C92                     	if	0	;tblptru may be non-zero
  8636  002C92                     	endif
  8637  002C92  0008               	tblrd		*
  8638  002C94  50F5               	movf	tablat,w,c
  8639  002C96  6E0A               	movwf	??_atoi^0,c
  8640  002C98  6A0B               	clrf	(??_atoi+1)^0,c
  8641                           
  8642                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8643                           ; Switch size 1, requested type "simple"
  8644                           ; Number of cases is 1, Range of values is 0 to 0
  8645                           ; switch strategies available:
  8646                           ; Name         Instructions Cycles
  8647                           ; simple_byte            4     3 (average)
  8648                           ;	Chosen strategy is simple_byte
  8649  002C9A  500B               	movf	(??_atoi+1)^0,w,c
  8650  002C9C  0A00               	xorlw	0	; case 0
  8651  002C9E  B4D8               	btfsc	status,2,c
  8652  002CA0  EF54  F016         	goto	l4566
  8653  002CA4  EF7A  F016         	goto	l3984
  8654  002CA8                     l4566:
  8655                           
  8656                           ; Switch size 1, requested type "simple"
  8657                           ; Number of cases is 2, Range of values is 43 to 45
  8658                           ; switch strategies available:
  8659                           ; Name         Instructions Cycles
  8660                           ; simple_byte            7     4 (average)
  8661                           ;	Chosen strategy is simple_byte
  8662  002CA8  500A               	movf	??_atoi^0,w,c
  8663  002CAA  0A2B               	xorlw	43	; case 43
  8664  002CAC  B4D8               	btfsc	status,2,c
  8665  002CAE  EF41  F016         	goto	l3976
  8666  002CB2  0A06               	xorlw	6	; case 45
  8667  002CB4  B4D8               	btfsc	status,2,c
  8668  002CB6  EF3D  F016         	goto	l3974
  8669  002CBA  EF7A  F016         	goto	l3984
  8670  002CBE                     l3980:
  8671  002CBE  C015  F001         	movff	atoi@n,___wmul@multiplier
  8672  002CC2  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  8673  002CC6  0E00               	movlw	0
  8674  002CC8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8675  002CCA  0E0A               	movlw	10
  8676  002CCC  6E03               	movwf	___wmul@multiplicand^0,c
  8677  002CCE  EC6C  F01D         	call	___wmul	;wreg free
  8678  002CD2  C008  FFF6         	movff	atoi@s,tblptrl
  8679  002CD6  C009  FFF7         	movff	atoi@s+1,tblptrh
  8680  002CDA                     	if	0	;tblptru may be non-zero
  8681  002CDA                     	endif
  8682  002CDA                     	if	0	;tblptru may be non-zero
  8683  002CDA                     	endif
  8684  002CDA  0008               	tblrd		*
  8685  002CDC  50F5               	movf	tablat,w,c
  8686  002CDE  5E01               	subwf	?___wmul^0,f,c
  8687  002CE0  0E00               	movlw	0
  8688  002CE2  5A02               	subwfb	(?___wmul+1)^0,f,c
  8689  002CE4  0E30               	movlw	48
  8690  002CE6  2401               	addwf	?___wmul^0,w,c
  8691  002CE8  6E15               	movwf	atoi@n^0,c
  8692  002CEA  0E00               	movlw	0
  8693  002CEC  2002               	addwfc	(?___wmul+1)^0,w,c
  8694  002CEE  6E16               	movwf	(atoi@n+1)^0,c
  8695  002CF0  EF41  F016         	goto	l3976
  8696  002CF4                     l3984:
  8697  002CF4  0ED0               	movlw	208
  8698  002CF6  6E0A               	movwf	??_atoi^0,c
  8699  002CF8  0EFF               	movlw	255
  8700  002CFA  6E0B               	movwf	(??_atoi+1)^0,c
  8701  002CFC  C008  FFF6         	movff	atoi@s,tblptrl
  8702  002D00  C009  FFF7         	movff	atoi@s+1,tblptrh
  8703  002D04                     	if	0	;tblptru may be non-zero
  8704  002D04                     	endif
  8705  002D04                     	if	0	;tblptru may be non-zero
  8706  002D04                     	endif
  8707  002D04  0008               	tblrd		*
  8708  002D06  50F5               	movf	tablat,w,c
  8709  002D08  6E0C               	movwf	(??_atoi+2)^0,c
  8710  002D0A  6A0D               	clrf	(??_atoi+3)^0,c
  8711  002D0C  500A               	movf	??_atoi^0,w,c
  8712  002D0E  260C               	addwf	(??_atoi+2)^0,f,c
  8713  002D10  500B               	movf	(??_atoi+1)^0,w,c
  8714  002D12  220D               	addwfc	(??_atoi+3)^0,f,c
  8715  002D14  500D               	movf	(??_atoi+3)^0,w,c
  8716  002D16  E10A               	bnz	u4690
  8717  002D18  0E0A               	movlw	10
  8718  002D1A  5C0C               	subwf	(??_atoi+2)^0,w,c
  8719  002D1C  A0D8               	btfss	status,0,c
  8720  002D1E  EF93  F016         	goto	u4691
  8721  002D22  EF96  F016         	goto	u4690
  8722  002D26                     u4691:
  8723  002D26  0E01               	movlw	1
  8724  002D28  EF97  F016         	goto	u4700
  8725  002D2C                     u4690:
  8726  002D2C  0E00               	movlw	0
  8727  002D2E                     u4700:
  8728  002D2E  6E12               	movwf	_atoi$789^0,c
  8729  002D30  6A13               	clrf	(_atoi$789+1)^0,c
  8730  002D32  5012               	movf	_atoi$789^0,w,c
  8731  002D34  1013               	iorwf	(_atoi$789+1)^0,w,c
  8732  002D36  A4D8               	btfss	status,2,c
  8733  002D38  EFA0  F016         	goto	u4711
  8734  002D3C  EFA2  F016         	goto	u4710
  8735  002D40                     u4711:
  8736  002D40  EF5F  F016         	goto	l3980
  8737  002D44                     u4710:
  8738  002D44  500E               	movf	atoi@neg^0,w,c
  8739  002D46  100F               	iorwf	(atoi@neg+1)^0,w,c
  8740  002D48  A4D8               	btfss	status,2,c
  8741  002D4A  EFA9  F016         	goto	u4721
  8742  002D4E  EFAB  F016         	goto	u4720
  8743  002D52                     u4721:
  8744  002D52  EFB9  F016         	goto	l1067
  8745  002D56                     u4720:
  8746  002D56  C015  F00A         	movff	atoi@n,??_atoi
  8747  002D5A  C016  F00B         	movff	atoi@n+1,??_atoi+1
  8748  002D5E  1E0A               	comf	??_atoi^0,f,c
  8749  002D60  1E0B               	comf	(??_atoi+1)^0,f,c
  8750  002D62  4A0A               	infsnz	??_atoi^0,f,c
  8751  002D64  2A0B               	incf	(??_atoi+1)^0,f,c
  8752  002D66  C00A  F008         	movff	??_atoi,?_atoi
  8753  002D6A  C00B  F009         	movff	??_atoi+1,?_atoi+1
  8754  002D6E  EFBD  F016         	goto	l1070
  8755  002D72                     l1067:
  8756  002D72  C015  F008         	movff	atoi@n,?_atoi
  8757  002D76  C016  F009         	movff	atoi@n+1,?_atoi+1
  8758  002D7A                     l1070:
  8759  002D7A  0012               	return		;funcret
  8760  002D7C                     __end_of_atoi:
  8761                           	callstack 0
  8762                           
  8763 ;; *************** function _isspace *****************
  8764 ;; Defined at:
  8765 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\isspace.c"
  8766 ;; Parameters:    Size  Location     Type
  8767 ;;  c               2    0[COMRAM] int 
  8768 ;; Auto vars:     Size  Location     Type
  8769 ;;		None
  8770 ;; Return value:  Size  Location     Type
  8771 ;;                  2    0[COMRAM] int 
  8772 ;; Registers used:
  8773 ;;		wreg, status,2, status,0
  8774 ;; Tracked objects:
  8775 ;;		On entry : 0/0
  8776 ;;		On exit  : 0/0
  8777 ;;		Unchanged: 0/0
  8778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8779 ;;      Params:         2       0       0       0       0       0       0
  8780 ;;      Locals:         1       0       0       0       0       0       0
  8781 ;;      Temps:          4       0       0       0       0       0       0
  8782 ;;      Totals:         7       0       0       0       0       0       0
  8783 ;;Total ram usage:        7 bytes
  8784 ;; Hardware stack levels used:    1
  8785 ;; This function calls:
  8786 ;;		Nothing
  8787 ;; This function is called by:
  8788 ;;		_atoi
  8789 ;; This function uses a non-reentrant model
  8790 ;;
  8791                           
  8792                           	psect	text31
  8793  0038CA                     __ptext31:
  8794                           	callstack 0
  8795  0038CA                     _isspace:
  8796                           	callstack 25
  8797  0038CA  0E01               	movlw	1
  8798  0038CC  6E07               	movwf	_isspace$818^0,c
  8799  0038CE  0E20               	movlw	32
  8800  0038D0  1801               	xorwf	isspace@c^0,w,c
  8801  0038D2  1002               	iorwf	(isspace@c+1)^0,w,c
  8802  0038D4  B4D8               	btfsc	status,2,c
  8803  0038D6  EF6F  F01C         	goto	u4121
  8804  0038DA  EF71  F01C         	goto	u4120
  8805  0038DE                     u4121:
  8806  0038DE  EF8A  F01C         	goto	l3654
  8807  0038E2                     u4120:
  8808  0038E2  0EF7               	movlw	247
  8809  0038E4  6E03               	movwf	??_isspace^0,c
  8810  0038E6  0EFF               	movlw	255
  8811  0038E8  6E04               	movwf	(??_isspace+1)^0,c
  8812  0038EA  C001  F005         	movff	isspace@c,??_isspace+2
  8813  0038EE  C002  F006         	movff	isspace@c+1,??_isspace+3
  8814  0038F2  5003               	movf	??_isspace^0,w,c
  8815  0038F4  2605               	addwf	(??_isspace+2)^0,f,c
  8816  0038F6  5004               	movf	(??_isspace+1)^0,w,c
  8817  0038F8  2206               	addwfc	(??_isspace+3)^0,f,c
  8818  0038FA  5006               	movf	(??_isspace+3)^0,w,c
  8819  0038FC  E109               	bnz	u4130
  8820  0038FE  0E05               	movlw	5
  8821  003900  5C05               	subwf	(??_isspace+2)^0,w,c
  8822  003902  A0D8               	btfss	status,0,c
  8823  003904  EF86  F01C         	goto	u4131
  8824  003908  EF88  F01C         	goto	u4130
  8825  00390C                     u4131:
  8826  00390C  EF8A  F01C         	goto	l3654
  8827  003910                     u4130:
  8828  003910  0E00               	movlw	0
  8829  003912  6E07               	movwf	_isspace$818^0,c
  8830  003914                     l3654:
  8831  003914  C007  F001         	movff	_isspace$818,?_isspace
  8832  003918  6A02               	clrf	(?_isspace+1)^0,c
  8833  00391A  0012               	return		;funcret
  8834  00391C                     __end_of_isspace:
  8835                           	callstack 0
  8836                           
  8837 ;; *************** function _isdigit *****************
  8838 ;; Defined at:
  8839 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\isdigit.c"
  8840 ;; Parameters:    Size  Location     Type
  8841 ;;  c               2    0[COMRAM] int 
  8842 ;; Auto vars:     Size  Location     Type
  8843 ;;		None
  8844 ;; Return value:  Size  Location     Type
  8845 ;;                  2    0[COMRAM] int 
  8846 ;; Registers used:
  8847 ;;		wreg, status,2, status,0
  8848 ;; Tracked objects:
  8849 ;;		On entry : 0/0
  8850 ;;		On exit  : 0/0
  8851 ;;		Unchanged: 0/0
  8852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8853 ;;      Params:         2       0       0       0       0       0       0
  8854 ;;      Locals:         0       0       0       0       0       0       0
  8855 ;;      Temps:          4       0       0       0       0       0       0
  8856 ;;      Totals:         6       0       0       0       0       0       0
  8857 ;;Total ram usage:        6 bytes
  8858 ;; Hardware stack levels used:    1
  8859 ;; This function calls:
  8860 ;;		Nothing
  8861 ;; This function is called by:
  8862 ;;		_vfpfcnvrt
  8863 ;;		_atoi
  8864 ;; This function uses a non-reentrant model
  8865 ;;
  8866                           
  8867                           	psect	text32
  8868  003A16                     __ptext32:
  8869                           	callstack 0
  8870  003A16                     _isdigit:
  8871                           	callstack 26
  8872  003A16  0ED0               	movlw	208
  8873  003A18  6E03               	movwf	??_isdigit^0,c
  8874  003A1A  0EFF               	movlw	255
  8875  003A1C  6E04               	movwf	(??_isdigit+1)^0,c
  8876  003A1E  C001  F005         	movff	isdigit@c,??_isdigit+2
  8877  003A22  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  8878  003A26  5003               	movf	??_isdigit^0,w,c
  8879  003A28  2605               	addwf	(??_isdigit+2)^0,f,c
  8880  003A2A  5004               	movf	(??_isdigit+1)^0,w,c
  8881  003A2C  2206               	addwfc	(??_isdigit+3)^0,f,c
  8882  003A2E  5006               	movf	(??_isdigit+3)^0,w,c
  8883  003A30  E10A               	bnz	u4100
  8884  003A32  0E0A               	movlw	10
  8885  003A34  5C05               	subwf	(??_isdigit+2)^0,w,c
  8886  003A36  A0D8               	btfss	status,0,c
  8887  003A38  EF20  F01D         	goto	u4101
  8888  003A3C  EF23  F01D         	goto	u4100
  8889  003A40                     u4101:
  8890  003A40  0E01               	movlw	1
  8891  003A42  EF24  F01D         	goto	u4110
  8892  003A46                     u4100:
  8893  003A46  0E00               	movlw	0
  8894  003A48                     u4110:
  8895  003A48  6E01               	movwf	?_isdigit^0,c
  8896  003A4A  6A02               	clrf	(?_isdigit+1)^0,c
  8897  003A4C  0012               	return		;funcret
  8898  003A4E                     __end_of_isdigit:
  8899                           	callstack 0
  8900                           
  8901 ;; *************** function ___wmul *****************
  8902 ;; Defined at:
  8903 ;;		line 15 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  8904 ;; Parameters:    Size  Location     Type
  8905 ;;  multiplier      2    0[COMRAM] unsigned int 
  8906 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8907 ;; Auto vars:     Size  Location     Type
  8908 ;;  product         2    4[COMRAM] unsigned int 
  8909 ;; Return value:  Size  Location     Type
  8910 ;;                  2    0[COMRAM] unsigned int 
  8911 ;; Registers used:
  8912 ;;		wreg, status,2, status,0, prodl, prodh
  8913 ;; Tracked objects:
  8914 ;;		On entry : 0/0
  8915 ;;		On exit  : 0/0
  8916 ;;		Unchanged: 0/0
  8917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8918 ;;      Params:         4       0       0       0       0       0       0
  8919 ;;      Locals:         2       0       0       0       0       0       0
  8920 ;;      Temps:          0       0       0       0       0       0       0
  8921 ;;      Totals:         6       0       0       0       0       0       0
  8922 ;;Total ram usage:        6 bytes
  8923 ;; Hardware stack levels used:    1
  8924 ;; This function calls:
  8925 ;;		Nothing
  8926 ;; This function is called by:
  8927 ;;		_atoi
  8928 ;;		_pwmSet1
  8929 ;;		_pwmSet2
  8930 ;; This function uses a non-reentrant model
  8931 ;;
  8932                           
  8933                           	psect	text33
  8934  003AD8                     __ptext33:
  8935                           	callstack 0
  8936  003AD8                     ___wmul:
  8937                           	callstack 25
  8938  003AD8  5001               	movf	___wmul@multiplier^0,w,c
  8939  003ADA  0203               	mulwf	___wmul@multiplicand^0,c
  8940  003ADC  CFF3 F005          	movff	prodl,___wmul@product
  8941  003AE0  CFF4 F006          	movff	prodh,___wmul@product+1
  8942  003AE4  5001               	movf	___wmul@multiplier^0,w,c
  8943  003AE6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8944  003AE8  50F3               	movf	243,w,c
  8945  003AEA  2606               	addwf	(___wmul@product+1)^0,f,c
  8946  003AEC  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8947  003AEE  0203               	mulwf	___wmul@multiplicand^0,c
  8948  003AF0  50F3               	movf	243,w,c
  8949  003AF2  2606               	addwf	(___wmul@product+1)^0,f,c
  8950  003AF4  C005  F001         	movff	___wmul@product,?___wmul
  8951  003AF8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8952  003AFC  0012               	return		;funcret
  8953  003AFE                     __end_of___wmul:
  8954                           	callstack 0
  8955                           
  8956 ;; *************** function _lcd_str *****************
  8957 ;; Defined at:
  8958 ;;		line 47 in file "lcd.c"
  8959 ;; Parameters:    Size  Location     Type
  8960 ;;  str             2    7[COMRAM] PTR const unsigned char 
  8961 ;;		 -> STR_30(14), STR_29(13), STR_28(9), STR_27(14), 
  8962 ;;		 -> STR_26(3), esvaziar_tanque@y(8), STR_24(11), STR_23(14), 
  8963 ;;		 -> STR_22(11), STR_21(11), STR_20(11), STR_19(3), 
  8964 ;;		 -> STR_18(8), ver_quantidade@y(8), STR_16(14), STR_15(13), 
  8965 ;;		 -> STR_14(9), STR_13(12), STR_12(3), encher_tanque@y(8), 
  8966 ;;		 -> STR_10(11), STR_9(16), STR_8(11), STR_7(11), 
  8967 ;;		 -> STR_6(12), STR_5(19), STR_4(15), STR_3(14), 
  8968 ;;		 -> STR_2(11), STR_1(17), 
  8969 ;; Auto vars:     Size  Location     Type
  8970 ;;  i               1   11[COMRAM] unsigned char 
  8971 ;; Return value:  Size  Location     Type
  8972 ;;                  1    wreg      void 
  8973 ;; Registers used:
  8974 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8975 ;; Tracked objects:
  8976 ;;		On entry : 0/0
  8977 ;;		On exit  : 0/0
  8978 ;;		Unchanged: 0/0
  8979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8980 ;;      Params:         2       0       0       0       0       0       0
  8981 ;;      Locals:         1       0       0       0       0       0       0
  8982 ;;      Temps:          2       0       0       0       0       0       0
  8983 ;;      Totals:         5       0       0       0       0       0       0
  8984 ;;Total ram usage:        5 bytes
  8985 ;; Hardware stack levels used:    1
  8986 ;; Hardware stack levels required when called:    2
  8987 ;; This function calls:
  8988 ;;		_lcd_dat
  8989 ;; This function is called by:
  8990 ;;		_main
  8991 ;;		_encher_tanque
  8992 ;;		_ver_quantidade
  8993 ;;		_esvaziar_tanque
  8994 ;; This function uses a non-reentrant model
  8995 ;;
  8996                           
  8997                           	psect	text34
  8998  0035C0                     __ptext34:
  8999                           	callstack 0
  9000  0035C0                     _lcd_str:
  9001                           	callstack 27
  9002  0035C0                     
  9003                           ;lcd.c: 48:     unsigned char i = 0;
  9004  0035C0  0E00               	movlw	0
  9005  0035C2  6E0C               	movwf	lcd_str@i^0,c
  9006                           
  9007                           ;lcd.c: 50:     while (str[i] != 0) {
  9008  0035C4  EFFD  F01A         	goto	l4178
  9009  0035C8                     l4174:
  9010                           
  9011                           ;lcd.c: 51:         lcd_dat(str[i]);
  9012  0035C8  500C               	movf	lcd_str@i^0,w,c
  9013  0035CA  2408               	addwf	lcd_str@str^0,w,c
  9014  0035CC  6E0A               	movwf	??_lcd_str^0,c
  9015  0035CE  0E00               	movlw	0
  9016  0035D0  2009               	addwfc	(lcd_str@str+1)^0,w,c
  9017  0035D2  6E0B               	movwf	(??_lcd_str+1)^0,c
  9018  0035D4  C00A  FFF6         	movff	??_lcd_str,tblptrl
  9019  0035D8  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
  9020  0035DC  6AF8               	clrf	tblptru,c
  9021  0035DE  0E05               	movlw	(high __ramtop+-1)
  9022  0035E0  64F7               	cpfsgt	tblptrh,c
  9023  0035E2  D003               	bra	u4967
  9024  0035E4  0008               	tblrd		*
  9025  0035E6  50F5               	movf	tablat,w,c
  9026  0035E8  D005               	bra	u4960
  9027  0035EA                     u4967:
  9028  0035EA  CFF6 FFE9          	movff	tblptrl,fsr0l
  9029  0035EE  CFF7 FFEA          	movff	tblptrh,fsr0h
  9030  0035F2  50EF               	movf	indf0,w,c
  9031  0035F4                     u4960:
  9032  0035F4  EC42  F01D         	call	_lcd_dat
  9033  0035F8                     
  9034                           ;lcd.c: 52:         i++;
  9035  0035F8  2A0C               	incf	lcd_str@i^0,f,c
  9036  0035FA                     l4178:
  9037                           
  9038                           ;lcd.c: 50:     while (str[i] != 0) {
  9039  0035FA  500C               	movf	lcd_str@i^0,w,c
  9040  0035FC  2408               	addwf	lcd_str@str^0,w,c
  9041  0035FE  6E0A               	movwf	??_lcd_str^0,c
  9042  003600  0E00               	movlw	0
  9043  003602  2009               	addwfc	(lcd_str@str+1)^0,w,c
  9044  003604  6E0B               	movwf	(??_lcd_str+1)^0,c
  9045  003606  C00A  FFF6         	movff	??_lcd_str,tblptrl
  9046  00360A  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
  9047  00360E  6AF8               	clrf	tblptru,c
  9048  003610  0E05               	movlw	(high __ramtop+-1)
  9049  003612  64F7               	cpfsgt	tblptrh,c
  9050  003614  D003               	bra	u4977
  9051  003616  0008               	tblrd		*
  9052  003618  50F5               	movf	tablat,w,c
  9053  00361A  D005               	bra	u4970
  9054  00361C                     u4977:
  9055  00361C  CFF6 FFE9          	movff	tblptrl,fsr0l
  9056  003620  CFF7 FFEA          	movff	tblptrh,fsr0h
  9057  003624  50EF               	movf	indf0,w,c
  9058  003626                     u4970:
  9059  003626  0900               	iorlw	0
  9060  003628  A4D8               	btfss	status,2,c
  9061  00362A  EF19  F01B         	goto	u4981
  9062  00362E  EF1B  F01B         	goto	u4980
  9063  003632                     u4981:
  9064  003632  EFE4  F01A         	goto	l4174
  9065  003636                     u4980:
  9066  003636  0012               	return		;funcret
  9067  003638                     __end_of_lcd_str:
  9068                           	callstack 0
  9069                           
  9070 ;; *************** function _lcd_dat *****************
  9071 ;; Defined at:
  9072 ;;		line 19 in file "lcd.c"
  9073 ;; Parameters:    Size  Location     Type
  9074 ;;  val             1    wreg     unsigned char 
  9075 ;; Auto vars:     Size  Location     Type
  9076 ;;  val             1    6[COMRAM] unsigned char 
  9077 ;; Return value:  Size  Location     Type
  9078 ;;                  1    wreg      void 
  9079 ;; Registers used:
  9080 ;;		wreg, status,2, status,0, cstack
  9081 ;; Tracked objects:
  9082 ;;		On entry : 0/0
  9083 ;;		On exit  : 0/0
  9084 ;;		Unchanged: 0/0
  9085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9086 ;;      Params:         0       0       0       0       0       0       0
  9087 ;;      Locals:         1       0       0       0       0       0       0
  9088 ;;      Temps:          0       0       0       0       0       0       0
  9089 ;;      Totals:         1       0       0       0       0       0       0
  9090 ;;Total ram usage:        1 bytes
  9091 ;; Hardware stack levels used:    1
  9092 ;; Hardware stack levels required when called:    1
  9093 ;; This function calls:
  9094 ;;		_atraso_ms
  9095 ;;		_lcd_wr
  9096 ;; This function is called by:
  9097 ;;		_lcd_str
  9098 ;; This function uses a non-reentrant model
  9099 ;;
  9100                           
  9101                           	psect	text35
  9102  003A84                     __ptext35:
  9103                           	callstack 0
  9104  003A84                     _lcd_dat:
  9105                           	callstack 27
  9106                           
  9107                           ;incstack = 0
  9108                           ;lcd_dat@val stored from wreg
  9109  003A84  6E07               	movwf	lcd_dat@val^0,c
  9110  003A86                     
  9111                           ;lcd.c: 20:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  9112  003A86  8284               	bsf	132,1,c	;volatile
  9113  003A88                     
  9114                           ;lcd.c: 21:     lcd_wr(val);
  9115  003A88  5007               	movf	lcd_dat@val^0,w,c
  9116  003A8A  EC98  F01D         	call	_lcd_wr
  9117  003A8E                     
  9118                           ;lcd.c: 22:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<2));
  9119  003A8E  8484               	bsf	132,2,c	;volatile
  9120  003A90                     
  9121                           ;lcd.c: 23:     atraso_ms(3);
  9122  003A90  0E00               	movlw	0
  9123  003A92  6E02               	movwf	(atraso_ms@t+1)^0,c
  9124  003A94  0E03               	movlw	3
  9125  003A96  6E01               	movwf	atraso_ms@t^0,c
  9126  003A98  EC1C  F01B         	call	_atraso_ms	;wreg free
  9127  003A9C                     
  9128                           ;lcd.c: 24:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  9129  003A9C  9284               	bcf	132,1,c	;volatile
  9130  003A9E                     
  9131                           ;lcd.c: 25:     atraso_ms(3);
  9132  003A9E  0E00               	movlw	0
  9133  003AA0  6E02               	movwf	(atraso_ms@t+1)^0,c
  9134  003AA2  0E03               	movlw	3
  9135  003AA4  6E01               	movwf	atraso_ms@t^0,c
  9136  003AA6  EC1C  F01B         	call	_atraso_ms	;wreg free
  9137  003AAA                     
  9138                           ;lcd.c: 26:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  9139  003AAA  8284               	bsf	132,1,c	;volatile
  9140  003AAC  0012               	return		;funcret
  9141  003AAE                     __end_of_lcd_dat:
  9142                           	callstack 0
  9143                           
  9144 ;; *************** function _lcd_cmd *****************
  9145 ;; Defined at:
  9146 ;;		line 9 in file "lcd.c"
  9147 ;; Parameters:    Size  Location     Type
  9148 ;;  val             1    wreg     unsigned char 
  9149 ;; Auto vars:     Size  Location     Type
  9150 ;;  val             1    6[COMRAM] unsigned char 
  9151 ;; Return value:  Size  Location     Type
  9152 ;;                  1    wreg      void 
  9153 ;; Registers used:
  9154 ;;		wreg, status,2, status,0, cstack
  9155 ;; Tracked objects:
  9156 ;;		On entry : 0/0
  9157 ;;		On exit  : 0/0
  9158 ;;		Unchanged: 0/0
  9159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9160 ;;      Params:         0       0       0       0       0       0       0
  9161 ;;      Locals:         1       0       0       0       0       0       0
  9162 ;;      Temps:          0       0       0       0       0       0       0
  9163 ;;      Totals:         1       0       0       0       0       0       0
  9164 ;;Total ram usage:        1 bytes
  9165 ;; Hardware stack levels used:    1
  9166 ;; Hardware stack levels required when called:    1
  9167 ;; This function calls:
  9168 ;;		_atraso_ms
  9169 ;;		_lcd_wr
  9170 ;; This function is called by:
  9171 ;;		_lcd_init
  9172 ;;		_main
  9173 ;;		_encher_tanque
  9174 ;;		_ver_quantidade
  9175 ;;		_esvaziar_tanque
  9176 ;; This function uses a non-reentrant model
  9177 ;;
  9178                           
  9179                           	psect	text36
  9180  003AAE                     __ptext36:
  9181                           	callstack 0
  9182  003AAE                     _lcd_cmd:
  9183                           	callstack 28
  9184                           
  9185                           ;incstack = 0
  9186                           ;lcd_cmd@val stored from wreg
  9187  003AAE  6E07               	movwf	lcd_cmd@val^0,c
  9188  003AB0                     
  9189                           ;lcd.c: 10:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  9190  003AB0  8284               	bsf	132,1,c	;volatile
  9191  003AB2                     
  9192                           ;lcd.c: 11:     lcd_wr(val);
  9193  003AB2  5007               	movf	lcd_cmd@val^0,w,c
  9194  003AB4  EC98  F01D         	call	_lcd_wr
  9195  003AB8                     
  9196                           ;lcd.c: 12:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<2));
  9197  003AB8  9484               	bcf	132,2,c	;volatile
  9198  003ABA                     
  9199                           ;lcd.c: 13:     atraso_ms(3);
  9200  003ABA  0E00               	movlw	0
  9201  003ABC  6E02               	movwf	(atraso_ms@t+1)^0,c
  9202  003ABE  0E03               	movlw	3
  9203  003AC0  6E01               	movwf	atraso_ms@t^0,c
  9204  003AC2  EC1C  F01B         	call	_atraso_ms	;wreg free
  9205  003AC6                     
  9206                           ;lcd.c: 14:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  9207  003AC6  9284               	bcf	132,1,c	;volatile
  9208  003AC8                     
  9209                           ;lcd.c: 15:     atraso_ms(3);
  9210  003AC8  0E00               	movlw	0
  9211  003ACA  6E02               	movwf	(atraso_ms@t+1)^0,c
  9212  003ACC  0E03               	movlw	3
  9213  003ACE  6E01               	movwf	atraso_ms@t^0,c
  9214  003AD0  EC1C  F01B         	call	_atraso_ms	;wreg free
  9215  003AD4                     
  9216                           ;lcd.c: 16:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  9217  003AD4  8284               	bsf	132,1,c	;volatile
  9218  003AD6  0012               	return		;funcret
  9219  003AD8                     __end_of_lcd_cmd:
  9220                           	callstack 0
  9221                           
  9222 ;; *************** function _lcd_wr *****************
  9223 ;; Defined at:
  9224 ;;		line 5 in file "lcd.c"
  9225 ;; Parameters:    Size  Location     Type
  9226 ;;  val             1    wreg     unsigned char 
  9227 ;; Auto vars:     Size  Location     Type
  9228 ;;  val             1    0[COMRAM] unsigned char 
  9229 ;; Return value:  Size  Location     Type
  9230 ;;                  1    wreg      void 
  9231 ;; Registers used:
  9232 ;;		wreg
  9233 ;; Tracked objects:
  9234 ;;		On entry : 0/0
  9235 ;;		On exit  : 0/0
  9236 ;;		Unchanged: 0/0
  9237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9238 ;;      Params:         0       0       0       0       0       0       0
  9239 ;;      Locals:         1       0       0       0       0       0       0
  9240 ;;      Temps:          0       0       0       0       0       0       0
  9241 ;;      Totals:         1       0       0       0       0       0       0
  9242 ;;Total ram usage:        1 bytes
  9243 ;; Hardware stack levels used:    1
  9244 ;; This function calls:
  9245 ;;		Nothing
  9246 ;; This function is called by:
  9247 ;;		_lcd_cmd
  9248 ;;		_lcd_dat
  9249 ;; This function uses a non-reentrant model
  9250 ;;
  9251                           
  9252                           	psect	text37
  9253  003B30                     __ptext37:
  9254                           	callstack 0
  9255  003B30                     _lcd_wr:
  9256                           	callstack 27
  9257                           
  9258                           ;incstack = 0
  9259                           ;lcd_wr@val stored from wreg
  9260  003B30  6E01               	movwf	lcd_wr@val^0,c
  9261  003B32                     
  9262                           ;lcd.c: 6:     (*(volatile __near unsigned char*)0xF83) = val;
  9263  003B32  C001  FF83         	movff	lcd_wr@val,3971	;volatile
  9264  003B36  0012               	return		;funcret
  9265  003B38                     __end_of_lcd_wr:
  9266                           	callstack 0
  9267                           
  9268 ;; *************** function _atraso_ms *****************
  9269 ;; Defined at:
  9270 ;;		line 3 in file "delay.c"
  9271 ;; Parameters:    Size  Location     Type
  9272 ;;  t               2    0[COMRAM] int 
  9273 ;; Auto vars:     Size  Location     Type
  9274 ;;  i               2    2[COMRAM] volatile unsigned int 
  9275 ;;  k               1    5[COMRAM] volatile unsigned char 
  9276 ;;  j               1    4[COMRAM] volatile unsigned char 
  9277 ;; Return value:  Size  Location     Type
  9278 ;;                  1    wreg      void 
  9279 ;; Registers used:
  9280 ;;		wreg, status,2, status,0
  9281 ;; Tracked objects:
  9282 ;;		On entry : 0/0
  9283 ;;		On exit  : 0/0
  9284 ;;		Unchanged: 0/0
  9285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9286 ;;      Params:         2       0       0       0       0       0       0
  9287 ;;      Locals:         4       0       0       0       0       0       0
  9288 ;;      Temps:          0       0       0       0       0       0       0
  9289 ;;      Totals:         6       0       0       0       0       0       0
  9290 ;;Total ram usage:        6 bytes
  9291 ;; Hardware stack levels used:    1
  9292 ;; This function calls:
  9293 ;;		Nothing
  9294 ;; This function is called by:
  9295 ;;		_lcd_cmd
  9296 ;;		_lcd_dat
  9297 ;;		_lcd_init
  9298 ;;		_main
  9299 ;;		_encher_tanque
  9300 ;;		_esvaziar_tanque
  9301 ;;		_tc_tecla
  9302 ;; This function uses a non-reentrant model
  9303 ;;
  9304                           
  9305                           	psect	text38
  9306  003638                     __ptext38:
  9307                           	callstack 0
  9308  003638                     _atraso_ms:
  9309                           	callstack 27
  9310  003638                     
  9311                           ;delay.c: 4:     volatile unsigned char j, k;;delay.c: 5:     volatile unsigned int i;;d
      +                          elay.c: 7:     for (i = 0; i < (t); i++) {
  9312  003638  0E00               	movlw	0
  9313  00363A  6E04               	movwf	(atraso_ms@i+1)^0,c	;volatile
  9314  00363C  0E00               	movlw	0
  9315  00363E  6E03               	movwf	atraso_ms@i^0,c	;volatile
  9316  003640  EF42  F01B         	goto	l4042
  9317  003644                     l4020:
  9318                           
  9319                           ;delay.c: 8:         for (j = 0; j < 41; j++) {
  9320  003644  0E00               	movlw	0
  9321  003646  6E05               	movwf	atraso_ms@j^0,c	;volatile
  9322  003648                     l4022:
  9323  003648  0E28               	movlw	40
  9324  00364A  6405               	cpfsgt	atraso_ms@j^0,c	;volatile
  9325  00364C  EF2A  F01B         	goto	u4781
  9326  003650  EF2C  F01B         	goto	u4780
  9327  003654                     u4781:
  9328  003654  EF2E  F01B         	goto	l4026
  9329  003658                     u4780:
  9330  003658  EF40  F01B         	goto	l4040
  9331  00365C                     l4026:
  9332                           
  9333                           ;delay.c: 9:             for (k = 0; k < 3; k++);
  9334  00365C  0E00               	movlw	0
  9335  00365E  6E06               	movwf	atraso_ms@k^0,c	;volatile
  9336  003660                     l4028:
  9337  003660  0E02               	movlw	2
  9338  003662  6406               	cpfsgt	atraso_ms@k^0,c	;volatile
  9339  003664  EF36  F01B         	goto	u4791
  9340  003668  EF38  F01B         	goto	u4790
  9341  00366C                     u4791:
  9342  00366C  EF3A  F01B         	goto	l4032
  9343  003670                     u4790:
  9344  003670  EF3D  F01B         	goto	l4036
  9345  003674                     l4032:
  9346  003674  2A06               	incf	atraso_ms@k^0,f,c	;volatile
  9347  003676  EF30  F01B         	goto	l4028
  9348  00367A                     l4036:
  9349                           
  9350                           ;delay.c: 10:         }
  9351  00367A  2A05               	incf	atraso_ms@j^0,f,c	;volatile
  9352  00367C  EF24  F01B         	goto	l4022
  9353  003680                     l4040:
  9354                           
  9355                           ;delay.c: 11:     }
  9356  003680  4A03               	infsnz	atraso_ms@i^0,f,c	;volatile
  9357  003682  2A04               	incf	(atraso_ms@i+1)^0,f,c	;volatile
  9358  003684                     l4042:
  9359  003684  5001               	movf	atraso_ms@t^0,w,c
  9360  003686  5C03               	subwf	atraso_ms@i^0,w,c	;volatile
  9361  003688  5002               	movf	(atraso_ms@t+1)^0,w,c
  9362  00368A  5804               	subwfb	(atraso_ms@i+1)^0,w,c	;volatile
  9363  00368C  A0D8               	btfss	status,0,c
  9364  00368E  EF4B  F01B         	goto	u4801
  9365  003692  EF4D  F01B         	goto	u4800
  9366  003696                     u4801:
  9367  003696  EF22  F01B         	goto	l4020
  9368  00369A                     u4800:
  9369  00369A  0012               	return		;funcret
  9370  00369C                     __end_of_atraso_ms:
  9371                           	callstack 0
  9372                           
  9373                           	psect	rparam
  9374  0000                     
  9375                           	psect	idloc
  9376                           
  9377                           ;Config register IDLOC0 @ 0x200000
  9378                           ;	unspecified, using default values
  9379  200000                     	org	2097152
  9380  200000  FF                 	db	255
  9381                           
  9382                           ;Config register IDLOC1 @ 0x200001
  9383                           ;	unspecified, using default values
  9384  200001                     	org	2097153
  9385  200001  FF                 	db	255
  9386                           
  9387                           ;Config register IDLOC2 @ 0x200002
  9388                           ;	unspecified, using default values
  9389  200002                     	org	2097154
  9390  200002  FF                 	db	255
  9391                           
  9392                           ;Config register IDLOC3 @ 0x200003
  9393                           ;	unspecified, using default values
  9394  200003                     	org	2097155
  9395  200003  FF                 	db	255
  9396                           
  9397                           ;Config register IDLOC4 @ 0x200004
  9398                           ;	unspecified, using default values
  9399  200004                     	org	2097156
  9400  200004  FF                 	db	255
  9401                           
  9402                           ;Config register IDLOC5 @ 0x200005
  9403                           ;	unspecified, using default values
  9404  200005                     	org	2097157
  9405  200005  FF                 	db	255
  9406                           
  9407                           ;Config register IDLOC6 @ 0x200006
  9408                           ;	unspecified, using default values
  9409  200006                     	org	2097158
  9410  200006  FF                 	db	255
  9411                           
  9412                           ;Config register IDLOC7 @ 0x200007
  9413                           ;	unspecified, using default values
  9414  200007                     	org	2097159
  9415  200007  FF                 	db	255
  9416                           
  9417                           	psect	config
  9418                           
  9419                           ; Padding undefined space
  9420  300000                     	org	3145728
  9421  300000  FF                 	db	255
  9422                           
  9423                           ;Config register CONFIG1H @ 0x300001
  9424                           ;	Oscillator Selection bits
  9425                           ;	OSC = HS, HS oscillator
  9426                           ;	Fail-Safe Clock Monitor Enable bit
  9427                           ;	FCMEN = 0x0, unprogrammed default
  9428                           ;	Internal/External Oscillator Switchover bit
  9429                           ;	IESO = 0x0, unprogrammed default
  9430  300001                     	org	3145729
  9431  300001  02                 	db	2
  9432                           
  9433                           ;Config register CONFIG2L @ 0x300002
  9434                           ;	unspecified, using default values
  9435                           ;	Power-up Timer Enable bit
  9436                           ;	PWRT = 0x1, unprogrammed default
  9437                           ;	Brown-out Reset Enable bits
  9438                           ;	BOREN = 0x3, unprogrammed default
  9439                           ;	Brown Out Reset Voltage bits
  9440                           ;	BORV = 0x3, unprogrammed default
  9441  300002                     	org	3145730
  9442  300002  1F                 	db	31
  9443                           
  9444                           ;Config register CONFIG2H @ 0x300003
  9445                           ;	Watchdog Timer Enable bit
  9446                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9447                           ;	Watchdog Timer Postscale Select bits
  9448                           ;	WDTPS = 1, 1:1
  9449  300003                     	org	3145731
  9450  300003  00                 	db	0
  9451                           
  9452                           ; Padding undefined space
  9453  300004                     	org	3145732
  9454  300004  FF                 	db	255
  9455                           
  9456                           ;Config register CONFIG3H @ 0x300005
  9457                           ;	unspecified, using default values
  9458                           ;	CCP2 MUX bit
  9459                           ;	CCP2MX = 0x1, unprogrammed default
  9460                           ;	PORTB A/D Enable bit
  9461                           ;	PBADEN = 0x1, unprogrammed default
  9462                           ;	Low-Power Timer1 Oscillator Enable bit
  9463                           ;	LPT1OSC = 0x0, unprogrammed default
  9464                           ;	MCLR Pin Enable bit
  9465                           ;	MCLRE = 0x1, unprogrammed default
  9466  300005                     	org	3145733
  9467  300005  83                 	db	131
  9468                           
  9469                           ;Config register CONFIG4L @ 0x300006
  9470                           ;	Stack Full/Underflow Reset Enable bit
  9471                           ;	STVREN = 0x1, unprogrammed default
  9472                           ;	Single-Supply ICSP Enable bit
  9473                           ;	LVP = OFF, Single-Supply ICSP disabled
  9474                           ;	Extended Instruction Set Enable bit
  9475                           ;	XINST = 0x0, unprogrammed default
  9476                           ;	Background Debugger Enable bit
  9477                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  9478  300006                     	org	3145734
  9479  300006  81                 	db	129
  9480                           
  9481                           ; Padding undefined space
  9482  300007                     	org	3145735
  9483  300007  FF                 	db	255
  9484                           
  9485                           ;Config register CONFIG5L @ 0x300008
  9486                           ;	unspecified, using default values
  9487                           ;	Code Protection bit
  9488                           ;	CP0 = 0x1, unprogrammed default
  9489                           ;	Code Protection bit
  9490                           ;	CP1 = 0x1, unprogrammed default
  9491                           ;	Code Protection bit
  9492                           ;	CP2 = 0x1, unprogrammed default
  9493                           ;	Code Protection bit
  9494                           ;	CP3 = 0x1, unprogrammed default
  9495  300008                     	org	3145736
  9496  300008  0F                 	db	15
  9497                           
  9498                           ;Config register CONFIG5H @ 0x300009
  9499                           ;	unspecified, using default values
  9500                           ;	Boot Block Code Protection bit
  9501                           ;	CPB = 0x1, unprogrammed default
  9502                           ;	Data EEPROM Code Protection bit
  9503                           ;	CPD = 0x1, unprogrammed default
  9504  300009                     	org	3145737
  9505  300009  C0                 	db	192
  9506                           
  9507                           ;Config register CONFIG6L @ 0x30000A
  9508                           ;	unspecified, using default values
  9509                           ;	Write Protection bit
  9510                           ;	WRT0 = 0x1, unprogrammed default
  9511                           ;	Write Protection bit
  9512                           ;	WRT1 = 0x1, unprogrammed default
  9513                           ;	Write Protection bit
  9514                           ;	WRT2 = 0x1, unprogrammed default
  9515                           ;	Write Protection bit
  9516                           ;	WRT3 = 0x1, unprogrammed default
  9517  30000A                     	org	3145738
  9518  30000A  0F                 	db	15
  9519                           
  9520                           ;Config register CONFIG6H @ 0x30000B
  9521                           ;	unspecified, using default values
  9522                           ;	Configuration Register Write Protection bit
  9523                           ;	WRTC = 0x1, unprogrammed default
  9524                           ;	Boot Block Write Protection bit
  9525                           ;	WRTB = 0x1, unprogrammed default
  9526                           ;	Data EEPROM Write Protection bit
  9527                           ;	WRTD = 0x1, unprogrammed default
  9528  30000B                     	org	3145739
  9529  30000B  E0                 	db	224
  9530                           
  9531                           ;Config register CONFIG7L @ 0x30000C
  9532                           ;	unspecified, using default values
  9533                           ;	Table Read Protection bit
  9534                           ;	EBTR0 = 0x1, unprogrammed default
  9535                           ;	Table Read Protection bit
  9536                           ;	EBTR1 = 0x1, unprogrammed default
  9537                           ;	Table Read Protection bit
  9538                           ;	EBTR2 = 0x1, unprogrammed default
  9539                           ;	Table Read Protection bit
  9540                           ;	EBTR3 = 0x1, unprogrammed default
  9541  30000C                     	org	3145740
  9542  30000C  0F                 	db	15
  9543                           
  9544                           ;Config register CONFIG7H @ 0x30000D
  9545                           ;	unspecified, using default values
  9546                           ;	Boot Block Table Read Protection bit
  9547                           ;	EBTRB = 0x1, unprogrammed default
  9548  30000D                     	org	3145741
  9549  30000D  40                 	db	64
  9550                           tosu	equ	0xFFF
  9551                           tosh	equ	0xFFE
  9552                           tosl	equ	0xFFD
  9553                           stkptr	equ	0xFFC
  9554                           pclatu	equ	0xFFB
  9555                           pclath	equ	0xFFA
  9556                           pcl	equ	0xFF9
  9557                           tblptru	equ	0xFF8
  9558                           tblptrh	equ	0xFF7
  9559                           tblptrl	equ	0xFF6
  9560                           tablat	equ	0xFF5
  9561                           prodh	equ	0xFF4
  9562                           prodl	equ	0xFF3
  9563                           indf0	equ	0xFEF
  9564                           postinc0	equ	0xFEE
  9565                           postdec0	equ	0xFED
  9566                           preinc0	equ	0xFEC
  9567                           plusw0	equ	0xFEB
  9568                           fsr0h	equ	0xFEA
  9569                           fsr0l	equ	0xFE9
  9570                           wreg	equ	0xFE8
  9571                           indf1	equ	0xFE7
  9572                           postinc1	equ	0xFE6
  9573                           postdec1	equ	0xFE5
  9574                           preinc1	equ	0xFE4
  9575                           plusw1	equ	0xFE3
  9576                           fsr1h	equ	0xFE2
  9577                           fsr1l	equ	0xFE1
  9578                           bsr	equ	0xFE0
  9579                           indf2	equ	0xFDF
  9580                           postinc2	equ	0xFDE
  9581                           postdec2	equ	0xFDD
  9582                           preinc2	equ	0xFDC
  9583                           plusw2	equ	0xFDB
  9584                           fsr2h	equ	0xFDA
  9585                           fsr2l	equ	0xFD9
  9586                           status	equ	0xFD8

Data Sizes:
    Strings     237
    Constant    4
    Data        50
    BSS         102
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    127     127
    BANK0           128     72     124
    BANK1           256      0     100
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_41(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_41(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_36(CODE[4]), STR_35(CODE[4]), STR_32(CODE[4]), STR_31(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_36(CODE[4]), STR_35(CODE[4]), STR_32(CODE[4]), STR_31(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> esvaziar_tanque@y(BANK0[8]), ver_quantidade@y(BANK0[8]), encher_tanque@y(BANK0[8]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_25(CODE[5]), STR_17(CODE[5]), STR_11(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_25(CODE[5]), STR_17(CODE[5]), STR_11(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_25(CODE[5]), STR_17(CODE[5]), STR_11(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_25(CODE[5]), STR_17(CODE[5]), STR_11(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 8
		 -> esvaziar_tanque@y(BANK0[8]), ver_quantidade@y(BANK0[8]), encher_tanque@y(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S598_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 8
		 -> esvaziar_tanque@y(BANK0[8]), ver_quantidade@y(BANK0[8]), encher_tanque@y(BANK0[8]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> esvaziar_tanque@y(BANK0[8]), ver_quantidade@y(BANK0[8]), encher_tanque@y(BANK0[8]), 

    esvaziar_tanque@vol	PTR  size(2) Largest target is 4
		 -> volume(BANK0[4]), 

    ver_quantidade@vol	PTR  size(2) Largest target is 4
		 -> volume(BANK0[4]), 

    encher_tanque@vol	PTR  size(2) Largest target is 4
		 -> volume(BANK0[4]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_30(CODE[14]), STR_29(CODE[13]), STR_28(CODE[9]), STR_27(CODE[14]), 
		 -> STR_26(CODE[3]), esvaziar_tanque@y(BANK0[8]), STR_24(CODE[11]), STR_23(CODE[14]), 
		 -> STR_22(CODE[11]), STR_21(CODE[11]), STR_20(CODE[11]), STR_19(CODE[3]), 
		 -> STR_18(CODE[8]), ver_quantidade@y(BANK0[8]), STR_16(CODE[14]), STR_15(CODE[13]), 
		 -> STR_14(CODE[9]), STR_13(CODE[12]), STR_12(CODE[3]), encher_tanque@y(BANK0[8]), 
		 -> STR_10(CODE[11]), STR_9(CODE[16]), STR_8(CODE[11]), STR_7(CODE[11]), 
		 -> STR_6(CODE[12]), STR_5(CODE[19]), STR_4(CODE[15]), STR_3(CODE[14]), 
		 -> STR_2(CODE[11]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_encher_tanque
    _main->_esvaziar_tanque
    _main->_ver_quantidade
    _lcd_init->_lcd_cmd
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___fltol->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _atoi->_isspace
    _lcd_str->_lcd_dat
    _lcd_dat->_atraso_ms
    _lcd_cmd->_atraso_ms

Critical Paths under _main in BANK0

    _main->_encher_tanque
    _main->_esvaziar_tanque
    _ver_quantidade->_sprintf
    _esvaziar_tanque->_sprintf
    _encher_tanque->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  134200
                          _atraso_ms
                      _encher_tanque
                    _esvaziar_tanque
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                     _ver_quantidade
 ---------------------------------------------------------------------------------
 (1) _ver_quantidade                                      12    10      2   35665
                                            125 COMRAM     2     0      2
                                             36 BANK0     10    10      0
                            _lcd_cmd
                            _lcd_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    3360
                          _atraso_ms
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _esvaziar_tanque                                     38    36      2   43866
                                            125 COMRAM     2     0      2
                                             36 BANK0     36    36      0
                            ___fldiv
                            ___flsub
                            ___fltol
                          _atraso_ms
                            _lcd_cmd
                            _lcd_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _encher_tanque                                       38    36      2   43877
                                            125 COMRAM     2     0      2
                                             36 BANK0     36    36      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___fltol
                          _atraso_ms
                            _lcd_cmd
                            _lcd_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   29697
                                             18 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   29036
                                            123 COMRAM     2     2      0
                                             12 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   28664
                                            113 COMRAM    10     4      6
                                              0 BANK0     12    12      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   23061
                                             45 COMRAM    68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     533
                                             25 COMRAM    10     6      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    3497
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2718
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2352
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     790
                                             25 COMRAM    12     4      8
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2311
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1456
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcd_str                                              5     3      2    4072
                                              7 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (3) _lcd_dat                                              1     1      0    1702
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0    1702
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (4) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _atraso_ms                                            6     4      2    1658
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atraso_ms
   _encher_tanque
     ___fladd
     ___fldiv
     ___flge
       ___fladd (ARG)
       ___flmul (ARG)
     ___fltol
       ___fldiv (ARG)
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___fladd (ARG)
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
               ___fldiv (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
   _esvaziar_tanque
     ___fldiv
     ___flsub
       ___fladd
       ___flmul (ARG)
     ___fltol
       ___fldiv (ARG)
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___fladd (ARG)
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
               ___fldiv (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
   _lcd_cmd
     _atraso_ms
     _lcd_wr
   _lcd_init
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
   _lcd_str
     _lcd_dat
       _atraso_ms
       _lcd_wr
   _ver_quantidade
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___fladd (ARG)
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
               ___fldiv (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      64       7       39.1%
BITBANK0            80      0       0       4        0.0%
BANK0               80     48      7C       5       96.9%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7F      7F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     15F      15        0.0%
DATA                 0      0     15F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Jul 04 14:39:05 2020

             ___fldiv@aexp 0019  esvaziar_tanque@decremento 00C2               ___fldiv@bexp 0018  
                        _i 00F6               ___fldiv@sign 0011                         l10 369A  
                       l21 3AAC                         l30 3636                         l15 3B36  
                       l24 381A                         l18 3AD6               ___awdiv@sign 0006  
      ___wmul@multiplicand 0003             encher_tanque@i 00C6             encher_tanque@y 00B8  
                      l142 25D8                        l119 2B96                        l145 25E6  
                      l156 3456                        l413 33AC                        l182 3AFC  
                      l159 3464                        l176 2820                        l441 35BE  
                      l426 3514                        l179 282E                        l452 2F84  
                      l710 147C                        l447 2F3E                        l711 146A  
                      l800 1FE0                        l456 3A14                        l712 1430  
                      l803 1E72                        l813 1FA2                        l805 1EEA  
                      l901 326A                        l806 1ED8                        l727 1596  
                      l719 174C                        l479 2E80                        l736 1666  
                      l752 3960                        l904 32AC                        l737 1654  
                      l906 32E8                        l764 237A                        l924 128C  
                      l860 38C8                        l766 21DA                        l942 0AD2  
                      l775 2220                        l777 2298                        l769 219E  
                      l778 2286                        l796 1C7C                        l968 0E64  
                      _pad 3224               ___awmod@sign 0006                        wreg 000FE8  
          ?_ver_quantidade 007E               ___flmul@aexp 0012               ___flmul@bexp 0013  
              _tolower$882 000D               ___flmul@sign 000D               ___flmul@temp 0018  
             ___flmul@prod 0014       encher_tanque@numeros 00A4               ___fltol@exp1 0023  
                     l1100 39DC                       l1021 1B00                       l1014 1BB6  
                     l1115 3222                       l1123 39A4                       l1027 3756  
                     l1132 3876                       l1028 375E                       l1070 2D7A  
                     l1038 3082                       l1126 3B38                       l1142 3158  
                     l3000 14F8                       l1152 37B6                       l3010 1564  
                     l3002 14FA                       l1138 3A82                       l1067 2D72  
                     l3020 15BC                       l3012 1566                       l3004 1504  
                     l1076 2A40                       l1157 37BE                       l1086 3A4C  
                     l1094 391A                       l3030 15EA                       l3014 1576  
                     l3006 150A                       l3102 39A6                       l1079 2984  
                     l3200 2206                       l3120 200E                       l3112 1FE2  
                     l3032 15F8                       l3024 15D0                       l3040 1616  
                     l3008 1530                       l3016 1586                       l4000 30AE  
                     l3106 3AD8                       l3210 2242                       l3202 2210  
                     l3130 2048                       l3122 201E                       l3114 1FEE  
                     l3034 1600                       l3026 15DA                       l3018 15AC  
                     l3042 1624                       l4010 30FC                       l4020 3644  
                     l3108 3AF4                       l3220 22B4                       l3212 2250  
                     l3204 221E                       l3140 2074                       l3132 204E  
                     l3124 202E                       l3116 1FFC                       l3300 1D00  
                     l3052 1676                       l3060 16CC                       l3044 1628  
                     l3036 1604                       l3028 15E8                       l4012 310E  
                     l4004 30BA                       l4022 3648                       l3230 2320  
                     l3222 22C2                       l3214 227E                       l3206 2230  
                     l3150 20AE                       l3142 2084                       l3134 2054  
                     l3126 2030                       l3118 1FFE                       l3310 1D42  
                     l3302 1D0C                       l3070 171E                       l3062 16DC  
                     l3054 1682                       l3046 1636                       l3038 1614  
                     l4014 3136                       l4006 30C8                       l4102 1A8A  
                     l4032 3674                       l4040 3680                       l3400 3322  
                     l3240 236E                       l3232 233A                       l3224 22EC  
                     l3208 223E                       l3152 20C4                       l3144 2094  
                     l3136 2062                       l3128 2038                       l3320 1DA4  
                     l3312 1D4E                       l3304 1D18                       l3080 173C  
                     l3072 1724                       l3064 16EC                       l3056 1690  
                     l3048 164C                       l4008 30E0                       l4104 1A9C  
                     l4112 1B14                       l4200 33DC                       l4026 365C  
                     l4042 3684                       l4018 3638                       l3410 335A  
                     l3402 332A                       l3242 2370                       l3234 2356  
                     l3218 22A8                       l3226 22F0                       l3170 2118  
                     l3154 20D4                       l3162 20F4                       l3146 2096  
                     l3138 2064                       l3330 1E3A                       l3322 1DB0  
                     l3314 1D5E                       l3306 1D26                       l3250 1BB8  
                     l3074 1726                       l3066 170C                       l3058 16CA  
                     l3090 3984                       l4130 1BA4                       l4114 1B38  
                     l4122 1B66                       l4106 1AD0                       l4050 1780  
                     l4210 340C                       l4202 33E2                       l4036 367A  
                     l4028 3660                       l4044 3B32                       l4140 3A8E  
                     l3420 3386                       l3412 3360                       l3404 333C  
                     l3236 235A                       l3228 230A                       l3180 216A  
                     l3172 2132                       l3164 2104                       l3156 20DC  
                     l3148 209E                       l3500 2F82                       l3340 1E90  
                     l3332 1E58                       l3324 1DCC                       l3316 1D78  
                     l3308 1D32                       l3260 1BF4                       l3252 1BC4  
                     l3076 172C                       l3068 1710                       l3084 3962  
                     l3092 3A4E                       l4124 1B74                       l4116 1B46  
                     l4060 17D0                       l4052 1792                       l4300 25E8  
                     l4212 3412                       l4204 33E8                       l4142 3A90  
                     l3414 3376                       l3406 3344                       l3422 338C  
                     l3430 3466                       l3238 2368                       l3190 21C6  
                     l3182 217A                       l3174 2142                       l3166 2104  
                     l3158 20E0                       l3350 1EFA                       l3342 1E94  
                     l3334 1E62                       l3326 1DF6                       l3318 1D88  
                     l3270 1C26                       l3262 1C04                       l3254 1BD2  
                     l3078 173A                       l3086 396E                       l3094 3A5A  
                     l4118 1B5A                       l4062 17F4                       l4054 1796  
                     l4046 174E                       l4150 36FE                       l4230 2388  
                     l4310 2624                       l4302 25F4                       l4222 342E  
                     l4214 341E                       l4206 33F4                       l4160 3AB2  
                     l4144 3A9C                       l4136 3A86                       l3424 339C  
                     l3416 337E                       l3408 334C                       l3440 3492  
                     l3432 346A                       l3192 21C8                       l3184 218E  
                     l3176 2152                       l3360 1F5C                       l3352 1F06  
                     l3344 1EA2                       l3336 1E70                       l3328 1E2C  
                     l3280 1C66                       l3272 1C34                       l3264 1C0A  
                     l3256 1BD4                       l3504 39DE                       l3520 2DD0  
                     l3512 2D7C                       l3088 3980                       l3096 3A5E  
                     l3600 381C                       l4080 191A                       l4072 18A4  
                     l4064 182E                       l4056 17BA                       l4048 1772  
                     l4128 1B80                       l4152 3706                       l4240 23CA  
                     l4232 2394                       l4320 269E                       l4312 2636  
                     l4304 2600                       l4224 3434                       l4216 3424  
                     l4208 3400                       l4170 3AD4                       l4162 3AB8  
                     l4146 3A9E                       l4138 3A88                       l3426 33A4  
                     l3418 3380                       l3450 34CA                       l3442 349A  
                     l3434 3478                       l3194 21D8                       l3186 219C  
                     l3178 2162                       l3370 1FC4                       l3362 1F70  
                     l3354 1F14                       l3346 1ED0                       l3338 1E82  
                     l3290 1CB0                       l3282 1C6C                       l3274 1C36  
                     l3266 1C1A                       l3258 1BE4                       l3506 39F4  
                     l3522 2DD2                       l3514 2D92                       l3098 3A76  
                     l3602 382C                       l3610 37A8                       l4090 1992  
                     l4082 192A                       l4066 184E                       l4058 17C2  
                     l4074 18B6                       l4154 3714                       l4250 249A  
                     l4242 2428                       l4234 23A6                       l4330 2768  
                     l4322 26E2                       l4314 2670                       l4306 2612  
                     l4226 343A                       l4164 3ABA                       l4148 3AAA  
                     l4172 35C0                       l3460 3504                       l3452 34E0  
                     l3444 34AC                       l3436 3480                       l3196 21EA  
                     l3188 21A8                       l3372 1FC6                       l3364 1F8A  
                     l3356 1F3E                       l3292 1CBC                       l3284 1C8C  
                     l3276 1C46                       l3268 1C20                       l3508 3A04  
                     l2900 12F4                       l3380 391C                       l3524 2DE2  
                     l3620 28BA                       l3604 3760                       l3700 084C  
                     l4092 19C2                       l4084 195C                       l4076 18D8  
                     l4068 185C                       l4156 373A                       l4180 3878  
                     l4260 2532                       l4252 24C8                       l4244 2434  
                     l4236 23AC                       l4228 237C                       l4340 278C  
                     l4332 277A                       l4324 2710                       l4316 267C  
                     l4308 2618                       l4500 2AD4                       l4166 3AC6  
                     l4158 3AB0                       l4174 35C8                       l3390 32FC  
                     l3462 350C                       l3454 34E8                       l3446 34B4  
                     l3438 3484                       l3198 2200                       l3470 3554  
                     l3366 1FA6                       l3374 1FCC                       l3358 1F42  
                     l3294 1CC6                       l3286 1C9C                       l3278 1C56  
                     l2910 1322                       l2902 12FA                       l3382 392C  
                     l3550 2E60                       l3534 2E0C                       l3526 2DE6  
                     l3518 2DA6                       l3622 28C8                       l3630 29A8  
                     l3614 2830                       l3702 0854                       l4086 196E  
                     l4078 18E8                       l4182 388A                       l4270 2550  
                     l4262 2536                       l4254 24D4                       l4246 2440  
                     l4238 23B8                       l4342 2798                       l4334 277E  
                     l4326 271C                       l4318 2688                       l4502 2AE0  
                     l4168 3AC8                       l4176 35F8                       l3392 3304  
                     l3456 34EE                       l3448 34BC                       l3472 3582  
                     l3376 1FD0                       l3368 1FB6                       l3296 1CDC  
                     l2920 1356                       l2912 1324                       l2904 130C  
                     l3552 2E70                       l3544 2E34                       l3536 2E16  
                     l3528 2DF4                       l3632 29E4                       l3616 2850  
                     l3560 3248                       l3608 3796                       l3800 0C82  
                     l3712 08D6                       l4088 1984                       l4096 19EE  
                     l4184 3892                       l4280 257E                       l4272 2556  
                     l4264 2538                       l4256 24E0                       l4248 2456  
                     l4360 27F4                       l4352 27C6                       l4344 279E  
                     l4336 2780                       l4328 2728                       l4192 37C0  
                     l4512 2AFC                       l4504 2AE6                       l4178 35FA  
                     l3642 3A16                       l3650 38E2                       l3394 3308  
                     l3386 32EA                       l3458 34F4                       l3474 3592  
                     l3466 3516                       l3490 2EFE                       l3482 2E82  
                     l3298 1CE8                       l2930 1392                       l2914 1334  
                     l2922 135E                       l2906 130E                       l3546 2E40  
                     l3538 2E20                       l3634 29F8                       l3626 2938  
                     l3618 28A6                       l3570 328E                       l3562 3256  
                     l3810 0D64                       l3802 0CDA                       l3730 096E  
                     l3714 08E8                       l3706 087C                       l4098 1A1C  
                     l4186 389A                       l4290 25AE                       l4282 2594  
                     l4274 2562                       l4266 253E                       l4258 2520  
                     l4370 2814                       l4362 27F6                       l4354 27DC  
                     l4346 27AA                       l4338 2786                       l4194 37C4  
                     l4530 2B6C                       l4514 2B0E                       l4506 2AF2  
                     l3652 3910                       l3396 3316                       l3388 32EE  
                     l3476 35B6                       l3468 3544                       l3492 2F0C  
                     l3484 2EB0                       l2940 13A6                       l2932 1396  
                     l2924 136E                       l2916 1344                       l2908 1314  
                     l3548 2E50                       l3580 2FA6                       l3636 2A20  
                     l3628 2974                       l3572 32BC                       l3564 3262  
                     l3556 3224                       l3900 110A                       l3820 0DFA  
                     l3812 0D96                       l3804 0D0E                       l3740 0A3A  
                     l3732 09A2                       l3716 0904                       l3708 08A2  
                     l3724 0920                       l3660 06FC                       l4188 38B6  
                     l4292 25B4                       l4284 25A0                       l4276 256A  
                     l4268 2544                       l4364 27FC                       l4356 27E8  
                     l4348 27B2                       l4196 37D0                       l4540 2BBE  
                     l4532 2B84                       l4524 2B38                       l4516 2B14  
                     l3654 3914                       l3646 38CA                       l3398 331E  
                     l3478 35BC                       l3494 2F1E                       l3486 2EC0  
                     l2950 13BA                       l2942 13AA                       l2934 139A  
                     l2926 1380                       l2918 1354                       l3582 2FE4  
                     l3590 3024                       l3638 2A30                       l2870 316C  
                     l3574 32D0                       l3566 3276                       l3558 3234  
                     l3910 113A                       l3902 1118                       l3830 0E80  
                     l3822 0E2E                       l3814 0DAA                       l3806 0D12  
                     l3750 0AA4                       l3734 09A6                       l3742 0A6C  
                     l3726 0938                       l3670 074E                       l3662 070C  
                     l4294 25BA                       l4366 2802                       l4198 33AE  
                     l4542 2BCA                       l4526 2B4A                       l4518 2B30  
                     l4470 2A56                       ?_pad 0011                       l3648 38CE  
                     l3496 2F2C                       l3488 2EEE                       l2952 13BE  
                     l2944 13AE                       l2936 139E                       l2928 138E  
                     l2960 13CE                       l3592 3036                       l3584 300C  
                     l2872 317E                       l3568 328A                       l3920 119A  
                     l3912 1160                       l3904 1120                       l3840 0F26  
                     l3832 0EE4                       l3824 0E3E                       l3816 0DDC  
                     l3808 0D30                       l3752 0AAC                       l3744 0A7A  
                     l3736 0A00                       l3680 0796                       l3672 0756  
                     l3664 071A                       l4296 25C6                       l4288 25AC  
                     l4368 280E                       l4544 2BD8                       l4536 2BA4  
                     l4528 2B50                       l4480 2A80                       l4472 2A5C  
                     l3498 2F7C                       l2970 143E                       l2962 13D2  
                     l2954 13C2                       l2946 13B2                       l2938 13A2  
                     l2890 12BA                       l2882 128E                       l3586 3018  
                     l3578 2F86                       l2874 3188                       l3930 11E0  
                     l3922 11B4                       l3914 117C                       l3906 1128  
                     l3850 0F62                       l3834 0EF4                       l3842 0F2E  
                     l3826 0E50                       l3818 0DEA                       l3770 0B5E  
                     l3762 0AF2                       l3754 0AC6                       l3746 0A7E  
                     l3738 0A34                       l3690 07D2                       l3682 079E  
                     l3674 0768                       l3666 0722                       l3658 06F4  
                     l4298 25CC                       l4538 2BB0                       l4490 2AAA  
                     l4482 2A8C                       l4474 2A62                       l4466 2A42  
                     l2980 1468                       l2972 144A                       l2964 13FC  
                     l2956 13C6                       l2948 13B6                       l2892 12CA  
                     l2884 129A                       l3596 307A                       l2876 31A6  
                     l2868 315A                       l3940 1230                       l3932 11F0  
                     l3924 11BA                       l3916 1182                       l3908 1134  
                     l3860 0F8E                       l3852 0F68                       l3844 0F40  
                     l3836 0F06                       l3828 0E5C                       l3780 0B9C  
                     l3764 0B04                       l3772 0B62                       l3748 0A90  
                     l3756 0ADE                       l3684 07A2                       l3676 0778  
                     l3668 0746                       l4492 2AB6                       l4484 2A92  
                     l4476 2A6E                       l4468 2A52                       l4566 2CA8  
                     l2990 14BE                       l2982 148A                       l2974 144E  
                     l2966 1418                       l2958 13CA                       l2894 12DA  
                     l2886 12A8                       l2878 31DC                       l3950 126C  
                     l3942 1242                       l3934 11F6                       l3926 11CC  
                     l3918 1188                       l3854 0F74                       l3846 0F4E  
                     l3862 0F94                       l3870 0FC2                       l3838 0F18  
                     l3790 0BEA                       l3782 0BA0                       l3774 0B6A  
                     l3766 0B20                       l3694 0806                       l3686 07A6  
                     l3678 078A                       l4494 2AC2                       l4486 2A98  
                     l4478 2A74                       l3960 2C04                       l2992 14CC  
                     l2984 149A                       l2976 145C                       l2968 1428  
                     l2896 12DC                       l2888 12AA                       l3944 124E  
                     l3936 11FC                       l3928 11D8                       l3880 1076  
                     l3872 101A                       l3864 0FA6                       l3856 0F84  
                     l3848 0F5E                       l3784 0BB2                       l3792 0BF2  
                     l3776 0B7C                       l3768 0B56                       l3696 0818  
                     l3688 07AC                       l4496 2AC8                       l4488 2AA4  
                     l3962 2C08                       l2994 14DA                       l2978 145E  
                     l2898 12E4                       l3946 1256                       l3890 10C8  
                     l3882 1092                       l3874 104E                       l3866 0FB8  
                     l3858 0F88                       l3794 0BFA                       l3786 0BC0  
                     l3778 0B8E                       l3698 0834                       l4498 2ACE  
                     l3980 2CBE                       l3972 2C64                       l3964 2C24  
                     l3956 2BEC                       l2996 14E6                       l2988 14AE  
                     l3948 1266                       l3892 10D8                       l3884 10A4  
                     l3876 1054                       l3868 0FBC                       l3796 0C0A  
                     l3788 0BD8                       l3990 2D44                       l3974 2C7A  
                     l3966 2C5A                       l3958 2C00                       l2998 14EA  
                     l3894 10EA                       l3886 10B4                       l3878 1058  
                     l3798 0C1E                       l3992 2D56                       l3984 2CF4  
                     l3976 2C82                       l3968 2C5E                       l3896 10F2  
                     l3888 10C4                       l3978 2C8A                       l3898 1102  
                     l3988 2D32                       l3998 3084                       STR_1 0618  
                     STR_2 06BB                       STR_3 0672                       STR_4 0639  
                     STR_5 0605                       STR_6 0699                       STR_7 06A5  
                     STR_8 06B0                       STR_9 0629                       u3000 164C  
                     u3001 1648                       u3010 1662                       u3011 165E  
                     u3020 1676                       u3100 39A4                       u3021 1672  
                     u3101 39A0                       u3030 1690                       u3110 3A76  
                     u3031 168C                       u3111 3A72                       u3200 20C4  
                     u3040 16CA                       u4000 2878                       u3120 39D6  
                     u3201 20C0                       u3041 16C6                       u3121 39D0  
                     u3210 2104                       u3050 16DC                       u4010 28A6  
                     u3130 39D8                       u3211 2100                       u3051 16D8  
                     u4011 28A2                       u4100 3A46                       u3300 227E  
                     u3220 217A                       u3140 1FFC                       u3060 16EC  
                     u4020 28C8                       u4101 3A40                       u3301 227A  
                     u3221 2176                       u3141 1FF8                       u3061 16E8  
                     u4021 28C4                       u4005 286E                       u4110 3A48  
                     u3310 2294                       u3230 219C                       u3150 200E  
                     u3070 170C                       u3311 2290                       u3231 2198  
                     u3151 200A                       u3071 1708                       u4120 38E2  
                     u3320 22A8                       u3240 21C6                       u3160 201E  
                     u3400 1C34                       u3080 171E                       u4040 2934  
                     u4200 0802                       u5000 3464                       u4121 38DE  
                     u3321 22A4                       u3241 21C2                       u3161 201A  
                     u3401 1C30                       u3081 171A                       u4041 2930  
                     u5001 3460                       u4130 3910                       u3330 22C2  
                     u3250 21EA                       u3170 2062                       u3410 1C46  
                     u3090 173A                       u4050 2958                       u4210 0818  
                     u5010 2428                       u4131 390C                       u3331 22BE  
                     u3251 21E6                       u3171 205E                       u3411 1C42  
                     u3091 1736                       u4035 28DC                       u4211 0814  
                     u5011 2424                       u3340 230A                       u3260 2200  
                     u3180 2074                       u3500 1EE6                       u3420 1C56  
                     u4060 2974                       u4036 28E6                       u2700 31DC  
                     u4300 0AA4                       u4220 08A2                       u4140 071A  
                     u3341 2306                       u3261 21FC                       u3181 2070  
                     u3501 1EE2                       u3421 1C52                       u4061 2970  
                     u4037 28F6                       u2701 31D8                       u4301 0AA0  
                     u4221 089E                       u4141 0716                       u5021 252A  
                     u3350 233A                       u3270 221E                       u3190 2084  
                     u3510 1EFA                       u3430 1C8C                       u2710 12A8  
                     u4070 29C8                       u4310 0AC6                       u4230 08D0  
                     u4150 0768                       u5030 257A                       u3351 2336  
                     u3271 221A                       u3191 2080                       u3511 1EF6  
                     u3431 1C88                       u2711 12A4                       u4055 294E  
                     u4311 0AC2                       u4231 08CA                       u4151 0764  
                     u5031 2576                       u3600 3376                       u3360 2368  
                     u3280 223E                       u3520 1F14                       u3440 1C9C  
                     u2800 13FC                       u2720 12BA                       u4080 29E4  
                     u4400 0BC0                       u4320 0AEE                       u4240 08D2  
                     u4160 0778                       u5040 25E6                       u3601 3372  
                     u3361 2364                       u3281 223A                       u3521 1F10  
                     u3441 1C98                       u2801 13F8                       u2721 12B6  
                     u4081 29E0                       u4401 0BBC                       u4321 0AEA  
                     u4161 0774                       u5041 25E2                       u3610 339C  
                     u3290 2250                       u3530 1F5C                       u3450 1E16  
                     u3370 1BD2                       u2810 1414                       u2730 12CA  
                     u4090 2A20                       u4410 0BEA                       u4330 0B04  
                     u4250 08E8                       u4170 078A                       u5050 2670  
                     u3611 3398                       u3291 224C                       u3531 1F58  
                     u3371 1BCE                       u2811 140E                       u2731 12C6  
                     u4091 2A1C                       u4075 29BE                       u4411 0BE6  
                     u4331 0B00                       u4251 08E4                       u4171 0786  
                     u5051 266C                       u3620 3478                       u3700 35B6  
                     u3540 1F8A                       u3460 1E70                       u3380 1BE4  
                     u2900 14F8                       u2820 1416                       u2740 130C  
                     u4500 0F26                       u4420 0D30                       u4340 0B20  
                     u4260 096A                       u4180 07D2                       u5300 2BA4  
                     u3621 3474                       u3701 35B2                       u3541 1F86  
                     u3461 1E6C                       u3381 1BE0                       u2901 14F4  
                     u2741 1308                       u4501 0F22                       u4421 0D2C  
                     u4341 0B1C                       u4261 0966                       u4181 07CE  
                     u5061 2772                       u5301 2BA0                       u3630 3492  
                     u3710 2EB0                       u3550 1FC4                       u3470 1E90  
                     u3390 1BF4                       u2910 1530                       u2830 143E  
                     u2750 1322                       u2670 316C                       u4510 0F40  
                     u4430 0D96                       u4350 0B56                       u4270 09FC  
                     u4190 0800                       u5070 27C2                       u5310 2BBE  
                     u3631 348E                       u3711 2EAC                       u3551 1FC0  
                     u3471 1E8C                       u3455 1E0C                       u3391 1BF0  
                     u2911 152C                       u2831 143A                       u2751 131E  
                     u2671 3168                       u4511 0F3C                       u4431 0D92  
                     u4351 0B52                       u4271 09F8                       u4191 07FA  
                     u5071 27BE                       u5311 2BBA                       u3560 32FC  
                     u3640 34AC                       u3720 2EEE                       u3480 1EA2  
                     u2920 1576                       u2840 145C                       u2760 1334  
                     u3800 2E08                       u2680 317E                       u4600 119A  
                     u4520 0F4E                       u4440 0DDC                       u4360 0B7C  
                     u4280 0A6C                       u5080 282E                       u5320 2BD8  
                     u3561 32F8                       u3641 34A8                       u3721 2EEA  
                     u3481 1E9E                       u2921 1572                       u2841 1458  
                     u2761 1330                       u3801 2E04                       u2681 317A  
                     u4601 1196                       u4521 0F4A                       u4441 0DD8  
                     u4361 0B78                       u4281 0A68                       u5081 282A  
                     u5321 2BD4                       u3570 3316                       u3650 34CA  
                     u3730 2F0C                       u3490 1ED0                       u2930 15AC  
                     u2850 147C                       u2770 1344                       u3810 2E30  
                     u2690 31A6                       u4610 11B4                       u4530 0FA6  
                     u4450 0DEA                       u4370 0B8E                       u4290 0A90  
                     u3571 3312                       u3651 34C6                       u3731 2F08  
                     u3491 1ECC                       u2931 15A8                       u2851 1478  
                     u2771 1340                       u3811 2E2C                       u2691 31A2  
                     u4611 11B0                       u4531 0FA2                       u4451 0DE6  
                     u4371 0B8A                       u4291 0A8C                       u4700 2D2E  
                     u3580 333C                       u3660 34E0                       u3740 2F2C  
                     u2940 15BC                       u2860 148A                       u2780 1380  
                     u3820 2E50                       u3900 300C                       u4620 11CC  
                     u4540 1076                       u4460 0E50                       u4380 0B9C  
                     u3581 3338                       u3661 34DC                       u3741 2F28  
                     u2941 15B8                       u2861 1486                       u2781 137C  
                     u3821 2E4C                       u3901 3008                       u4621 11C8  
                     u4541 1072                       u4461 0E4C                       u4381 0B98  
                     u4710 2D44                       u3590 335A                       u3670 3504  
                     u3750 2F7C                       u2950 15E8                       u2870 149A  
                     u2790 138E                       u3830 2E60                       u3910 3036  
                     u4630 122A                       u4550 1092                       u4470 0EF4  
                     u4390 0BB2                       u5270 2B30                       u4711 2D40  
                     u3591 3356                       u3671 3500                       u3751 2F78  
                     u2951 15E4                       u2871 1496                       u2791 138A  
                     u3831 2E5C                       u3911 3032                       u4631 1224  
                     u4551 108E                       u4471 0EF0                       u4391 0BAE  
                     u5271 2B2C                       u4800 369A                       u4720 2D56  
                     u3680 3544                       u3760 39F4                       u2960 15F8  
                     u2880 14CC                       u3840 3234                       u4640 122C  
                     u4560 10A4                       u4480 0F06                       u5280 2B6C  
                     u4801 3696                       u4721 2D52                       u3681 3540  
                     u3761 39F0                       u2961 15F4                       u2881 14C8  
                     u3841 3230                       u4561 10A0                       u4481 0F02  
                     u5281 2B68                       u3690 3582                       u2970 1614  
                     u2890 14DA                       u3770 2D92                       u3930 3070  
                     u3850 3256                       u4650 1242                       u4570 10B4  
                     u4490 0F18                       u4730 30AE                       u4810 1772  
                     u5290 2B92                       u3691 357E                       u2971 1610  
                     u2891 14D6                       u3771 2D8E                       u3931 306A  
                     u3851 3252                       u4651 123E                       u4571 10B0  
                     u4491 0F14                       u4731 30AA                       u4811 176E  
                     u5291 2B8E                       u4660 2C24                       u2980 1624  
                     u3780 2DC6                       u3940 3072                       u3860 32AC  
                     u4580 10EA                       u4740 30E0                       u4900 1A1C  
                     u4820 17BA                       u4661 2C20                       u2981 1620  
                     u3925 3048                       u3861 32A8                       u4581 10E6  
                     u4741 30DC                       u4901 1A18                       u4821 17B6  
                     u4670 2C5A                       u2990 1636                       u3790 2DF4  
                     u3870 32BC                       u3950 3864                       u4590 1118  
                     u4750 30FC                       u4910 1A82                       u4830 17F4  
                     u4671 2C56                       u2991 1632                       u3791 2DF0  
                     u3871 32B8                       u4591 1114                       u4751 30F8  
                     u4911 1A7C                       u4831 17F0                       u4680 2C76  
                     u3880 2FC6                       u3960 3876                       u4760 310E  
                     u4920 1A84                       u4840 189C                       u4681 2C72  
                     u3785 2DBC                       u3961 3872                       u4761 310A  
                     u4841 1896                       u4690 2D2C                       u3890 2FE4  
                     u3970 3790                       u4770 3136                       u4930 1A9C  
                     u4850 189E                       u4691 2D26                       u3891 2FE0  
                     u3971 378A                       u4771 3132                       u4931 1A98  
                     u4780 3658                       u3980 3792                       u4940 1B38  
                     u4860 18B6                       u4781 3654                       u3885 2FBC  
                     u3957 385A                       u4941 1B34                       u4861 18B2  
                     u4790 3670                       u3990 37A8                       u4870 18E8  
                     u4950 3756                       u4791 366C                       u3991 37A4  
                     u4871 18E4                       u4951 3752                       u4960 35F4  
                     u4880 192A                       u4881 1926                       u4970 3626  
                     u4890 196E                       u4891 196A                       u4980 3636  
                     u4981 3632                       u4990 3456                       u4967 35EA  
                     u4991 3452                       u4977 361C                       _dbuf 0100  
                     _atoi 2BEC                       _main 2A42                       _prec 00F2  
                     _nout 00EE                       pad@i 0018                       pad@p 0015  
                     fsr0h 000FEA                       fsr1h 000FE2                       indf0 000FEF  
                     fsr2h 000FDA                       fsr0l 000FE9                       indf2 000FDF  
                     fsr1l 000FE1                       pad@w 001A                       fsr2l 000FD9  
            ___fpclassifyf 2F86            ??_encher_tanque 0080                       prodh 000FF4  
                     prodl 000FF3                       start 0000            ___fldiv@new_exp 0012  
         encher_tanque@vol 007E               ___param_bank 000000                      ??_pad 0017  
            ___fltol@sign1 0022                      ?_atoi 0008            __end_of___fladd 174E  
                    ?_main 0001            __end_of___fldiv 237C            __end_of___awdiv 33AE  
          __end_of___flneg 3A16                      STR_10 0667                      STR_11 06D7  
                    STR_20 0667                      STR_12 06EF                      STR_21 06A5  
                    STR_13 068D                      STR_30 0664                      STR_22 06B0  
                    STR_14 06C6                      STR_31 06DC                      STR_15 0680  
                    STR_23 0656                      STR_24 0667                      STR_32 06E4  
                    STR_16 0664                      STR_25 06D7                      STR_17 06D7  
                    STR_41 06EC                      STR_26 06EF                      STR_18 06CF  
                    STR_19 06EF                      STR_35 06E0                      STR_27 0648  
                    STR_28 06C6                      STR_36 06E8            __end_of___awmod 3516  
                    STR_29 0680                      STR_39 06EC            __end_of___flmul 1FE2  
          __end_of___flsub 3962            __end_of___fltol 2E82            ___awdiv@divisor 0003  
 __size_of_esvaziar_tanque 0248            ___awdiv@counter 0005               vfpfcnvrt@fmt 0074  
         esvaziar_tanque@i 00C6           esvaziar_tanque@y 00B8            __end_of_lcd_dat 3AAE  
          __end_of_lcd_cmd 3AD8            __end_of_lcd_str 3638                      _flags 00F4  
                    _linha 0601                      _fputc 315A                      _fputs 3962  
          __end_of_isdigit 3A4E                      atoi@n 0015                      pad@fp 0011  
                    atoi@s 0008                      _width 00F0                      _putch 3B38  
          __end_of_isspace 391C            __end_of_isupper 39DE                      tablat 000FF5  
        encher_tanque@F342 00C8                      plusw1 000FE3                      plusw2 000FDB  
                    status 000FD8            __end_of_sprintf 38CA             ?___fpclassifyf 0001  
          __end_of_tolower 37C0            __end_of_strncmp 315A            __initialization 369C  
             __end_of_atoi 2D7C               __end_of_main 2BEC                     ??_atoi 000A  
                   ??_main 0080              __activetblptr 000002                     ?_fputc 0001  
                   ?_fputs 000A           ___awdiv@dividend 0001                     ?_putch 0001  
  encher_tanque@incremento 00C2     esvaziar_tanque@numeros 00A4               vfprintf@cfmt 007C  
         __end_of_lcd_init 381C                     ___flge 2E82                     ___fleq 3516  
                ??___fladd 0009                     ___wmul 3AD8                  ??___fldiv 0009  
                ??___awdiv 0005                  ??___flneg 0005                  ??___awmod 0005  
                ??___flmul 0009                  ??___flsub 0022                  ??___fltol 001E  
                   _efgtoa 06F4                     _lcd_wr 3B30                     _atraso 00E2  
                   _floorf 2830                     clear_0 36E2                     clear_1 36EE  
         ___awdiv@quotient 0007            ___awmod@divisor 0003            ___awmod@counter 0005  
                   pad@buf 0013                  ??_lcd_dat 0007                  ??_lcd_cmd 0007  
                   _strcpy 381C                     _strlen 3A4E                     _volume 00F8  
                ??_lcd_str 000A                     fputc@c 0001                     fputs@c 000E  
                   fputs@i 000F                     fputs@s 000A                  ??_isdigit 0003  
          ___fpclassifyf@e 0009            ___fpclassifyf@u 000B            ___fpclassifyf@x 0001  
             __mediumconst 0000                  ??_isspace 0003                     tblptrh 000FF7  
                ??_isupper 0003                     tblptrl 000FF6                     tblptru 000FF8  
                   putch@c 0001           __end_of_vfprintf 3760          ??_esvaziar_tanque 0080  
                ??_sprintf 007E                  ??_tolower 0009                  ??_strncmp 0007  
               ___flge@ff1 001A                 ___flge@ff2 001E            ??___fpclassifyf 0005  
               ___fleq@ff1 0001                 ___fleq@ff2 0005                 __accesstop 0080  
  __end_of__initialization 36F4                 ___flneg@f1 0001              ___rparam_used 000001  
       encher_tanque@tempo 00C0                 ___fltol@f1 001A             __pcstackCOMRAM 0001  
             __pidataBANK0 3AFE               __pidataBANK1 3B1C              __end_of_linha 0605  
            __end_of_fputc 3224              __end_of_fputs 39A6              __end_of_putch 3B3A  
         ??_ver_quantidade 0080                    ??_fputc 0005                    ??_fputs 000E  
       __size_of_atraso_ms 0064                    ??_putch 0001                 __pbssBANK0 00E6  
               __pbssBANK1 0100                 _efgtoa$723 003E                 _efgtoa$724 0040  
               _efgtoa$733 0044                 _efgtoa$734 0046                 _efgtoa$735 0048  
               _efgtoa$729 0042                    ?___flge 001A                    ?___fleq 0001  
                  ?___wmul 0001                    ?_efgtoa 002E                    ?_lcd_wr 0001  
                  ?_floorf 001A                    ?_strcpy 0001                    ?_strlen 0001  
       __size_of_vfpfcnvrt 046A                  ?_lcd_init 0001                 _atraso_min 00E4  
       esvaziar_tanque@vol 007E                    __Hparam 0000                    __Lparam 0000  
    __end_of_encher_tanque 25E8            __size_of___flge 0104            __size_of___fleq 00AA  
                  ___fladd 128E                    ___fldiv 1FE2                    ___awdiv 32EA  
                  ___flneg 39DE                    ___awmod 3466                    ___flmul 1BB8  
                  ___flsub 391C                    ___fltol 2D7C            __size_of___wmul 0026  
                ?_vfprintf 008C          __end_of_atraso_ms 369C               __psmallconst 0600  
          __size_of_efgtoa 0B9A            __size_of_lcd_wr 0008            __size_of_floorf 0212  
                  __pcinit 369C                    __ramtop 0600                    __ptext0 2A42  
                  __ptext1 33AE                    __ptext2 37C0                    __ptext3 25E8  
                  __ptext4 237C                    __ptext5 3878                    __ptext6 36FE  
                  __ptext7 174E                    __ptext8 3084                    __ptext9 06F4  
                  _lcd_dat 3A84                    _lcd_cmd 3AAE                    _lcd_str 35C0  
          __size_of_strcpy 005C            __size_of_strlen 0036               __size_of_pad 00C6  
                  _isdigit 3A16           ___awmod@dividend 0001                    _isspace 38CA  
                  _isupper 39A6                    efgtoa@c 0034                    efgtoa@d 0052  
                  efgtoa@e 006A                    efgtoa@f 0030                    efgtoa@g 0066  
                  efgtoa@h 005C                    efgtoa@i 0064                    efgtoa@l 0060  
                  efgtoa@m 004E                    efgtoa@n 006C                    efgtoa@p 0056  
                  efgtoa@t 004A                    efgtoa@u 006E                    efgtoa@w 0059  
                  atoi@neg 000E                    _sprintf 3878                    _tolower 3760  
               ??_lcd_init 0008                    _strncmp 3084       end_of_initialization 36F4  
                  floorf@e 0028                    floorf@m 0024                    floorf@u 002A  
                  floorf@x 001A                    fputc@fp 0003              __Lmediumconst 0000  
                  fputs@fp 000C          __end_of_vfpfcnvrt 1BB8                 efgtoa@mode 005B  
               efgtoa@sign 0054                    postdec1 000FE5                    postdec2 000FDD  
                  postinc0 000FEE                    postinc1 000FE6                    postinc2 000FDE  
               ??_vfprintf 007C                    strcpy@d 0009                    strlen@a 0003  
                  strcpy@s 0007                    strlen@s 0001            _esvaziar_tanque 25E8  
              ___fladd@grs 0010                 lcd_dat@val 0007                 lcd_cmd@val 0007  
              ___fldiv@grs 0014                ___fldiv@rem 000D                ___flmul@grs 000E  
               lcd_str@str 0008             __end_of___flge 2F86             __end_of___fleq 35C0  
               atraso_ms@i 0003                 atraso_ms@j 0005                 atraso_ms@k 0006  
               atraso_ms@t 0001                vfpfcnvrt@ap 0076                vfpfcnvrt@ct 0088  
              vfpfcnvrt@fp 0072             __end_of___wmul 3AFE       esvaziar_tanque@tempo 00C0  
           __end_of_efgtoa 128E             __end_of_lcd_wr 3B38             __end_of_floorf 2A42  
               floorf@F524 00E6             __end_of_strcpy 3878             __end_of_strlen 3A84  
      start_initialization 369C                __end_of_pad 32EA      __end_of___fpclassifyf 3084  
              vfprintf@fmt 008E    __end_of_esvaziar_tanque 2830                   ??___flge 0022  
                 ??___fleq 0009                   ??___wmul 0005                   ??_efgtoa 0035  
                 ??_lcd_wr 0001                __pdataBANK0 00C8                __pdataBANK1 0150  
                 ??_floorf 001E                   ??_strcpy 0005                   ??_strlen 0003  
                ___fladd@a 0005                  ___fladd@b 0001                  ___fldiv@a 0005  
                ___fldiv@b 0001                  ___flmul@a 0005                  ___flmul@b 0001  
                ___flsub@a 001E                  ___flsub@b 001A              __pcstackBANK0 0080  
        __size_of_lcd_init 005C                   ?___fladd 0001                   ?___fldiv 0001  
                 ?___awdiv 0001                   ?___flneg 0001                   ?___awmod 0001  
                 ?___flmul 0001                   ?___flsub 001A                   ?___fltol 001A  
                 ?_lcd_dat 0001                   ?_lcd_cmd 0001          __size_of_vfprintf 0062  
                 ?_lcd_str 0008                  _atrasoMed 00DE                  _atrasoMax 00DC  
                _atrasoMin 00E0                  _atraso_ms 3638                __smallconst 0600  
                 ?_isdigit 0001            ver_quantidade@i 00AC            ver_quantidade@y 00A4  
                 ?_isspace 0001                   ?_isupper 0001                   ?_sprintf 0092  
                 ?_tolower 0007    __size_of_ver_quantidade 00B8             __size_of_fputc 00CA  
           __size_of_fputs 0044                   ?_strncmp 0001             __size_of_putch 0002  
           ___wmul@product 0005           ?_esvaziar_tanque 007E                  _vfpfcnvrt 174E  
        ___wmul@multiplier 0001                 ?_atraso_ms 0001                  lcd_wr@val 0001  
      esvaziar_tanque@F342 0150     __size_of_encher_tanque 026C                 vfpfcnvrt@c 008B  
               vfpfcnvrt@f 0084                  copy_data0 36B0                  copy_data1 36D0  
        ver_quantidade@vol 007E                   __Hrparam 0000                 vfprintf@ap 0090  
                 __Lrparam 0000                 vfprintf@fp 008C           __size_of___fladd 04C0  
         __size_of___fldiv 039A           __size_of___awdiv 00C4           __size_of___flneg 0038  
         __size_of___awmod 00B0           __size_of___flmul 042A           __size_of___flsub 0046  
         __size_of___fltol 0106                 ?_vfpfcnvrt 0072         ___fpclassifyf@F463 00EA  
         __size_of_lcd_dat 002A           __size_of_lcd_cmd 002A                 sprintf@fmt 0094  
         __size_of_lcd_str 0078                   _atoi$787 0010                   _atoi$788 0014  
                 _atoi$789 0012           __size_of_isdigit 0038           __size_of_isspace 0052  
                 __ptext10 3760                   __ptext11 39A6                   __ptext20 2D7C  
                 __ptext12 381C                   __ptext21 391C                   __ptext13 3224  
                 __ptext30 2BEC                   __ptext22 128E                   __ptext14 3A4E  
                 __ptext31 38CA                   __ptext23 39DE                   __ptext15 3962  
                 __ptext32 3A16                   __ptext24 1BB8                   __ptext16 315A  
                 __ptext33 3AD8                   __ptext25 2E82                   __ptext17 3B38  
                 __ptext34 35C0                   __ptext26 3516                   __ptext18 2830  
                 __ptext35 3A84                   __ptext27 1FE2                   __ptext19 2F86  
                 __ptext36 3AAE                   __ptext28 3466                   __ptext37 3B30  
                 __ptext29 32EA                   __ptext38 3638           __size_of_isupper 0038  
                 _lcd_init 37C0           __size_of_sprintf 0052           __size_of_tolower 0060  
               strcpy@dest 0001           __size_of_strncmp 00D6              __size_of_atoi 0190  
            __size_of_main 01AA                   efgtoa@fp 002E                   efgtoa@ne 0050  
                 efgtoa@pp 004C                   efgtoa@ou 003A              _encher_tanque 237C  
                 _vfprintf 36FE                   lcd_str@i 000C                _isspace$818 0007  
              ??_atraso_ms 0003                   isdigit@c 0001             _ver_quantidade 33AE  
                sprintf@ap 009C                   isspace@c 0001                  strcpy@src 0003  
                 isupper@c 0001                  strncmp@_l 0001                  strncmp@_r 0003  
           ?_encher_tanque 007E                efgtoa@nmode 0058                ??_vfpfcnvrt 0078  
            _vfpfcnvrt$753 0082              _vfpfcnvrt$749 0080                   sprintf@f 009E  
                 tolower@c 0007                   sprintf@s 0092     __size_of___fpclassifyf 00FE  
   __end_of_ver_quantidade 3466                   strncmp@l 0008                   strncmp@n 0005  
                 strncmp@r 000A              ___fladd@signs 000D               ___fladd@aexp 000E  
             ___fladd@bexp 000F  

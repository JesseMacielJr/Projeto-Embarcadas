

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Jul 05 13:09:10 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    61                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    63  0000                     
    64                           ; Version 2.20
    65                           ; Generated 12/02/2020 GMT
    66                           ; 
    67                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F4520 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     
    99                           	psect	idataBANK0
   100  0043DC                     __pidataBANK0:
   101                           	callstack 0
   102                           
   103                           ;initializer for _atraso
   104  0043DC  000F               	dw	15
   105                           
   106                           ;initializer for _atraso_min
   107  0043DE  0005               	dw	5
   108                           
   109                           ;initializer for _atrasoMax
   110  0043E0  03E8               	dw	1000
   111                           
   112                           ;initializer for _atrasoMed
   113  0043E2  01F4               	dw	500
   114                           
   115                           ;initializer for _atrasoMin
   116  0043E4  0014               	dw	20
   117                           
   118                           	psect	idataBANK1
   119  004420                     __pidataBANK1:
   120                           	callstack 0
   121                           
   122                           ;initializer for esvaziar_tanque@F342
   123  004420  003F               	dw	63
   124  004422  0006               	dw	6
   125  004424  005B               	dw	91
   126  004426  004F               	dw	79
   127  004428  0066               	dw	102
   128  00442A  006D               	dw	109
   129  00442C  007D               	dw	125
   130  00442E  0007               	dw	7
   131  004430  007F               	dw	127
   132  004432  006F               	dw	111
   133                           
   134                           ;initializer for encher_tanque@F355
   135  004434  003F               	dw	63
   136  004436  0006               	dw	6
   137  004438  005B               	dw	91
   138  00443A  004F               	dw	79
   139  00443C  0066               	dw	102
   140  00443E  006D               	dw	109
   141  004440  007D               	dw	125
   142  004442  0007               	dw	7
   143  004444  007F               	dw	127
   144  004446  006F               	dw	111
   145                           
   146                           	psect	mediumconst
   147  007EFA                     __pmediumconst:
   148                           	callstack 0
   149  007EFA  00                 	db	0
   150  007EFB                     _linha:
   151                           	callstack 0
   152  007EFB  01                 	db	1
   153  007EFC  02                 	db	2
   154  007EFD  04                 	db	4
   155  007EFE  00                 	db	0
   156  007EFF                     __end_of_linha:
   157                           	callstack 0
   158  007EFF                     STR_1:
   159  007EFF  41                 	db	65	;'A'
   160  007F00  62                 	db	98	;'b'
   161  007F01  61                 	db	97	;'a'
   162  007F02  73                 	db	115	;'s'
   163  007F03  74                 	db	116	;'t'
   164  007F04  65                 	db	101	;'e'
   165  007F05  63                 	db	99	;'c'
   166  007F06  69                 	db	105	;'i'
   167  007F07  6D                 	db	109	;'m'
   168  007F08  65                 	db	101	;'e'
   169  007F09  6E                 	db	110	;'n'
   170  007F0A  74                 	db	116	;'t'
   171  007F0B  6F                 	db	111	;'o'
   172  007F0C  20                 	db	32
   173  007F0D  64                 	db	100	;'d'
   174  007F0E  65                 	db	101	;'e'
   175  007F0F  00                 	db	0
   176  007F10                     STR_10:
   177  007F10  45                 	db	69	;'E'
   178  007F11  52                 	db	82	;'R'
   179  007F12  52                 	db	82	;'R'
   180  007F13  4F                 	db	79	;'O'
   181  007F14  3A                 	db	58	;':'
   182  007F15  20                 	db	32
   183  007F16  76                 	db	118	;'v'
   184  007F17  6F                 	db	111	;'o'
   185  007F18  6C                 	db	108	;'l'
   186  007F19  20                 	db	32
   187  007F1A  3E                 	db	62	;'>'
   188  007F1B  20                 	db	32
   189  007F1C  4D                 	db	77	;'M'
   190  007F1D  41                 	db	65	;'A'
   191  007F1E  58                 	db	88	;'X'
   192  007F1F  00                 	db	0
   193  007F20                     STR_5:
   194  007F20  31                 	db	49	;'1'
   195  007F21  2D                 	db	45
   196  007F22  56                 	db	86	;'V'
   197  007F23  65                 	db	101	;'e'
   198  007F24  72                 	db	114	;'r'
   199  007F25  20                 	db	32
   200  007F26  32                 	db	50	;'2'
   201  007F27  2D                 	db	45
   202  007F28  45                 	db	69	;'E'
   203  007F29  6E                 	db	110	;'n'
   204  007F2A  63                 	db	99	;'c'
   205  007F2B  68                 	db	104	;'h'
   206  007F2C  65                 	db	101	;'e'
   207  007F2D  72                 	db	114	;'r'
   208  007F2E  00                 	db	0
   209  007F2F                     STR_4:
   210  007F2F  56                 	db	86	;'V'
   211  007F30  61                 	db	97	;'a'
   212  007F31  7A                 	db	122	;'z'
   213  007F32  61                 	db	97	;'a'
   214  007F33  6F                 	db	111	;'o'
   215  007F34  3A                 	db	58	;':'
   216  007F35  20                 	db	32
   217  007F36  30                 	db	48	;'0'
   218  007F37  2E                 	db	46
   219  007F38  35                 	db	53	;'5'
   220  007F39  20                 	db	32
   221  007F3A  4C                 	db	76	;'L'
   222  007F3B  2F                 	db	47
   223  007F3C  73                 	db	115	;'s'
   224  007F3D  00                 	db	0
   225  007F3E                     STR_24:
   226  007F3E  45                 	db	69	;'E'
   227  007F3F  73                 	db	115	;'s'
   228  007F40  76                 	db	118	;'v'
   229  007F41  61                 	db	97	;'a'
   230  007F42  7A                 	db	122	;'z'
   231  007F43  69                 	db	105	;'i'
   232  007F44  61                 	db	97	;'a'
   233  007F45  6E                 	db	110	;'n'
   234  007F46  64                 	db	100	;'d'
   235  007F47  6F                 	db	111	;'o'
   236  007F48  2E                 	db	46
   237  007F49  2E                 	db	46
   238  007F4A  2E                 	db	46
   239  007F4B  00                 	db	0
   240  007F4C                     STR_20:
   241  007F4C  45                 	db	69	;'E'
   242  007F4D  52                 	db	82	;'R'
   243  007F4E  52                 	db	82	;'R'
   244  007F4F  4F                 	db	79	;'O'
   245  007F50  3A                 	db	58	;':'
   246  007F51  20                 	db	32
   247  007F52  76                 	db	118	;'v'
   248  007F53  6F                 	db	111	;'o'
   249  007F54  6C                 	db	108	;'l'
   250  007F55  20                 	db	32
   251  007F56  3C                 	db	60	;'<'
   252  007F57  20                 	db	32
   253  007F58  30                 	db	48	;'0'
   254  007F59  00                 	db	0
   255  007F5A                     STR_7:
   256  007F5A  20                 	db	32
   257  007F5B  20                 	db	32
   258  007F5C  20                 	db	32
   259  007F5D  20                 	db	32
   260  007F5E  49                 	db	73	;'I'
   261  007F5F  4E                 	db	78	;'N'
   262  007F60  56                 	db	86	;'V'
   263  007F61  41                 	db	65	;'A'
   264  007F62  4C                 	db	76	;'L'
   265  007F63  49                 	db	73	;'I'
   266  007F64  44                 	db	68	;'D'
   267  007F65  4F                 	db	79	;'O'
   268  007F66  21                 	db	33
   269  007F67  00                 	db	0
   270  007F68                     STR_3:
   271  007F68  56                 	db	86	;'V'
   272  007F69  6F                 	db	111	;'o'
   273  007F6A  6C                 	db	108	;'l'
   274  007F6B  20                 	db	32
   275  007F6C  6D                 	db	109	;'m'
   276  007F6D  61                 	db	97	;'a'
   277  007F6E  78                 	db	120	;'x'
   278  007F6F  20                 	db	32
   279  007F70  3D                 	db	61	;'='
   280  007F71  20                 	db	32
   281  007F72  37                 	db	55	;'7'
   282  007F73  30                 	db	48	;'0'
   283  007F74  4C                 	db	76	;'L'
   284  007F75  00                 	db	0
   285  007F76                     STR_16:
   286  007F76  20                 	db	32
   287  007F77  20                 	db	32
   288  007F78  20                 	db	32
   289  007F79  20                 	db	32
   290  007F7A  53                 	db	83	;'S'
   291  007F7B  55                 	db	85	;'U'
   292  007F7C  43                 	db	67	;'C'
   293  007F7D  45                 	db	69	;'E'
   294  007F7E  53                 	db	83	;'S'
   295  007F7F  53                 	db	83	;'S'
   296  007F80  4F                 	db	79	;'O'
   297  007F81  21                 	db	33
   298  007F82  00                 	db	0
   299  007F83                     STR_17:
   300  007F83  20                 	db	32
   301  007F84  20                 	db	32
   302  007F85  20                 	db	32
   303  007F86  20                 	db	32
   304  007F87  30                 	db	48	;'0'
   305  007F88  2D                 	db	45
   306  007F89  56                 	db	86	;'V'
   307  007F8A  6F                 	db	111	;'o'
   308  007F8B  6C                 	db	108	;'l'
   309  007F8C  74                 	db	116	;'t'
   310  007F8D  61                 	db	97	;'a'
   311  007F8E  72                 	db	114	;'r'
   312  007F8F  00                 	db	0
   313  007F90                     STR_14:
   314  007F90  45                 	db	69	;'E'
   315  007F91  6E                 	db	110	;'n'
   316  007F92  63                 	db	99	;'c'
   317  007F93  68                 	db	104	;'h'
   318  007F94  65                 	db	101	;'e'
   319  007F95  6E                 	db	110	;'n'
   320  007F96  64                 	db	100	;'d'
   321  007F97  6F                 	db	111	;'o'
   322  007F98  2E                 	db	46
   323  007F99  2E                 	db	46
   324  007F9A  2E                 	db	46
   325  007F9B  00                 	db	0
   326  007F9C                     STR_8:
   327  007F9C  51                 	db	81	;'Q'
   328  007F9D  75                 	db	117	;'u'
   329  007F9E  61                 	db	97	;'a'
   330  007F9F  6E                 	db	110	;'n'
   331  007FA0  74                 	db	116	;'t'
   332  007FA1  28                 	db	40
   333  007FA2  4C                 	db	76	;'L'
   334  007FA3  29                 	db	41
   335  007FA4  3A                 	db	58	;':'
   336  007FA5  20                 	db	32
   337  007FA6  00                 	db	0
   338  007FA7                     STR_11:
   339  007FA7  52                 	db	82	;'R'
   340  007FA8  42                 	db	66	;'B'
   341  007FA9  31                 	db	49	;'1'
   342  007FAA  2D                 	db	45
   343  007FAB  56                 	db	86	;'V'
   344  007FAC  6F                 	db	111	;'o'
   345  007FAD  6C                 	db	108	;'l'
   346  007FAE  74                 	db	116	;'t'
   347  007FAF  61                 	db	97	;'a'
   348  007FB0  72                 	db	114	;'r'
   349  007FB1  00                 	db	0
   350  007FB2                     STR_9:
   351  007FB2  52                 	db	82	;'R'
   352  007FB3  42                 	db	66	;'B'
   353  007FB4  31                 	db	49	;'1'
   354  007FB5  2D                 	db	45
   355  007FB6  76                 	db	118	;'v'
   356  007FB7  6F                 	db	111	;'o'
   357  007FB8  6C                 	db	108	;'l'
   358  007FB9  74                 	db	116	;'t'
   359  007FBA  61                 	db	97	;'a'
   360  007FBB  72                 	db	114	;'r'
   361  007FBC  00                 	db	0
   362  007FBD                     STR_2:
   363  007FBD  20                 	db	32
   364  007FBE  20                 	db	32
   365  007FBF  20                 	db	32
   366  007FC0  20                 	db	32
   367  007FC1  20                 	db	32
   368  007FC2  20                 	db	32
   369  007FC3  61                 	db	97	;'a'
   370  007FC4  67                 	db	103	;'g'
   371  007FC5  75                 	db	117	;'u'
   372  007FC6  61                 	db	97	;'a'
   373  007FC7  00                 	db	0
   374  007FC8                     STR_6:
   375  007FC8  33                 	db	51	;'3'
   376  007FC9  2D                 	db	45
   377  007FCA  52                 	db	82	;'R'
   378  007FCB  65                 	db	101	;'e'
   379  007FCC  74                 	db	116	;'t'
   380  007FCD  69                 	db	105	;'i'
   381  007FCE  72                 	db	114	;'r'
   382  007FCF  61                 	db	97	;'a'
   383  007FD0  72                 	db	114	;'r'
   384  007FD1  00                 	db	0
   385  007FD2                     STR_15:
   386  007FD2  41                 	db	65	;'A'
   387  007FD3  67                 	db	103	;'g'
   388  007FD4  75                 	db	117	;'u'
   389  007FD5  61                 	db	97	;'a'
   390  007FD6  72                 	db	114	;'r'
   391  007FD7  64                 	db	100	;'d'
   392  007FD8  65                 	db	101	;'e'
   393  007FD9  21                 	db	33
   394  007FDA  00                 	db	0
   395  007FDB                     STR_29:
   396  007FDB  41                 	db	65	;'A'
   397  007FDC  74                 	db	116	;'t'
   398  007FDD  75                 	db	117	;'u'
   399  007FDE  61                 	db	97	;'a'
   400  007FDF  6C                 	db	108	;'l'
   401  007FE0  3A                 	db	58	;':'
   402  007FE1  20                 	db	32
   403  007FE2  00                 	db	0
   404  007FE3                     STR_12:
   405  007FE3  25                 	db	37
   406  007FE4  2E                 	db	46
   407  007FE5  31                 	db	49	;'1'
   408  007FE6  66                 	db	102	;'f'
   409  007FE7  00                 	db	0
   410  007FE8                     STR_32:
   411  007FE8  49                 	db	73	;'I'
   412  007FE9  4E                 	db	78	;'N'
   413  007FEA  46                 	db	70	;'F'
   414  007FEB  00                 	db	0
   415  007FEC                     STR_36:
   416  007FEC  4E                 	db	78	;'N'
   417  007FED  41                 	db	65	;'A'
   418  007FEE  4E                 	db	78	;'N'
   419  007FEF  00                 	db	0
   420  007FF0                     STR_33:
   421  007FF0  69                 	db	105	;'i'
   422  007FF1  6E                 	db	110	;'n'
   423  007FF2  66                 	db	102	;'f'
   424  007FF3  00                 	db	0
   425  007FF4                     STR_37:
   426  007FF4  6E                 	db	110	;'n'
   427  007FF5  61                 	db	97	;'a'
   428  007FF6  6E                 	db	110	;'n'
   429  007FF7  00                 	db	0
   430  007FF8                     STR_40:
   431  007FF8  6C                 	db	108	;'l'
   432  007FF9  66                 	db	102	;'f'
   433  007FFA  00                 	db	0
   434  007FFB                     STR_13:
   435  007FFB  20                 	db	32
   436  007FFC  4C                 	db	76	;'L'
   437  007FFD  00                 	db	0
   438  007FFE  00                 	db	0	; dummy byte at the end
   439  0000                     
   440                           ; #config settings
   441                           
   442                           	psect	cinit
   443  004822                     __pcinit:
   444                           	callstack 0
   445  004822                     start_initialization:
   446                           	callstack 0
   447  004822                     __initialization:
   448                           	callstack 0
   449                           
   450                           ; Initialize objects allocated to BANK1 (40 bytes)
   451                           ; load TBLPTR registers with __pidataBANK1
   452  004822  0E20               	movlw	low __pidataBANK1
   453  004824  6EF6               	movwf	tblptrl,c
   454  004826  0E44               	movlw	high __pidataBANK1
   455  004828  6EF7               	movwf	tblptrh,c
   456  00482A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   457  00482C  6EF8               	movwf	tblptru,c
   458  00482E  EE01  F050         	lfsr	0,__pdataBANK1
   459  004832  EE10 F028          	lfsr	1,40
   460  004836                     copy_data0:
   461  004836  0009               	tblrd		*+
   462  004838  CFF5 FFEE          	movff	tablat,postinc0
   463  00483C  50E5               	movf	postdec1,w,c
   464  00483E  50E1               	movf	fsr1l,w,c
   465  004840  E1FA               	bnz	copy_data0
   466                           
   467                           ; Initialize objects allocated to BANK0 (10 bytes)
   468                           ; load TBLPTR registers with __pidataBANK0
   469  004842  0EDC               	movlw	low __pidataBANK0
   470  004844  6EF6               	movwf	tblptrl,c
   471  004846  0E43               	movlw	high __pidataBANK0
   472  004848  6EF7               	movwf	tblptrh,c
   473  00484A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   474  00484C  6EF8               	movwf	tblptru,c
   475  00484E  EE00  F0F6         	lfsr	0,__pdataBANK0
   476  004852  EE10 F00A          	lfsr	1,10
   477  004856                     copy_data1:
   478  004856  0009               	tblrd		*+
   479  004858  CFF5 FFEE          	movff	tablat,postinc0
   480  00485C  50E5               	movf	postdec1,w,c
   481  00485E  50E1               	movf	fsr1l,w,c
   482  004860  E1FA               	bnz	copy_data1
   483                           
   484                           ; Clear objects allocated to BANK1 (80 bytes)
   485  004862  EE01  F000         	lfsr	0,__pbssBANK1
   486  004866  0E50               	movlw	80
   487  004868                     clear_0:
   488  004868  6AEE               	clrf	postinc0,c
   489  00486A  06E8               	decf	wreg,f,c
   490  00486C  E1FD               	bnz	clear_0
   491                           
   492                           ; Clear objects allocated to BANK0 (22 bytes)
   493  00486E  EE00  F0E0         	lfsr	0,__pbssBANK0
   494  004872  0E16               	movlw	22
   495  004874                     clear_1:
   496  004874  6AEE               	clrf	postinc0,c
   497  004876  06E8               	decf	wreg,f,c
   498  004878  E1FD               	bnz	clear_1
   499  00487A                     end_of_initialization:
   500                           	callstack 0
   501  00487A                     __end_of__initialization:
   502                           	callstack 0
   503  00487A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   504  00487C  6EF8               	movwf	tblptru,c
   505  00487E  0100               	movlb	0
   506  004880  EF21  F02A         	goto	_main	;jump to C main() function
   507                           
   508                           	psect	bssBANK0
   509  0000E0                     __pbssBANK0:
   510                           	callstack 0
   511  0000E0                     floorf@F524:
   512                           	callstack 0
   513  0000E0                     	ds	4
   514  0000E4                     ___fpclassifyf@F463:
   515                           	callstack 0
   516  0000E4                     	ds	4
   517  0000E8                     _nout:
   518                           	callstack 0
   519  0000E8                     	ds	2
   520  0000EA                     _width:
   521                           	callstack 0
   522  0000EA                     	ds	2
   523  0000EC                     _prec:
   524                           	callstack 0
   525  0000EC                     	ds	2
   526  0000EE                     _flags:
   527                           	callstack 0
   528  0000EE                     	ds	2
   529  0000F0                     _i:
   530                           	callstack 0
   531  0000F0                     	ds	2
   532  0000F2                     _volume:
   533                           	callstack 0
   534  0000F2                     	ds	4
   535                           
   536                           	psect	dataBANK0
   537  0000F6                     __pdataBANK0:
   538                           	callstack 0
   539  0000F6                     _atraso:
   540                           	callstack 0
   541  0000F6                     	ds	2
   542  0000F8                     _atraso_min:
   543                           	callstack 0
   544  0000F8                     	ds	2
   545  0000FA                     _atrasoMax:
   546                           	callstack 0
   547  0000FA                     	ds	2
   548  0000FC                     _atrasoMed:
   549                           	callstack 0
   550  0000FC                     	ds	2
   551  0000FE                     _atrasoMin:
   552                           	callstack 0
   553  0000FE                     	ds	2
   554                           
   555                           	psect	bssBANK1
   556  000100                     __pbssBANK1:
   557                           	callstack 0
   558  000100                     _dbuf:
   559                           	callstack 0
   560  000100                     	ds	80
   561                           
   562                           	psect	dataBANK1
   563  000150                     __pdataBANK1:
   564                           	callstack 0
   565  000150                     esvaziar_tanque@F342:
   566                           	callstack 0
   567  000150                     	ds	20
   568  000164                     encher_tanque@F355:
   569                           	callstack 0
   570  000164                     	ds	20
   571                           
   572                           	psect	cstackBANK0
   573  000080                     __pcstackBANK0:
   574                           	callstack 0
   575  000080                     _vfpfcnvrt$788:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x0
   579  000080                     	ds	2
   580  000082                     _vfpfcnvrt$792:
   581                           	callstack 0
   582                           
   583                           ; 2 bytes @ 0x2
   584  000082                     	ds	2
   585  000084                     vfpfcnvrt@f:
   586                           	callstack 0
   587                           
   588                           ; 4 bytes @ 0x4
   589  000084                     	ds	4
   590  000088                     vfpfcnvrt@ct:
   591                           	callstack 0
   592                           
   593                           ; 3 bytes @ 0x8
   594  000088                     	ds	3
   595  00008B                     vfpfcnvrt@c:
   596                           	callstack 0
   597                           
   598                           ; 1 bytes @ 0xB
   599  00008B                     	ds	1
   600  00008C                     ?_vfprintf:
   601                           	callstack 0
   602  00008C                     vfprintf@fp:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0xC
   606  00008C                     	ds	2
   607  00008E                     vfprintf@fmt:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0xE
   611  00008E                     	ds	2
   612  000090                     vfprintf@ap:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x10
   616  000090                     	ds	2
   617  000092                     ?_sprintf:
   618                           	callstack 0
   619  000092                     sprintf@s:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x12
   623  000092                     	ds	2
   624  000094                     sprintf@fmt:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x14
   628  000094                     	ds	8
   629  00009C                     sprintf@ap:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x1C
   633  00009C                     	ds	2
   634  00009E                     sprintf@f:
   635                           	callstack 0
   636                           
   637                           ; 6 bytes @ 0x1E
   638  00009E                     	ds	6
   639  0000A4                     ??_encher_tanque:
   640  0000A4                     ver_quantidade@y:
   641                           	callstack 0
   642  0000A4                     esvaziar_tanque@numeros:
   643                           	callstack 0
   644                           
   645                           ; 20 bytes @ 0x24
   646  0000A4                     	ds	4
   647  0000A8                     encher_tanque@numeros:
   648                           	callstack 0
   649                           
   650                           ; 20 bytes @ 0x28
   651  0000A8                     	ds	4
   652  0000AC                     ver_quantidade@num:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x2C
   656  0000AC                     	ds	2
   657  0000AE                     ver_quantidade@tmp:
   658                           	callstack 0
   659                           
   660                           ; 1 bytes @ 0x2E
   661  0000AE                     	ds	1
   662  0000AF                     ver_quantidade@i:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x2F
   666  0000AF                     	ds	9
   667  0000B8                     esvaziar_tanque@y:
   668                           	callstack 0
   669                           
   670                           ; 8 bytes @ 0x38
   671  0000B8                     	ds	4
   672  0000BC                     encher_tanque@y:
   673                           	callstack 0
   674                           
   675                           ; 8 bytes @ 0x3C
   676  0000BC                     	ds	4
   677  0000C0                     esvaziar_tanque@tempo:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x40
   681  0000C0                     	ds	2
   682  0000C2                     esvaziar_tanque@opt:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x42
   686  0000C2                     	ds	2
   687  0000C4                     esvaziar_tanque@tmp:
   688                           	callstack 0
   689  0000C4                     encher_tanque@opt:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x44
   693  0000C4                     	ds	1
   694  0000C5                     esvaziar_tanque@decremento:
   695                           	callstack 0
   696                           
   697                           ; 4 bytes @ 0x45
   698  0000C5                     	ds	1
   699  0000C6                     _encher_tanque$1210:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x46
   703  0000C6                     	ds	2
   704  0000C8                     encher_tanque@potencia:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x48
   708  0000C8                     	ds	1
   709  0000C9                     esvaziar_tanque@i:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0x49
   713  0000C9                     	ds	1
   714  0000CA                     encher_tanque@i_150:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x4A
   718  0000CA                     	ds	2
   719  0000CC                     encher_tanque@num:
   720                           	callstack 0
   721                           
   722                           ; 4 bytes @ 0x4C
   723  0000CC                     	ds	4
   724  0000D0                     encher_tanque@incremento:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x50
   728  0000D0                     	ds	2
   729  0000D2                     encher_tanque@t1:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0x52
   733  0000D2                     	ds	2
   734  0000D4                     encher_tanque@tempo:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0x54
   738  0000D4                     	ds	2
   739  0000D6                     encher_tanque@i:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x56
   743  0000D6                     	ds	2
   744  0000D8                     encher_tanque@t2:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x58
   748  0000D8                     	ds	2
   749  0000DA                     encher_tanque@tmp:
   750                           	callstack 0
   751                           
   752                           ; 1 bytes @ 0x5A
   753  0000DA                     	ds	3
   754  0000DD                     main@tmp:
   755                           	callstack 0
   756                           
   757                           ; 1 bytes @ 0x5D
   758  0000DD                     	ds	1
   759  0000DE                     main@opt:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x5E
   763  0000DE                     	ds	2
   764                           
   765                           	psect	cstackCOMRAM
   766  000001                     __pcstackCOMRAM:
   767                           	callstack 0
   768  000001                     ?_strlen:
   769                           	callstack 0
   770  000001                     ?___fpclassifyf:
   771                           	callstack 0
   772  000001                     ?_isupper:
   773                           	callstack 0
   774  000001                     ?_isdigit:
   775                           	callstack 0
   776  000001                     ?_strncmp:
   777                           	callstack 0
   778  000001                     ?_isspace:
   779                           	callstack 0
   780  000001                     ?___wmul:
   781                           	callstack 0
   782  000001                     ?___awmod:
   783                           	callstack 0
   784  000001                     ?___lwdiv:
   785                           	callstack 0
   786  000001                     ?___fldiv:
   787                           	callstack 0
   788  000001                     ?___flmul:
   789                           	callstack 0
   790  000001                     ?___flneg:
   791                           	callstack 0
   792  000001                     ?___xxtofl:
   793                           	callstack 0
   794  000001                     lcd_wr@val:
   795                           	callstack 0
   796  000001                     atraso_ms@t:
   797                           	callstack 0
   798  000001                     ___wmul@multiplier:
   799                           	callstack 0
   800  000001                     ___awmod@dividend:
   801                           	callstack 0
   802  000001                     ___lwdiv@dividend:
   803                           	callstack 0
   804  000001                     isdigit@c:
   805                           	callstack 0
   806  000001                     isspace@c:
   807                           	callstack 0
   808  000001                     isupper@c:
   809                           	callstack 0
   810  000001                     fputc@c:
   811                           	callstack 0
   812  000001                     strcpy@dest:
   813                           	callstack 0
   814  000001                     strlen@s:
   815                           	callstack 0
   816  000001                     strncmp@_l:
   817                           	callstack 0
   818  000001                     ___fleq@ff1:
   819                           	callstack 0
   820  000001                     ___flneg@f1:
   821                           	callstack 0
   822  000001                     ___fldiv@b:
   823                           	callstack 0
   824  000001                     ___flmul@b:
   825                           	callstack 0
   826  000001                     ___xxtofl@val:
   827                           	callstack 0
   828  000001                     ___fpclassifyf@x:
   829                           	callstack 0
   830                           
   831                           ; 4 bytes @ 0x0
   832  000001                     	ds	2
   833  000003                     ??_isupper:
   834  000003                     ??_isdigit:
   835  000003                     ??_isspace:
   836  000003                     atraso_ms@i:
   837                           	callstack 0
   838  000003                     ___wmul@multiplicand:
   839                           	callstack 0
   840  000003                     ___awmod@divisor:
   841                           	callstack 0
   842  000003                     ___lwdiv@divisor:
   843                           	callstack 0
   844  000003                     fputc@fp:
   845                           	callstack 0
   846  000003                     strcpy@src:
   847                           	callstack 0
   848  000003                     strlen@a:
   849                           	callstack 0
   850  000003                     strncmp@_r:
   851                           	callstack 0
   852                           
   853                           ; 2 bytes @ 0x2
   854  000003                     	ds	2
   855  000005                     ??_fputc:
   856  000005                     ??___fpclassifyf:
   857  000005                     ??_strcpy:
   858  000005                     ??___xxtofl:
   859  000005                     atraso_ms@j:
   860                           	callstack 0
   861  000005                     ___awmod@counter:
   862                           	callstack 0
   863  000005                     ___wmul@product:
   864                           	callstack 0
   865  000005                     ___lwdiv@quotient:
   866                           	callstack 0
   867  000005                     strncmp@n:
   868                           	callstack 0
   869  000005                     ___fleq@ff2:
   870                           	callstack 0
   871  000005                     ___fldiv@a:
   872                           	callstack 0
   873  000005                     ___flmul@a:
   874                           	callstack 0
   875                           
   876                           ; 4 bytes @ 0x4
   877  000005                     	ds	1
   878  000006                     atraso_ms@k:
   879                           	callstack 0
   880  000006                     ___awmod@sign:
   881                           	callstack 0
   882                           
   883                           ; 1 bytes @ 0x5
   884  000006                     	ds	1
   885  000007                     ??_strncmp:
   886  000007                     ?_tolower:
   887                           	callstack 0
   888  000007                     ?___awdiv:
   889                           	callstack 0
   890  000007                     lcd_cmd@val:
   891                           	callstack 0
   892  000007                     lcd_dat@val:
   893                           	callstack 0
   894  000007                     ___lwdiv@counter:
   895                           	callstack 0
   896  000007                     _isspace$857:
   897                           	callstack 0
   898  000007                     tc_tecla@timeout:
   899                           	callstack 0
   900  000007                     ___awdiv@dividend:
   901                           	callstack 0
   902  000007                     strcpy@s:
   903                           	callstack 0
   904  000007                     tolower@c:
   905                           	callstack 0
   906                           
   907                           ; 2 bytes @ 0x6
   908  000007                     	ds	1
   909  000008                     ??_pwmSet1:
   910  000008                     ?_atoi:
   911                           	callstack 0
   912  000008                     lcd_str@str:
   913                           	callstack 0
   914  000008                     atoi@s:
   915                           	callstack 0
   916  000008                     strncmp@l:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0x7
   920  000008                     	ds	1
   921  000009                     ??___fldiv:
   922  000009                     ??___flmul:
   923  000009                     ??_tolower:
   924  000009                     ??___fleq:
   925  000009                     ___xxtofl@sign:
   926                           	callstack 0
   927  000009                     tc_tecla@to:
   928                           	callstack 0
   929  000009                     ___awdiv@divisor:
   930                           	callstack 0
   931  000009                     ___fpclassifyf@e:
   932                           	callstack 0
   933  000009                     strcpy@d:
   934                           	callstack 0
   935                           
   936                           ; 2 bytes @ 0x8
   937  000009                     	ds	1
   938  00000A                     ??_lcd_str:
   939  00000A                     ??_atoi:
   940  00000A                     pwmSet1@porcento:
   941                           	callstack 0
   942  00000A                     ___xxtofl@exp:
   943                           	callstack 0
   944  00000A                     fputs@s:
   945                           	callstack 0
   946  00000A                     strncmp@r:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0x9
   950  00000A                     	ds	1
   951  00000B                     tc_tecla@tmp:
   952                           	callstack 0
   953  00000B                     ___awdiv@counter:
   954                           	callstack 0
   955  00000B                     pwmSet1@val:
   956                           	callstack 0
   957  00000B                     ___xxtofl@arg:
   958                           	callstack 0
   959  00000B                     ___fpclassifyf@u:
   960                           	callstack 0
   961                           
   962                           ; 4 bytes @ 0xA
   963  00000B                     	ds	1
   964  00000C                     tc_tecla@ret:
   965                           	callstack 0
   966  00000C                     lcd_str@i:
   967                           	callstack 0
   968  00000C                     ___awdiv@sign:
   969                           	callstack 0
   970  00000C                     fputs@fp:
   971                           	callstack 0
   972                           
   973                           ; 2 bytes @ 0xB
   974  00000C                     	ds	1
   975  00000D                     tc_tecla@i:
   976                           	callstack 0
   977  00000D                     ___flmul@sign:
   978                           	callstack 0
   979  00000D                     ___awdiv@quotient:
   980                           	callstack 0
   981  00000D                     _tolower$921:
   982                           	callstack 0
   983  00000D                     ___fldiv@rem:
   984                           	callstack 0
   985                           
   986                           ; 4 bytes @ 0xC
   987  00000D                     	ds	1
   988  00000E                     fputs@c:
   989                           	callstack 0
   990  00000E                     atoi@neg:
   991                           	callstack 0
   992  00000E                     ___flmul@grs:
   993                           	callstack 0
   994                           
   995                           ; 4 bytes @ 0xD
   996  00000E                     	ds	1
   997  00000F                     ?___fladd:
   998                           	callstack 0
   999  00000F                     fputs@i:
  1000                           	callstack 0
  1001  00000F                     ___fladd@b:
  1002                           	callstack 0
  1003                           
  1004                           ; 4 bytes @ 0xE
  1005  00000F                     	ds	1
  1006  000010                     _atoi$826:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0xF
  1010  000010                     	ds	1
  1011  000011                     ?_pad:
  1012                           	callstack 0
  1013  000011                     ___fldiv@sign:
  1014                           	callstack 0
  1015  000011                     pad@fp:
  1016                           	callstack 0
  1017                           
  1018                           ; 2 bytes @ 0x10
  1019  000011                     	ds	1
  1020  000012                     ___flmul@aexp:
  1021                           	callstack 0
  1022  000012                     ___fldiv@new_exp:
  1023                           	callstack 0
  1024  000012                     _atoi$828:
  1025                           	callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x11
  1028  000012                     	ds	1
  1029  000013                     ___flmul@bexp:
  1030                           	callstack 0
  1031  000013                     pad@buf:
  1032                           	callstack 0
  1033  000013                     ___fladd@a:
  1034                           	callstack 0
  1035                           
  1036                           ; 4 bytes @ 0x12
  1037  000013                     	ds	1
  1038  000014                     _atoi$827:
  1039                           	callstack 0
  1040  000014                     ___fldiv@grs:
  1041                           	callstack 0
  1042  000014                     ___flmul@prod:
  1043                           	callstack 0
  1044                           
  1045                           ; 4 bytes @ 0x13
  1046  000014                     	ds	1
  1047  000015                     pad@p:
  1048                           	callstack 0
  1049  000015                     atoi@n:
  1050                           	callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x14
  1053  000015                     	ds	2
  1054  000017                     ??___fladd:
  1055  000017                     ??_pad:
  1056                           
  1057                           ; 1 bytes @ 0x16
  1058  000017                     	ds	1
  1059  000018                     ___fldiv@bexp:
  1060                           	callstack 0
  1061  000018                     ___flmul@temp:
  1062                           	callstack 0
  1063  000018                     pad@i:
  1064                           	callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x17
  1067  000018                     	ds	1
  1068  000019                     ___fldiv@aexp:
  1069                           	callstack 0
  1070                           
  1071                           ; 1 bytes @ 0x18
  1072  000019                     	ds	1
  1073  00001A                     ?_floorf:
  1074                           	callstack 0
  1075  00001A                     ?___fltol:
  1076                           	callstack 0
  1077  00001A                     pad@w:
  1078                           	callstack 0
  1079  00001A                     ___fltol@f1:
  1080                           	callstack 0
  1081  00001A                     floorf@x:
  1082                           	callstack 0
  1083                           
  1084                           ; 4 bytes @ 0x19
  1085  00001A                     	ds	1
  1086  00001B                     ___fladd@signs:
  1087                           	callstack 0
  1088                           
  1089                           ; 1 bytes @ 0x1A
  1090  00001B                     	ds	1
  1091  00001C                     ___fladd@aexp:
  1092                           	callstack 0
  1093                           
  1094                           ; 1 bytes @ 0x1B
  1095  00001C                     	ds	1
  1096  00001D                     ___fladd@bexp:
  1097                           	callstack 0
  1098                           
  1099                           ; 1 bytes @ 0x1C
  1100  00001D                     	ds	1
  1101  00001E                     ??_floorf:
  1102  00001E                     ??___fltol:
  1103  00001E                     ___fladd@grs:
  1104                           	callstack 0
  1105                           
  1106                           ; 1 bytes @ 0x1D
  1107  00001E                     	ds	1
  1108  00001F                     ?___flsub:
  1109                           	callstack 0
  1110  00001F                     ___flge@ff1:
  1111                           	callstack 0
  1112  00001F                     ___flsub@b:
  1113                           	callstack 0
  1114                           
  1115                           ; 4 bytes @ 0x1E
  1116  00001F                     	ds	3
  1117  000022                     ___fltol@sign1:
  1118                           	callstack 0
  1119                           
  1120                           ; 1 bytes @ 0x21
  1121  000022                     	ds	1
  1122  000023                     ___fltol@exp1:
  1123                           	callstack 0
  1124  000023                     ___flge@ff2:
  1125                           	callstack 0
  1126  000023                     ___flsub@a:
  1127                           	callstack 0
  1128                           
  1129                           ; 4 bytes @ 0x22
  1130  000023                     	ds	1
  1131  000024                     floorf@m:
  1132                           	callstack 0
  1133                           
  1134                           ; 4 bytes @ 0x23
  1135  000024                     	ds	3
  1136  000027                     ??___flge:
  1137                           
  1138                           ; 1 bytes @ 0x26
  1139  000027                     	ds	1
  1140  000028                     floorf@e:
  1141                           	callstack 0
  1142                           
  1143                           ; 2 bytes @ 0x27
  1144  000028                     	ds	2
  1145  00002A                     floorf@u:
  1146                           	callstack 0
  1147                           
  1148                           ; 4 bytes @ 0x29
  1149  00002A                     	ds	4
  1150  00002E                     ?_efgtoa:
  1151                           	callstack 0
  1152  00002E                     efgtoa@fp:
  1153                           	callstack 0
  1154                           
  1155                           ; 2 bytes @ 0x2D
  1156  00002E                     	ds	2
  1157  000030                     efgtoa@f:
  1158                           	callstack 0
  1159                           
  1160                           ; 4 bytes @ 0x2F
  1161  000030                     	ds	4
  1162  000034                     efgtoa@c:
  1163                           	callstack 0
  1164                           
  1165                           ; 1 bytes @ 0x33
  1166  000034                     	ds	1
  1167  000035                     ??_efgtoa:
  1168                           
  1169                           ; 1 bytes @ 0x34
  1170  000035                     	ds	5
  1171  00003A                     efgtoa@ou:
  1172                           	callstack 0
  1173                           
  1174                           ; 4 bytes @ 0x39
  1175  00003A                     	ds	4
  1176  00003E                     _efgtoa$762:
  1177                           	callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x3D
  1180  00003E                     	ds	2
  1181  000040                     _efgtoa$763:
  1182                           	callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x3F
  1185  000040                     	ds	2
  1186  000042                     _efgtoa$768:
  1187                           	callstack 0
  1188                           
  1189                           ; 2 bytes @ 0x41
  1190  000042                     	ds	2
  1191  000044                     _efgtoa$772:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x43
  1195  000044                     	ds	2
  1196  000046                     _efgtoa$773:
  1197                           	callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x45
  1200  000046                     	ds	2
  1201  000048                     _efgtoa$774:
  1202                           	callstack 0
  1203                           
  1204                           ; 2 bytes @ 0x47
  1205  000048                     	ds	2
  1206  00004A                     efgtoa@t:
  1207                           	callstack 0
  1208                           
  1209                           ; 2 bytes @ 0x49
  1210  00004A                     	ds	2
  1211  00004C                     efgtoa@pp:
  1212                           	callstack 0
  1213                           
  1214                           ; 2 bytes @ 0x4B
  1215  00004C                     	ds	2
  1216  00004E                     efgtoa@m:
  1217                           	callstack 0
  1218                           
  1219                           ; 2 bytes @ 0x4D
  1220  00004E                     	ds	2
  1221  000050                     efgtoa@ne:
  1222                           	callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x4F
  1225  000050                     	ds	2
  1226  000052                     efgtoa@d:
  1227                           	callstack 0
  1228                           
  1229                           ; 2 bytes @ 0x51
  1230  000052                     	ds	2
  1231  000054                     efgtoa@sign:
  1232                           	callstack 0
  1233                           
  1234                           ; 2 bytes @ 0x53
  1235  000054                     	ds	2
  1236  000056                     efgtoa@p:
  1237                           	callstack 0
  1238                           
  1239                           ; 2 bytes @ 0x55
  1240  000056                     	ds	2
  1241  000058                     efgtoa@nmode:
  1242                           	callstack 0
  1243                           
  1244                           ; 1 bytes @ 0x57
  1245  000058                     	ds	1
  1246  000059                     efgtoa@w:
  1247                           	callstack 0
  1248                           
  1249                           ; 2 bytes @ 0x58
  1250  000059                     	ds	2
  1251  00005B                     efgtoa@mode:
  1252                           	callstack 0
  1253                           
  1254                           ; 1 bytes @ 0x5A
  1255  00005B                     	ds	1
  1256  00005C                     efgtoa@h:
  1257                           	callstack 0
  1258                           
  1259                           ; 4 bytes @ 0x5B
  1260  00005C                     	ds	4
  1261  000060                     efgtoa@l:
  1262                           	callstack 0
  1263                           
  1264                           ; 4 bytes @ 0x5F
  1265  000060                     	ds	4
  1266  000064                     efgtoa@i:
  1267                           	callstack 0
  1268                           
  1269                           ; 2 bytes @ 0x63
  1270  000064                     	ds	2
  1271  000066                     efgtoa@g:
  1272                           	callstack 0
  1273                           
  1274                           ; 4 bytes @ 0x65
  1275  000066                     	ds	4
  1276  00006A                     efgtoa@e:
  1277                           	callstack 0
  1278                           
  1279                           ; 2 bytes @ 0x69
  1280  00006A                     	ds	2
  1281  00006C                     efgtoa@n:
  1282                           	callstack 0
  1283                           
  1284                           ; 2 bytes @ 0x6B
  1285  00006C                     	ds	2
  1286  00006E                     efgtoa@u:
  1287                           	callstack 0
  1288                           
  1289                           ; 4 bytes @ 0x6D
  1290  00006E                     	ds	4
  1291  000072                     ?_vfpfcnvrt:
  1292                           	callstack 0
  1293  000072                     vfpfcnvrt@fp:
  1294                           	callstack 0
  1295                           
  1296                           ; 2 bytes @ 0x71
  1297  000072                     	ds	2
  1298  000074                     vfpfcnvrt@fmt:
  1299                           	callstack 0
  1300                           
  1301                           ; 2 bytes @ 0x73
  1302  000074                     	ds	2
  1303  000076                     vfpfcnvrt@ap:
  1304                           	callstack 0
  1305                           
  1306                           ; 2 bytes @ 0x75
  1307  000076                     	ds	2
  1308  000078                     ??_vfpfcnvrt:
  1309                           
  1310                           ; 1 bytes @ 0x77
  1311  000078                     	ds	4
  1312  00007C                     vfprintf@cfmt:
  1313                           	callstack 0
  1314                           
  1315                           ; 2 bytes @ 0x7B
  1316  00007C                     	ds	2
  1317  00007E                     encher_tanque@vol:
  1318                           	callstack 0
  1319  00007E                     esvaziar_tanque@vol:
  1320                           	callstack 0
  1321  00007E                     ver_quantidade@vol:
  1322                           	callstack 0
  1323                           
  1324                           ; 2 bytes @ 0x7D
  1325  00007E                     	ds	2
  1326  000080                     
  1327                           ; 1 bytes @ 0x7F
  1328 ;;
  1329 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1330 ;;
  1331 ;; *************** function _main *****************
  1332 ;; Defined at:
  1333 ;;		line 16 in file "main.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;		None
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;  opt             2   94[BANK0 ] unsigned int 
  1338 ;;  tmp             1   93[BANK0 ] unsigned char 
  1339 ;;  flag            2    0        int 
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  1    wreg      void 
  1342 ;; Registers used:
  1343 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1349 ;;      Params:         0       0       0       0       0       0       0
  1350 ;;      Locals:         0       5       0       0       0       0       0
  1351 ;;      Temps:          0       0       0       0       0       0       0
  1352 ;;      Totals:         0       5       0       0       0       0       0
  1353 ;;Total ram usage:        5 bytes
  1354 ;; Hardware stack levels required when called:    9
  1355 ;; This function calls:
  1356 ;;		_atraso_ms
  1357 ;;		_encher_tanque
  1358 ;;		_esvaziar_tanque
  1359 ;;		_lcd_cmd
  1360 ;;		_lcd_init
  1361 ;;		_lcd_str
  1362 ;;		_tc_tecla
  1363 ;;		_ver_quantidade
  1364 ;; This function is called by:
  1365 ;;		Startup code after reset
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369                           	psect	text0
  1370  005442                     __ptext0:
  1371                           	callstack 0
  1372  005442                     _main:
  1373                           	callstack 22
  1374  005442                     
  1375                           ;main.c: 18:     (*(volatile __near unsigned char*)0xFC1) = 0x06;
  1376  005442  0E06               	movlw	6
  1377  005444  6EC1               	movwf	193,c	;volatile
  1378                           
  1379                           ;main.c: 19:     (*(volatile __near unsigned char*)0xF93) = 0x01;
  1380  005446  0E01               	movlw	1
  1381  005448  6E93               	movwf	147,c	;volatile
  1382                           
  1383                           ;main.c: 20:     (*(volatile __near unsigned char*)0xF95) = 0x00;
  1384  00544A  0E00               	movlw	0
  1385  00544C  6E95               	movwf	149,c	;volatile
  1386                           
  1387                           ;main.c: 21:     (*(volatile __near unsigned char*)0xF95) = 0x00;
  1388  00544E  0E00               	movlw	0
  1389  005450  6E95               	movwf	149,c	;volatile
  1390                           
  1391                           ;main.c: 22:     (*(volatile __near unsigned char*)0xF96) = 0x00;
  1392  005452  0E00               	movlw	0
  1393  005454  6E96               	movwf	150,c	;volatile
  1394  005456                     
  1395                           ;main.c: 24:     lcd_init();
  1396  005456  EC82  F023         	call	_lcd_init	;wreg free
  1397  00545A                     
  1398                           ;main.c: 27:     lcd_cmd(0x01);
  1399  00545A  0E01               	movlw	1
  1400  00545C  EC24  F022         	call	_lcd_cmd
  1401  005460                     
  1402                           ;main.c: 28:     lcd_cmd(0x80);
  1403  005460  0E80               	movlw	128
  1404  005462  EC24  F022         	call	_lcd_cmd
  1405  005466                     
  1406                           ;main.c: 29:     lcd_str("Abastecimento de");
  1407  005466  0EFF               	movlw	low STR_1
  1408  005468  6E08               	movwf	lcd_str@str^0,c
  1409  00546A  0E7E               	movlw	high STR_1
  1410  00546C  6E09               	movwf	(lcd_str@str+1)^0,c
  1411  00546E  ECE4  F024         	call	_lcd_str	;wreg free
  1412  005472                     
  1413                           ;main.c: 30:     lcd_cmd(0xC0);
  1414  005472  0EC0               	movlw	192
  1415  005474  EC24  F022         	call	_lcd_cmd
  1416  005478                     
  1417                           ;main.c: 31:     lcd_str("      agua");
  1418  005478  0EBD               	movlw	low STR_2
  1419  00547A  6E08               	movwf	lcd_str@str^0,c
  1420  00547C  0E7F               	movlw	high STR_2
  1421  00547E  6E09               	movwf	(lcd_str@str+1)^0,c
  1422  005480  ECE4  F024         	call	_lcd_str	;wreg free
  1423  005484                     
  1424                           ;main.c: 32:     atraso_ms(atrasoMin);
  1425  005484  0E00               	movlw	0
  1426  005486  6E02               	movwf	(atraso_ms@t+1)^0,c
  1427  005488  0E14               	movlw	20
  1428  00548A  6E01               	movwf	atraso_ms@t^0,c
  1429  00548C  EC42  F024         	call	_atraso_ms	;wreg free
  1430  005490                     
  1431                           ;main.c: 33:     lcd_cmd(0x01);
  1432  005490  0E01               	movlw	1
  1433  005492  EC24  F022         	call	_lcd_cmd
  1434  005496                     
  1435                           ;main.c: 36:     lcd_cmd(0x80);
  1436  005496  0E80               	movlw	128
  1437  005498  EC24  F022         	call	_lcd_cmd
  1438  00549C                     
  1439                           ;main.c: 37:     lcd_str("Vol max = 70L");
  1440  00549C  0E68               	movlw	low STR_3
  1441  00549E  6E08               	movwf	lcd_str@str^0,c
  1442  0054A0  0E7F               	movlw	high STR_3
  1443  0054A2  6E09               	movwf	(lcd_str@str+1)^0,c
  1444  0054A4  ECE4  F024         	call	_lcd_str	;wreg free
  1445  0054A8                     
  1446                           ;main.c: 38:     lcd_cmd(0xC0);
  1447  0054A8  0EC0               	movlw	192
  1448  0054AA  EC24  F022         	call	_lcd_cmd
  1449  0054AE                     
  1450                           ;main.c: 39:     lcd_str("Vazao: 0.5 L/s");
  1451  0054AE  0E2F               	movlw	low STR_4
  1452  0054B0  6E08               	movwf	lcd_str@str^0,c
  1453  0054B2  0E7F               	movlw	high STR_4
  1454  0054B4  6E09               	movwf	(lcd_str@str+1)^0,c
  1455  0054B6  ECE4  F024         	call	_lcd_str	;wreg free
  1456  0054BA                     
  1457                           ;main.c: 40:     atraso_ms(atrasoMin);
  1458  0054BA  0E00               	movlw	0
  1459  0054BC  6E02               	movwf	(atraso_ms@t+1)^0,c
  1460  0054BE  0E14               	movlw	20
  1461  0054C0  6E01               	movwf	atraso_ms@t^0,c
  1462  0054C2  EC42  F024         	call	_atraso_ms	;wreg free
  1463  0054C6                     
  1464                           ;main.c: 41:     lcd_cmd(0x01);
  1465  0054C6  0E01               	movlw	1
  1466  0054C8  EC24  F022         	call	_lcd_cmd
  1467  0054CC                     l31:
  1468  0054CC                     
  1469                           ;main.c: 48:         lcd_cmd(0x01);
  1470  0054CC  0E01               	movlw	1
  1471  0054CE  EC24  F022         	call	_lcd_cmd
  1472  0054D2                     
  1473                           ;main.c: 49:         lcd_cmd(0x80);
  1474  0054D2  0E80               	movlw	128
  1475  0054D4  EC24  F022         	call	_lcd_cmd
  1476  0054D8                     
  1477                           ;main.c: 50:         lcd_str("1-Ver 2-Encher");
  1478  0054D8  0E20               	movlw	low STR_5
  1479  0054DA  6E08               	movwf	lcd_str@str^0,c
  1480  0054DC  0E7F               	movlw	high STR_5
  1481  0054DE  6E09               	movwf	(lcd_str@str+1)^0,c
  1482  0054E0  ECE4  F024         	call	_lcd_str	;wreg free
  1483  0054E4                     
  1484                           ;main.c: 51:         lcd_cmd(0xC0);
  1485  0054E4  0EC0               	movlw	192
  1486  0054E6  EC24  F022         	call	_lcd_cmd
  1487  0054EA                     
  1488                           ;main.c: 52:         lcd_str("3-Retirar");
  1489  0054EA  0EC8               	movlw	low STR_6
  1490  0054EC  6E08               	movwf	lcd_str@str^0,c
  1491  0054EE  0E7F               	movlw	high STR_6
  1492  0054F0  6E09               	movwf	(lcd_str@str+1)^0,c
  1493  0054F2  ECE4  F024         	call	_lcd_str	;wreg free
  1494  0054F6                     
  1495                           ;main.c: 55:         (*(volatile __near unsigned char*)0xF93) = 0xF8;
  1496  0054F6  0EF8               	movlw	248
  1497  0054F8  6E93               	movwf	147,c	;volatile
  1498  0054FA                     
  1499                           ;main.c: 56:         (*(volatile __near unsigned char*)0xF92) = 0x20;
  1500  0054FA  0E20               	movlw	32
  1501  0054FC  6E92               	movwf	146,c	;volatile
  1502  0054FE                     
  1503                           ;main.c: 57:         (*(volatile __near unsigned char*)0xF93) = 0x3F;
  1504  0054FE  0E3F               	movlw	63
  1505  005500  6E93               	movwf	147,c	;volatile
  1506  005502                     
  1507                           ;main.c: 58:         (*(volatile __near unsigned char*)0xF92) = 0x20;
  1508  005502  0E20               	movlw	32
  1509  005504  6E92               	movwf	146,c	;volatile
  1510  005506                     
  1511                           ;main.c: 59:         (*(volatile __near unsigned char*)0xF93) = 0x3F;
  1512  005506  0E3F               	movlw	63
  1513  005508  6E93               	movwf	147,c	;volatile
  1514  00550A                     
  1515                           ;main.c: 60:         (*(volatile __near unsigned char*)0xF96) = 0x00;
  1516  00550A  0E00               	movlw	0
  1517  00550C  6E96               	movwf	150,c	;volatile
  1518  00550E                     
  1519                           ;main.c: 72:         unsigned int opt;;main.c: 73:         unsigned char tmp;;main.c: 75
      +                          :         (*(volatile __near unsigned char*)0xF93) = 0xF8;
  1520  00550E  0EF8               	movlw	248
  1521  005510  6E93               	movwf	147,c	;volatile
  1522  005512                     l4897:
  1523                           
  1524                           ;main.c: 78:             (*(volatile __near unsigned char*)0xF95) = 0x0F;
  1525  005512  0E0F               	movlw	15
  1526  005514  6E95               	movwf	149,c	;volatile
  1527  005516                     
  1528                           ;main.c: 79:             tmp = tc_tecla(0) + 0x30;
  1529  005516  0E00               	movlw	0
  1530  005518  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  1531  00551A  0E00               	movlw	0
  1532  00551C  6E07               	movwf	tc_tecla@timeout^0,c
  1533  00551E  ECC3  F02B         	call	_tc_tecla	;wreg free
  1534  005522  0F30               	addlw	48
  1535  005524  0100               	movlb	0	; () banked
  1536  005526  6FDD               	movwf	main@tmp& (0+255),b
  1537  005528                     
  1538                           ; BSR set to: 0
  1539                           ;main.c: 80:             (*(volatile __near unsigned char*)0xF95) = 0x00;
  1540  005528  0E00               	movlw	0
  1541  00552A  6E95               	movwf	149,c	;volatile
  1542  00552C                     
  1543                           ; BSR set to: 0
  1544                           ;main.c: 81:             opt = (tmp - '0');
  1545  00552C  0ED0               	movlw	208
  1546  00552E  25DD               	addwf	main@tmp& (0+255),w,b
  1547  005530  6FDE               	movwf	main@opt& (0+255),b
  1548  005532  6BDF               	clrf	(main@opt+1)& (0+255),b
  1549  005534  0EFF               	movlw	255
  1550  005536  23DF               	addwfc	(main@opt+1)& (0+255),f,b
  1551  005538                     
  1552                           ; BSR set to: 0
  1553                           ;main.c: 82:         if (opt == 0) {
  1554  005538  51DE               	movf	main@opt& (0+255),w,b
  1555  00553A  11DF               	iorwf	(main@opt+1)& (0+255),w,b
  1556  00553C  A4D8               	btfss	status,2,c
  1557  00553E  EFA3  F02A         	goto	u5611
  1558  005542  EFA5  F02A         	goto	u5610
  1559  005546                     u5611:
  1560  005546  EFA7  F02A         	goto	l4911
  1561  00554A                     u5610:
  1562  00554A  EF66  F02A         	goto	l31
  1563  00554E                     l4911:
  1564                           
  1565                           ; BSR set to: 0
  1566  00554E  05DE               	decf	main@opt& (0+255),w,b
  1567  005550  11DF               	iorwf	(main@opt+1)& (0+255),w,b
  1568  005552  A4D8               	btfss	status,2,c
  1569  005554  EFAE  F02A         	goto	u5621
  1570  005558  EFB0  F02A         	goto	u5620
  1571  00555C                     u5621:
  1572  00555C  EFB8  F02A         	goto	l4915
  1573  005560                     u5620:
  1574  005560                     
  1575                           ; BSR set to: 0
  1576                           ;main.c: 85:             ver_quantidade(&volume);
  1577  005560  0EF2               	movlw	low _volume
  1578  005562  6E7E               	movwf	ver_quantidade@vol^0,c
  1579  005564  0E00               	movlw	high _volume
  1580  005566  6E7F               	movwf	(ver_quantidade@vol+1)^0,c
  1581  005568  EC62  F027         	call	_ver_quantidade	;wreg free
  1582                           
  1583                           ;main.c: 86:         } else if (opt == 2) {
  1584  00556C  EF89  F02A         	goto	l4897
  1585  005570                     l4915:
  1586                           
  1587                           ; BSR set to: 0
  1588  005570  0E02               	movlw	2
  1589  005572  19DE               	xorwf	main@opt& (0+255),w,b
  1590  005574  11DF               	iorwf	(main@opt+1)& (0+255),w,b
  1591  005576  A4D8               	btfss	status,2,c
  1592  005578  EFC0  F02A         	goto	u5631
  1593  00557C  EFC2  F02A         	goto	u5630
  1594  005580                     u5631:
  1595  005580  EFCA  F02A         	goto	l4919
  1596  005584                     u5630:
  1597  005584                     
  1598                           ; BSR set to: 0
  1599                           ;main.c: 87:             encher_tanque(&volume);
  1600  005584  0EF2               	movlw	low _volume
  1601  005586  6E7E               	movwf	encher_tanque@vol^0,c
  1602  005588  0E00               	movlw	high _volume
  1603  00558A  6E7F               	movwf	(encher_tanque@vol+1)^0,c
  1604  00558C  EC03  F035         	call	_encher_tanque	;wreg free
  1605                           
  1606                           ;main.c: 88:         } else if (opt == 3) {
  1607  005590  EF89  F02A         	goto	l4897
  1608  005594                     l4919:
  1609                           
  1610                           ; BSR set to: 0
  1611  005594  0E03               	movlw	3
  1612  005596  19DE               	xorwf	main@opt& (0+255),w,b
  1613  005598  11DF               	iorwf	(main@opt+1)& (0+255),w,b
  1614  00559A  A4D8               	btfss	status,2,c
  1615  00559C  EFD2  F02A         	goto	u5641
  1616  0055A0  EFD4  F02A         	goto	u5640
  1617  0055A4                     u5641:
  1618  0055A4  EFDC  F02A         	goto	l4923
  1619  0055A8                     u5640:
  1620  0055A8                     
  1621                           ; BSR set to: 0
  1622                           ;main.c: 89:             esvaziar_tanque(&volume);
  1623  0055A8  0EF2               	movlw	low _volume
  1624  0055AA  6E7E               	movwf	esvaziar_tanque@vol^0,c
  1625  0055AC  0E00               	movlw	high _volume
  1626  0055AE  6E7F               	movwf	(esvaziar_tanque@vol+1)^0,c
  1627  0055B0  ECB1  F02D         	call	_esvaziar_tanque	;wreg free
  1628                           
  1629                           ;main.c: 90:         } else {
  1630  0055B4  EF89  F02A         	goto	l4897
  1631  0055B8                     l4923:
  1632                           
  1633                           ; BSR set to: 0
  1634                           ;main.c: 91:             lcd_cmd(0x01);
  1635  0055B8  0E01               	movlw	1
  1636  0055BA  EC24  F022         	call	_lcd_cmd
  1637  0055BE                     
  1638                           ;main.c: 92:             lcd_str("    INVALIDO!");
  1639  0055BE  0E5A               	movlw	low STR_7
  1640  0055C0  6E08               	movwf	lcd_str@str^0,c
  1641  0055C2  0E7F               	movlw	high STR_7
  1642  0055C4  6E09               	movwf	(lcd_str@str+1)^0,c
  1643  0055C6  ECE4  F024         	call	_lcd_str	;wreg free
  1644                           
  1645                           ;main.c: 93:             break;
  1646  0055CA  EF66  F02A         	goto	l31
  1647  0055CE  EF00  F000         	goto	start
  1648  0055D2                     __end_of_main:
  1649                           	callstack 0
  1650                           
  1651 ;; *************** function _ver_quantidade *****************
  1652 ;; Defined at:
  1653 ;;		line 8 in file "ver.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;  vol             2  125[COMRAM] PTR 
  1656 ;;		 -> volume(4), 
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;  y               8   36[BANK0 ] unsigned char [8]
  1659 ;;  i               2   47[BANK0 ] int 
  1660 ;;  num             2   44[BANK0 ] unsigned int 
  1661 ;;  tmp             1   46[BANK0 ] unsigned char 
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  1    wreg      void 
  1664 ;; Registers used:
  1665 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1671 ;;      Params:         2       0       0       0       0       0       0
  1672 ;;      Locals:         0      13       0       0       0       0       0
  1673 ;;      Temps:          0       0       0       0       0       0       0
  1674 ;;      Totals:         2      13       0       0       0       0       0
  1675 ;;Total ram usage:       15 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; Hardware stack levels required when called:    8
  1678 ;; This function calls:
  1679 ;;		_lcd_cmd
  1680 ;;		_lcd_str
  1681 ;;		_sprintf
  1682 ;;		_tc_tecla
  1683 ;; This function is called by:
  1684 ;;		_main
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           	psect	text1
  1689  004EC4                     __ptext1:
  1690                           	callstack 0
  1691  004EC4                     _ver_quantidade:
  1692                           	callstack 22
  1693  004EC4                     
  1694                           ;ver.c: 10:     int i;;ver.c: 11:     char y[8];;ver.c: 12:     sprintf(y, "%.1f", *vol)
      +                          ;
  1695  004EC4  0EA4               	movlw	low ver_quantidade@y
  1696  004EC6  0100               	movlb	0	; () banked
  1697  004EC8  6F92               	movwf	sprintf@s& (0+255),b
  1698  004ECA  0E00               	movlw	high ver_quantidade@y
  1699  004ECC  6F93               	movwf	(sprintf@s+1)& (0+255),b
  1700  004ECE  0EE3               	movlw	low STR_12
  1701  004ED0  6F94               	movwf	sprintf@fmt& (0+255),b
  1702  004ED2  0E7F               	movlw	high STR_12
  1703  004ED4  6F95               	movwf	(sprintf@fmt+1)& (0+255),b
  1704  004ED6  C07E  FFD9         	movff	ver_quantidade@vol,fsr2l
  1705  004EDA  C07F  FFDA         	movff	ver_quantidade@vol+1,fsr2h
  1706  004EDE  CFDE F096          	movff	postinc2,?_sprintf+4
  1707  004EE2  CFDE F097          	movff	postinc2,?_sprintf+5
  1708  004EE6  CFDE F098          	movff	postinc2,?_sprintf+6
  1709  004EEA  CFDE F099          	movff	postinc2,?_sprintf+7
  1710  004EEE  EC2B  F023         	call	_sprintf	;wreg free
  1711  004EF2                     
  1712                           ;ver.c: 14:     lcd_cmd(0x01);
  1713  004EF2  0E01               	movlw	1
  1714  004EF4  EC24  F022         	call	_lcd_cmd
  1715  004EF8                     
  1716                           ;ver.c: 15:     lcd_cmd(0x80);
  1717  004EF8  0E80               	movlw	128
  1718  004EFA  EC24  F022         	call	_lcd_cmd
  1719  004EFE                     
  1720                           ;ver.c: 16:     lcd_str("Atual: ");
  1721  004EFE  0EDB               	movlw	low STR_29
  1722  004F00  6E08               	movwf	lcd_str@str^0,c
  1723  004F02  0E7F               	movlw	high STR_29
  1724  004F04  6E09               	movwf	(lcd_str@str+1)^0,c
  1725  004F06  ECE4  F024         	call	_lcd_str	;wreg free
  1726  004F0A                     
  1727                           ;ver.c: 17:     lcd_str(y);
  1728  004F0A  0EA4               	movlw	low ver_quantidade@y
  1729  004F0C  6E08               	movwf	lcd_str@str^0,c
  1730  004F0E  0E00               	movlw	high ver_quantidade@y
  1731  004F10  6E09               	movwf	(lcd_str@str+1)^0,c
  1732  004F12  ECE4  F024         	call	_lcd_str	;wreg free
  1733  004F16                     
  1734                           ;ver.c: 18:     lcd_str(" L");
  1735  004F16  0EFB               	movlw	low STR_13
  1736  004F18  6E08               	movwf	lcd_str@str^0,c
  1737  004F1A  0E7F               	movlw	high STR_13
  1738  004F1C  6E09               	movwf	(lcd_str@str+1)^0,c
  1739  004F1E  ECE4  F024         	call	_lcd_str	;wreg free
  1740  004F22                     
  1741                           ;ver.c: 19:     lcd_cmd(0xC0);
  1742  004F22  0EC0               	movlw	192
  1743  004F24  EC24  F022         	call	_lcd_cmd
  1744  004F28                     
  1745                           ;ver.c: 20:     lcd_str("0-Voltar");
  1746  004F28  0E87               	movlw	low (STR_17+4)
  1747  004F2A  6E08               	movwf	lcd_str@str^0,c
  1748  004F2C  0E7F               	movlw	high (STR_17+4)
  1749  004F2E  6E09               	movwf	(lcd_str@str+1)^0,c
  1750  004F30  ECE4  F024         	call	_lcd_str	;wreg free
  1751  004F34                     
  1752                           ;ver.c: 21:     lcd_cmd(0xC0);
  1753  004F34  0EC0               	movlw	192
  1754  004F36  EC24  F022         	call	_lcd_cmd
  1755  004F3A                     
  1756                           ;ver.c: 23:     for (i = 0; i < 7; i++) {
  1757  004F3A  0E00               	movlw	0
  1758  004F3C  0100               	movlb	0	; () banked
  1759  004F3E  6FB0               	movwf	(ver_quantidade@i+1)& (0+255),b
  1760  004F40  0E00               	movlw	0
  1761  004F42  6FAF               	movwf	ver_quantidade@i& (0+255),b
  1762  004F44                     l4587:
  1763                           
  1764                           ; BSR set to: 0
  1765                           ;ver.c: 24:         lcd_cmd(0x10);
  1766  004F44  0E10               	movlw	16
  1767  004F46  EC24  F022         	call	_lcd_cmd
  1768  004F4A                     
  1769                           ;ver.c: 25:     }
  1770  004F4A  0100               	movlb	0	; () banked
  1771  004F4C  4BAF               	infsnz	ver_quantidade@i& (0+255),f,b
  1772  004F4E  2BB0               	incf	(ver_quantidade@i+1)& (0+255),f,b
  1773  004F50                     
  1774                           ; BSR set to: 0
  1775  004F50  BFB0               	btfsc	(ver_quantidade@i+1)& (0+255),7,b
  1776  004F52  EFB4  F027         	goto	u5461
  1777  004F56  51B0               	movf	(ver_quantidade@i+1)& (0+255),w,b
  1778  004F58  E109               	bnz	u5460
  1779  004F5A  0E07               	movlw	7
  1780  004F5C  5DAF               	subwf	ver_quantidade@i& (0+255),w,b
  1781  004F5E  A0D8               	btfss	status,0,c
  1782  004F60  EFB4  F027         	goto	u5461
  1783  004F64  EFB6  F027         	goto	u5460
  1784  004F68                     u5461:
  1785  004F68  EFA2  F027         	goto	l4587
  1786  004F6C                     u5460:
  1787  004F6C                     
  1788                           ; BSR set to: 0
  1789                           ;ver.c: 32:     unsigned int num;;ver.c: 33:     unsigned char tmp;;ver.c: 35:     (*(vo
      +                          latile __near unsigned char*)0xF93) = 0xF8;
  1790  004F6C  0EF8               	movlw	248
  1791  004F6E  6E93               	movwf	147,c	;volatile
  1792  004F70                     l204:
  1793                           
  1794                           ; BSR set to: 0
  1795                           ;ver.c: 38:         (*(volatile __near unsigned char*)0xF95) = 0x0F;
  1796  004F70  0E0F               	movlw	15
  1797  004F72  6E95               	movwf	149,c	;volatile
  1798  004F74                     
  1799                           ; BSR set to: 0
  1800                           ;ver.c: 39:         tmp = tc_tecla(0) + 0x30;
  1801  004F74  0E00               	movlw	0
  1802  004F76  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  1803  004F78  0E00               	movlw	0
  1804  004F7A  6E07               	movwf	tc_tecla@timeout^0,c
  1805  004F7C  ECC3  F02B         	call	_tc_tecla	;wreg free
  1806  004F80  0F30               	addlw	48
  1807  004F82  0100               	movlb	0	; () banked
  1808  004F84  6FAE               	movwf	ver_quantidade@tmp& (0+255),b
  1809  004F86                     
  1810                           ; BSR set to: 0
  1811                           ;ver.c: 40:         (*(volatile __near unsigned char*)0xF95) = 0x00;
  1812  004F86  0E00               	movlw	0
  1813  004F88  6E95               	movwf	149,c	;volatile
  1814  004F8A                     
  1815                           ; BSR set to: 0
  1816                           ;ver.c: 41:         num = (tmp - '0');
  1817  004F8A  0ED0               	movlw	208
  1818  004F8C  25AE               	addwf	ver_quantidade@tmp& (0+255),w,b
  1819  004F8E  6FAC               	movwf	ver_quantidade@num& (0+255),b
  1820  004F90  6BAD               	clrf	(ver_quantidade@num+1)& (0+255),b
  1821  004F92  0EFF               	movlw	255
  1822  004F94  23AD               	addwfc	(ver_quantidade@num+1)& (0+255),f,b
  1823  004F96                     
  1824                           ; BSR set to: 0
  1825                           ;ver.c: 42:         if (num == 0) {
  1826  004F96  51AC               	movf	ver_quantidade@num& (0+255),w,b
  1827  004F98  11AD               	iorwf	(ver_quantidade@num+1)& (0+255),w,b
  1828  004F9A  A4D8               	btfss	status,2,c
  1829  004F9C  EFD2  F027         	goto	u5471
  1830  004FA0  EFD4  F027         	goto	u5470
  1831  004FA4                     u5471:
  1832  004FA4  EFB8  F027         	goto	l204
  1833  004FA8                     u5470:
  1834  004FA8                     
  1835                           ; BSR set to: 0
  1836  004FA8  0012               	return		;funcret
  1837  004FAA                     __end_of_ver_quantidade:
  1838                           	callstack 0
  1839                           
  1840 ;; *************** function _lcd_init *****************
  1841 ;; Defined at:
  1842 ;;		line 29 in file "lcd.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;		None
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;		None
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  1    wreg      void 
  1849 ;; Registers used:
  1850 ;;		wreg, status,2, status,0, cstack
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1856 ;;      Params:         0       0       0       0       0       0       0
  1857 ;;      Locals:         0       0       0       0       0       0       0
  1858 ;;      Temps:          0       0       0       0       0       0       0
  1859 ;;      Totals:         0       0       0       0       0       0       0
  1860 ;;Total ram usage:        0 bytes
  1861 ;; Hardware stack levels used:    1
  1862 ;; Hardware stack levels required when called:    2
  1863 ;; This function calls:
  1864 ;;		_atraso_ms
  1865 ;;		_lcd_cmd
  1866 ;; This function is called by:
  1867 ;;		_main
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           	psect	text2
  1872  004704                     __ptext2:
  1873                           	callstack 0
  1874  004704                     _lcd_init:
  1875                           	callstack 28
  1876  004704                     
  1877                           ;lcd.c: 30:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  1878  004704  9284               	bcf	132,1,c	;volatile
  1879                           
  1880                           ;lcd.c: 31:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<2));
  1881  004706  9484               	bcf	132,2,c	;volatile
  1882  004708                     
  1883                           ;lcd.c: 32:     atraso_ms(20);
  1884  004708  0E00               	movlw	0
  1885  00470A  6E02               	movwf	(atraso_ms@t+1)^0,c
  1886  00470C  0E14               	movlw	20
  1887  00470E  6E01               	movwf	atraso_ms@t^0,c
  1888  004710  EC42  F024         	call	_atraso_ms	;wreg free
  1889  004714                     
  1890                           ;lcd.c: 33:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  1891  004714  8284               	bsf	132,1,c	;volatile
  1892                           
  1893                           ;lcd.c: 35:     lcd_cmd(0x38);
  1894  004716  0E38               	movlw	56
  1895  004718  EC24  F022         	call	_lcd_cmd
  1896                           
  1897                           ;lcd.c: 36:     atraso_ms(5);
  1898  00471C  0E00               	movlw	0
  1899  00471E  6E02               	movwf	(atraso_ms@t+1)^0,c
  1900  004720  0E05               	movlw	5
  1901  004722  6E01               	movwf	atraso_ms@t^0,c
  1902  004724  EC42  F024         	call	_atraso_ms	;wreg free
  1903                           
  1904                           ;lcd.c: 37:     lcd_cmd(0x38);
  1905  004728  0E38               	movlw	56
  1906  00472A  EC24  F022         	call	_lcd_cmd
  1907                           
  1908                           ;lcd.c: 38:     atraso_ms(1);
  1909  00472E  0E00               	movlw	0
  1910  004730  6E02               	movwf	(atraso_ms@t+1)^0,c
  1911  004732  0E01               	movlw	1
  1912  004734  6E01               	movwf	atraso_ms@t^0,c
  1913  004736  EC42  F024         	call	_atraso_ms	;wreg free
  1914                           
  1915                           ;lcd.c: 39:     lcd_cmd(0x38);
  1916  00473A  0E38               	movlw	56
  1917  00473C  EC24  F022         	call	_lcd_cmd
  1918                           
  1919                           ;lcd.c: 40:     lcd_cmd(0x08);
  1920  004740  0E08               	movlw	8
  1921  004742  EC24  F022         	call	_lcd_cmd
  1922                           
  1923                           ;lcd.c: 41:     lcd_cmd(0x0F);
  1924  004746  0E0F               	movlw	15
  1925  004748  EC24  F022         	call	_lcd_cmd
  1926                           
  1927                           ;lcd.c: 42:     lcd_cmd(0x01);
  1928  00474C  0E01               	movlw	1
  1929  00474E  EC24  F022         	call	_lcd_cmd
  1930                           
  1931                           ;lcd.c: 43:     lcd_cmd(0x38);
  1932  004752  0E38               	movlw	56
  1933  004754  EC24  F022         	call	_lcd_cmd
  1934                           
  1935                           ;lcd.c: 44:     lcd_cmd(0x80);
  1936  004758  0E80               	movlw	128
  1937  00475A  EC24  F022         	call	_lcd_cmd
  1938  00475E  0012               	return		;funcret
  1939  004760                     __end_of_lcd_init:
  1940                           	callstack 0
  1941                           
  1942 ;; *************** function _esvaziar_tanque *****************
  1943 ;; Defined at:
  1944 ;;		line 8 in file "esvaziar.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  vol             2  125[COMRAM] PTR 
  1947 ;;		 -> volume(4), 
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;  numeros        20   36[BANK0 ] int [10]
  1950 ;;  y               8   56[BANK0 ] unsigned char [8]
  1951 ;;  i               2   73[BANK0 ] int 
  1952 ;;  tempo           2   64[BANK0 ] int 
  1953 ;;  decremento      4   69[BANK0 ] int 
  1954 ;;  opt             2   66[BANK0 ] unsigned int 
  1955 ;;  tmp             1   68[BANK0 ] unsigned char 
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  1    wreg      void 
  1958 ;; Registers used:
  1959 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1965 ;;      Params:         2       0       0       0       0       0       0
  1966 ;;      Locals:         0      39       0       0       0       0       0
  1967 ;;      Temps:          0       0       0       0       0       0       0
  1968 ;;      Totals:         2      39       0       0       0       0       0
  1969 ;;Total ram usage:       41 bytes
  1970 ;; Hardware stack levels used:    1
  1971 ;; Hardware stack levels required when called:    8
  1972 ;; This function calls:
  1973 ;;		___fldiv
  1974 ;;		___flsub
  1975 ;;		___fltol
  1976 ;;		_atraso_ms
  1977 ;;		_lcd_cmd
  1978 ;;		_lcd_str
  1979 ;;		_sprintf
  1980 ;;		_tc_tecla
  1981 ;; This function is called by:
  1982 ;;		_main
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           	psect	text3
  1987  005B62                     __ptext3:
  1988                           	callstack 0
  1989  005B62                     _esvaziar_tanque:
  1990                           	callstack 22
  1991  005B62                     
  1992                           ;esvaziar.c: 11:     lcd_cmd(0x01);
  1993  005B62  0E01               	movlw	1
  1994  005B64  EC24  F022         	call	_lcd_cmd
  1995                           
  1996                           ;esvaziar.c: 12:     lcd_cmd(0x80);
  1997  005B68  0E80               	movlw	128
  1998  005B6A  EC24  F022         	call	_lcd_cmd
  1999  005B6E                     
  2000                           ;esvaziar.c: 13:     lcd_str("Quant(L): ");
  2001  005B6E  0E9C               	movlw	low STR_8
  2002  005B70  6E08               	movwf	lcd_str@str^0,c
  2003  005B72  0E7F               	movlw	high STR_8
  2004  005B74  6E09               	movwf	(lcd_str@str+1)^0,c
  2005  005B76  ECE4  F024         	call	_lcd_str	;wreg free
  2006  005B7A                     
  2007                           ;esvaziar.c: 14:     lcd_cmd(0xC0);
  2008  005B7A  0EC0               	movlw	192
  2009  005B7C  EC24  F022         	call	_lcd_cmd
  2010                           
  2011                           ;esvaziar.c: 15:     lcd_str("RB1-voltar");
  2012  005B80  0EB2               	movlw	low STR_9
  2013  005B82  6E08               	movwf	lcd_str@str^0,c
  2014  005B84  0E7F               	movlw	high STR_9
  2015  005B86  6E09               	movwf	(lcd_str@str+1)^0,c
  2016  005B88  ECE4  F024         	call	_lcd_str	;wreg free
  2017  005B8C                     
  2018                           ;esvaziar.c: 16:     lcd_cmd(0x80 +10);
  2019  005B8C  0E8A               	movlw	138
  2020  005B8E  EC24  F022         	call	_lcd_cmd
  2021  005B92                     
  2022                           ;esvaziar.c: 17:     atraso_ms(1000);
  2023  005B92  0E03               	movlw	3
  2024  005B94  6E02               	movwf	(atraso_ms@t+1)^0,c
  2025  005B96  0EE8               	movlw	232
  2026  005B98  6E01               	movwf	atraso_ms@t^0,c
  2027  005B9A  EC42  F024         	call	_atraso_ms	;wreg free
  2028  005B9E                     
  2029                           ;esvaziar.c: 19:     double decremento = 5;
  2030  005B9E  0E00               	movlw	0
  2031  005BA0  0100               	movlb	0	; () banked
  2032  005BA2  6FC5               	movwf	esvaziar_tanque@decremento& (0+255),b
  2033  005BA4  0E00               	movlw	0
  2034  005BA6  6FC6               	movwf	(esvaziar_tanque@decremento+1)& (0+255),b
  2035  005BA8  0EA0               	movlw	160
  2036  005BAA  6FC7               	movwf	(esvaziar_tanque@decremento+2)& (0+255),b
  2037  005BAC  0E40               	movlw	64
  2038  005BAE  6FC8               	movwf	(esvaziar_tanque@decremento+3)& (0+255),b
  2039  005BB0                     
  2040                           ; BSR set to: 0
  2041                           ;esvaziar.c: 21:     if (*vol - decremento < 0) {
  2042  005BB0  C07E  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  2043  005BB4  C07F  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  2044  005BB8  CFDE F01F          	movff	postinc2,___flsub@b
  2045  005BBC  CFDE F020          	movff	postinc2,___flsub@b+1
  2046  005BC0  CFDE F021          	movff	postinc2,___flsub@b+2
  2047  005BC4  CFDE F022          	movff	postinc2,___flsub@b+3
  2048  005BC8  C0C5  F023         	movff	esvaziar_tanque@decremento,___flsub@a
  2049  005BCC  C0C6  F024         	movff	esvaziar_tanque@decremento+1,___flsub@a+1
  2050  005BD0  C0C7  F025         	movff	esvaziar_tanque@decremento+2,___flsub@a+2
  2051  005BD4  C0C8  F026         	movff	esvaziar_tanque@decremento+3,___flsub@a+3
  2052  005BD8  ECDF  F022         	call	___flsub	;wreg free
  2053  005BDC  BE22               	btfsc	(?___flsub+3)^0,7,c
  2054  005BDE  EFF5  F02D         	goto	u5570
  2055  005BE2  EFF3  F02D         	goto	u5571
  2056  005BE6                     u5571:
  2057  005BE6  EF0C  F02E         	goto	l4777
  2058  005BEA                     u5570:
  2059  005BEA                     
  2060                           ;esvaziar.c: 24:         lcd_cmd(0x01);
  2061  005BEA  0E01               	movlw	1
  2062  005BEC  EC24  F022         	call	_lcd_cmd
  2063                           
  2064                           ;esvaziar.c: 25:         lcd_cmd(0x80);
  2065  005BF0  0E80               	movlw	128
  2066  005BF2  EC24  F022         	call	_lcd_cmd
  2067  005BF6                     
  2068                           ;esvaziar.c: 26:         lcd_str("ERRO: vol < 0");
  2069  005BF6  0E4C               	movlw	low STR_20
  2070  005BF8  6E08               	movwf	lcd_str@str^0,c
  2071  005BFA  0E7F               	movlw	high STR_20
  2072  005BFC  6E09               	movwf	(lcd_str@str+1)^0,c
  2073  005BFE  ECE4  F024         	call	_lcd_str	;wreg free
  2074  005C02                     
  2075                           ;esvaziar.c: 27:         lcd_cmd(0xC0);
  2076  005C02  0EC0               	movlw	192
  2077  005C04  EC24  F022         	call	_lcd_cmd
  2078                           
  2079                           ;esvaziar.c: 28:         lcd_str("RB1-Voltar");
  2080  005C08  0EA7               	movlw	low STR_11
  2081  005C0A  6E08               	movwf	lcd_str@str^0,c
  2082  005C0C  0E7F               	movlw	high STR_11
  2083  005C0E  6E09               	movwf	(lcd_str@str+1)^0,c
  2084  005C10  ECE4  F024         	call	_lcd_str	;wreg free
  2085                           
  2086                           ;esvaziar.c: 34:     } else {
  2087  005C14  EFCD  F02E         	goto	l4829
  2088  005C18                     l4777:
  2089                           
  2090                           ;esvaziar.c: 36:         *vol -= decremento;
  2091  005C18  C07E  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  2092  005C1C  C07F  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  2093  005C20  CFDE F01F          	movff	postinc2,___flsub@b
  2094  005C24  CFDE F020          	movff	postinc2,___flsub@b+1
  2095  005C28  CFDE F021          	movff	postinc2,___flsub@b+2
  2096  005C2C  CFDE F022          	movff	postinc2,___flsub@b+3
  2097  005C30  C0C5  F023         	movff	esvaziar_tanque@decremento,___flsub@a
  2098  005C34  C0C6  F024         	movff	esvaziar_tanque@decremento+1,___flsub@a+1
  2099  005C38  C0C7  F025         	movff	esvaziar_tanque@decremento+2,___flsub@a+2
  2100  005C3C  C0C8  F026         	movff	esvaziar_tanque@decremento+3,___flsub@a+3
  2101  005C40  ECDF  F022         	call	___flsub	;wreg free
  2102  005C44  C07E  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  2103  005C48  C07F  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  2104  005C4C  C01F  FFDE         	movff	?___flsub,postinc2
  2105  005C50  C020  FFDE         	movff	?___flsub+1,postinc2
  2106  005C54  C021  FFDE         	movff	?___flsub+2,postinc2
  2107  005C58  C022  FFDE         	movff	?___flsub+3,postinc2
  2108  005C5C                     
  2109                           ;esvaziar.c: 37:         char y[8];;esvaziar.c: 38:         sprintf(y, "%.1f", *vol);
  2110  005C5C  0EB8               	movlw	low esvaziar_tanque@y
  2111  005C5E  0100               	movlb	0	; () banked
  2112  005C60  6F92               	movwf	sprintf@s& (0+255),b
  2113  005C62  0E00               	movlw	high esvaziar_tanque@y
  2114  005C64  6F93               	movwf	(sprintf@s+1)& (0+255),b
  2115  005C66  0EE3               	movlw	low STR_12
  2116  005C68  6F94               	movwf	sprintf@fmt& (0+255),b
  2117  005C6A  0E7F               	movlw	high STR_12
  2118  005C6C  6F95               	movwf	(sprintf@fmt+1)& (0+255),b
  2119  005C6E  C07E  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  2120  005C72  C07F  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  2121  005C76  CFDE F096          	movff	postinc2,?_sprintf+4
  2122  005C7A  CFDE F097          	movff	postinc2,?_sprintf+5
  2123  005C7E  CFDE F098          	movff	postinc2,?_sprintf+6
  2124  005C82  CFDE F099          	movff	postinc2,?_sprintf+7
  2125  005C86  EC2B  F023         	call	_sprintf	;wreg free
  2126  005C8A                     
  2127                           ;esvaziar.c: 39:         lcd_str(y);
  2128  005C8A  0EB8               	movlw	low esvaziar_tanque@y
  2129  005C8C  6E08               	movwf	lcd_str@str^0,c
  2130  005C8E  0E00               	movlw	high esvaziar_tanque@y
  2131  005C90  6E09               	movwf	(lcd_str@str+1)^0,c
  2132  005C92  ECE4  F024         	call	_lcd_str	;wreg free
  2133  005C96                     
  2134                           ;esvaziar.c: 40:         lcd_str(" L");
  2135  005C96  0EFB               	movlw	low STR_13
  2136  005C98  6E08               	movwf	lcd_str@str^0,c
  2137  005C9A  0E7F               	movlw	high STR_13
  2138  005C9C  6E09               	movwf	(lcd_str@str+1)^0,c
  2139  005C9E  ECE4  F024         	call	_lcd_str	;wreg free
  2140  005CA2                     
  2141                           ;esvaziar.c: 43:         int tempo = decremento / 2;
  2142  005CA2  0E00               	movlw	0
  2143  005CA4  6E05               	movwf	___fldiv@a^0,c
  2144  005CA6  0E00               	movlw	0
  2145  005CA8  6E06               	movwf	(___fldiv@a+1)^0,c
  2146  005CAA  0E00               	movlw	0
  2147  005CAC  6E07               	movwf	(___fldiv@a+2)^0,c
  2148  005CAE  0E40               	movlw	64
  2149  005CB0  6E08               	movwf	(___fldiv@a+3)^0,c
  2150  005CB2  C0C5  F001         	movff	esvaziar_tanque@decremento,___fldiv@b
  2151  005CB6  C0C6  F002         	movff	esvaziar_tanque@decremento+1,___fldiv@b+1
  2152  005CBA  C0C7  F003         	movff	esvaziar_tanque@decremento+2,___fldiv@b+2
  2153  005CBE  C0C8  F004         	movff	esvaziar_tanque@decremento+3,___fldiv@b+3
  2154  005CC2  ECEC  F02E         	call	___fldiv	;wreg free
  2155  005CC6  C001  F01A         	movff	?___fldiv,___fltol@f1
  2156  005CCA  C002  F01B         	movff	?___fldiv+1,___fltol@f1+1
  2157  005CCE  C003  F01C         	movff	?___fldiv+2,___fltol@f1+2
  2158  005CD2  C004  F01D         	movff	?___fldiv+3,___fltol@f1+3
  2159  005CD6  ECD6  F028         	call	___fltol	;wreg free
  2160  005CDA  C01A  F0C0         	movff	?___fltol,esvaziar_tanque@tempo
  2161  005CDE  C01B  F0C1         	movff	?___fltol+1,esvaziar_tanque@tempo+1
  2162  005CE2                     
  2163                           ;esvaziar.c: 44:         int i;;esvaziar.c: 45:         int numeros[10] = {0x3F, 0x06, 0
      +                          x5B, 0x4F, 0x66, 0x6D, 0x7D,
  2164  005CE2  EE21  F050         	lfsr	2,esvaziar_tanque@F342
  2165  005CE6  EE10  F0A4         	lfsr	1,esvaziar_tanque@numeros
  2166  005CEA  0E13               	movlw	19
  2167  005CEC                     u5581:
  2168  005CEC  CFDB FFE3          	movff	plusw2,plusw1
  2169  005CF0  06E8               	decf	wreg,f,c
  2170  005CF2  E2FC               	bc	u5581
  2171  005CF4                     
  2172                           ;esvaziar.c: 48:         (*(volatile __near unsigned char*)0xF92) = 0x00;
  2173  005CF4  0E00               	movlw	0
  2174  005CF6  6E92               	movwf	146,c	;volatile
  2175  005CF8                     
  2176                           ;esvaziar.c: 49:         (((*(volatile __near unsigned char*)0xF80)) |= (1<<5));
  2177  005CF8  8A80               	bsf	128,5,c	;volatile
  2178  005CFA                     
  2179                           ;esvaziar.c: 54:         lcd_cmd(0x01);
  2180  005CFA  0E01               	movlw	1
  2181  005CFC  EC24  F022         	call	_lcd_cmd
  2182  005D00                     
  2183                           ;esvaziar.c: 55:         lcd_cmd(0x80);
  2184  005D00  0E80               	movlw	128
  2185  005D02  EC24  F022         	call	_lcd_cmd
  2186  005D06                     
  2187                           ;esvaziar.c: 56:         lcd_str("Esvaziando...");
  2188  005D06  0E3E               	movlw	low STR_24
  2189  005D08  6E08               	movwf	lcd_str@str^0,c
  2190  005D0A  0E7F               	movlw	high STR_24
  2191  005D0C  6E09               	movwf	(lcd_str@str+1)^0,c
  2192  005D0E  ECE4  F024         	call	_lcd_str	;wreg free
  2193  005D12                     
  2194                           ;esvaziar.c: 57:         lcd_cmd(0xC0);
  2195  005D12  0EC0               	movlw	192
  2196  005D14  EC24  F022         	call	_lcd_cmd
  2197  005D18                     
  2198                           ;esvaziar.c: 58:         lcd_str("Aguarde!");
  2199  005D18  0ED2               	movlw	low STR_15
  2200  005D1A  6E08               	movwf	lcd_str@str^0,c
  2201  005D1C  0E7F               	movlw	high STR_15
  2202  005D1E  6E09               	movwf	(lcd_str@str+1)^0,c
  2203  005D20  ECE4  F024         	call	_lcd_str	;wreg free
  2204  005D24                     
  2205                           ;esvaziar.c: 65:         for (i = tempo; i >= 0; i--) {
  2206  005D24  C0C0  F0C9         	movff	esvaziar_tanque@tempo,esvaziar_tanque@i
  2207  005D28  C0C1  F0CA         	movff	esvaziar_tanque@tempo+1,esvaziar_tanque@i+1
  2208  005D2C                     l4805:
  2209  005D2C  0100               	movlb	0	; () banked
  2210  005D2E  BFCA               	btfsc	(esvaziar_tanque@i+1)& (0+255),7,b
  2211  005D30  EF9E  F02E         	goto	u5590
  2212  005D34  EF9C  F02E         	goto	u5591
  2213  005D38                     u5591:
  2214  005D38  EFA0  F02E         	goto	l4809
  2215  005D3C                     u5590:
  2216  005D3C  EFB7  F02E         	goto	l4817
  2217  005D40                     l4809:
  2218                           
  2219                           ; BSR set to: 0
  2220                           ;esvaziar.c: 66:             (*(volatile __near unsigned char*)0xF83) = numeros[i];
  2221  005D40  90D8               	bcf	status,0,c
  2222  005D42  35C9               	rlcf	esvaziar_tanque@i& (0+255),w,b
  2223  005D44  6ED9               	movwf	fsr2l,c
  2224  005D46  35CA               	rlcf	(esvaziar_tanque@i+1)& (0+255),w,b
  2225  005D48  6EDA               	movwf	fsr2h,c
  2226  005D4A  0EA4               	movlw	low esvaziar_tanque@numeros
  2227  005D4C  26D9               	addwf	fsr2l,f,c
  2228  005D4E  0E00               	movlw	high esvaziar_tanque@numeros
  2229  005D50  22DA               	addwfc	fsr2h,f,c
  2230  005D52  50DF               	movf	indf2,w,c
  2231  005D54  6E83               	movwf	131,c	;volatile
  2232  005D56                     
  2233                           ; BSR set to: 0
  2234                           ;esvaziar.c: 67:             atraso_ms(1000);
  2235  005D56  0E03               	movlw	3
  2236  005D58  6E02               	movwf	(atraso_ms@t+1)^0,c
  2237  005D5A  0EE8               	movlw	232
  2238  005D5C  6E01               	movwf	atraso_ms@t^0,c
  2239  005D5E  EC42  F024         	call	_atraso_ms	;wreg free
  2240  005D62                     
  2241                           ;esvaziar.c: 68:         }
  2242  005D62  0100               	movlb	0	; () banked
  2243  005D64  07C9               	decf	esvaziar_tanque@i& (0+255),f,b
  2244  005D66  A0D8               	btfss	status,0,c
  2245  005D68  07CA               	decf	(esvaziar_tanque@i+1)& (0+255),f,b
  2246  005D6A  EF96  F02E         	goto	l4805
  2247  005D6E                     l4817:
  2248                           
  2249                           ; BSR set to: 0
  2250                           ;esvaziar.c: 69:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  2251  005D6E  9A80               	bcf	128,5,c	;volatile
  2252  005D70                     
  2253                           ; BSR set to: 0
  2254                           ;esvaziar.c: 72:         lcd_cmd(0x01);
  2255  005D70  0E01               	movlw	1
  2256  005D72  EC24  F022         	call	_lcd_cmd
  2257  005D76                     
  2258                           ;esvaziar.c: 73:         lcd_cmd(0x80);
  2259  005D76  0E80               	movlw	128
  2260  005D78  EC24  F022         	call	_lcd_cmd
  2261  005D7C                     
  2262                           ;esvaziar.c: 74:         lcd_str("    SUCESSO!");
  2263  005D7C  0E76               	movlw	low STR_16
  2264  005D7E  6E08               	movwf	lcd_str@str^0,c
  2265  005D80  0E7F               	movlw	high STR_16
  2266  005D82  6E09               	movwf	(lcd_str@str+1)^0,c
  2267  005D84  ECE4  F024         	call	_lcd_str	;wreg free
  2268  005D88                     
  2269                           ;esvaziar.c: 75:         lcd_cmd(0xC0);
  2270  005D88  0EC0               	movlw	192
  2271  005D8A  EC24  F022         	call	_lcd_cmd
  2272  005D8E                     
  2273                           ;esvaziar.c: 76:         lcd_str("    0-Voltar");
  2274  005D8E  0E83               	movlw	low STR_17
  2275  005D90  6E08               	movwf	lcd_str@str^0,c
  2276  005D92  0E7F               	movlw	high STR_17
  2277  005D94  6E09               	movwf	(lcd_str@str+1)^0,c
  2278  005D96  ECE4  F024         	call	_lcd_str	;wreg free
  2279  005D9A                     l4829:
  2280                           
  2281                           ;esvaziar.c: 94:     unsigned int opt;;esvaziar.c: 95:     unsigned char tmp;;esvaziar.c
      +                          : 97:     (*(volatile __near unsigned char*)0xF93) = 0xF8;
  2282  005D9A  0EF8               	movlw	248
  2283  005D9C  6E93               	movwf	147,c	;volatile
  2284  005D9E                     l4831:
  2285                           
  2286                           ;esvaziar.c: 100:         (*(volatile __near unsigned char*)0xF95) = 0x0F;
  2287  005D9E  0E0F               	movlw	15
  2288  005DA0  6E95               	movwf	149,c	;volatile
  2289  005DA2                     
  2290                           ;esvaziar.c: 101:         tmp = tc_tecla(0) + 0x30;
  2291  005DA2  0E00               	movlw	0
  2292  005DA4  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  2293  005DA6  0E00               	movlw	0
  2294  005DA8  6E07               	movwf	tc_tecla@timeout^0,c
  2295  005DAA  ECC3  F02B         	call	_tc_tecla	;wreg free
  2296  005DAE  0F30               	addlw	48
  2297  005DB0  0100               	movlb	0	; () banked
  2298  005DB2  6FC4               	movwf	esvaziar_tanque@tmp& (0+255),b
  2299  005DB4                     
  2300                           ; BSR set to: 0
  2301                           ;esvaziar.c: 102:         (*(volatile __near unsigned char*)0xF95) = 0x00;
  2302  005DB4  0E00               	movlw	0
  2303  005DB6  6E95               	movwf	149,c	;volatile
  2304  005DB8                     
  2305                           ; BSR set to: 0
  2306                           ;esvaziar.c: 103:         opt = (tmp - '0');
  2307  005DB8  0ED0               	movlw	208
  2308  005DBA  25C4               	addwf	esvaziar_tanque@tmp& (0+255),w,b
  2309  005DBC  6FC2               	movwf	esvaziar_tanque@opt& (0+255),b
  2310  005DBE  6BC3               	clrf	(esvaziar_tanque@opt+1)& (0+255),b
  2311  005DC0  0EFF               	movlw	255
  2312  005DC2  23C3               	addwfc	(esvaziar_tanque@opt+1)& (0+255),f,b
  2313  005DC4                     
  2314                           ; BSR set to: 0
  2315                           ;esvaziar.c: 104:         if (opt == 0) {
  2316  005DC4  51C2               	movf	esvaziar_tanque@opt& (0+255),w,b
  2317  005DC6  11C3               	iorwf	(esvaziar_tanque@opt+1)& (0+255),w,b
  2318  005DC8  A4D8               	btfss	status,2,c
  2319  005DCA  EFE9  F02E         	goto	u5601
  2320  005DCE  EFEB  F02E         	goto	u5600
  2321  005DD2                     u5601:
  2322  005DD2  EFCF  F02E         	goto	l4831
  2323  005DD6                     u5600:
  2324  005DD6                     
  2325                           ; BSR set to: 0
  2326  005DD6  0012               	return		;funcret
  2327  005DD8                     __end_of_esvaziar_tanque:
  2328                           	callstack 0
  2329                           
  2330 ;; *************** function _encher_tanque *****************
  2331 ;; Defined at:
  2332 ;;		line 9 in file "encher.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;  vol             2  125[COMRAM] PTR 
  2335 ;;		 -> volume(4), 
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;  numeros        20   40[BANK0 ] int [10]
  2338 ;;  y               8   60[BANK0 ] unsigned char [8]
  2339 ;;  t2              2   88[BANK0 ] int 
  2340 ;;  tempo           2   84[BANK0 ] int 
  2341 ;;  t1              2   82[BANK0 ] int 
  2342 ;;  i               2   74[BANK0 ] int 
  2343 ;;  potencia        2   72[BANK0 ] int 
  2344 ;;  num             4   76[BANK0 ] unsigned int [2]
  2345 ;;  i               2   86[BANK0 ] unsigned int 
  2346 ;;  incremento      2   80[BANK0 ] unsigned int 
  2347 ;;  opt             2   68[BANK0 ] unsigned int 
  2348 ;;  tmp             1   90[BANK0 ] unsigned char 
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  1    wreg      void 
  2351 ;; Registers used:
  2352 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2358 ;;      Params:         2       0       0       0       0       0       0
  2359 ;;      Locals:         0      51       0       0       0       0       0
  2360 ;;      Temps:          0       4       0       0       0       0       0
  2361 ;;      Totals:         2      55       0       0       0       0       0
  2362 ;;Total ram usage:       57 bytes
  2363 ;; Hardware stack levels used:    1
  2364 ;; Hardware stack levels required when called:    8
  2365 ;; This function calls:
  2366 ;;		___awdiv
  2367 ;;		___awmod
  2368 ;;		___fladd
  2369 ;;		___flge
  2370 ;;		___wmul
  2371 ;;		___xxtofl
  2372 ;;		_atraso_ms
  2373 ;;		_lcd_cmd
  2374 ;;		_lcd_dat
  2375 ;;		_lcd_str
  2376 ;;		_pwmInit
  2377 ;;		_pwmSet1
  2378 ;;		_sprintf
  2379 ;;		_tc_tecla
  2380 ;; This function is called by:
  2381 ;;		_main
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           	psect	text4
  2386  006A06                     __ptext4:
  2387                           	callstack 0
  2388  006A06                     _encher_tanque:
  2389                           	callstack 22
  2390  006A06                     
  2391                           ;encher.c: 12:     lcd_cmd(0x01);
  2392  006A06  0E01               	movlw	1
  2393  006A08  EC24  F022         	call	_lcd_cmd
  2394                           
  2395                           ;encher.c: 13:     lcd_cmd(0x80);
  2396  006A0C  0E80               	movlw	128
  2397  006A0E  EC24  F022         	call	_lcd_cmd
  2398  006A12                     
  2399                           ;encher.c: 14:     lcd_str("Quant(L): ");
  2400  006A12  0E9C               	movlw	low STR_8
  2401  006A14  6E08               	movwf	lcd_str@str^0,c
  2402  006A16  0E7F               	movlw	high STR_8
  2403  006A18  6E09               	movwf	(lcd_str@str+1)^0,c
  2404  006A1A  ECE4  F024         	call	_lcd_str	;wreg free
  2405  006A1E                     
  2406                           ;encher.c: 15:     lcd_cmd(0xC0);
  2407  006A1E  0EC0               	movlw	192
  2408  006A20  EC24  F022         	call	_lcd_cmd
  2409                           
  2410                           ;encher.c: 16:     lcd_str("RB1-voltar");
  2411  006A24  0EB2               	movlw	low STR_9
  2412  006A26  6E08               	movwf	lcd_str@str^0,c
  2413  006A28  0E7F               	movlw	high STR_9
  2414  006A2A  6E09               	movwf	(lcd_str@str+1)^0,c
  2415  006A2C  ECE4  F024         	call	_lcd_str	;wreg free
  2416  006A30                     
  2417                           ;encher.c: 17:     lcd_cmd(0x80 + 10);
  2418  006A30  0E8A               	movlw	138
  2419  006A32  EC24  F022         	call	_lcd_cmd
  2420  006A36                     
  2421                           ;encher.c: 22:     unsigned int incremento;;encher.c: 24:     unsigned int i = 0;
  2422  006A36  0E00               	movlw	0
  2423  006A38  0100               	movlb	0	; () banked
  2424  006A3A  6FD7               	movwf	(encher_tanque@i+1)& (0+255),b
  2425  006A3C  0E00               	movlw	0
  2426  006A3E  6FD6               	movwf	encher_tanque@i& (0+255),b
  2427  006A40                     
  2428                           ; BSR set to: 0
  2429                           ;encher.c: 25:     unsigned int num[2];;encher.c: 26:     unsigned char tmp;;encher.c: 2
      +                          8:     (*(volatile __near unsigned char*)0xF93) = 0xF8;
  2430  006A40  0EF8               	movlw	248
  2431  006A42  6E93               	movwf	147,c	;volatile
  2432                           
  2433                           ;encher.c: 30:     while (i != 2) {
  2434  006A44  EF74  F035         	goto	l4633
  2435  006A48                     l4617:
  2436                           
  2437                           ; BSR set to: 0
  2438                           ;encher.c: 31:         (*(volatile __near unsigned char*)0xF95) = 0x0F;
  2439  006A48  0E0F               	movlw	15
  2440  006A4A  6E95               	movwf	149,c	;volatile
  2441  006A4C                     
  2442                           ; BSR set to: 0
  2443                           ;encher.c: 32:         tmp = tc_tecla(0) + 0x30;
  2444  006A4C  0E00               	movlw	0
  2445  006A4E  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  2446  006A50  0E00               	movlw	0
  2447  006A52  6E07               	movwf	tc_tecla@timeout^0,c
  2448  006A54  ECC3  F02B         	call	_tc_tecla	;wreg free
  2449  006A58  0F30               	addlw	48
  2450  006A5A  0100               	movlb	0	; () banked
  2451  006A5C  6FDA               	movwf	encher_tanque@tmp& (0+255),b
  2452  006A5E                     
  2453                           ; BSR set to: 0
  2454                           ;encher.c: 33:         (*(volatile __near unsigned char*)0xF95) = 0x00;
  2455  006A5E  0E00               	movlw	0
  2456  006A60  6E95               	movwf	149,c	;volatile
  2457  006A62                     
  2458                           ; BSR set to: 0
  2459                           ;encher.c: 34:         lcd_dat(tmp);
  2460  006A62  51DA               	movf	encher_tanque@tmp& (0+255),w,b
  2461  006A64  EC39  F022         	call	_lcd_dat
  2462  006A68                     
  2463                           ;encher.c: 35:         if (i == 0) {
  2464  006A68  0100               	movlb	0	; () banked
  2465  006A6A  51D6               	movf	encher_tanque@i& (0+255),w,b
  2466  006A6C  11D7               	iorwf	(encher_tanque@i+1)& (0+255),w,b
  2467  006A6E  A4D8               	btfss	status,2,c
  2468  006A70  EF3C  F035         	goto	u5481
  2469  006A74  EF3E  F035         	goto	u5480
  2470  006A78                     u5481:
  2471  006A78  EF5A  F035         	goto	l4629
  2472  006A7C                     u5480:
  2473  006A7C                     
  2474                           ; BSR set to: 0
  2475                           ;encher.c: 36:             num[i] = (tmp - '0')*10;
  2476  006A7C  0ED0               	movlw	208
  2477  006A7E  25DA               	addwf	encher_tanque@tmp& (0+255),w,b
  2478  006A80  6E01               	movwf	___wmul@multiplier^0,c
  2479  006A82  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2480  006A84  0EFF               	movlw	255
  2481  006A86  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  2482  006A88  0E00               	movlw	0
  2483  006A8A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2484  006A8C  0E0A               	movlw	10
  2485  006A8E  6E03               	movwf	___wmul@multiplicand^0,c
  2486  006A90  ECFD  F021         	call	___wmul	;wreg free
  2487  006A94  90D8               	bcf	status,0,c
  2488  006A96  0100               	movlb	0	; () banked
  2489  006A98  35D6               	rlcf	encher_tanque@i& (0+255),w,b
  2490  006A9A  6ED9               	movwf	fsr2l,c
  2491  006A9C  35D7               	rlcf	(encher_tanque@i+1)& (0+255),w,b
  2492  006A9E  6EDA               	movwf	fsr2h,c
  2493  006AA0  0ECC               	movlw	low encher_tanque@num
  2494  006AA2  26D9               	addwf	fsr2l,f,c
  2495  006AA4  0E00               	movlw	high encher_tanque@num
  2496  006AA6  22DA               	addwfc	fsr2h,f,c
  2497  006AA8  C001  FFDE         	movff	?___wmul,postinc2
  2498  006AAC  C002  FFDD         	movff	?___wmul+1,postdec2
  2499                           
  2500                           ;encher.c: 37:         } else {
  2501  006AB0  EF72  F035         	goto	l4631
  2502  006AB4                     l4629:
  2503                           
  2504                           ; BSR set to: 0
  2505                           ;encher.c: 38:             num[i] = (tmp - '0');
  2506  006AB4  0ED0               	movlw	208
  2507  006AB6  6FA4               	movwf	??_encher_tanque& (0+255),b
  2508  006AB8  0EFF               	movlw	255
  2509  006ABA  6FA5               	movwf	(??_encher_tanque+1)& (0+255),b
  2510  006ABC  51DA               	movf	encher_tanque@tmp& (0+255),w,b
  2511  006ABE  6FA6               	movwf	(??_encher_tanque+2)& (0+255),b
  2512  006AC0  6BA7               	clrf	(??_encher_tanque+3)& (0+255),b
  2513  006AC2  51A4               	movf	??_encher_tanque& (0+255),w,b
  2514  006AC4  27A6               	addwf	(??_encher_tanque+2)& (0+255),f,b
  2515  006AC6  51A5               	movf	(??_encher_tanque+1)& (0+255),w,b
  2516  006AC8  23A7               	addwfc	(??_encher_tanque+3)& (0+255),f,b
  2517  006ACA  90D8               	bcf	status,0,c
  2518  006ACC  35D6               	rlcf	encher_tanque@i& (0+255),w,b
  2519  006ACE  6ED9               	movwf	fsr2l,c
  2520  006AD0  35D7               	rlcf	(encher_tanque@i+1)& (0+255),w,b
  2521  006AD2  6EDA               	movwf	fsr2h,c
  2522  006AD4  0ECC               	movlw	low encher_tanque@num
  2523  006AD6  26D9               	addwf	fsr2l,f,c
  2524  006AD8  0E00               	movlw	high encher_tanque@num
  2525  006ADA  22DA               	addwfc	fsr2h,f,c
  2526  006ADC  C0A6  FFDE         	movff	??_encher_tanque+2,postinc2
  2527  006AE0  C0A7  FFDD         	movff	??_encher_tanque+3,postdec2
  2528  006AE4                     l4631:
  2529                           
  2530                           ; BSR set to: 0
  2531                           ;encher.c: 40:         i++;
  2532  006AE4  4BD6               	infsnz	encher_tanque@i& (0+255),f,b
  2533  006AE6  2BD7               	incf	(encher_tanque@i+1)& (0+255),f,b
  2534  006AE8                     l4633:
  2535                           
  2536                           ; BSR set to: 0
  2537                           ;encher.c: 30:     while (i != 2) {
  2538  006AE8  0E02               	movlw	2
  2539  006AEA  19D6               	xorwf	encher_tanque@i& (0+255),w,b
  2540  006AEC  11D7               	iorwf	(encher_tanque@i+1)& (0+255),w,b
  2541  006AEE  A4D8               	btfss	status,2,c
  2542  006AF0  EF7C  F035         	goto	u5491
  2543  006AF4  EF7E  F035         	goto	u5490
  2544  006AF8                     u5491:
  2545  006AF8  EF24  F035         	goto	l4617
  2546  006AFC                     u5490:
  2547  006AFC                     
  2548                           ; BSR set to: 0
  2549                           ;encher.c: 43:     (*(volatile __near unsigned char*)0xF92) = 0x20;
  2550  006AFC  0E20               	movlw	32
  2551  006AFE  6E92               	movwf	146,c	;volatile
  2552                           
  2553                           ;encher.c: 44:     (*(volatile __near unsigned char*)0xF93) = 0x3F;
  2554  006B00  0E3F               	movlw	63
  2555  006B02  6E93               	movwf	147,c	;volatile
  2556  006B04                     
  2557                           ; BSR set to: 0
  2558                           ;encher.c: 46:     atraso_ms(500);
  2559  006B04  0E01               	movlw	1
  2560  006B06  6E02               	movwf	(atraso_ms@t+1)^0,c
  2561  006B08  0EF4               	movlw	244
  2562  006B0A  6E01               	movwf	atraso_ms@t^0,c
  2563  006B0C  EC42  F024         	call	_atraso_ms	;wreg free
  2564  006B10                     
  2565                           ;encher.c: 47:     lcd_cmd(0x01);
  2566  006B10  0E01               	movlw	1
  2567  006B12  EC24  F022         	call	_lcd_cmd
  2568  006B16                     
  2569                           ;encher.c: 49:     incremento = num[0] + num[1];
  2570  006B16  0100               	movlb	0	; () banked
  2571  006B18  51CC               	movf	encher_tanque@num& (0+255),w,b
  2572  006B1A  25CE               	addwf	(encher_tanque@num+2)& (0+255),w,b
  2573  006B1C  6FD0               	movwf	encher_tanque@incremento& (0+255),b
  2574  006B1E  51CD               	movf	(encher_tanque@num+1)& (0+255),w,b
  2575  006B20  21CF               	addwfc	(encher_tanque@num+3)& (0+255),w,b
  2576  006B22  6FD1               	movwf	(encher_tanque@incremento+1)& (0+255),b
  2577  006B24                     
  2578                           ; BSR set to: 0
  2579                           ;encher.c: 51:     if (*vol + incremento > 70) {
  2580  006B24  0E00               	movlw	0
  2581  006B26  6E1F               	movwf	___flge@ff1^0,c
  2582  006B28  0E00               	movlw	0
  2583  006B2A  6E20               	movwf	(___flge@ff1+1)^0,c
  2584  006B2C  0E8C               	movlw	140
  2585  006B2E  6E21               	movwf	(___flge@ff1+2)^0,c
  2586  006B30  0E42               	movlw	66
  2587  006B32  6E22               	movwf	(___flge@ff1+3)^0,c
  2588  006B34  C07E  FFD9         	movff	encher_tanque@vol,fsr2l
  2589  006B38  C07F  FFDA         	movff	encher_tanque@vol+1,fsr2h
  2590  006B3C  CFDE F013          	movff	postinc2,___fladd@a
  2591  006B40  CFDE F014          	movff	postinc2,___fladd@a+1
  2592  006B44  CFDE F015          	movff	postinc2,___fladd@a+2
  2593  006B48  CFDE F016          	movff	postinc2,___fladd@a+3
  2594  006B4C  C0D0  F001         	movff	encher_tanque@incremento,___xxtofl@val
  2595  006B50  C0D1  F002         	movff	encher_tanque@incremento+1,___xxtofl@val+1
  2596  006B54  6A03               	clrf	(___xxtofl@val+2)^0,c
  2597  006B56  6A04               	clrf	(___xxtofl@val+3)^0,c
  2598  006B58  0E00               	movlw	0
  2599  006B5A  ECE9  F02A         	call	___xxtofl
  2600  006B5E  C001  F00F         	movff	?___xxtofl,___fladd@b
  2601  006B62  C002  F010         	movff	?___xxtofl+1,___fladd@b+1
  2602  006B66  C003  F011         	movff	?___xxtofl+2,___fladd@b+2
  2603  006B6A  C004  F012         	movff	?___xxtofl+3,___fladd@b+3
  2604  006B6E  EC50  F037         	call	___fladd	;wreg free
  2605  006B72  C00F  F023         	movff	?___fladd,___flge@ff2
  2606  006B76  C010  F024         	movff	?___fladd+1,___flge@ff2+1
  2607  006B7A  C011  F025         	movff	?___fladd+2,___flge@ff2+2
  2608  006B7E  C012  F026         	movff	?___fladd+3,___flge@ff2+3
  2609  006B82  EC54  F028         	call	___flge	;wreg free
  2610  006B86  B0D8               	btfsc	status,0,c
  2611  006B88  EFC8  F035         	goto	u5501
  2612  006B8C  EFCA  F035         	goto	u5500
  2613  006B90                     u5501:
  2614  006B90  EFE2  F035         	goto	l4653
  2615  006B94                     u5500:
  2616  006B94                     
  2617                           ;encher.c: 54:         lcd_cmd(0x01);
  2618  006B94  0E01               	movlw	1
  2619  006B96  EC24  F022         	call	_lcd_cmd
  2620                           
  2621                           ;encher.c: 55:         lcd_cmd(0x80);
  2622  006B9A  0E80               	movlw	128
  2623  006B9C  EC24  F022         	call	_lcd_cmd
  2624  006BA0                     
  2625                           ;encher.c: 56:         lcd_str("ERRO: vol > MAX");
  2626  006BA0  0E10               	movlw	low STR_10
  2627  006BA2  6E08               	movwf	lcd_str@str^0,c
  2628  006BA4  0E7F               	movlw	high STR_10
  2629  006BA6  6E09               	movwf	(lcd_str@str+1)^0,c
  2630  006BA8  ECE4  F024         	call	_lcd_str	;wreg free
  2631  006BAC                     
  2632                           ;encher.c: 57:         lcd_cmd(0xC0);
  2633  006BAC  0EC0               	movlw	192
  2634  006BAE  EC24  F022         	call	_lcd_cmd
  2635                           
  2636                           ;encher.c: 58:         lcd_str("RB1-Voltar");
  2637  006BB2  0EA7               	movlw	low STR_11
  2638  006BB4  6E08               	movwf	lcd_str@str^0,c
  2639  006BB6  0E7F               	movlw	high STR_11
  2640  006BB8  6E09               	movwf	(lcd_str@str+1)^0,c
  2641  006BBA  ECE4  F024         	call	_lcd_str	;wreg free
  2642  006BBE                     
  2643                           ;encher.c: 60:         (((*(volatile __near unsigned char*)0xF82)) &= ~(1<<1));
  2644  006BBE  9282               	bcf	130,1,c	;volatile
  2645                           
  2646                           ;encher.c: 66:     } else {
  2647  006BC0  EF31  F037         	goto	l4743
  2648  006BC4                     l4653:
  2649                           
  2650                           ;encher.c: 68:         *vol += incremento;
  2651  006BC4  C07E  FFD9         	movff	encher_tanque@vol,fsr2l
  2652  006BC8  C07F  FFDA         	movff	encher_tanque@vol+1,fsr2h
  2653  006BCC  CFDE F00F          	movff	postinc2,___fladd@b
  2654  006BD0  CFDE F010          	movff	postinc2,___fladd@b+1
  2655  006BD4  CFDE F011          	movff	postinc2,___fladd@b+2
  2656  006BD8  CFDE F012          	movff	postinc2,___fladd@b+3
  2657  006BDC  C0D0  F001         	movff	encher_tanque@incremento,___xxtofl@val
  2658  006BE0  C0D1  F002         	movff	encher_tanque@incremento+1,___xxtofl@val+1
  2659  006BE4  6A03               	clrf	(___xxtofl@val+2)^0,c
  2660  006BE6  6A04               	clrf	(___xxtofl@val+3)^0,c
  2661  006BE8  0E00               	movlw	0
  2662  006BEA  ECE9  F02A         	call	___xxtofl
  2663  006BEE  C001  F013         	movff	?___xxtofl,___fladd@a
  2664  006BF2  C002  F014         	movff	?___xxtofl+1,___fladd@a+1
  2665  006BF6  C003  F015         	movff	?___xxtofl+2,___fladd@a+2
  2666  006BFA  C004  F016         	movff	?___xxtofl+3,___fladd@a+3
  2667  006BFE  EC50  F037         	call	___fladd	;wreg free
  2668  006C02  C07E  FFD9         	movff	encher_tanque@vol,fsr2l
  2669  006C06  C07F  FFDA         	movff	encher_tanque@vol+1,fsr2h
  2670  006C0A  C00F  FFDE         	movff	?___fladd,postinc2
  2671  006C0E  C010  FFDE         	movff	?___fladd+1,postinc2
  2672  006C12  C011  FFDE         	movff	?___fladd+2,postinc2
  2673  006C16  C012  FFDE         	movff	?___fladd+3,postinc2
  2674  006C1A                     
  2675                           ;encher.c: 69:         char y[8];;encher.c: 70:         sprintf(y, "%.1f", *vol);
  2676  006C1A  0EBC               	movlw	low encher_tanque@y
  2677  006C1C  0100               	movlb	0	; () banked
  2678  006C1E  6F92               	movwf	sprintf@s& (0+255),b
  2679  006C20  0E00               	movlw	high encher_tanque@y
  2680  006C22  6F93               	movwf	(sprintf@s+1)& (0+255),b
  2681  006C24  0EE3               	movlw	low STR_12
  2682  006C26  6F94               	movwf	sprintf@fmt& (0+255),b
  2683  006C28  0E7F               	movlw	high STR_12
  2684  006C2A  6F95               	movwf	(sprintf@fmt+1)& (0+255),b
  2685  006C2C  C07E  FFD9         	movff	encher_tanque@vol,fsr2l
  2686  006C30  C07F  FFDA         	movff	encher_tanque@vol+1,fsr2h
  2687  006C34  CFDE F096          	movff	postinc2,?_sprintf+4
  2688  006C38  CFDE F097          	movff	postinc2,?_sprintf+5
  2689  006C3C  CFDE F098          	movff	postinc2,?_sprintf+6
  2690  006C40  CFDE F099          	movff	postinc2,?_sprintf+7
  2691  006C44  EC2B  F023         	call	_sprintf	;wreg free
  2692  006C48                     
  2693                           ;encher.c: 71:         lcd_str(y);
  2694  006C48  0EBC               	movlw	low encher_tanque@y
  2695  006C4A  6E08               	movwf	lcd_str@str^0,c
  2696  006C4C  0E00               	movlw	high encher_tanque@y
  2697  006C4E  6E09               	movwf	(lcd_str@str+1)^0,c
  2698  006C50  ECE4  F024         	call	_lcd_str	;wreg free
  2699  006C54                     
  2700                           ;encher.c: 72:         lcd_str(" L");
  2701  006C54  0EFB               	movlw	low STR_13
  2702  006C56  6E08               	movwf	lcd_str@str^0,c
  2703  006C58  0E7F               	movlw	high STR_13
  2704  006C5A  6E09               	movwf	(lcd_str@str+1)^0,c
  2705  006C5C  ECE4  F024         	call	_lcd_str	;wreg free
  2706  006C60                     
  2707                           ;encher.c: 73:         atraso_ms(500);
  2708  006C60  0E01               	movlw	1
  2709  006C62  6E02               	movwf	(atraso_ms@t+1)^0,c
  2710  006C64  0EF4               	movlw	244
  2711  006C66  6E01               	movwf	atraso_ms@t^0,c
  2712  006C68  EC42  F024         	call	_atraso_ms	;wreg free
  2713  006C6C                     
  2714                           ;encher.c: 76:         int tempo = incremento / 2;
  2715  006C6C  90D8               	bcf	status,0,c
  2716  006C6E  0100               	movlb	0	; () banked
  2717  006C70  31D1               	rrcf	(encher_tanque@incremento+1)& (0+255),w,b
  2718  006C72  6FA4               	movwf	??_encher_tanque& (0+255),b
  2719  006C74  31D0               	rrcf	encher_tanque@incremento& (0+255),w,b
  2720  006C76  6FD4               	movwf	encher_tanque@tempo& (0+255),b
  2721  006C78  C0A4  F0D5         	movff	??_encher_tanque,encher_tanque@tempo+1
  2722  006C7C                     
  2723                           ; BSR set to: 0
  2724                           ;encher.c: 77:         int t1, t2;;encher.c: 78:         int i = 0, potencia = 100;
  2725  006C7C  0E00               	movlw	0
  2726  006C7E  6FCB               	movwf	(encher_tanque@i_150+1)& (0+255),b
  2727  006C80  0E00               	movlw	0
  2728  006C82  6FCA               	movwf	encher_tanque@i_150& (0+255),b
  2729  006C84                     
  2730                           ; BSR set to: 0
  2731                           ;encher.c: 79:         int numeros[10] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D,
  2732  006C84  EE21  F064         	lfsr	2,encher_tanque@F355
  2733  006C88  EE10  F0A8         	lfsr	1,encher_tanque@numeros
  2734  006C8C  0E13               	movlw	19
  2735  006C8E                     u5511:
  2736  006C8E  CFDB FFE3          	movff	plusw2,plusw1
  2737  006C92  06E8               	decf	wreg,f,c
  2738  006C94  E2FC               	bc	u5511
  2739  006C96                     
  2740                           ; BSR set to: 0
  2741                           ;encher.c: 82:         (*(volatile __near unsigned char*)0xF92) = 0x00;
  2742  006C96  0E00               	movlw	0
  2743  006C98  6E92               	movwf	146,c	;volatile
  2744  006C9A                     
  2745                           ; BSR set to: 0
  2746                           ;encher.c: 84:         (((*(volatile __near unsigned char*)0xF80)) |= (1<<4));
  2747  006C9A  8880               	bsf	128,4,c	;volatile
  2748  006C9C                     
  2749                           ; BSR set to: 0
  2750                           ;encher.c: 88:         lcd_cmd(0x01);
  2751  006C9C  0E01               	movlw	1
  2752  006C9E  EC24  F022         	call	_lcd_cmd
  2753  006CA2                     
  2754                           ;encher.c: 89:         lcd_cmd(0x80);
  2755  006CA2  0E80               	movlw	128
  2756  006CA4  EC24  F022         	call	_lcd_cmd
  2757  006CA8                     
  2758                           ;encher.c: 90:         lcd_str("Enchendo...");
  2759  006CA8  0E90               	movlw	low STR_14
  2760  006CAA  6E08               	movwf	lcd_str@str^0,c
  2761  006CAC  0E7F               	movlw	high STR_14
  2762  006CAE  6E09               	movwf	(lcd_str@str+1)^0,c
  2763  006CB0  ECE4  F024         	call	_lcd_str	;wreg free
  2764  006CB4                     
  2765                           ;encher.c: 91:         lcd_cmd(0xC0);
  2766  006CB4  0EC0               	movlw	192
  2767  006CB6  EC24  F022         	call	_lcd_cmd
  2768  006CBA                     
  2769                           ;encher.c: 92:         lcd_str("Aguarde!");
  2770  006CBA  0ED2               	movlw	low STR_15
  2771  006CBC  6E08               	movwf	lcd_str@str^0,c
  2772  006CBE  0E7F               	movlw	high STR_15
  2773  006CC0  6E09               	movwf	(lcd_str@str+1)^0,c
  2774  006CC2  ECE4  F024         	call	_lcd_str	;wreg free
  2775  006CC6                     
  2776                           ;encher.c: 98:         pwmInit();
  2777  006CC6  ECF3  F021         	call	_pwmInit	;wreg free
  2778  006CCA                     
  2779                           ;encher.c: 101:         t1 = tempo / 10;
  2780  006CCA  C0D4  F007         	movff	encher_tanque@tempo,___awdiv@dividend
  2781  006CCE  C0D5  F008         	movff	encher_tanque@tempo+1,___awdiv@dividend+1
  2782  006CD2  0E00               	movlw	0
  2783  006CD4  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2784  006CD6  0E0A               	movlw	10
  2785  006CD8  6E09               	movwf	___awdiv@divisor^0,c
  2786  006CDA  ECCD  F025         	call	___awdiv	;wreg free
  2787  006CDE  C007  F0D2         	movff	?___awdiv,encher_tanque@t1
  2788  006CE2  C008  F0D3         	movff	?___awdiv+1,encher_tanque@t1+1
  2789  006CE6                     
  2790                           ;encher.c: 102:         t2 = tempo % 10;
  2791  006CE6  C0D4  F001         	movff	encher_tanque@tempo,___awmod@dividend
  2792  006CEA  C0D5  F002         	movff	encher_tanque@tempo+1,___awmod@dividend+1
  2793  006CEE  0E00               	movlw	0
  2794  006CF0  6E04               	movwf	(___awmod@divisor+1)^0,c
  2795  006CF2  0E0A               	movlw	10
  2796  006CF4  6E03               	movwf	___awmod@divisor^0,c
  2797  006CF6  EC75  F025         	call	___awmod	;wreg free
  2798  006CFA  C001  F0D8         	movff	?___awmod,encher_tanque@t2
  2799  006CFE  C002  F0D9         	movff	?___awmod+1,encher_tanque@t2+1
  2800                           
  2801                           ;encher.c: 103:         while ((t1 != 0) || (t2 != 0)) {
  2802  006D02  EF04  F037         	goto	l4723
  2803  006D06                     l4691:
  2804                           
  2805                           ; BSR set to: 0
  2806                           ;encher.c: 108:             potencia = 100 * (tempo - (t1 * 10) + t2) / tempo;
  2807  006D06  C0D2  F001         	movff	encher_tanque@t1,___wmul@multiplier
  2808  006D0A  C0D3  F002         	movff	encher_tanque@t1+1,___wmul@multiplier+1
  2809  006D0E  0EFF               	movlw	255
  2810  006D10  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2811  006D12  0EF6               	movlw	246
  2812  006D14  6E03               	movwf	___wmul@multiplicand^0,c
  2813  006D16  ECFD  F021         	call	___wmul	;wreg free
  2814  006D1A  0100               	movlb	0	; () banked
  2815  006D1C  51D4               	movf	encher_tanque@tempo& (0+255),w,b
  2816  006D1E  2601               	addwf	?___wmul^0,f,c
  2817  006D20  51D5               	movf	(encher_tanque@tempo+1)& (0+255),w,b
  2818  006D22  2202               	addwfc	(?___wmul+1)^0,f,c
  2819  006D24  51D8               	movf	encher_tanque@t2& (0+255),w,b
  2820  006D26  2401               	addwf	?___wmul^0,w,c
  2821  006D28  6FC6               	movwf	_encher_tanque$1210& (0+255),b
  2822  006D2A  51D9               	movf	(encher_tanque@t2+1)& (0+255),w,b
  2823  006D2C  2002               	addwfc	(?___wmul+1)^0,w,c
  2824  006D2E  6FC7               	movwf	(_encher_tanque$1210+1)& (0+255),b
  2825                           
  2826                           ;encher.c: 108:             potencia = 100 * (tempo - (t1 * 10) + t2) / tempo;
  2827  006D30  C0C6  F001         	movff	_encher_tanque$1210,___wmul@multiplier
  2828  006D34  C0C7  F002         	movff	_encher_tanque$1210+1,___wmul@multiplier+1
  2829  006D38  0E00               	movlw	0
  2830  006D3A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2831  006D3C  0E64               	movlw	100
  2832  006D3E  6E03               	movwf	___wmul@multiplicand^0,c
  2833  006D40  ECFD  F021         	call	___wmul	;wreg free
  2834  006D44  C001  F007         	movff	?___wmul,___awdiv@dividend
  2835  006D48  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  2836  006D4C  C0D4  F009         	movff	encher_tanque@tempo,___awdiv@divisor
  2837  006D50  C0D5  F00A         	movff	encher_tanque@tempo+1,___awdiv@divisor+1
  2838  006D54  ECCD  F025         	call	___awdiv	;wreg free
  2839  006D58  C007  F0C8         	movff	?___awdiv,encher_tanque@potencia
  2840  006D5C  C008  F0C9         	movff	?___awdiv+1,encher_tanque@potencia+1
  2841                           
  2842                           ;encher.c: 109:             pwmSet1(potencia);
  2843  006D60  0100               	movlb	0	; () banked
  2844  006D62  51C8               	movf	encher_tanque@potencia& (0+255),w,b
  2845  006D64  EC74  F024         	call	_pwmSet1
  2846  006D68                     
  2847                           ;encher.c: 112:             (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  2848  006D68  9A80               	bcf	128,5,c	;volatile
  2849  006D6A                     
  2850                           ;encher.c: 113:             (((*(volatile __near unsigned char*)0xF80)) |= (1<<4));
  2851  006D6A  8880               	bsf	128,4,c	;volatile
  2852  006D6C                     
  2853                           ;encher.c: 114:             (*(volatile __near unsigned char*)0xF83) = numeros[t1];
  2854  006D6C  90D8               	bcf	status,0,c
  2855  006D6E  0100               	movlb	0	; () banked
  2856  006D70  35D2               	rlcf	encher_tanque@t1& (0+255),w,b
  2857  006D72  6ED9               	movwf	fsr2l,c
  2858  006D74  35D3               	rlcf	(encher_tanque@t1+1)& (0+255),w,b
  2859  006D76  6EDA               	movwf	fsr2h,c
  2860  006D78  0EA8               	movlw	low encher_tanque@numeros
  2861  006D7A  26D9               	addwf	fsr2l,f,c
  2862  006D7C  0E00               	movlw	high encher_tanque@numeros
  2863  006D7E  22DA               	addwfc	fsr2h,f,c
  2864  006D80  50DF               	movf	indf2,w,c
  2865  006D82  6E83               	movwf	131,c	;volatile
  2866  006D84                     
  2867                           ; BSR set to: 0
  2868                           ;encher.c: 115:             atraso_ms(5);
  2869  006D84  0E00               	movlw	0
  2870  006D86  6E02               	movwf	(atraso_ms@t+1)^0,c
  2871  006D88  0E05               	movlw	5
  2872  006D8A  6E01               	movwf	atraso_ms@t^0,c
  2873  006D8C  EC42  F024         	call	_atraso_ms	;wreg free
  2874  006D90                     
  2875                           ;encher.c: 116:             (((*(volatile __near unsigned char*)0xF80)) |= (1<<5));
  2876  006D90  8A80               	bsf	128,5,c	;volatile
  2877  006D92                     
  2878                           ;encher.c: 117:             (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<4));
  2879  006D92  9880               	bcf	128,4,c	;volatile
  2880  006D94                     
  2881                           ;encher.c: 118:             (*(volatile __near unsigned char*)0xF83) = numeros[t2];
  2882  006D94  90D8               	bcf	status,0,c
  2883  006D96  0100               	movlb	0	; () banked
  2884  006D98  35D8               	rlcf	encher_tanque@t2& (0+255),w,b
  2885  006D9A  6ED9               	movwf	fsr2l,c
  2886  006D9C  35D9               	rlcf	(encher_tanque@t2+1)& (0+255),w,b
  2887  006D9E  6EDA               	movwf	fsr2h,c
  2888  006DA0  0EA8               	movlw	low encher_tanque@numeros
  2889  006DA2  26D9               	addwf	fsr2l,f,c
  2890  006DA4  0E00               	movlw	high encher_tanque@numeros
  2891  006DA6  22DA               	addwfc	fsr2h,f,c
  2892  006DA8  50DF               	movf	indf2,w,c
  2893  006DAA  6E83               	movwf	131,c	;volatile
  2894  006DAC                     
  2895                           ; BSR set to: 0
  2896                           ;encher.c: 119:             atraso_ms(5);
  2897  006DAC  0E00               	movlw	0
  2898  006DAE  6E02               	movwf	(atraso_ms@t+1)^0,c
  2899  006DB0  0E05               	movlw	5
  2900  006DB2  6E01               	movwf	atraso_ms@t^0,c
  2901  006DB4  EC42  F024         	call	_atraso_ms	;wreg free
  2902  006DB8                     
  2903                           ;encher.c: 121:             if (i == 40) {
  2904  006DB8  0E28               	movlw	40
  2905  006DBA  0100               	movlb	0	; () banked
  2906  006DBC  19CA               	xorwf	encher_tanque@i_150& (0+255),w,b
  2907  006DBE  11CB               	iorwf	(encher_tanque@i_150+1)& (0+255),w,b
  2908  006DC0  A4D8               	btfss	status,2,c
  2909  006DC2  EFE5  F036         	goto	u5521
  2910  006DC6  EFE7  F036         	goto	u5520
  2911  006DCA                     u5521:
  2912  006DCA  EF02  F037         	goto	l4721
  2913  006DCE                     u5520:
  2914  006DCE                     
  2915                           ; BSR set to: 0
  2916                           ;encher.c: 122:                 i = 0;
  2917  006DCE  0E00               	movlw	0
  2918  006DD0  6FCB               	movwf	(encher_tanque@i_150+1)& (0+255),b
  2919  006DD2  0E00               	movlw	0
  2920  006DD4  6FCA               	movwf	encher_tanque@i_150& (0+255),b
  2921  006DD6                     
  2922                           ; BSR set to: 0
  2923                           ;encher.c: 123:                 if (t2 == 0) {
  2924  006DD6  51D8               	movf	encher_tanque@t2& (0+255),w,b
  2925  006DD8  11D9               	iorwf	(encher_tanque@t2+1)& (0+255),w,b
  2926  006DDA  A4D8               	btfss	status,2,c
  2927  006DDC  EFF2  F036         	goto	u5531
  2928  006DE0  EFF4  F036         	goto	u5530
  2929  006DE4                     u5531:
  2930  006DE4  EFFD  F036         	goto	l4719
  2931  006DE8                     u5530:
  2932  006DE8                     
  2933                           ; BSR set to: 0
  2934                           ;encher.c: 124:                     t1--;
  2935  006DE8  07D2               	decf	encher_tanque@t1& (0+255),f,b
  2936  006DEA  A0D8               	btfss	status,0,c
  2937  006DEC  07D3               	decf	(encher_tanque@t1+1)& (0+255),f,b
  2938  006DEE                     
  2939                           ; BSR set to: 0
  2940                           ;encher.c: 125:                     t2 = 9;
  2941  006DEE  0E00               	movlw	0
  2942  006DF0  6FD9               	movwf	(encher_tanque@t2+1)& (0+255),b
  2943  006DF2  0E09               	movlw	9
  2944  006DF4  6FD8               	movwf	encher_tanque@t2& (0+255),b
  2945                           
  2946                           ;encher.c: 126:                 } else {
  2947  006DF6  EF04  F037         	goto	l4723
  2948  006DFA                     l4719:
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;encher.c: 127:                     t2--;
  2952  006DFA  07D8               	decf	encher_tanque@t2& (0+255),f,b
  2953  006DFC  A0D8               	btfss	status,0,c
  2954  006DFE  07D9               	decf	(encher_tanque@t2+1)& (0+255),f,b
  2955  006E00  EF04  F037         	goto	l4723
  2956  006E04                     l4721:
  2957                           
  2958                           ; BSR set to: 0
  2959                           ;encher.c: 130:                 i++;
  2960  006E04  4BCA               	infsnz	encher_tanque@i_150& (0+255),f,b
  2961  006E06  2BCB               	incf	(encher_tanque@i_150+1)& (0+255),f,b
  2962  006E08                     l4723:
  2963                           
  2964                           ;encher.c: 103:         while ((t1 != 0) || (t2 != 0)) {
  2965  006E08  0100               	movlb	0	; () banked
  2966  006E0A  51D2               	movf	encher_tanque@t1& (0+255),w,b
  2967  006E0C  11D3               	iorwf	(encher_tanque@t1+1)& (0+255),w,b
  2968  006E0E  A4D8               	btfss	status,2,c
  2969  006E10  EF0C  F037         	goto	u5541
  2970  006E14  EF0E  F037         	goto	u5540
  2971  006E18                     u5541:
  2972  006E18  EF83  F036         	goto	l4691
  2973  006E1C                     u5540:
  2974  006E1C                     
  2975                           ; BSR set to: 0
  2976  006E1C  51D8               	movf	encher_tanque@t2& (0+255),w,b
  2977  006E1E  11D9               	iorwf	(encher_tanque@t2+1)& (0+255),w,b
  2978  006E20  A4D8               	btfss	status,2,c
  2979  006E22  EF15  F037         	goto	u5551
  2980  006E26  EF17  F037         	goto	u5550
  2981  006E2A                     u5551:
  2982  006E2A  EF83  F036         	goto	l4691
  2983  006E2E                     u5550:
  2984  006E2E                     
  2985                           ; BSR set to: 0
  2986                           ;encher.c: 133:         pwmSet1(0);
  2987  006E2E  0E00               	movlw	0
  2988  006E30  EC74  F024         	call	_pwmSet1
  2989  006E34                     
  2990                           ;encher.c: 135:         (((*(volatile __near unsigned char*)0xF82)) &= ~(1<<1));
  2991  006E34  9282               	bcf	130,1,c	;volatile
  2992  006E36                     
  2993                           ;encher.c: 137:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  2994  006E36  9A80               	bcf	128,5,c	;volatile
  2995  006E38                     
  2996                           ;encher.c: 140:         lcd_cmd(0x01);
  2997  006E38  0E01               	movlw	1
  2998  006E3A  EC24  F022         	call	_lcd_cmd
  2999  006E3E                     
  3000                           ;encher.c: 141:         lcd_cmd(0x80);
  3001  006E3E  0E80               	movlw	128
  3002  006E40  EC24  F022         	call	_lcd_cmd
  3003  006E44                     
  3004                           ;encher.c: 142:         lcd_str("    SUCESSO!");
  3005  006E44  0E76               	movlw	low STR_16
  3006  006E46  6E08               	movwf	lcd_str@str^0,c
  3007  006E48  0E7F               	movlw	high STR_16
  3008  006E4A  6E09               	movwf	(lcd_str@str+1)^0,c
  3009  006E4C  ECE4  F024         	call	_lcd_str	;wreg free
  3010  006E50                     
  3011                           ;encher.c: 143:         lcd_cmd(0xC0);
  3012  006E50  0EC0               	movlw	192
  3013  006E52  EC24  F022         	call	_lcd_cmd
  3014  006E56                     
  3015                           ;encher.c: 144:         lcd_str("    0-Voltar");
  3016  006E56  0E83               	movlw	low STR_17
  3017  006E58  6E08               	movwf	lcd_str@str^0,c
  3018  006E5A  0E7F               	movlw	high STR_17
  3019  006E5C  6E09               	movwf	(lcd_str@str+1)^0,c
  3020  006E5E  ECE4  F024         	call	_lcd_str	;wreg free
  3021  006E62                     l4743:
  3022                           
  3023                           ;encher.c: 161:     unsigned int opt;;encher.c: 163:     (*(volatile __near unsigned cha
      +                          r*)0xF93) = 0xF8;
  3024  006E62  0EF8               	movlw	248
  3025  006E64  6E93               	movwf	147,c	;volatile
  3026  006E66                     l4745:
  3027                           
  3028                           ;encher.c: 166:         (*(volatile __near unsigned char*)0xF95) = 0x0F;
  3029  006E66  0E0F               	movlw	15
  3030  006E68  6E95               	movwf	149,c	;volatile
  3031  006E6A                     
  3032                           ;encher.c: 167:         tmp = tc_tecla(0) + 0x30;
  3033  006E6A  0E00               	movlw	0
  3034  006E6C  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  3035  006E6E  0E00               	movlw	0
  3036  006E70  6E07               	movwf	tc_tecla@timeout^0,c
  3037  006E72  ECC3  F02B         	call	_tc_tecla	;wreg free
  3038  006E76  0F30               	addlw	48
  3039  006E78  0100               	movlb	0	; () banked
  3040  006E7A  6FDA               	movwf	encher_tanque@tmp& (0+255),b
  3041  006E7C                     
  3042                           ; BSR set to: 0
  3043                           ;encher.c: 168:         (*(volatile __near unsigned char*)0xF95) = 0x00;
  3044  006E7C  0E00               	movlw	0
  3045  006E7E  6E95               	movwf	149,c	;volatile
  3046  006E80                     
  3047                           ; BSR set to: 0
  3048                           ;encher.c: 169:         opt = (tmp - '0');
  3049  006E80  0ED0               	movlw	208
  3050  006E82  25DA               	addwf	encher_tanque@tmp& (0+255),w,b
  3051  006E84  6FC4               	movwf	encher_tanque@opt& (0+255),b
  3052  006E86  6BC5               	clrf	(encher_tanque@opt+1)& (0+255),b
  3053  006E88  0EFF               	movlw	255
  3054  006E8A  23C5               	addwfc	(encher_tanque@opt+1)& (0+255),f,b
  3055  006E8C                     
  3056                           ; BSR set to: 0
  3057                           ;encher.c: 170:         if (opt == 0) {
  3058  006E8C  51C4               	movf	encher_tanque@opt& (0+255),w,b
  3059  006E8E  11C5               	iorwf	(encher_tanque@opt+1)& (0+255),w,b
  3060  006E90  A4D8               	btfss	status,2,c
  3061  006E92  EF4D  F037         	goto	u5561
  3062  006E96  EF4F  F037         	goto	u5560
  3063  006E9A                     u5561:
  3064  006E9A  EF33  F037         	goto	l4745
  3065  006E9E                     u5560:
  3066  006E9E                     
  3067                           ; BSR set to: 0
  3068  006E9E  0012               	return		;funcret
  3069  006EA0                     __end_of_encher_tanque:
  3070                           	callstack 0
  3071                           
  3072 ;; *************** function _tc_tecla *****************
  3073 ;; Defined at:
  3074 ;;		line 14 in file "teclado.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;  timeout         2    6[COMRAM] unsigned int 
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;  to              2    8[COMRAM] unsigned int 
  3079 ;;  i               1   12[COMRAM] unsigned char 
  3080 ;;  ret             1   11[COMRAM] unsigned char 
  3081 ;;  tmp             1   10[COMRAM] unsigned char 
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  1    wreg      unsigned char 
  3084 ;; Registers used:
  3085 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3091 ;;      Params:         2       0       0       0       0       0       0
  3092 ;;      Locals:         5       0       0       0       0       0       0
  3093 ;;      Temps:          0       0       0       0       0       0       0
  3094 ;;      Totals:         7       0       0       0       0       0       0
  3095 ;;Total ram usage:        7 bytes
  3096 ;; Hardware stack levels used:    1
  3097 ;; Hardware stack levels required when called:    1
  3098 ;; This function calls:
  3099 ;;		_atraso_ms
  3100 ;; This function is called by:
  3101 ;;		_main
  3102 ;;		_encher_tanque
  3103 ;;		_esvaziar_tanque
  3104 ;;		_ver_quantidade
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           	psect	text5
  3109  005786                     __ptext5:
  3110                           	callstack 0
  3111  005786                     _tc_tecla:
  3112                           	callstack 28
  3113  005786                     
  3114                           ;teclado.c: 15:     unsigned int to = 0;
  3115  005786  0E00               	movlw	0
  3116  005788  6E0A               	movwf	(tc_tecla@to+1)^0,c
  3117  00578A  0E00               	movlw	0
  3118  00578C  6E09               	movwf	tc_tecla@to^0,c
  3119                           
  3120                           ;teclado.c: 16:     unsigned char i;;teclado.c: 17:     unsigned char ret = 0;
  3121  00578E  0E00               	movlw	0
  3122  005790  6E0C               	movwf	tc_tecla@ret^0,c
  3123  005792                     
  3124                           ;teclado.c: 18:     unsigned char tmp = (*(volatile __near unsigned char*)0xF81);
  3125  005792  CF81 F00B          	movff	3969,tc_tecla@tmp	;volatile
  3126                           
  3127                           ;teclado.c: 21:     while (((to < timeout) || (!timeout))&&(!ret)) {
  3128  005796  EF74  F02C         	goto	l4465
  3129  00579A                     l4413:
  3130                           
  3131                           ;teclado.c: 22:         for (i = 0; i < 3; i++) {
  3132  00579A  0E00               	movlw	0
  3133  00579C  6E0D               	movwf	tc_tecla@i^0,c
  3134  00579E                     l4419:
  3135                           
  3136                           ;teclado.c: 23:             (*(volatile __near unsigned char*)0xF81) |= ~linha[i];
  3137  00579E  0EFB               	movlw	low _linha
  3138  0057A0  240D               	addwf	tc_tecla@i^0,w,c
  3139  0057A2  6EF6               	movwf	tblptrl,c
  3140  0057A4  6AF7               	clrf	tblptrh,c
  3141  0057A6  0E7E               	movlw	high _linha
  3142  0057A8  22F7               	addwfc	tblptrh,f,c
  3143  0057AA                     	if	0	;There are less than 3 active tblptr bytes
  3144  0057AA                     	endif
  3145  0057AA  0008               	tblrd		*
  3146  0057AC  50F5               	movf	tablat,w,c
  3147  0057AE  0AFF               	xorlw	255
  3148  0057B0  1281               	iorwf	129,f,c	;volatile
  3149  0057B2                     
  3150                           ;teclado.c: 24:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<3))) 
      +                          {
  3151  0057B2  B683               	btfsc	131,3,c	;volatile
  3152  0057B4  EFDE  F02B         	goto	u5181
  3153  0057B8  EFE0  F02B         	goto	u5180
  3154  0057BC                     u5181:
  3155  0057BC  EFF8  F02B         	goto	l60
  3156  0057C0                     u5180:
  3157  0057C0                     
  3158                           ;teclado.c: 25:                 atraso_ms(atraso);
  3159  0057C0  0E00               	movlw	0
  3160  0057C2  6E02               	movwf	(atraso_ms@t+1)^0,c
  3161  0057C4  0E0F               	movlw	15
  3162  0057C6  6E01               	movwf	atraso_ms@t^0,c
  3163  0057C8  EC42  F024         	call	_atraso_ms	;wreg free
  3164  0057CC                     
  3165                           ;teclado.c: 26:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<3
      +                          ))) {
  3166  0057CC  B683               	btfsc	131,3,c	;volatile
  3167  0057CE  EFEB  F02B         	goto	u5191
  3168  0057D2  EFED  F02B         	goto	u5190
  3169  0057D6                     u5191:
  3170  0057D6  EFF8  F02B         	goto	l60
  3171  0057DA                     u5190:
  3172  0057DA                     l62:
  3173  0057DA  A683               	btfss	131,3,c	;volatile
  3174  0057DC  EFF2  F02B         	goto	u5201
  3175  0057E0  EFF4  F02B         	goto	u5200
  3176  0057E4                     u5201:
  3177  0057E4  EFED  F02B         	goto	l62
  3178  0057E8                     u5200:
  3179  0057E8                     
  3180                           ;teclado.c: 28:                     ret = 1 + i;
  3181  0057E8  280D               	incf	tc_tecla@i^0,w,c
  3182  0057EA  6E0C               	movwf	tc_tecla@ret^0,c
  3183                           
  3184                           ;teclado.c: 29:                     break;
  3185  0057EC  EF6A  F02C         	goto	l4461
  3186  0057F0                     l60:
  3187                           
  3188                           ;teclado.c: 32:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<2))) 
      +                          {
  3189  0057F0  B483               	btfsc	131,2,c	;volatile
  3190  0057F2  EFFD  F02B         	goto	u5211
  3191  0057F6  EFFF  F02B         	goto	u5210
  3192  0057FA                     u5211:
  3193  0057FA  EF18  F02C         	goto	l65
  3194  0057FE                     u5210:
  3195  0057FE                     
  3196                           ;teclado.c: 33:                 atraso_ms(atraso);
  3197  0057FE  0E00               	movlw	0
  3198  005800  6E02               	movwf	(atraso_ms@t+1)^0,c
  3199  005802  0E0F               	movlw	15
  3200  005804  6E01               	movwf	atraso_ms@t^0,c
  3201  005806  EC42  F024         	call	_atraso_ms	;wreg free
  3202  00580A                     
  3203                           ;teclado.c: 34:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<2
      +                          ))) {
  3204  00580A  B483               	btfsc	131,2,c	;volatile
  3205  00580C  EF0A  F02C         	goto	u5221
  3206  005810  EF0C  F02C         	goto	u5220
  3207  005814                     u5221:
  3208  005814  EF18  F02C         	goto	l65
  3209  005818                     u5220:
  3210  005818                     l67:
  3211  005818  A483               	btfss	131,2,c	;volatile
  3212  00581A  EF11  F02C         	goto	u5231
  3213  00581E  EF13  F02C         	goto	u5230
  3214  005822                     u5231:
  3215  005822  EF0C  F02C         	goto	l67
  3216  005826                     u5230:
  3217  005826                     
  3218                           ;teclado.c: 36:                     ret = 4 + i;
  3219  005826  500D               	movf	tc_tecla@i^0,w,c
  3220  005828  0F04               	addlw	4
  3221  00582A  6E0C               	movwf	tc_tecla@ret^0,c
  3222                           
  3223                           ;teclado.c: 37:                     break;
  3224  00582C  EF6A  F02C         	goto	l4461
  3225  005830                     l65:
  3226                           
  3227                           ;teclado.c: 40:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<1))) 
      +                          {
  3228  005830  B283               	btfsc	131,1,c	;volatile
  3229  005832  EF1D  F02C         	goto	u5241
  3230  005836  EF1F  F02C         	goto	u5240
  3231  00583A                     u5241:
  3232  00583A  EF38  F02C         	goto	l70
  3233  00583E                     u5240:
  3234  00583E                     
  3235                           ;teclado.c: 41:                 atraso_ms(atraso);
  3236  00583E  0E00               	movlw	0
  3237  005840  6E02               	movwf	(atraso_ms@t+1)^0,c
  3238  005842  0E0F               	movlw	15
  3239  005844  6E01               	movwf	atraso_ms@t^0,c
  3240  005846  EC42  F024         	call	_atraso_ms	;wreg free
  3241  00584A                     
  3242                           ;teclado.c: 42:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<1
      +                          ))) {
  3243  00584A  B283               	btfsc	131,1,c	;volatile
  3244  00584C  EF2A  F02C         	goto	u5251
  3245  005850  EF2C  F02C         	goto	u5250
  3246  005854                     u5251:
  3247  005854  EF38  F02C         	goto	l70
  3248  005858                     u5250:
  3249  005858                     l72:
  3250  005858  A283               	btfss	131,1,c	;volatile
  3251  00585A  EF31  F02C         	goto	u5261
  3252  00585E  EF33  F02C         	goto	u5260
  3253  005862                     u5261:
  3254  005862  EF2C  F02C         	goto	l72
  3255  005866                     u5260:
  3256  005866                     
  3257                           ;teclado.c: 44:                     ret = 7 + i;
  3258  005866  500D               	movf	tc_tecla@i^0,w,c
  3259  005868  0F07               	addlw	7
  3260  00586A  6E0C               	movwf	tc_tecla@ret^0,c
  3261                           
  3262                           ;teclado.c: 45:                     break;
  3263  00586C  EF6A  F02C         	goto	l4461
  3264  005870                     l70:
  3265                           
  3266                           ;teclado.c: 48:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<0))) 
      +                          {
  3267  005870  B083               	btfsc	131,0,c	;volatile
  3268  005872  EF3D  F02C         	goto	u5271
  3269  005876  EF3F  F02C         	goto	u5270
  3270  00587A                     u5271:
  3271  00587A  EF58  F02C         	goto	l4455
  3272  00587E                     u5270:
  3273  00587E                     
  3274                           ;teclado.c: 49:                 atraso_ms(atraso);
  3275  00587E  0E00               	movlw	0
  3276  005880  6E02               	movwf	(atraso_ms@t+1)^0,c
  3277  005882  0E0F               	movlw	15
  3278  005884  6E01               	movwf	atraso_ms@t^0,c
  3279  005886  EC42  F024         	call	_atraso_ms	;wreg free
  3280  00588A                     
  3281                           ;teclado.c: 50:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<0
      +                          ))) {
  3282  00588A  B083               	btfsc	131,0,c	;volatile
  3283  00588C  EF4A  F02C         	goto	u5281
  3284  005890  EF4C  F02C         	goto	u5280
  3285  005894                     u5281:
  3286  005894  EF58  F02C         	goto	l4455
  3287  005898                     u5280:
  3288  005898                     l77:
  3289  005898  A083               	btfss	131,0,c	;volatile
  3290  00589A  EF51  F02C         	goto	u5291
  3291  00589E  EF53  F02C         	goto	u5290
  3292  0058A2                     u5291:
  3293  0058A2  EF4C  F02C         	goto	l77
  3294  0058A6                     u5290:
  3295  0058A6                     
  3296                           ;teclado.c: 52:                     ret = 10 + i;
  3297  0058A6  500D               	movf	tc_tecla@i^0,w,c
  3298  0058A8  0F0A               	addlw	10
  3299  0058AA  6E0C               	movwf	tc_tecla@ret^0,c
  3300                           
  3301                           ;teclado.c: 53:                     break;
  3302  0058AC  EF6A  F02C         	goto	l4461
  3303  0058B0                     l4455:
  3304                           
  3305                           ;teclado.c: 56:             (*(volatile __near unsigned char*)0xF81) &= linha[i];
  3306  0058B0  0EFB               	movlw	low _linha
  3307  0058B2  240D               	addwf	tc_tecla@i^0,w,c
  3308  0058B4  6EF6               	movwf	tblptrl,c
  3309  0058B6  6AF7               	clrf	tblptrh,c
  3310  0058B8  0E7E               	movlw	high _linha
  3311  0058BA  22F7               	addwfc	tblptrh,f,c
  3312  0058BC                     	if	0	;There are less than 3 active tblptr bytes
  3313  0058BC                     	endif
  3314  0058BC  0008               	tblrd		*
  3315  0058BE  50F5               	movf	tablat,w,c
  3316  0058C0  1681               	andwf	129,f,c	;volatile
  3317  0058C2                     
  3318                           ;teclado.c: 57:         };
  3319  0058C2  2A0D               	incf	tc_tecla@i^0,f,c
  3320  0058C4  0E02               	movlw	2
  3321  0058C6  640D               	cpfsgt	tc_tecla@i^0,c
  3322  0058C8  EF68  F02C         	goto	u5301
  3323  0058CC  EF6A  F02C         	goto	u5300
  3324  0058D0                     u5301:
  3325  0058D0  EFCF  F02B         	goto	l4419
  3326  0058D4                     u5300:
  3327  0058D4                     l4461:
  3328                           
  3329                           ;teclado.c: 58:         atraso_ms(atraso_min);
  3330  0058D4  0E00               	movlw	0
  3331  0058D6  6E02               	movwf	(atraso_ms@t+1)^0,c
  3332  0058D8  0E05               	movlw	5
  3333  0058DA  6E01               	movwf	atraso_ms@t^0,c
  3334  0058DC  EC42  F024         	call	_atraso_ms	;wreg free
  3335  0058E0                     
  3336                           ;teclado.c: 59:         to += 5;
  3337  0058E0  0E05               	movlw	5
  3338  0058E2  2609               	addwf	tc_tecla@to^0,f,c
  3339  0058E4  0E00               	movlw	0
  3340  0058E6  220A               	addwfc	(tc_tecla@to+1)^0,f,c
  3341  0058E8                     l4465:
  3342                           
  3343                           ;teclado.c: 21:     while (((to < timeout) || (!timeout))&&(!ret)) {
  3344  0058E8  5007               	movf	tc_tecla@timeout^0,w,c
  3345  0058EA  5C09               	subwf	tc_tecla@to^0,w,c
  3346  0058EC  5008               	movf	(tc_tecla@timeout+1)^0,w,c
  3347  0058EE  580A               	subwfb	(tc_tecla@to+1)^0,w,c
  3348  0058F0  A0D8               	btfss	status,0,c
  3349  0058F2  EF7D  F02C         	goto	u5311
  3350  0058F6  EF7F  F02C         	goto	u5310
  3351  0058FA                     u5311:
  3352  0058FA  EF88  F02C         	goto	l4469
  3353  0058FE                     u5310:
  3354  0058FE  5007               	movf	tc_tecla@timeout^0,w,c
  3355  005900  1008               	iorwf	(tc_tecla@timeout+1)^0,w,c
  3356  005902  A4D8               	btfss	status,2,c
  3357  005904  EF86  F02C         	goto	u5321
  3358  005908  EF88  F02C         	goto	u5320
  3359  00590C                     u5321:
  3360  00590C  EF90  F02C         	goto	l4471
  3361  005910                     u5320:
  3362  005910                     l4469:
  3363  005910  500C               	movf	tc_tecla@ret^0,w,c
  3364  005912  B4D8               	btfsc	status,2,c
  3365  005914  EF8E  F02C         	goto	u5331
  3366  005918  EF90  F02C         	goto	u5330
  3367  00591C                     u5331:
  3368  00591C  EFCD  F02B         	goto	l4413
  3369  005920                     u5330:
  3370  005920                     l4471:
  3371                           
  3372                           ;teclado.c: 62:     if (!ret)ret = 255;
  3373  005920  500C               	movf	tc_tecla@ret^0,w,c
  3374  005922  A4D8               	btfss	status,2,c
  3375  005924  EF96  F02C         	goto	u5341
  3376  005928  EF98  F02C         	goto	u5340
  3377  00592C                     u5341:
  3378  00592C  EF99  F02C         	goto	l4475
  3379  005930                     u5340:
  3380  005930  680C               	setf	tc_tecla@ret^0,c
  3381  005932                     l4475:
  3382                           
  3383                           ;teclado.c: 63:     if (ret == 11)ret = 0;
  3384  005932  0E0B               	movlw	11
  3385  005934  180C               	xorwf	tc_tecla@ret^0,w,c
  3386  005936  A4D8               	btfss	status,2,c
  3387  005938  EFA0  F02C         	goto	u5351
  3388  00593C  EFA2  F02C         	goto	u5350
  3389  005940                     u5351:
  3390  005940  EFA4  F02C         	goto	l4479
  3391  005944                     u5350:
  3392  005944  0E00               	movlw	0
  3393  005946  6E0C               	movwf	tc_tecla@ret^0,c
  3394  005948                     l4479:
  3395                           
  3396                           ;teclado.c: 64:     (*(volatile __near unsigned char*)0xF81) = tmp;
  3397  005948  C00B  FF81         	movff	tc_tecla@tmp,3969	;volatile
  3398                           
  3399                           ;teclado.c: 65:     return ret;
  3400  00594C  500C               	movf	tc_tecla@ret^0,w,c
  3401  00594E  0012               	return		;funcret
  3402  005950                     __end_of_tc_tecla:
  3403                           	callstack 0
  3404                           
  3405 ;; *************** function _sprintf *****************
  3406 ;; Defined at:
  3407 ;;		line 9 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;  s               2   18[BANK0 ] PTR unsigned char 
  3410 ;;		 -> ver_quantidade@y(8), esvaziar_tanque@y(8), encher_tanque@y(8), 
  3411 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
  3412 ;;		 -> STR_28(5), STR_22(5), STR_12(5), 
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;  f               6   30[BANK0 ] struct _IO_FILE
  3415 ;;  ap              2   28[BANK0 ] PTR void [1]
  3416 ;;		 -> ?_sprintf(2), 
  3417 ;;  ret             2    0        int 
  3418 ;; Return value:  Size  Location     Type
  3419 ;;                  2   18[BANK0 ] int 
  3420 ;; Registers used:
  3421 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3422 ;; Tracked objects:
  3423 ;;		On entry : 0/0
  3424 ;;		On exit  : 0/0
  3425 ;;		Unchanged: 0/0
  3426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3427 ;;      Params:         0       8       0       0       0       0       0
  3428 ;;      Locals:         0      10       0       0       0       0       0
  3429 ;;      Temps:          0       0       0       0       0       0       0
  3430 ;;      Totals:         0      18       0       0       0       0       0
  3431 ;;Total ram usage:       18 bytes
  3432 ;; Hardware stack levels used:    1
  3433 ;; Hardware stack levels required when called:    7
  3434 ;; This function calls:
  3435 ;;		_vfprintf
  3436 ;; This function is called by:
  3437 ;;		_encher_tanque
  3438 ;;		_esvaziar_tanque
  3439 ;;		_ver_quantidade
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           	psect	text6
  3444  004656                     __ptext6:
  3445                           	callstack 0
  3446  004656                     _sprintf:
  3447                           	callstack 22
  3448  004656  0E96               	movlw	low (?_sprintf+4)
  3449  004658  0100               	movlb	0	; () banked
  3450  00465A  6F9C               	movwf	sprintf@ap& (0+255),b
  3451  00465C  0E00               	movlw	high (?_sprintf+4)
  3452  00465E  6F9D               	movwf	(sprintf@ap+1)& (0+255),b
  3453  004660  C092  F09E         	movff	sprintf@s,sprintf@f
  3454  004664  C093  F09F         	movff	sprintf@s+1,sprintf@f+1
  3455  004668                     
  3456                           ; BSR set to: 0
  3457  004668  0E00               	movlw	0
  3458  00466A  6FA1               	movwf	(sprintf@f+3)& (0+255),b
  3459  00466C  0E00               	movlw	0
  3460  00466E  6FA0               	movwf	(sprintf@f+2)& (0+255),b
  3461  004670                     
  3462                           ; BSR set to: 0
  3463  004670  0E00               	movlw	0
  3464  004672  6FA3               	movwf	(sprintf@f+5)& (0+255),b
  3465  004674  0E00               	movlw	0
  3466  004676  6FA2               	movwf	(sprintf@f+4)& (0+255),b
  3467  004678                     
  3468                           ; BSR set to: 0
  3469  004678  0E9E               	movlw	low sprintf@f
  3470  00467A  6F8C               	movwf	vfprintf@fp& (0+255),b
  3471  00467C  0E00               	movlw	high sprintf@f
  3472  00467E  6F8D               	movwf	(vfprintf@fp+1)& (0+255),b
  3473  004680  C094  F08E         	movff	sprintf@fmt,vfprintf@fmt
  3474  004684  C095  F08F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3475  004688  0E9C               	movlw	low sprintf@ap
  3476  00468A  6F90               	movwf	vfprintf@ap& (0+255),b
  3477  00468C  0E00               	movlw	high sprintf@ap
  3478  00468E  6F91               	movwf	(vfprintf@ap+1)& (0+255),b
  3479  004690  ECE0  F023         	call	_vfprintf	;wreg free
  3480  004694  0100               	movlb	0	; () banked
  3481  004696  51A0               	movf	(sprintf@f+2)& (0+255),w,b
  3482  004698  2592               	addwf	sprintf@s& (0+255),w,b
  3483  00469A  6ED9               	movwf	fsr2l,c
  3484  00469C  51A1               	movf	(sprintf@f+3)& (0+255),w,b
  3485  00469E  2193               	addwfc	(sprintf@s+1)& (0+255),w,b
  3486  0046A0  6EDA               	movwf	fsr2h,c
  3487  0046A2  0E00               	movlw	0
  3488  0046A4  6EDF               	movwf	indf2,c
  3489  0046A6                     
  3490                           ; BSR set to: 0
  3491  0046A6  0012               	return		;funcret
  3492  0046A8                     __end_of_sprintf:
  3493                           	callstack 0
  3494                           
  3495 ;; *************** function _vfprintf *****************
  3496 ;; Defined at:
  3497 ;;		line 1368 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  3500 ;;		 -> sprintf@f(6), 
  3501 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  3502 ;;		 -> STR_28(5), STR_22(5), STR_12(5), 
  3503 ;;  ap              2   16[BANK0 ] PTR PTR void 
  3504 ;;		 -> sprintf@ap(2), 
  3505 ;; Auto vars:     Size  Location     Type
  3506 ;;  cfmt            2  123[COMRAM] PTR unsigned char 
  3507 ;;		 -> STR_28(5), STR_22(5), STR_12(5), 
  3508 ;; Return value:  Size  Location     Type
  3509 ;;                  2   12[BANK0 ] int 
  3510 ;; Registers used:
  3511 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3512 ;; Tracked objects:
  3513 ;;		On entry : 0/0
  3514 ;;		On exit  : 0/0
  3515 ;;		Unchanged: 0/0
  3516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3517 ;;      Params:         0       6       0       0       0       0       0
  3518 ;;      Locals:         2       0       0       0       0       0       0
  3519 ;;      Temps:          0       0       0       0       0       0       0
  3520 ;;      Totals:         2       6       0       0       0       0       0
  3521 ;;Total ram usage:        8 bytes
  3522 ;; Hardware stack levels used:    1
  3523 ;; Hardware stack levels required when called:    6
  3524 ;; This function calls:
  3525 ;;		_vfpfcnvrt
  3526 ;; This function is called by:
  3527 ;;		_sprintf
  3528 ;; This function uses a non-reentrant model
  3529 ;;
  3530                           
  3531                           	psect	text7
  3532  0047C0                     __ptext7:
  3533                           	callstack 0
  3534  0047C0                     _vfprintf:
  3535                           	callstack 22
  3536  0047C0                     
  3537                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprintf(FIL
      +                          E *fp, const char *fmt, va_list ap);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1369: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 13
      +                          71:     char *cfmt;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 137
      +                          3:     cfmt = (char *)fmt;
  3538  0047C0  C08E  F07C         	movff	vfprintf@fmt,vfprintf@cfmt
  3539  0047C4  C08F  F07D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3540  0047C8                     
  3541                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 0;
  3542  0047C8  0E00               	movlw	0
  3543  0047CA  0100               	movlb	0	; () banked
  3544  0047CC  6FE9               	movwf	(_nout+1)& (0+255),b
  3545  0047CE  0E00               	movlw	0
  3546  0047D0  6FE8               	movwf	_nout& (0+255),b
  3547                           
  3548                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt
      +                          ) {
  3549  0047D2  EFFE  F023         	goto	l4385
  3550  0047D6                     l4383:
  3551                           
  3552                           ; BSR set to: 0
  3553                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nout += 
      +                          vfpfcnvrt(fp, &cfmt, ap);
  3554  0047D6  C08C  F072         	movff	vfprintf@fp,vfpfcnvrt@fp
  3555  0047DA  C08D  F073         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3556  0047DE  0E7C               	movlw	low vfprintf@cfmt
  3557  0047E0  6E74               	movwf	vfpfcnvrt@fmt^0,c
  3558  0047E2  0E00               	movlw	high vfprintf@cfmt
  3559  0047E4  6E75               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3560  0047E6  C090  F076         	movff	vfprintf@ap,vfpfcnvrt@ap
  3561  0047EA  C091  F077         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3562  0047EE  ECCE  F032         	call	_vfpfcnvrt	;wreg free
  3563  0047F2  5072               	movf	?_vfpfcnvrt^0,w,c
  3564  0047F4  0100               	movlb	0	; () banked
  3565  0047F6  27E8               	addwf	_nout& (0+255),f,b
  3566  0047F8  5073               	movf	(?_vfpfcnvrt+1)^0,w,c
  3567  0047FA  23E9               	addwfc	(_nout+1)& (0+255),f,b
  3568  0047FC                     l4385:
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt
      +                          ) {
  3572  0047FC  C07C  FFF6         	movff	vfprintf@cfmt,tblptrl
  3573  004800  C07D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3574  004804                     	if	0	;tblptru may be non-zero
  3575  004804                     	endif
  3576  004804                     	if	0	;tblptru may be non-zero
  3577  004804                     	endif
  3578  004804  0008               	tblrd		*
  3579  004806  50F5               	movf	tablat,w,c
  3580  004808  0900               	iorlw	0
  3581  00480A  A4D8               	btfss	status,2,c
  3582  00480C  EF0A  F024         	goto	u5141
  3583  004810  EF0C  F024         	goto	u5140
  3584  004814                     u5141:
  3585  004814  EFEB  F023         	goto	l4383
  3586  004818                     u5140:
  3587  004818                     
  3588                           ; BSR set to: 0
  3589                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return nout;
  3590  004818  C0E8  F08C         	movff	_nout,?_vfprintf
  3591  00481C  C0E9  F08D         	movff	_nout+1,?_vfprintf+1
  3592  004820                     
  3593                           ; BSR set to: 0
  3594  004820  0012               	return		;funcret
  3595  004822                     __end_of_vfprintf:
  3596                           	callstack 0
  3597                           
  3598 ;; *************** function _vfpfcnvrt *****************
  3599 ;; Defined at:
  3600 ;;		line 670 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3601 ;; Parameters:    Size  Location     Type
  3602 ;;  fp              2  113[COMRAM] PTR struct _IO_FILE
  3603 ;;		 -> sprintf@f(6), 
  3604 ;;  fmt             2  115[COMRAM] PTR PTR unsigned char 
  3605 ;;		 -> vfprintf@cfmt(2), 
  3606 ;;  ap              2  117[COMRAM] PTR PTR void 
  3607 ;;		 -> sprintf@ap(2), 
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;  llu             8    0        unsigned long long 
  3610 ;;  ll              8    0        long long 
  3611 ;;  f               4    4[BANK0 ] long long 
  3612 ;;  ct              3    8[BANK0 ] unsigned char [3]
  3613 ;;  vp              3    0        PTR void 
  3614 ;;  cp              3    0        PTR unsigned char 
  3615 ;;  i               2    0        int 
  3616 ;;  done            2    0        int 
  3617 ;;  c               1   11[BANK0 ] unsigned char 
  3618 ;; Return value:  Size  Location     Type
  3619 ;;                  2  113[COMRAM] int 
  3620 ;; Registers used:
  3621 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3622 ;; Tracked objects:
  3623 ;;		On entry : 0/0
  3624 ;;		On exit  : 0/0
  3625 ;;		Unchanged: 0/0
  3626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3627 ;;      Params:         6       0       0       0       0       0       0
  3628 ;;      Locals:         0      12       0       0       0       0       0
  3629 ;;      Temps:          4       0       0       0       0       0       0
  3630 ;;      Totals:        10      12       0       0       0       0       0
  3631 ;;Total ram usage:       22 bytes
  3632 ;; Hardware stack levels used:    1
  3633 ;; Hardware stack levels required when called:    5
  3634 ;; This function calls:
  3635 ;;		_atoi
  3636 ;;		_efgtoa
  3637 ;;		_fputc
  3638 ;;		_isdigit
  3639 ;;		_isupper
  3640 ;;		_strncmp
  3641 ;;		_tolower
  3642 ;; This function is called by:
  3643 ;;		_vfprintf
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647                           	psect	text8
  3648  00659C                     __ptext8:
  3649                           	callstack 0
  3650  00659C                     _vfpfcnvrt:
  3651                           	callstack 22
  3652  00659C                     
  3653                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int vfpfcn
      +                          vrt(FILE *fp, char *fmt[], va_list ap);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\c
      +                          ommon\doprnt.c: 671: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          672:     char c, *cp, ct[3];;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\dopr
      +                          nt.c: 673:     int done, i;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 674:     long long ll;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 675:     unsigned long long llu;
  3654  00659C  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3655  0065A0  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3656  0065A4  CFDE FFF6          	movff	postinc2,tblptrl
  3657  0065A8  CFDD FFF7          	movff	postdec2,tblptrh
  3658  0065AC                     	if	0	;tblptru may be non-zero
  3659  0065AC                     	endif
  3660  0065AC                     	if	0	;tblptru may be non-zero
  3661  0065AC                     	endif
  3662  0065AC  0008               	tblrd		*
  3663  0065AE  50F5               	movf	tablat,w,c
  3664  0065B0  0A25               	xorlw	37
  3665  0065B2  A4D8               	btfss	status,2,c
  3666  0065B4  EFDE  F032         	goto	u4971
  3667  0065B8  EFE0  F032         	goto	u4970
  3668  0065BC                     u4971:
  3669  0065BC  EFE7  F034         	goto	l4335
  3670  0065C0                     u4970:
  3671  0065C0                     
  3672                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*fmt;
  3673  0065C0  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3674  0065C4  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3675  0065C8  2ADE               	incf	postinc2,f,c
  3676  0065CA  0E00               	movlw	0
  3677  0065CC  22DD               	addwfc	postdec2,f,c
  3678  0065CE                     
  3679                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flags = w
      +                          idth = 0;
  3680  0065CE  0E00               	movlw	0
  3681  0065D0  0100               	movlb	0	; () banked
  3682  0065D2  6FEB               	movwf	(_width+1)& (0+255),b
  3683  0065D4  0E00               	movlw	0
  3684  0065D6  6FEA               	movwf	_width& (0+255),b
  3685  0065D8  C0EA  F0EE         	movff	_width,_flags
  3686  0065DC  C0EB  F0EF         	movff	_width+1,_flags+1
  3687  0065E0                     
  3688                           ; BSR set to: 0
  3689                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec = -1
      +                          ;
  3690  0065E0  69EC               	setf	_prec& (0+255),b
  3691  0065E2  69ED               	setf	(_prec+1)& (0+255),b
  3692  0065E4                     
  3693                           ; BSR set to: 0
  3694                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if ((*fmt
      +                          )[0] == '.') {
  3695  0065E4  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3696  0065E8  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3697  0065EC  CFDE FFF6          	movff	postinc2,tblptrl
  3698  0065F0  CFDD FFF7          	movff	postdec2,tblptrh
  3699  0065F4                     	if	0	;tblptru may be non-zero
  3700  0065F4                     	endif
  3701  0065F4                     	if	0	;tblptru may be non-zero
  3702  0065F4                     	endif
  3703  0065F4  0008               	tblrd		*
  3704  0065F6  50F5               	movf	tablat,w,c
  3705  0065F8  0A2E               	xorlw	46
  3706  0065FA  A4D8               	btfss	status,2,c
  3707  0065FC  EF02  F033         	goto	u4981
  3708  006600  EF04  F033         	goto	u4980
  3709  006604                     u4981:
  3710  006604  EF82  F033         	goto	l4281
  3711  006608                     u4980:
  3712  006608                     
  3713                           ; BSR set to: 0
  3714                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             prec 
      +                          = 0;
  3715  006608  0E00               	movlw	0
  3716  00660A  6FED               	movwf	(_prec+1)& (0+255),b
  3717  00660C  0E00               	movlw	0
  3718  00660E  6FEC               	movwf	_prec& (0+255),b
  3719  006610                     
  3720                           ; BSR set to: 0
  3721                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             ++*fm
      +                          t;
  3722  006610  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3723  006614  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3724  006618  2ADE               	incf	postinc2,f,c
  3725  00661A  0E00               	movlw	0
  3726  00661C  22DD               	addwfc	postdec2,f,c
  3727  00661E                     
  3728                           ; BSR set to: 0
  3729                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             if ((
      +                          *fmt)[0] == '*') {
  3730  00661E  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3731  006622  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3732  006626  CFDE FFF6          	movff	postinc2,tblptrl
  3733  00662A  CFDD FFF7          	movff	postdec2,tblptrh
  3734  00662E                     	if	0	;tblptru may be non-zero
  3735  00662E                     	endif
  3736  00662E                     	if	0	;tblptru may be non-zero
  3737  00662E                     	endif
  3738  00662E  0008               	tblrd		*
  3739  006630  50F5               	movf	tablat,w,c
  3740  006632  0A2A               	xorlw	42
  3741  006634  A4D8               	btfss	status,2,c
  3742  006636  EF1F  F033         	goto	u4991
  3743  00663A  EF21  F033         	goto	u4990
  3744  00663E                     u4991:
  3745  00663E  EF3E  F033         	goto	l4271
  3746  006642                     u4990:
  3747  006642                     
  3748                           ; BSR set to: 0
  3749                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:                 +
      +                          +*fmt;
  3750  006642  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3751  006646  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3752  00664A  2ADE               	incf	postinc2,f,c
  3753  00664C  0E00               	movlw	0
  3754  00664E  22DD               	addwfc	postdec2,f,c
  3755                           
  3756                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:                 p
      +                          rec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3757  006650  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3758  006654  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3759  006658  CFDF F078          	movff	indf2,??_vfpfcnvrt
  3760  00665C  0E02               	movlw	2
  3761  00665E  26DE               	addwf	postinc2,f,c
  3762  006660  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  3763  006664  0E00               	movlw	0
  3764  006666  22DD               	addwfc	postdec2,f,c
  3765  006668  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3766  00666C  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3767  006670  CFDE F0EC          	movff	postinc2,_prec
  3768  006674  CFDD F0ED          	movff	postdec2,_prec+1
  3769                           
  3770                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             } els
      +                          e {
  3771  006678  EF82  F033         	goto	l4281
  3772  00667C                     l4271:
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:                 p
      +                          rec = atoi(*fmt);
  3776  00667C  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3777  006680  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3778  006684  CFDE F008          	movff	postinc2,atoi@s
  3779  006688  CFDD F009          	movff	postdec2,atoi@s+1
  3780  00668C  EC59  F029         	call	_atoi	;wreg free
  3781  006690  C008  F0EC         	movff	?_atoi,_prec
  3782  006694  C009  F0ED         	movff	?_atoi+1,_prec+1
  3783                           
  3784                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:                 w
      +                          hile ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3785  006698  EF55  F033         	goto	l4275
  3786  00669C                     l4273:
  3787                           
  3788                           ; BSR set to: 0
  3789                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:                  
      +                             ++*fmt;
  3790  00669C  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3791  0066A0  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3792  0066A4  2ADE               	incf	postinc2,f,c
  3793  0066A6  0E00               	movlw	0
  3794  0066A8  22DD               	addwfc	postdec2,f,c
  3795  0066AA                     l4275:
  3796  0066AA  0ED0               	movlw	208
  3797  0066AC  6E78               	movwf	??_vfpfcnvrt^0,c
  3798  0066AE  0EFF               	movlw	255
  3799  0066B0  6E79               	movwf	(??_vfpfcnvrt+1)^0,c
  3800  0066B2  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3801  0066B6  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3802  0066BA  CFDE FFF6          	movff	postinc2,tblptrl
  3803  0066BE  CFDD FFF7          	movff	postdec2,tblptrh
  3804  0066C2                     	if	0	;tblptru may be non-zero
  3805  0066C2                     	endif
  3806  0066C2                     	if	0	;tblptru may be non-zero
  3807  0066C2                     	endif
  3808  0066C2  0008               	tblrd		*
  3809  0066C4  50F5               	movf	tablat,w,c
  3810  0066C6  6E7A               	movwf	(??_vfpfcnvrt+2)^0,c
  3811  0066C8  6A7B               	clrf	(??_vfpfcnvrt+3)^0,c
  3812  0066CA  5078               	movf	??_vfpfcnvrt^0,w,c
  3813  0066CC  267A               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3814  0066CE  5079               	movf	(??_vfpfcnvrt+1)^0,w,c
  3815  0066D0  227B               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3816  0066D2  507B               	movf	(??_vfpfcnvrt+3)^0,w,c
  3817  0066D4  E10A               	bnz	u5000
  3818  0066D6  0E0A               	movlw	10
  3819  0066D8  5C7A               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3820  0066DA  A0D8               	btfss	status,0,c
  3821  0066DC  EF72  F033         	goto	u5001
  3822  0066E0  EF75  F033         	goto	u5000
  3823  0066E4                     u5001:
  3824  0066E4  0E01               	movlw	1
  3825  0066E6  EF76  F033         	goto	u5010
  3826  0066EA                     u5000:
  3827  0066EA  0E00               	movlw	0
  3828  0066EC                     u5010:
  3829  0066EC  0100               	movlb	0	; () banked
  3830  0066EE  6F80               	movwf	_vfpfcnvrt$788& (0+255),b
  3831  0066F0  6B81               	clrf	(_vfpfcnvrt$788+1)& (0+255),b
  3832  0066F2                     
  3833                           ; BSR set to: 0
  3834  0066F2  5180               	movf	_vfpfcnvrt$788& (0+255),w,b
  3835  0066F4  1181               	iorwf	(_vfpfcnvrt$788+1)& (0+255),w,b
  3836  0066F6  A4D8               	btfss	status,2,c
  3837  0066F8  EF80  F033         	goto	u5021
  3838  0066FC  EF82  F033         	goto	u5020
  3839  006700                     u5021:
  3840  006700  EF4E  F033         	goto	l4273
  3841  006704                     u5020:
  3842  006704                     l4281:
  3843                           
  3844                           ; BSR set to: 0
  3845                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0] = t
      +                          olower((int)(*fmt)[0]);
  3846  006704  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3847  006708  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3848  00670C  CFDE FFF6          	movff	postinc2,tblptrl
  3849  006710  CFDD FFF7          	movff	postdec2,tblptrh
  3850  006714                     	if	0	;tblptru may be non-zero
  3851  006714                     	endif
  3852  006714                     	if	0	;tblptru may be non-zero
  3853  006714                     	endif
  3854  006714  0008               	tblrd		*
  3855  006716  50F5               	movf	tablat,w,c
  3856  006718  6E07               	movwf	tolower@c^0,c
  3857  00671A  6A08               	clrf	(tolower@c+1)^0,c
  3858  00671C  ECB0  F023         	call	_tolower	;wreg free
  3859  006720  5007               	movf	?_tolower^0,w,c
  3860  006722  0100               	movlb	0	; () banked
  3861  006724  6F88               	movwf	vfpfcnvrt@ct& (0+255),b
  3862  006726                     
  3863                           ; BSR set to: 0
  3864                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (ct[0]
      +                          ) {
  3865  006726  5188               	movf	vfpfcnvrt@ct& (0+255),w,b
  3866  006728  B4D8               	btfsc	status,2,c
  3867  00672A  EF99  F033         	goto	u5031
  3868  00672E  EF9B  F033         	goto	u5030
  3869  006732                     u5031:
  3870  006732  EFD5  F033         	goto	l4291
  3871  006736                     u5030:
  3872  006736                     
  3873                           ; BSR set to: 0
  3874                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             ct[1]
      +                           = tolower((int)(*fmt)[1]);
  3875  006736  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3876  00673A  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3877  00673E  CFDE F078          	movff	postinc2,??_vfpfcnvrt
  3878  006742  CFDD F079          	movff	postdec2,??_vfpfcnvrt+1
  3879  006746  0E01               	movlw	1
  3880  006748  2678               	addwf	??_vfpfcnvrt^0,f,c
  3881  00674A  0E00               	movlw	0
  3882  00674C  2279               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3883  00674E  C078  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3884  006752  C079  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3885  006756                     	if	0	;tblptru may be non-zero
  3886  006756                     	endif
  3887  006756                     	if	0	;tblptru may be non-zero
  3888  006756                     	endif
  3889  006756  0008               	tblrd		*
  3890  006758  50F5               	movf	tablat,w,c
  3891  00675A  6E07               	movwf	tolower@c^0,c
  3892  00675C  6A08               	clrf	(tolower@c+1)^0,c
  3893  00675E  ECB0  F023         	call	_tolower	;wreg free
  3894  006762  5007               	movf	?_tolower^0,w,c
  3895  006764  0100               	movlb	0	; () banked
  3896  006766  6F89               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3897  006768                     
  3898                           ; BSR set to: 0
  3899                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             if (c
      +                          t[1]) {
  3900  006768  5189               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3901  00676A  B4D8               	btfsc	status,2,c
  3902  00676C  EFBA  F033         	goto	u5041
  3903  006770  EFBC  F033         	goto	u5040
  3904  006774                     u5041:
  3905  006774  EFD5  F033         	goto	l4291
  3906  006778                     u5040:
  3907  006778                     
  3908                           ; BSR set to: 0
  3909                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:                 c
      +                          t[2] = tolower((int)(*fmt)[2]);
  3910  006778  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3911  00677C  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3912  006780  CFDE F078          	movff	postinc2,??_vfpfcnvrt
  3913  006784  CFDD F079          	movff	postdec2,??_vfpfcnvrt+1
  3914  006788  0E02               	movlw	2
  3915  00678A  2678               	addwf	??_vfpfcnvrt^0,f,c
  3916  00678C  0E00               	movlw	0
  3917  00678E  2279               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3918  006790  C078  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3919  006794  C079  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3920  006798                     	if	0	;tblptru may be non-zero
  3921  006798                     	endif
  3922  006798                     	if	0	;tblptru may be non-zero
  3923  006798                     	endif
  3924  006798  0008               	tblrd		*
  3925  00679A  50F5               	movf	tablat,w,c
  3926  00679C  6E07               	movwf	tolower@c^0,c
  3927  00679E  6A08               	clrf	(tolower@c+1)^0,c
  3928  0067A0  ECB0  F023         	call	_tolower	;wreg free
  3929  0067A4  5007               	movf	?_tolower^0,w,c
  3930  0067A6  0100               	movlb	0	; () banked
  3931  0067A8  6F8A               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3932  0067AA                     l4291:
  3933                           
  3934                           ; BSR set to: 0
  3935                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (ct[0]
      +                           == 'f') {
  3936  0067AA  0E66               	movlw	102
  3937  0067AC  1988               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3938  0067AE  A4D8               	btfss	status,2,c
  3939  0067B0  EFDC  F033         	goto	u5051
  3940  0067B4  EFDE  F033         	goto	u5050
  3941  0067B8                     u5051:
  3942  0067B8  EF1E  F034         	goto	l4303
  3943  0067BC                     u5050:
  3944  0067BC                     
  3945                           ; BSR set to: 0
  3946                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             c = (
      +                          *fmt)[0];
  3947  0067BC  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3948  0067C0  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3949  0067C4  CFDE FFF6          	movff	postinc2,tblptrl
  3950  0067C8  CFDD FFF7          	movff	postdec2,tblptrh
  3951  0067CC                     	if	0	;tblptru may be non-zero
  3952  0067CC                     	endif
  3953  0067CC                     	if	0	;tblptru may be non-zero
  3954  0067CC                     	endif
  3955  0067CC  0008               	tblrd		*
  3956  0067CE  CFF5 F08B          	movff	tablat,vfpfcnvrt@c
  3957  0067D2                     
  3958                           ; BSR set to: 0
  3959                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             ++*fm
      +                          t;
  3960  0067D2  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3961  0067D6  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3962  0067DA  2ADE               	incf	postinc2,f,c
  3963  0067DC  0E00               	movlw	0
  3964  0067DE  22DD               	addwfc	postdec2,f,c
  3965  0067E0                     
  3966                           ; BSR set to: 0
  3967                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             f = (
      +                          long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3968  0067E0  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3969  0067E4  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3970  0067E8  CFDF F078          	movff	indf2,??_vfpfcnvrt
  3971  0067EC  0E04               	movlw	4
  3972  0067EE  26DE               	addwf	postinc2,f,c
  3973  0067F0  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  3974  0067F4  0E00               	movlw	0
  3975  0067F6  22DD               	addwfc	postdec2,f,c
  3976  0067F8  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3977  0067FC  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3978  006800  CFDE F084          	movff	postinc2,vfpfcnvrt@f
  3979  006804  CFDE F085          	movff	postinc2,vfpfcnvrt@f+1
  3980  006808  CFDE F086          	movff	postinc2,vfpfcnvrt@f+2
  3981  00680C  CFDE F087          	movff	postinc2,vfpfcnvrt@f+3
  3982  006810                     l4299:
  3983                           
  3984                           ; BSR set to: 0
  3985                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             retur
      +                          n efgtoa(fp, f, c);
  3986  006810  C072  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  3987  006814  C073  F02F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3988  006818  C084  F030         	movff	vfpfcnvrt@f,efgtoa@f
  3989  00681C  C085  F031         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3990  006820  C086  F032         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3991  006824  C087  F033         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3992  006828  C08B  F034         	movff	vfpfcnvrt@c,efgtoa@c
  3993  00682C  ECB0  F039         	call	_efgtoa	;wreg free
  3994  006830  C02E  F072         	movff	?_efgtoa,?_vfpfcnvrt
  3995  006834  C02F  F073         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3996  006838  EF02  F035         	goto	l1043
  3997  00683C                     l4303:
  3998                           
  3999                           ; BSR set to: 0
  4000                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (!strn
      +                          cmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  4001  00683C  0E88               	movlw	low vfpfcnvrt@ct
  4002  00683E  6E01               	movwf	strncmp@_l^0,c
  4003  006840  0E00               	movlw	high vfpfcnvrt@ct
  4004  006842  6E02               	movwf	(strncmp@_l+1)^0,c
  4005  006844  0EF8               	movlw	low STR_40
  4006  006846  6E03               	movwf	strncmp@_r^0,c
  4007  006848  0E7F               	movlw	high STR_40
  4008  00684A  6E04               	movwf	(strncmp@_r+1)^0,c
  4009  00684C  0E00               	movlw	0
  4010  00684E  6E06               	movwf	(strncmp@n+1)^0,c
  4011  006850  0E02               	movlw	2
  4012  006852  6E05               	movwf	strncmp@n^0,c
  4013  006854  ECF7  F026         	call	_strncmp	;wreg free
  4014  006858  5001               	movf	?_strncmp^0,w,c
  4015  00685A  1002               	iorwf	(?_strncmp+1)^0,w,c
  4016  00685C  A4D8               	btfss	status,2,c
  4017  00685E  EF33  F034         	goto	u5061
  4018  006862  EF35  F034         	goto	u5060
  4019  006866                     u5061:
  4020  006866  EFB1  F034         	goto	l4319
  4021  00686A                     u5060:
  4022  00686A                     
  4023                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             if ((
      +                          0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  4024  00686A  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4025  00686E  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4026  006872  CFDE F078          	movff	postinc2,??_vfpfcnvrt
  4027  006876  CFDD F079          	movff	postdec2,??_vfpfcnvrt+1
  4028  00687A  0E01               	movlw	1
  4029  00687C  2678               	addwf	??_vfpfcnvrt^0,f,c
  4030  00687E  0E00               	movlw	0
  4031  006880  2279               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4032  006882  C078  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4033  006886  C079  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4034  00688A                     	if	0	;tblptru may be non-zero
  4035  00688A                     	endif
  4036  00688A                     	if	0	;tblptru may be non-zero
  4037  00688A                     	endif
  4038  00688A  0008               	tblrd		*
  4039  00688C  CFF5 F08B          	movff	tablat,vfpfcnvrt@c
  4040  006890  0EBF               	movlw	191
  4041  006892  6E78               	movwf	??_vfpfcnvrt^0,c
  4042  006894  0EFF               	movlw	255
  4043  006896  6E79               	movwf	(??_vfpfcnvrt+1)^0,c
  4044  006898  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4045  00689C  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4046  0068A0  CFDE FFF6          	movff	postinc2,tblptrl
  4047  0068A4  CFDD FFF7          	movff	postdec2,tblptrh
  4048  0068A8                     	if	0	;tblptru may be non-zero
  4049  0068A8                     	endif
  4050  0068A8                     	if	0	;tblptru may be non-zero
  4051  0068A8                     	endif
  4052  0068A8  0008               	tblrd		*
  4053  0068AA  50F5               	movf	tablat,w,c
  4054  0068AC  6E7A               	movwf	(??_vfpfcnvrt+2)^0,c
  4055  0068AE  6A7B               	clrf	(??_vfpfcnvrt+3)^0,c
  4056  0068B0  5078               	movf	??_vfpfcnvrt^0,w,c
  4057  0068B2  267A               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4058  0068B4  5079               	movf	(??_vfpfcnvrt+1)^0,w,c
  4059  0068B6  227B               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4060  0068B8  507B               	movf	(??_vfpfcnvrt+3)^0,w,c
  4061  0068BA  E10A               	bnz	u5070
  4062  0068BC  0E1A               	movlw	26
  4063  0068BE  5C7A               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4064  0068C0  A0D8               	btfss	status,0,c
  4065  0068C2  EF65  F034         	goto	u5071
  4066  0068C6  EF68  F034         	goto	u5070
  4067  0068CA                     u5071:
  4068  0068CA  0E01               	movlw	1
  4069  0068CC  EF69  F034         	goto	u5080
  4070  0068D0                     u5070:
  4071  0068D0  0E00               	movlw	0
  4072  0068D2                     u5080:
  4073  0068D2  0100               	movlb	0	; () banked
  4074  0068D4  6F82               	movwf	_vfpfcnvrt$792& (0+255),b
  4075  0068D6  6B83               	clrf	(_vfpfcnvrt$792+1)& (0+255),b
  4076  0068D8                     
  4077                           ; BSR set to: 0
  4078  0068D8  5182               	movf	_vfpfcnvrt$792& (0+255),w,b
  4079  0068DA  1183               	iorwf	(_vfpfcnvrt$792+1)& (0+255),w,b
  4080  0068DC  B4D8               	btfsc	status,2,c
  4081  0068DE  EF73  F034         	goto	u5091
  4082  0068E2  EF75  F034         	goto	u5090
  4083  0068E6                     u5091:
  4084  0068E6  EF8F  F034         	goto	l4313
  4085  0068EA                     u5090:
  4086  0068EA                     
  4087                           ; BSR set to: 0
  4088                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:                 f
      +                           = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4089  0068EA  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4090  0068EE  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4091  0068F2  CFDF F078          	movff	indf2,??_vfpfcnvrt
  4092  0068F6  0E04               	movlw	4
  4093  0068F8  26DE               	addwf	postinc2,f,c
  4094  0068FA  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  4095  0068FE  0E00               	movlw	0
  4096  006900  22DD               	addwfc	postdec2,f,c
  4097  006902  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4098  006906  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4099  00690A  CFDE F084          	movff	postinc2,vfpfcnvrt@f
  4100  00690E  CFDE F085          	movff	postinc2,vfpfcnvrt@f+1
  4101  006912  CFDE F086          	movff	postinc2,vfpfcnvrt@f+2
  4102  006916  CFDE F087          	movff	postinc2,vfpfcnvrt@f+3
  4103                           
  4104                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             } els
      +                          e {
  4105  00691A  EFA7  F034         	goto	l1050
  4106  00691E                     l4313:
  4107                           
  4108                           ; BSR set to: 0
  4109                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:                 f
      +                           = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4110  00691E  C076  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4111  006922  C077  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4112  006926  CFDF F078          	movff	indf2,??_vfpfcnvrt
  4113  00692A  0E04               	movlw	4
  4114  00692C  26DE               	addwf	postinc2,f,c
  4115  00692E  CFDF F079          	movff	indf2,??_vfpfcnvrt+1
  4116  006932  0E00               	movlw	0
  4117  006934  22DD               	addwfc	postdec2,f,c
  4118  006936  C078  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4119  00693A  C079  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4120  00693E  CFDE F084          	movff	postinc2,vfpfcnvrt@f
  4121  006942  CFDE F085          	movff	postinc2,vfpfcnvrt@f+1
  4122  006946  CFDE F086          	movff	postinc2,vfpfcnvrt@f+2
  4123  00694A  CFDE F087          	movff	postinc2,vfpfcnvrt@f+3
  4124  00694E                     l1050:
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             *fmt 
      +                          += ((sizeof("lf")/sizeof("lf"[0]))-1);
  4128  00694E  0E02               	movlw	2
  4129  006950  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4130  006954  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4131  006958  26DE               	addwf	postinc2,f,c
  4132  00695A  0E00               	movlw	0
  4133  00695C  22DD               	addwfc	postdec2,f,c
  4134  00695E  EF08  F034         	goto	l4299
  4135  006962                     l4319:
  4136                           
  4137                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if ((*fm
      +                          t)[0] == '%') {
  4138  006962  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4139  006966  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4140  00696A  CFDE FFF6          	movff	postinc2,tblptrl
  4141  00696E  CFDD FFF7          	movff	postdec2,tblptrh
  4142  006972                     	if	0	;tblptru may be non-zero
  4143  006972                     	endif
  4144  006972                     	if	0	;tblptru may be non-zero
  4145  006972                     	endif
  4146  006972  0008               	tblrd		*
  4147  006974  50F5               	movf	tablat,w,c
  4148  006976  0A25               	xorlw	37
  4149  006978  A4D8               	btfss	status,2,c
  4150  00697A  EFC1  F034         	goto	u5101
  4151  00697E  EFC3  F034         	goto	u5100
  4152  006982                     u5101:
  4153  006982  EFDA  F034         	goto	l4329
  4154  006986                     u5100:
  4155  006986                     
  4156                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:             ++*f
      +                          mt;
  4157  006986  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4158  00698A  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4159  00698E  2ADE               	incf	postinc2,f,c
  4160  006990  0E00               	movlw	0
  4161  006992  22DD               	addwfc	postdec2,f,c
  4162  006994                     
  4163                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:             fput
      +                          c((int)'%', fp);
  4164  006994  0E00               	movlw	0
  4165  006996  6E02               	movwf	(fputc@c+1)^0,c
  4166  006998  0E25               	movlw	37
  4167  00699A  6E01               	movwf	fputc@c^0,c
  4168  00699C  C072  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4169  0069A0  C073  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4170  0069A4  EC92  F026         	call	_fputc	;wreg free
  4171  0069A8                     l4325:
  4172                           
  4173                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:             retu
      +                          rn 1;
  4174  0069A8  0E00               	movlw	0
  4175  0069AA  6E73               	movwf	(?_vfpfcnvrt+1)^0,c
  4176  0069AC  0E01               	movlw	1
  4177  0069AE  6E72               	movwf	?_vfpfcnvrt^0,c
  4178  0069B0  EF02  F035         	goto	l1043
  4179  0069B4                     l4329:
  4180                           
  4181                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*fmt;
  4182  0069B4  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4183  0069B8  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4184  0069BC  2ADE               	incf	postinc2,f,c
  4185  0069BE  0E00               	movlw	0
  4186  0069C0  22DD               	addwfc	postdec2,f,c
  4187  0069C2                     
  4188                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         return 0
      +                          ;
  4189  0069C2  0E00               	movlw	0
  4190  0069C4  6E73               	movwf	(?_vfpfcnvrt+1)^0,c
  4191  0069C6  0E00               	movlw	0
  4192  0069C8  6E72               	movwf	?_vfpfcnvrt^0,c
  4193  0069CA  EF02  F035         	goto	l1043
  4194  0069CE                     l4335:
  4195                           
  4196                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((int)(
      +                          *fmt)[0], fp);
  4197  0069CE  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4198  0069D2  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4199  0069D6  CFDE FFF6          	movff	postinc2,tblptrl
  4200  0069DA  CFDD FFF7          	movff	postdec2,tblptrh
  4201  0069DE                     	if	0	;tblptru may be non-zero
  4202  0069DE                     	endif
  4203  0069DE                     	if	0	;tblptru may be non-zero
  4204  0069DE                     	endif
  4205  0069DE  0008               	tblrd		*
  4206  0069E0  50F5               	movf	tablat,w,c
  4207  0069E2  6E01               	movwf	fputc@c^0,c
  4208  0069E4  6A02               	clrf	(fputc@c+1)^0,c
  4209  0069E6  C072  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4210  0069EA  C073  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4211  0069EE  EC92  F026         	call	_fputc	;wreg free
  4212  0069F2                     
  4213                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  4214  0069F2  C074  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4215  0069F6  C075  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4216  0069FA  2ADE               	incf	postinc2,f,c
  4217  0069FC  0E00               	movlw	0
  4218  0069FE  22DD               	addwfc	postdec2,f,c
  4219  006A00  EFD4  F034         	goto	l4325
  4220  006A04                     l1043:
  4221  006A04  0012               	return		;funcret
  4222  006A06                     __end_of_vfpfcnvrt:
  4223                           	callstack 0
  4224                           
  4225 ;; *************** function _strncmp *****************
  4226 ;; Defined at:
  4227 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  4230 ;;		 -> vfpfcnvrt@ct(3), 
  4231 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  4232 ;;		 -> STR_42(3), 
  4233 ;;  n               2    4[COMRAM] unsigned int 
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;  r               2    9[COMRAM] PTR const unsigned char 
  4236 ;;		 -> STR_42(3), 
  4237 ;;  l               2    7[COMRAM] PTR const unsigned char 
  4238 ;;		 -> vfpfcnvrt@ct(3), 
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  2    0[COMRAM] int 
  4241 ;; Registers used:
  4242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4248 ;;      Params:         6       0       0       0       0       0       0
  4249 ;;      Locals:         4       0       0       0       0       0       0
  4250 ;;      Temps:          1       0       0       0       0       0       0
  4251 ;;      Totals:        11       0       0       0       0       0       0
  4252 ;;Total ram usage:       11 bytes
  4253 ;; Hardware stack levels used:    1
  4254 ;; This function calls:
  4255 ;;		Nothing
  4256 ;; This function is called by:
  4257 ;;		_vfpfcnvrt
  4258 ;; This function uses a non-reentrant model
  4259 ;;
  4260                           
  4261                           	psect	text9
  4262  004DEE                     __ptext9:
  4263                           	callstack 0
  4264  004DEE                     _strncmp:
  4265                           	callstack 26
  4266  004DEE  C001  F008         	movff	strncmp@_l,strncmp@l
  4267  004DF2  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  4268  004DF6  C003  F00A         	movff	strncmp@_r,strncmp@r
  4269  004DFA  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  4270  004DFE  0605               	decf	strncmp@n^0,f,c
  4271  004E00  A0D8               	btfss	status,0,c
  4272  004E02  0606               	decf	(strncmp@n+1)^0,f,c
  4273  004E04  2805               	incf	strncmp@n^0,w,c
  4274  004E06  E106               	bnz	u4891
  4275  004E08  2806               	incf	(strncmp@n+1)^0,w,c
  4276  004E0A  A4D8               	btfss	status,2,c
  4277  004E0C  EF0A  F027         	goto	u4891
  4278  004E10  EF0C  F027         	goto	u4890
  4279  004E14                     u4891:
  4280  004E14  EF19  F027         	goto	l4213
  4281  004E18                     u4890:
  4282  004E18  0E00               	movlw	0
  4283  004E1A  6E02               	movwf	(?_strncmp+1)^0,c
  4284  004E1C  0E00               	movlw	0
  4285  004E1E  6E01               	movwf	?_strncmp^0,c
  4286  004E20  EF61  F027         	goto	l1171
  4287  004E24                     l4211:
  4288  004E24  4A08               	infsnz	strncmp@l^0,f,c
  4289  004E26  2A09               	incf	(strncmp@l+1)^0,f,c
  4290  004E28  4A0A               	infsnz	strncmp@r^0,f,c
  4291  004E2A  2A0B               	incf	(strncmp@r+1)^0,f,c
  4292  004E2C  0605               	decf	strncmp@n^0,f,c
  4293  004E2E  A0D8               	btfss	status,0,c
  4294  004E30  0606               	decf	(strncmp@n+1)^0,f,c
  4295  004E32                     l4213:
  4296  004E32  C008  FFD9         	movff	strncmp@l,fsr2l
  4297  004E36  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4298  004E3A  50DF               	movf	indf2,w,c
  4299  004E3C  B4D8               	btfsc	status,2,c
  4300  004E3E  EF23  F027         	goto	u4901
  4301  004E42  EF25  F027         	goto	u4900
  4302  004E46                     u4901:
  4303  004E46  EF50  F027         	goto	l4221
  4304  004E4A                     u4900:
  4305  004E4A  C00A  FFF6         	movff	strncmp@r,tblptrl
  4306  004E4E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4307  004E52                     	if	0	;tblptru may be non-zero
  4308  004E52                     	endif
  4309  004E52                     	if	0	;tblptru may be non-zero
  4310  004E52                     	endif
  4311  004E52  0008               	tblrd		*
  4312  004E54  50F5               	movf	tablat,w,c
  4313  004E56  0900               	iorlw	0
  4314  004E58  B4D8               	btfsc	status,2,c
  4315  004E5A  EF31  F027         	goto	u4911
  4316  004E5E  EF33  F027         	goto	u4910
  4317  004E62                     u4911:
  4318  004E62  EF50  F027         	goto	l4221
  4319  004E66                     u4910:
  4320  004E66  5005               	movf	strncmp@n^0,w,c
  4321  004E68  1006               	iorwf	(strncmp@n+1)^0,w,c
  4322  004E6A  B4D8               	btfsc	status,2,c
  4323  004E6C  EF3A  F027         	goto	u4921
  4324  004E70  EF3C  F027         	goto	u4920
  4325  004E74                     u4921:
  4326  004E74  EF50  F027         	goto	l4221
  4327  004E78                     u4920:
  4328  004E78  C008  FFD9         	movff	strncmp@l,fsr2l
  4329  004E7C  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4330  004E80  50DF               	movf	indf2,w,c
  4331  004E82  6E07               	movwf	??_strncmp^0,c
  4332  004E84  C00A  FFF6         	movff	strncmp@r,tblptrl
  4333  004E88  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4334  004E8C                     	if	0	;tblptru may be non-zero
  4335  004E8C                     	endif
  4336  004E8C                     	if	0	;tblptru may be non-zero
  4337  004E8C                     	endif
  4338  004E8C  0008               	tblrd		*
  4339  004E8E  50F5               	movf	tablat,w,c
  4340  004E90  1807               	xorwf	??_strncmp^0,w,c
  4341  004E92  B4D8               	btfsc	status,2,c
  4342  004E94  EF4E  F027         	goto	u4931
  4343  004E98  EF50  F027         	goto	u4930
  4344  004E9C                     u4931:
  4345  004E9C  EF12  F027         	goto	l4211
  4346  004EA0                     u4930:
  4347  004EA0                     l4221:
  4348  004EA0  C008  FFD9         	movff	strncmp@l,fsr2l
  4349  004EA4  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4350  004EA8  50DF               	movf	indf2,w,c
  4351  004EAA  6E07               	movwf	??_strncmp^0,c
  4352  004EAC  C00A  FFF6         	movff	strncmp@r,tblptrl
  4353  004EB0  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4354  004EB4                     	if	0	;tblptru may be non-zero
  4355  004EB4                     	endif
  4356  004EB4                     	if	0	;tblptru may be non-zero
  4357  004EB4                     	endif
  4358  004EB4  0008               	tblrd		*
  4359  004EB6  50F5               	movf	tablat,w,c
  4360  004EB8  5C07               	subwf	??_strncmp^0,w,c
  4361  004EBA  6E01               	movwf	?_strncmp^0,c
  4362  004EBC  6A02               	clrf	(?_strncmp+1)^0,c
  4363  004EBE  A0D8               	btfss	status,0,c
  4364  004EC0  0602               	decf	(?_strncmp+1)^0,f,c
  4365  004EC2                     l1171:
  4366  004EC2  0012               	return		;funcret
  4367  004EC4                     __end_of_strncmp:
  4368                           	callstack 0
  4369                           
  4370 ;; *************** function _efgtoa *****************
  4371 ;; Defined at:
  4372 ;;		line 319 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4373 ;; Parameters:    Size  Location     Type
  4374 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  4375 ;;		 -> sprintf@f(6), 
  4376 ;;  f               4   47[COMRAM] PTR struct _IO_FILE
  4377 ;;  c               1   51[COMRAM] unsigned char 
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;  u               4  109[COMRAM] unsigned char 
  4380 ;;  g               4  101[COMRAM] unsigned char 
  4381 ;;  l               4   95[COMRAM] unsigned char 
  4382 ;;  h               4   91[COMRAM] unsigned char 
  4383 ;;  ou              4   57[COMRAM] unsigned char 
  4384 ;;  n               2  107[COMRAM] int 
  4385 ;;  e               2  105[COMRAM] int 
  4386 ;;  i               2   99[COMRAM] int 
  4387 ;;  w               2   88[COMRAM] int 
  4388 ;;  p               2   85[COMRAM] int 
  4389 ;;  sign            2   83[COMRAM] int 
  4390 ;;  d               2   81[COMRAM] int 
  4391 ;;  ne              2   79[COMRAM] int 
  4392 ;;  m               2   77[COMRAM] int 
  4393 ;;  pp              2   75[COMRAM] int 
  4394 ;;  t               2   73[COMRAM] int 
  4395 ;;  mode            1   90[COMRAM] unsigned char 
  4396 ;;  nmode           1   87[COMRAM] unsigned char 
  4397 ;; Return value:  Size  Location     Type
  4398 ;;                  2   45[COMRAM] int 
  4399 ;; Registers used:
  4400 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4401 ;; Tracked objects:
  4402 ;;		On entry : 0/0
  4403 ;;		On exit  : 0/0
  4404 ;;		Unchanged: 0/0
  4405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4406 ;;      Params:         7       0       0       0       0       0       0
  4407 ;;      Locals:        56       0       0       0       0       0       0
  4408 ;;      Temps:          5       0       0       0       0       0       0
  4409 ;;      Totals:        68       0       0       0       0       0       0
  4410 ;;Total ram usage:       68 bytes
  4411 ;; Hardware stack levels used:    1
  4412 ;; Hardware stack levels required when called:    4
  4413 ;; This function calls:
  4414 ;;		___awdiv
  4415 ;;		___awmod
  4416 ;;		___fladd
  4417 ;;		___fldiv
  4418 ;;		___fleq
  4419 ;;		___flge
  4420 ;;		___flmul
  4421 ;;		___flneg
  4422 ;;		___flsub
  4423 ;;		___fltol
  4424 ;;		___fpclassifyf
  4425 ;;		_floorf
  4426 ;;		_isupper
  4427 ;;		_pad
  4428 ;;		_strcpy
  4429 ;;		_tolower
  4430 ;; This function is called by:
  4431 ;;		_vfpfcnvrt
  4432 ;; This function uses a non-reentrant model
  4433 ;;
  4434                           
  4435                           	psect	text10
  4436  007360                     __ptext10:
  4437                           	callstack 0
  4438  007360                     _efgtoa:
  4439                           	callstack 22
  4440  007360                     
  4441                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int efgtoa
      +                          (FILE *fp, long double f, char c);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common
      +                          \doprnt.c: 320: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 321: 
      +                              char mode, nmode;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 3
      +                          22:     int d, e, i, m, n, ne, p, pp, sign, t, w;;D:\Programs\Microship\xc8\v2.20\pic\so
      +                          urces\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;;D:\Programs\Microship\xc
      +                          8\v2.20\pic\sources\c99\common\doprnt.c: 326:     sign = 0;
  4442  007360  0E00               	movlw	0
  4443  007362  6E55               	movwf	(efgtoa@sign+1)^0,c
  4444  007364  0E00               	movlw	0
  4445  007366  6E54               	movwf	efgtoa@sign^0,c
  4446  007368                     
  4447                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  4448  007368  C030  F066         	movff	efgtoa@f,efgtoa@g
  4449  00736C  C031  F067         	movff	efgtoa@f+1,efgtoa@g+1
  4450  007370  C032  F068         	movff	efgtoa@f+2,efgtoa@g+2
  4451  007374  C033  F069         	movff	efgtoa@f+3,efgtoa@g+3
  4452  007378                     
  4453                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 0.0) 
      +                          {
  4454  007378  BE69               	btfsc	(efgtoa@g+3)^0,7,c
  4455  00737A  EFC3  F039         	goto	u4300
  4456  00737E  EFC1  F039         	goto	u4301
  4457  007382                     u4301:
  4458  007382  EFD9  F039         	goto	l3875
  4459  007386                     u4300:
  4460  007386                     
  4461                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign = 1;
  4462  007386  0E00               	movlw	0
  4463  007388  6E55               	movwf	(efgtoa@sign+1)^0,c
  4464  00738A  0E01               	movlw	1
  4465  00738C  6E54               	movwf	efgtoa@sign^0,c
  4466  00738E                     
  4467                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = -g;
  4468  00738E  C066  F001         	movff	efgtoa@g,___flneg@f1
  4469  007392  C067  F002         	movff	efgtoa@g+1,___flneg@f1+1
  4470  007396  C068  F003         	movff	efgtoa@g+2,___flneg@f1+2
  4471  00739A  C069  F004         	movff	efgtoa@g+3,___flneg@f1+3
  4472  00739E  EC85  F022         	call	___flneg	;wreg free
  4473  0073A2  C001  F066         	movff	?___flneg,efgtoa@g
  4474  0073A6  C002  F067         	movff	?___flneg+1,efgtoa@g+1
  4475  0073AA  C003  F068         	movff	?___flneg+2,efgtoa@g+2
  4476  0073AE  C004  F069         	movff	?___flneg+3,efgtoa@g+3
  4477  0073B2                     l3875:
  4478                           
  4479                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  4480  0073B2  0E00               	movlw	0
  4481  0073B4  6E6D               	movwf	(efgtoa@n+1)^0,c
  4482  0073B6  0E00               	movlw	0
  4483  0073B8  6E6C               	movwf	efgtoa@n^0,c
  4484  0073BA                     
  4485                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = width;
  4486  0073BA  C0EA  F059         	movff	_width,efgtoa@w
  4487  0073BE  C0EB  F05A         	movff	_width+1,efgtoa@w+1
  4488  0073C2                     
  4489                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign || (
      +                          flags & (1 << 2))) {
  4490  0073C2  5054               	movf	efgtoa@sign^0,w,c
  4491  0073C4  1055               	iorwf	(efgtoa@sign+1)^0,w,c
  4492  0073C6  A4D8               	btfss	status,2,c
  4493  0073C8  EFE8  F039         	goto	u4311
  4494  0073CC  EFEA  F039         	goto	u4310
  4495  0073D0                     u4311:
  4496  0073D0  EFF2  F039         	goto	l3883
  4497  0073D4                     u4310:
  4498  0073D4  0100               	movlb	0	; () banked
  4499  0073D6  A5EE               	btfss	_flags& (0+255),2,b
  4500  0073D8  EFF0  F039         	goto	u4321
  4501  0073DC  EFF2  F039         	goto	u4320
  4502  0073E0                     u4321:
  4503  0073E0  EF0C  F03A         	goto	l3895
  4504  0073E4                     u4320:
  4505  0073E4                     l3883:
  4506                           
  4507                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf[n] =
      +                           sign ? '-' : '+';
  4508  0073E4  5054               	movf	efgtoa@sign^0,w,c
  4509  0073E6  1055               	iorwf	(efgtoa@sign+1)^0,w,c
  4510  0073E8  A4D8               	btfss	status,2,c
  4511  0073EA  EFF9  F039         	goto	u4331
  4512  0073EE  EFFB  F039         	goto	u4330
  4513  0073F2                     u4331:
  4514  0073F2  EF01  F03A         	goto	l3887
  4515  0073F6                     u4330:
  4516  0073F6  0E00               	movlw	0
  4517  0073F8  6E3F               	movwf	(_efgtoa$762+1)^0,c
  4518  0073FA  0E2B               	movlw	43
  4519  0073FC  6E3E               	movwf	_efgtoa$762^0,c
  4520  0073FE  EF05  F03A         	goto	l3889
  4521  007402                     l3887:
  4522  007402  0E00               	movlw	0
  4523  007404  6E3F               	movwf	(_efgtoa$762+1)^0,c
  4524  007406  0E2D               	movlw	45
  4525  007408  6E3E               	movwf	_efgtoa$762^0,c
  4526  00740A                     l3889:
  4527  00740A  C03E  F100         	movff	_efgtoa$762,_dbuf
  4528  00740E                     
  4529                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  4530  00740E  4A6C               	infsnz	efgtoa@n^0,f,c
  4531  007410  2A6D               	incf	(efgtoa@n+1)^0,f,c
  4532  007412                     
  4533                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  4534  007412  0659               	decf	efgtoa@w^0,f,c
  4535  007414  A0D8               	btfss	status,0,c
  4536  007416  065A               	decf	(efgtoa@w+1)^0,f,c
  4537  007418                     l3895:
  4538                           
  4539                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if ((0 ? 
      +                          isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4540  007418  C066  F001         	movff	efgtoa@g,___fpclassifyf@x
  4541  00741C  C067  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4542  007420  C068  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4543  007424  C069  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4544  007428  ECD5  F027         	call	___fpclassifyf	;wreg free
  4545  00742C  0401               	decf	?___fpclassifyf^0,w,c
  4546  00742E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4547  007430  A4D8               	btfss	status,2,c
  4548  007432  EF1D  F03A         	goto	u4341
  4549  007436  EF1F  F03A         	goto	u4340
  4550  00743A                     u4341:
  4551  00743A  EF74  F03A         	goto	l3913
  4552  00743E                     u4340:
  4553  00743E  0EBF               	movlw	191
  4554  007440  6E35               	movwf	??_efgtoa^0,c
  4555  007442  0EFF               	movlw	255
  4556  007444  6E36               	movwf	(??_efgtoa+1)^0,c
  4557  007446  5034               	movf	efgtoa@c^0,w,c
  4558  007448  6E37               	movwf	(??_efgtoa+2)^0,c
  4559  00744A  6A38               	clrf	(??_efgtoa+3)^0,c
  4560  00744C  5035               	movf	??_efgtoa^0,w,c
  4561  00744E  2637               	addwf	(??_efgtoa+2)^0,f,c
  4562  007450  5036               	movf	(??_efgtoa+1)^0,w,c
  4563  007452  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4564  007454  5038               	movf	(??_efgtoa+3)^0,w,c
  4565  007456  E10A               	bnz	u4350
  4566  007458  0E1A               	movlw	26
  4567  00745A  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4568  00745C  A0D8               	btfss	status,0,c
  4569  00745E  EF33  F03A         	goto	u4351
  4570  007462  EF36  F03A         	goto	u4350
  4571  007466                     u4351:
  4572  007466  0E01               	movlw	1
  4573  007468  EF37  F03A         	goto	u4360
  4574  00746C                     u4350:
  4575  00746C  0E00               	movlw	0
  4576  00746E                     u4360:
  4577  00746E  6E40               	movwf	_efgtoa$763^0,c
  4578  007470  6A41               	clrf	(_efgtoa$763+1)^0,c
  4579  007472  5040               	movf	_efgtoa$763^0,w,c
  4580  007474  1041               	iorwf	(_efgtoa$763+1)^0,w,c
  4581  007476  B4D8               	btfsc	status,2,c
  4582  007478  EF40  F03A         	goto	u4371
  4583  00747C  EF42  F03A         	goto	u4370
  4584  007480                     u4371:
  4585  007480  EF50  F03A         	goto	l3905
  4586  007484                     u4370:
  4587  007484                     
  4588                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             strcp
      +                          y(&dbuf[n], "INF");
  4589  007484  0E00               	movlw	low _dbuf
  4590  007486  246C               	addwf	efgtoa@n^0,w,c
  4591  007488  6E01               	movwf	strcpy@dest^0,c
  4592  00748A  0E01               	movlw	high _dbuf
  4593  00748C  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4594  00748E  6E02               	movwf	(strcpy@dest+1)^0,c
  4595  007490  0EE8               	movlw	low STR_32
  4596  007492  6E03               	movwf	strcpy@src^0,c
  4597  007494  0E7F               	movlw	high STR_32
  4598  007496  6E04               	movwf	(strcpy@src+1)^0,c
  4599  007498  EC54  F023         	call	_strcpy	;wreg free
  4600                           
  4601                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } else {
  4602  00749C  EF5C  F03A         	goto	l3907
  4603  0074A0                     l3905:
  4604                           
  4605                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             strcp
      +                          y(&dbuf[n], "inf");
  4606  0074A0  0E00               	movlw	low _dbuf
  4607  0074A2  246C               	addwf	efgtoa@n^0,w,c
  4608  0074A4  6E01               	movwf	strcpy@dest^0,c
  4609  0074A6  0E01               	movlw	high _dbuf
  4610  0074A8  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4611  0074AA  6E02               	movwf	(strcpy@dest+1)^0,c
  4612  0074AC  0EF0               	movlw	low STR_33
  4613  0074AE  6E03               	movwf	strcpy@src^0,c
  4614  0074B0  0E7F               	movlw	high STR_33
  4615  0074B2  6E04               	movwf	(strcpy@src+1)^0,c
  4616  0074B4  EC54  F023         	call	_strcpy	;wreg free
  4617  0074B8                     l3907:
  4618                           
  4619                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -= ((si
      +                          zeof("inf")/sizeof("inf"[0]))-1);
  4620  0074B8  0EFD               	movlw	253
  4621  0074BA  2659               	addwf	efgtoa@w^0,f,c
  4622  0074BC  0EFF               	movlw	255
  4623  0074BE  225A               	addwfc	(efgtoa@w+1)^0,f,c
  4624  0074C0                     l3909:
  4625                           
  4626                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         return pa
      +                          d(fp, &dbuf[0], w);
  4627  0074C0  C02E  F011         	movff	efgtoa@fp,pad@fp
  4628  0074C4  C02F  F012         	movff	efgtoa@fp+1,pad@fp+1
  4629  0074C8  0E00               	movlw	low _dbuf
  4630  0074CA  6E13               	movwf	pad@buf^0,c
  4631  0074CC  0E01               	movlw	high _dbuf
  4632  0074CE  6E14               	movwf	(pad@buf+1)^0,c
  4633  0074D0  C059  F015         	movff	efgtoa@w,pad@p
  4634  0074D4  C05A  F016         	movff	efgtoa@w+1,pad@p+1
  4635  0074D8  EC2F  F026         	call	_pad	;wreg free
  4636  0074DC  C011  F02E         	movff	?_pad,?_efgtoa
  4637  0074E0  C012  F02F         	movff	?_pad+1,?_efgtoa+1
  4638  0074E4  EF7C  F03F         	goto	l953
  4639  0074E8                     l3913:
  4640                           
  4641                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if ((0 ? 
      +                          isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4642  0074E8  C066  F001         	movff	efgtoa@g,___fpclassifyf@x
  4643  0074EC  C067  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4644  0074F0  C068  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4645  0074F4  C069  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4646  0074F8  ECD5  F027         	call	___fpclassifyf	;wreg free
  4647  0074FC  5001               	movf	?___fpclassifyf^0,w,c
  4648  0074FE  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4649  007500  A4D8               	btfss	status,2,c
  4650  007502  EF85  F03A         	goto	u4381
  4651  007506  EF87  F03A         	goto	u4380
  4652  00750A                     u4381:
  4653  00750A  EFC6  F03A         	goto	l3931
  4654  00750E                     u4380:
  4655  00750E  0EBF               	movlw	191
  4656  007510  6E35               	movwf	??_efgtoa^0,c
  4657  007512  0EFF               	movlw	255
  4658  007514  6E36               	movwf	(??_efgtoa+1)^0,c
  4659  007516  5034               	movf	efgtoa@c^0,w,c
  4660  007518  6E37               	movwf	(??_efgtoa+2)^0,c
  4661  00751A  6A38               	clrf	(??_efgtoa+3)^0,c
  4662  00751C  5035               	movf	??_efgtoa^0,w,c
  4663  00751E  2637               	addwf	(??_efgtoa+2)^0,f,c
  4664  007520  5036               	movf	(??_efgtoa+1)^0,w,c
  4665  007522  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4666  007524  5038               	movf	(??_efgtoa+3)^0,w,c
  4667  007526  E10A               	bnz	u4390
  4668  007528  0E1A               	movlw	26
  4669  00752A  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4670  00752C  A0D8               	btfss	status,0,c
  4671  00752E  EF9B  F03A         	goto	u4391
  4672  007532  EF9E  F03A         	goto	u4390
  4673  007536                     u4391:
  4674  007536  0E01               	movlw	1
  4675  007538  EF9F  F03A         	goto	u4400
  4676  00753C                     u4390:
  4677  00753C  0E00               	movlw	0
  4678  00753E                     u4400:
  4679  00753E  6E42               	movwf	_efgtoa$768^0,c
  4680  007540  6A43               	clrf	(_efgtoa$768+1)^0,c
  4681  007542  5042               	movf	_efgtoa$768^0,w,c
  4682  007544  1043               	iorwf	(_efgtoa$768+1)^0,w,c
  4683  007546  B4D8               	btfsc	status,2,c
  4684  007548  EFA8  F03A         	goto	u4411
  4685  00754C  EFAA  F03A         	goto	u4410
  4686  007550                     u4411:
  4687  007550  EFB8  F03A         	goto	l3923
  4688  007554                     u4410:
  4689  007554                     
  4690                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             strcp
      +                          y(&dbuf[n], "NAN");
  4691  007554  0E00               	movlw	low _dbuf
  4692  007556  246C               	addwf	efgtoa@n^0,w,c
  4693  007558  6E01               	movwf	strcpy@dest^0,c
  4694  00755A  0E01               	movlw	high _dbuf
  4695  00755C  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4696  00755E  6E02               	movwf	(strcpy@dest+1)^0,c
  4697  007560  0EEC               	movlw	low STR_36
  4698  007562  6E03               	movwf	strcpy@src^0,c
  4699  007564  0E7F               	movlw	high STR_36
  4700  007566  6E04               	movwf	(strcpy@src+1)^0,c
  4701  007568  EC54  F023         	call	_strcpy	;wreg free
  4702                           
  4703                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } else {
  4704  00756C  EF5C  F03A         	goto	l3907
  4705  007570                     l3923:
  4706                           
  4707                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             strcp
      +                          y(&dbuf[n], "nan");
  4708  007570  0E00               	movlw	low _dbuf
  4709  007572  246C               	addwf	efgtoa@n^0,w,c
  4710  007574  6E01               	movwf	strcpy@dest^0,c
  4711  007576  0E01               	movlw	high _dbuf
  4712  007578  206D               	addwfc	(efgtoa@n+1)^0,w,c
  4713  00757A  6E02               	movwf	(strcpy@dest+1)^0,c
  4714  00757C  0EF4               	movlw	low STR_37
  4715  00757E  6E03               	movwf	strcpy@src^0,c
  4716  007580  0E7F               	movlw	high STR_37
  4717  007582  6E04               	movwf	(strcpy@src+1)^0,c
  4718  007584  EC54  F023         	call	_strcpy	;wreg free
  4719  007588  EF5C  F03A         	goto	l3907
  4720  00758C                     l3931:
  4721                           
  4722                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  4723  00758C  0E00               	movlw	0
  4724  00758E  6E6E               	movwf	efgtoa@u^0,c
  4725  007590  0E00               	movlw	0
  4726  007592  6E6F               	movwf	(efgtoa@u+1)^0,c
  4727  007594  0E80               	movlw	128
  4728  007596  6E70               	movwf	(efgtoa@u+2)^0,c
  4729  007598  0E3F               	movlw	63
  4730  00759A  6E71               	movwf	(efgtoa@u+3)^0,c
  4731                           
  4732                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  4733  00759C  0E00               	movlw	0
  4734  00759E  6E6B               	movwf	(efgtoa@e+1)^0,c
  4735  0075A0  0E00               	movlw	0
  4736  0075A2  6E6A               	movwf	efgtoa@e^0,c
  4737  0075A4                     
  4738                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g == 0.
      +                          0)) {
  4739  0075A4  C066  F001         	movff	efgtoa@g,___fleq@ff1
  4740  0075A8  C067  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  4741  0075AC  C068  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  4742  0075B0  C069  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  4743  0075B4  0E00               	movlw	0
  4744  0075B6  6E05               	movwf	___fleq@ff2^0,c
  4745  0075B8  0E00               	movlw	0
  4746  0075BA  6E06               	movwf	(___fleq@ff2+1)^0,c
  4747  0075BC  0E00               	movlw	0
  4748  0075BE  6E07               	movwf	(___fleq@ff2+2)^0,c
  4749  0075C0  0E00               	movlw	0
  4750  0075C2  6E08               	movwf	(___fleq@ff2+3)^0,c
  4751  0075C4  EC20  F025         	call	___fleq	;wreg free
  4752  0075C8  B0D8               	btfsc	status,0,c
  4753  0075CA  EFE9  F03A         	goto	u4421
  4754  0075CE  EFEB  F03A         	goto	u4420
  4755  0075D2                     u4421:
  4756  0075D2  EF6C  F03B         	goto	l3949
  4757  0075D6                     u4420:
  4758  0075D6  EF09  F03B         	goto	l3941
  4759  0075DA                     l3937:
  4760                           
  4761                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             u = u
      +                          *10.0;
  4762  0075DA  C06E  F001         	movff	efgtoa@u,___flmul@b
  4763  0075DE  C06F  F002         	movff	efgtoa@u+1,___flmul@b+1
  4764  0075E2  C070  F003         	movff	efgtoa@u+2,___flmul@b+2
  4765  0075E6  C071  F004         	movff	efgtoa@u+3,___flmul@b+3
  4766  0075EA  0E00               	movlw	0
  4767  0075EC  6E05               	movwf	___flmul@a^0,c
  4768  0075EE  0E00               	movlw	0
  4769  0075F0  6E06               	movwf	(___flmul@a+1)^0,c
  4770  0075F2  0E20               	movlw	32
  4771  0075F4  6E07               	movwf	(___flmul@a+2)^0,c
  4772  0075F6  0E41               	movlw	65
  4773  0075F8  6E08               	movwf	(___flmul@a+3)^0,c
  4774  0075FA  ECB9  F030         	call	___flmul	;wreg free
  4775  0075FE  C001  F06E         	movff	?___flmul,efgtoa@u
  4776  007602  C002  F06F         	movff	?___flmul+1,efgtoa@u+1
  4777  007606  C003  F070         	movff	?___flmul+2,efgtoa@u+2
  4778  00760A  C004  F071         	movff	?___flmul+3,efgtoa@u+3
  4779  00760E                     
  4780                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             ++e;
  4781  00760E  4A6A               	infsnz	efgtoa@e^0,f,c
  4782  007610  2A6B               	incf	(efgtoa@e+1)^0,f,c
  4783  007612                     l3941:
  4784                           
  4785                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         while (!(
      +                          g < (u*10.0))) {
  4786  007612  C066  F01F         	movff	efgtoa@g,___flge@ff1
  4787  007616  C067  F020         	movff	efgtoa@g+1,___flge@ff1+1
  4788  00761A  C068  F021         	movff	efgtoa@g+2,___flge@ff1+2
  4789  00761E  C069  F022         	movff	efgtoa@g+3,___flge@ff1+3
  4790  007622  0E00               	movlw	0
  4791  007624  6E05               	movwf	___flmul@a^0,c
  4792  007626  0E00               	movlw	0
  4793  007628  6E06               	movwf	(___flmul@a+1)^0,c
  4794  00762A  0E20               	movlw	32
  4795  00762C  6E07               	movwf	(___flmul@a+2)^0,c
  4796  00762E  0E41               	movlw	65
  4797  007630  6E08               	movwf	(___flmul@a+3)^0,c
  4798  007632  C06E  F001         	movff	efgtoa@u,___flmul@b
  4799  007636  C06F  F002         	movff	efgtoa@u+1,___flmul@b+1
  4800  00763A  C070  F003         	movff	efgtoa@u+2,___flmul@b+2
  4801  00763E  C071  F004         	movff	efgtoa@u+3,___flmul@b+3
  4802  007642  ECB9  F030         	call	___flmul	;wreg free
  4803  007646  C001  F023         	movff	?___flmul,___flge@ff2
  4804  00764A  C002  F024         	movff	?___flmul+1,___flge@ff2+1
  4805  00764E  C003  F025         	movff	?___flmul+2,___flge@ff2+2
  4806  007652  C004  F026         	movff	?___flmul+3,___flge@ff2+3
  4807  007656  EC54  F028         	call	___flge	;wreg free
  4808  00765A  B0D8               	btfsc	status,0,c
  4809  00765C  EF32  F03B         	goto	u4431
  4810  007660  EF34  F03B         	goto	u4430
  4811  007664                     u4431:
  4812  007664  EFED  F03A         	goto	l3937
  4813  007668                     u4430:
  4814  007668  EF53  F03B         	goto	l3947
  4815  00766C                     l3943:
  4816                           
  4817                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             u = u
      +                          /10.0;
  4818  00766C  C06E  F001         	movff	efgtoa@u,___fldiv@b
  4819  007670  C06F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4820  007674  C070  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4821  007678  C071  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4822  00767C  0E00               	movlw	0
  4823  00767E  6E05               	movwf	___fldiv@a^0,c
  4824  007680  0E00               	movlw	0
  4825  007682  6E06               	movwf	(___fldiv@a+1)^0,c
  4826  007684  0E20               	movlw	32
  4827  007686  6E07               	movwf	(___fldiv@a+2)^0,c
  4828  007688  0E41               	movlw	65
  4829  00768A  6E08               	movwf	(___fldiv@a+3)^0,c
  4830  00768C  ECEC  F02E         	call	___fldiv	;wreg free
  4831  007690  C001  F06E         	movff	?___fldiv,efgtoa@u
  4832  007694  C002  F06F         	movff	?___fldiv+1,efgtoa@u+1
  4833  007698  C003  F070         	movff	?___fldiv+2,efgtoa@u+2
  4834  00769C  C004  F071         	movff	?___fldiv+3,efgtoa@u+3
  4835  0076A0                     
  4836                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             --e;
  4837  0076A0  066A               	decf	efgtoa@e^0,f,c
  4838  0076A2  A0D8               	btfss	status,0,c
  4839  0076A4  066B               	decf	(efgtoa@e+1)^0,f,c
  4840  0076A6                     l3947:
  4841                           
  4842                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         while (g 
      +                          < u) {
  4843  0076A6  C066  F01F         	movff	efgtoa@g,___flge@ff1
  4844  0076AA  C067  F020         	movff	efgtoa@g+1,___flge@ff1+1
  4845  0076AE  C068  F021         	movff	efgtoa@g+2,___flge@ff1+2
  4846  0076B2  C069  F022         	movff	efgtoa@g+3,___flge@ff1+3
  4847  0076B6  C06E  F023         	movff	efgtoa@u,___flge@ff2
  4848  0076BA  C06F  F024         	movff	efgtoa@u+1,___flge@ff2+1
  4849  0076BE  C070  F025         	movff	efgtoa@u+2,___flge@ff2+2
  4850  0076C2  C071  F026         	movff	efgtoa@u+3,___flge@ff2+3
  4851  0076C6  EC54  F028         	call	___flge	;wreg free
  4852  0076CA  A0D8               	btfss	status,0,c
  4853  0076CC  EF6A  F03B         	goto	u4441
  4854  0076D0  EF6C  F03B         	goto	u4440
  4855  0076D4                     u4441:
  4856  0076D4  EF36  F03B         	goto	l3943
  4857  0076D8                     u4440:
  4858  0076D8                     l3949:
  4859                           
  4860                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = tolowe
      +                          r((int)c);
  4861  0076D8  C034  F007         	movff	efgtoa@c,tolower@c
  4862  0076DC  6A08               	clrf	(tolower@c+1)^0,c
  4863  0076DE  ECB0  F023         	call	_tolower	;wreg free
  4864  0076E2  5007               	movf	?_tolower^0,w,c
  4865  0076E4  6E5B               	movwf	efgtoa@mode^0,c
  4866  0076E6                     
  4867                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = mode;
  4868  0076E6  C05B  F058         	movff	efgtoa@mode,efgtoa@nmode
  4869  0076EA                     
  4870                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode == '
      +                          g') {
  4871  0076EA  0E67               	movlw	103
  4872  0076EC  185B               	xorwf	efgtoa@mode^0,w,c
  4873  0076EE  A4D8               	btfss	status,2,c
  4874  0076F0  EF7C  F03B         	goto	u4451
  4875  0076F4  EF7E  F03B         	goto	u4450
  4876  0076F8                     u4451:
  4877  0076F8  EFA5  F03B         	goto	l3963
  4878  0076FC                     u4450:
  4879  0076FC                     
  4880                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec == 0) 
      +                          {
  4881  0076FC  0100               	movlb	0	; () banked
  4882  0076FE  51EC               	movf	_prec& (0+255),w,b
  4883  007700  11ED               	iorwf	(_prec+1)& (0+255),w,b
  4884  007702  A4D8               	btfss	status,2,c
  4885  007704  EF86  F03B         	goto	u4461
  4886  007708  EF88  F03B         	goto	u4460
  4887  00770C                     u4461:
  4888  00770C  EF8C  F03B         	goto	l3959
  4889  007710                     u4460:
  4890  007710                     
  4891                           ; BSR set to: 0
  4892                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  4893  007710  0E00               	movlw	0
  4894  007712  6FED               	movwf	(_prec+1)& (0+255),b
  4895  007714  0E01               	movlw	1
  4896  007716  6FEC               	movwf	_prec& (0+255),b
  4897  007718                     l3959:
  4898                           
  4899                           ; BSR set to: 0
  4900                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = (0 < 
      +                          prec) ? prec : 6;
  4901  007718  BFED               	btfsc	(_prec+1)& (0+255),7,b
  4902  00771A  EF99  F03B         	goto	u4470
  4903  00771E  51ED               	movf	(_prec+1)& (0+255),w,b
  4904  007720  E106               	bnz	u4471
  4905  007722  05EC               	decf	_prec& (0+255),w,b
  4906  007724  B0D8               	btfsc	status,0,c
  4907  007726  EF97  F03B         	goto	u4471
  4908  00772A  EF99  F03B         	goto	u4470
  4909  00772E                     u4471:
  4910  00772E  EF9F  F03B         	goto	l971
  4911  007732                     u4470:
  4912  007732                     l3961:
  4913                           
  4914                           ; BSR set to: 0
  4915  007732  0E00               	movlw	0
  4916  007734  6E57               	movwf	(efgtoa@p+1)^0,c
  4917  007736  0E06               	movlw	6
  4918  007738  6E56               	movwf	efgtoa@p^0,c
  4919  00773A  EFAF  F03B         	goto	l3969
  4920  00773E                     l971:
  4921                           
  4922                           ; BSR set to: 0
  4923  00773E  C0EC  F056         	movff	_prec,efgtoa@p
  4924  007742  C0ED  F057         	movff	_prec+1,efgtoa@p+1
  4925  007746  EFAF  F03B         	goto	l3969
  4926  00774A                     l3963:
  4927                           
  4928                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = (prec
      +                           < 0) ? 6 : prec;
  4929  00774A  0100               	movlb	0	; () banked
  4930  00774C  BFED               	btfsc	(_prec+1)& (0+255),7,b
  4931  00774E  EFAB  F03B         	goto	u4481
  4932  007752  EFAD  F03B         	goto	u4480
  4933  007756                     u4481:
  4934  007756  EF99  F03B         	goto	l3961
  4935  00775A                     u4480:
  4936  00775A  EF9F  F03B         	goto	l971
  4937  00775E                     l3969:
  4938                           
  4939                           ; BSR set to: 0
  4940                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode == '
      +                          g') {
  4941  00775E  0E67               	movlw	103
  4942  007760  185B               	xorwf	efgtoa@mode^0,w,c
  4943  007762  A4D8               	btfss	status,2,c
  4944  007764  EFB6  F03B         	goto	u4491
  4945  007768  EFB8  F03B         	goto	u4490
  4946  00776C                     u4491:
  4947  00776C  EFE7  F03B         	goto	l3979
  4948  007770                     u4490:
  4949  007770                     
  4950                           ; BSR set to: 0
  4951                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (!(e <
      +                           -4) && !((p - 1) < e)) {
  4952  007770  AE6B               	btfss	(efgtoa@e+1)^0,7,c
  4953  007772  EFC6  F03B         	goto	u4500
  4954  007776  0EFC               	movlw	252
  4955  007778  5C6A               	subwf	efgtoa@e^0,w,c
  4956  00777A  0EFF               	movlw	255
  4957  00777C  586B               	subwfb	(efgtoa@e+1)^0,w,c
  4958  00777E  A0D8               	btfss	status,0,c
  4959  007780  EFC4  F03B         	goto	u4501
  4960  007784  EFC6  F03B         	goto	u4500
  4961  007788                     u4501:
  4962  007788  EFE5  F03B         	goto	l3977
  4963  00778C                     u4500:
  4964  00778C                     
  4965                           ; BSR set to: 0
  4966  00778C  0EFF               	movlw	255
  4967  00778E  6E35               	movwf	??_efgtoa^0,c
  4968  007790  0EFF               	movlw	255
  4969  007792  6E36               	movwf	(??_efgtoa+1)^0,c
  4970  007794  C056  F037         	movff	efgtoa@p,??_efgtoa+2
  4971  007798  C057  F038         	movff	efgtoa@p+1,??_efgtoa+3
  4972  00779C  5035               	movf	??_efgtoa^0,w,c
  4973  00779E  2637               	addwf	(??_efgtoa+2)^0,f,c
  4974  0077A0  5036               	movf	(??_efgtoa+1)^0,w,c
  4975  0077A2  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4976  0077A4  506A               	movf	efgtoa@e^0,w,c
  4977  0077A6  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4978  0077A8  5038               	movf	(??_efgtoa+3)^0,w,c
  4979  0077AA  0A80               	xorlw	128
  4980  0077AC  6E39               	movwf	(??_efgtoa+4)^0,c
  4981  0077AE  506B               	movf	(efgtoa@e+1)^0,w,c
  4982  0077B0  0A80               	xorlw	128
  4983  0077B2  5839               	subwfb	(??_efgtoa+4)^0,w,c
  4984  0077B4  A0D8               	btfss	status,0,c
  4985  0077B6  EFDF  F03B         	goto	u4511
  4986  0077BA  EFE1  F03B         	goto	u4510
  4987  0077BE                     u4511:
  4988  0077BE  EFE5  F03B         	goto	l3977
  4989  0077C2                     u4510:
  4990  0077C2                     
  4991                           ; BSR set to: 0
  4992                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             nmode
      +                           = 'f';
  4993  0077C2  0E66               	movlw	102
  4994  0077C4  6E58               	movwf	efgtoa@nmode^0,c
  4995                           
  4996                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } else {
  4997  0077C6  EFE7  F03B         	goto	l3979
  4998  0077CA                     l3977:
  4999                           
  5000                           ; BSR set to: 0
  5001                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             nmode
      +                           = 'e';
  5002  0077CA  0E65               	movlw	101
  5003  0077CC  6E58               	movwf	efgtoa@nmode^0,c
  5004  0077CE                     l3979:
  5005                           
  5006                           ; BSR set to: 0
  5007                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  5008  0077CE  C056  F04E         	movff	efgtoa@p,efgtoa@m
  5009  0077D2  C057  F04F         	movff	efgtoa@p+1,efgtoa@m+1
  5010  0077D6                     
  5011                           ; BSR set to: 0
  5012                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mode ==
      +                           'g') || ((nmode == 'f') && (e < 0))) {
  5013  0077D6  0E67               	movlw	103
  5014  0077D8  185B               	xorwf	efgtoa@mode^0,w,c
  5015  0077DA  A4D8               	btfss	status,2,c
  5016  0077DC  EFF2  F03B         	goto	u4521
  5017  0077E0  EFF4  F03B         	goto	u4520
  5018  0077E4                     u4521:
  5019  0077E4  EF04  F03C         	goto	l3987
  5020  0077E8                     u4520:
  5021  0077E8                     
  5022                           ; BSR set to: 0
  5023  0077E8  0E66               	movlw	102
  5024  0077EA  1858               	xorwf	efgtoa@nmode^0,w,c
  5025  0077EC  A4D8               	btfss	status,2,c
  5026  0077EE  EFFB  F03B         	goto	u4531
  5027  0077F2  EFFD  F03B         	goto	u4530
  5028  0077F6                     u4531:
  5029  0077F6  EF06  F03C         	goto	l3989
  5030  0077FA                     u4530:
  5031  0077FA                     
  5032                           ; BSR set to: 0
  5033  0077FA  BE6B               	btfsc	(efgtoa@e+1)^0,7,c
  5034  0077FC  EF04  F03C         	goto	u4540
  5035  007800  EF02  F03C         	goto	u4541
  5036  007804                     u4541:
  5037  007804  EF06  F03C         	goto	l3989
  5038  007808                     u4540:
  5039  007808                     l3987:
  5040                           
  5041                           ; BSR set to: 0
  5042                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  5043  007808  4A4E               	infsnz	efgtoa@m^0,f,c
  5044  00780A  2A4F               	incf	(efgtoa@m+1)^0,f,c
  5045  00780C                     l3989:
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmode == 
      +                          'f') {
  5049  00780C  0E66               	movlw	102
  5050  00780E  1858               	xorwf	efgtoa@nmode^0,w,c
  5051  007810  A4D8               	btfss	status,2,c
  5052  007812  EF0D  F03C         	goto	u4551
  5053  007816  EF0F  F03C         	goto	u4550
  5054  00781A                     u4551:
  5055  00781A  EF2F  F03C         	goto	l3999
  5056  00781E                     u4550:
  5057  00781E                     
  5058                           ; BSR set to: 0
  5059                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (e < 0
      +                          ) {
  5060  00781E  BE6B               	btfsc	(efgtoa@e+1)^0,7,c
  5061  007820  EF16  F03C         	goto	u4560
  5062  007824  EF14  F03C         	goto	u4561
  5063  007828                     u4561:
  5064  007828  EF22  F03C         	goto	l3995
  5065  00782C                     u4560:
  5066  00782C                     
  5067                           ; BSR set to: 0
  5068                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             u = 1
      +                          .0;
  5069  00782C  0E00               	movlw	0
  5070  00782E  6E6E               	movwf	efgtoa@u^0,c
  5071  007830  0E00               	movlw	0
  5072  007832  6E6F               	movwf	(efgtoa@u+1)^0,c
  5073  007834  0E80               	movlw	128
  5074  007836  6E70               	movwf	(efgtoa@u+2)^0,c
  5075  007838  0E3F               	movlw	63
  5076  00783A  6E71               	movwf	(efgtoa@u+3)^0,c
  5077                           
  5078                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             e = 0
      +                          ;
  5079  00783C  0E00               	movlw	0
  5080  00783E  6E6B               	movwf	(efgtoa@e+1)^0,c
  5081  007840  0E00               	movlw	0
  5082  007842  6E6A               	movwf	efgtoa@e^0,c
  5083  007844                     l3995:
  5084                           
  5085                           ; BSR set to: 0
  5086                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (!(mod
      +                          e == 'g')) {
  5087  007844  0E67               	movlw	103
  5088  007846  185B               	xorwf	efgtoa@mode^0,w,c
  5089  007848  B4D8               	btfsc	status,2,c
  5090  00784A  EF29  F03C         	goto	u4571
  5091  00784E  EF2B  F03C         	goto	u4570
  5092  007852                     u4571:
  5093  007852  EF2F  F03C         	goto	l3999
  5094  007856                     u4570:
  5095  007856                     
  5096                           ; BSR set to: 0
  5097                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             m += 
      +                          e;
  5098  007856  506A               	movf	efgtoa@e^0,w,c
  5099  007858  264E               	addwf	efgtoa@m^0,f,c
  5100  00785A  506B               	movf	(efgtoa@e+1)^0,w,c
  5101  00785C  224F               	addwfc	(efgtoa@m+1)^0,f,c
  5102  00785E                     l3999:
  5103                           
  5104                           ; BSR set to: 0
  5105                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  5106  00785E  0E00               	movlw	0
  5107  007860  6E65               	movwf	(efgtoa@i+1)^0,c
  5108  007862  0E00               	movlw	0
  5109  007864  6E64               	movwf	efgtoa@i^0,c
  5110  007866                     
  5111                           ; BSR set to: 0
  5112                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  5113  007866  C066  F05C         	movff	efgtoa@g,efgtoa@h
  5114  00786A  C067  F05D         	movff	efgtoa@g+1,efgtoa@h+1
  5115  00786E  C068  F05E         	movff	efgtoa@g+2,efgtoa@h+2
  5116  007872  C069  F05F         	movff	efgtoa@g+3,efgtoa@h+3
  5117  007876                     
  5118                           ; BSR set to: 0
  5119                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  5120  007876  C06E  F03A         	movff	efgtoa@u,efgtoa@ou
  5121  00787A  C06F  F03B         	movff	efgtoa@u+1,efgtoa@ou+1
  5122  00787E  C070  F03C         	movff	efgtoa@u+2,efgtoa@ou+2
  5123  007882  C071  F03D         	movff	efgtoa@u+3,efgtoa@ou+3
  5124                           
  5125                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i < m)
      +                           {
  5126  007886  EFBF  F03C         	goto	l4013
  5127  00788A                     l4005:
  5128                           
  5129                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = floor
      +                          f(h/u);
  5130  00788A  C05C  F001         	movff	efgtoa@h,___fldiv@b
  5131  00788E  C05D  F002         	movff	efgtoa@h+1,___fldiv@b+1
  5132  007892  C05E  F003         	movff	efgtoa@h+2,___fldiv@b+2
  5133  007896  C05F  F004         	movff	efgtoa@h+3,___fldiv@b+3
  5134  00789A  C06E  F005         	movff	efgtoa@u,___fldiv@a
  5135  00789E  C06F  F006         	movff	efgtoa@u+1,___fldiv@a+1
  5136  0078A2  C070  F007         	movff	efgtoa@u+2,___fldiv@a+2
  5137  0078A6  C071  F008         	movff	efgtoa@u+3,___fldiv@a+3
  5138  0078AA  ECEC  F02E         	call	___fldiv	;wreg free
  5139  0078AE  C001  F01A         	movff	?___fldiv,floorf@x
  5140  0078B2  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  5141  0078B6  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  5142  0078BA  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  5143  0078BE  ECA8  F02C         	call	_floorf	;wreg free
  5144  0078C2  C01A  F060         	movff	?_floorf,efgtoa@l
  5145  0078C6  C01B  F061         	movff	?_floorf+1,efgtoa@l+1
  5146  0078CA  C01C  F062         	movff	?_floorf+2,efgtoa@l+2
  5147  0078CE  C01D  F063         	movff	?_floorf+3,efgtoa@l+3
  5148                           
  5149                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = (int)
      +                          l;
  5150  0078D2  C060  F01A         	movff	efgtoa@l,___fltol@f1
  5151  0078D6  C061  F01B         	movff	efgtoa@l+1,___fltol@f1+1
  5152  0078DA  C062  F01C         	movff	efgtoa@l+2,___fltol@f1+2
  5153  0078DE  C063  F01D         	movff	efgtoa@l+3,___fltol@f1+3
  5154  0078E2  ECD6  F028         	call	___fltol	;wreg free
  5155  0078E6  C01A  F052         	movff	?___fltol,efgtoa@d
  5156  0078EA  C01B  F053         	movff	?___fltol+1,efgtoa@d+1
  5157  0078EE                     
  5158                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -= l*u;
  5159  0078EE  C05C  F01F         	movff	efgtoa@h,___flsub@b
  5160  0078F2  C05D  F020         	movff	efgtoa@h+1,___flsub@b+1
  5161  0078F6  C05E  F021         	movff	efgtoa@h+2,___flsub@b+2
  5162  0078FA  C05F  F022         	movff	efgtoa@h+3,___flsub@b+3
  5163  0078FE  C06E  F005         	movff	efgtoa@u,___flmul@a
  5164  007902  C06F  F006         	movff	efgtoa@u+1,___flmul@a+1
  5165  007906  C070  F007         	movff	efgtoa@u+2,___flmul@a+2
  5166  00790A  C071  F008         	movff	efgtoa@u+3,___flmul@a+3
  5167  00790E  C060  F001         	movff	efgtoa@l,___flmul@b
  5168  007912  C061  F002         	movff	efgtoa@l+1,___flmul@b+1
  5169  007916  C062  F003         	movff	efgtoa@l+2,___flmul@b+2
  5170  00791A  C063  F004         	movff	efgtoa@l+3,___flmul@b+3
  5171  00791E  ECB9  F030         	call	___flmul	;wreg free
  5172  007922  C001  F023         	movff	?___flmul,___flsub@a
  5173  007926  C002  F024         	movff	?___flmul+1,___flsub@a+1
  5174  00792A  C003  F025         	movff	?___flmul+2,___flsub@a+2
  5175  00792E  C004  F026         	movff	?___flmul+3,___flsub@a+3
  5176  007932  ECDF  F022         	call	___flsub	;wreg free
  5177  007936  C01F  F05C         	movff	?___flsub,efgtoa@h
  5178  00793A  C020  F05D         	movff	?___flsub+1,efgtoa@h+1
  5179  00793E  C021  F05E         	movff	?___flsub+2,efgtoa@h+2
  5180  007942  C022  F05F         	movff	?___flsub+3,efgtoa@h+3
  5181  007946                     
  5182                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = u/10.
      +                          0;
  5183  007946  C06E  F001         	movff	efgtoa@u,___fldiv@b
  5184  00794A  C06F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  5185  00794E  C070  F003         	movff	efgtoa@u+2,___fldiv@b+2
  5186  007952  C071  F004         	movff	efgtoa@u+3,___fldiv@b+3
  5187  007956  0E00               	movlw	0
  5188  007958  6E05               	movwf	___fldiv@a^0,c
  5189  00795A  0E00               	movlw	0
  5190  00795C  6E06               	movwf	(___fldiv@a+1)^0,c
  5191  00795E  0E20               	movlw	32
  5192  007960  6E07               	movwf	(___fldiv@a+2)^0,c
  5193  007962  0E41               	movlw	65
  5194  007964  6E08               	movwf	(___fldiv@a+3)^0,c
  5195  007966  ECEC  F02E         	call	___fldiv	;wreg free
  5196  00796A  C001  F06E         	movff	?___fldiv,efgtoa@u
  5197  00796E  C002  F06F         	movff	?___fldiv+1,efgtoa@u+1
  5198  007972  C003  F070         	movff	?___fldiv+2,efgtoa@u+2
  5199  007976  C004  F071         	movff	?___fldiv+3,efgtoa@u+3
  5200  00797A                     
  5201                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  5202  00797A  4A64               	infsnz	efgtoa@i^0,f,c
  5203  00797C  2A65               	incf	(efgtoa@i+1)^0,f,c
  5204  00797E                     l4013:
  5205                           
  5206                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i < m)
      +                           {
  5207  00797E  504E               	movf	efgtoa@m^0,w,c
  5208  007980  5C64               	subwf	efgtoa@i^0,w,c
  5209  007982  5065               	movf	(efgtoa@i+1)^0,w,c
  5210  007984  0A80               	xorlw	128
  5211  007986  6E35               	movwf	??_efgtoa^0,c
  5212  007988  504F               	movf	(efgtoa@m+1)^0,w,c
  5213  00798A  0A80               	xorlw	128
  5214  00798C  5835               	subwfb	??_efgtoa^0,w,c
  5215  00798E  A0D8               	btfss	status,0,c
  5216  007990  EFCC  F03C         	goto	u4581
  5217  007994  EFCE  F03C         	goto	u4580
  5218  007998                     u4581:
  5219  007998  EF45  F03C         	goto	l4005
  5220  00799C                     u4580:
  5221  00799C                     
  5222                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.0;
  5223  00799C  C06E  F001         	movff	efgtoa@u,___flmul@b
  5224  0079A0  C06F  F002         	movff	efgtoa@u+1,___flmul@b+1
  5225  0079A4  C070  F003         	movff	efgtoa@u+2,___flmul@b+2
  5226  0079A8  C071  F004         	movff	efgtoa@u+3,___flmul@b+3
  5227  0079AC  0E00               	movlw	0
  5228  0079AE  6E05               	movwf	___flmul@a^0,c
  5229  0079B0  0E00               	movlw	0
  5230  0079B2  6E06               	movwf	(___flmul@a+1)^0,c
  5231  0079B4  0EA0               	movlw	160
  5232  0079B6  6E07               	movwf	(___flmul@a+2)^0,c
  5233  0079B8  0E40               	movlw	64
  5234  0079BA  6E08               	movwf	(___flmul@a+3)^0,c
  5235  0079BC  ECB9  F030         	call	___flmul	;wreg free
  5236  0079C0  C001  F060         	movff	?___flmul,efgtoa@l
  5237  0079C4  C002  F061         	movff	?___flmul+1,efgtoa@l+1
  5238  0079C8  C003  F062         	movff	?___flmul+2,efgtoa@l+2
  5239  0079CC  C004  F063         	movff	?___flmul+3,efgtoa@l+3
  5240  0079D0                     
  5241                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < l) {
  5242  0079D0  C05C  F01F         	movff	efgtoa@h,___flge@ff1
  5243  0079D4  C05D  F020         	movff	efgtoa@h+1,___flge@ff1+1
  5244  0079D8  C05E  F021         	movff	efgtoa@h+2,___flge@ff1+2
  5245  0079DC  C05F  F022         	movff	efgtoa@h+3,___flge@ff1+3
  5246  0079E0  C060  F023         	movff	efgtoa@l,___flge@ff2
  5247  0079E4  C061  F024         	movff	efgtoa@l+1,___flge@ff2+1
  5248  0079E8  C062  F025         	movff	efgtoa@l+2,___flge@ff2+2
  5249  0079EC  C063  F026         	movff	efgtoa@l+3,___flge@ff2+3
  5250  0079F0  EC54  F028         	call	___flge	;wreg free
  5251  0079F4  B0D8               	btfsc	status,0,c
  5252  0079F6  EFFF  F03C         	goto	u4591
  5253  0079FA  EF01  F03D         	goto	u4590
  5254  0079FE                     u4591:
  5255  0079FE  EF0B  F03D         	goto	l4021
  5256  007A02                     u4590:
  5257  007A02                     
  5258                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 0.0;
  5259  007A02  0E00               	movlw	0
  5260  007A04  6E60               	movwf	efgtoa@l^0,c
  5261  007A06  0E00               	movlw	0
  5262  007A08  6E61               	movwf	(efgtoa@l+1)^0,c
  5263  007A0A  0E00               	movlw	0
  5264  007A0C  6E62               	movwf	(efgtoa@l+2)^0,c
  5265  007A0E  0E00               	movlw	0
  5266  007A10  6E63               	movwf	(efgtoa@l+3)^0,c
  5267                           
  5268                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  5269  007A12  EF33  F03D         	goto	l4027
  5270  007A16                     l4021:
  5271                           
  5272                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if ((h ==
      +                           l) && !(d % 2)) {
  5273  007A16  C05C  F001         	movff	efgtoa@h,___fleq@ff1
  5274  007A1A  C05D  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  5275  007A1E  C05E  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  5276  007A22  C05F  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  5277  007A26  C060  F005         	movff	efgtoa@l,___fleq@ff2
  5278  007A2A  C061  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  5279  007A2E  C062  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  5280  007A32  C063  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  5281  007A36  EC20  F025         	call	___fleq	;wreg free
  5282  007A3A  A0D8               	btfss	status,0,c
  5283  007A3C  EF22  F03D         	goto	u4601
  5284  007A40  EF24  F03D         	goto	u4600
  5285  007A44                     u4601:
  5286  007A44  EF33  F03D         	goto	l4027
  5287  007A48                     u4600:
  5288  007A48  B052               	btfsc	efgtoa@d^0,0,c
  5289  007A4A  EF29  F03D         	goto	u4611
  5290  007A4E  EF2B  F03D         	goto	u4610
  5291  007A52                     u4611:
  5292  007A52  EF33  F03D         	goto	l4027
  5293  007A56                     u4610:
  5294  007A56                     
  5295                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             l = 0
      +                          .0;
  5296  007A56  0E00               	movlw	0
  5297  007A58  6E60               	movwf	efgtoa@l^0,c
  5298  007A5A  0E00               	movlw	0
  5299  007A5C  6E61               	movwf	(efgtoa@l+1)^0,c
  5300  007A5E  0E00               	movlw	0
  5301  007A60  6E62               	movwf	(efgtoa@l+2)^0,c
  5302  007A62  0E00               	movlw	0
  5303  007A64  6E63               	movwf	(efgtoa@l+3)^0,c
  5304  007A66                     l4027:
  5305                           
  5306                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + l;
  5307  007A66  C066  F00F         	movff	efgtoa@g,___fladd@b
  5308  007A6A  C067  F010         	movff	efgtoa@g+1,___fladd@b+1
  5309  007A6E  C068  F011         	movff	efgtoa@g+2,___fladd@b+2
  5310  007A72  C069  F012         	movff	efgtoa@g+3,___fladd@b+3
  5311  007A76  C060  F013         	movff	efgtoa@l,___fladd@a
  5312  007A7A  C061  F014         	movff	efgtoa@l+1,___fladd@a+1
  5313  007A7E  C062  F015         	movff	efgtoa@l+2,___fladd@a+2
  5314  007A82  C063  F016         	movff	efgtoa@l+3,___fladd@a+3
  5315  007A86  EC50  F037         	call	___fladd	;wreg free
  5316  007A8A  C00F  F05C         	movff	?___fladd,efgtoa@h
  5317  007A8E  C010  F05D         	movff	?___fladd+1,efgtoa@h+1
  5318  007A92  C011  F05E         	movff	?___fladd+2,efgtoa@h+2
  5319  007A96  C012  F05F         	movff	?___fladd+3,efgtoa@h+3
  5320  007A9A                     
  5321                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  5322  007A9A  C03A  F06E         	movff	efgtoa@ou,efgtoa@u
  5323  007A9E  C03B  F06F         	movff	efgtoa@ou+1,efgtoa@u+1
  5324  007AA2  C03C  F070         	movff	efgtoa@ou+2,efgtoa@u+2
  5325  007AA6  C03D  F071         	movff	efgtoa@ou+3,efgtoa@u+3
  5326  007AAA                     
  5327                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nmode =
      +                          = 'e') ? 0 : e;
  5328  007AAA  0E65               	movlw	101
  5329  007AAC  1858               	xorwf	efgtoa@nmode^0,w,c
  5330  007AAE  B4D8               	btfsc	status,2,c
  5331  007AB0  EF5C  F03D         	goto	u4621
  5332  007AB4  EF5E  F03D         	goto	u4620
  5333  007AB8                     u4621:
  5334  007AB8  EF64  F03D         	goto	l4035
  5335  007ABC                     u4620:
  5336  007ABC  C06A  F050         	movff	efgtoa@e,efgtoa@ne
  5337  007AC0  C06B  F051         	movff	efgtoa@e+1,efgtoa@ne+1
  5338  007AC4  EF68  F03D         	goto	l997
  5339  007AC8                     l4035:
  5340  007AC8  0E00               	movlw	0
  5341  007ACA  6E51               	movwf	(efgtoa@ne+1)^0,c
  5342  007ACC  0E00               	movlw	0
  5343  007ACE  6E50               	movwf	efgtoa@ne^0,c
  5344  007AD0                     l997:
  5345                           
  5346                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  5347  007AD0  0E00               	movlw	0
  5348  007AD2  6E4D               	movwf	(efgtoa@pp+1)^0,c
  5349  007AD4  0E00               	movlw	0
  5350  007AD6  6E4C               	movwf	efgtoa@pp^0,c
  5351                           
  5352                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  5353  007AD8  0E00               	movlw	0
  5354  007ADA  6E4B               	movwf	(efgtoa@t+1)^0,c
  5355  007ADC  0E00               	movlw	0
  5356  007ADE  6E4A               	movwf	efgtoa@t^0,c
  5357                           
  5358                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  5359  007AE0  0E00               	movlw	0
  5360  007AE2  6E65               	movwf	(efgtoa@i+1)^0,c
  5361  007AE4  0E00               	movlw	0
  5362  007AE6  6E64               	movwf	efgtoa@i^0,c
  5363                           
  5364                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((i < m
      +                          ) && (n < (80 - 5))) {
  5365  007AE8  EF62  F03E         	goto	l4085
  5366  007AEC                     l4037:
  5367                           
  5368                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = floor
      +                          f(h/u);
  5369  007AEC  C05C  F001         	movff	efgtoa@h,___fldiv@b
  5370  007AF0  C05D  F002         	movff	efgtoa@h+1,___fldiv@b+1
  5371  007AF4  C05E  F003         	movff	efgtoa@h+2,___fldiv@b+2
  5372  007AF8  C05F  F004         	movff	efgtoa@h+3,___fldiv@b+3
  5373  007AFC  C06E  F005         	movff	efgtoa@u,___fldiv@a
  5374  007B00  C06F  F006         	movff	efgtoa@u+1,___fldiv@a+1
  5375  007B04  C070  F007         	movff	efgtoa@u+2,___fldiv@a+2
  5376  007B08  C071  F008         	movff	efgtoa@u+3,___fldiv@a+3
  5377  007B0C  ECEC  F02E         	call	___fldiv	;wreg free
  5378  007B10  C001  F01A         	movff	?___fldiv,floorf@x
  5379  007B14  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  5380  007B18  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  5381  007B1C  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  5382  007B20  ECA8  F02C         	call	_floorf	;wreg free
  5383  007B24  C01A  F060         	movff	?_floorf,efgtoa@l
  5384  007B28  C01B  F061         	movff	?_floorf+1,efgtoa@l+1
  5385  007B2C  C01C  F062         	movff	?_floorf+2,efgtoa@l+2
  5386  007B30  C01D  F063         	movff	?_floorf+3,efgtoa@l+3
  5387                           
  5388                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = (int)
      +                          l;
  5389  007B34  C060  F01A         	movff	efgtoa@l,___fltol@f1
  5390  007B38  C061  F01B         	movff	efgtoa@l+1,___fltol@f1+1
  5391  007B3C  C062  F01C         	movff	efgtoa@l+2,___fltol@f1+2
  5392  007B40  C063  F01D         	movff	efgtoa@l+3,___fltol@f1+3
  5393  007B44  ECD6  F028         	call	___fltol	;wreg free
  5394  007B48  C01A  F052         	movff	?___fltol,efgtoa@d
  5395  007B4C  C01B  F053         	movff	?___fltol+1,efgtoa@d+1
  5396  007B50                     
  5397                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (!(fla
      +                          gs & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5398  007B50  0100               	movlb	0	; () banked
  5399  007B52  B9EE               	btfsc	_flags& (0+255),4,b
  5400  007B54  EFAE  F03D         	goto	u4631
  5401  007B58  EFB0  F03D         	goto	u4630
  5402  007B5C                     u4631:
  5403  007B5C  EFCD  F03D         	goto	l4049
  5404  007B60                     u4630:
  5405  007B60                     
  5406                           ; BSR set to: 0
  5407  007B60  5052               	movf	efgtoa@d^0,w,c
  5408  007B62  1053               	iorwf	(efgtoa@d+1)^0,w,c
  5409  007B64  A4D8               	btfss	status,2,c
  5410  007B66  EFB7  F03D         	goto	u4641
  5411  007B6A  EFB9  F03D         	goto	u4640
  5412  007B6E                     u4641:
  5413  007B6E  EFCD  F03D         	goto	l4049
  5414  007B72                     u4640:
  5415  007B72                     
  5416                           ; BSR set to: 0
  5417  007B72  0E67               	movlw	103
  5418  007B74  185B               	xorwf	efgtoa@mode^0,w,c
  5419  007B76  A4D8               	btfss	status,2,c
  5420  007B78  EFC0  F03D         	goto	u4651
  5421  007B7C  EFC2  F03D         	goto	u4650
  5422  007B80                     u4651:
  5423  007B80  EFCD  F03D         	goto	l4049
  5424  007B84                     u4650:
  5425  007B84                     
  5426                           ; BSR set to: 0
  5427  007B84  BE51               	btfsc	(efgtoa@ne+1)^0,7,c
  5428  007B86  EFC9  F03D         	goto	u4660
  5429  007B8A  EFC7  F03D         	goto	u4661
  5430  007B8E                     u4661:
  5431  007B8E  EFCD  F03D         	goto	l4049
  5432  007B92                     u4660:
  5433  007B92                     
  5434                           ; BSR set to: 0
  5435                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             ++t;
  5436  007B92  4A4A               	infsnz	efgtoa@t^0,f,c
  5437  007B94  2A4B               	incf	(efgtoa@t+1)^0,f,c
  5438                           
  5439                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } else {
  5440  007B96  EF17  F03E         	goto	l4077
  5441  007B9A                     l4049:
  5442                           
  5443                           ; BSR set to: 0
  5444                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             if (!
      +                          pp && (ne < 0)) {
  5445  007B9A  504C               	movf	efgtoa@pp^0,w,c
  5446  007B9C  104D               	iorwf	(efgtoa@pp+1)^0,w,c
  5447  007B9E  A4D8               	btfss	status,2,c
  5448  007BA0  EFD4  F03D         	goto	u4671
  5449  007BA4  EFD6  F03D         	goto	u4670
  5450  007BA8                     u4671:
  5451  007BA8  EF00  F03E         	goto	l4069
  5452  007BAC                     u4670:
  5453  007BAC                     
  5454                           ; BSR set to: 0
  5455  007BAC  BE51               	btfsc	(efgtoa@ne+1)^0,7,c
  5456  007BAE  EFDD  F03D         	goto	u4680
  5457  007BB2  EFDB  F03D         	goto	u4681
  5458  007BB6                     u4681:
  5459  007BB6  EF00  F03E         	goto	l4069
  5460  007BBA                     u4680:
  5461  007BBA                     
  5462                           ; BSR set to: 0
  5463                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:                 d
      +                          buf[n++] = '.';
  5464  007BBA  0E00               	movlw	low _dbuf
  5465  007BBC  246C               	addwf	efgtoa@n^0,w,c
  5466  007BBE  6ED9               	movwf	fsr2l,c
  5467  007BC0  0E01               	movlw	high _dbuf
  5468  007BC2  206D               	addwfc	(efgtoa@n+1)^0,w,c
  5469  007BC4  6EDA               	movwf	fsr2h,c
  5470  007BC6  0E2E               	movlw	46
  5471  007BC8  6EDF               	movwf	indf2,c
  5472  007BCA                     
  5473                           ; BSR set to: 0
  5474  007BCA  4A6C               	infsnz	efgtoa@n^0,f,c
  5475  007BCC  2A6D               	incf	(efgtoa@n+1)^0,f,c
  5476  007BCE                     
  5477                           ; BSR set to: 0
  5478                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:                 -
      +                          -w;
  5479  007BCE  0659               	decf	efgtoa@w^0,f,c
  5480  007BD0  A0D8               	btfss	status,0,c
  5481  007BD2  065A               	decf	(efgtoa@w+1)^0,f,c
  5482  007BD4                     
  5483                           ; BSR set to: 0
  5484                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:                 p
      +                          p = 1;
  5485  007BD4  0E00               	movlw	0
  5486  007BD6  6E4D               	movwf	(efgtoa@pp+1)^0,c
  5487  007BD8  0E01               	movlw	1
  5488  007BDA  6E4C               	movwf	efgtoa@pp^0,c
  5489  007BDC  EF00  F03E         	goto	l4069
  5490  007BE0                     l4061:
  5491                           
  5492                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:                 d
      +                          buf[n++] = '0';
  5493  007BE0  0E00               	movlw	low _dbuf
  5494  007BE2  246C               	addwf	efgtoa@n^0,w,c
  5495  007BE4  6ED9               	movwf	fsr2l,c
  5496  007BE6  0E01               	movlw	high _dbuf
  5497  007BE8  206D               	addwfc	(efgtoa@n+1)^0,w,c
  5498  007BEA  6EDA               	movwf	fsr2h,c
  5499  007BEC  0E30               	movlw	48
  5500  007BEE  6EDF               	movwf	indf2,c
  5501  007BF0  4A6C               	infsnz	efgtoa@n^0,f,c
  5502  007BF2  2A6D               	incf	(efgtoa@n+1)^0,f,c
  5503  007BF4                     
  5504                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:                 -
      +                          -w;
  5505  007BF4  0659               	decf	efgtoa@w^0,f,c
  5506  007BF6  A0D8               	btfss	status,0,c
  5507  007BF8  065A               	decf	(efgtoa@w+1)^0,f,c
  5508  007BFA                     
  5509                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:                 -
      +                          -t;
  5510  007BFA  064A               	decf	efgtoa@t^0,f,c
  5511  007BFC  A0D8               	btfss	status,0,c
  5512  007BFE  064B               	decf	(efgtoa@t+1)^0,f,c
  5513  007C00                     l4069:
  5514                           
  5515                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             while
      +                           (t) {
  5516  007C00  504A               	movf	efgtoa@t^0,w,c
  5517  007C02  104B               	iorwf	(efgtoa@t+1)^0,w,c
  5518  007C04  A4D8               	btfss	status,2,c
  5519  007C06  EF07  F03E         	goto	u4691
  5520  007C0A  EF09  F03E         	goto	u4690
  5521  007C0E                     u4691:
  5522  007C0E  EFF0  F03D         	goto	l4061
  5523  007C12                     u4690:
  5524  007C12                     
  5525                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             dbuf[
      +                          n++] = '0' + d;
  5526  007C12  0E00               	movlw	low _dbuf
  5527  007C14  246C               	addwf	efgtoa@n^0,w,c
  5528  007C16  6ED9               	movwf	fsr2l,c
  5529  007C18  0E01               	movlw	high _dbuf
  5530  007C1A  206D               	addwfc	(efgtoa@n+1)^0,w,c
  5531  007C1C  6EDA               	movwf	fsr2h,c
  5532  007C1E  5052               	movf	efgtoa@d^0,w,c
  5533  007C20  0F30               	addlw	48
  5534  007C22  6EDF               	movwf	indf2,c
  5535  007C24  4A6C               	infsnz	efgtoa@n^0,f,c
  5536  007C26  2A6D               	incf	(efgtoa@n+1)^0,f,c
  5537  007C28                     
  5538                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             --w;
  5539  007C28  0659               	decf	efgtoa@w^0,f,c
  5540  007C2A  A0D8               	btfss	status,0,c
  5541  007C2C  065A               	decf	(efgtoa@w+1)^0,f,c
  5542  007C2E                     l4077:
  5543                           
  5544                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -= l*u;
  5545  007C2E  C05C  F01F         	movff	efgtoa@h,___flsub@b
  5546  007C32  C05D  F020         	movff	efgtoa@h+1,___flsub@b+1
  5547  007C36  C05E  F021         	movff	efgtoa@h+2,___flsub@b+2
  5548  007C3A  C05F  F022         	movff	efgtoa@h+3,___flsub@b+3
  5549  007C3E  C06E  F005         	movff	efgtoa@u,___flmul@a
  5550  007C42  C06F  F006         	movff	efgtoa@u+1,___flmul@a+1
  5551  007C46  C070  F007         	movff	efgtoa@u+2,___flmul@a+2
  5552  007C4A  C071  F008         	movff	efgtoa@u+3,___flmul@a+3
  5553  007C4E  C060  F001         	movff	efgtoa@l,___flmul@b
  5554  007C52  C061  F002         	movff	efgtoa@l+1,___flmul@b+1
  5555  007C56  C062  F003         	movff	efgtoa@l+2,___flmul@b+2
  5556  007C5A  C063  F004         	movff	efgtoa@l+3,___flmul@b+3
  5557  007C5E  ECB9  F030         	call	___flmul	;wreg free
  5558  007C62  C001  F023         	movff	?___flmul,___flsub@a
  5559  007C66  C002  F024         	movff	?___flmul+1,___flsub@a+1
  5560  007C6A  C003  F025         	movff	?___flmul+2,___flsub@a+2
  5561  007C6E  C004  F026         	movff	?___flmul+3,___flsub@a+3
  5562  007C72  ECDF  F022         	call	___flsub	;wreg free
  5563  007C76  C01F  F05C         	movff	?___flsub,efgtoa@h
  5564  007C7A  C020  F05D         	movff	?___flsub+1,efgtoa@h+1
  5565  007C7E  C021  F05E         	movff	?___flsub+2,efgtoa@h+2
  5566  007C82  C022  F05F         	movff	?___flsub+3,efgtoa@h+3
  5567  007C86                     
  5568                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = u/10.
      +                          0;
  5569  007C86  C06E  F001         	movff	efgtoa@u,___fldiv@b
  5570  007C8A  C06F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  5571  007C8E  C070  F003         	movff	efgtoa@u+2,___fldiv@b+2
  5572  007C92  C071  F004         	movff	efgtoa@u+3,___fldiv@b+3
  5573  007C96  0E00               	movlw	0
  5574  007C98  6E05               	movwf	___fldiv@a^0,c
  5575  007C9A  0E00               	movlw	0
  5576  007C9C  6E06               	movwf	(___fldiv@a+1)^0,c
  5577  007C9E  0E20               	movlw	32
  5578  007CA0  6E07               	movwf	(___fldiv@a+2)^0,c
  5579  007CA2  0E41               	movlw	65
  5580  007CA4  6E08               	movwf	(___fldiv@a+3)^0,c
  5581  007CA6  ECEC  F02E         	call	___fldiv	;wreg free
  5582  007CAA  C001  F06E         	movff	?___fldiv,efgtoa@u
  5583  007CAE  C002  F06F         	movff	?___fldiv+1,efgtoa@u+1
  5584  007CB2  C003  F070         	movff	?___fldiv+2,efgtoa@u+2
  5585  007CB6  C004  F071         	movff	?___fldiv+3,efgtoa@u+3
  5586  007CBA                     
  5587                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne;
  5588  007CBA  0650               	decf	efgtoa@ne^0,f,c
  5589  007CBC  A0D8               	btfss	status,0,c
  5590  007CBE  0651               	decf	(efgtoa@ne+1)^0,f,c
  5591  007CC0                     
  5592                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  5593  007CC0  4A64               	infsnz	efgtoa@i^0,f,c
  5594  007CC2  2A65               	incf	(efgtoa@i+1)^0,f,c
  5595  007CC4                     l4085:
  5596                           
  5597                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((i < m
      +                          ) && (n < (80 - 5))) {
  5598  007CC4  504E               	movf	efgtoa@m^0,w,c
  5599  007CC6  5C64               	subwf	efgtoa@i^0,w,c
  5600  007CC8  5065               	movf	(efgtoa@i+1)^0,w,c
  5601  007CCA  0A80               	xorlw	128
  5602  007CCC  6E35               	movwf	??_efgtoa^0,c
  5603  007CCE  504F               	movf	(efgtoa@m+1)^0,w,c
  5604  007CD0  0A80               	xorlw	128
  5605  007CD2  5835               	subwfb	??_efgtoa^0,w,c
  5606  007CD4  B0D8               	btfsc	status,0,c
  5607  007CD6  EF6F  F03E         	goto	u4701
  5608  007CDA  EF71  F03E         	goto	u4700
  5609  007CDE                     u4701:
  5610  007CDE  EF7F  F03E         	goto	l4089
  5611  007CE2                     u4700:
  5612  007CE2  BE6D               	btfsc	(efgtoa@n+1)^0,7,c
  5613  007CE4  EF7D  F03E         	goto	u4711
  5614  007CE8  506D               	movf	(efgtoa@n+1)^0,w,c
  5615  007CEA  E109               	bnz	u4710
  5616  007CEC  0E4B               	movlw	75
  5617  007CEE  5C6C               	subwf	efgtoa@n^0,w,c
  5618  007CF0  A0D8               	btfss	status,0,c
  5619  007CF2  EF7D  F03E         	goto	u4711
  5620  007CF6  EF7F  F03E         	goto	u4710
  5621  007CFA                     u4711:
  5622  007CFA  EF76  F03D         	goto	l4037
  5623  007CFE                     u4710:
  5624  007CFE                     l4089:
  5625                           
  5626                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp && (f
      +                          lags & (1 << 4))) {
  5627  007CFE  504C               	movf	efgtoa@pp^0,w,c
  5628  007D00  104D               	iorwf	(efgtoa@pp+1)^0,w,c
  5629  007D02  A4D8               	btfss	status,2,c
  5630  007D04  EF86  F03E         	goto	u4721
  5631  007D08  EF88  F03E         	goto	u4720
  5632  007D0C                     u4721:
  5633  007D0C  EF9A  F03E         	goto	l4097
  5634  007D10                     u4720:
  5635  007D10  0100               	movlb	0	; () banked
  5636  007D12  A9EE               	btfss	_flags& (0+255),4,b
  5637  007D14  EF8E  F03E         	goto	u4731
  5638  007D18  EF90  F03E         	goto	u4730
  5639  007D1C                     u4731:
  5640  007D1C  EF9A  F03E         	goto	l4097
  5641  007D20                     u4730:
  5642  007D20                     
  5643                           ; BSR set to: 0
  5644                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf[n++]
      +                           = '.';
  5645  007D20  0E00               	movlw	low _dbuf
  5646  007D22  246C               	addwf	efgtoa@n^0,w,c
  5647  007D24  6ED9               	movwf	fsr2l,c
  5648  007D26  0E01               	movlw	high _dbuf
  5649  007D28  206D               	addwfc	(efgtoa@n+1)^0,w,c
  5650  007D2A  6EDA               	movwf	fsr2h,c
  5651  007D2C  0E2E               	movlw	46
  5652  007D2E  6EDF               	movwf	indf2,c
  5653  007D30                     
  5654                           ; BSR set to: 0
  5655  007D30  4A6C               	infsnz	efgtoa@n^0,f,c
  5656  007D32  2A6D               	incf	(efgtoa@n+1)^0,f,c
  5657  007D34                     l4097:
  5658                           
  5659                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] = '\0
      +                          ';
  5660  007D34  0E00               	movlw	low _dbuf
  5661  007D36  246C               	addwf	efgtoa@n^0,w,c
  5662  007D38  6ED9               	movwf	fsr2l,c
  5663  007D3A  0E01               	movlw	high _dbuf
  5664  007D3C  206D               	addwfc	(efgtoa@n+1)^0,w,c
  5665  007D3E  6EDA               	movwf	fsr2h,c
  5666  007D40  0E00               	movlw	0
  5667  007D42  6EDF               	movwf	indf2,c
  5668  007D44                     
  5669                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmode == 
      +                          'e') {
  5670  007D44  0E65               	movlw	101
  5671  007D46  1858               	xorwf	efgtoa@nmode^0,w,c
  5672  007D48  A4D8               	btfss	status,2,c
  5673  007D4A  EFA9  F03E         	goto	u4741
  5674  007D4E  EFAB  F03E         	goto	u4740
  5675  007D52                     u4741:
  5676  007D52  EF60  F03A         	goto	l3909
  5677  007D56                     u4740:
  5678  007D56                     
  5679                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = sizeo
      +                          f(dbuf) - 1;
  5680  007D56  0E00               	movlw	0
  5681  007D58  6E65               	movwf	(efgtoa@i+1)^0,c
  5682  007D5A  0E4F               	movlw	79
  5683  007D5C  6E64               	movwf	efgtoa@i^0,c
  5684  007D5E                     
  5685                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf[i] =
      +                           '\0';
  5686  007D5E  0E00               	movlw	low _dbuf
  5687  007D60  2464               	addwf	efgtoa@i^0,w,c
  5688  007D62  6ED9               	movwf	fsr2l,c
  5689  007D64  0E01               	movlw	high _dbuf
  5690  007D66  2065               	addwfc	(efgtoa@i+1)^0,w,c
  5691  007D68  6EDA               	movwf	fsr2h,c
  5692  007D6A  0E00               	movlw	0
  5693  007D6C  6EDF               	movwf	indf2,c
  5694  007D6E                     
  5695                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign = 0;
  5696  007D6E  0E00               	movlw	0
  5697  007D70  6E55               	movwf	(efgtoa@sign+1)^0,c
  5698  007D72  0E00               	movlw	0
  5699  007D74  6E54               	movwf	efgtoa@sign^0,c
  5700  007D76                     
  5701                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (e < 0
      +                          ) {
  5702  007D76  BE6B               	btfsc	(efgtoa@e+1)^0,7,c
  5703  007D78  EFC2  F03E         	goto	u4750
  5704  007D7C  EFC0  F03E         	goto	u4751
  5705  007D80                     u4751:
  5706  007D80  EFCA  F03E         	goto	l4113
  5707  007D84                     u4750:
  5708  007D84                     
  5709                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             sign 
      +                          = 1;
  5710  007D84  0E00               	movlw	0
  5711  007D86  6E55               	movwf	(efgtoa@sign+1)^0,c
  5712  007D88  0E01               	movlw	1
  5713  007D8A  6E54               	movwf	efgtoa@sign^0,c
  5714  007D8C                     
  5715                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             e = -
      +                          e;
  5716  007D8C  6C6A               	negf	efgtoa@e^0,c
  5717  007D8E  1E6B               	comf	(efgtoa@e+1)^0,f,c
  5718  007D90  B0D8               	btfsc	status,0,c
  5719  007D92  2A6B               	incf	(efgtoa@e+1)^0,f,c
  5720  007D94                     l4113:
  5721                           
  5722                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 2;
  5723  007D94  0E00               	movlw	0
  5724  007D96  6E57               	movwf	(efgtoa@p+1)^0,c
  5725  007D98  0E02               	movlw	2
  5726  007D9A  6E56               	movwf	efgtoa@p^0,c
  5727                           
  5728                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         while (e 
      +                          || (0 < p)) {
  5729  007D9C  EFFA  F03E         	goto	l4125
  5730  007DA0                     l4115:
  5731                           
  5732                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             --i;
  5733  007DA0  0664               	decf	efgtoa@i^0,f,c
  5734  007DA2  A0D8               	btfss	status,0,c
  5735  007DA4  0665               	decf	(efgtoa@i+1)^0,f,c
  5736  007DA6                     
  5737                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             dbuf[
      +                          i] = '0' + (e % 10);
  5738  007DA6  0E00               	movlw	low _dbuf
  5739  007DA8  2464               	addwf	efgtoa@i^0,w,c
  5740  007DAA  6ED9               	movwf	fsr2l,c
  5741  007DAC  0E01               	movlw	high _dbuf
  5742  007DAE  2065               	addwfc	(efgtoa@i+1)^0,w,c
  5743  007DB0  6EDA               	movwf	fsr2h,c
  5744  007DB2  C06A  F001         	movff	efgtoa@e,___awmod@dividend
  5745  007DB6  C06B  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  5746  007DBA  0E00               	movlw	0
  5747  007DBC  6E04               	movwf	(___awmod@divisor+1)^0,c
  5748  007DBE  0E0A               	movlw	10
  5749  007DC0  6E03               	movwf	___awmod@divisor^0,c
  5750  007DC2  EC75  F025         	call	___awmod	;wreg free
  5751  007DC6  5001               	movf	?___awmod^0,w,c
  5752  007DC8  0F30               	addlw	48
  5753  007DCA  6EDF               	movwf	indf2,c
  5754  007DCC                     
  5755                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             e = e
      +                           / 10;
  5756  007DCC  C06A  F007         	movff	efgtoa@e,___awdiv@dividend
  5757  007DD0  C06B  F008         	movff	efgtoa@e+1,___awdiv@dividend+1
  5758  007DD4  0E00               	movlw	0
  5759  007DD6  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5760  007DD8  0E0A               	movlw	10
  5761  007DDA  6E09               	movwf	___awdiv@divisor^0,c
  5762  007DDC  ECCD  F025         	call	___awdiv	;wreg free
  5763  007DE0  C007  F06A         	movff	?___awdiv,efgtoa@e
  5764  007DE4  C008  F06B         	movff	?___awdiv+1,efgtoa@e+1
  5765  007DE8                     
  5766                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             --p;
  5767  007DE8  0656               	decf	efgtoa@p^0,f,c
  5768  007DEA  A0D8               	btfss	status,0,c
  5769  007DEC  0657               	decf	(efgtoa@p+1)^0,f,c
  5770  007DEE                     
  5771                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             --w;
  5772  007DEE  0659               	decf	efgtoa@w^0,f,c
  5773  007DF0  A0D8               	btfss	status,0,c
  5774  007DF2  065A               	decf	(efgtoa@w+1)^0,f,c
  5775  007DF4                     l4125:
  5776                           
  5777                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         while (e 
      +                          || (0 < p)) {
  5778  007DF4  506A               	movf	efgtoa@e^0,w,c
  5779  007DF6  106B               	iorwf	(efgtoa@e+1)^0,w,c
  5780  007DF8  A4D8               	btfss	status,2,c
  5781  007DFA  EF01  F03F         	goto	u4761
  5782  007DFE  EF03  F03F         	goto	u4760
  5783  007E02                     u4761:
  5784  007E02  EFD0  F03E         	goto	l4115
  5785  007E06                     u4760:
  5786  007E06  BE57               	btfsc	(efgtoa@p+1)^0,7,c
  5787  007E08  EF10  F03F         	goto	u4770
  5788  007E0C  5057               	movf	(efgtoa@p+1)^0,w,c
  5789  007E0E  E106               	bnz	u4771
  5790  007E10  0456               	decf	efgtoa@p^0,w,c
  5791  007E12  B0D8               	btfsc	status,0,c
  5792  007E14  EF0E  F03F         	goto	u4771
  5793  007E18  EF10  F03F         	goto	u4770
  5794  007E1C                     u4771:
  5795  007E1C  EFD0  F03E         	goto	l4115
  5796  007E20                     u4770:
  5797  007E20                     
  5798                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  5799  007E20  0664               	decf	efgtoa@i^0,f,c
  5800  007E22  A0D8               	btfss	status,0,c
  5801  007E24  0665               	decf	(efgtoa@i+1)^0,f,c
  5802  007E26                     
  5803                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf[i] =
      +                           sign ? '-' : '+';
  5804  007E26  5054               	movf	efgtoa@sign^0,w,c
  5805  007E28  1055               	iorwf	(efgtoa@sign+1)^0,w,c
  5806  007E2A  A4D8               	btfss	status,2,c
  5807  007E2C  EF1A  F03F         	goto	u4781
  5808  007E30  EF1C  F03F         	goto	u4780
  5809  007E34                     u4781:
  5810  007E34  EF22  F03F         	goto	l4135
  5811  007E38                     u4780:
  5812  007E38  0E00               	movlw	0
  5813  007E3A  6E45               	movwf	(_efgtoa$772+1)^0,c
  5814  007E3C  0E2B               	movlw	43
  5815  007E3E  6E44               	movwf	_efgtoa$772^0,c
  5816  007E40  EF26  F03F         	goto	l4137
  5817  007E44                     l4135:
  5818  007E44  0E00               	movlw	0
  5819  007E46  6E45               	movwf	(_efgtoa$772+1)^0,c
  5820  007E48  0E2D               	movlw	45
  5821  007E4A  6E44               	movwf	_efgtoa$772^0,c
  5822  007E4C                     l4137:
  5823  007E4C  0E00               	movlw	low _dbuf
  5824  007E4E  2464               	addwf	efgtoa@i^0,w,c
  5825  007E50  6ED9               	movwf	fsr2l,c
  5826  007E52  0E01               	movlw	high _dbuf
  5827  007E54  2065               	addwfc	(efgtoa@i+1)^0,w,c
  5828  007E56  6EDA               	movwf	fsr2h,c
  5829  007E58  C044  FFDF         	movff	_efgtoa$772,indf2
  5830  007E5C                     
  5831                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  5832  007E5C  0659               	decf	efgtoa@w^0,f,c
  5833  007E5E  A0D8               	btfss	status,0,c
  5834  007E60  065A               	decf	(efgtoa@w+1)^0,f,c
  5835  007E62                     
  5836                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf[i] =
      +                           (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5837  007E62  0664               	decf	efgtoa@i^0,f,c
  5838  007E64  A0D8               	btfss	status,0,c
  5839  007E66  0665               	decf	(efgtoa@i+1)^0,f,c
  5840  007E68  0EBF               	movlw	191
  5841  007E6A  6E35               	movwf	??_efgtoa^0,c
  5842  007E6C  0EFF               	movlw	255
  5843  007E6E  6E36               	movwf	(??_efgtoa+1)^0,c
  5844  007E70  5034               	movf	efgtoa@c^0,w,c
  5845  007E72  6E37               	movwf	(??_efgtoa+2)^0,c
  5846  007E74  6A38               	clrf	(??_efgtoa+3)^0,c
  5847  007E76  5035               	movf	??_efgtoa^0,w,c
  5848  007E78  2637               	addwf	(??_efgtoa+2)^0,f,c
  5849  007E7A  5036               	movf	(??_efgtoa+1)^0,w,c
  5850  007E7C  2238               	addwfc	(??_efgtoa+3)^0,f,c
  5851  007E7E  5038               	movf	(??_efgtoa+3)^0,w,c
  5852  007E80  E10A               	bnz	u4790
  5853  007E82  0E1A               	movlw	26
  5854  007E84  5C37               	subwf	(??_efgtoa+2)^0,w,c
  5855  007E86  A0D8               	btfss	status,0,c
  5856  007E88  EF48  F03F         	goto	u4791
  5857  007E8C  EF4B  F03F         	goto	u4790
  5858  007E90                     u4791:
  5859  007E90  0E01               	movlw	1
  5860  007E92  EF4C  F03F         	goto	u4800
  5861  007E96                     u4790:
  5862  007E96  0E00               	movlw	0
  5863  007E98                     u4800:
  5864  007E98  6E48               	movwf	_efgtoa$774^0,c
  5865  007E9A  6A49               	clrf	(_efgtoa$774+1)^0,c
  5866  007E9C  5048               	movf	_efgtoa$774^0,w,c
  5867  007E9E  1049               	iorwf	(_efgtoa$774+1)^0,w,c
  5868  007EA0  A4D8               	btfss	status,2,c
  5869  007EA2  EF55  F03F         	goto	u4811
  5870  007EA6  EF57  F03F         	goto	u4810
  5871  007EAA                     u4811:
  5872  007EAA  EF5D  F03F         	goto	l4151
  5873  007EAE                     u4810:
  5874  007EAE  0E00               	movlw	0
  5875  007EB0  6E47               	movwf	(_efgtoa$773+1)^0,c
  5876  007EB2  0E65               	movlw	101
  5877  007EB4  6E46               	movwf	_efgtoa$773^0,c
  5878  007EB6  EF61  F03F         	goto	l4153
  5879  007EBA                     l4151:
  5880  007EBA  0E00               	movlw	0
  5881  007EBC  6E47               	movwf	(_efgtoa$773+1)^0,c
  5882  007EBE  0E45               	movlw	69
  5883  007EC0  6E46               	movwf	_efgtoa$773^0,c
  5884  007EC2                     l4153:
  5885  007EC2  0E00               	movlw	low _dbuf
  5886  007EC4  2464               	addwf	efgtoa@i^0,w,c
  5887  007EC6  6ED9               	movwf	fsr2l,c
  5888  007EC8  0E01               	movlw	high _dbuf
  5889  007ECA  2065               	addwfc	(efgtoa@i+1)^0,w,c
  5890  007ECC  6EDA               	movwf	fsr2h,c
  5891  007ECE  C046  FFDF         	movff	_efgtoa$773,indf2
  5892  007ED2                     
  5893                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  5894  007ED2  0659               	decf	efgtoa@w^0,f,c
  5895  007ED4  A0D8               	btfss	status,0,c
  5896  007ED6  065A               	decf	(efgtoa@w+1)^0,f,c
  5897  007ED8                     
  5898                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strcpy(&d
      +                          buf[n], &dbuf[i]);
  5899  007ED8  0E00               	movlw	low _dbuf
  5900  007EDA  246C               	addwf	efgtoa@n^0,w,c
  5901  007EDC  6E01               	movwf	strcpy@dest^0,c
  5902  007EDE  0E01               	movlw	high _dbuf
  5903  007EE0  206D               	addwfc	(efgtoa@n+1)^0,w,c
  5904  007EE2  6E02               	movwf	(strcpy@dest+1)^0,c
  5905  007EE4  0E00               	movlw	low _dbuf
  5906  007EE6  2464               	addwf	efgtoa@i^0,w,c
  5907  007EE8  6E03               	movwf	strcpy@src^0,c
  5908  007EEA  0E01               	movlw	high _dbuf
  5909  007EEC  2065               	addwfc	(efgtoa@i+1)^0,w,c
  5910  007EEE  6E04               	movwf	(strcpy@src+1)^0,c
  5911  007EF0  EC54  F023         	call	_strcpy	;wreg free
  5912  007EF4  EF60  F03A         	goto	l3909
  5913  007EF8                     l953:
  5914  007EF8  0012               	return		;funcret
  5915  007EFA                     __end_of_efgtoa:
  5916                           	callstack 0
  5917                           
  5918 ;; *************** function _tolower *****************
  5919 ;; Defined at:
  5920 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\tolower.c"
  5921 ;; Parameters:    Size  Location     Type
  5922 ;;  c               2    6[COMRAM] int 
  5923 ;; Auto vars:     Size  Location     Type
  5924 ;;		None
  5925 ;; Return value:  Size  Location     Type
  5926 ;;                  2    6[COMRAM] int 
  5927 ;; Registers used:
  5928 ;;		wreg, status,2, status,0
  5929 ;; Tracked objects:
  5930 ;;		On entry : 0/0
  5931 ;;		On exit  : 0/0
  5932 ;;		Unchanged: 0/0
  5933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5934 ;;      Params:         2       0       0       0       0       0       0
  5935 ;;      Locals:         2       0       0       0       0       0       0
  5936 ;;      Temps:          4       0       0       0       0       0       0
  5937 ;;      Totals:         8       0       0       0       0       0       0
  5938 ;;Total ram usage:        8 bytes
  5939 ;; Hardware stack levels used:    1
  5940 ;; Hardware stack levels required when called:    1
  5941 ;; This function calls:
  5942 ;;		_isupper
  5943 ;; This function is called by:
  5944 ;;		_efgtoa
  5945 ;;		_vfpfcnvrt
  5946 ;; This function uses a non-reentrant model
  5947 ;;
  5948                           
  5949                           	psect	text11
  5950  004760                     __ptext11:
  5951                           	callstack 0
  5952  004760                     _tolower:
  5953                           	callstack 25
  5954  004760  0EBF               	movlw	191
  5955  004762  6E09               	movwf	??_tolower^0,c
  5956  004764  0EFF               	movlw	255
  5957  004766  6E0A               	movwf	(??_tolower+1)^0,c
  5958  004768  C007  F00B         	movff	tolower@c,??_tolower+2
  5959  00476C  C008  F00C         	movff	tolower@c+1,??_tolower+3
  5960  004770  5009               	movf	??_tolower^0,w,c
  5961  004772  260B               	addwf	(??_tolower+2)^0,f,c
  5962  004774  500A               	movf	(??_tolower+1)^0,w,c
  5963  004776  220C               	addwfc	(??_tolower+3)^0,f,c
  5964  004778  500C               	movf	(??_tolower+3)^0,w,c
  5965  00477A  E10A               	bnz	u4130
  5966  00477C  0E1A               	movlw	26
  5967  00477E  5C0B               	subwf	(??_tolower+2)^0,w,c
  5968  004780  A0D8               	btfss	status,0,c
  5969  004782  EFC5  F023         	goto	u4131
  5970  004786  EFC8  F023         	goto	u4130
  5971  00478A                     u4131:
  5972  00478A  0E01               	movlw	1
  5973  00478C  EFC9  F023         	goto	u4140
  5974  004790                     u4130:
  5975  004790  0E00               	movlw	0
  5976  004792                     u4140:
  5977  004792  6E0D               	movwf	_tolower$921^0,c
  5978  004794  6A0E               	clrf	(_tolower$921+1)^0,c
  5979  004796  500D               	movf	_tolower$921^0,w,c
  5980  004798  100E               	iorwf	(_tolower$921+1)^0,w,c
  5981  00479A  B4D8               	btfsc	status,2,c
  5982  00479C  EFD2  F023         	goto	u4151
  5983  0047A0  EFD4  F023         	goto	u4150
  5984  0047A4                     u4151:
  5985  0047A4  EFDB  F023         	goto	l1181
  5986  0047A8                     u4150:
  5987  0047A8  0E20               	movlw	32
  5988  0047AA  1007               	iorwf	tolower@c^0,w,c
  5989  0047AC  6E07               	movwf	?_tolower^0,c
  5990  0047AE  5008               	movf	(tolower@c+1)^0,w,c
  5991  0047B0  6E08               	movwf	(?_tolower+1)^0,c
  5992  0047B2  EFDF  F023         	goto	l1186
  5993  0047B6                     l1181:
  5994  0047B6  C007  F007         	movff	tolower@c,?_tolower
  5995  0047BA  C008  F008         	movff	tolower@c+1,?_tolower+1
  5996  0047BE                     l1186:
  5997  0047BE  0012               	return		;funcret
  5998  0047C0                     __end_of_tolower:
  5999                           	callstack 0
  6000                           
  6001 ;; *************** function _isupper *****************
  6002 ;; Defined at:
  6003 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\isupper.c"
  6004 ;; Parameters:    Size  Location     Type
  6005 ;;  c               2    0[COMRAM] int 
  6006 ;; Auto vars:     Size  Location     Type
  6007 ;;		None
  6008 ;; Return value:  Size  Location     Type
  6009 ;;                  2    0[COMRAM] int 
  6010 ;; Registers used:
  6011 ;;		wreg, status,2, status,0
  6012 ;; Tracked objects:
  6013 ;;		On entry : 0/0
  6014 ;;		On exit  : 0/0
  6015 ;;		Unchanged: 0/0
  6016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6017 ;;      Params:         2       0       0       0       0       0       0
  6018 ;;      Locals:         0       0       0       0       0       0       0
  6019 ;;      Temps:          4       0       0       0       0       0       0
  6020 ;;      Totals:         6       0       0       0       0       0       0
  6021 ;;Total ram usage:        6 bytes
  6022 ;; Hardware stack levels used:    1
  6023 ;; This function calls:
  6024 ;;		Nothing
  6025 ;; This function is called by:
  6026 ;;		_efgtoa
  6027 ;;		_vfpfcnvrt
  6028 ;;		_tolower
  6029 ;; This function uses a non-reentrant model
  6030 ;;
  6031                           
  6032                           	psect	text12
  6033  004542                     __ptext12:
  6034                           	callstack 0
  6035  004542                     _isupper:
  6036                           	callstack 25
  6037  004542  0EBF               	movlw	191
  6038  004544  6E03               	movwf	??_isupper^0,c
  6039  004546  0EFF               	movlw	255
  6040  004548  6E04               	movwf	(??_isupper+1)^0,c
  6041  00454A  C001  F005         	movff	isupper@c,??_isupper+2
  6042  00454E  C002  F006         	movff	isupper@c+1,??_isupper+3
  6043  004552  5003               	movf	??_isupper^0,w,c
  6044  004554  2605               	addwf	(??_isupper+2)^0,f,c
  6045  004556  5004               	movf	(??_isupper+1)^0,w,c
  6046  004558  2206               	addwfc	(??_isupper+3)^0,f,c
  6047  00455A  5006               	movf	(??_isupper+3)^0,w,c
  6048  00455C  E10A               	bnz	u3280
  6049  00455E  0E1A               	movlw	26
  6050  004560  5C05               	subwf	(??_isupper+2)^0,w,c
  6051  004562  A0D8               	btfss	status,0,c
  6052  004564  EFB6  F022         	goto	u3281
  6053  004568  EFB9  F022         	goto	u3280
  6054  00456C                     u3281:
  6055  00456C  0E01               	movlw	1
  6056  00456E  EFBA  F022         	goto	u3290
  6057  004572                     u3280:
  6058  004572  0E00               	movlw	0
  6059  004574                     u3290:
  6060  004574  6E01               	movwf	?_isupper^0,c
  6061  004576  6A02               	clrf	(?_isupper+1)^0,c
  6062  004578  0012               	return		;funcret
  6063  00457A                     __end_of_isupper:
  6064                           	callstack 0
  6065                           
  6066 ;; *************** function _strcpy *****************
  6067 ;; Defined at:
  6068 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  6069 ;; Parameters:    Size  Location     Type
  6070 ;;  dest            2    0[COMRAM] PTR unsigned char 
  6071 ;;		 -> dbuf(80), 
  6072 ;;  src             2    2[COMRAM] PTR const unsigned char 
  6073 ;;		 -> STR_37(4), STR_36(4), STR_33(4), STR_32(4), 
  6074 ;;		 -> dbuf(80), 
  6075 ;; Auto vars:     Size  Location     Type
  6076 ;;  d               2    8[COMRAM] PTR unsigned char 
  6077 ;;		 -> dbuf(80), 
  6078 ;;  s               2    6[COMRAM] PTR const unsigned char 
  6079 ;;		 -> STR_37(4), STR_36(4), STR_33(4), STR_32(4), 
  6080 ;;		 -> dbuf(80), 
  6081 ;; Return value:  Size  Location     Type
  6082 ;;                  2    0[COMRAM] PTR unsigned char 
  6083 ;; Registers used:
  6084 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6085 ;; Tracked objects:
  6086 ;;		On entry : 0/0
  6087 ;;		On exit  : 0/0
  6088 ;;		Unchanged: 0/0
  6089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6090 ;;      Params:         4       0       0       0       0       0       0
  6091 ;;      Locals:         4       0       0       0       0       0       0
  6092 ;;      Temps:          2       0       0       0       0       0       0
  6093 ;;      Totals:        10       0       0       0       0       0       0
  6094 ;;Total ram usage:       10 bytes
  6095 ;; Hardware stack levels used:    1
  6096 ;; This function calls:
  6097 ;;		Nothing
  6098 ;; This function is called by:
  6099 ;;		_efgtoa
  6100 ;; This function uses a non-reentrant model
  6101 ;;
  6102                           
  6103                           	psect	text13
  6104  0046A8                     __ptext13:
  6105                           	callstack 0
  6106  0046A8                     _strcpy:
  6107                           	callstack 25
  6108  0046A8  C003  F007         	movff	strcpy@src,strcpy@s
  6109  0046AC  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  6110  0046B0  C001  F009         	movff	strcpy@dest,strcpy@d
  6111  0046B4  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  6112  0046B8                     l3809:
  6113  0046B8  5007               	movf	strcpy@s^0,w,c
  6114  0046BA  6E05               	movwf	??_strcpy^0,c
  6115  0046BC  5008               	movf	(strcpy@s+1)^0,w,c
  6116  0046BE  6E06               	movwf	(??_strcpy+1)^0,c
  6117  0046C0  4A07               	infsnz	strcpy@s^0,f,c
  6118  0046C2  2A08               	incf	(strcpy@s+1)^0,f,c
  6119  0046C4  C005  FFF6         	movff	??_strcpy,tblptrl
  6120  0046C8  C006  FFF7         	movff	??_strcpy+1,tblptrh
  6121  0046CC  6AF8               	clrf	tblptru,c
  6122  0046CE  C009  FFD9         	movff	strcpy@d,fsr2l
  6123  0046D2  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  6124  0046D6  4A09               	infsnz	strcpy@d^0,f,c
  6125  0046D8  2A0A               	incf	(strcpy@d+1)^0,f,c
  6126  0046DA  0E05               	movlw	(high __ramtop+-1)
  6127  0046DC  64F7               	cpfsgt	tblptrh,c
  6128  0046DE  D003               	bra	u4117
  6129  0046E0  0008               	tblrd		*
  6130  0046E2  50F5               	movf	tablat,w,c
  6131  0046E4  D005               	bra	u4110
  6132  0046E6                     u4117:
  6133  0046E6  CFF6 FFE9          	movff	tblptrl,fsr0l
  6134  0046EA  CFF7 FFEA          	movff	tblptrh,fsr0h
  6135  0046EE  50EF               	movf	indf0,w,c
  6136  0046F0                     u4110:
  6137  0046F0  6EDF               	movwf	indf2,c
  6138  0046F2  50DF               	movf	indf2,w,c
  6139  0046F4  A4D8               	btfss	status,2,c
  6140  0046F6  EF7F  F023         	goto	u4121
  6141  0046FA  EF81  F023         	goto	u4120
  6142  0046FE                     u4121:
  6143  0046FE  EF5C  F023         	goto	l3809
  6144  004702                     u4120:
  6145  004702  0012               	return		;funcret
  6146  004704                     __end_of_strcpy:
  6147                           	callstack 0
  6148                           
  6149 ;; *************** function _pad *****************
  6150 ;; Defined at:
  6151 ;;		line 72 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6152 ;; Parameters:    Size  Location     Type
  6153 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6154 ;;		 -> sprintf@f(6), 
  6155 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6156 ;;		 -> dbuf(80), 
  6157 ;;  p               2   20[COMRAM] int 
  6158 ;; Auto vars:     Size  Location     Type
  6159 ;;  w               2   25[COMRAM] int 
  6160 ;;  i               2   23[COMRAM] int 
  6161 ;; Return value:  Size  Location     Type
  6162 ;;                  2   16[COMRAM] int 
  6163 ;; Registers used:
  6164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6165 ;; Tracked objects:
  6166 ;;		On entry : 0/0
  6167 ;;		On exit  : 0/0
  6168 ;;		Unchanged: 0/0
  6169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6170 ;;      Params:         6       0       0       0       0       0       0
  6171 ;;      Locals:         4       0       0       0       0       0       0
  6172 ;;      Temps:          1       0       0       0       0       0       0
  6173 ;;      Totals:        11       0       0       0       0       0       0
  6174 ;;Total ram usage:       11 bytes
  6175 ;; Hardware stack levels used:    1
  6176 ;; Hardware stack levels required when called:    3
  6177 ;; This function calls:
  6178 ;;		_fputc
  6179 ;;		_fputs
  6180 ;;		_strlen
  6181 ;; This function is called by:
  6182 ;;		_efgtoa
  6183 ;; This function uses a non-reentrant model
  6184 ;;
  6185                           
  6186                           	psect	text14
  6187  004C5E                     __ptext14:
  6188                           	callstack 0
  6189  004C5E                     _pad:
  6190                           	callstack 22
  6191  004C5E                     
  6192                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pad(FIL
      +                          E *fp, char *buf, int p);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c
      +                          : 73: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 74:     int i, 
      +                          w;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 77:     if (flags & 
      +                          (1 << 0)) {
  6193  004C5E  0100               	movlb	0	; () banked
  6194  004C60  A1EE               	btfss	_flags& (0+255),0,b
  6195  004C62  EF35  F026         	goto	u4001
  6196  004C66  EF37  F026         	goto	u4000
  6197  004C6A                     u4001:
  6198  004C6A  EF41  F026         	goto	l3767
  6199  004C6E                     u4000:
  6200  004C6E                     
  6201                           ; BSR set to: 0
  6202                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs((con
      +                          st char *)buf, fp);
  6203  004C6E  C013  F00A         	movff	pad@buf,fputs@s
  6204  004C72  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6205  004C76  C011  F00C         	movff	pad@fp,fputs@fp
  6206  004C7A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6207  004C7E  ECBD  F022         	call	_fputs	;wreg free
  6208  004C82                     l3767:
  6209                           
  6210                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ? 
      +                          0 : p;
  6211  004C82  BE16               	btfsc	(pad@p+1)^0,7,c
  6212  004C84  EF46  F026         	goto	u4011
  6213  004C88  EF48  F026         	goto	u4010
  6214  004C8C                     u4011:
  6215  004C8C  EF4E  F026         	goto	l3771
  6216  004C90                     u4010:
  6217  004C90  C015  F01A         	movff	pad@p,pad@w
  6218  004C94  C016  F01B         	movff	pad@p+1,pad@w+1
  6219  004C98  EF52  F026         	goto	l930
  6220  004C9C                     l3771:
  6221  004C9C  0E00               	movlw	0
  6222  004C9E  6E1B               	movwf	(pad@w+1)^0,c
  6223  004CA0  0E00               	movlw	0
  6224  004CA2  6E1A               	movwf	pad@w^0,c
  6225  004CA4                     l930:
  6226                           
  6227                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6228  004CA4  0E00               	movlw	0
  6229  004CA6  6E19               	movwf	(pad@i+1)^0,c
  6230  004CA8  0E00               	movlw	0
  6231  004CAA  6E18               	movwf	pad@i^0,c
  6232                           
  6233                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  6234  004CAC  EF64  F026         	goto	l3777
  6235  004CB0                     l3773:
  6236                           
  6237                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc(' ',
      +                           fp);
  6238  004CB0  0E00               	movlw	0
  6239  004CB2  6E02               	movwf	(fputc@c+1)^0,c
  6240  004CB4  0E20               	movlw	32
  6241  004CB6  6E01               	movwf	fputc@c^0,c
  6242  004CB8  C011  F003         	movff	pad@fp,fputc@fp
  6243  004CBC  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6244  004CC0  EC92  F026         	call	_fputc	;wreg free
  6245  004CC4                     
  6246                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6247  004CC4  4A18               	infsnz	pad@i^0,f,c
  6248  004CC6  2A19               	incf	(pad@i+1)^0,f,c
  6249  004CC8                     l3777:
  6250                           
  6251                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  6252  004CC8  501A               	movf	pad@w^0,w,c
  6253  004CCA  5C18               	subwf	pad@i^0,w,c
  6254  004CCC  5019               	movf	(pad@i+1)^0,w,c
  6255  004CCE  0A80               	xorlw	128
  6256  004CD0  6E17               	movwf	??_pad^0,c
  6257  004CD2  501B               	movf	(pad@w+1)^0,w,c
  6258  004CD4  0A80               	xorlw	128
  6259  004CD6  5817               	subwfb	??_pad^0,w,c
  6260  004CD8  A0D8               	btfss	status,0,c
  6261  004CDA  EF71  F026         	goto	u4021
  6262  004CDE  EF73  F026         	goto	u4020
  6263  004CE2                     u4021:
  6264  004CE2  EF58  F026         	goto	l3773
  6265  004CE6                     u4020:
  6266  004CE6                     
  6267                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(flags & 
      +                          (1 << 0))) {
  6268  004CE6  0100               	movlb	0	; () banked
  6269  004CE8  B1EE               	btfsc	_flags& (0+255),0,b
  6270  004CEA  EF79  F026         	goto	u4031
  6271  004CEE  EF7B  F026         	goto	u4030
  6272  004CF2                     u4031:
  6273  004CF2  EF85  F026         	goto	l3781
  6274  004CF6                     u4030:
  6275  004CF6                     
  6276                           ; BSR set to: 0
  6277                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs((con
      +                          st char *)buf, fp);
  6278  004CF6  C013  F00A         	movff	pad@buf,fputs@s
  6279  004CFA  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6280  004CFE  C011  F00C         	movff	pad@fp,fputs@fp
  6281  004D02  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6282  004D06  ECBD  F022         	call	_fputs	;wreg free
  6283  004D0A                     l3781:
  6284                           
  6285                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return strlen(
      +                          buf) + w;
  6286  004D0A  C013  F001         	movff	pad@buf,strlen@s
  6287  004D0E  C014  F002         	movff	pad@buf+1,strlen@s+1
  6288  004D12  EC4E  F022         	call	_strlen	;wreg free
  6289  004D16  501A               	movf	pad@w^0,w,c
  6290  004D18  2401               	addwf	?_strlen^0,w,c
  6291  004D1A  6E11               	movwf	?_pad^0,c
  6292  004D1C  501B               	movf	(pad@w+1)^0,w,c
  6293  004D1E  2002               	addwfc	(?_strlen+1)^0,w,c
  6294  004D20  6E12               	movwf	(?_pad+1)^0,c
  6295  004D22  0012               	return		;funcret
  6296  004D24                     __end_of_pad:
  6297                           	callstack 0
  6298                           
  6299 ;; *************** function _strlen *****************
  6300 ;; Defined at:
  6301 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strlen.c"
  6302 ;; Parameters:    Size  Location     Type
  6303 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6304 ;;		 -> dbuf(80), 
  6305 ;; Auto vars:     Size  Location     Type
  6306 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6307 ;;		 -> dbuf(80), 
  6308 ;; Return value:  Size  Location     Type
  6309 ;;                  2    0[COMRAM] unsigned int 
  6310 ;; Registers used:
  6311 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6312 ;; Tracked objects:
  6313 ;;		On entry : 0/0
  6314 ;;		On exit  : 0/0
  6315 ;;		Unchanged: 0/0
  6316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6317 ;;      Params:         2       0       0       0       0       0       0
  6318 ;;      Locals:         2       0       0       0       0       0       0
  6319 ;;      Temps:          0       0       0       0       0       0       0
  6320 ;;      Totals:         4       0       0       0       0       0       0
  6321 ;;Total ram usage:        4 bytes
  6322 ;; Hardware stack levels used:    1
  6323 ;; This function calls:
  6324 ;;		Nothing
  6325 ;; This function is called by:
  6326 ;;		_pad
  6327 ;; This function uses a non-reentrant model
  6328 ;;
  6329                           
  6330                           	psect	text15
  6331  00449C                     __ptext15:
  6332                           	callstack 0
  6333  00449C                     _strlen:
  6334                           	callstack 24
  6335  00449C  C001  F003         	movff	strlen@s,strlen@a
  6336  0044A0  C002  F004         	movff	strlen@s+1,strlen@a+1
  6337  0044A4  EF56  F022         	goto	l3303
  6338  0044A8                     l3301:
  6339  0044A8  4A01               	infsnz	strlen@s^0,f,c
  6340  0044AA  2A02               	incf	(strlen@s+1)^0,f,c
  6341  0044AC                     l3303:
  6342  0044AC  C001  FFD9         	movff	strlen@s,fsr2l
  6343  0044B0  C002  FFDA         	movff	strlen@s+1,fsr2h
  6344  0044B4  50DF               	movf	indf2,w,c
  6345  0044B6  A4D8               	btfss	status,2,c
  6346  0044B8  EF60  F022         	goto	u3271
  6347  0044BC  EF62  F022         	goto	u3270
  6348  0044C0                     u3271:
  6349  0044C0  EF54  F022         	goto	l3301
  6350  0044C4                     u3270:
  6351  0044C4  5003               	movf	strlen@a^0,w,c
  6352  0044C6  5C01               	subwf	strlen@s^0,w,c
  6353  0044C8  6E01               	movwf	?_strlen^0,c
  6354  0044CA  5004               	movf	(strlen@a+1)^0,w,c
  6355  0044CC  5802               	subwfb	(strlen@s+1)^0,w,c
  6356  0044CE  6E02               	movwf	(?_strlen+1)^0,c
  6357  0044D0  0012               	return		;funcret
  6358  0044D2                     __end_of_strlen:
  6359                           	callstack 0
  6360                           
  6361 ;; *************** function _fputs *****************
  6362 ;; Defined at:
  6363 ;;		line 8 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  6364 ;; Parameters:    Size  Location     Type
  6365 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6366 ;;		 -> dbuf(80), 
  6367 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6368 ;;		 -> sprintf@f(6), 
  6369 ;; Auto vars:     Size  Location     Type
  6370 ;;  i               2   14[COMRAM] int 
  6371 ;;  c               1   13[COMRAM] unsigned char 
  6372 ;; Return value:  Size  Location     Type
  6373 ;;                  2    9[COMRAM] int 
  6374 ;; Registers used:
  6375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6376 ;; Tracked objects:
  6377 ;;		On entry : 0/0
  6378 ;;		On exit  : 0/0
  6379 ;;		Unchanged: 0/0
  6380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6381 ;;      Params:         4       0       0       0       0       0       0
  6382 ;;      Locals:         3       0       0       0       0       0       0
  6383 ;;      Temps:          0       0       0       0       0       0       0
  6384 ;;      Totals:         7       0       0       0       0       0       0
  6385 ;;Total ram usage:        7 bytes
  6386 ;; Hardware stack levels used:    1
  6387 ;; Hardware stack levels required when called:    2
  6388 ;; This function calls:
  6389 ;;		_fputc
  6390 ;; This function is called by:
  6391 ;;		_pad
  6392 ;; This function uses a non-reentrant model
  6393 ;;
  6394                           
  6395                           	psect	text16
  6396  00457A                     __ptext16:
  6397                           	callstack 0
  6398  00457A                     _fputs:
  6399                           	callstack 22
  6400  00457A  0E00               	movlw	0
  6401  00457C  6E10               	movwf	(fputs@i+1)^0,c
  6402  00457E  0E00               	movlw	0
  6403  004580  6E0F               	movwf	fputs@i^0,c
  6404  004582  EFCE  F022         	goto	l3297
  6405  004586                     l3293:
  6406  004586  C00E  F001         	movff	fputs@c,fputc@c
  6407  00458A  6A02               	clrf	(fputc@c+1)^0,c
  6408  00458C  C00C  F003         	movff	fputs@fp,fputc@fp
  6409  004590  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6410  004594  EC92  F026         	call	_fputc	;wreg free
  6411  004598  4A0F               	infsnz	fputs@i^0,f,c
  6412  00459A  2A10               	incf	(fputs@i+1)^0,f,c
  6413  00459C                     l3297:
  6414  00459C  500F               	movf	fputs@i^0,w,c
  6415  00459E  240A               	addwf	fputs@s^0,w,c
  6416  0045A0  6ED9               	movwf	fsr2l,c
  6417  0045A2  5010               	movf	(fputs@i+1)^0,w,c
  6418  0045A4  200B               	addwfc	(fputs@s+1)^0,w,c
  6419  0045A6  6EDA               	movwf	fsr2h,c
  6420  0045A8  50DF               	movf	indf2,w,c
  6421  0045AA  6E0E               	movwf	fputs@c^0,c
  6422  0045AC  500E               	movf	fputs@c^0,w,c
  6423  0045AE  A4D8               	btfss	status,2,c
  6424  0045B0  EFDC  F022         	goto	u3261
  6425  0045B4  EFDE  F022         	goto	u3260
  6426  0045B8                     u3261:
  6427  0045B8  EFC3  F022         	goto	l3293
  6428  0045BC                     u3260:
  6429  0045BC  0012               	return		;funcret
  6430  0045BE                     __end_of_fputs:
  6431                           	callstack 0
  6432                           
  6433 ;; *************** function _fputc *****************
  6434 ;; Defined at:
  6435 ;;		line 8 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  6436 ;; Parameters:    Size  Location     Type
  6437 ;;  c               2    0[COMRAM] int 
  6438 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6439 ;;		 -> sprintf@f(6), 
  6440 ;; Auto vars:     Size  Location     Type
  6441 ;;		None
  6442 ;; Return value:  Size  Location     Type
  6443 ;;                  2    0[COMRAM] int 
  6444 ;; Registers used:
  6445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6446 ;; Tracked objects:
  6447 ;;		On entry : 0/0
  6448 ;;		On exit  : 0/0
  6449 ;;		Unchanged: 0/0
  6450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6451 ;;      Params:         4       0       0       0       0       0       0
  6452 ;;      Locals:         0       0       0       0       0       0       0
  6453 ;;      Temps:          5       0       0       0       0       0       0
  6454 ;;      Totals:         9       0       0       0       0       0       0
  6455 ;;Total ram usage:        9 bytes
  6456 ;; Hardware stack levels used:    1
  6457 ;; Hardware stack levels required when called:    1
  6458 ;; This function calls:
  6459 ;;		_putch
  6460 ;; This function is called by:
  6461 ;;		_pad
  6462 ;;		_vfpfcnvrt
  6463 ;;		_fputs
  6464 ;; This function uses a non-reentrant model
  6465 ;;
  6466                           
  6467                           	psect	text17
  6468  004D24                     __ptext17:
  6469                           	callstack 0
  6470  004D24                     _fputc:
  6471                           	callstack 25
  6472  004D24  5003               	movf	fputc@fp^0,w,c
  6473  004D26  1004               	iorwf	(fputc@fp+1)^0,w,c
  6474  004D28  B4D8               	btfsc	status,2,c
  6475  004D2A  EF99  F026         	goto	u2831
  6476  004D2E  EF9B  F026         	goto	u2830
  6477  004D32                     u2831:
  6478  004D32  EFA4  F026         	goto	l3079
  6479  004D36                     u2830:
  6480  004D36  5003               	movf	fputc@fp^0,w,c
  6481  004D38  1004               	iorwf	(fputc@fp+1)^0,w,c
  6482  004D3A  A4D8               	btfss	status,2,c
  6483  004D3C  EFA2  F026         	goto	u2841
  6484  004D40  EFA4  F026         	goto	u2840
  6485  004D44                     u2841:
  6486  004D44  EFA9  F026         	goto	l3081
  6487  004D48                     u2840:
  6488  004D48                     l3079:
  6489  004D48  5001               	movf	fputc@c^0,w,c
  6490  004D4A  ECE9  F021         	call	_putch
  6491  004D4E  EFF6  F026         	goto	l1144
  6492  004D52                     l3081:
  6493  004D52  EE20 F004          	lfsr	2,4
  6494  004D56  5003               	movf	fputc@fp^0,w,c
  6495  004D58  26D9               	addwf	fsr2l,f,c
  6496  004D5A  5004               	movf	(fputc@fp+1)^0,w,c
  6497  004D5C  22DA               	addwfc	fsr2h,f,c
  6498  004D5E  50DE               	movf	postinc2,w,c
  6499  004D60  10DE               	iorwf	postinc2,w,c
  6500  004D62  B4D8               	btfsc	status,2,c
  6501  004D64  EFB6  F026         	goto	u2851
  6502  004D68  EFB8  F026         	goto	u2850
  6503  004D6C                     u2851:
  6504  004D6C  EFD3  F026         	goto	l3085
  6505  004D70                     u2850:
  6506  004D70  EE20 F004          	lfsr	2,4
  6507  004D74  5003               	movf	fputc@fp^0,w,c
  6508  004D76  26D9               	addwf	fsr2l,f,c
  6509  004D78  5004               	movf	(fputc@fp+1)^0,w,c
  6510  004D7A  22DA               	addwfc	fsr2h,f,c
  6511  004D7C  EE10 F002          	lfsr	1,2
  6512  004D80  5003               	movf	fputc@fp^0,w,c
  6513  004D82  26E1               	addwf	fsr1l,f,c
  6514  004D84  5004               	movf	(fputc@fp+1)^0,w,c
  6515  004D86  22E2               	addwfc	fsr1h,f,c
  6516  004D88  50DE               	movf	postinc2,w,c
  6517  004D8A  5CE6               	subwf	postinc1,w,c
  6518  004D8C  50E6               	movf	postinc1,w,c
  6519  004D8E  0A80               	xorlw	128
  6520  004D90  6E09               	movwf	(??_fputc+4)^0,c
  6521  004D92  50DE               	movf	postinc2,w,c
  6522  004D94  0A80               	xorlw	128
  6523  004D96  5809               	subwfb	(??_fputc+4)^0,w,c
  6524  004D98  B0D8               	btfsc	status,0,c
  6525  004D9A  EFD1  F026         	goto	u2861
  6526  004D9E  EFD3  F026         	goto	u2860
  6527  004DA2                     u2861:
  6528  004DA2  EFF6  F026         	goto	l1144
  6529  004DA6                     u2860:
  6530  004DA6                     l3085:
  6531  004DA6  EE20 F002          	lfsr	2,2
  6532  004DAA  5003               	movf	fputc@fp^0,w,c
  6533  004DAC  26D9               	addwf	fsr2l,f,c
  6534  004DAE  5004               	movf	(fputc@fp+1)^0,w,c
  6535  004DB0  22DA               	addwfc	fsr2h,f,c
  6536  004DB2  CFDE F005          	movff	postinc2,??_fputc
  6537  004DB6  CFDD F006          	movff	postdec2,??_fputc+1
  6538  004DBA  C003  FFD9         	movff	fputc@fp,fsr2l
  6539  004DBE  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6540  004DC2  CFDE F007          	movff	postinc2,??_fputc+2
  6541  004DC6  CFDD F008          	movff	postdec2,??_fputc+3
  6542  004DCA  5005               	movf	??_fputc^0,w,c
  6543  004DCC  2407               	addwf	(??_fputc+2)^0,w,c
  6544  004DCE  6ED9               	movwf	fsr2l,c
  6545  004DD0  5006               	movf	(??_fputc+1)^0,w,c
  6546  004DD2  2008               	addwfc	(??_fputc+3)^0,w,c
  6547  004DD4  6EDA               	movwf	fsr2h,c
  6548  004DD6  C001  FFDF         	movff	fputc@c,indf2
  6549  004DDA  EE20 F002          	lfsr	2,2
  6550  004DDE  5003               	movf	fputc@fp^0,w,c
  6551  004DE0  26D9               	addwf	fsr2l,f,c
  6552  004DE2  5004               	movf	(fputc@fp+1)^0,w,c
  6553  004DE4  22DA               	addwfc	fsr2h,f,c
  6554  004DE6  2ADE               	incf	postinc2,f,c
  6555  004DE8  0E00               	movlw	0
  6556  004DEA  22DD               	addwfc	postdec2,f,c
  6557  004DEC                     l1144:
  6558  004DEC  0012               	return		;funcret
  6559  004DEE                     __end_of_fputc:
  6560                           	callstack 0
  6561                           
  6562 ;; *************** function _putch *****************
  6563 ;; Defined at:
  6564 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\putch.c"
  6565 ;; Parameters:    Size  Location     Type
  6566 ;;  c               1    wreg     unsigned char 
  6567 ;; Auto vars:     Size  Location     Type
  6568 ;;  c               1    0[COMRAM] unsigned char 
  6569 ;; Return value:  Size  Location     Type
  6570 ;;                  1    wreg      void 
  6571 ;; Registers used:
  6572 ;;		wreg
  6573 ;; Tracked objects:
  6574 ;;		On entry : 0/0
  6575 ;;		On exit  : 0/0
  6576 ;;		Unchanged: 0/0
  6577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6578 ;;      Params:         0       0       0       0       0       0       0
  6579 ;;      Locals:         0       0       0       0       0       0       0
  6580 ;;      Temps:          0       0       0       0       0       0       0
  6581 ;;      Totals:         0       0       0       0       0       0       0
  6582 ;;Total ram usage:        0 bytes
  6583 ;; Hardware stack levels used:    1
  6584 ;; This function calls:
  6585 ;;		Nothing
  6586 ;; This function is called by:
  6587 ;;		_fputc
  6588 ;; This function uses a non-reentrant model
  6589 ;;
  6590                           
  6591                           	psect	text18
  6592  0043D2                     __ptext18:
  6593                           	callstack 0
  6594  0043D2                     _putch:
  6595                           	callstack 25
  6596  0043D2  0012               	return		;funcret
  6597  0043D4                     __end_of_putch:
  6598                           	callstack 0
  6599                           
  6600 ;; *************** function _floorf *****************
  6601 ;; Defined at:
  6602 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\floorf.c"
  6603 ;; Parameters:    Size  Location     Type
  6604 ;;  x               4   25[COMRAM] float 
  6605 ;; Auto vars:     Size  Location     Type
  6606 ;;  u               4   41[COMRAM] struct .
  6607 ;;  m               4   35[COMRAM] unsigned long 
  6608 ;;  e               2   39[COMRAM] int 
  6609 ;; Return value:  Size  Location     Type
  6610 ;;                  4   25[COMRAM] float 
  6611 ;; Registers used:
  6612 ;;		wreg, status,2, status,0
  6613 ;; Tracked objects:
  6614 ;;		On entry : 0/0
  6615 ;;		On exit  : 0/0
  6616 ;;		Unchanged: 0/0
  6617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6618 ;;      Params:         4       0       0       0       0       0       0
  6619 ;;      Locals:        10       0       0       0       0       0       0
  6620 ;;      Temps:          6       0       0       0       0       0       0
  6621 ;;      Totals:        20       0       0       0       0       0       0
  6622 ;;Total ram usage:       20 bytes
  6623 ;; Hardware stack levels used:    1
  6624 ;; This function calls:
  6625 ;;		Nothing
  6626 ;; This function is called by:
  6627 ;;		_efgtoa
  6628 ;; This function uses a non-reentrant model
  6629 ;;
  6630                           
  6631                           	psect	text19
  6632  005950                     __ptext19:
  6633                           	callstack 0
  6634  005950                     _floorf:
  6635                           	callstack 25
  6636  005950  C0E0  F02A         	movff	floorf@F524,floorf@u
  6637  005954  C0E1  F02B         	movff	floorf@F524+1,floorf@u+1
  6638  005958  C0E2  F02C         	movff	floorf@F524+2,floorf@u+2
  6639  00595C  C0E3  F02D         	movff	floorf@F524+3,floorf@u+3
  6640  005960  C01A  F02A         	movff	floorf@x,floorf@u
  6641  005964  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  6642  005968  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  6643  00596C  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  6644  005970  0E81               	movlw	129
  6645  005972  6E1E               	movwf	??_floorf^0,c
  6646  005974  0EFF               	movlw	255
  6647  005976  6E1F               	movwf	(??_floorf+1)^0,c
  6648  005978  C02A  F020         	movff	floorf@u,??_floorf+2
  6649  00597C  C02B  F021         	movff	floorf@u+1,??_floorf+3
  6650  005980  C02C  F022         	movff	floorf@u+2,??_floorf+4
  6651  005984  C02D  F023         	movff	floorf@u+3,??_floorf+5
  6652  005988  0E18               	movlw	24
  6653  00598A  EFCC  F02C         	goto	u4160
  6654  00598E                     u4165:
  6655  00598E  90D8               	bcf	status,0,c
  6656  005990  3223               	rrcf	(??_floorf+5)^0,f,c
  6657  005992  3222               	rrcf	(??_floorf+4)^0,f,c
  6658  005994  3221               	rrcf	(??_floorf+3)^0,f,c
  6659  005996  3220               	rrcf	(??_floorf+2)^0,f,c
  6660  005998                     u4160:
  6661  005998  2EE8               	decfsz	wreg,f,c
  6662  00599A  EFC7  F02C         	goto	u4165
  6663  00599E  5020               	movf	(??_floorf+2)^0,w,c
  6664  0059A0  241E               	addwf	??_floorf^0,w,c
  6665  0059A2  6E28               	movwf	floorf@e^0,c
  6666  0059A4  0E00               	movlw	0
  6667  0059A6  201F               	addwfc	(??_floorf+1)^0,w,c
  6668  0059A8  6E29               	movwf	(floorf@e+1)^0,c
  6669  0059AA  BE29               	btfsc	(floorf@e+1)^0,7,c
  6670  0059AC  EFE1  F02C         	goto	u4171
  6671  0059B0  5029               	movf	(floorf@e+1)^0,w,c
  6672  0059B2  E109               	bnz	u4170
  6673  0059B4  0E17               	movlw	23
  6674  0059B6  5C28               	subwf	floorf@e^0,w,c
  6675  0059B8  A0D8               	btfss	status,0,c
  6676  0059BA  EFE1  F02C         	goto	u4171
  6677  0059BE  EFE3  F02C         	goto	u4170
  6678  0059C2                     u4171:
  6679  0059C2  EFED  F02C         	goto	l3827
  6680  0059C6                     u4170:
  6681  0059C6                     l3825:
  6682  0059C6  C01A  F01A         	movff	floorf@x,?_floorf
  6683  0059CA  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  6684  0059CE  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  6685  0059D2  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  6686  0059D6  EFB0  F02D         	goto	l1105
  6687  0059DA                     l3827:
  6688  0059DA  BE29               	btfsc	(floorf@e+1)^0,7,c
  6689  0059DC  EFF2  F02C         	goto	u4181
  6690  0059E0  EFF4  F02C         	goto	u4180
  6691  0059E4                     u4181:
  6692  0059E4  EF64  F02D         	goto	l3837
  6693  0059E8                     u4180:
  6694  0059E8  C028  F01E         	movff	floorf@e,??_floorf
  6695  0059EC  0EFF               	movlw	255
  6696  0059EE  6E1F               	movwf	(??_floorf+1)^0,c
  6697  0059F0  0EFF               	movlw	255
  6698  0059F2  6E20               	movwf	(??_floorf+2)^0,c
  6699  0059F4  0E7F               	movlw	127
  6700  0059F6  6E21               	movwf	(??_floorf+3)^0,c
  6701  0059F8  0E00               	movlw	0
  6702  0059FA  6E22               	movwf	(??_floorf+4)^0,c
  6703  0059FC                     u4195:
  6704  0059FC  661E               	tstfsz	??_floorf^0,c
  6705  0059FE  EF03  F02D         	goto	u4196
  6706  005A02  EF0B  F02D         	goto	u4197
  6707  005A06                     u4196:
  6708  005A06  3422               	rlcf	(??_floorf+4)^0,w,c
  6709  005A08  3222               	rrcf	(??_floorf+4)^0,f,c
  6710  005A0A  3221               	rrcf	(??_floorf+3)^0,f,c
  6711  005A0C  3220               	rrcf	(??_floorf+2)^0,f,c
  6712  005A0E  321F               	rrcf	(??_floorf+1)^0,f,c
  6713  005A10  2E1E               	decfsz	??_floorf^0,f,c
  6714  005A12  EFFE  F02C         	goto	u4195
  6715  005A16                     u4197:
  6716  005A16  C01F  F024         	movff	??_floorf+1,floorf@m
  6717  005A1A  C020  F025         	movff	??_floorf+2,floorf@m+1
  6718  005A1E  C021  F026         	movff	??_floorf+3,floorf@m+2
  6719  005A22  C022  F027         	movff	??_floorf+4,floorf@m+3
  6720  005A26  5024               	movf	floorf@m^0,w,c
  6721  005A28  142A               	andwf	floorf@u^0,w,c
  6722  005A2A  6E1E               	movwf	??_floorf^0,c
  6723  005A2C  5025               	movf	(floorf@m+1)^0,w,c
  6724  005A2E  142B               	andwf	(floorf@u+1)^0,w,c
  6725  005A30  6E1F               	movwf	(??_floorf+1)^0,c
  6726  005A32  5026               	movf	(floorf@m+2)^0,w,c
  6727  005A34  142C               	andwf	(floorf@u+2)^0,w,c
  6728  005A36  6E20               	movwf	(??_floorf+2)^0,c
  6729  005A38  5027               	movf	(floorf@m+3)^0,w,c
  6730  005A3A  142D               	andwf	(floorf@u+3)^0,w,c
  6731  005A3C  6E21               	movwf	(??_floorf+3)^0,c
  6732  005A3E  501E               	movf	??_floorf^0,w,c
  6733  005A40  101F               	iorwf	(??_floorf+1)^0,w,c
  6734  005A42  1020               	iorwf	(??_floorf+2)^0,w,c
  6735  005A44  1021               	iorwf	(??_floorf+3)^0,w,c
  6736  005A46  A4D8               	btfss	status,2,c
  6737  005A48  EF28  F02D         	goto	u4201
  6738  005A4C  EF2A  F02D         	goto	u4200
  6739  005A50                     u4201:
  6740  005A50  EF2C  F02D         	goto	l3833
  6741  005A54                     u4200:
  6742  005A54  EFE3  F02C         	goto	l3825
  6743  005A58                     l3833:
  6744  005A58  C02A  F01E         	movff	floorf@u,??_floorf
  6745  005A5C  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  6746  005A60  C02C  F020         	movff	floorf@u+2,??_floorf+2
  6747  005A64  C02D  F021         	movff	floorf@u+3,??_floorf+3
  6748  005A68  0E20               	movlw	32
  6749  005A6A  EF3C  F02D         	goto	u4210
  6750  005A6E                     u4215:
  6751  005A6E  90D8               	bcf	status,0,c
  6752  005A70  3221               	rrcf	(??_floorf+3)^0,f,c
  6753  005A72  3220               	rrcf	(??_floorf+2)^0,f,c
  6754  005A74  321F               	rrcf	(??_floorf+1)^0,f,c
  6755  005A76  321E               	rrcf	??_floorf^0,f,c
  6756  005A78                     u4210:
  6757  005A78  2EE8               	decfsz	wreg,f,c
  6758  005A7A  EF37  F02D         	goto	u4215
  6759  005A7E  501E               	movf	??_floorf^0,w,c
  6760  005A80  101F               	iorwf	(??_floorf+1)^0,w,c
  6761  005A82  1020               	iorwf	(??_floorf+2)^0,w,c
  6762  005A84  1021               	iorwf	(??_floorf+3)^0,w,c
  6763  005A86  B4D8               	btfsc	status,2,c
  6764  005A88  EF48  F02D         	goto	u4221
  6765  005A8C  EF4A  F02D         	goto	u4220
  6766  005A90                     u4221:
  6767  005A90  EF52  F02D         	goto	l1108
  6768  005A94                     u4220:
  6769  005A94  5024               	movf	floorf@m^0,w,c
  6770  005A96  262A               	addwf	floorf@u^0,f,c
  6771  005A98  5025               	movf	(floorf@m+1)^0,w,c
  6772  005A9A  222B               	addwfc	(floorf@u+1)^0,f,c
  6773  005A9C  5026               	movf	(floorf@m+2)^0,w,c
  6774  005A9E  222C               	addwfc	(floorf@u+2)^0,f,c
  6775  005AA0  5027               	movf	(floorf@m+3)^0,w,c
  6776  005AA2  222D               	addwfc	(floorf@u+3)^0,f,c
  6777  005AA4                     l1108:
  6778  005AA4  1C24               	comf	floorf@m^0,w,c
  6779  005AA6  6E1E               	movwf	??_floorf^0,c
  6780  005AA8  1C25               	comf	(floorf@m+1)^0,w,c
  6781  005AAA  6E1F               	movwf	(??_floorf+1)^0,c
  6782  005AAC  1C26               	comf	(floorf@m+2)^0,w,c
  6783  005AAE  6E20               	movwf	(??_floorf+2)^0,c
  6784  005AB0  1C27               	comf	(floorf@m+3)^0,w,c
  6785  005AB2  6E21               	movwf	(??_floorf+3)^0,c
  6786  005AB4  501E               	movf	??_floorf^0,w,c
  6787  005AB6  162A               	andwf	floorf@u^0,f,c
  6788  005AB8  501F               	movf	(??_floorf+1)^0,w,c
  6789  005ABA  162B               	andwf	(floorf@u+1)^0,f,c
  6790  005ABC  5020               	movf	(??_floorf+2)^0,w,c
  6791  005ABE  162C               	andwf	(floorf@u+2)^0,f,c
  6792  005AC0  5021               	movf	(??_floorf+3)^0,w,c
  6793  005AC2  162D               	andwf	(floorf@u+3)^0,f,c
  6794  005AC4  EFA8  F02D         	goto	l3845
  6795  005AC8                     l3837:
  6796  005AC8  C02A  F01E         	movff	floorf@u,??_floorf
  6797  005ACC  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  6798  005AD0  C02C  F020         	movff	floorf@u+2,??_floorf+2
  6799  005AD4  C02D  F021         	movff	floorf@u+3,??_floorf+3
  6800  005AD8  0E20               	movlw	32
  6801  005ADA  EF74  F02D         	goto	u4230
  6802  005ADE                     u4235:
  6803  005ADE  90D8               	bcf	status,0,c
  6804  005AE0  3221               	rrcf	(??_floorf+3)^0,f,c
  6805  005AE2  3220               	rrcf	(??_floorf+2)^0,f,c
  6806  005AE4  321F               	rrcf	(??_floorf+1)^0,f,c
  6807  005AE6  321E               	rrcf	??_floorf^0,f,c
  6808  005AE8                     u4230:
  6809  005AE8  2EE8               	decfsz	wreg,f,c
  6810  005AEA  EF6F  F02D         	goto	u4235
  6811  005AEE  501E               	movf	??_floorf^0,w,c
  6812  005AF0  101F               	iorwf	(??_floorf+1)^0,w,c
  6813  005AF2  1020               	iorwf	(??_floorf+2)^0,w,c
  6814  005AF4  1021               	iorwf	(??_floorf+3)^0,w,c
  6815  005AF6  A4D8               	btfss	status,2,c
  6816  005AF8  EF80  F02D         	goto	u4241
  6817  005AFC  EF82  F02D         	goto	u4240
  6818  005B00                     u4241:
  6819  005B00  EF8C  F02D         	goto	l3841
  6820  005B04                     u4240:
  6821  005B04  0E00               	movlw	0
  6822  005B06  6E2A               	movwf	floorf@u^0,c
  6823  005B08  0E00               	movlw	0
  6824  005B0A  6E2B               	movwf	(floorf@u+1)^0,c
  6825  005B0C  0E00               	movlw	0
  6826  005B0E  6E2C               	movwf	(floorf@u+2)^0,c
  6827  005B10  0E00               	movlw	0
  6828  005B12  6E2D               	movwf	(floorf@u+3)^0,c
  6829  005B14  EFA8  F02D         	goto	l3845
  6830  005B18                     l3841:
  6831  005B18  90D8               	bcf	status,0,c
  6832  005B1A  342A               	rlcf	floorf@u^0,w,c
  6833  005B1C  6E1E               	movwf	??_floorf^0,c
  6834  005B1E  342B               	rlcf	(floorf@u+1)^0,w,c
  6835  005B20  6E1F               	movwf	(??_floorf+1)^0,c
  6836  005B22  342C               	rlcf	(floorf@u+2)^0,w,c
  6837  005B24  6E20               	movwf	(??_floorf+2)^0,c
  6838  005B26  342D               	rlcf	(floorf@u+3)^0,w,c
  6839  005B28  6E21               	movwf	(??_floorf+3)^0,c
  6840  005B2A  501E               	movf	??_floorf^0,w,c
  6841  005B2C  101F               	iorwf	(??_floorf+1)^0,w,c
  6842  005B2E  1020               	iorwf	(??_floorf+2)^0,w,c
  6843  005B30  1021               	iorwf	(??_floorf+3)^0,w,c
  6844  005B32  B4D8               	btfsc	status,2,c
  6845  005B34  EF9E  F02D         	goto	u4251
  6846  005B38  EFA0  F02D         	goto	u4250
  6847  005B3C                     u4251:
  6848  005B3C  EFA8  F02D         	goto	l3845
  6849  005B40                     u4250:
  6850  005B40  0E00               	movlw	0
  6851  005B42  6E2A               	movwf	floorf@u^0,c
  6852  005B44  0E00               	movlw	0
  6853  005B46  6E2B               	movwf	(floorf@u+1)^0,c
  6854  005B48  0E80               	movlw	128
  6855  005B4A  6E2C               	movwf	(floorf@u+2)^0,c
  6856  005B4C  0EBF               	movlw	191
  6857  005B4E  6E2D               	movwf	(floorf@u+3)^0,c
  6858  005B50                     l3845:
  6859  005B50  C02A  F01A         	movff	floorf@u,?_floorf
  6860  005B54  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  6861  005B58  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  6862  005B5C  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  6863  005B60                     l1105:
  6864  005B60  0012               	return		;funcret
  6865  005B62                     __end_of_floorf:
  6866                           	callstack 0
  6867                           
  6868 ;; *************** function ___fpclassifyf *****************
  6869 ;; Defined at:
  6870 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  6871 ;; Parameters:    Size  Location     Type
  6872 ;;  x               4    0[COMRAM] float 
  6873 ;; Auto vars:     Size  Location     Type
  6874 ;;  u               4   10[COMRAM] struct .
  6875 ;;  e               2    8[COMRAM] int 
  6876 ;; Return value:  Size  Location     Type
  6877 ;;                  2    0[COMRAM] int 
  6878 ;; Registers used:
  6879 ;;		wreg, status,2, status,0
  6880 ;; Tracked objects:
  6881 ;;		On entry : 0/0
  6882 ;;		On exit  : 0/0
  6883 ;;		Unchanged: 0/0
  6884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6885 ;;      Params:         4       0       0       0       0       0       0
  6886 ;;      Locals:         6       0       0       0       0       0       0
  6887 ;;      Temps:          4       0       0       0       0       0       0
  6888 ;;      Totals:        14       0       0       0       0       0       0
  6889 ;;Total ram usage:       14 bytes
  6890 ;; Hardware stack levels used:    1
  6891 ;; This function calls:
  6892 ;;		Nothing
  6893 ;; This function is called by:
  6894 ;;		_efgtoa
  6895 ;; This function uses a non-reentrant model
  6896 ;;
  6897                           
  6898                           	psect	text20
  6899  004FAA                     __ptext20:
  6900                           	callstack 0
  6901  004FAA                     ___fpclassifyf:
  6902                           	callstack 25
  6903  004FAA  C0E4  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  6904  004FAE  C0E5  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  6905  004FB2  C0E6  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  6906  004FB6  C0E7  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  6907  004FBA  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  6908  004FBE  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6909  004FC2  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6910  004FC6  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6911  004FCA  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6912  004FCE  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6913  004FD2  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6914  004FD6  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6915  004FDA  0E18               	movlw	24
  6916  004FDC  EFF5  F027         	goto	u4040
  6917  004FE0                     u4045:
  6918  004FE0  90D8               	bcf	status,0,c
  6919  004FE2  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  6920  004FE4  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  6921  004FE6  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  6922  004FE8  3205               	rrcf	??___fpclassifyf^0,f,c
  6923  004FEA                     u4040:
  6924  004FEA  2EE8               	decfsz	wreg,f,c
  6925  004FEC  EFF0  F027         	goto	u4045
  6926  004FF0  5005               	movf	??___fpclassifyf^0,w,c
  6927  004FF2  6E09               	movwf	___fpclassifyf@e^0,c
  6928  004FF4  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  6929  004FF6  5009               	movf	___fpclassifyf@e^0,w,c
  6930  004FF8  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6931  004FFA  A4D8               	btfss	status,2,c
  6932  004FFC  EF02  F028         	goto	u4051
  6933  005000  EF04  F028         	goto	u4050
  6934  005004                     u4051:
  6935  005004  EF24  F028         	goto	l3797
  6936  005008                     u4050:
  6937  005008  90D8               	bcf	status,0,c
  6938  00500A  340B               	rlcf	___fpclassifyf@u^0,w,c
  6939  00500C  6E05               	movwf	??___fpclassifyf^0,c
  6940  00500E  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6941  005010  6E06               	movwf	(??___fpclassifyf+1)^0,c
  6942  005012  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6943  005014  6E07               	movwf	(??___fpclassifyf+2)^0,c
  6944  005016  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6945  005018  6E08               	movwf	(??___fpclassifyf+3)^0,c
  6946  00501A  5005               	movf	??___fpclassifyf^0,w,c
  6947  00501C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6948  00501E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6949  005020  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6950  005022  A4D8               	btfss	status,2,c
  6951  005024  EF16  F028         	goto	u4061
  6952  005028  EF18  F028         	goto	u4060
  6953  00502C                     u4061:
  6954  00502C  EF1E  F028         	goto	l3793
  6955  005030                     u4060:
  6956  005030  0E00               	movlw	0
  6957  005032  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6958  005034  0E02               	movlw	2
  6959  005036  6E01               	movwf	?___fpclassifyf^0,c
  6960  005038  EF53  F028         	goto	l1067
  6961  00503C                     l3793:
  6962  00503C  0E00               	movlw	0
  6963  00503E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6964  005040  0E03               	movlw	3
  6965  005042  6E01               	movwf	?___fpclassifyf^0,c
  6966  005044  EF53  F028         	goto	l1067
  6967  005048                     l3797:
  6968  005048  2809               	incf	___fpclassifyf@e^0,w,c
  6969  00504A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6970  00504C  A4D8               	btfss	status,2,c
  6971  00504E  EF2B  F028         	goto	u4071
  6972  005052  EF2D  F028         	goto	u4070
  6973  005056                     u4071:
  6974  005056  EF4F  F028         	goto	l3803
  6975  00505A                     u4070:
  6976  00505A  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6977  00505E  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6978  005062  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6979  005066  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6980  00506A  0E09               	movlw	9
  6981  00506C                     u4085:
  6982  00506C  90D8               	bcf	status,0,c
  6983  00506E  3605               	rlcf	??___fpclassifyf^0,f,c
  6984  005070  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  6985  005072  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  6986  005074  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  6987  005076  2EE8               	decfsz	wreg,f,c
  6988  005078  EF36  F028         	goto	u4085
  6989  00507C  5005               	movf	??___fpclassifyf^0,w,c
  6990  00507E  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6991  005080  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6992  005082  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6993  005084  B4D8               	btfsc	status,2,c
  6994  005086  EF47  F028         	goto	u4091
  6995  00508A  EF4A  F028         	goto	u4090
  6996  00508E                     u4091:
  6997  00508E  0E01               	movlw	1
  6998  005090  EF4B  F028         	goto	u4100
  6999  005094                     u4090:
  7000  005094  0E00               	movlw	0
  7001  005096                     u4100:
  7002  005096  6E01               	movwf	?___fpclassifyf^0,c
  7003  005098  6A02               	clrf	(?___fpclassifyf+1)^0,c
  7004  00509A  EF53  F028         	goto	l1067
  7005  00509E                     l3803:
  7006  00509E  0E00               	movlw	0
  7007  0050A0  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7008  0050A2  0E04               	movlw	4
  7009  0050A4  6E01               	movwf	?___fpclassifyf^0,c
  7010  0050A6                     l1067:
  7011  0050A6  0012               	return		;funcret
  7012  0050A8                     __end_of___fpclassifyf:
  7013                           	callstack 0
  7014                           
  7015 ;; *************** function ___fltol *****************
  7016 ;; Defined at:
  7017 ;;		line 43 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\fltol.c"
  7018 ;; Parameters:    Size  Location     Type
  7019 ;;  f1              4   25[COMRAM] int 
  7020 ;; Auto vars:     Size  Location     Type
  7021 ;;  exp1            1   34[COMRAM] unsigned char 
  7022 ;;  sign1           1   33[COMRAM] unsigned char 
  7023 ;; Return value:  Size  Location     Type
  7024 ;;                  4   25[COMRAM] long 
  7025 ;; Registers used:
  7026 ;;		wreg, status,2, status,0
  7027 ;; Tracked objects:
  7028 ;;		On entry : 0/0
  7029 ;;		On exit  : 0/0
  7030 ;;		Unchanged: 0/0
  7031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7032 ;;      Params:         4       0       0       0       0       0       0
  7033 ;;      Locals:         2       0       0       0       0       0       0
  7034 ;;      Temps:          4       0       0       0       0       0       0
  7035 ;;      Totals:        10       0       0       0       0       0       0
  7036 ;;Total ram usage:       10 bytes
  7037 ;; Hardware stack levels used:    1
  7038 ;; This function calls:
  7039 ;;		Nothing
  7040 ;; This function is called by:
  7041 ;;		_esvaziar_tanque
  7042 ;;		_efgtoa
  7043 ;; This function uses a non-reentrant model
  7044 ;;
  7045                           
  7046                           	psect	text21
  7047  0051AC                     __ptext21:
  7048                           	callstack 0
  7049  0051AC                     ___fltol:
  7050                           	callstack 25
  7051  0051AC  341C               	rlcf	(___fltol@f1+2)^0,w,c
  7052  0051AE  341D               	rlcf	(___fltol@f1+3)^0,w,c
  7053  0051B0  6E23               	movwf	___fltol@exp1^0,c
  7054  0051B2  5023               	movf	___fltol@exp1^0,w,c
  7055  0051B4  A4D8               	btfss	status,2,c
  7056  0051B6  EFDF  F028         	goto	u3931
  7057  0051BA  EFE1  F028         	goto	u3930
  7058  0051BE                     u3931:
  7059  0051BE  EFEB  F028         	goto	l3725
  7060  0051C2                     u3930:
  7061  0051C2                     l3721:
  7062  0051C2  0E00               	movlw	0
  7063  0051C4  6E1A               	movwf	?___fltol^0,c
  7064  0051C6  0E00               	movlw	0
  7065  0051C8  6E1B               	movwf	(?___fltol+1)^0,c
  7066  0051CA  0E00               	movlw	0
  7067  0051CC  6E1C               	movwf	(?___fltol+2)^0,c
  7068  0051CE  0E00               	movlw	0
  7069  0051D0  6E1D               	movwf	(?___fltol+3)^0,c
  7070  0051D2  EF58  F029         	goto	l508
  7071  0051D6                     l3725:
  7072  0051D6  C01A  F01E         	movff	___fltol@f1,??___fltol
  7073  0051DA  C01B  F01F         	movff	___fltol@f1+1,??___fltol+1
  7074  0051DE  C01C  F020         	movff	___fltol@f1+2,??___fltol+2
  7075  0051E2  C01D  F021         	movff	___fltol@f1+3,??___fltol+3
  7076  0051E6  0E20               	movlw	32
  7077  0051E8  EFFB  F028         	goto	u3940
  7078  0051EC                     u3945:
  7079  0051EC  90D8               	bcf	status,0,c
  7080  0051EE  3221               	rrcf	(??___fltol+3)^0,f,c
  7081  0051F0  3220               	rrcf	(??___fltol+2)^0,f,c
  7082  0051F2  321F               	rrcf	(??___fltol+1)^0,f,c
  7083  0051F4  321E               	rrcf	??___fltol^0,f,c
  7084  0051F6                     u3940:
  7085  0051F6  2EE8               	decfsz	wreg,f,c
  7086  0051F8  EFF6  F028         	goto	u3945
  7087  0051FC  501E               	movf	??___fltol^0,w,c
  7088  0051FE  6E22               	movwf	___fltol@sign1^0,c
  7089  005200  8E1C               	bsf	(___fltol@f1+2)^0,7,c
  7090  005202  0EFF               	movlw	255
  7091  005204  161A               	andwf	___fltol@f1^0,f,c
  7092  005206  0EFF               	movlw	255
  7093  005208  161B               	andwf	(___fltol@f1+1)^0,f,c
  7094  00520A  0EFF               	movlw	255
  7095  00520C  161C               	andwf	(___fltol@f1+2)^0,f,c
  7096  00520E  0E00               	movlw	0
  7097  005210  161D               	andwf	(___fltol@f1+3)^0,f,c
  7098  005212  0E96               	movlw	150
  7099  005214  5E23               	subwf	___fltol@exp1^0,f,c
  7100  005216  BE23               	btfsc	___fltol@exp1^0,7,c
  7101  005218  EF12  F029         	goto	u3950
  7102  00521C  EF10  F029         	goto	u3951
  7103  005220                     u3951:
  7104  005220  EF28  F029         	goto	l3745
  7105  005224                     u3950:
  7106  005224  5023               	movf	___fltol@exp1^0,w,c
  7107  005226  0A80               	xorlw	128
  7108  005228  0F97               	addlw	151
  7109  00522A  B0D8               	btfsc	status,0,c
  7110  00522C  EF1A  F029         	goto	u3961
  7111  005230  EF1C  F029         	goto	u3960
  7112  005234                     u3961:
  7113  005234  EF1E  F029         	goto	l3741
  7114  005238                     u3960:
  7115  005238  EFE1  F028         	goto	l3721
  7116  00523C                     l3741:
  7117  00523C  90D8               	bcf	status,0,c
  7118  00523E  321D               	rrcf	(___fltol@f1+3)^0,f,c
  7119  005240  321C               	rrcf	(___fltol@f1+2)^0,f,c
  7120  005242  321B               	rrcf	(___fltol@f1+1)^0,f,c
  7121  005244  321A               	rrcf	___fltol@f1^0,f,c
  7122  005246  3E23               	incfsz	___fltol@exp1^0,f,c
  7123  005248  EF1E  F029         	goto	l3741
  7124  00524C  EF40  F029         	goto	l3755
  7125  005250                     l3745:
  7126  005250  0E1F               	movlw	31
  7127  005252  6423               	cpfsgt	___fltol@exp1^0,c
  7128  005254  EF2E  F029         	goto	u3971
  7129  005258  EF30  F029         	goto	u3970
  7130  00525C                     u3971:
  7131  00525C  EF38  F029         	goto	l3753
  7132  005260                     u3970:
  7133  005260  EFE1  F028         	goto	l3721
  7134  005264                     l3751:
  7135  005264  90D8               	bcf	status,0,c
  7136  005266  361A               	rlcf	___fltol@f1^0,f,c
  7137  005268  361B               	rlcf	(___fltol@f1+1)^0,f,c
  7138  00526A  361C               	rlcf	(___fltol@f1+2)^0,f,c
  7139  00526C  361D               	rlcf	(___fltol@f1+3)^0,f,c
  7140  00526E  0623               	decf	___fltol@exp1^0,f,c
  7141  005270                     l3753:
  7142  005270  5023               	movf	___fltol@exp1^0,w,c
  7143  005272  A4D8               	btfss	status,2,c
  7144  005274  EF3E  F029         	goto	u3981
  7145  005278  EF40  F029         	goto	u3980
  7146  00527C                     u3981:
  7147  00527C  EF32  F029         	goto	l3751
  7148  005280                     u3980:
  7149  005280                     l3755:
  7150  005280  5022               	movf	___fltol@sign1^0,w,c
  7151  005282  B4D8               	btfsc	status,2,c
  7152  005284  EF46  F029         	goto	u3991
  7153  005288  EF48  F029         	goto	u3990
  7154  00528C                     u3991:
  7155  00528C  EF50  F029         	goto	l3759
  7156  005290                     u3990:
  7157  005290  1E1D               	comf	(___fltol@f1+3)^0,f,c
  7158  005292  1E1C               	comf	(___fltol@f1+2)^0,f,c
  7159  005294  1E1B               	comf	(___fltol@f1+1)^0,f,c
  7160  005296  6C1A               	negf	___fltol@f1^0,c
  7161  005298  0E00               	movlw	0
  7162  00529A  221B               	addwfc	(___fltol@f1+1)^0,f,c
  7163  00529C  221C               	addwfc	(___fltol@f1+2)^0,f,c
  7164  00529E  221D               	addwfc	(___fltol@f1+3)^0,f,c
  7165  0052A0                     l3759:
  7166  0052A0  C01A  F01A         	movff	___fltol@f1,?___fltol
  7167  0052A4  C01B  F01B         	movff	___fltol@f1+1,?___fltol+1
  7168  0052A8  C01C  F01C         	movff	___fltol@f1+2,?___fltol+2
  7169  0052AC  C01D  F01D         	movff	___fltol@f1+3,?___fltol+3
  7170  0052B0                     l508:
  7171  0052B0  0012               	return		;funcret
  7172  0052B2                     __end_of___fltol:
  7173                           	callstack 0
  7174                           
  7175 ;; *************** function ___flsub *****************
  7176 ;; Defined at:
  7177 ;;		line 245 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  7178 ;; Parameters:    Size  Location     Type
  7179 ;;  b               4   30[COMRAM] long 
  7180 ;;  a               4   34[COMRAM] long 
  7181 ;; Auto vars:     Size  Location     Type
  7182 ;;		None
  7183 ;; Return value:  Size  Location     Type
  7184 ;;                  4   30[COMRAM] long 
  7185 ;; Registers used:
  7186 ;;		wreg, status,2, status,0, cstack
  7187 ;; Tracked objects:
  7188 ;;		On entry : 0/0
  7189 ;;		On exit  : 0/0
  7190 ;;		Unchanged: 0/0
  7191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7192 ;;      Params:         8       0       0       0       0       0       0
  7193 ;;      Locals:         0       0       0       0       0       0       0
  7194 ;;      Temps:          0       0       0       0       0       0       0
  7195 ;;      Totals:         8       0       0       0       0       0       0
  7196 ;;Total ram usage:        8 bytes
  7197 ;; Hardware stack levels used:    1
  7198 ;; Hardware stack levels required when called:    1
  7199 ;; This function calls:
  7200 ;;		___fladd
  7201 ;; This function is called by:
  7202 ;;		_esvaziar_tanque
  7203 ;;		_efgtoa
  7204 ;; This function uses a non-reentrant model
  7205 ;;
  7206                           
  7207                           	psect	text22
  7208  0045BE                     __ptext22:
  7209                           	callstack 0
  7210  0045BE                     ___flsub:
  7211                           	callstack 24
  7212  0045BE  0E00               	movlw	0
  7213  0045C0  1A23               	xorwf	___flsub@a^0,f,c
  7214  0045C2  0E00               	movlw	0
  7215  0045C4  1A24               	xorwf	(___flsub@a+1)^0,f,c
  7216  0045C6  0E00               	movlw	0
  7217  0045C8  1A25               	xorwf	(___flsub@a+2)^0,f,c
  7218  0045CA  0E80               	movlw	128
  7219  0045CC  1A26               	xorwf	(___flsub@a+3)^0,f,c
  7220  0045CE  C01F  F00F         	movff	___flsub@b,___fladd@b
  7221  0045D2  C020  F010         	movff	___flsub@b+1,___fladd@b+1
  7222  0045D6  C021  F011         	movff	___flsub@b+2,___fladd@b+2
  7223  0045DA  C022  F012         	movff	___flsub@b+3,___fladd@b+3
  7224  0045DE  C023  F013         	movff	___flsub@a,___fladd@a
  7225  0045E2  C024  F014         	movff	___flsub@a+1,___fladd@a+1
  7226  0045E6  C025  F015         	movff	___flsub@a+2,___fladd@a+2
  7227  0045EA  C026  F016         	movff	___flsub@a+3,___fladd@a+3
  7228  0045EE  EC50  F037         	call	___fladd	;wreg free
  7229  0045F2  C00F  F01F         	movff	?___fladd,?___flsub
  7230  0045F6  C010  F020         	movff	?___fladd+1,?___flsub+1
  7231  0045FA  C011  F021         	movff	?___fladd+2,?___flsub+2
  7232  0045FE  C012  F022         	movff	?___fladd+3,?___flsub+3
  7233  004602  0012               	return		;funcret
  7234  004604                     __end_of___flsub:
  7235                           	callstack 0
  7236                           
  7237 ;; *************** function ___fladd *****************
  7238 ;; Defined at:
  7239 ;;		line 10 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  7240 ;; Parameters:    Size  Location     Type
  7241 ;;  b               4   14[COMRAM] long 
  7242 ;;  a               4   18[COMRAM] long 
  7243 ;; Auto vars:     Size  Location     Type
  7244 ;;  grs             1   29[COMRAM] unsigned char 
  7245 ;;  bexp            1   28[COMRAM] unsigned char 
  7246 ;;  aexp            1   27[COMRAM] unsigned char 
  7247 ;;  signs           1   26[COMRAM] unsigned char 
  7248 ;; Return value:  Size  Location     Type
  7249 ;;                  4   14[COMRAM] unsigned char 
  7250 ;; Registers used:
  7251 ;;		wreg, status,2, status,0
  7252 ;; Tracked objects:
  7253 ;;		On entry : 0/0
  7254 ;;		On exit  : 0/0
  7255 ;;		Unchanged: 0/0
  7256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7257 ;;      Params:         8       0       0       0       0       0       0
  7258 ;;      Locals:         4       0       0       0       0       0       0
  7259 ;;      Temps:          4       0       0       0       0       0       0
  7260 ;;      Totals:        16       0       0       0       0       0       0
  7261 ;;Total ram usage:       16 bytes
  7262 ;; Hardware stack levels used:    1
  7263 ;; This function calls:
  7264 ;;		Nothing
  7265 ;; This function is called by:
  7266 ;;		_encher_tanque
  7267 ;;		___flsub
  7268 ;;		_efgtoa
  7269 ;; This function uses a non-reentrant model
  7270 ;;
  7271                           
  7272                           	psect	text23
  7273  006EA0                     __ptext23:
  7274                           	callstack 0
  7275  006EA0                     ___fladd:
  7276                           	callstack 24
  7277  006EA0  5012               	movf	(___fladd@b+3)^0,w,c
  7278  006EA2  0B80               	andlw	128
  7279  006EA4  6E1B               	movwf	___fladd@signs^0,c
  7280  006EA6  5012               	movf	(___fladd@b+3)^0,w,c
  7281  006EA8  2412               	addwf	(___fladd@b+3)^0,w,c
  7282  006EAA  6E1D               	movwf	___fladd@bexp^0,c
  7283  006EAC  AE11               	btfss	(___fladd@b+2)^0,7,c
  7284  006EAE  EF5B  F037         	goto	u2871
  7285  006EB2  EF5D  F037         	goto	u2870
  7286  006EB6                     u2871:
  7287  006EB6  EF5E  F037         	goto	l3095
  7288  006EBA                     u2870:
  7289  006EBA  801D               	bsf	___fladd@bexp^0,0,c
  7290  006EBC                     l3095:
  7291  006EBC  501D               	movf	___fladd@bexp^0,w,c
  7292  006EBE  B4D8               	btfsc	status,2,c
  7293  006EC0  EF64  F037         	goto	u2881
  7294  006EC4  EF66  F037         	goto	u2880
  7295  006EC8                     u2881:
  7296  006EC8  EF7B  F037         	goto	l3105
  7297  006ECC                     u2880:
  7298  006ECC  281D               	incf	___fladd@bexp^0,w,c
  7299  006ECE  A4D8               	btfss	status,2,c
  7300  006ED0  EF6C  F037         	goto	u2891
  7301  006ED4  EF6E  F037         	goto	u2890
  7302  006ED8                     u2891:
  7303  006ED8  EF76  F037         	goto	l3101
  7304  006EDC                     u2890:
  7305  006EDC  0E00               	movlw	0
  7306  006EDE  6E0F               	movwf	___fladd@b^0,c
  7307  006EE0  0E00               	movlw	0
  7308  006EE2  6E10               	movwf	(___fladd@b+1)^0,c
  7309  006EE4  0E00               	movlw	0
  7310  006EE6  6E11               	movwf	(___fladd@b+2)^0,c
  7311  006EE8  0E00               	movlw	0
  7312  006EEA  6E12               	movwf	(___fladd@b+3)^0,c
  7313  006EEC                     l3101:
  7314  006EEC  8E11               	bsf	(___fladd@b+2)^0,7,c
  7315  006EEE  0E00               	movlw	0
  7316  006EF0  6E12               	movwf	(___fladd@b+3)^0,c
  7317  006EF2  EF83  F037         	goto	l3107
  7318  006EF6                     l3105:
  7319  006EF6  0E00               	movlw	0
  7320  006EF8  6E0F               	movwf	___fladd@b^0,c
  7321  006EFA  0E00               	movlw	0
  7322  006EFC  6E10               	movwf	(___fladd@b+1)^0,c
  7323  006EFE  0E00               	movlw	0
  7324  006F00  6E11               	movwf	(___fladd@b+2)^0,c
  7325  006F02  0E00               	movlw	0
  7326  006F04  6E12               	movwf	(___fladd@b+3)^0,c
  7327  006F06                     l3107:
  7328  006F06  5016               	movf	(___fladd@a+3)^0,w,c
  7329  006F08  0B80               	andlw	128
  7330  006F0A  6E1C               	movwf	___fladd@aexp^0,c
  7331  006F0C  501B               	movf	___fladd@signs^0,w,c
  7332  006F0E  181C               	xorwf	___fladd@aexp^0,w,c
  7333  006F10  B4D8               	btfsc	status,2,c
  7334  006F12  EF8D  F037         	goto	u2901
  7335  006F16  EF8F  F037         	goto	u2900
  7336  006F1A                     u2901:
  7337  006F1A  EF90  F037         	goto	l3113
  7338  006F1E                     u2900:
  7339  006F1E  8C1B               	bsf	___fladd@signs^0,6,c
  7340  006F20                     l3113:
  7341  006F20  5016               	movf	(___fladd@a+3)^0,w,c
  7342  006F22  2416               	addwf	(___fladd@a+3)^0,w,c
  7343  006F24  6E1C               	movwf	___fladd@aexp^0,c
  7344  006F26  AE15               	btfss	(___fladd@a+2)^0,7,c
  7345  006F28  EF98  F037         	goto	u2911
  7346  006F2C  EF9A  F037         	goto	u2910
  7347  006F30                     u2911:
  7348  006F30  EF9B  F037         	goto	l3119
  7349  006F34                     u2910:
  7350  006F34  801C               	bsf	___fladd@aexp^0,0,c
  7351  006F36                     l3119:
  7352  006F36  501C               	movf	___fladd@aexp^0,w,c
  7353  006F38  B4D8               	btfsc	status,2,c
  7354  006F3A  EFA1  F037         	goto	u2921
  7355  006F3E  EFA3  F037         	goto	u2920
  7356  006F42                     u2921:
  7357  006F42  EFB8  F037         	goto	l3129
  7358  006F46                     u2920:
  7359  006F46  281C               	incf	___fladd@aexp^0,w,c
  7360  006F48  A4D8               	btfss	status,2,c
  7361  006F4A  EFA9  F037         	goto	u2931
  7362  006F4E  EFAB  F037         	goto	u2930
  7363  006F52                     u2931:
  7364  006F52  EFB3  F037         	goto	l3125
  7365  006F56                     u2930:
  7366  006F56  0E00               	movlw	0
  7367  006F58  6E13               	movwf	___fladd@a^0,c
  7368  006F5A  0E00               	movlw	0
  7369  006F5C  6E14               	movwf	(___fladd@a+1)^0,c
  7370  006F5E  0E00               	movlw	0
  7371  006F60  6E15               	movwf	(___fladd@a+2)^0,c
  7372  006F62  0E00               	movlw	0
  7373  006F64  6E16               	movwf	(___fladd@a+3)^0,c
  7374  006F66                     l3125:
  7375  006F66  8E15               	bsf	(___fladd@a+2)^0,7,c
  7376  006F68  0E00               	movlw	0
  7377  006F6A  6E16               	movwf	(___fladd@a+3)^0,c
  7378  006F6C  EFC0  F037         	goto	l3131
  7379  006F70                     l3129:
  7380  006F70  0E00               	movlw	0
  7381  006F72  6E13               	movwf	___fladd@a^0,c
  7382  006F74  0E00               	movlw	0
  7383  006F76  6E14               	movwf	(___fladd@a+1)^0,c
  7384  006F78  0E00               	movlw	0
  7385  006F7A  6E15               	movwf	(___fladd@a+2)^0,c
  7386  006F7C  0E00               	movlw	0
  7387  006F7E  6E16               	movwf	(___fladd@a+3)^0,c
  7388  006F80                     l3131:
  7389  006F80  501D               	movf	___fladd@bexp^0,w,c
  7390  006F82  5C1C               	subwf	___fladd@aexp^0,w,c
  7391  006F84  B0D8               	btfsc	status,0,c
  7392  006F86  EFC7  F037         	goto	u2941
  7393  006F8A  EFC9  F037         	goto	u2940
  7394  006F8E                     u2941:
  7395  006F8E  EFF0  F037         	goto	l3167
  7396  006F92                     u2940:
  7397  006F92  AC1B               	btfss	___fladd@signs^0,6,c
  7398  006F94  EFCE  F037         	goto	u2951
  7399  006F98  EFD0  F037         	goto	u2950
  7400  006F9C                     u2951:
  7401  006F9C  EFD2  F037         	goto	l3137
  7402  006FA0                     u2950:
  7403  006FA0  0E80               	movlw	128
  7404  006FA2  1A1B               	xorwf	___fladd@signs^0,f,c
  7405  006FA4                     l3137:
  7406  006FA4  C01D  F01E         	movff	___fladd@bexp,___fladd@grs
  7407  006FA8  C01C  F01D         	movff	___fladd@aexp,___fladd@bexp
  7408  006FAC  C01E  F01C         	movff	___fladd@grs,___fladd@aexp
  7409  006FB0  C00F  F01E         	movff	___fladd@b,___fladd@grs
  7410  006FB4  C013  F00F         	movff	___fladd@a,___fladd@b
  7411  006FB8  C01E  F013         	movff	___fladd@grs,___fladd@a
  7412  006FBC  C010  F01E         	movff	___fladd@b+1,___fladd@grs
  7413  006FC0  C014  F010         	movff	___fladd@a+1,___fladd@b+1
  7414  006FC4  C01E  F014         	movff	___fladd@grs,___fladd@a+1
  7415  006FC8  C011  F01E         	movff	___fladd@b+2,___fladd@grs
  7416  006FCC  C015  F011         	movff	___fladd@a+2,___fladd@b+2
  7417  006FD0  C01E  F015         	movff	___fladd@grs,___fladd@a+2
  7418  006FD4  C012  F01E         	movff	___fladd@b+3,___fladd@grs
  7419  006FD8  C016  F012         	movff	___fladd@a+3,___fladd@b+3
  7420  006FDC  C01E  F016         	movff	___fladd@grs,___fladd@a+3
  7421  006FE0                     l3167:
  7422  006FE0  0E00               	movlw	0
  7423  006FE2  6E1E               	movwf	___fladd@grs^0,c
  7424  006FE4  501D               	movf	___fladd@bexp^0,w,c
  7425  006FE6  C01C  F017         	movff	___fladd@aexp,??___fladd
  7426  006FEA  6A18               	clrf	(??___fladd+1)^0,c
  7427  006FEC  5E17               	subwf	??___fladd^0,f,c
  7428  006FEE  0E00               	movlw	0
  7429  006FF0  5A18               	subwfb	(??___fladd+1)^0,f,c
  7430  006FF2  BE18               	btfsc	(??___fladd+1)^0,7,c
  7431  006FF4  EF05  F038         	goto	u2961
  7432  006FF8  5018               	movf	(??___fladd+1)^0,w,c
  7433  006FFA  E109               	bnz	u2960
  7434  006FFC  0E1A               	movlw	26
  7435  006FFE  5C17               	subwf	??___fladd^0,w,c
  7436  007000  A0D8               	btfss	status,0,c
  7437  007002  EF05  F038         	goto	u2961
  7438  007006  EF07  F038         	goto	u2960
  7439  00700A                     u2961:
  7440  00700A  EF3E  F038         	goto	l740
  7441  00700E                     u2960:
  7442  00700E  500F               	movf	___fladd@b^0,w,c
  7443  007010  1010               	iorwf	(___fladd@b+1)^0,w,c
  7444  007012  1011               	iorwf	(___fladd@b+2)^0,w,c
  7445  007014  1012               	iorwf	(___fladd@b+3)^0,w,c
  7446  007016  A4D8               	btfss	status,2,c
  7447  007018  EF10  F038         	goto	u2971
  7448  00701C  EF13  F038         	goto	u2970
  7449  007020                     u2971:
  7450  007020  0E01               	movlw	1
  7451  007022  EF14  F038         	goto	u2980
  7452  007026                     u2970:
  7453  007026  0E00               	movlw	0
  7454  007028                     u2980:
  7455  007028  6E1E               	movwf	___fladd@grs^0,c
  7456  00702A  0E00               	movlw	0
  7457  00702C  6E0F               	movwf	___fladd@b^0,c
  7458  00702E  0E00               	movlw	0
  7459  007030  6E10               	movwf	(___fladd@b+1)^0,c
  7460  007032  0E00               	movlw	0
  7461  007034  6E11               	movwf	(___fladd@b+2)^0,c
  7462  007036  0E00               	movlw	0
  7463  007038  6E12               	movwf	(___fladd@b+3)^0,c
  7464  00703A  C01C  F01D         	movff	___fladd@aexp,___fladd@bexp
  7465  00703E  EF47  F038         	goto	l739
  7466  007042                     l741:
  7467  007042  A01E               	btfss	___fladd@grs^0,0,c
  7468  007044  EF26  F038         	goto	u2991
  7469  007048  EF28  F038         	goto	u2990
  7470  00704C                     u2991:
  7471  00704C  EF2E  F038         	goto	l3179
  7472  007050                     u2990:
  7473  007050  90D8               	bcf	status,0,c
  7474  007052  301E               	rrcf	___fladd@grs^0,w,c
  7475  007054  0901               	iorlw	1
  7476  007056  6E1E               	movwf	___fladd@grs^0,c
  7477  007058  EF30  F038         	goto	l3181
  7478  00705C                     l3179:
  7479  00705C  90D8               	bcf	status,0,c
  7480  00705E  321E               	rrcf	___fladd@grs^0,f,c
  7481  007060                     l3181:
  7482  007060  A00F               	btfss	___fladd@b^0,0,c
  7483  007062  EF35  F038         	goto	u3001
  7484  007066  EF37  F038         	goto	u3000
  7485  00706A                     u3001:
  7486  00706A  EF38  F038         	goto	l3185
  7487  00706E                     u3000:
  7488  00706E  8E1E               	bsf	___fladd@grs^0,7,c
  7489  007070                     l3185:
  7490  007070  3412               	rlcf	(___fladd@b+3)^0,w,c
  7491  007072  3212               	rrcf	(___fladd@b+3)^0,f,c
  7492  007074  3211               	rrcf	(___fladd@b+2)^0,f,c
  7493  007076  3210               	rrcf	(___fladd@b+1)^0,f,c
  7494  007078  320F               	rrcf	___fladd@b^0,f,c
  7495  00707A  2A1D               	incf	___fladd@bexp^0,f,c
  7496  00707C                     l740:
  7497  00707C  501C               	movf	___fladd@aexp^0,w,c
  7498  00707E  5C1D               	subwf	___fladd@bexp^0,w,c
  7499  007080  A0D8               	btfss	status,0,c
  7500  007082  EF45  F038         	goto	u3011
  7501  007086  EF47  F038         	goto	u3010
  7502  00708A                     u3011:
  7503  00708A  EF21  F038         	goto	l741
  7504  00708E                     u3010:
  7505  00708E                     l739:
  7506  00708E  BC1B               	btfsc	___fladd@signs^0,6,c
  7507  007090  EF4C  F038         	goto	u3021
  7508  007094  EF4E  F038         	goto	u3020
  7509  007098                     u3021:
  7510  007098  EF8E  F038         	goto	l3213
  7511  00709C                     u3020:
  7512  00709C  501D               	movf	___fladd@bexp^0,w,c
  7513  00709E  A4D8               	btfss	status,2,c
  7514  0070A0  EF54  F038         	goto	u3031
  7515  0070A4  EF56  F038         	goto	u3030
  7516  0070A8                     u3031:
  7517  0070A8  EF60  F038         	goto	l3195
  7518  0070AC                     u3030:
  7519  0070AC  0E00               	movlw	0
  7520  0070AE  6E0F               	movwf	?___fladd^0,c
  7521  0070B0  0E00               	movlw	0
  7522  0070B2  6E10               	movwf	(?___fladd+1)^0,c
  7523  0070B4  0E00               	movlw	0
  7524  0070B6  6E11               	movwf	(?___fladd+2)^0,c
  7525  0070B8  0E00               	movlw	0
  7526  0070BA  6E12               	movwf	(?___fladd+3)^0,c
  7527  0070BC  EFAF  F039         	goto	l748
  7528  0070C0                     l3195:
  7529  0070C0  5013               	movf	___fladd@a^0,w,c
  7530  0070C2  260F               	addwf	___fladd@b^0,f,c
  7531  0070C4  5014               	movf	(___fladd@a+1)^0,w,c
  7532  0070C6  2210               	addwfc	(___fladd@b+1)^0,f,c
  7533  0070C8  5015               	movf	(___fladd@a+2)^0,w,c
  7534  0070CA  2211               	addwfc	(___fladd@b+2)^0,f,c
  7535  0070CC  5016               	movf	(___fladd@a+3)^0,w,c
  7536  0070CE  2212               	addwfc	(___fladd@b+3)^0,f,c
  7537  0070D0  A012               	btfss	(___fladd@b+3)^0,0,c
  7538  0070D2  EF6D  F038         	goto	u3041
  7539  0070D6  EF6F  F038         	goto	u3040
  7540  0070DA                     u3041:
  7541  0070DA  EF1B  F039         	goto	l3249
  7542  0070DE                     u3040:
  7543  0070DE  A01E               	btfss	___fladd@grs^0,0,c
  7544  0070E0  EF74  F038         	goto	u3051
  7545  0070E4  EF76  F038         	goto	u3050
  7546  0070E8                     u3051:
  7547  0070E8  EF7C  F038         	goto	l3203
  7548  0070EC                     u3050:
  7549  0070EC  90D8               	bcf	status,0,c
  7550  0070EE  301E               	rrcf	___fladd@grs^0,w,c
  7551  0070F0  0901               	iorlw	1
  7552  0070F2  6E1E               	movwf	___fladd@grs^0,c
  7553  0070F4  EF7E  F038         	goto	l3205
  7554  0070F8                     l3203:
  7555  0070F8  90D8               	bcf	status,0,c
  7556  0070FA  321E               	rrcf	___fladd@grs^0,f,c
  7557  0070FC                     l3205:
  7558  0070FC  A00F               	btfss	___fladd@b^0,0,c
  7559  0070FE  EF83  F038         	goto	u3061
  7560  007102  EF85  F038         	goto	u3060
  7561  007106                     u3061:
  7562  007106  EF86  F038         	goto	l3209
  7563  00710A                     u3060:
  7564  00710A  8E1E               	bsf	___fladd@grs^0,7,c
  7565  00710C                     l3209:
  7566  00710C  3412               	rlcf	(___fladd@b+3)^0,w,c
  7567  00710E  3212               	rrcf	(___fladd@b+3)^0,f,c
  7568  007110  3211               	rrcf	(___fladd@b+2)^0,f,c
  7569  007112  3210               	rrcf	(___fladd@b+1)^0,f,c
  7570  007114  320F               	rrcf	___fladd@b^0,f,c
  7571  007116  2A1D               	incf	___fladd@bexp^0,f,c
  7572  007118  EF1B  F039         	goto	l3249
  7573  00711C                     l3213:
  7574  00711C  5013               	movf	___fladd@a^0,w,c
  7575  00711E  5C0F               	subwf	___fladd@b^0,w,c
  7576  007120  5014               	movf	(___fladd@a+1)^0,w,c
  7577  007122  5810               	subwfb	(___fladd@b+1)^0,w,c
  7578  007124  5015               	movf	(___fladd@a+2)^0,w,c
  7579  007126  5811               	subwfb	(___fladd@b+2)^0,w,c
  7580  007128  5012               	movf	(___fladd@b+3)^0,w,c
  7581  00712A  0A80               	xorlw	128
  7582  00712C  6E17               	movwf	??___fladd^0,c
  7583  00712E  5016               	movf	(___fladd@a+3)^0,w,c
  7584  007130  0A80               	xorlw	128
  7585  007132  5817               	subwfb	??___fladd^0,w,c
  7586  007134  B0D8               	btfsc	status,0,c
  7587  007136  EF9F  F038         	goto	u3071
  7588  00713A  EFA1  F038         	goto	u3070
  7589  00713E                     u3071:
  7590  00713E  EFCC  F038         	goto	l3223
  7591  007142                     u3070:
  7592  007142  500F               	movf	___fladd@b^0,w,c
  7593  007144  5C13               	subwf	___fladd@a^0,w,c
  7594  007146  6E17               	movwf	??___fladd^0,c
  7595  007148  5010               	movf	(___fladd@b+1)^0,w,c
  7596  00714A  5814               	subwfb	(___fladd@a+1)^0,w,c
  7597  00714C  6E18               	movwf	(??___fladd+1)^0,c
  7598  00714E  5011               	movf	(___fladd@b+2)^0,w,c
  7599  007150  5815               	subwfb	(___fladd@a+2)^0,w,c
  7600  007152  6E19               	movwf	(??___fladd+2)^0,c
  7601  007154  5012               	movf	(___fladd@b+3)^0,w,c
  7602  007156  5816               	subwfb	(___fladd@a+3)^0,w,c
  7603  007158  6E1A               	movwf	(??___fladd+3)^0,c
  7604  00715A  0EFF               	movlw	255
  7605  00715C  2417               	addwf	??___fladd^0,w,c
  7606  00715E  6E0F               	movwf	___fladd@b^0,c
  7607  007160  0EFF               	movlw	255
  7608  007162  2018               	addwfc	(??___fladd+1)^0,w,c
  7609  007164  6E10               	movwf	(___fladd@b+1)^0,c
  7610  007166  0EFF               	movlw	255
  7611  007168  2019               	addwfc	(??___fladd+2)^0,w,c
  7612  00716A  6E11               	movwf	(___fladd@b+2)^0,c
  7613  00716C  0EFF               	movlw	255
  7614  00716E  201A               	addwfc	(??___fladd+3)^0,w,c
  7615  007170  6E12               	movwf	(___fladd@b+3)^0,c
  7616  007172  0E80               	movlw	128
  7617  007174  1A1B               	xorwf	___fladd@signs^0,f,c
  7618  007176  6C1E               	negf	___fladd@grs^0,c
  7619  007178  501E               	movf	___fladd@grs^0,w,c
  7620  00717A  A4D8               	btfss	status,2,c
  7621  00717C  EFC2  F038         	goto	u3081
  7622  007180  EFC4  F038         	goto	u3080
  7623  007184                     u3081:
  7624  007184  EFD4  F038         	goto	l756
  7625  007188                     u3080:
  7626  007188  0E01               	movlw	1
  7627  00718A  260F               	addwf	___fladd@b^0,f,c
  7628  00718C  0E00               	movlw	0
  7629  00718E  2210               	addwfc	(___fladd@b+1)^0,f,c
  7630  007190  2211               	addwfc	(___fladd@b+2)^0,f,c
  7631  007192  2212               	addwfc	(___fladd@b+3)^0,f,c
  7632  007194  EFD4  F038         	goto	l756
  7633  007198                     l3223:
  7634  007198  5013               	movf	___fladd@a^0,w,c
  7635  00719A  5E0F               	subwf	___fladd@b^0,f,c
  7636  00719C  5014               	movf	(___fladd@a+1)^0,w,c
  7637  00719E  5A10               	subwfb	(___fladd@b+1)^0,f,c
  7638  0071A0  5015               	movf	(___fladd@a+2)^0,w,c
  7639  0071A2  5A11               	subwfb	(___fladd@b+2)^0,f,c
  7640  0071A4  5016               	movf	(___fladd@a+3)^0,w,c
  7641  0071A6  5A12               	subwfb	(___fladd@b+3)^0,f,c
  7642  0071A8                     l756:
  7643  0071A8  500F               	movf	___fladd@b^0,w,c
  7644  0071AA  1010               	iorwf	(___fladd@b+1)^0,w,c
  7645  0071AC  1011               	iorwf	(___fladd@b+2)^0,w,c
  7646  0071AE  1012               	iorwf	(___fladd@b+3)^0,w,c
  7647  0071B0  A4D8               	btfss	status,2,c
  7648  0071B2  EFDD  F038         	goto	u3091
  7649  0071B6  EFDF  F038         	goto	u3090
  7650  0071BA                     u3091:
  7651  0071BA  EF14  F039         	goto	l3247
  7652  0071BE                     u3090:
  7653  0071BE  501E               	movf	___fladd@grs^0,w,c
  7654  0071C0  A4D8               	btfss	status,2,c
  7655  0071C2  EFE5  F038         	goto	u3101
  7656  0071C6  EFE7  F038         	goto	u3100
  7657  0071CA                     u3101:
  7658  0071CA  EF14  F039         	goto	l3247
  7659  0071CE                     u3100:
  7660  0071CE  0E00               	movlw	0
  7661  0071D0  6E0F               	movwf	?___fladd^0,c
  7662  0071D2  0E00               	movlw	0
  7663  0071D4  6E10               	movwf	(?___fladd+1)^0,c
  7664  0071D6  0E00               	movlw	0
  7665  0071D8  6E11               	movwf	(?___fladd+2)^0,c
  7666  0071DA  0E00               	movlw	0
  7667  0071DC  6E12               	movwf	(?___fladd+3)^0,c
  7668  0071DE  EFAF  F039         	goto	l748
  7669  0071E2                     l3231:
  7670  0071E2  90D8               	bcf	status,0,c
  7671  0071E4  360F               	rlcf	___fladd@b^0,f,c
  7672  0071E6  3610               	rlcf	(___fladd@b+1)^0,f,c
  7673  0071E8  3611               	rlcf	(___fladd@b+2)^0,f,c
  7674  0071EA  3612               	rlcf	(___fladd@b+3)^0,f,c
  7675  0071EC  AE1E               	btfss	___fladd@grs^0,7,c
  7676  0071EE  EFFB  F038         	goto	u3111
  7677  0071F2  EFFD  F038         	goto	u3110
  7678  0071F6                     u3111:
  7679  0071F6  EFFE  F038         	goto	l3237
  7680  0071FA                     u3110:
  7681  0071FA  800F               	bsf	___fladd@b^0,0,c
  7682  0071FC                     l3237:
  7683  0071FC  A01E               	btfss	___fladd@grs^0,0,c
  7684  0071FE  EF03  F039         	goto	u3121
  7685  007202  EF05  F039         	goto	u3120
  7686  007206                     u3121:
  7687  007206  EF09  F039         	goto	l3241
  7688  00720A                     u3120:
  7689  00720A  80D8               	bsf	status,0,c
  7690  00720C  361E               	rlcf	___fladd@grs^0,f,c
  7691  00720E  EF0B  F039         	goto	l3243
  7692  007212                     l3241:
  7693  007212  90D8               	bcf	status,0,c
  7694  007214  361E               	rlcf	___fladd@grs^0,f,c
  7695  007216                     l3243:
  7696  007216  501D               	movf	___fladd@bexp^0,w,c
  7697  007218  B4D8               	btfsc	status,2,c
  7698  00721A  EF11  F039         	goto	u3131
  7699  00721E  EF13  F039         	goto	u3130
  7700  007222                     u3131:
  7701  007222  EF14  F039         	goto	l3247
  7702  007226                     u3130:
  7703  007226  061D               	decf	___fladd@bexp^0,f,c
  7704  007228                     l3247:
  7705  007228  AE11               	btfss	(___fladd@b+2)^0,7,c
  7706  00722A  EF19  F039         	goto	u3141
  7707  00722E  EF1B  F039         	goto	u3140
  7708  007232                     u3141:
  7709  007232  EFF1  F038         	goto	l3231
  7710  007236                     u3140:
  7711  007236                     l3249:
  7712  007236  0E00               	movlw	0
  7713  007238  6E1C               	movwf	___fladd@aexp^0,c
  7714  00723A  AE1E               	btfss	___fladd@grs^0,7,c
  7715  00723C  EF22  F039         	goto	u3151
  7716  007240  EF24  F039         	goto	u3150
  7717  007244                     u3151:
  7718  007244  EF3C  F039         	goto	l765
  7719  007248                     u3150:
  7720  007248  C01E  F017         	movff	___fladd@grs,??___fladd
  7721  00724C  0E7F               	movlw	127
  7722  00724E  1617               	andwf	??___fladd^0,f,c
  7723  007250  B4D8               	btfsc	status,2,c
  7724  007252  EF2D  F039         	goto	u3161
  7725  007256  EF2F  F039         	goto	u3160
  7726  00725A                     u3161:
  7727  00725A  EF33  F039         	goto	l766
  7728  00725E                     u3160:
  7729  00725E                     l3255:
  7730  00725E  0E01               	movlw	1
  7731  007260  6E1C               	movwf	___fladd@aexp^0,c
  7732  007262  EF3C  F039         	goto	l765
  7733  007266                     l766:
  7734  007266  A00F               	btfss	___fladd@b^0,0,c
  7735  007268  EF38  F039         	goto	u3171
  7736  00726C  EF3A  F039         	goto	u3170
  7737  007270                     u3171:
  7738  007270  EF3C  F039         	goto	l765
  7739  007274                     u3170:
  7740  007274  EF2F  F039         	goto	l3255
  7741  007278                     l765:
  7742  007278  501C               	movf	___fladd@aexp^0,w,c
  7743  00727A  B4D8               	btfsc	status,2,c
  7744  00727C  EF42  F039         	goto	u3181
  7745  007280  EF44  F039         	goto	u3180
  7746  007284                     u3181:
  7747  007284  EF6F  F039         	goto	l3267
  7748  007288                     u3180:
  7749  007288  0E01               	movlw	1
  7750  00728A  260F               	addwf	___fladd@b^0,f,c
  7751  00728C  0E00               	movlw	0
  7752  00728E  2210               	addwfc	(___fladd@b+1)^0,f,c
  7753  007290  2211               	addwfc	(___fladd@b+2)^0,f,c
  7754  007292  2212               	addwfc	(___fladd@b+3)^0,f,c
  7755  007294  A012               	btfss	(___fladd@b+3)^0,0,c
  7756  007296  EF4F  F039         	goto	u3191
  7757  00729A  EF51  F039         	goto	u3190
  7758  00729E                     u3191:
  7759  00729E  EF6F  F039         	goto	l3267
  7760  0072A2                     u3190:
  7761  0072A2  C00F  F017         	movff	___fladd@b,??___fladd
  7762  0072A6  C010  F018         	movff	___fladd@b+1,??___fladd+1
  7763  0072AA  C011  F019         	movff	___fladd@b+2,??___fladd+2
  7764  0072AE  C012  F01A         	movff	___fladd@b+3,??___fladd+3
  7765  0072B2  341A               	rlcf	(??___fladd+3)^0,w,c
  7766  0072B4  321A               	rrcf	(??___fladd+3)^0,f,c
  7767  0072B6  3219               	rrcf	(??___fladd+2)^0,f,c
  7768  0072B8  3218               	rrcf	(??___fladd+1)^0,f,c
  7769  0072BA  3217               	rrcf	??___fladd^0,f,c
  7770  0072BC  C017  F00F         	movff	??___fladd,___fladd@b
  7771  0072C0  C018  F010         	movff	??___fladd+1,___fladd@b+1
  7772  0072C4  C019  F011         	movff	??___fladd+2,___fladd@b+2
  7773  0072C8  C01A  F012         	movff	??___fladd+3,___fladd@b+3
  7774  0072CC  281D               	incf	___fladd@bexp^0,w,c
  7775  0072CE  B4D8               	btfsc	status,2,c
  7776  0072D0  EF6C  F039         	goto	u3201
  7777  0072D4  EF6E  F039         	goto	u3200
  7778  0072D8                     u3201:
  7779  0072D8  EF6F  F039         	goto	l3267
  7780  0072DC                     u3200:
  7781  0072DC  2A1D               	incf	___fladd@bexp^0,f,c
  7782  0072DE                     l3267:
  7783  0072DE  281D               	incf	___fladd@bexp^0,w,c
  7784  0072E0  B4D8               	btfsc	status,2,c
  7785  0072E2  EF75  F039         	goto	u3211
  7786  0072E6  EF77  F039         	goto	u3210
  7787  0072EA                     u3211:
  7788  0072EA  EF7F  F039         	goto	l3271
  7789  0072EE                     u3210:
  7790  0072EE  501D               	movf	___fladd@bexp^0,w,c
  7791  0072F0  A4D8               	btfss	status,2,c
  7792  0072F2  EF7D  F039         	goto	u3221
  7793  0072F6  EF7F  F039         	goto	u3220
  7794  0072FA                     u3221:
  7795  0072FA  EF91  F039         	goto	l3275
  7796  0072FE                     u3220:
  7797  0072FE                     l3271:
  7798  0072FE  0E00               	movlw	0
  7799  007300  6E0F               	movwf	___fladd@b^0,c
  7800  007302  0E00               	movlw	0
  7801  007304  6E10               	movwf	(___fladd@b+1)^0,c
  7802  007306  0E00               	movlw	0
  7803  007308  6E11               	movwf	(___fladd@b+2)^0,c
  7804  00730A  0E00               	movlw	0
  7805  00730C  6E12               	movwf	(___fladd@b+3)^0,c
  7806  00730E  501D               	movf	___fladd@bexp^0,w,c
  7807  007310  A4D8               	btfss	status,2,c
  7808  007312  EF8D  F039         	goto	u3231
  7809  007316  EF8F  F039         	goto	u3230
  7810  00731A                     u3231:
  7811  00731A  EF91  F039         	goto	l3275
  7812  00731E                     u3230:
  7813  00731E  0E00               	movlw	0
  7814  007320  6E1B               	movwf	___fladd@signs^0,c
  7815  007322                     l3275:
  7816  007322  A01D               	btfss	___fladd@bexp^0,0,c
  7817  007324  EF96  F039         	goto	u3241
  7818  007328  EF98  F039         	goto	u3240
  7819  00732C                     u3241:
  7820  00732C  EF9B  F039         	goto	l3279
  7821  007330                     u3240:
  7822  007330  8E11               	bsf	(___fladd@b+2)^0,7,c
  7823  007332  EF9C  F039         	goto	l3281
  7824  007336                     l3279:
  7825  007336  9E11               	bcf	(___fladd@b+2)^0,7,c
  7826  007338                     l3281:
  7827  007338  90D8               	bcf	status,0,c
  7828  00733A  301D               	rrcf	___fladd@bexp^0,w,c
  7829  00733C  6E12               	movwf	(___fladd@b+3)^0,c
  7830  00733E  AE1B               	btfss	___fladd@signs^0,7,c
  7831  007340  EFA4  F039         	goto	u3251
  7832  007344  EFA6  F039         	goto	u3250
  7833  007348                     u3251:
  7834  007348  EFA7  F039         	goto	l3287
  7835  00734C                     u3250:
  7836  00734C  8E12               	bsf	(___fladd@b+3)^0,7,c
  7837  00734E                     l3287:
  7838  00734E  C00F  F00F         	movff	___fladd@b,?___fladd
  7839  007352  C010  F010         	movff	___fladd@b+1,?___fladd+1
  7840  007356  C011  F011         	movff	___fladd@b+2,?___fladd+2
  7841  00735A  C012  F012         	movff	___fladd@b+3,?___fladd+3
  7842  00735E                     l748:
  7843  00735E  0012               	return		;funcret
  7844  007360                     __end_of___fladd:
  7845                           	callstack 0
  7846                           
  7847 ;; *************** function ___flneg *****************
  7848 ;; Defined at:
  7849 ;;		line 15 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\flneg.c"
  7850 ;; Parameters:    Size  Location     Type
  7851 ;;  f1              4    0[COMRAM] unsigned char 
  7852 ;; Auto vars:     Size  Location     Type
  7853 ;;		None
  7854 ;; Return value:  Size  Location     Type
  7855 ;;                  4    0[COMRAM] unsigned char 
  7856 ;; Registers used:
  7857 ;;		wreg, status,2, status,0
  7858 ;; Tracked objects:
  7859 ;;		On entry : 0/0
  7860 ;;		On exit  : 0/0
  7861 ;;		Unchanged: 0/0
  7862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7863 ;;      Params:         4       0       0       0       0       0       0
  7864 ;;      Locals:         0       0       0       0       0       0       0
  7865 ;;      Temps:          0       0       0       0       0       0       0
  7866 ;;      Totals:         4       0       0       0       0       0       0
  7867 ;;Total ram usage:        4 bytes
  7868 ;; Hardware stack levels used:    1
  7869 ;; This function calls:
  7870 ;;		Nothing
  7871 ;; This function is called by:
  7872 ;;		_efgtoa
  7873 ;; This function uses a non-reentrant model
  7874 ;;
  7875                           
  7876                           	psect	text24
  7877  00450A                     __ptext24:
  7878                           	callstack 0
  7879  00450A                     ___flneg:
  7880                           	callstack 25
  7881  00450A  5001               	movf	___flneg@f1^0,w,c
  7882  00450C  1002               	iorwf	(___flneg@f1+1)^0,w,c
  7883  00450E  1003               	iorwf	(___flneg@f1+2)^0,w,c
  7884  004510  1004               	iorwf	(___flneg@f1+3)^0,w,c
  7885  004512  B4D8               	btfsc	status,2,c
  7886  004514  EF8E  F022         	goto	u3921
  7887  004518  EF90  F022         	goto	u3920
  7888  00451C                     u3921:
  7889  00451C  EF98  F022         	goto	l3715
  7890  004520                     u3920:
  7891  004520  0E00               	movlw	0
  7892  004522  1A01               	xorwf	___flneg@f1^0,f,c
  7893  004524  0E00               	movlw	0
  7894  004526  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  7895  004528  0E00               	movlw	0
  7896  00452A  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  7897  00452C  0E80               	movlw	128
  7898  00452E  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  7899  004530                     l3715:
  7900  004530  C001  F001         	movff	___flneg@f1,?___flneg
  7901  004534  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  7902  004538  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  7903  00453C  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  7904  004540  0012               	return		;funcret
  7905  004542                     __end_of___flneg:
  7906                           	callstack 0
  7907                           
  7908 ;; *************** function ___flmul *****************
  7909 ;; Defined at:
  7910 ;;		line 8 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
  7911 ;; Parameters:    Size  Location     Type
  7912 ;;  b               4    0[COMRAM] unsigned char 
  7913 ;;  a               4    4[COMRAM] unsigned char 
  7914 ;; Auto vars:     Size  Location     Type
  7915 ;;  prod            4   19[COMRAM] struct .
  7916 ;;  grs             4   13[COMRAM] unsigned long 
  7917 ;;  temp            2   23[COMRAM] struct .
  7918 ;;  bexp            1   18[COMRAM] unsigned char 
  7919 ;;  aexp            1   17[COMRAM] unsigned char 
  7920 ;;  sign            1   12[COMRAM] unsigned char 
  7921 ;; Return value:  Size  Location     Type
  7922 ;;                  4    0[COMRAM] unsigned char 
  7923 ;; Registers used:
  7924 ;;		wreg, status,2, status,0, prodl, prodh
  7925 ;; Tracked objects:
  7926 ;;		On entry : 0/0
  7927 ;;		On exit  : 0/0
  7928 ;;		Unchanged: 0/0
  7929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7930 ;;      Params:         8       0       0       0       0       0       0
  7931 ;;      Locals:        13       0       0       0       0       0       0
  7932 ;;      Temps:          4       0       0       0       0       0       0
  7933 ;;      Totals:        25       0       0       0       0       0       0
  7934 ;;Total ram usage:       25 bytes
  7935 ;; Hardware stack levels used:    1
  7936 ;; This function calls:
  7937 ;;		Nothing
  7938 ;; This function is called by:
  7939 ;;		_efgtoa
  7940 ;; This function uses a non-reentrant model
  7941 ;;
  7942                           
  7943                           	psect	text25
  7944  006172                     __ptext25:
  7945                           	callstack 0
  7946  006172                     ___flmul:
  7947                           	callstack 25
  7948  006172  5004               	movf	(___flmul@b+3)^0,w,c
  7949  006174  0B80               	andlw	128
  7950  006176  6E0D               	movwf	___flmul@sign^0,c
  7951  006178  5004               	movf	(___flmul@b+3)^0,w,c
  7952  00617A  2404               	addwf	(___flmul@b+3)^0,w,c
  7953  00617C  6E13               	movwf	___flmul@bexp^0,c
  7954  00617E  AE03               	btfss	(___flmul@b+2)^0,7,c
  7955  006180  EFC4  F030         	goto	u3531
  7956  006184  EFC6  F030         	goto	u3530
  7957  006188                     u3531:
  7958  006188  EFC7  F030         	goto	l3463
  7959  00618C                     u3530:
  7960  00618C  8013               	bsf	___flmul@bexp^0,0,c
  7961  00618E                     l3463:
  7962  00618E  5013               	movf	___flmul@bexp^0,w,c
  7963  006190  B4D8               	btfsc	status,2,c
  7964  006192  EFCD  F030         	goto	u3541
  7965  006196  EFCF  F030         	goto	u3540
  7966  00619A                     u3541:
  7967  00619A  EFE2  F030         	goto	l3471
  7968  00619E                     u3540:
  7969  00619E  2813               	incf	___flmul@bexp^0,w,c
  7970  0061A0  A4D8               	btfss	status,2,c
  7971  0061A2  EFD5  F030         	goto	u3551
  7972  0061A6  EFD7  F030         	goto	u3550
  7973  0061AA                     u3551:
  7974  0061AA  EFDF  F030         	goto	l3469
  7975  0061AE                     u3550:
  7976  0061AE  0E00               	movlw	0
  7977  0061B0  6E01               	movwf	___flmul@b^0,c
  7978  0061B2  0E00               	movlw	0
  7979  0061B4  6E02               	movwf	(___flmul@b+1)^0,c
  7980  0061B6  0E00               	movlw	0
  7981  0061B8  6E03               	movwf	(___flmul@b+2)^0,c
  7982  0061BA  0E00               	movlw	0
  7983  0061BC  6E04               	movwf	(___flmul@b+3)^0,c
  7984  0061BE                     l3469:
  7985  0061BE  8E03               	bsf	(___flmul@b+2)^0,7,c
  7986  0061C0  EFEA  F030         	goto	l3473
  7987  0061C4                     l3471:
  7988  0061C4  0E00               	movlw	0
  7989  0061C6  6E01               	movwf	___flmul@b^0,c
  7990  0061C8  0E00               	movlw	0
  7991  0061CA  6E02               	movwf	(___flmul@b+1)^0,c
  7992  0061CC  0E00               	movlw	0
  7993  0061CE  6E03               	movwf	(___flmul@b+2)^0,c
  7994  0061D0  0E00               	movlw	0
  7995  0061D2  6E04               	movwf	(___flmul@b+3)^0,c
  7996  0061D4                     l3473:
  7997  0061D4  5008               	movf	(___flmul@a+3)^0,w,c
  7998  0061D6  0B80               	andlw	128
  7999  0061D8  1A0D               	xorwf	___flmul@sign^0,f,c
  8000  0061DA  5008               	movf	(___flmul@a+3)^0,w,c
  8001  0061DC  2408               	addwf	(___flmul@a+3)^0,w,c
  8002  0061DE  6E12               	movwf	___flmul@aexp^0,c
  8003  0061E0  AE07               	btfss	(___flmul@a+2)^0,7,c
  8004  0061E2  EFF5  F030         	goto	u3561
  8005  0061E6  EFF7  F030         	goto	u3560
  8006  0061EA                     u3561:
  8007  0061EA  EFF8  F030         	goto	l3481
  8008  0061EE                     u3560:
  8009  0061EE  8012               	bsf	___flmul@aexp^0,0,c
  8010  0061F0                     l3481:
  8011  0061F0  5012               	movf	___flmul@aexp^0,w,c
  8012  0061F2  B4D8               	btfsc	status,2,c
  8013  0061F4  EFFE  F030         	goto	u3571
  8014  0061F8  EF00  F031         	goto	u3570
  8015  0061FC                     u3571:
  8016  0061FC  EF13  F031         	goto	l3489
  8017  006200                     u3570:
  8018  006200  2812               	incf	___flmul@aexp^0,w,c
  8019  006202  A4D8               	btfss	status,2,c
  8020  006204  EF06  F031         	goto	u3581
  8021  006208  EF08  F031         	goto	u3580
  8022  00620C                     u3581:
  8023  00620C  EF10  F031         	goto	l3487
  8024  006210                     u3580:
  8025  006210  0E00               	movlw	0
  8026  006212  6E05               	movwf	___flmul@a^0,c
  8027  006214  0E00               	movlw	0
  8028  006216  6E06               	movwf	(___flmul@a+1)^0,c
  8029  006218  0E00               	movlw	0
  8030  00621A  6E07               	movwf	(___flmul@a+2)^0,c
  8031  00621C  0E00               	movlw	0
  8032  00621E  6E08               	movwf	(___flmul@a+3)^0,c
  8033  006220                     l3487:
  8034  006220  8E07               	bsf	(___flmul@a+2)^0,7,c
  8035  006222  EF1B  F031         	goto	l825
  8036  006226                     l3489:
  8037  006226  0E00               	movlw	0
  8038  006228  6E05               	movwf	___flmul@a^0,c
  8039  00622A  0E00               	movlw	0
  8040  00622C  6E06               	movwf	(___flmul@a+1)^0,c
  8041  00622E  0E00               	movlw	0
  8042  006230  6E07               	movwf	(___flmul@a+2)^0,c
  8043  006232  0E00               	movlw	0
  8044  006234  6E08               	movwf	(___flmul@a+3)^0,c
  8045  006236                     l825:
  8046  006236  5012               	movf	___flmul@aexp^0,w,c
  8047  006238  B4D8               	btfsc	status,2,c
  8048  00623A  EF21  F031         	goto	u3591
  8049  00623E  EF23  F031         	goto	u3590
  8050  006242                     u3591:
  8051  006242  EF2B  F031         	goto	l3493
  8052  006246                     u3590:
  8053  006246  5013               	movf	___flmul@bexp^0,w,c
  8054  006248  A4D8               	btfss	status,2,c
  8055  00624A  EF29  F031         	goto	u3601
  8056  00624E  EF2B  F031         	goto	u3600
  8057  006252                     u3601:
  8058  006252  EF35  F031         	goto	l3497
  8059  006256                     u3600:
  8060  006256                     l3493:
  8061  006256  0E00               	movlw	0
  8062  006258  6E01               	movwf	?___flmul^0,c
  8063  00625A  0E00               	movlw	0
  8064  00625C  6E02               	movwf	(?___flmul+1)^0,c
  8065  00625E  0E00               	movlw	0
  8066  006260  6E03               	movwf	(?___flmul+2)^0,c
  8067  006262  0E00               	movlw	0
  8068  006264  6E04               	movwf	(?___flmul+3)^0,c
  8069  006266  EFCD  F032         	goto	l829
  8070  00626A                     l3497:
  8071  00626A  5007               	movf	(___flmul@a+2)^0,w,c
  8072  00626C  0201               	mulwf	___flmul@b^0,c
  8073  00626E  CFF3 F018          	movff	prodl,___flmul@temp
  8074  006272  CFF4 F019          	movff	prodh,___flmul@temp+1
  8075  006276  5018               	movf	___flmul@temp^0,w,c
  8076  006278  6E0E               	movwf	___flmul@grs^0,c
  8077  00627A  6A0F               	clrf	(___flmul@grs+1)^0,c
  8078  00627C  6A10               	clrf	(___flmul@grs+2)^0,c
  8079  00627E  6A11               	clrf	(___flmul@grs+3)^0,c
  8080  006280  5019               	movf	(___flmul@temp+1)^0,w,c
  8081  006282  6E14               	movwf	___flmul@prod^0,c
  8082  006284  6A15               	clrf	(___flmul@prod+1)^0,c
  8083  006286  6A16               	clrf	(___flmul@prod+2)^0,c
  8084  006288  6A17               	clrf	(___flmul@prod+3)^0,c
  8085  00628A  5006               	movf	(___flmul@a+1)^0,w,c
  8086  00628C  0202               	mulwf	(___flmul@b+1)^0,c
  8087  00628E  CFF3 F018          	movff	prodl,___flmul@temp
  8088  006292  CFF4 F019          	movff	prodh,___flmul@temp+1
  8089  006296  5018               	movf	___flmul@temp^0,w,c
  8090  006298  260E               	addwf	___flmul@grs^0,f,c
  8091  00629A  0E00               	movlw	0
  8092  00629C  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8093  00629E  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8094  0062A0  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8095  0062A2  5019               	movf	(___flmul@temp+1)^0,w,c
  8096  0062A4  2614               	addwf	___flmul@prod^0,f,c
  8097  0062A6  0E00               	movlw	0
  8098  0062A8  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8099  0062AA  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8100  0062AC  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8101  0062AE  5005               	movf	___flmul@a^0,w,c
  8102  0062B0  0203               	mulwf	(___flmul@b+2)^0,c
  8103  0062B2  CFF3 F018          	movff	prodl,___flmul@temp
  8104  0062B6  CFF4 F019          	movff	prodh,___flmul@temp+1
  8105  0062BA  5018               	movf	___flmul@temp^0,w,c
  8106  0062BC  260E               	addwf	___flmul@grs^0,f,c
  8107  0062BE  0E00               	movlw	0
  8108  0062C0  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8109  0062C2  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8110  0062C4  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8111  0062C6  5019               	movf	(___flmul@temp+1)^0,w,c
  8112  0062C8  2614               	addwf	___flmul@prod^0,f,c
  8113  0062CA  0E00               	movlw	0
  8114  0062CC  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8115  0062CE  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8116  0062D0  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8117  0062D2  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  8118  0062D6  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  8119  0062DA  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  8120  0062DE  6A0E               	clrf	___flmul@grs^0,c
  8121  0062E0  5005               	movf	___flmul@a^0,w,c
  8122  0062E2  0202               	mulwf	(___flmul@b+1)^0,c
  8123  0062E4  CFF3 F018          	movff	prodl,___flmul@temp
  8124  0062E8  CFF4 F019          	movff	prodh,___flmul@temp+1
  8125  0062EC  5018               	movf	___flmul@temp^0,w,c
  8126  0062EE  260E               	addwf	___flmul@grs^0,f,c
  8127  0062F0  5019               	movf	(___flmul@temp+1)^0,w,c
  8128  0062F2  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8129  0062F4  0E00               	movlw	0
  8130  0062F6  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8131  0062F8  0E00               	movlw	0
  8132  0062FA  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8133  0062FC  5006               	movf	(___flmul@a+1)^0,w,c
  8134  0062FE  0201               	mulwf	___flmul@b^0,c
  8135  006300  CFF3 F018          	movff	prodl,___flmul@temp
  8136  006304  CFF4 F019          	movff	prodh,___flmul@temp+1
  8137  006308  5018               	movf	___flmul@temp^0,w,c
  8138  00630A  260E               	addwf	___flmul@grs^0,f,c
  8139  00630C  5019               	movf	(___flmul@temp+1)^0,w,c
  8140  00630E  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8141  006310  0E00               	movlw	0
  8142  006312  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8143  006314  0E00               	movlw	0
  8144  006316  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8145  006318  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  8146  00631C  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  8147  006320  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  8148  006324  6A0E               	clrf	___flmul@grs^0,c
  8149  006326  5005               	movf	___flmul@a^0,w,c
  8150  006328  0201               	mulwf	___flmul@b^0,c
  8151  00632A  CFF3 F018          	movff	prodl,___flmul@temp
  8152  00632E  CFF4 F019          	movff	prodh,___flmul@temp+1
  8153  006332  5018               	movf	___flmul@temp^0,w,c
  8154  006334  260E               	addwf	___flmul@grs^0,f,c
  8155  006336  5019               	movf	(___flmul@temp+1)^0,w,c
  8156  006338  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8157  00633A  0E00               	movlw	0
  8158  00633C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8159  00633E  0E00               	movlw	0
  8160  006340  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8161  006342  5007               	movf	(___flmul@a+2)^0,w,c
  8162  006344  0202               	mulwf	(___flmul@b+1)^0,c
  8163  006346  CFF3 F018          	movff	prodl,___flmul@temp
  8164  00634A  CFF4 F019          	movff	prodh,___flmul@temp+1
  8165  00634E  5018               	movf	___flmul@temp^0,w,c
  8166  006350  2614               	addwf	___flmul@prod^0,f,c
  8167  006352  5019               	movf	(___flmul@temp+1)^0,w,c
  8168  006354  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8169  006356  0E00               	movlw	0
  8170  006358  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8171  00635A  0E00               	movlw	0
  8172  00635C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8173  00635E  5006               	movf	(___flmul@a+1)^0,w,c
  8174  006360  0203               	mulwf	(___flmul@b+2)^0,c
  8175  006362  CFF3 F018          	movff	prodl,___flmul@temp
  8176  006366  CFF4 F019          	movff	prodh,___flmul@temp+1
  8177  00636A  5018               	movf	___flmul@temp^0,w,c
  8178  00636C  2614               	addwf	___flmul@prod^0,f,c
  8179  00636E  5019               	movf	(___flmul@temp+1)^0,w,c
  8180  006370  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8181  006372  0E00               	movlw	0
  8182  006374  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8183  006376  0E00               	movlw	0
  8184  006378  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8185  00637A  5007               	movf	(___flmul@a+2)^0,w,c
  8186  00637C  0203               	mulwf	(___flmul@b+2)^0,c
  8187  00637E  CFF3 F018          	movff	prodl,___flmul@temp
  8188  006382  CFF4 F019          	movff	prodh,___flmul@temp+1
  8189  006386  5018               	movf	___flmul@temp^0,w,c
  8190  006388  6E09               	movwf	??___flmul^0,c
  8191  00638A  5019               	movf	(___flmul@temp+1)^0,w,c
  8192  00638C  6E0A               	movwf	(??___flmul+1)^0,c
  8193  00638E  6A0B               	clrf	(??___flmul+2)^0,c
  8194  006390  6A0C               	clrf	(??___flmul+3)^0,c
  8195  006392  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  8196  006396  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  8197  00639A  C009  F00A         	movff	??___flmul,??___flmul+1
  8198  00639E  6A09               	clrf	??___flmul^0,c
  8199  0063A0  5009               	movf	??___flmul^0,w,c
  8200  0063A2  2614               	addwf	___flmul@prod^0,f,c
  8201  0063A4  500A               	movf	(??___flmul+1)^0,w,c
  8202  0063A6  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8203  0063A8  500B               	movf	(??___flmul+2)^0,w,c
  8204  0063AA  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8205  0063AC  500C               	movf	(??___flmul+3)^0,w,c
  8206  0063AE  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8207  0063B0  C00E  F009         	movff	___flmul@grs,??___flmul
  8208  0063B4  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  8209  0063B8  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  8210  0063BC  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  8211  0063C0  0E19               	movlw	25
  8212  0063C2  EFE8  F031         	goto	u3610
  8213  0063C6                     u3615:
  8214  0063C6  90D8               	bcf	status,0,c
  8215  0063C8  320C               	rrcf	(??___flmul+3)^0,f,c
  8216  0063CA  320B               	rrcf	(??___flmul+2)^0,f,c
  8217  0063CC  320A               	rrcf	(??___flmul+1)^0,f,c
  8218  0063CE  3209               	rrcf	??___flmul^0,f,c
  8219  0063D0                     u3610:
  8220  0063D0  2EE8               	decfsz	wreg,f,c
  8221  0063D2  EFE3  F031         	goto	u3615
  8222  0063D6  5009               	movf	??___flmul^0,w,c
  8223  0063D8  2614               	addwf	___flmul@prod^0,f,c
  8224  0063DA  500A               	movf	(??___flmul+1)^0,w,c
  8225  0063DC  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8226  0063DE  500B               	movf	(??___flmul+2)^0,w,c
  8227  0063E0  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8228  0063E2  500C               	movf	(??___flmul+3)^0,w,c
  8229  0063E4  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8230  0063E6  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  8231  0063EA  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  8232  0063EE  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  8233  0063F2  6A0E               	clrf	___flmul@grs^0,c
  8234  0063F4  5012               	movf	___flmul@aexp^0,w,c
  8235  0063F6  C013  F009         	movff	___flmul@bexp,??___flmul
  8236  0063FA  6A0A               	clrf	(??___flmul+1)^0,c
  8237  0063FC  2609               	addwf	??___flmul^0,f,c
  8238  0063FE  0E00               	movlw	0
  8239  006400  220A               	addwfc	(??___flmul+1)^0,f,c
  8240  006402  0E82               	movlw	130
  8241  006404  2409               	addwf	??___flmul^0,w,c
  8242  006406  6E18               	movwf	___flmul@temp^0,c
  8243  006408  0EFF               	movlw	255
  8244  00640A  200A               	addwfc	(??___flmul+1)^0,w,c
  8245  00640C  6E19               	movwf	(___flmul@temp+1)^0,c
  8246  00640E  EF1E  F032         	goto	l3545
  8247  006412                     l3539:
  8248  006412  90D8               	bcf	status,0,c
  8249  006414  3614               	rlcf	___flmul@prod^0,f,c
  8250  006416  3615               	rlcf	(___flmul@prod+1)^0,f,c
  8251  006418  3616               	rlcf	(___flmul@prod+2)^0,f,c
  8252  00641A  3617               	rlcf	(___flmul@prod+3)^0,f,c
  8253  00641C  AE11               	btfss	(___flmul@grs+3)^0,7,c
  8254  00641E  EF13  F032         	goto	u3621
  8255  006422  EF15  F032         	goto	u3620
  8256  006426                     u3621:
  8257  006426  EF16  F032         	goto	l832
  8258  00642A                     u3620:
  8259  00642A  8014               	bsf	___flmul@prod^0,0,c
  8260  00642C                     l832:
  8261  00642C  90D8               	bcf	status,0,c
  8262  00642E  360E               	rlcf	___flmul@grs^0,f,c
  8263  006430  360F               	rlcf	(___flmul@grs+1)^0,f,c
  8264  006432  3610               	rlcf	(___flmul@grs+2)^0,f,c
  8265  006434  3611               	rlcf	(___flmul@grs+3)^0,f,c
  8266  006436  0618               	decf	___flmul@temp^0,f,c
  8267  006438  A0D8               	btfss	status,0,c
  8268  00643A  0619               	decf	(___flmul@temp+1)^0,f,c
  8269  00643C                     l3545:
  8270  00643C  AE16               	btfss	(___flmul@prod+2)^0,7,c
  8271  00643E  EF23  F032         	goto	u3631
  8272  006442  EF25  F032         	goto	u3630
  8273  006446                     u3631:
  8274  006446  EF09  F032         	goto	l3539
  8275  00644A                     u3630:
  8276  00644A  0E00               	movlw	0
  8277  00644C  6E12               	movwf	___flmul@aexp^0,c
  8278  00644E  AE11               	btfss	(___flmul@grs+3)^0,7,c
  8279  006450  EF2C  F032         	goto	u3641
  8280  006454  EF2E  F032         	goto	u3640
  8281  006458                     u3641:
  8282  006458  EF52  F032         	goto	l834
  8283  00645C                     u3640:
  8284  00645C  0EFF               	movlw	255
  8285  00645E  140E               	andwf	___flmul@grs^0,w,c
  8286  006460  6E09               	movwf	??___flmul^0,c
  8287  006462  0EFF               	movlw	255
  8288  006464  140F               	andwf	(___flmul@grs+1)^0,w,c
  8289  006466  6E0A               	movwf	(??___flmul+1)^0,c
  8290  006468  0EFF               	movlw	255
  8291  00646A  1410               	andwf	(___flmul@grs+2)^0,w,c
  8292  00646C  6E0B               	movwf	(??___flmul+2)^0,c
  8293  00646E  0E7F               	movlw	127
  8294  006470  1411               	andwf	(___flmul@grs+3)^0,w,c
  8295  006472  6E0C               	movwf	(??___flmul+3)^0,c
  8296  006474  5009               	movf	??___flmul^0,w,c
  8297  006476  100A               	iorwf	(??___flmul+1)^0,w,c
  8298  006478  100B               	iorwf	(??___flmul+2)^0,w,c
  8299  00647A  100C               	iorwf	(??___flmul+3)^0,w,c
  8300  00647C  B4D8               	btfsc	status,2,c
  8301  00647E  EF43  F032         	goto	u3651
  8302  006482  EF45  F032         	goto	u3650
  8303  006486                     u3651:
  8304  006486  EF49  F032         	goto	l835
  8305  00648A                     u3650:
  8306  00648A                     l3553:
  8307  00648A  0E01               	movlw	1
  8308  00648C  6E12               	movwf	___flmul@aexp^0,c
  8309  00648E  EF52  F032         	goto	l834
  8310  006492                     l835:
  8311  006492  A014               	btfss	___flmul@prod^0,0,c
  8312  006494  EF4E  F032         	goto	u3661
  8313  006498  EF50  F032         	goto	u3660
  8314  00649C                     u3661:
  8315  00649C  EF52  F032         	goto	l834
  8316  0064A0                     u3660:
  8317  0064A0  EF45  F032         	goto	l3553
  8318  0064A4                     l834:
  8319  0064A4  5012               	movf	___flmul@aexp^0,w,c
  8320  0064A6  B4D8               	btfsc	status,2,c
  8321  0064A8  EF58  F032         	goto	u3671
  8322  0064AC  EF5A  F032         	goto	u3670
  8323  0064B0                     u3671:
  8324  0064B0  EF7E  F032         	goto	l3565
  8325  0064B4                     u3670:
  8326  0064B4  0E01               	movlw	1
  8327  0064B6  2614               	addwf	___flmul@prod^0,f,c
  8328  0064B8  0E00               	movlw	0
  8329  0064BA  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8330  0064BC  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8331  0064BE  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8332  0064C0  A017               	btfss	(___flmul@prod+3)^0,0,c
  8333  0064C2  EF65  F032         	goto	u3681
  8334  0064C6  EF67  F032         	goto	u3680
  8335  0064CA                     u3681:
  8336  0064CA  EF7E  F032         	goto	l3565
  8337  0064CE                     u3680:
  8338  0064CE  C014  F009         	movff	___flmul@prod,??___flmul
  8339  0064D2  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  8340  0064D6  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  8341  0064DA  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  8342  0064DE  340C               	rlcf	(??___flmul+3)^0,w,c
  8343  0064E0  320C               	rrcf	(??___flmul+3)^0,f,c
  8344  0064E2  320B               	rrcf	(??___flmul+2)^0,f,c
  8345  0064E4  320A               	rrcf	(??___flmul+1)^0,f,c
  8346  0064E6  3209               	rrcf	??___flmul^0,f,c
  8347  0064E8  C009  F014         	movff	??___flmul,___flmul@prod
  8348  0064EC  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  8349  0064F0  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  8350  0064F4  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  8351  0064F8  4A18               	infsnz	___flmul@temp^0,f,c
  8352  0064FA  2A19               	incf	(___flmul@temp+1)^0,f,c
  8353  0064FC                     l3565:
  8354  0064FC  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  8355  0064FE  EF89  F032         	goto	u3691
  8356  006502  5019               	movf	(___flmul@temp+1)^0,w,c
  8357  006504  E108               	bnz	u3690
  8358  006506  2818               	incf	___flmul@temp^0,w,c
  8359  006508  A0D8               	btfss	status,0,c
  8360  00650A  EF89  F032         	goto	u3691
  8361  00650E  EF8B  F032         	goto	u3690
  8362  006512                     u3691:
  8363  006512  EF95  F032         	goto	l3569
  8364  006516                     u3690:
  8365  006516  0E00               	movlw	0
  8366  006518  6E14               	movwf	___flmul@prod^0,c
  8367  00651A  0E00               	movlw	0
  8368  00651C  6E15               	movwf	(___flmul@prod+1)^0,c
  8369  00651E  0E80               	movlw	128
  8370  006520  6E16               	movwf	(___flmul@prod+2)^0,c
  8371  006522  0E7F               	movlw	127
  8372  006524  6E17               	movwf	(___flmul@prod+3)^0,c
  8373  006526  EFC3  F032         	goto	l3581
  8374  00652A                     l3569:
  8375  00652A  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  8376  00652C  EFA2  F032         	goto	u3700
  8377  006530  5019               	movf	(___flmul@temp+1)^0,w,c
  8378  006532  E106               	bnz	u3701
  8379  006534  0418               	decf	___flmul@temp^0,w,c
  8380  006536  B0D8               	btfsc	status,0,c
  8381  006538  EFA0  F032         	goto	u3701
  8382  00653C  EFA2  F032         	goto	u3700
  8383  006540                     u3701:
  8384  006540  EFAE  F032         	goto	l842
  8385  006544                     u3700:
  8386  006544  0E00               	movlw	0
  8387  006546  6E14               	movwf	___flmul@prod^0,c
  8388  006548  0E00               	movlw	0
  8389  00654A  6E15               	movwf	(___flmul@prod+1)^0,c
  8390  00654C  0E00               	movlw	0
  8391  00654E  6E16               	movwf	(___flmul@prod+2)^0,c
  8392  006550  0E00               	movlw	0
  8393  006552  6E17               	movwf	(___flmul@prod+3)^0,c
  8394  006554  0E00               	movlw	0
  8395  006556  6E0D               	movwf	___flmul@sign^0,c
  8396  006558  EFC3  F032         	goto	l3581
  8397  00655C                     l842:
  8398  00655C  C018  F013         	movff	___flmul@temp,___flmul@bexp
  8399  006560  0EFF               	movlw	255
  8400  006562  1614               	andwf	___flmul@prod^0,f,c
  8401  006564  0EFF               	movlw	255
  8402  006566  1615               	andwf	(___flmul@prod+1)^0,f,c
  8403  006568  0E7F               	movlw	127
  8404  00656A  1616               	andwf	(___flmul@prod+2)^0,f,c
  8405  00656C  0E00               	movlw	0
  8406  00656E  1617               	andwf	(___flmul@prod+3)^0,f,c
  8407  006570  A013               	btfss	___flmul@bexp^0,0,c
  8408  006572  EFBD  F032         	goto	u3711
  8409  006576  EFBF  F032         	goto	u3710
  8410  00657A                     u3711:
  8411  00657A  EFC0  F032         	goto	l3579
  8412  00657E                     u3710:
  8413  00657E  8E16               	bsf	(___flmul@prod+2)^0,7,c
  8414  006580                     l3579:
  8415  006580  90D8               	bcf	status,0,c
  8416  006582  3013               	rrcf	___flmul@bexp^0,w,c
  8417  006584  6E17               	movwf	(___flmul@prod+3)^0,c
  8418  006586                     l3581:
  8419  006586  500D               	movf	___flmul@sign^0,w,c
  8420  006588  1217               	iorwf	(___flmul@prod+3)^0,f,c
  8421  00658A  C014  F001         	movff	___flmul@prod,?___flmul
  8422  00658E  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  8423  006592  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  8424  006596  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  8425  00659A                     l829:
  8426  00659A  0012               	return		;funcret
  8427  00659C                     __end_of___flmul:
  8428                           	callstack 0
  8429                           
  8430 ;; *************** function ___flge *****************
  8431 ;; Defined at:
  8432 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\flge.c"
  8433 ;; Parameters:    Size  Location     Type
  8434 ;;  ff1             4   30[COMRAM] unsigned char 
  8435 ;;  ff2             4   34[COMRAM] unsigned char 
  8436 ;; Auto vars:     Size  Location     Type
  8437 ;;		None
  8438 ;; Return value:  Size  Location     Type
  8439 ;;		None               void
  8440 ;; Registers used:
  8441 ;;		wreg, status,2, status,0
  8442 ;; Tracked objects:
  8443 ;;		On entry : 0/0
  8444 ;;		On exit  : 0/0
  8445 ;;		Unchanged: 0/0
  8446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8447 ;;      Params:         8       0       0       0       0       0       0
  8448 ;;      Locals:         0       0       0       0       0       0       0
  8449 ;;      Temps:          4       0       0       0       0       0       0
  8450 ;;      Totals:        12       0       0       0       0       0       0
  8451 ;;Total ram usage:       12 bytes
  8452 ;; Hardware stack levels used:    1
  8453 ;; This function calls:
  8454 ;;		Nothing
  8455 ;; This function is called by:
  8456 ;;		_encher_tanque
  8457 ;;		_efgtoa
  8458 ;; This function uses a non-reentrant model
  8459 ;;
  8460                           
  8461                           	psect	text26
  8462  0050A8                     __ptext26:
  8463                           	callstack 0
  8464  0050A8                     ___flge:
  8465                           	callstack 25
  8466  0050A8  0E00               	movlw	0
  8467  0050AA  141F               	andwf	___flge@ff1^0,w,c
  8468  0050AC  6E27               	movwf	??___flge^0,c
  8469  0050AE  0E00               	movlw	0
  8470  0050B0  1420               	andwf	(___flge@ff1+1)^0,w,c
  8471  0050B2  6E28               	movwf	(??___flge+1)^0,c
  8472  0050B4  0E80               	movlw	128
  8473  0050B6  1421               	andwf	(___flge@ff1+2)^0,w,c
  8474  0050B8  6E29               	movwf	(??___flge+2)^0,c
  8475  0050BA  0E7F               	movlw	127
  8476  0050BC  1422               	andwf	(___flge@ff1+3)^0,w,c
  8477  0050BE  6E2A               	movwf	(??___flge+3)^0,c
  8478  0050C0  5027               	movf	??___flge^0,w,c
  8479  0050C2  1028               	iorwf	(??___flge+1)^0,w,c
  8480  0050C4  1029               	iorwf	(??___flge+2)^0,w,c
  8481  0050C6  102A               	iorwf	(??___flge+3)^0,w,c
  8482  0050C8  A4D8               	btfss	status,2,c
  8483  0050CA  EF69  F028         	goto	u3871
  8484  0050CE  EF6B  F028         	goto	u3870
  8485  0050D2                     u3871:
  8486  0050D2  EF73  F028         	goto	l3693
  8487  0050D6                     u3870:
  8488  0050D6  0E00               	movlw	0
  8489  0050D8  6E1F               	movwf	___flge@ff1^0,c
  8490  0050DA  0E00               	movlw	0
  8491  0050DC  6E20               	movwf	(___flge@ff1+1)^0,c
  8492  0050DE  0E00               	movlw	0
  8493  0050E0  6E21               	movwf	(___flge@ff1+2)^0,c
  8494  0050E2  0E00               	movlw	0
  8495  0050E4  6E22               	movwf	(___flge@ff1+3)^0,c
  8496  0050E6                     l3693:
  8497  0050E6  0E00               	movlw	0
  8498  0050E8  1423               	andwf	___flge@ff2^0,w,c
  8499  0050EA  6E27               	movwf	??___flge^0,c
  8500  0050EC  0E00               	movlw	0
  8501  0050EE  1424               	andwf	(___flge@ff2+1)^0,w,c
  8502  0050F0  6E28               	movwf	(??___flge+1)^0,c
  8503  0050F2  0E80               	movlw	128
  8504  0050F4  1425               	andwf	(___flge@ff2+2)^0,w,c
  8505  0050F6  6E29               	movwf	(??___flge+2)^0,c
  8506  0050F8  0E7F               	movlw	127
  8507  0050FA  1426               	andwf	(___flge@ff2+3)^0,w,c
  8508  0050FC  6E2A               	movwf	(??___flge+3)^0,c
  8509  0050FE  5027               	movf	??___flge^0,w,c
  8510  005100  1028               	iorwf	(??___flge+1)^0,w,c
  8511  005102  1029               	iorwf	(??___flge+2)^0,w,c
  8512  005104  102A               	iorwf	(??___flge+3)^0,w,c
  8513  005106  A4D8               	btfss	status,2,c
  8514  005108  EF88  F028         	goto	u3881
  8515  00510C  EF8A  F028         	goto	u3880
  8516  005110                     u3881:
  8517  005110  EF92  F028         	goto	l3697
  8518  005114                     u3880:
  8519  005114  0E00               	movlw	0
  8520  005116  6E23               	movwf	___flge@ff2^0,c
  8521  005118  0E00               	movlw	0
  8522  00511A  6E24               	movwf	(___flge@ff2+1)^0,c
  8523  00511C  0E00               	movlw	0
  8524  00511E  6E25               	movwf	(___flge@ff2+2)^0,c
  8525  005120  0E00               	movlw	0
  8526  005122  6E26               	movwf	(___flge@ff2+3)^0,c
  8527  005124                     l3697:
  8528  005124  AE22               	btfss	(___flge@ff1+3)^0,7,c
  8529  005126  EF97  F028         	goto	u3891
  8530  00512A  EF99  F028         	goto	u3890
  8531  00512E                     u3891:
  8532  00512E  EFA2  F028         	goto	l3701
  8533  005132                     u3890:
  8534  005132  6C1F               	negf	___flge@ff1^0,c
  8535  005134  1E20               	comf	(___flge@ff1+1)^0,f,c
  8536  005136  B0D8               	btfsc	status,0,c
  8537  005138  2A20               	incf	(___flge@ff1+1)^0,f,c
  8538  00513A  1E21               	comf	(___flge@ff1+2)^0,f,c
  8539  00513C  B0D8               	btfsc	status,0,c
  8540  00513E  2A21               	incf	(___flge@ff1+2)^0,f,c
  8541  005140  0E80               	movlw	128
  8542  005142  5622               	subfwb	(___flge@ff1+3)^0,f,c
  8543  005144                     l3701:
  8544  005144  AE26               	btfss	(___flge@ff2+3)^0,7,c
  8545  005146  EFA7  F028         	goto	u3901
  8546  00514A  EFA9  F028         	goto	u3900
  8547  00514E                     u3901:
  8548  00514E  EFB2  F028         	goto	l476
  8549  005152                     u3900:
  8550  005152  6C23               	negf	___flge@ff2^0,c
  8551  005154  1E24               	comf	(___flge@ff2+1)^0,f,c
  8552  005156  B0D8               	btfsc	status,0,c
  8553  005158  2A24               	incf	(___flge@ff2+1)^0,f,c
  8554  00515A  1E25               	comf	(___flge@ff2+2)^0,f,c
  8555  00515C  B0D8               	btfsc	status,0,c
  8556  00515E  2A25               	incf	(___flge@ff2+2)^0,f,c
  8557  005160  0E80               	movlw	128
  8558  005162  5626               	subfwb	(___flge@ff2+3)^0,f,c
  8559  005164                     l476:
  8560  005164  0E00               	movlw	0
  8561  005166  1A1F               	xorwf	___flge@ff1^0,f,c
  8562  005168  0E00               	movlw	0
  8563  00516A  1A20               	xorwf	(___flge@ff1+1)^0,f,c
  8564  00516C  0E00               	movlw	0
  8565  00516E  1A21               	xorwf	(___flge@ff1+2)^0,f,c
  8566  005170  0E80               	movlw	128
  8567  005172  1A22               	xorwf	(___flge@ff1+3)^0,f,c
  8568  005174  0E00               	movlw	0
  8569  005176  1A23               	xorwf	___flge@ff2^0,f,c
  8570  005178  0E00               	movlw	0
  8571  00517A  1A24               	xorwf	(___flge@ff2+1)^0,f,c
  8572  00517C  0E00               	movlw	0
  8573  00517E  1A25               	xorwf	(___flge@ff2+2)^0,f,c
  8574  005180  0E80               	movlw	128
  8575  005182  1A26               	xorwf	(___flge@ff2+3)^0,f,c
  8576  005184  5023               	movf	___flge@ff2^0,w,c
  8577  005186  5C1F               	subwf	___flge@ff1^0,w,c
  8578  005188  5024               	movf	(___flge@ff2+1)^0,w,c
  8579  00518A  5820               	subwfb	(___flge@ff1+1)^0,w,c
  8580  00518C  5025               	movf	(___flge@ff2+2)^0,w,c
  8581  00518E  5821               	subwfb	(___flge@ff1+2)^0,w,c
  8582  005190  5026               	movf	(___flge@ff2+3)^0,w,c
  8583  005192  5822               	subwfb	(___flge@ff1+3)^0,w,c
  8584  005194  B0D8               	btfsc	status,0,c
  8585  005196  EFCF  F028         	goto	u3911
  8586  00519A  EFD1  F028         	goto	u3910
  8587  00519E                     u3911:
  8588  00519E  EFD4  F028         	goto	l3707
  8589  0051A2                     u3910:
  8590  0051A2  90D8               	bcf	status,0,c
  8591  0051A4  EFD5  F028         	goto	l481
  8592  0051A8                     l3707:
  8593  0051A8  80D8               	bsf	status,0,c
  8594  0051AA                     l481:
  8595  0051AA  0012               	return		;funcret
  8596  0051AC                     __end_of___flge:
  8597                           	callstack 0
  8598                           
  8599 ;; *************** function ___fleq *****************
  8600 ;; Defined at:
  8601 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\fleq.c"
  8602 ;; Parameters:    Size  Location     Type
  8603 ;;  ff1             4    0[COMRAM] unsigned char 
  8604 ;;  ff2             4    4[COMRAM] unsigned char 
  8605 ;; Auto vars:     Size  Location     Type
  8606 ;;		None
  8607 ;; Return value:  Size  Location     Type
  8608 ;;		None               void
  8609 ;; Registers used:
  8610 ;;		wreg, status,2, status,0
  8611 ;; Tracked objects:
  8612 ;;		On entry : 0/0
  8613 ;;		On exit  : 0/0
  8614 ;;		Unchanged: 0/0
  8615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8616 ;;      Params:         8       0       0       0       0       0       0
  8617 ;;      Locals:         0       0       0       0       0       0       0
  8618 ;;      Temps:          4       0       0       0       0       0       0
  8619 ;;      Totals:        12       0       0       0       0       0       0
  8620 ;;Total ram usage:       12 bytes
  8621 ;; Hardware stack levels used:    1
  8622 ;; This function calls:
  8623 ;;		Nothing
  8624 ;; This function is called by:
  8625 ;;		_efgtoa
  8626 ;; This function uses a non-reentrant model
  8627 ;;
  8628                           
  8629                           	psect	text27
  8630  004A40                     __ptext27:
  8631                           	callstack 0
  8632  004A40                     ___fleq:
  8633                           	callstack 25
  8634  004A40  0E00               	movlw	0
  8635  004A42  1401               	andwf	___fleq@ff1^0,w,c
  8636  004A44  6E09               	movwf	??___fleq^0,c
  8637  004A46  0E00               	movlw	0
  8638  004A48  1402               	andwf	(___fleq@ff1+1)^0,w,c
  8639  004A4A  6E0A               	movwf	(??___fleq+1)^0,c
  8640  004A4C  0E80               	movlw	128
  8641  004A4E  1403               	andwf	(___fleq@ff1+2)^0,w,c
  8642  004A50  6E0B               	movwf	(??___fleq+2)^0,c
  8643  004A52  0E7F               	movlw	127
  8644  004A54  1404               	andwf	(___fleq@ff1+3)^0,w,c
  8645  004A56  6E0C               	movwf	(??___fleq+3)^0,c
  8646  004A58  5009               	movf	??___fleq^0,w,c
  8647  004A5A  100A               	iorwf	(??___fleq+1)^0,w,c
  8648  004A5C  100B               	iorwf	(??___fleq+2)^0,w,c
  8649  004A5E  100C               	iorwf	(??___fleq+3)^0,w,c
  8650  004A60  A4D8               	btfss	status,2,c
  8651  004A62  EF35  F025         	goto	u3841
  8652  004A66  EF37  F025         	goto	u3840
  8653  004A6A                     u3841:
  8654  004A6A  EF3F  F025         	goto	l3677
  8655  004A6E                     u3840:
  8656  004A6E  0E00               	movlw	0
  8657  004A70  6E01               	movwf	___fleq@ff1^0,c
  8658  004A72  0E00               	movlw	0
  8659  004A74  6E02               	movwf	(___fleq@ff1+1)^0,c
  8660  004A76  0E00               	movlw	0
  8661  004A78  6E03               	movwf	(___fleq@ff1+2)^0,c
  8662  004A7A  0E00               	movlw	0
  8663  004A7C  6E04               	movwf	(___fleq@ff1+3)^0,c
  8664  004A7E                     l3677:
  8665  004A7E  0E00               	movlw	0
  8666  004A80  1405               	andwf	___fleq@ff2^0,w,c
  8667  004A82  6E09               	movwf	??___fleq^0,c
  8668  004A84  0E00               	movlw	0
  8669  004A86  1406               	andwf	(___fleq@ff2+1)^0,w,c
  8670  004A88  6E0A               	movwf	(??___fleq+1)^0,c
  8671  004A8A  0E80               	movlw	128
  8672  004A8C  1407               	andwf	(___fleq@ff2+2)^0,w,c
  8673  004A8E  6E0B               	movwf	(??___fleq+2)^0,c
  8674  004A90  0E7F               	movlw	127
  8675  004A92  1408               	andwf	(___fleq@ff2+3)^0,w,c
  8676  004A94  6E0C               	movwf	(??___fleq+3)^0,c
  8677  004A96  5009               	movf	??___fleq^0,w,c
  8678  004A98  100A               	iorwf	(??___fleq+1)^0,w,c
  8679  004A9A  100B               	iorwf	(??___fleq+2)^0,w,c
  8680  004A9C  100C               	iorwf	(??___fleq+3)^0,w,c
  8681  004A9E  A4D8               	btfss	status,2,c
  8682  004AA0  EF54  F025         	goto	u3851
  8683  004AA4  EF56  F025         	goto	u3850
  8684  004AA8                     u3851:
  8685  004AA8  EF5E  F025         	goto	l3681
  8686  004AAC                     u3850:
  8687  004AAC  0E00               	movlw	0
  8688  004AAE  6E05               	movwf	___fleq@ff2^0,c
  8689  004AB0  0E00               	movlw	0
  8690  004AB2  6E06               	movwf	(___fleq@ff2+1)^0,c
  8691  004AB4  0E00               	movlw	0
  8692  004AB6  6E07               	movwf	(___fleq@ff2+2)^0,c
  8693  004AB8  0E00               	movlw	0
  8694  004ABA  6E08               	movwf	(___fleq@ff2+3)^0,c
  8695  004ABC                     l3681:
  8696  004ABC  5005               	movf	___fleq@ff2^0,w,c
  8697  004ABE  1801               	xorwf	___fleq@ff1^0,w,c
  8698  004AC0  E10F               	bnz	u3860
  8699  004AC2  5006               	movf	(___fleq@ff2+1)^0,w,c
  8700  004AC4  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  8701  004AC6  E10C               	bnz	u3860
  8702  004AC8  5007               	movf	(___fleq@ff2+2)^0,w,c
  8703  004ACA  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  8704  004ACC  E109               	bnz	u3860
  8705  004ACE  5008               	movf	(___fleq@ff2+3)^0,w,c
  8706  004AD0  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  8707  004AD2  B4D8               	btfsc	status,2,c
  8708  004AD4  EF6E  F025         	goto	u3861
  8709  004AD8  EF70  F025         	goto	u3860
  8710  004ADC                     u3861:
  8711  004ADC  EF73  F025         	goto	l3685
  8712  004AE0                     u3860:
  8713  004AE0  90D8               	bcf	status,0,c
  8714  004AE2  EF74  F025         	goto	l470
  8715  004AE6                     l3685:
  8716  004AE6  80D8               	bsf	status,0,c
  8717  004AE8                     l470:
  8718  004AE8  0012               	return		;funcret
  8719  004AEA                     __end_of___fleq:
  8720                           	callstack 0
  8721                           
  8722 ;; *************** function ___fldiv *****************
  8723 ;; Defined at:
  8724 ;;		line 11 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
  8725 ;; Parameters:    Size  Location     Type
  8726 ;;  b               4    0[COMRAM] unsigned char 
  8727 ;;  a               4    4[COMRAM] unsigned char 
  8728 ;; Auto vars:     Size  Location     Type
  8729 ;;  grs             4   19[COMRAM] unsigned long 
  8730 ;;  rem             4   12[COMRAM] unsigned long 
  8731 ;;  new_exp         2   17[COMRAM] short 
  8732 ;;  aexp            1   24[COMRAM] unsigned char 
  8733 ;;  bexp            1   23[COMRAM] unsigned char 
  8734 ;;  sign            1   16[COMRAM] unsigned char 
  8735 ;; Return value:  Size  Location     Type
  8736 ;;                  4    0[COMRAM] unsigned char 
  8737 ;; Registers used:
  8738 ;;		wreg, status,2, status,0
  8739 ;; Tracked objects:
  8740 ;;		On entry : 0/0
  8741 ;;		On exit  : 0/0
  8742 ;;		Unchanged: 0/0
  8743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8744 ;;      Params:         8       0       0       0       0       0       0
  8745 ;;      Locals:        13       0       0       0       0       0       0
  8746 ;;      Temps:          4       0       0       0       0       0       0
  8747 ;;      Totals:        25       0       0       0       0       0       0
  8748 ;;Total ram usage:       25 bytes
  8749 ;; Hardware stack levels used:    1
  8750 ;; This function calls:
  8751 ;;		Nothing
  8752 ;; This function is called by:
  8753 ;;		_esvaziar_tanque
  8754 ;;		_efgtoa
  8755 ;; This function uses a non-reentrant model
  8756 ;;
  8757                           
  8758                           	psect	text28
  8759  005DD8                     __ptext28:
  8760                           	callstack 0
  8761  005DD8                     ___fldiv:
  8762                           	callstack 25
  8763  005DD8  5004               	movf	(___fldiv@b+3)^0,w,c
  8764  005DDA  0B80               	andlw	128
  8765  005DDC  6E11               	movwf	___fldiv@sign^0,c
  8766  005DDE  5004               	movf	(___fldiv@b+3)^0,w,c
  8767  005DE0  2404               	addwf	(___fldiv@b+3)^0,w,c
  8768  005DE2  6E18               	movwf	___fldiv@bexp^0,c
  8769  005DE4  AE03               	btfss	(___fldiv@b+2)^0,7,c
  8770  005DE6  EFF7  F02E         	goto	u3301
  8771  005DEA  EFF9  F02E         	goto	u3300
  8772  005DEE                     u3301:
  8773  005DEE  EFFA  F02E         	goto	l3325
  8774  005DF2                     u3300:
  8775  005DF2  8018               	bsf	___fldiv@bexp^0,0,c
  8776  005DF4                     l3325:
  8777  005DF4  5018               	movf	___fldiv@bexp^0,w,c
  8778  005DF6  B4D8               	btfsc	status,2,c
  8779  005DF8  EF00  F02F         	goto	u3311
  8780  005DFC  EF02  F02F         	goto	u3310
  8781  005E00                     u3311:
  8782  005E00  EF17  F02F         	goto	l3335
  8783  005E04                     u3310:
  8784  005E04  2818               	incf	___fldiv@bexp^0,w,c
  8785  005E06  A4D8               	btfss	status,2,c
  8786  005E08  EF08  F02F         	goto	u3321
  8787  005E0C  EF0A  F02F         	goto	u3320
  8788  005E10                     u3321:
  8789  005E10  EF12  F02F         	goto	l3331
  8790  005E14                     u3320:
  8791  005E14  0E00               	movlw	0
  8792  005E16  6E01               	movwf	___fldiv@b^0,c
  8793  005E18  0E00               	movlw	0
  8794  005E1A  6E02               	movwf	(___fldiv@b+1)^0,c
  8795  005E1C  0E00               	movlw	0
  8796  005E1E  6E03               	movwf	(___fldiv@b+2)^0,c
  8797  005E20  0E00               	movlw	0
  8798  005E22  6E04               	movwf	(___fldiv@b+3)^0,c
  8799  005E24                     l3331:
  8800  005E24  8E03               	bsf	(___fldiv@b+2)^0,7,c
  8801  005E26  0E00               	movlw	0
  8802  005E28  6E04               	movwf	(___fldiv@b+3)^0,c
  8803  005E2A  EF1F  F02F         	goto	l3337
  8804  005E2E                     l3335:
  8805  005E2E  0E00               	movlw	0
  8806  005E30  6E01               	movwf	___fldiv@b^0,c
  8807  005E32  0E00               	movlw	0
  8808  005E34  6E02               	movwf	(___fldiv@b+1)^0,c
  8809  005E36  0E00               	movlw	0
  8810  005E38  6E03               	movwf	(___fldiv@b+2)^0,c
  8811  005E3A  0E00               	movlw	0
  8812  005E3C  6E04               	movwf	(___fldiv@b+3)^0,c
  8813  005E3E                     l3337:
  8814  005E3E  5008               	movf	(___fldiv@a+3)^0,w,c
  8815  005E40  0B80               	andlw	128
  8816  005E42  1A11               	xorwf	___fldiv@sign^0,f,c
  8817  005E44  5008               	movf	(___fldiv@a+3)^0,w,c
  8818  005E46  2408               	addwf	(___fldiv@a+3)^0,w,c
  8819  005E48  6E19               	movwf	___fldiv@aexp^0,c
  8820  005E4A  AE07               	btfss	(___fldiv@a+2)^0,7,c
  8821  005E4C  EF2A  F02F         	goto	u3331
  8822  005E50  EF2C  F02F         	goto	u3330
  8823  005E54                     u3331:
  8824  005E54  EF2D  F02F         	goto	l3345
  8825  005E58                     u3330:
  8826  005E58  8019               	bsf	___fldiv@aexp^0,0,c
  8827  005E5A                     l3345:
  8828  005E5A  5019               	movf	___fldiv@aexp^0,w,c
  8829  005E5C  B4D8               	btfsc	status,2,c
  8830  005E5E  EF33  F02F         	goto	u3341
  8831  005E62  EF35  F02F         	goto	u3340
  8832  005E66                     u3341:
  8833  005E66  EF4A  F02F         	goto	l3355
  8834  005E6A                     u3340:
  8835  005E6A  2819               	incf	___fldiv@aexp^0,w,c
  8836  005E6C  A4D8               	btfss	status,2,c
  8837  005E6E  EF3B  F02F         	goto	u3351
  8838  005E72  EF3D  F02F         	goto	u3350
  8839  005E76                     u3351:
  8840  005E76  EF45  F02F         	goto	l3351
  8841  005E7A                     u3350:
  8842  005E7A  0E00               	movlw	0
  8843  005E7C  6E05               	movwf	___fldiv@a^0,c
  8844  005E7E  0E00               	movlw	0
  8845  005E80  6E06               	movwf	(___fldiv@a+1)^0,c
  8846  005E82  0E00               	movlw	0
  8847  005E84  6E07               	movwf	(___fldiv@a+2)^0,c
  8848  005E86  0E00               	movlw	0
  8849  005E88  6E08               	movwf	(___fldiv@a+3)^0,c
  8850  005E8A                     l3351:
  8851  005E8A  8E07               	bsf	(___fldiv@a+2)^0,7,c
  8852  005E8C  0E00               	movlw	0
  8853  005E8E  6E08               	movwf	(___fldiv@a+3)^0,c
  8854  005E90  EF52  F02F         	goto	l3357
  8855  005E94                     l3355:
  8856  005E94  0E00               	movlw	0
  8857  005E96  6E05               	movwf	___fldiv@a^0,c
  8858  005E98  0E00               	movlw	0
  8859  005E9A  6E06               	movwf	(___fldiv@a+1)^0,c
  8860  005E9C  0E00               	movlw	0
  8861  005E9E  6E07               	movwf	(___fldiv@a+2)^0,c
  8862  005EA0  0E00               	movlw	0
  8863  005EA2  6E08               	movwf	(___fldiv@a+3)^0,c
  8864  005EA4                     l3357:
  8865  005EA4  5005               	movf	___fldiv@a^0,w,c
  8866  005EA6  1006               	iorwf	(___fldiv@a+1)^0,w,c
  8867  005EA8  1007               	iorwf	(___fldiv@a+2)^0,w,c
  8868  005EAA  1008               	iorwf	(___fldiv@a+3)^0,w,c
  8869  005EAC  A4D8               	btfss	status,2,c
  8870  005EAE  EF5B  F02F         	goto	u3361
  8871  005EB2  EF5D  F02F         	goto	u3360
  8872  005EB6                     u3361:
  8873  005EB6  EF75  F02F         	goto	l3369
  8874  005EBA                     u3360:
  8875  005EBA  0E00               	movlw	0
  8876  005EBC  6E01               	movwf	___fldiv@b^0,c
  8877  005EBE  0E00               	movlw	0
  8878  005EC0  6E02               	movwf	(___fldiv@b+1)^0,c
  8879  005EC2  0E00               	movlw	0
  8880  005EC4  6E03               	movwf	(___fldiv@b+2)^0,c
  8881  005EC6  0E00               	movlw	0
  8882  005EC8  6E04               	movwf	(___fldiv@b+3)^0,c
  8883  005ECA  0E80               	movlw	128
  8884  005ECC  1203               	iorwf	(___fldiv@b+2)^0,f,c
  8885  005ECE  0E7F               	movlw	127
  8886  005ED0  1204               	iorwf	(___fldiv@b+3)^0,f,c
  8887  005ED2                     l3363:
  8888  005ED2  5011               	movf	___fldiv@sign^0,w,c
  8889  005ED4  1204               	iorwf	(___fldiv@b+3)^0,f,c
  8890  005ED6  C001  F001         	movff	___fldiv@b,?___fldiv
  8891  005EDA  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  8892  005EDE  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  8893  005EE2  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  8894  005EE6  EFB8  F030         	goto	l793
  8895  005EEA                     l3369:
  8896  005EEA  5018               	movf	___fldiv@bexp^0,w,c
  8897  005EEC  A4D8               	btfss	status,2,c
  8898  005EEE  EF7B  F02F         	goto	u3371
  8899  005EF2  EF7D  F02F         	goto	u3370
  8900  005EF6                     u3371:
  8901  005EF6  EF87  F02F         	goto	l3377
  8902  005EFA                     u3370:
  8903  005EFA  0E00               	movlw	0
  8904  005EFC  6E01               	movwf	?___fldiv^0,c
  8905  005EFE  0E00               	movlw	0
  8906  005F00  6E02               	movwf	(?___fldiv+1)^0,c
  8907  005F02  0E00               	movlw	0
  8908  005F04  6E03               	movwf	(?___fldiv+2)^0,c
  8909  005F06  0E00               	movlw	0
  8910  005F08  6E04               	movwf	(?___fldiv+3)^0,c
  8911  005F0A  EFB8  F030         	goto	l793
  8912  005F0E                     l3377:
  8913  005F0E  5019               	movf	___fldiv@aexp^0,w,c
  8914  005F10  C018  F009         	movff	___fldiv@bexp,??___fldiv
  8915  005F14  6A0A               	clrf	(??___fldiv+1)^0,c
  8916  005F16  5E09               	subwf	??___fldiv^0,f,c
  8917  005F18  0E00               	movlw	0
  8918  005F1A  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  8919  005F1C  0E7F               	movlw	127
  8920  005F1E  2409               	addwf	??___fldiv^0,w,c
  8921  005F20  6E12               	movwf	___fldiv@new_exp^0,c
  8922  005F22  0E00               	movlw	0
  8923  005F24  200A               	addwfc	(??___fldiv+1)^0,w,c
  8924  005F26  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8925  005F28  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  8926  005F2C  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  8927  005F30  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  8928  005F34  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  8929  005F38  0E00               	movlw	0
  8930  005F3A  6E01               	movwf	___fldiv@b^0,c
  8931  005F3C  0E00               	movlw	0
  8932  005F3E  6E02               	movwf	(___fldiv@b+1)^0,c
  8933  005F40  0E00               	movlw	0
  8934  005F42  6E03               	movwf	(___fldiv@b+2)^0,c
  8935  005F44  0E00               	movlw	0
  8936  005F46  6E04               	movwf	(___fldiv@b+3)^0,c
  8937  005F48  0E00               	movlw	0
  8938  005F4A  6E14               	movwf	___fldiv@grs^0,c
  8939  005F4C  0E00               	movlw	0
  8940  005F4E  6E15               	movwf	(___fldiv@grs+1)^0,c
  8941  005F50  0E00               	movlw	0
  8942  005F52  6E16               	movwf	(___fldiv@grs+2)^0,c
  8943  005F54  0E00               	movlw	0
  8944  005F56  6E17               	movwf	(___fldiv@grs+3)^0,c
  8945  005F58  0E00               	movlw	0
  8946  005F5A  6E19               	movwf	___fldiv@aexp^0,c
  8947  005F5C  EFE8  F02F         	goto	l795
  8948  005F60                     l3387:
  8949  005F60  5019               	movf	___fldiv@aexp^0,w,c
  8950  005F62  B4D8               	btfsc	status,2,c
  8951  005F64  EFB6  F02F         	goto	u3381
  8952  005F68  EFB8  F02F         	goto	u3380
  8953  005F6C                     u3381:
  8954  005F6C  EFCF  F02F         	goto	l3395
  8955  005F70                     u3380:
  8956  005F70  90D8               	bcf	status,0,c
  8957  005F72  360D               	rlcf	___fldiv@rem^0,f,c
  8958  005F74  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  8959  005F76  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  8960  005F78  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  8961  005F7A  90D8               	bcf	status,0,c
  8962  005F7C  3601               	rlcf	___fldiv@b^0,f,c
  8963  005F7E  3602               	rlcf	(___fldiv@b+1)^0,f,c
  8964  005F80  3603               	rlcf	(___fldiv@b+2)^0,f,c
  8965  005F82  3604               	rlcf	(___fldiv@b+3)^0,f,c
  8966  005F84  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8967  005F86  EFC7  F02F         	goto	u3391
  8968  005F8A  EFC9  F02F         	goto	u3390
  8969  005F8E                     u3391:
  8970  005F8E  EFCA  F02F         	goto	l798
  8971  005F92                     u3390:
  8972  005F92  8001               	bsf	___fldiv@b^0,0,c
  8973  005F94                     l798:
  8974  005F94  90D8               	bcf	status,0,c
  8975  005F96  3614               	rlcf	___fldiv@grs^0,f,c
  8976  005F98  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  8977  005F9A  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  8978  005F9C  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  8979  005F9E                     l3395:
  8980  005F9E  5005               	movf	___fldiv@a^0,w,c
  8981  005FA0  5C0D               	subwf	___fldiv@rem^0,w,c
  8982  005FA2  5006               	movf	(___fldiv@a+1)^0,w,c
  8983  005FA4  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  8984  005FA6  5007               	movf	(___fldiv@a+2)^0,w,c
  8985  005FA8  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  8986  005FAA  5008               	movf	(___fldiv@a+3)^0,w,c
  8987  005FAC  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  8988  005FAE  A0D8               	btfss	status,0,c
  8989  005FB0  EFDC  F02F         	goto	u3401
  8990  005FB4  EFDE  F02F         	goto	u3400
  8991  005FB8                     u3401:
  8992  005FB8  EFE7  F02F         	goto	l3401
  8993  005FBC                     u3400:
  8994  005FBC  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  8995  005FBE  5005               	movf	___fldiv@a^0,w,c
  8996  005FC0  5E0D               	subwf	___fldiv@rem^0,f,c
  8997  005FC2  5006               	movf	(___fldiv@a+1)^0,w,c
  8998  005FC4  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  8999  005FC6  5007               	movf	(___fldiv@a+2)^0,w,c
  9000  005FC8  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  9001  005FCA  5008               	movf	(___fldiv@a+3)^0,w,c
  9002  005FCC  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  9003  005FCE                     l3401:
  9004  005FCE  2A19               	incf	___fldiv@aexp^0,f,c
  9005  005FD0                     l795:
  9006  005FD0  0E19               	movlw	25
  9007  005FD2  6419               	cpfsgt	___fldiv@aexp^0,c
  9008  005FD4  EFEE  F02F         	goto	u3411
  9009  005FD8  EFF0  F02F         	goto	u3410
  9010  005FDC                     u3411:
  9011  005FDC  EFB0  F02F         	goto	l3387
  9012  005FE0                     u3410:
  9013  005FE0  500D               	movf	___fldiv@rem^0,w,c
  9014  005FE2  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  9015  005FE4  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  9016  005FE6  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  9017  005FE8  B4D8               	btfsc	status,2,c
  9018  005FEA  EFF9  F02F         	goto	u3421
  9019  005FEE  EFFB  F02F         	goto	u3420
  9020  005FF2                     u3421:
  9021  005FF2  EF13  F030         	goto	l3413
  9022  005FF6                     u3420:
  9023  005FF6  8014               	bsf	___fldiv@grs^0,0,c
  9024  005FF8  EF13  F030         	goto	l3413
  9025  005FFC                     l3407:
  9026  005FFC  90D8               	bcf	status,0,c
  9027  005FFE  3601               	rlcf	___fldiv@b^0,f,c
  9028  006000  3602               	rlcf	(___fldiv@b+1)^0,f,c
  9029  006002  3603               	rlcf	(___fldiv@b+2)^0,f,c
  9030  006004  3604               	rlcf	(___fldiv@b+3)^0,f,c
  9031  006006  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  9032  006008  EF08  F030         	goto	u3431
  9033  00600C  EF0A  F030         	goto	u3430
  9034  006010                     u3431:
  9035  006010  EF0B  F030         	goto	l804
  9036  006014                     u3430:
  9037  006014  8001               	bsf	___fldiv@b^0,0,c
  9038  006016                     l804:
  9039  006016  90D8               	bcf	status,0,c
  9040  006018  3614               	rlcf	___fldiv@grs^0,f,c
  9041  00601A  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  9042  00601C  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  9043  00601E  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  9044  006020  0612               	decf	___fldiv@new_exp^0,f,c
  9045  006022  A0D8               	btfss	status,0,c
  9046  006024  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  9047  006026                     l3413:
  9048  006026  AE03               	btfss	(___fldiv@b+2)^0,7,c
  9049  006028  EF18  F030         	goto	u3441
  9050  00602C  EF1A  F030         	goto	u3440
  9051  006030                     u3441:
  9052  006030  EFFE  F02F         	goto	l3407
  9053  006034                     u3440:
  9054  006034  0E00               	movlw	0
  9055  006036  6E19               	movwf	___fldiv@aexp^0,c
  9056  006038  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  9057  00603A  EF21  F030         	goto	u3451
  9058  00603E  EF23  F030         	goto	u3450
  9059  006042                     u3451:
  9060  006042  EF47  F030         	goto	l806
  9061  006046                     u3450:
  9062  006046  0EFF               	movlw	255
  9063  006048  1414               	andwf	___fldiv@grs^0,w,c
  9064  00604A  6E09               	movwf	??___fldiv^0,c
  9065  00604C  0EFF               	movlw	255
  9066  00604E  1415               	andwf	(___fldiv@grs+1)^0,w,c
  9067  006050  6E0A               	movwf	(??___fldiv+1)^0,c
  9068  006052  0EFF               	movlw	255
  9069  006054  1416               	andwf	(___fldiv@grs+2)^0,w,c
  9070  006056  6E0B               	movwf	(??___fldiv+2)^0,c
  9071  006058  0E7F               	movlw	127
  9072  00605A  1417               	andwf	(___fldiv@grs+3)^0,w,c
  9073  00605C  6E0C               	movwf	(??___fldiv+3)^0,c
  9074  00605E  5009               	movf	??___fldiv^0,w,c
  9075  006060  100A               	iorwf	(??___fldiv+1)^0,w,c
  9076  006062  100B               	iorwf	(??___fldiv+2)^0,w,c
  9077  006064  100C               	iorwf	(??___fldiv+3)^0,w,c
  9078  006066  B4D8               	btfsc	status,2,c
  9079  006068  EF38  F030         	goto	u3461
  9080  00606C  EF3A  F030         	goto	u3460
  9081  006070                     u3461:
  9082  006070  EF3E  F030         	goto	l807
  9083  006074                     u3460:
  9084  006074                     l3421:
  9085  006074  0E01               	movlw	1
  9086  006076  6E19               	movwf	___fldiv@aexp^0,c
  9087  006078  EF47  F030         	goto	l806
  9088  00607C                     l807:
  9089  00607C  A001               	btfss	___fldiv@b^0,0,c
  9090  00607E  EF43  F030         	goto	u3471
  9091  006082  EF45  F030         	goto	u3470
  9092  006086                     u3471:
  9093  006086  EF47  F030         	goto	l806
  9094  00608A                     u3470:
  9095  00608A  EF3A  F030         	goto	l3421
  9096  00608E                     l806:
  9097  00608E  5019               	movf	___fldiv@aexp^0,w,c
  9098  006090  B4D8               	btfsc	status,2,c
  9099  006092  EF4D  F030         	goto	u3481
  9100  006096  EF4F  F030         	goto	u3480
  9101  00609A                     u3481:
  9102  00609A  EF73  F030         	goto	l3433
  9103  00609E                     u3480:
  9104  00609E  0E01               	movlw	1
  9105  0060A0  2601               	addwf	___fldiv@b^0,f,c
  9106  0060A2  0E00               	movlw	0
  9107  0060A4  2202               	addwfc	(___fldiv@b+1)^0,f,c
  9108  0060A6  2203               	addwfc	(___fldiv@b+2)^0,f,c
  9109  0060A8  2204               	addwfc	(___fldiv@b+3)^0,f,c
  9110  0060AA  A004               	btfss	(___fldiv@b+3)^0,0,c
  9111  0060AC  EF5A  F030         	goto	u3491
  9112  0060B0  EF5C  F030         	goto	u3490
  9113  0060B4                     u3491:
  9114  0060B4  EF73  F030         	goto	l3433
  9115  0060B8                     u3490:
  9116  0060B8  C001  F009         	movff	___fldiv@b,??___fldiv
  9117  0060BC  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  9118  0060C0  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  9119  0060C4  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  9120  0060C8  340C               	rlcf	(??___fldiv+3)^0,w,c
  9121  0060CA  320C               	rrcf	(??___fldiv+3)^0,f,c
  9122  0060CC  320B               	rrcf	(??___fldiv+2)^0,f,c
  9123  0060CE  320A               	rrcf	(??___fldiv+1)^0,f,c
  9124  0060D0  3209               	rrcf	??___fldiv^0,f,c
  9125  0060D2  C009  F001         	movff	??___fldiv,___fldiv@b
  9126  0060D6  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  9127  0060DA  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  9128  0060DE  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  9129  0060E2  4A12               	infsnz	___fldiv@new_exp^0,f,c
  9130  0060E4  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  9131  0060E6                     l3433:
  9132  0060E6  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9133  0060E8  EF7E  F030         	goto	u3501
  9134  0060EC  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  9135  0060EE  E108               	bnz	u3500
  9136  0060F0  2812               	incf	___fldiv@new_exp^0,w,c
  9137  0060F2  A0D8               	btfss	status,0,c
  9138  0060F4  EF7E  F030         	goto	u3501
  9139  0060F8  EF80  F030         	goto	u3500
  9140  0060FC                     u3501:
  9141  0060FC  EF8B  F030         	goto	l3437
  9142  006100                     u3500:
  9143  006100  0E00               	movlw	0
  9144  006102  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  9145  006104  6812               	setf	___fldiv@new_exp^0,c
  9146  006106  0E00               	movlw	0
  9147  006108  6E01               	movwf	___fldiv@b^0,c
  9148  00610A  0E00               	movlw	0
  9149  00610C  6E02               	movwf	(___fldiv@b+1)^0,c
  9150  00610E  0E00               	movlw	0
  9151  006110  6E03               	movwf	(___fldiv@b+2)^0,c
  9152  006112  0E00               	movlw	0
  9153  006114  6E04               	movwf	(___fldiv@b+3)^0,c
  9154  006116                     l3437:
  9155  006116  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9156  006118  EF98  F030         	goto	u3510
  9157  00611C  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  9158  00611E  E106               	bnz	u3511
  9159  006120  0412               	decf	___fldiv@new_exp^0,w,c
  9160  006122  B0D8               	btfsc	status,0,c
  9161  006124  EF96  F030         	goto	u3511
  9162  006128  EF98  F030         	goto	u3510
  9163  00612C                     u3511:
  9164  00612C  EFA6  F030         	goto	l3441
  9165  006130                     u3510:
  9166  006130  0E00               	movlw	0
  9167  006132  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  9168  006134  0E00               	movlw	0
  9169  006136  6E12               	movwf	___fldiv@new_exp^0,c
  9170  006138  0E00               	movlw	0
  9171  00613A  6E01               	movwf	___fldiv@b^0,c
  9172  00613C  0E00               	movlw	0
  9173  00613E  6E02               	movwf	(___fldiv@b+1)^0,c
  9174  006140  0E00               	movlw	0
  9175  006142  6E03               	movwf	(___fldiv@b+2)^0,c
  9176  006144  0E00               	movlw	0
  9177  006146  6E04               	movwf	(___fldiv@b+3)^0,c
  9178  006148  0E00               	movlw	0
  9179  00614A  6E11               	movwf	___fldiv@sign^0,c
  9180  00614C                     l3441:
  9181  00614C  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  9182  006150  A018               	btfss	___fldiv@bexp^0,0,c
  9183  006152  EFAD  F030         	goto	u3521
  9184  006156  EFAF  F030         	goto	u3520
  9185  00615A                     u3521:
  9186  00615A  EFB2  F030         	goto	l3447
  9187  00615E                     u3520:
  9188  00615E  8E03               	bsf	(___fldiv@b+2)^0,7,c
  9189  006160  EFB3  F030         	goto	l3449
  9190  006164                     l3447:
  9191  006164  9E03               	bcf	(___fldiv@b+2)^0,7,c
  9192  006166                     l3449:
  9193  006166  90D8               	bcf	status,0,c
  9194  006168  3018               	rrcf	___fldiv@bexp^0,w,c
  9195  00616A  6E04               	movwf	(___fldiv@b+3)^0,c
  9196  00616C  EF69  F02F         	goto	l3363
  9197  006170                     l793:
  9198  006170  0012               	return		;funcret
  9199  006172                     __end_of___fldiv:
  9200                           	callstack 0
  9201                           
  9202 ;; *************** function ___awmod *****************
  9203 ;; Defined at:
  9204 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\awmod.c"
  9205 ;; Parameters:    Size  Location     Type
  9206 ;;  dividend        2    0[COMRAM] int 
  9207 ;;  divisor         2    2[COMRAM] int 
  9208 ;; Auto vars:     Size  Location     Type
  9209 ;;  sign            1    5[COMRAM] unsigned char 
  9210 ;;  counter         1    4[COMRAM] unsigned char 
  9211 ;; Return value:  Size  Location     Type
  9212 ;;                  2    0[COMRAM] int 
  9213 ;; Registers used:
  9214 ;;		wreg, status,2, status,0
  9215 ;; Tracked objects:
  9216 ;;		On entry : 0/0
  9217 ;;		On exit  : 0/0
  9218 ;;		Unchanged: 0/0
  9219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9220 ;;      Params:         4       0       0       0       0       0       0
  9221 ;;      Locals:         2       0       0       0       0       0       0
  9222 ;;      Temps:          0       0       0       0       0       0       0
  9223 ;;      Totals:         6       0       0       0       0       0       0
  9224 ;;Total ram usage:        6 bytes
  9225 ;; Hardware stack levels used:    1
  9226 ;; This function calls:
  9227 ;;		Nothing
  9228 ;; This function is called by:
  9229 ;;		_encher_tanque
  9230 ;;		_efgtoa
  9231 ;; This function uses a non-reentrant model
  9232 ;;
  9233                           
  9234                           	psect	text29
  9235  004AEA                     __ptext29:
  9236                           	callstack 0
  9237  004AEA                     ___awmod:
  9238                           	callstack 25
  9239  004AEA  0E00               	movlw	0
  9240  004AEC  6E06               	movwf	___awmod@sign^0,c
  9241  004AEE  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  9242  004AF0  EF7E  F025         	goto	u3780
  9243  004AF4  EF7C  F025         	goto	u3781
  9244  004AF8                     u3781:
  9245  004AF8  EF84  F025         	goto	l3645
  9246  004AFC                     u3780:
  9247  004AFC  6C01               	negf	___awmod@dividend^0,c
  9248  004AFE  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9249  004B00  B0D8               	btfsc	status,0,c
  9250  004B02  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9251  004B04  0E01               	movlw	1
  9252  004B06  6E06               	movwf	___awmod@sign^0,c
  9253  004B08                     l3645:
  9254  004B08  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  9255  004B0A  EF8B  F025         	goto	u3790
  9256  004B0E  EF89  F025         	goto	u3791
  9257  004B12                     u3791:
  9258  004B12  EF8F  F025         	goto	l3649
  9259  004B16                     u3790:
  9260  004B16  6C03               	negf	___awmod@divisor^0,c
  9261  004B18  1E04               	comf	(___awmod@divisor+1)^0,f,c
  9262  004B1A  B0D8               	btfsc	status,0,c
  9263  004B1C  2A04               	incf	(___awmod@divisor+1)^0,f,c
  9264  004B1E                     l3649:
  9265  004B1E  5003               	movf	___awmod@divisor^0,w,c
  9266  004B20  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  9267  004B22  B4D8               	btfsc	status,2,c
  9268  004B24  EF96  F025         	goto	u3801
  9269  004B28  EF98  F025         	goto	u3800
  9270  004B2C                     u3801:
  9271  004B2C  EFBC  F025         	goto	l3665
  9272  004B30                     u3800:
  9273  004B30  0E01               	movlw	1
  9274  004B32  6E05               	movwf	___awmod@counter^0,c
  9275  004B34  EFA0  F025         	goto	l3655
  9276  004B38                     l3653:
  9277  004B38  90D8               	bcf	status,0,c
  9278  004B3A  3603               	rlcf	___awmod@divisor^0,f,c
  9279  004B3C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  9280  004B3E  2A05               	incf	___awmod@counter^0,f,c
  9281  004B40                     l3655:
  9282  004B40  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  9283  004B42  EFA5  F025         	goto	u3811
  9284  004B46  EFA7  F025         	goto	u3810
  9285  004B4A                     u3811:
  9286  004B4A  EF9C  F025         	goto	l3653
  9287  004B4E                     u3810:
  9288  004B4E                     l3657:
  9289  004B4E  5003               	movf	___awmod@divisor^0,w,c
  9290  004B50  5C01               	subwf	___awmod@dividend^0,w,c
  9291  004B52  5004               	movf	(___awmod@divisor+1)^0,w,c
  9292  004B54  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  9293  004B56  A0D8               	btfss	status,0,c
  9294  004B58  EFB0  F025         	goto	u3821
  9295  004B5C  EFB2  F025         	goto	u3820
  9296  004B60                     u3821:
  9297  004B60  EFB6  F025         	goto	l3661
  9298  004B64                     u3820:
  9299  004B64  5003               	movf	___awmod@divisor^0,w,c
  9300  004B66  5E01               	subwf	___awmod@dividend^0,f,c
  9301  004B68  5004               	movf	(___awmod@divisor+1)^0,w,c
  9302  004B6A  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  9303  004B6C                     l3661:
  9304  004B6C  90D8               	bcf	status,0,c
  9305  004B6E  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  9306  004B70  3203               	rrcf	___awmod@divisor^0,f,c
  9307  004B72  2E05               	decfsz	___awmod@counter^0,f,c
  9308  004B74  EFA7  F025         	goto	l3657
  9309  004B78                     l3665:
  9310  004B78  5006               	movf	___awmod@sign^0,w,c
  9311  004B7A  B4D8               	btfsc	status,2,c
  9312  004B7C  EFC2  F025         	goto	u3831
  9313  004B80  EFC4  F025         	goto	u3830
  9314  004B84                     u3831:
  9315  004B84  EFC8  F025         	goto	l3669
  9316  004B88                     u3830:
  9317  004B88  6C01               	negf	___awmod@dividend^0,c
  9318  004B8A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9319  004B8C  B0D8               	btfsc	status,0,c
  9320  004B8E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9321  004B90                     l3669:
  9322  004B90  C001  F001         	movff	___awmod@dividend,?___awmod
  9323  004B94  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  9324  004B98  0012               	return		;funcret
  9325  004B9A                     __end_of___awmod:
  9326                           	callstack 0
  9327                           
  9328 ;; *************** function ___awdiv *****************
  9329 ;; Defined at:
  9330 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  9331 ;; Parameters:    Size  Location     Type
  9332 ;;  dividend        2    6[COMRAM] int 
  9333 ;;  divisor         2    8[COMRAM] int 
  9334 ;; Auto vars:     Size  Location     Type
  9335 ;;  quotient        2   12[COMRAM] int 
  9336 ;;  sign            1   11[COMRAM] unsigned char 
  9337 ;;  counter         1   10[COMRAM] unsigned char 
  9338 ;; Return value:  Size  Location     Type
  9339 ;;                  2    6[COMRAM] int 
  9340 ;; Registers used:
  9341 ;;		wreg, status,2, status,0
  9342 ;; Tracked objects:
  9343 ;;		On entry : 0/0
  9344 ;;		On exit  : 0/0
  9345 ;;		Unchanged: 0/0
  9346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9347 ;;      Params:         4       0       0       0       0       0       0
  9348 ;;      Locals:         4       0       0       0       0       0       0
  9349 ;;      Temps:          0       0       0       0       0       0       0
  9350 ;;      Totals:         8       0       0       0       0       0       0
  9351 ;;Total ram usage:        8 bytes
  9352 ;; Hardware stack levels used:    1
  9353 ;; This function calls:
  9354 ;;		Nothing
  9355 ;; This function is called by:
  9356 ;;		_encher_tanque
  9357 ;;		_efgtoa
  9358 ;; This function uses a non-reentrant model
  9359 ;;
  9360                           
  9361                           	psect	text30
  9362  004B9A                     __ptext30:
  9363                           	callstack 0
  9364  004B9A                     ___awdiv:
  9365                           	callstack 25
  9366  004B9A  0E00               	movlw	0
  9367  004B9C  6E0C               	movwf	___awdiv@sign^0,c
  9368  004B9E  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  9369  004BA0  EFD6  F025         	goto	u3720
  9370  004BA4  EFD4  F025         	goto	u3721
  9371  004BA8                     u3721:
  9372  004BA8  EFDC  F025         	goto	l3601
  9373  004BAC                     u3720:
  9374  004BAC  6C09               	negf	___awdiv@divisor^0,c
  9375  004BAE  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  9376  004BB0  B0D8               	btfsc	status,0,c
  9377  004BB2  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  9378  004BB4  0E01               	movlw	1
  9379  004BB6  6E0C               	movwf	___awdiv@sign^0,c
  9380  004BB8                     l3601:
  9381  004BB8  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  9382  004BBA  EFE3  F025         	goto	u3730
  9383  004BBE  EFE1  F025         	goto	u3731
  9384  004BC2                     u3731:
  9385  004BC2  EFE9  F025         	goto	l3607
  9386  004BC6                     u3730:
  9387  004BC6  6C07               	negf	___awdiv@dividend^0,c
  9388  004BC8  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  9389  004BCA  B0D8               	btfsc	status,0,c
  9390  004BCC  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  9391  004BCE  0E01               	movlw	1
  9392  004BD0  1A0C               	xorwf	___awdiv@sign^0,f,c
  9393  004BD2                     l3607:
  9394  004BD2  0E00               	movlw	0
  9395  004BD4  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  9396  004BD6  0E00               	movlw	0
  9397  004BD8  6E0D               	movwf	___awdiv@quotient^0,c
  9398  004BDA  5009               	movf	___awdiv@divisor^0,w,c
  9399  004BDC  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  9400  004BDE  B4D8               	btfsc	status,2,c
  9401  004BE0  EFF4  F025         	goto	u3741
  9402  004BE4  EFF6  F025         	goto	u3740
  9403  004BE8                     u3741:
  9404  004BE8  EF1E  F026         	goto	l3629
  9405  004BEC                     u3740:
  9406  004BEC  0E01               	movlw	1
  9407  004BEE  6E0B               	movwf	___awdiv@counter^0,c
  9408  004BF0  EFFE  F025         	goto	l3615
  9409  004BF4                     l3613:
  9410  004BF4  90D8               	bcf	status,0,c
  9411  004BF6  3609               	rlcf	___awdiv@divisor^0,f,c
  9412  004BF8  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  9413  004BFA  2A0B               	incf	___awdiv@counter^0,f,c
  9414  004BFC                     l3615:
  9415  004BFC  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  9416  004BFE  EF03  F026         	goto	u3751
  9417  004C02  EF05  F026         	goto	u3750
  9418  004C06                     u3751:
  9419  004C06  EFFA  F025         	goto	l3613
  9420  004C0A                     u3750:
  9421  004C0A                     l3617:
  9422  004C0A  90D8               	bcf	status,0,c
  9423  004C0C  360D               	rlcf	___awdiv@quotient^0,f,c
  9424  004C0E  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  9425  004C10  5009               	movf	___awdiv@divisor^0,w,c
  9426  004C12  5C07               	subwf	___awdiv@dividend^0,w,c
  9427  004C14  500A               	movf	(___awdiv@divisor+1)^0,w,c
  9428  004C16  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  9429  004C18  A0D8               	btfss	status,0,c
  9430  004C1A  EF11  F026         	goto	u3761
  9431  004C1E  EF13  F026         	goto	u3760
  9432  004C22                     u3761:
  9433  004C22  EF18  F026         	goto	l3625
  9434  004C26                     u3760:
  9435  004C26  5009               	movf	___awdiv@divisor^0,w,c
  9436  004C28  5E07               	subwf	___awdiv@dividend^0,f,c
  9437  004C2A  500A               	movf	(___awdiv@divisor+1)^0,w,c
  9438  004C2C  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  9439  004C2E  800D               	bsf	___awdiv@quotient^0,0,c
  9440  004C30                     l3625:
  9441  004C30  90D8               	bcf	status,0,c
  9442  004C32  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  9443  004C34  3209               	rrcf	___awdiv@divisor^0,f,c
  9444  004C36  2E0B               	decfsz	___awdiv@counter^0,f,c
  9445  004C38  EF05  F026         	goto	l3617
  9446  004C3C                     l3629:
  9447  004C3C  500C               	movf	___awdiv@sign^0,w,c
  9448  004C3E  B4D8               	btfsc	status,2,c
  9449  004C40  EF24  F026         	goto	u3771
  9450  004C44  EF26  F026         	goto	u3770
  9451  004C48                     u3771:
  9452  004C48  EF2A  F026         	goto	l3633
  9453  004C4C                     u3770:
  9454  004C4C  6C0D               	negf	___awdiv@quotient^0,c
  9455  004C4E  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  9456  004C50  B0D8               	btfsc	status,0,c
  9457  004C52  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  9458  004C54                     l3633:
  9459  004C54  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  9460  004C58  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  9461  004C5C  0012               	return		;funcret
  9462  004C5E                     __end_of___awdiv:
  9463                           	callstack 0
  9464                           
  9465 ;; *************** function _atoi *****************
  9466 ;; Defined at:
  9467 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\atoi.c"
  9468 ;; Parameters:    Size  Location     Type
  9469 ;;  s               2    7[COMRAM] PTR const unsigned char 
  9470 ;;		 -> STR_28(5), STR_22(5), STR_12(5), 
  9471 ;; Auto vars:     Size  Location     Type
  9472 ;;  n               2   20[COMRAM] int 
  9473 ;;  neg             2   13[COMRAM] int 
  9474 ;; Return value:  Size  Location     Type
  9475 ;;                  2    7[COMRAM] int 
  9476 ;; Registers used:
  9477 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9478 ;; Tracked objects:
  9479 ;;		On entry : 0/0
  9480 ;;		On exit  : 0/0
  9481 ;;		Unchanged: 0/0
  9482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9483 ;;      Params:         2       0       0       0       0       0       0
  9484 ;;      Locals:         9       0       0       0       0       0       0
  9485 ;;      Temps:          4       0       0       0       0       0       0
  9486 ;;      Totals:        15       0       0       0       0       0       0
  9487 ;;Total ram usage:       15 bytes
  9488 ;; Hardware stack levels used:    1
  9489 ;; Hardware stack levels required when called:    1
  9490 ;; This function calls:
  9491 ;;		___wmul
  9492 ;;		_isdigit
  9493 ;;		_isspace
  9494 ;; This function is called by:
  9495 ;;		_vfpfcnvrt
  9496 ;; This function uses a non-reentrant model
  9497 ;;
  9498                           
  9499                           	psect	text31
  9500  0052B2                     __ptext31:
  9501                           	callstack 0
  9502  0052B2                     _atoi:
  9503                           	callstack 25
  9504  0052B2  0E00               	movlw	0
  9505  0052B4  6E16               	movwf	(atoi@n+1)^0,c
  9506  0052B6  0E00               	movlw	0
  9507  0052B8  6E15               	movwf	atoi@n^0,c
  9508  0052BA  0E00               	movlw	0
  9509  0052BC  6E0F               	movwf	(atoi@neg+1)^0,c
  9510  0052BE  0E00               	movlw	0
  9511  0052C0  6E0E               	movwf	atoi@neg^0,c
  9512  0052C2  EF65  F029         	goto	l4167
  9513  0052C6                     l4165:
  9514  0052C6  4A08               	infsnz	atoi@s^0,f,c
  9515  0052C8  2A09               	incf	(atoi@s+1)^0,f,c
  9516  0052CA                     l4167:
  9517  0052CA  0E01               	movlw	1
  9518  0052CC  6E14               	movwf	_atoi$827^0,c
  9519  0052CE  C008  FFF6         	movff	atoi@s,tblptrl
  9520  0052D2  C009  FFF7         	movff	atoi@s+1,tblptrh
  9521  0052D6                     	if	0	;tblptru may be non-zero
  9522  0052D6                     	endif
  9523  0052D6                     	if	0	;tblptru may be non-zero
  9524  0052D6                     	endif
  9525  0052D6  0008               	tblrd		*
  9526  0052D8  50F5               	movf	tablat,w,c
  9527  0052DA  0A20               	xorlw	32
  9528  0052DC  B4D8               	btfsc	status,2,c
  9529  0052DE  EF73  F029         	goto	u4821
  9530  0052E2  EF75  F029         	goto	u4820
  9531  0052E6                     u4821:
  9532  0052E6  EF92  F029         	goto	l4175
  9533  0052EA                     u4820:
  9534  0052EA  0EF7               	movlw	247
  9535  0052EC  6E0A               	movwf	??_atoi^0,c
  9536  0052EE  0EFF               	movlw	255
  9537  0052F0  6E0B               	movwf	(??_atoi+1)^0,c
  9538  0052F2  C008  FFF6         	movff	atoi@s,tblptrl
  9539  0052F6  C009  FFF7         	movff	atoi@s+1,tblptrh
  9540  0052FA                     	if	0	;tblptru may be non-zero
  9541  0052FA                     	endif
  9542  0052FA                     	if	0	;tblptru may be non-zero
  9543  0052FA                     	endif
  9544  0052FA  0008               	tblrd		*
  9545  0052FC  50F5               	movf	tablat,w,c
  9546  0052FE  6E0C               	movwf	(??_atoi+2)^0,c
  9547  005300  6A0D               	clrf	(??_atoi+3)^0,c
  9548  005302  500A               	movf	??_atoi^0,w,c
  9549  005304  260C               	addwf	(??_atoi+2)^0,f,c
  9550  005306  500B               	movf	(??_atoi+1)^0,w,c
  9551  005308  220D               	addwfc	(??_atoi+3)^0,f,c
  9552  00530A  500D               	movf	(??_atoi+3)^0,w,c
  9553  00530C  E109               	bnz	u4830
  9554  00530E  0E05               	movlw	5
  9555  005310  5C0C               	subwf	(??_atoi+2)^0,w,c
  9556  005312  A0D8               	btfss	status,0,c
  9557  005314  EF8E  F029         	goto	u4831
  9558  005318  EF90  F029         	goto	u4830
  9559  00531C                     u4831:
  9560  00531C  EF92  F029         	goto	l4175
  9561  005320                     u4830:
  9562  005320  0E00               	movlw	0
  9563  005322  6E14               	movwf	_atoi$827^0,c
  9564  005324                     l4175:
  9565  005324  C014  F010         	movff	_atoi$827,_atoi$826
  9566  005328  6A11               	clrf	(_atoi$826+1)^0,c
  9567  00532A  5010               	movf	_atoi$826^0,w,c
  9568  00532C  1011               	iorwf	(_atoi$826+1)^0,w,c
  9569  00532E  A4D8               	btfss	status,2,c
  9570  005330  EF9C  F029         	goto	u4841
  9571  005334  EF9E  F029         	goto	u4840
  9572  005338                     u4841:
  9573  005338  EF63  F029         	goto	l4165
  9574  00533C                     u4840:
  9575  00533C  EFA8  F029         	goto	l4185
  9576  005340                     l4181:
  9577  005340  0E00               	movlw	0
  9578  005342  6E0F               	movwf	(atoi@neg+1)^0,c
  9579  005344  0E01               	movlw	1
  9580  005346  6E0E               	movwf	atoi@neg^0,c
  9581  005348                     l4183:
  9582  005348  4A08               	infsnz	atoi@s^0,f,c
  9583  00534A  2A09               	incf	(atoi@s+1)^0,f,c
  9584  00534C  EFDD  F029         	goto	l4191
  9585  005350                     l4185:
  9586  005350  C008  FFF6         	movff	atoi@s,tblptrl
  9587  005354  C009  FFF7         	movff	atoi@s+1,tblptrh
  9588  005358                     	if	0	;tblptru may be non-zero
  9589  005358                     	endif
  9590  005358                     	if	0	;tblptru may be non-zero
  9591  005358                     	endif
  9592  005358  0008               	tblrd		*
  9593  00535A  50F5               	movf	tablat,w,c
  9594  00535C  6E0A               	movwf	??_atoi^0,c
  9595  00535E  6A0B               	clrf	(??_atoi+1)^0,c
  9596                           
  9597                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9598                           ; Switch size 1, requested type "simple"
  9599                           ; Number of cases is 1, Range of values is 0 to 0
  9600                           ; switch strategies available:
  9601                           ; Name         Instructions Cycles
  9602                           ; simple_byte            4     3 (average)
  9603                           ;	Chosen strategy is simple_byte
  9604  005360  500B               	movf	(??_atoi+1)^0,w,c
  9605  005362  0A00               	xorlw	0	; case 0
  9606  005364  B4D8               	btfsc	status,2,c
  9607  005366  EFB7  F029         	goto	l4957
  9608  00536A  EFDD  F029         	goto	l4191
  9609  00536E                     l4957:
  9610                           
  9611                           ; Switch size 1, requested type "simple"
  9612                           ; Number of cases is 2, Range of values is 43 to 45
  9613                           ; switch strategies available:
  9614                           ; Name         Instructions Cycles
  9615                           ; simple_byte            7     4 (average)
  9616                           ;	Chosen strategy is simple_byte
  9617  00536E  500A               	movf	??_atoi^0,w,c
  9618  005370  0A2B               	xorlw	43	; case 43
  9619  005372  B4D8               	btfsc	status,2,c
  9620  005374  EFA4  F029         	goto	l4183
  9621  005378  0A06               	xorlw	6	; case 45
  9622  00537A  B4D8               	btfsc	status,2,c
  9623  00537C  EFA0  F029         	goto	l4181
  9624  005380  EFDD  F029         	goto	l4191
  9625  005384                     l4187:
  9626  005384  C015  F001         	movff	atoi@n,___wmul@multiplier
  9627  005388  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  9628  00538C  0E00               	movlw	0
  9629  00538E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9630  005390  0E0A               	movlw	10
  9631  005392  6E03               	movwf	___wmul@multiplicand^0,c
  9632  005394  ECFD  F021         	call	___wmul	;wreg free
  9633  005398  C008  FFF6         	movff	atoi@s,tblptrl
  9634  00539C  C009  FFF7         	movff	atoi@s+1,tblptrh
  9635  0053A0                     	if	0	;tblptru may be non-zero
  9636  0053A0                     	endif
  9637  0053A0                     	if	0	;tblptru may be non-zero
  9638  0053A0                     	endif
  9639  0053A0  0008               	tblrd		*
  9640  0053A2  50F5               	movf	tablat,w,c
  9641  0053A4  5E01               	subwf	?___wmul^0,f,c
  9642  0053A6  0E00               	movlw	0
  9643  0053A8  5A02               	subwfb	(?___wmul+1)^0,f,c
  9644  0053AA  0E30               	movlw	48
  9645  0053AC  2401               	addwf	?___wmul^0,w,c
  9646  0053AE  6E15               	movwf	atoi@n^0,c
  9647  0053B0  0E00               	movlw	0
  9648  0053B2  2002               	addwfc	(?___wmul+1)^0,w,c
  9649  0053B4  6E16               	movwf	(atoi@n+1)^0,c
  9650  0053B6  EFA4  F029         	goto	l4183
  9651  0053BA                     l4191:
  9652  0053BA  0ED0               	movlw	208
  9653  0053BC  6E0A               	movwf	??_atoi^0,c
  9654  0053BE  0EFF               	movlw	255
  9655  0053C0  6E0B               	movwf	(??_atoi+1)^0,c
  9656  0053C2  C008  FFF6         	movff	atoi@s,tblptrl
  9657  0053C6  C009  FFF7         	movff	atoi@s+1,tblptrh
  9658  0053CA                     	if	0	;tblptru may be non-zero
  9659  0053CA                     	endif
  9660  0053CA                     	if	0	;tblptru may be non-zero
  9661  0053CA                     	endif
  9662  0053CA  0008               	tblrd		*
  9663  0053CC  50F5               	movf	tablat,w,c
  9664  0053CE  6E0C               	movwf	(??_atoi+2)^0,c
  9665  0053D0  6A0D               	clrf	(??_atoi+3)^0,c
  9666  0053D2  500A               	movf	??_atoi^0,w,c
  9667  0053D4  260C               	addwf	(??_atoi+2)^0,f,c
  9668  0053D6  500B               	movf	(??_atoi+1)^0,w,c
  9669  0053D8  220D               	addwfc	(??_atoi+3)^0,f,c
  9670  0053DA  500D               	movf	(??_atoi+3)^0,w,c
  9671  0053DC  E10A               	bnz	u4850
  9672  0053DE  0E0A               	movlw	10
  9673  0053E0  5C0C               	subwf	(??_atoi+2)^0,w,c
  9674  0053E2  A0D8               	btfss	status,0,c
  9675  0053E4  EFF6  F029         	goto	u4851
  9676  0053E8  EFF9  F029         	goto	u4850
  9677  0053EC                     u4851:
  9678  0053EC  0E01               	movlw	1
  9679  0053EE  EFFA  F029         	goto	u4860
  9680  0053F2                     u4850:
  9681  0053F2  0E00               	movlw	0
  9682  0053F4                     u4860:
  9683  0053F4  6E12               	movwf	_atoi$828^0,c
  9684  0053F6  6A13               	clrf	(_atoi$828+1)^0,c
  9685  0053F8  5012               	movf	_atoi$828^0,w,c
  9686  0053FA  1013               	iorwf	(_atoi$828+1)^0,w,c
  9687  0053FC  A4D8               	btfss	status,2,c
  9688  0053FE  EF03  F02A         	goto	u4871
  9689  005402  EF05  F02A         	goto	u4870
  9690  005406                     u4871:
  9691  005406  EFC2  F029         	goto	l4187
  9692  00540A                     u4870:
  9693  00540A  500E               	movf	atoi@neg^0,w,c
  9694  00540C  100F               	iorwf	(atoi@neg+1)^0,w,c
  9695  00540E  A4D8               	btfss	status,2,c
  9696  005410  EF0C  F02A         	goto	u4881
  9697  005414  EF0E  F02A         	goto	u4880
  9698  005418                     u4881:
  9699  005418  EF1C  F02A         	goto	l1096
  9700  00541C                     u4880:
  9701  00541C  C015  F00A         	movff	atoi@n,??_atoi
  9702  005420  C016  F00B         	movff	atoi@n+1,??_atoi+1
  9703  005424  1E0A               	comf	??_atoi^0,f,c
  9704  005426  1E0B               	comf	(??_atoi+1)^0,f,c
  9705  005428  4A0A               	infsnz	??_atoi^0,f,c
  9706  00542A  2A0B               	incf	(??_atoi+1)^0,f,c
  9707  00542C  C00A  F008         	movff	??_atoi,?_atoi
  9708  005430  C00B  F009         	movff	??_atoi+1,?_atoi+1
  9709  005434  EF20  F02A         	goto	l1099
  9710  005438                     l1096:
  9711  005438  C015  F008         	movff	atoi@n,?_atoi
  9712  00543C  C016  F009         	movff	atoi@n+1,?_atoi+1
  9713  005440                     l1099:
  9714  005440  0012               	return		;funcret
  9715  005442                     __end_of_atoi:
  9716                           	callstack 0
  9717                           
  9718 ;; *************** function _isspace *****************
  9719 ;; Defined at:
  9720 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\isspace.c"
  9721 ;; Parameters:    Size  Location     Type
  9722 ;;  c               2    0[COMRAM] int 
  9723 ;; Auto vars:     Size  Location     Type
  9724 ;;		None
  9725 ;; Return value:  Size  Location     Type
  9726 ;;                  2    0[COMRAM] int 
  9727 ;; Registers used:
  9728 ;;		wreg, status,2, status,0
  9729 ;; Tracked objects:
  9730 ;;		On entry : 0/0
  9731 ;;		On exit  : 0/0
  9732 ;;		Unchanged: 0/0
  9733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9734 ;;      Params:         2       0       0       0       0       0       0
  9735 ;;      Locals:         1       0       0       0       0       0       0
  9736 ;;      Temps:          4       0       0       0       0       0       0
  9737 ;;      Totals:         7       0       0       0       0       0       0
  9738 ;;Total ram usage:        7 bytes
  9739 ;; Hardware stack levels used:    1
  9740 ;; This function calls:
  9741 ;;		Nothing
  9742 ;; This function is called by:
  9743 ;;		_atoi
  9744 ;; This function uses a non-reentrant model
  9745 ;;
  9746                           
  9747                           	psect	text32
  9748  004604                     __ptext32:
  9749                           	callstack 0
  9750  004604                     _isspace:
  9751                           	callstack 25
  9752  004604  0E01               	movlw	1
  9753  004606  6E07               	movwf	_isspace$857^0,c
  9754  004608  0E20               	movlw	32
  9755  00460A  1801               	xorwf	isspace@c^0,w,c
  9756  00460C  1002               	iorwf	(isspace@c+1)^0,w,c
  9757  00460E  B4D8               	btfsc	status,2,c
  9758  004610  EF0C  F023         	goto	u4281
  9759  004614  EF0E  F023         	goto	u4280
  9760  004618                     u4281:
  9761  004618  EF27  F023         	goto	l3861
  9762  00461C                     u4280:
  9763  00461C  0EF7               	movlw	247
  9764  00461E  6E03               	movwf	??_isspace^0,c
  9765  004620  0EFF               	movlw	255
  9766  004622  6E04               	movwf	(??_isspace+1)^0,c
  9767  004624  C001  F005         	movff	isspace@c,??_isspace+2
  9768  004628  C002  F006         	movff	isspace@c+1,??_isspace+3
  9769  00462C  5003               	movf	??_isspace^0,w,c
  9770  00462E  2605               	addwf	(??_isspace+2)^0,f,c
  9771  004630  5004               	movf	(??_isspace+1)^0,w,c
  9772  004632  2206               	addwfc	(??_isspace+3)^0,f,c
  9773  004634  5006               	movf	(??_isspace+3)^0,w,c
  9774  004636  E109               	bnz	u4290
  9775  004638  0E05               	movlw	5
  9776  00463A  5C05               	subwf	(??_isspace+2)^0,w,c
  9777  00463C  A0D8               	btfss	status,0,c
  9778  00463E  EF23  F023         	goto	u4291
  9779  004642  EF25  F023         	goto	u4290
  9780  004646                     u4291:
  9781  004646  EF27  F023         	goto	l3861
  9782  00464A                     u4290:
  9783  00464A  0E00               	movlw	0
  9784  00464C  6E07               	movwf	_isspace$857^0,c
  9785  00464E                     l3861:
  9786  00464E  C007  F001         	movff	_isspace$857,?_isspace
  9787  004652  6A02               	clrf	(?_isspace+1)^0,c
  9788  004654  0012               	return		;funcret
  9789  004656                     __end_of_isspace:
  9790                           	callstack 0
  9791                           
  9792 ;; *************** function _isdigit *****************
  9793 ;; Defined at:
  9794 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\isdigit.c"
  9795 ;; Parameters:    Size  Location     Type
  9796 ;;  c               2    0[COMRAM] int 
  9797 ;; Auto vars:     Size  Location     Type
  9798 ;;		None
  9799 ;; Return value:  Size  Location     Type
  9800 ;;                  2    0[COMRAM] int 
  9801 ;; Registers used:
  9802 ;;		wreg, status,2, status,0
  9803 ;; Tracked objects:
  9804 ;;		On entry : 0/0
  9805 ;;		On exit  : 0/0
  9806 ;;		Unchanged: 0/0
  9807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9808 ;;      Params:         2       0       0       0       0       0       0
  9809 ;;      Locals:         0       0       0       0       0       0       0
  9810 ;;      Temps:          4       0       0       0       0       0       0
  9811 ;;      Totals:         6       0       0       0       0       0       0
  9812 ;;Total ram usage:        6 bytes
  9813 ;; Hardware stack levels used:    1
  9814 ;; This function calls:
  9815 ;;		Nothing
  9816 ;; This function is called by:
  9817 ;;		_vfpfcnvrt
  9818 ;;		_atoi
  9819 ;; This function uses a non-reentrant model
  9820 ;;
  9821                           
  9822                           	psect	text33
  9823  0044D2                     __ptext33:
  9824                           	callstack 0
  9825  0044D2                     _isdigit:
  9826                           	callstack 26
  9827  0044D2  0ED0               	movlw	208
  9828  0044D4  6E03               	movwf	??_isdigit^0,c
  9829  0044D6  0EFF               	movlw	255
  9830  0044D8  6E04               	movwf	(??_isdigit+1)^0,c
  9831  0044DA  C001  F005         	movff	isdigit@c,??_isdigit+2
  9832  0044DE  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  9833  0044E2  5003               	movf	??_isdigit^0,w,c
  9834  0044E4  2605               	addwf	(??_isdigit+2)^0,f,c
  9835  0044E6  5004               	movf	(??_isdigit+1)^0,w,c
  9836  0044E8  2206               	addwfc	(??_isdigit+3)^0,f,c
  9837  0044EA  5006               	movf	(??_isdigit+3)^0,w,c
  9838  0044EC  E10A               	bnz	u4260
  9839  0044EE  0E0A               	movlw	10
  9840  0044F0  5C05               	subwf	(??_isdigit+2)^0,w,c
  9841  0044F2  A0D8               	btfss	status,0,c
  9842  0044F4  EF7E  F022         	goto	u4261
  9843  0044F8  EF81  F022         	goto	u4260
  9844  0044FC                     u4261:
  9845  0044FC  0E01               	movlw	1
  9846  0044FE  EF82  F022         	goto	u4270
  9847  004502                     u4260:
  9848  004502  0E00               	movlw	0
  9849  004504                     u4270:
  9850  004504  6E01               	movwf	?_isdigit^0,c
  9851  004506  6A02               	clrf	(?_isdigit+1)^0,c
  9852  004508  0012               	return		;funcret
  9853  00450A                     __end_of_isdigit:
  9854                           	callstack 0
  9855                           
  9856 ;; *************** function _pwmSet1 *****************
  9857 ;; Defined at:
  9858 ;;		line 23 in file "pwm.c"
  9859 ;; Parameters:    Size  Location     Type
  9860 ;;  porcento        1    wreg     unsigned char 
  9861 ;; Auto vars:     Size  Location     Type
  9862 ;;  porcento        1    9[COMRAM] unsigned char 
  9863 ;;  val             2   10[COMRAM] unsigned int 
  9864 ;; Return value:  Size  Location     Type
  9865 ;;                  1    wreg      void 
  9866 ;; Registers used:
  9867 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9868 ;; Tracked objects:
  9869 ;;		On entry : 0/0
  9870 ;;		On exit  : 0/0
  9871 ;;		Unchanged: 0/0
  9872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9873 ;;      Params:         0       0       0       0       0       0       0
  9874 ;;      Locals:         3       0       0       0       0       0       0
  9875 ;;      Temps:          2       0       0       0       0       0       0
  9876 ;;      Totals:         5       0       0       0       0       0       0
  9877 ;;Total ram usage:        5 bytes
  9878 ;; Hardware stack levels used:    1
  9879 ;; Hardware stack levels required when called:    1
  9880 ;; This function calls:
  9881 ;;		___lwdiv
  9882 ;;		___wmul
  9883 ;; This function is called by:
  9884 ;;		_encher_tanque
  9885 ;; This function uses a non-reentrant model
  9886 ;;
  9887                           
  9888                           	psect	text34
  9889  0048E8                     __ptext34:
  9890                           	callstack 0
  9891  0048E8                     _pwmSet1:
  9892                           	callstack 28
  9893                           
  9894                           ;incstack = 0
  9895                           ;pwmSet1@porcento stored from wreg
  9896  0048E8  6E0A               	movwf	pwmSet1@porcento^0,c
  9897  0048EA                     
  9898                           ;pwm.c: 23: void pwmSet1(unsigned char porcento);pwm.c: 24: {;pwm.c: 30:  unsigned int v
      +                          al = ((unsigned int)porcento) *((*(volatile __near unsigned char*)0xFCB)+1);
  9899  0048EA  0E01               	movlw	1
  9900  0048EC  24CB               	addwf	203,w,c	;volatile
  9901  0048EE  6E01               	movwf	___wmul@multiplier^0,c
  9902  0048F0  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9903  0048F2  0E00               	movlw	0
  9904  0048F4  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  9905  0048F6  C00A  F003         	movff	pwmSet1@porcento,___wmul@multiplicand
  9906  0048FA  6A04               	clrf	(___wmul@multiplicand+1)^0,c
  9907  0048FC  ECFD  F021         	call	___wmul	;wreg free
  9908  004900  C001  F00B         	movff	?___wmul,pwmSet1@val
  9909  004904  C002  F00C         	movff	?___wmul+1,pwmSet1@val+1
  9910  004908                     
  9911                           ;pwm.c: 31:  val = val / 25;
  9912  004908  C00B  F001         	movff	pwmSet1@val,___lwdiv@dividend
  9913  00490C  C00C  F002         	movff	pwmSet1@val+1,___lwdiv@dividend+1
  9914  004910  0E00               	movlw	0
  9915  004912  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  9916  004914  0E19               	movlw	25
  9917  004916  6E03               	movwf	___lwdiv@divisor^0,c
  9918  004918  ECAA  F024         	call	___lwdiv	;wreg free
  9919  00491C  C001  F00B         	movff	?___lwdiv,pwmSet1@val
  9920  004920  C002  F00C         	movff	?___lwdiv+1,pwmSet1@val+1
  9921  004924                     
  9922                           ;pwm.c: 33:  val &= 0x03ff;
  9923  004924  0EFF               	movlw	255
  9924  004926  160B               	andwf	pwmSet1@val^0,f,c
  9925  004928  0E03               	movlw	3
  9926  00492A  160C               	andwf	(pwmSet1@val+1)^0,f,c
  9927  00492C                     
  9928                           ;pwm.c: 35:  (*(volatile __near unsigned char*)0xFBE) = val >> 2;
  9929  00492C  C00B  F008         	movff	pwmSet1@val,??_pwmSet1
  9930  004930  C00C  F009         	movff	pwmSet1@val+1,??_pwmSet1+1
  9931  004934  90D8               	bcf	status,0,c
  9932  004936  3209               	rrcf	(??_pwmSet1+1)^0,f,c
  9933  004938  3208               	rrcf	??_pwmSet1^0,f,c
  9934  00493A  90D8               	bcf	status,0,c
  9935  00493C  3209               	rrcf	(??_pwmSet1+1)^0,f,c
  9936  00493E  3208               	rrcf	??_pwmSet1^0,f,c
  9937  004940  5008               	movf	??_pwmSet1^0,w,c
  9938  004942  6EBE               	movwf	190,c	;volatile
  9939  004944                     
  9940                           ;pwm.c: 37:  (*(volatile __near unsigned char*)0xFBD) |= (val & 0x0003) << 4;
  9941  004944  C00B  F008         	movff	pwmSet1@val,??_pwmSet1
  9942  004948  0E03               	movlw	3
  9943  00494A  1608               	andwf	??_pwmSet1^0,f,c
  9944  00494C  3808               	swapf	??_pwmSet1^0,w,c
  9945  00494E  0BF0               	andlw	240
  9946  004950  12BD               	iorwf	189,f,c	;volatile
  9947  004952  0012               	return		;funcret
  9948  004954                     __end_of_pwmSet1:
  9949                           	callstack 0
  9950                           
  9951 ;; *************** function ___wmul *****************
  9952 ;; Defined at:
  9953 ;;		line 15 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  9954 ;; Parameters:    Size  Location     Type
  9955 ;;  multiplier      2    0[COMRAM] unsigned int 
  9956 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9957 ;; Auto vars:     Size  Location     Type
  9958 ;;  product         2    4[COMRAM] unsigned int 
  9959 ;; Return value:  Size  Location     Type
  9960 ;;                  2    0[COMRAM] unsigned int 
  9961 ;; Registers used:
  9962 ;;		wreg, status,2, status,0, prodl, prodh
  9963 ;; Tracked objects:
  9964 ;;		On entry : 0/0
  9965 ;;		On exit  : 0/0
  9966 ;;		Unchanged: 0/0
  9967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9968 ;;      Params:         4       0       0       0       0       0       0
  9969 ;;      Locals:         2       0       0       0       0       0       0
  9970 ;;      Temps:          0       0       0       0       0       0       0
  9971 ;;      Totals:         6       0       0       0       0       0       0
  9972 ;;Total ram usage:        6 bytes
  9973 ;; Hardware stack levels used:    1
  9974 ;; This function calls:
  9975 ;;		Nothing
  9976 ;; This function is called by:
  9977 ;;		_pwmSet1
  9978 ;;		_encher_tanque
  9979 ;;		_atoi
  9980 ;;		_pwmSet2
  9981 ;; This function uses a non-reentrant model
  9982 ;;
  9983                           
  9984                           	psect	text35
  9985  0043FA                     __ptext35:
  9986                           	callstack 0
  9987  0043FA                     ___wmul:
  9988                           	callstack 25
  9989  0043FA  5001               	movf	___wmul@multiplier^0,w,c
  9990  0043FC  0203               	mulwf	___wmul@multiplicand^0,c
  9991  0043FE  CFF3 F005          	movff	prodl,___wmul@product
  9992  004402  CFF4 F006          	movff	prodh,___wmul@product+1
  9993  004406  5001               	movf	___wmul@multiplier^0,w,c
  9994  004408  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9995  00440A  50F3               	movf	243,w,c
  9996  00440C  2606               	addwf	(___wmul@product+1)^0,f,c
  9997  00440E  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9998  004410  0203               	mulwf	___wmul@multiplicand^0,c
  9999  004412  50F3               	movf	243,w,c
 10000  004414  2606               	addwf	(___wmul@product+1)^0,f,c
 10001  004416  C005  F001         	movff	___wmul@product,?___wmul
 10002  00441A  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10003  00441E  0012               	return		;funcret
 10004  004420                     __end_of___wmul:
 10005                           	callstack 0
 10006                           
 10007 ;; *************** function ___lwdiv *****************
 10008 ;; Defined at:
 10009 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\lwdiv.c"
 10010 ;; Parameters:    Size  Location     Type
 10011 ;;  dividend        2    0[COMRAM] unsigned int 
 10012 ;;  divisor         2    2[COMRAM] unsigned int 
 10013 ;; Auto vars:     Size  Location     Type
 10014 ;;  quotient        2    4[COMRAM] unsigned int 
 10015 ;;  counter         1    6[COMRAM] unsigned char 
 10016 ;; Return value:  Size  Location     Type
 10017 ;;                  2    0[COMRAM] unsigned int 
 10018 ;; Registers used:
 10019 ;;		wreg, status,2, status,0
 10020 ;; Tracked objects:
 10021 ;;		On entry : 0/0
 10022 ;;		On exit  : 0/0
 10023 ;;		Unchanged: 0/0
 10024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10025 ;;      Params:         4       0       0       0       0       0       0
 10026 ;;      Locals:         3       0       0       0       0       0       0
 10027 ;;      Temps:          0       0       0       0       0       0       0
 10028 ;;      Totals:         7       0       0       0       0       0       0
 10029 ;;Total ram usage:        7 bytes
 10030 ;; Hardware stack levels used:    1
 10031 ;; This function calls:
 10032 ;;		Nothing
 10033 ;; This function is called by:
 10034 ;;		_pwmSet1
 10035 ;;		_pwmSet2
 10036 ;; This function uses a non-reentrant model
 10037 ;;
 10038                           
 10039                           	psect	text36
 10040  004954                     __ptext36:
 10041                           	callstack 0
 10042  004954                     ___lwdiv:
 10043                           	callstack 28
 10044  004954  0E00               	movlw	0
 10045  004956  6E06               	movwf	(___lwdiv@quotient+1)^0,c
 10046  004958  0E00               	movlw	0
 10047  00495A  6E05               	movwf	___lwdiv@quotient^0,c
 10048  00495C  5003               	movf	___lwdiv@divisor^0,w,c
 10049  00495E  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
 10050  004960  B4D8               	btfsc	status,2,c
 10051  004962  EFB5  F024         	goto	u5111
 10052  004966  EFB7  F024         	goto	u5110
 10053  00496A                     u5111:
 10054  00496A  EFDF  F024         	goto	l702
 10055  00496E                     u5110:
 10056  00496E  0E01               	movlw	1
 10057  004970  6E07               	movwf	___lwdiv@counter^0,c
 10058  004972  EFBF  F024         	goto	l4365
 10059  004976                     l4363:
 10060  004976  90D8               	bcf	status,0,c
 10061  004978  3603               	rlcf	___lwdiv@divisor^0,f,c
 10062  00497A  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
 10063  00497C  2A07               	incf	___lwdiv@counter^0,f,c
 10064  00497E                     l4365:
 10065  00497E  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
 10066  004980  EFC4  F024         	goto	u5121
 10067  004984  EFC6  F024         	goto	u5120
 10068  004988                     u5121:
 10069  004988  EFBB  F024         	goto	l4363
 10070  00498C                     u5120:
 10071  00498C                     l4367:
 10072  00498C  90D8               	bcf	status,0,c
 10073  00498E  3605               	rlcf	___lwdiv@quotient^0,f,c
 10074  004990  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
 10075  004992  5003               	movf	___lwdiv@divisor^0,w,c
 10076  004994  5C01               	subwf	___lwdiv@dividend^0,w,c
 10077  004996  5004               	movf	(___lwdiv@divisor+1)^0,w,c
 10078  004998  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
 10079  00499A  A0D8               	btfss	status,0,c
 10080  00499C  EFD2  F024         	goto	u5131
 10081  0049A0  EFD4  F024         	goto	u5130
 10082  0049A4                     u5131:
 10083  0049A4  EFD9  F024         	goto	l4375
 10084  0049A8                     u5130:
 10085  0049A8  5003               	movf	___lwdiv@divisor^0,w,c
 10086  0049AA  5E01               	subwf	___lwdiv@dividend^0,f,c
 10087  0049AC  5004               	movf	(___lwdiv@divisor+1)^0,w,c
 10088  0049AE  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
 10089  0049B0  8005               	bsf	___lwdiv@quotient^0,0,c
 10090  0049B2                     l4375:
 10091  0049B2  90D8               	bcf	status,0,c
 10092  0049B4  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
 10093  0049B6  3203               	rrcf	___lwdiv@divisor^0,f,c
 10094  0049B8  2E07               	decfsz	___lwdiv@counter^0,f,c
 10095  0049BA  EFC6  F024         	goto	l4367
 10096  0049BE                     l702:
 10097  0049BE  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 10098  0049C2  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10099  0049C6  0012               	return		;funcret
 10100  0049C8                     __end_of___lwdiv:
 10101                           	callstack 0
 10102                           
 10103 ;; *************** function _pwmInit *****************
 10104 ;; Defined at:
 10105 ;;		line 59 in file "pwm.c"
 10106 ;; Parameters:    Size  Location     Type
 10107 ;;		None
 10108 ;; Auto vars:     Size  Location     Type
 10109 ;;		None
 10110 ;; Return value:  Size  Location     Type
 10111 ;;                  1    wreg      void 
 10112 ;; Registers used:
 10113 ;;		wreg, status,2, status,0
 10114 ;; Tracked objects:
 10115 ;;		On entry : 0/0
 10116 ;;		On exit  : 0/0
 10117 ;;		Unchanged: 0/0
 10118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10119 ;;      Params:         0       0       0       0       0       0       0
 10120 ;;      Locals:         0       0       0       0       0       0       0
 10121 ;;      Temps:          0       0       0       0       0       0       0
 10122 ;;      Totals:         0       0       0       0       0       0       0
 10123 ;;Total ram usage:        0 bytes
 10124 ;; Hardware stack levels used:    1
 10125 ;; This function calls:
 10126 ;;		Nothing
 10127 ;; This function is called by:
 10128 ;;		_encher_tanque
 10129 ;; This function uses a non-reentrant model
 10130 ;;
 10131                           
 10132                           	psect	text37
 10133  0043E6                     __ptext37:
 10134                           	callstack 0
 10135  0043E6                     _pwmInit:
 10136                           	callstack 29
 10137  0043E6                     
 10138                           ;pwm.c: 61:  (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<1));
 10139  0043E6  9294               	bcf	148,1,c	;volatile
 10140                           
 10141                           ;pwm.c: 62:  (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<2));
 10142  0043E8  9494               	bcf	148,2,c	;volatile
 10143  0043EA                     
 10144                           ;pwm.c: 64:  (*(volatile __near unsigned char*)0xFCA) |= 0b00000011;
 10145  0043EA  0E03               	movlw	3
 10146  0043EC  12CA               	iorwf	202,f,c	;volatile
 10147  0043EE                     
 10148                           ;pwm.c: 65:  (((*(volatile __near unsigned char*)0xFCA)) |= (1<<2));
 10149  0043EE  84CA               	bsf	202,2,c	;volatile
 10150                           
 10151                           ;pwm.c: 68:  (*(volatile __near unsigned char*)0xFBD) |= 0b00001100;
 10152  0043F0  0E0C               	movlw	12
 10153  0043F2  12BD               	iorwf	189,f,c	;volatile
 10154                           
 10155                           ;pwm.c: 69:  (*(volatile __near unsigned char*)0xFBA) |= 0b00001100;
 10156  0043F4  0E0C               	movlw	12
 10157  0043F6  12BA               	iorwf	186,f,c	;volatile
 10158  0043F8  0012               	return		;funcret
 10159  0043FA                     __end_of_pwmInit:
 10160                           	callstack 0
 10161                           
 10162 ;; *************** function _lcd_str *****************
 10163 ;; Defined at:
 10164 ;;		line 47 in file "lcd.c"
 10165 ;; Parameters:    Size  Location     Type
 10166 ;;  str             2    7[COMRAM] PTR const unsigned char 
 10167 ;;		 -> STR_31(9), STR_30(3), STR_29(8), ver_quantidade@y(8), 
 10168 ;;		 -> STR_27(13), STR_26(13), STR_25(9), STR_24(14), 
 10169 ;;		 -> STR_23(3), esvaziar_tanque@y(8), STR_21(11), STR_20(14), 
 10170 ;;		 -> STR_19(11), STR_18(11), STR_17(13), STR_16(13), 
 10171 ;;		 -> STR_15(9), STR_14(12), STR_13(3), encher_tanque@y(8), 
 10172 ;;		 -> STR_11(11), STR_10(16), STR_9(11), STR_8(11), 
 10173 ;;		 -> STR_7(14), STR_6(10), STR_5(15), STR_4(15), 
 10174 ;;		 -> STR_3(14), STR_2(11), STR_1(17), 
 10175 ;; Auto vars:     Size  Location     Type
 10176 ;;  i               1   11[COMRAM] unsigned char 
 10177 ;; Return value:  Size  Location     Type
 10178 ;;                  1    wreg      void 
 10179 ;; Registers used:
 10180 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10181 ;; Tracked objects:
 10182 ;;		On entry : 0/0
 10183 ;;		On exit  : 0/0
 10184 ;;		Unchanged: 0/0
 10185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10186 ;;      Params:         2       0       0       0       0       0       0
 10187 ;;      Locals:         1       0       0       0       0       0       0
 10188 ;;      Temps:          2       0       0       0       0       0       0
 10189 ;;      Totals:         5       0       0       0       0       0       0
 10190 ;;Total ram usage:        5 bytes
 10191 ;; Hardware stack levels used:    1
 10192 ;; Hardware stack levels required when called:    2
 10193 ;; This function calls:
 10194 ;;		_lcd_dat
 10195 ;; This function is called by:
 10196 ;;		_main
 10197 ;;		_encher_tanque
 10198 ;;		_esvaziar_tanque
 10199 ;;		_ver_quantidade
 10200 ;; This function uses a non-reentrant model
 10201 ;;
 10202                           
 10203                           	psect	text38
 10204  0049C8                     __ptext38:
 10205                           	callstack 0
 10206  0049C8                     _lcd_str:
 10207                           	callstack 27
 10208  0049C8                     
 10209                           ;lcd.c: 48:     unsigned char i = 0;
 10210  0049C8  0E00               	movlw	0
 10211  0049CA  6E0C               	movwf	lcd_str@i^0,c
 10212                           
 10213                           ;lcd.c: 50:     while (str[i] != 0) {
 10214  0049CC  EF01  F025         	goto	l4407
 10215  0049D0                     l4403:
 10216                           
 10217                           ;lcd.c: 51:         lcd_dat(str[i]);
 10218  0049D0  500C               	movf	lcd_str@i^0,w,c
 10219  0049D2  2408               	addwf	lcd_str@str^0,w,c
 10220  0049D4  6E0A               	movwf	??_lcd_str^0,c
 10221  0049D6  0E00               	movlw	0
 10222  0049D8  2009               	addwfc	(lcd_str@str+1)^0,w,c
 10223  0049DA  6E0B               	movwf	(??_lcd_str+1)^0,c
 10224  0049DC  C00A  FFF6         	movff	??_lcd_str,tblptrl
 10225  0049E0  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
 10226  0049E4  6AF8               	clrf	tblptru,c
 10227  0049E6  0E05               	movlw	(high __ramtop+-1)
 10228  0049E8  64F7               	cpfsgt	tblptrh,c
 10229  0049EA  D003               	bra	u5157
 10230  0049EC  0008               	tblrd		*
 10231  0049EE  50F5               	movf	tablat,w,c
 10232  0049F0  D005               	bra	u5150
 10233  0049F2                     u5157:
 10234  0049F2  CFF6 FFE9          	movff	tblptrl,fsr0l
 10235  0049F6  CFF7 FFEA          	movff	tblptrh,fsr0h
 10236  0049FA  50EF               	movf	indf0,w,c
 10237  0049FC                     u5150:
 10238  0049FC  EC39  F022         	call	_lcd_dat
 10239  004A00                     
 10240                           ;lcd.c: 52:         i++;
 10241  004A00  2A0C               	incf	lcd_str@i^0,f,c
 10242  004A02                     l4407:
 10243                           
 10244                           ;lcd.c: 50:     while (str[i] != 0) {
 10245  004A02  500C               	movf	lcd_str@i^0,w,c
 10246  004A04  2408               	addwf	lcd_str@str^0,w,c
 10247  004A06  6E0A               	movwf	??_lcd_str^0,c
 10248  004A08  0E00               	movlw	0
 10249  004A0A  2009               	addwfc	(lcd_str@str+1)^0,w,c
 10250  004A0C  6E0B               	movwf	(??_lcd_str+1)^0,c
 10251  004A0E  C00A  FFF6         	movff	??_lcd_str,tblptrl
 10252  004A12  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
 10253  004A16  6AF8               	clrf	tblptru,c
 10254  004A18  0E05               	movlw	(high __ramtop+-1)
 10255  004A1A  64F7               	cpfsgt	tblptrh,c
 10256  004A1C  D003               	bra	u5167
 10257  004A1E  0008               	tblrd		*
 10258  004A20  50F5               	movf	tablat,w,c
 10259  004A22  D005               	bra	u5160
 10260  004A24                     u5167:
 10261  004A24  CFF6 FFE9          	movff	tblptrl,fsr0l
 10262  004A28  CFF7 FFEA          	movff	tblptrh,fsr0h
 10263  004A2C  50EF               	movf	indf0,w,c
 10264  004A2E                     u5160:
 10265  004A2E  0900               	iorlw	0
 10266  004A30  A4D8               	btfss	status,2,c
 10267  004A32  EF1D  F025         	goto	u5171
 10268  004A36  EF1F  F025         	goto	u5170
 10269  004A3A                     u5171:
 10270  004A3A  EFE8  F024         	goto	l4403
 10271  004A3E                     u5170:
 10272  004A3E  0012               	return		;funcret
 10273  004A40                     __end_of_lcd_str:
 10274                           	callstack 0
 10275                           
 10276 ;; *************** function _lcd_dat *****************
 10277 ;; Defined at:
 10278 ;;		line 19 in file "lcd.c"
 10279 ;; Parameters:    Size  Location     Type
 10280 ;;  val             1    wreg     unsigned char 
 10281 ;; Auto vars:     Size  Location     Type
 10282 ;;  val             1    6[COMRAM] unsigned char 
 10283 ;; Return value:  Size  Location     Type
 10284 ;;                  1    wreg      void 
 10285 ;; Registers used:
 10286 ;;		wreg, status,2, status,0, cstack
 10287 ;; Tracked objects:
 10288 ;;		On entry : 0/0
 10289 ;;		On exit  : 0/0
 10290 ;;		Unchanged: 0/0
 10291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10292 ;;      Params:         0       0       0       0       0       0       0
 10293 ;;      Locals:         1       0       0       0       0       0       0
 10294 ;;      Temps:          0       0       0       0       0       0       0
 10295 ;;      Totals:         1       0       0       0       0       0       0
 10296 ;;Total ram usage:        1 bytes
 10297 ;; Hardware stack levels used:    1
 10298 ;; Hardware stack levels required when called:    1
 10299 ;; This function calls:
 10300 ;;		_atraso_ms
 10301 ;;		_lcd_wr
 10302 ;; This function is called by:
 10303 ;;		_lcd_str
 10304 ;;		_encher_tanque
 10305 ;; This function uses a non-reentrant model
 10306 ;;
 10307                           
 10308                           	psect	text39
 10309  004472                     __ptext39:
 10310                           	callstack 0
 10311  004472                     _lcd_dat:
 10312                           	callstack 27
 10313                           
 10314                           ;incstack = 0
 10315                           ;lcd_dat@val stored from wreg
 10316  004472  6E07               	movwf	lcd_dat@val^0,c
 10317  004474                     
 10318                           ;lcd.c: 20:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
 10319  004474  8284               	bsf	132,1,c	;volatile
 10320  004476                     
 10321                           ;lcd.c: 21:     lcd_wr(val);
 10322  004476  5007               	movf	lcd_dat@val^0,w,c
 10323  004478  ECEA  F021         	call	_lcd_wr
 10324  00447C                     
 10325                           ;lcd.c: 22:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<2));
 10326  00447C  8484               	bsf	132,2,c	;volatile
 10327  00447E                     
 10328                           ;lcd.c: 23:     atraso_ms(3);
 10329  00447E  0E00               	movlw	0
 10330  004480  6E02               	movwf	(atraso_ms@t+1)^0,c
 10331  004482  0E03               	movlw	3
 10332  004484  6E01               	movwf	atraso_ms@t^0,c
 10333  004486  EC42  F024         	call	_atraso_ms	;wreg free
 10334  00448A                     
 10335                           ;lcd.c: 24:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
 10336  00448A  9284               	bcf	132,1,c	;volatile
 10337  00448C                     
 10338                           ;lcd.c: 25:     atraso_ms(3);
 10339  00448C  0E00               	movlw	0
 10340  00448E  6E02               	movwf	(atraso_ms@t+1)^0,c
 10341  004490  0E03               	movlw	3
 10342  004492  6E01               	movwf	atraso_ms@t^0,c
 10343  004494  EC42  F024         	call	_atraso_ms	;wreg free
 10344  004498                     
 10345                           ;lcd.c: 26:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
 10346  004498  8284               	bsf	132,1,c	;volatile
 10347  00449A  0012               	return		;funcret
 10348  00449C                     __end_of_lcd_dat:
 10349                           	callstack 0
 10350                           
 10351 ;; *************** function _lcd_cmd *****************
 10352 ;; Defined at:
 10353 ;;		line 9 in file "lcd.c"
 10354 ;; Parameters:    Size  Location     Type
 10355 ;;  val             1    wreg     unsigned char 
 10356 ;; Auto vars:     Size  Location     Type
 10357 ;;  val             1    6[COMRAM] unsigned char 
 10358 ;; Return value:  Size  Location     Type
 10359 ;;                  1    wreg      void 
 10360 ;; Registers used:
 10361 ;;		wreg, status,2, status,0, cstack
 10362 ;; Tracked objects:
 10363 ;;		On entry : 0/0
 10364 ;;		On exit  : 0/0
 10365 ;;		Unchanged: 0/0
 10366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10367 ;;      Params:         0       0       0       0       0       0       0
 10368 ;;      Locals:         1       0       0       0       0       0       0
 10369 ;;      Temps:          0       0       0       0       0       0       0
 10370 ;;      Totals:         1       0       0       0       0       0       0
 10371 ;;Total ram usage:        1 bytes
 10372 ;; Hardware stack levels used:    1
 10373 ;; Hardware stack levels required when called:    1
 10374 ;; This function calls:
 10375 ;;		_atraso_ms
 10376 ;;		_lcd_wr
 10377 ;; This function is called by:
 10378 ;;		_main
 10379 ;;		_lcd_init
 10380 ;;		_encher_tanque
 10381 ;;		_esvaziar_tanque
 10382 ;;		_ver_quantidade
 10383 ;; This function uses a non-reentrant model
 10384 ;;
 10385                           
 10386                           	psect	text40
 10387  004448                     __ptext40:
 10388                           	callstack 0
 10389  004448                     _lcd_cmd:
 10390                           	callstack 28
 10391                           
 10392                           ;incstack = 0
 10393                           ;lcd_cmd@val stored from wreg
 10394  004448  6E07               	movwf	lcd_cmd@val^0,c
 10395  00444A                     
 10396                           ;lcd.c: 10:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
 10397  00444A  8284               	bsf	132,1,c	;volatile
 10398  00444C                     
 10399                           ;lcd.c: 11:     lcd_wr(val);
 10400  00444C  5007               	movf	lcd_cmd@val^0,w,c
 10401  00444E  ECEA  F021         	call	_lcd_wr
 10402  004452                     
 10403                           ;lcd.c: 12:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<2));
 10404  004452  9484               	bcf	132,2,c	;volatile
 10405  004454                     
 10406                           ;lcd.c: 13:     atraso_ms(3);
 10407  004454  0E00               	movlw	0
 10408  004456  6E02               	movwf	(atraso_ms@t+1)^0,c
 10409  004458  0E03               	movlw	3
 10410  00445A  6E01               	movwf	atraso_ms@t^0,c
 10411  00445C  EC42  F024         	call	_atraso_ms	;wreg free
 10412  004460                     
 10413                           ;lcd.c: 14:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
 10414  004460  9284               	bcf	132,1,c	;volatile
 10415  004462                     
 10416                           ;lcd.c: 15:     atraso_ms(3);
 10417  004462  0E00               	movlw	0
 10418  004464  6E02               	movwf	(atraso_ms@t+1)^0,c
 10419  004466  0E03               	movlw	3
 10420  004468  6E01               	movwf	atraso_ms@t^0,c
 10421  00446A  EC42  F024         	call	_atraso_ms	;wreg free
 10422  00446E                     
 10423                           ;lcd.c: 16:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
 10424  00446E  8284               	bsf	132,1,c	;volatile
 10425  004470  0012               	return		;funcret
 10426  004472                     __end_of_lcd_cmd:
 10427                           	callstack 0
 10428                           
 10429 ;; *************** function _lcd_wr *****************
 10430 ;; Defined at:
 10431 ;;		line 5 in file "lcd.c"
 10432 ;; Parameters:    Size  Location     Type
 10433 ;;  val             1    wreg     unsigned char 
 10434 ;; Auto vars:     Size  Location     Type
 10435 ;;  val             1    0[COMRAM] unsigned char 
 10436 ;; Return value:  Size  Location     Type
 10437 ;;                  1    wreg      void 
 10438 ;; Registers used:
 10439 ;;		wreg
 10440 ;; Tracked objects:
 10441 ;;		On entry : 0/0
 10442 ;;		On exit  : 0/0
 10443 ;;		Unchanged: 0/0
 10444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10445 ;;      Params:         0       0       0       0       0       0       0
 10446 ;;      Locals:         1       0       0       0       0       0       0
 10447 ;;      Temps:          0       0       0       0       0       0       0
 10448 ;;      Totals:         1       0       0       0       0       0       0
 10449 ;;Total ram usage:        1 bytes
 10450 ;; Hardware stack levels used:    1
 10451 ;; This function calls:
 10452 ;;		Nothing
 10453 ;; This function is called by:
 10454 ;;		_lcd_cmd
 10455 ;;		_lcd_dat
 10456 ;; This function uses a non-reentrant model
 10457 ;;
 10458                           
 10459                           	psect	text41
 10460  0043D4                     __ptext41:
 10461                           	callstack 0
 10462  0043D4                     _lcd_wr:
 10463                           	callstack 27
 10464                           
 10465                           ;incstack = 0
 10466                           ;lcd_wr@val stored from wreg
 10467  0043D4  6E01               	movwf	lcd_wr@val^0,c
 10468  0043D6                     
 10469                           ;lcd.c: 6:     (*(volatile __near unsigned char*)0xF83) = val;
 10470  0043D6  C001  FF83         	movff	lcd_wr@val,3971	;volatile
 10471  0043DA  0012               	return		;funcret
 10472  0043DC                     __end_of_lcd_wr:
 10473                           	callstack 0
 10474                           
 10475 ;; *************** function _atraso_ms *****************
 10476 ;; Defined at:
 10477 ;;		line 3 in file "delay.c"
 10478 ;; Parameters:    Size  Location     Type
 10479 ;;  t               2    0[COMRAM] int 
 10480 ;; Auto vars:     Size  Location     Type
 10481 ;;  i               2    2[COMRAM] volatile unsigned int 
 10482 ;;  k               1    5[COMRAM] volatile unsigned char 
 10483 ;;  j               1    4[COMRAM] volatile unsigned char 
 10484 ;; Return value:  Size  Location     Type
 10485 ;;                  1    wreg      void 
 10486 ;; Registers used:
 10487 ;;		wreg, status,2, status,0
 10488 ;; Tracked objects:
 10489 ;;		On entry : 0/0
 10490 ;;		On exit  : 0/0
 10491 ;;		Unchanged: 0/0
 10492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10493 ;;      Params:         2       0       0       0       0       0       0
 10494 ;;      Locals:         4       0       0       0       0       0       0
 10495 ;;      Temps:          0       0       0       0       0       0       0
 10496 ;;      Totals:         6       0       0       0       0       0       0
 10497 ;;Total ram usage:        6 bytes
 10498 ;; Hardware stack levels used:    1
 10499 ;; This function calls:
 10500 ;;		Nothing
 10501 ;; This function is called by:
 10502 ;;		_main
 10503 ;;		_tc_tecla
 10504 ;;		_lcd_cmd
 10505 ;;		_lcd_dat
 10506 ;;		_lcd_init
 10507 ;;		_encher_tanque
 10508 ;;		_esvaziar_tanque
 10509 ;; This function uses a non-reentrant model
 10510 ;;
 10511                           
 10512                           	psect	text42
 10513  004884                     __ptext42:
 10514                           	callstack 0
 10515  004884                     _atraso_ms:
 10516                           	callstack 28
 10517  004884                     
 10518                           ;delay.c: 4:     volatile unsigned char j, k;;delay.c: 5:     volatile unsigned int i;;d
      +                          elay.c: 7:     for (i = 0; i < (t); i++) {
 10519  004884  0E00               	movlw	0
 10520  004886  6E04               	movwf	(atraso_ms@i+1)^0,c	;volatile
 10521  004888  0E00               	movlw	0
 10522  00488A  6E03               	movwf	atraso_ms@i^0,c	;volatile
 10523  00488C  EF68  F024         	goto	l4249
 10524  004890                     l4227:
 10525                           
 10526                           ;delay.c: 8:         for (j = 0; j < 41; j++) {
 10527  004890  0E00               	movlw	0
 10528  004892  6E05               	movwf	atraso_ms@j^0,c	;volatile
 10529  004894                     l4229:
 10530  004894  0E28               	movlw	40
 10531  004896  6405               	cpfsgt	atraso_ms@j^0,c	;volatile
 10532  004898  EF50  F024         	goto	u4941
 10533  00489C  EF52  F024         	goto	u4940
 10534  0048A0                     u4941:
 10535  0048A0  EF54  F024         	goto	l4233
 10536  0048A4                     u4940:
 10537  0048A4  EF66  F024         	goto	l4247
 10538  0048A8                     l4233:
 10539                           
 10540                           ;delay.c: 9:             for (k = 0; k < 3; k++);
 10541  0048A8  0E00               	movlw	0
 10542  0048AA  6E06               	movwf	atraso_ms@k^0,c	;volatile
 10543  0048AC                     l4235:
 10544  0048AC  0E02               	movlw	2
 10545  0048AE  6406               	cpfsgt	atraso_ms@k^0,c	;volatile
 10546  0048B0  EF5C  F024         	goto	u4951
 10547  0048B4  EF5E  F024         	goto	u4950
 10548  0048B8                     u4951:
 10549  0048B8  EF60  F024         	goto	l4239
 10550  0048BC                     u4950:
 10551  0048BC  EF63  F024         	goto	l4243
 10552  0048C0                     l4239:
 10553  0048C0  2A06               	incf	atraso_ms@k^0,f,c	;volatile
 10554  0048C2  EF56  F024         	goto	l4235
 10555  0048C6                     l4243:
 10556                           
 10557                           ;delay.c: 10:         }
 10558  0048C6  2A05               	incf	atraso_ms@j^0,f,c	;volatile
 10559  0048C8  EF4A  F024         	goto	l4229
 10560  0048CC                     l4247:
 10561                           
 10562                           ;delay.c: 11:     }
 10563  0048CC  4A03               	infsnz	atraso_ms@i^0,f,c	;volatile
 10564  0048CE  2A04               	incf	(atraso_ms@i+1)^0,f,c	;volatile
 10565  0048D0                     l4249:
 10566  0048D0  5001               	movf	atraso_ms@t^0,w,c
 10567  0048D2  5C03               	subwf	atraso_ms@i^0,w,c	;volatile
 10568  0048D4  5002               	movf	(atraso_ms@t+1)^0,w,c
 10569  0048D6  5804               	subwfb	(atraso_ms@i+1)^0,w,c	;volatile
 10570  0048D8  A0D8               	btfss	status,0,c
 10571  0048DA  EF71  F024         	goto	u4961
 10572  0048DE  EF73  F024         	goto	u4960
 10573  0048E2                     u4961:
 10574  0048E2  EF48  F024         	goto	l4227
 10575  0048E6                     u4960:
 10576  0048E6  0012               	return		;funcret
 10577  0048E8                     __end_of_atraso_ms:
 10578                           	callstack 0
 10579                           
 10580 ;; *************** function ___xxtofl *****************
 10581 ;; Defined at:
 10582 ;;		line 10 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
 10583 ;; Parameters:    Size  Location     Type
 10584 ;;  sign            1    wreg     unsigned char 
 10585 ;;  val             4    0[COMRAM] long 
 10586 ;; Auto vars:     Size  Location     Type
 10587 ;;  sign            1    8[COMRAM] unsigned char 
 10588 ;;  arg             4   10[COMRAM] unsigned long 
 10589 ;;  exp             1    9[COMRAM] unsigned char 
 10590 ;; Return value:  Size  Location     Type
 10591 ;;                  4    0[COMRAM] unsigned char 
 10592 ;; Registers used:
 10593 ;;		wreg, status,2, status,0
 10594 ;; Tracked objects:
 10595 ;;		On entry : 0/0
 10596 ;;		On exit  : 0/0
 10597 ;;		Unchanged: 0/0
 10598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10599 ;;      Params:         4       0       0       0       0       0       0
 10600 ;;      Locals:         6       0       0       0       0       0       0
 10601 ;;      Temps:          4       0       0       0       0       0       0
 10602 ;;      Totals:        14       0       0       0       0       0       0
 10603 ;;Total ram usage:       14 bytes
 10604 ;; Hardware stack levels used:    1
 10605 ;; This function calls:
 10606 ;;		Nothing
 10607 ;; This function is called by:
 10608 ;;		_encher_tanque
 10609 ;; This function uses a non-reentrant model
 10610 ;;
 10611                           
 10612                           	psect	text43
 10613  0055D2                     __ptext43:
 10614                           	callstack 0
 10615  0055D2                     ___xxtofl:
 10616                           	callstack 29
 10617                           
 10618                           ;incstack = 0
 10619                           ;___xxtofl@sign stored from wreg
 10620  0055D2  6E09               	movwf	___xxtofl@sign^0,c
 10621  0055D4  5009               	movf	___xxtofl@sign^0,w,c
 10622  0055D6  B4D8               	btfsc	status,2,c
 10623  0055D8  EFF0  F02A         	goto	u5361
 10624  0055DC  EFF2  F02A         	goto	u5360
 10625  0055E0                     u5361:
 10626  0055E0  EF14  F02B         	goto	l866
 10627  0055E4                     u5360:
 10628  0055E4  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 10629  0055E6  EFF9  F02A         	goto	u5370
 10630  0055EA  EFF7  F02A         	goto	u5371
 10631  0055EE                     u5371:
 10632  0055EE  EF14  F02B         	goto	l866
 10633  0055F2                     u5370:
 10634  0055F2  C001  F005         	movff	___xxtofl@val,??___xxtofl
 10635  0055F6  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 10636  0055FA  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 10637  0055FE  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 10638  005602  1E05               	comf	??___xxtofl^0,f,c
 10639  005604  1E06               	comf	(??___xxtofl+1)^0,f,c
 10640  005606  1E07               	comf	(??___xxtofl+2)^0,f,c
 10641  005608  1E08               	comf	(??___xxtofl+3)^0,f,c
 10642  00560A  2A05               	incf	??___xxtofl^0,f,c
 10643  00560C  0E00               	movlw	0
 10644  00560E  2206               	addwfc	(??___xxtofl+1)^0,f,c
 10645  005610  2207               	addwfc	(??___xxtofl+2)^0,f,c
 10646  005612  2208               	addwfc	(??___xxtofl+3)^0,f,c
 10647  005614  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 10648  005618  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 10649  00561C  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 10650  005620  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 10651  005624  EF1C  F02B         	goto	l4517
 10652  005628                     l866:
 10653  005628  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 10654  00562C  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10655  005630  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10656  005634  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10657  005638                     l4517:
 10658  005638  5001               	movf	___xxtofl@val^0,w,c
 10659  00563A  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 10660  00563C  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 10661  00563E  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 10662  005640  A4D8               	btfss	status,2,c
 10663  005642  EF25  F02B         	goto	u5381
 10664  005646  EF27  F02B         	goto	u5380
 10665  00564A                     u5381:
 10666  00564A  EF31  F02B         	goto	l4523
 10667  00564E                     u5380:
 10668  00564E  0E00               	movlw	0
 10669  005650  6E01               	movwf	?___xxtofl^0,c
 10670  005652  0E00               	movlw	0
 10671  005654  6E02               	movwf	(?___xxtofl+1)^0,c
 10672  005656  0E00               	movlw	0
 10673  005658  6E03               	movwf	(?___xxtofl+2)^0,c
 10674  00565A  0E00               	movlw	0
 10675  00565C  6E04               	movwf	(?___xxtofl+3)^0,c
 10676  00565E  EFC2  F02B         	goto	l869
 10677  005662                     l4523:
 10678  005662  0E96               	movlw	150
 10679  005664  6E0A               	movwf	___xxtofl@exp^0,c
 10680  005666  EF3B  F02B         	goto	l4527
 10681  00566A                     l4525:
 10682  00566A  2A0A               	incf	___xxtofl@exp^0,f,c
 10683  00566C  90D8               	bcf	status,0,c
 10684  00566E  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 10685  005670  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 10686  005672  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 10687  005674  320B               	rrcf	___xxtofl@arg^0,f,c
 10688  005676                     l4527:
 10689  005676  0E00               	movlw	0
 10690  005678  140B               	andwf	___xxtofl@arg^0,w,c
 10691  00567A  6E05               	movwf	??___xxtofl^0,c
 10692  00567C  0E00               	movlw	0
 10693  00567E  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 10694  005680  6E06               	movwf	(??___xxtofl+1)^0,c
 10695  005682  0E00               	movlw	0
 10696  005684  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 10697  005686  6E07               	movwf	(??___xxtofl+2)^0,c
 10698  005688  0EFE               	movlw	254
 10699  00568A  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 10700  00568C  6E08               	movwf	(??___xxtofl+3)^0,c
 10701  00568E  5005               	movf	??___xxtofl^0,w,c
 10702  005690  1006               	iorwf	(??___xxtofl+1)^0,w,c
 10703  005692  1007               	iorwf	(??___xxtofl+2)^0,w,c
 10704  005694  1008               	iorwf	(??___xxtofl+3)^0,w,c
 10705  005696  A4D8               	btfss	status,2,c
 10706  005698  EF50  F02B         	goto	u5391
 10707  00569C  EF52  F02B         	goto	u5390
 10708  0056A0                     u5391:
 10709  0056A0  EF35  F02B         	goto	l4525
 10710  0056A4                     u5390:
 10711  0056A4  EF60  F02B         	goto	l873
 10712  0056A8                     l4529:
 10713  0056A8  2A0A               	incf	___xxtofl@exp^0,f,c
 10714  0056AA  0E01               	movlw	1
 10715  0056AC  260B               	addwf	___xxtofl@arg^0,f,c
 10716  0056AE  0E00               	movlw	0
 10717  0056B0  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 10718  0056B2  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 10719  0056B4  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 10720  0056B6  90D8               	bcf	status,0,c
 10721  0056B8  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 10722  0056BA  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 10723  0056BC  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 10724  0056BE  320B               	rrcf	___xxtofl@arg^0,f,c
 10725  0056C0                     l873:
 10726  0056C0  0E00               	movlw	0
 10727  0056C2  140B               	andwf	___xxtofl@arg^0,w,c
 10728  0056C4  6E05               	movwf	??___xxtofl^0,c
 10729  0056C6  0E00               	movlw	0
 10730  0056C8  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 10731  0056CA  6E06               	movwf	(??___xxtofl+1)^0,c
 10732  0056CC  0E00               	movlw	0
 10733  0056CE  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 10734  0056D0  6E07               	movwf	(??___xxtofl+2)^0,c
 10735  0056D2  0EFF               	movlw	255
 10736  0056D4  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 10737  0056D6  6E08               	movwf	(??___xxtofl+3)^0,c
 10738  0056D8  5005               	movf	??___xxtofl^0,w,c
 10739  0056DA  1006               	iorwf	(??___xxtofl+1)^0,w,c
 10740  0056DC  1007               	iorwf	(??___xxtofl+2)^0,w,c
 10741  0056DE  1008               	iorwf	(??___xxtofl+3)^0,w,c
 10742  0056E0  A4D8               	btfss	status,2,c
 10743  0056E2  EF75  F02B         	goto	u5401
 10744  0056E6  EF77  F02B         	goto	u5400
 10745  0056EA                     u5401:
 10746  0056EA  EF54  F02B         	goto	l4529
 10747  0056EE                     u5400:
 10748  0056EE  EF7F  F02B         	goto	l4537
 10749  0056F2                     l4535:
 10750  0056F2  060A               	decf	___xxtofl@exp^0,f,c
 10751  0056F4  90D8               	bcf	status,0,c
 10752  0056F6  360B               	rlcf	___xxtofl@arg^0,f,c
 10753  0056F8  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 10754  0056FA  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 10755  0056FC  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 10756  0056FE                     l4537:
 10757  0056FE  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 10758  005700  EF84  F02B         	goto	u5411
 10759  005704  EF86  F02B         	goto	u5410
 10760  005708                     u5411:
 10761  005708  EF8E  F02B         	goto	l880
 10762  00570C                     u5410:
 10763  00570C  0E02               	movlw	2
 10764  00570E  600A               	cpfslt	___xxtofl@exp^0,c
 10765  005710  EF8C  F02B         	goto	u5421
 10766  005714  EF8E  F02B         	goto	u5420
 10767  005718                     u5421:
 10768  005718  EF79  F02B         	goto	l4535
 10769  00571C                     u5420:
 10770  00571C                     l880:
 10771  00571C  B00A               	btfsc	___xxtofl@exp^0,0,c
 10772  00571E  EF93  F02B         	goto	u5431
 10773  005722  EF95  F02B         	goto	u5430
 10774  005726                     u5431:
 10775  005726  EF96  F02B         	goto	l4543
 10776  00572A                     u5430:
 10777  00572A  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 10778  00572C                     l4543:
 10779  00572C  90D8               	bcf	status,0,c
 10780  00572E  320A               	rrcf	___xxtofl@exp^0,f,c
 10781  005730  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 10782  005734  6A06               	clrf	(??___xxtofl+1)^0,c
 10783  005736  6A07               	clrf	(??___xxtofl+2)^0,c
 10784  005738  6A08               	clrf	(??___xxtofl+3)^0,c
 10785  00573A  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 10786  00573E  6A07               	clrf	(??___xxtofl+2)^0,c
 10787  005740  6A06               	clrf	(??___xxtofl+1)^0,c
 10788  005742  6A05               	clrf	??___xxtofl^0,c
 10789  005744  5005               	movf	??___xxtofl^0,w,c
 10790  005746  120B               	iorwf	___xxtofl@arg^0,f,c
 10791  005748  5006               	movf	(??___xxtofl+1)^0,w,c
 10792  00574A  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 10793  00574C  5007               	movf	(??___xxtofl+2)^0,w,c
 10794  00574E  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 10795  005750  5008               	movf	(??___xxtofl+3)^0,w,c
 10796  005752  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 10797  005754  5009               	movf	___xxtofl@sign^0,w,c
 10798  005756  B4D8               	btfsc	status,2,c
 10799  005758  EFB0  F02B         	goto	u5441
 10800  00575C  EFB2  F02B         	goto	u5440
 10801  005760                     u5441:
 10802  005760  EFBA  F02B         	goto	l4553
 10803  005764                     u5440:
 10804  005764  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 10805  005766  EFB9  F02B         	goto	u5450
 10806  00576A  EFB7  F02B         	goto	u5451
 10807  00576E                     u5451:
 10808  00576E  EFBA  F02B         	goto	l4553
 10809  005772                     u5450:
 10810  005772  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 10811  005774                     l4553:
 10812  005774  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 10813  005778  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 10814  00577C  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 10815  005780  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 10816  005784                     l869:
 10817  005784  0012               	return		;funcret
 10818  005786                     __end_of___xxtofl:
 10819                           	callstack 0
 10820                           
 10821                           	psect	rparam
 10822  0000                     
 10823                           	psect	idloc
 10824                           
 10825                           ;Config register IDLOC0 @ 0x200000
 10826                           ;	unspecified, using default values
 10827  200000                     	org	2097152
 10828  200000  FF                 	db	255
 10829                           
 10830                           ;Config register IDLOC1 @ 0x200001
 10831                           ;	unspecified, using default values
 10832  200001                     	org	2097153
 10833  200001  FF                 	db	255
 10834                           
 10835                           ;Config register IDLOC2 @ 0x200002
 10836                           ;	unspecified, using default values
 10837  200002                     	org	2097154
 10838  200002  FF                 	db	255
 10839                           
 10840                           ;Config register IDLOC3 @ 0x200003
 10841                           ;	unspecified, using default values
 10842  200003                     	org	2097155
 10843  200003  FF                 	db	255
 10844                           
 10845                           ;Config register IDLOC4 @ 0x200004
 10846                           ;	unspecified, using default values
 10847  200004                     	org	2097156
 10848  200004  FF                 	db	255
 10849                           
 10850                           ;Config register IDLOC5 @ 0x200005
 10851                           ;	unspecified, using default values
 10852  200005                     	org	2097157
 10853  200005  FF                 	db	255
 10854                           
 10855                           ;Config register IDLOC6 @ 0x200006
 10856                           ;	unspecified, using default values
 10857  200006                     	org	2097158
 10858  200006  FF                 	db	255
 10859                           
 10860                           ;Config register IDLOC7 @ 0x200007
 10861                           ;	unspecified, using default values
 10862  200007                     	org	2097159
 10863  200007  FF                 	db	255
 10864                           
 10865                           	psect	config
 10866                           
 10867                           ; Padding undefined space
 10868  300000                     	org	3145728
 10869  300000  FF                 	db	255
 10870                           
 10871                           ;Config register CONFIG1H @ 0x300001
 10872                           ;	Oscillator Selection bits
 10873                           ;	OSC = HS, HS oscillator
 10874                           ;	Fail-Safe Clock Monitor Enable bit
 10875                           ;	FCMEN = 0x0, unprogrammed default
 10876                           ;	Internal/External Oscillator Switchover bit
 10877                           ;	IESO = 0x0, unprogrammed default
 10878  300001                     	org	3145729
 10879  300001  02                 	db	2
 10880                           
 10881                           ;Config register CONFIG2L @ 0x300002
 10882                           ;	unspecified, using default values
 10883                           ;	Power-up Timer Enable bit
 10884                           ;	PWRT = 0x1, unprogrammed default
 10885                           ;	Brown-out Reset Enable bits
 10886                           ;	BOREN = 0x3, unprogrammed default
 10887                           ;	Brown Out Reset Voltage bits
 10888                           ;	BORV = 0x3, unprogrammed default
 10889  300002                     	org	3145730
 10890  300002  1F                 	db	31
 10891                           
 10892                           ;Config register CONFIG2H @ 0x300003
 10893                           ;	Watchdog Timer Enable bit
 10894                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10895                           ;	Watchdog Timer Postscale Select bits
 10896                           ;	WDTPS = 1, 1:1
 10897  300003                     	org	3145731
 10898  300003  00                 	db	0
 10899                           
 10900                           ; Padding undefined space
 10901  300004                     	org	3145732
 10902  300004  FF                 	db	255
 10903                           
 10904                           ;Config register CONFIG3H @ 0x300005
 10905                           ;	unspecified, using default values
 10906                           ;	CCP2 MUX bit
 10907                           ;	CCP2MX = 0x1, unprogrammed default
 10908                           ;	PORTB A/D Enable bit
 10909                           ;	PBADEN = 0x1, unprogrammed default
 10910                           ;	Low-Power Timer1 Oscillator Enable bit
 10911                           ;	LPT1OSC = 0x0, unprogrammed default
 10912                           ;	MCLR Pin Enable bit
 10913                           ;	MCLRE = 0x1, unprogrammed default
 10914  300005                     	org	3145733
 10915  300005  83                 	db	131
 10916                           
 10917                           ;Config register CONFIG4L @ 0x300006
 10918                           ;	Stack Full/Underflow Reset Enable bit
 10919                           ;	STVREN = 0x1, unprogrammed default
 10920                           ;	Single-Supply ICSP Enable bit
 10921                           ;	LVP = OFF, Single-Supply ICSP disabled
 10922                           ;	Extended Instruction Set Enable bit
 10923                           ;	XINST = 0x0, unprogrammed default
 10924                           ;	Background Debugger Enable bit
 10925                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 10926  300006                     	org	3145734
 10927  300006  81                 	db	129
 10928                           
 10929                           ; Padding undefined space
 10930  300007                     	org	3145735
 10931  300007  FF                 	db	255
 10932                           
 10933                           ;Config register CONFIG5L @ 0x300008
 10934                           ;	unspecified, using default values
 10935                           ;	Code Protection bit
 10936                           ;	CP0 = 0x1, unprogrammed default
 10937                           ;	Code Protection bit
 10938                           ;	CP1 = 0x1, unprogrammed default
 10939                           ;	Code Protection bit
 10940                           ;	CP2 = 0x1, unprogrammed default
 10941                           ;	Code Protection bit
 10942                           ;	CP3 = 0x1, unprogrammed default
 10943  300008                     	org	3145736
 10944  300008  0F                 	db	15
 10945                           
 10946                           ;Config register CONFIG5H @ 0x300009
 10947                           ;	unspecified, using default values
 10948                           ;	Boot Block Code Protection bit
 10949                           ;	CPB = 0x1, unprogrammed default
 10950                           ;	Data EEPROM Code Protection bit
 10951                           ;	CPD = 0x1, unprogrammed default
 10952  300009                     	org	3145737
 10953  300009  C0                 	db	192
 10954                           
 10955                           ;Config register CONFIG6L @ 0x30000A
 10956                           ;	unspecified, using default values
 10957                           ;	Write Protection bit
 10958                           ;	WRT0 = 0x1, unprogrammed default
 10959                           ;	Write Protection bit
 10960                           ;	WRT1 = 0x1, unprogrammed default
 10961                           ;	Write Protection bit
 10962                           ;	WRT2 = 0x1, unprogrammed default
 10963                           ;	Write Protection bit
 10964                           ;	WRT3 = 0x1, unprogrammed default
 10965  30000A                     	org	3145738
 10966  30000A  0F                 	db	15
 10967                           
 10968                           ;Config register CONFIG6H @ 0x30000B
 10969                           ;	unspecified, using default values
 10970                           ;	Configuration Register Write Protection bit
 10971                           ;	WRTC = 0x1, unprogrammed default
 10972                           ;	Boot Block Write Protection bit
 10973                           ;	WRTB = 0x1, unprogrammed default
 10974                           ;	Data EEPROM Write Protection bit
 10975                           ;	WRTD = 0x1, unprogrammed default
 10976  30000B                     	org	3145739
 10977  30000B  E0                 	db	224
 10978                           
 10979                           ;Config register CONFIG7L @ 0x30000C
 10980                           ;	unspecified, using default values
 10981                           ;	Table Read Protection bit
 10982                           ;	EBTR0 = 0x1, unprogrammed default
 10983                           ;	Table Read Protection bit
 10984                           ;	EBTR1 = 0x1, unprogrammed default
 10985                           ;	Table Read Protection bit
 10986                           ;	EBTR2 = 0x1, unprogrammed default
 10987                           ;	Table Read Protection bit
 10988                           ;	EBTR3 = 0x1, unprogrammed default
 10989  30000C                     	org	3145740
 10990  30000C  0F                 	db	15
 10991                           
 10992                           ;Config register CONFIG7H @ 0x30000D
 10993                           ;	unspecified, using default values
 10994                           ;	Boot Block Table Read Protection bit
 10995                           ;	EBTRB = 0x1, unprogrammed default
 10996  30000D                     	org	3145741
 10997  30000D  40                 	db	64
 10998                           tosu	equ	0xFFF
 10999                           tosh	equ	0xFFE
 11000                           tosl	equ	0xFFD
 11001                           stkptr	equ	0xFFC
 11002                           pclatu	equ	0xFFB
 11003                           pclath	equ	0xFFA
 11004                           pcl	equ	0xFF9
 11005                           tblptru	equ	0xFF8
 11006                           tblptrh	equ	0xFF7
 11007                           tblptrl	equ	0xFF6
 11008                           tablat	equ	0xFF5
 11009                           prodh	equ	0xFF4
 11010                           prodl	equ	0xFF3
 11011                           indf0	equ	0xFEF
 11012                           postinc0	equ	0xFEE
 11013                           postdec0	equ	0xFED
 11014                           preinc0	equ	0xFEC
 11015                           plusw0	equ	0xFEB
 11016                           fsr0h	equ	0xFEA
 11017                           fsr0l	equ	0xFE9
 11018                           wreg	equ	0xFE8
 11019                           indf1	equ	0xFE7
 11020                           postinc1	equ	0xFE6
 11021                           postdec1	equ	0xFE5
 11022                           preinc1	equ	0xFE4
 11023                           plusw1	equ	0xFE3
 11024                           fsr1h	equ	0xFE2
 11025                           fsr1l	equ	0xFE1
 11026                           bsr	equ	0xFE0
 11027                           indf2	equ	0xFDF
 11028                           postinc2	equ	0xFDE
 11029                           postdec2	equ	0xFDD
 11030                           preinc2	equ	0xFDC
 11031                           plusw2	equ	0xFDB
 11032                           fsr2h	equ	0xFDA
 11033                           fsr2l	equ	0xFD9
 11034                           status	equ	0xFD8

Data Sizes:
    Strings     255
    Constant    4
    Data        50
    BSS         102
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    127     127
    BANK0           128     96     128
    BANK1           256      0     120
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_42(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_42(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_37(CODE[4]), STR_36(CODE[4]), STR_33(CODE[4]), STR_32(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_37(CODE[4]), STR_36(CODE[4]), STR_33(CODE[4]), STR_32(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> ver_quantidade@y(BANK0[8]), esvaziar_tanque@y(BANK0[8]), encher_tanque@y(BANK0[8]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_28(CODE[5]), STR_22(CODE[5]), STR_12(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_28(CODE[5]), STR_22(CODE[5]), STR_12(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_28(CODE[5]), STR_22(CODE[5]), STR_12(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_28(CODE[5]), STR_22(CODE[5]), STR_12(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 8
		 -> ver_quantidade@y(BANK0[8]), esvaziar_tanque@y(BANK0[8]), encher_tanque@y(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S637_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 8
		 -> ver_quantidade@y(BANK0[8]), esvaziar_tanque@y(BANK0[8]), encher_tanque@y(BANK0[8]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> ver_quantidade@y(BANK0[8]), esvaziar_tanque@y(BANK0[8]), encher_tanque@y(BANK0[8]), 

    ver_quantidade@vol	PTR  size(2) Largest target is 4
		 -> volume(BANK0[4]), 

    esvaziar_tanque@vol	PTR  size(2) Largest target is 4
		 -> volume(BANK0[4]), 

    encher_tanque@vol	PTR  size(2) Largest target is 4
		 -> volume(BANK0[4]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_31(CODE[9]), STR_30(CODE[3]), STR_29(CODE[8]), ver_quantidade@y(BANK0[8]), 
		 -> STR_27(CODE[13]), STR_26(CODE[13]), STR_25(CODE[9]), STR_24(CODE[14]), 
		 -> STR_23(CODE[3]), esvaziar_tanque@y(BANK0[8]), STR_21(CODE[11]), STR_20(CODE[14]), 
		 -> STR_19(CODE[11]), STR_18(CODE[11]), STR_17(CODE[13]), STR_16(CODE[13]), 
		 -> STR_15(CODE[9]), STR_14(CODE[12]), STR_13(CODE[3]), encher_tanque@y(BANK0[8]), 
		 -> STR_11(CODE[11]), STR_10(CODE[16]), STR_9(CODE[11]), STR_8(CODE[11]), 
		 -> STR_7(CODE[14]), STR_6(CODE[10]), STR_5(CODE[15]), STR_4(CODE[15]), 
		 -> STR_3(CODE[14]), STR_2(CODE[11]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_encher_tanque
    _main->_esvaziar_tanque
    _main->_ver_quantidade
    _lcd_init->_lcd_cmd
    _tc_tecla->_atraso_ms
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___fltol->___fldiv
    ___flsub->___fladd
    ___fladd->___xxtofl
    ___flge->___fladd
    ___awdiv->___wmul
    _atoi->_isspace
    _pwmSet1->___lwdiv
    _lcd_str->_lcd_dat
    _lcd_dat->_atraso_ms
    _lcd_cmd->_atraso_ms

Critical Paths under _main in BANK0

    _main->_encher_tanque
    _ver_quantidade->_sprintf
    _esvaziar_tanque->_sprintf
    _encher_tanque->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  150077
                                             91 BANK0      5     5      0
                          _atraso_ms
                      _encher_tanque
                    _esvaziar_tanque
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                           _tc_tecla
                     _ver_quantidade
 ---------------------------------------------------------------------------------
 (1) _ver_quantidade                                      15    13      2   38873
                                            125 COMRAM     2     0      2
                                             36 BANK0     13    13      0
                            _lcd_cmd
                            _lcd_str
                            _sprintf
                           _tc_tecla
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    3360
                          _atraso_ms
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _esvaziar_tanque                                     41    39      2   46846
                                            125 COMRAM     2     0      2
                                             36 BANK0     39    39      0
                            ___fldiv
                            ___flsub
                            ___fltol
                          _atraso_ms
                            _lcd_cmd
                            _lcd_str
                            _sprintf
                           _tc_tecla
 ---------------------------------------------------------------------------------
 (1) _encher_tanque                                       57    55      2   50974
                                            125 COMRAM     2     0      2
                                             36 BANK0     55    55      0
                            ___awdiv
                            ___awmod
                            ___fladd
                             ___flge
                             ___wmul
                           ___xxtofl
                          _atraso_ms
                            _lcd_cmd
                            _lcd_dat
                            _lcd_str
                            _pwmInit
                            _pwmSet1
                            _sprintf
                           _tc_tecla
 ---------------------------------------------------------------------------------
 (2) _tc_tecla                                             7     5      2    2402
                                              6 COMRAM     7     5      2
                          _atraso_ms
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   30381
                                             18 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   29720
                                            123 COMRAM     2     2      0
                                             12 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   29348
                                            113 COMRAM    10     4      6
                                              0 BANK0     12    12      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   23289
                                             45 COMRAM    68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     457
                                             25 COMRAM    10     6      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    3497
                                             30 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2718
                                             14 COMRAM    16     8      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2352
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     790
                                             30 COMRAM    12     4      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2159
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     756
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1912
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _pwmSet1                                              5     5      0    1628
                                              7 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1071
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _pwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lcd_str                                              5     3      2    4148
                                              7 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (3) _lcd_dat                                              1     1      0    1702
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0    1702
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (4) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _atraso_ms                                            6     4      2    1658
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atraso_ms
   _encher_tanque
     ___awdiv
       ___wmul (ARG)
     ___awmod
     ___fladd
       ___xxtofl (ARG)
     ___flge
       ___fladd (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___wmul
     ___xxtofl
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_dat
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _pwmInit
     _pwmSet1
       ___lwdiv
       ___wmul
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
               ___wmul (ARG)
             ___awmod
             ___fladd
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
                 ___xxtofl (ARG)
               ___flmul (ARG)
             ___fltol
               ___fldiv (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
     _tc_tecla
       _atraso_ms
   _esvaziar_tanque
     ___fldiv
     ___flsub
       ___fladd
         ___xxtofl (ARG)
       ___flmul (ARG)
     ___fltol
       ___fldiv (ARG)
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
               ___wmul (ARG)
             ___awmod
             ___fladd
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
                 ___xxtofl (ARG)
               ___flmul (ARG)
             ___fltol
               ___fldiv (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
     _tc_tecla
       _atraso_ms
   _lcd_cmd
     _atraso_ms
     _lcd_wr
   _lcd_init
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
   _lcd_str
     _lcd_dat
       _atraso_ms
       _lcd_wr
   _tc_tecla
     _atraso_ms
   _ver_quantidade
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
               ___wmul (ARG)
             ___awmod
             ___fladd
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
                 ___xxtofl (ARG)
               ___flmul (ARG)
             ___fltol
               ___fldiv (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
     _tc_tecla
       _atraso_ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      78       7       46.9%
BITBANK0            80      0       0       4        0.0%
BANK0               80     60      80       5      100.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7F      7F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     177      15        0.0%
DATA                 0      0     177       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Jul 05 13:09:10 2020

             ___fldiv@aexp 0019  esvaziar_tanque@decremento 00C5               ___fldiv@bexp 0018  
                        _i 00F0               ___fldiv@sign 0011                         l31 54CC  
                       l60 57F0                         l70 5870                         l62 57DA  
                       l72 5858                         l65 5830                         l90 4952  
                       l67 5818                         l77 5898                         l87 594E  
                       l99 43F8               ___awdiv@sign 000C        ___wmul@multiplicand 0003  
           encher_tanque@i 00D6             encher_tanque@y 00BC                        l110 449A  
                      l104 43DA                        l113 475E                        l107 4470  
                      l211 441E                        l204 4F70                        l119 4A3E  
                      l208 4FA8                        l129 48E6                        l191 5DD6  
                      l168 6E9E                        l442 4C5C                        l508 52B0  
                      l702 49BE                        l470 4AE8                        l455 4B98  
                      l481 51AA                        l804 6016                        l476 5164  
                      l740 707C                        l709 49C6                        l485 4540  
                      l741 7042                        l806 608E                        l807 607C  
                      l832 642C                        l825 6236                        l842 655C  
                      l834 64A4                        l930 4CA4                        l835 6492  
                      l739 708E                        l756 71A8                        l748 735E  
                      l829 659A                        l765 7278                        l781 4602  
                      l933 4CE6                        l766 7266                        l935 4D22  
                      l880 571C                        l873 56C0                        l793 6170  
                      l953 7EF8                        l866 5628                        l795 5FD0  
                      l971 773E                        l869 5784                        l798 5F94  
                      l889 46A6                        l997 7AD0                        _pad 4C5E  
             ___awmod@sign 0006                        wreg 000FE8            ?_ver_quantidade 007E  
          encher_tanque@t1 00D2            encher_tanque@t2 00D8               ___flmul@aexp 0012  
             ___flmul@bexp 0013                _tolower$921 000D               ___flmul@sign 000D  
             ___flmul@temp 0018               ___flmul@prod 0014       encher_tanque@numeros 00A8  
             ___fltol@exp1 0023                       l1105 5B60                       l1050 694E  
                     l1115 4508                       l1123 4654                       l1043 6A04  
                     l1108 5AA4                       l1144 4DEC                       l1152 45BC  
                     l1056 4818                       l1161 4702                       l1129 4578  
                     l1057 4820                       l1067 50A6                       l1155 43D2  
                     l1171 4EC2                       l3101 6EEC                       l1181 47B6  
                     l3111 6F1E                       l3103 6EEE                       l1167 44D0  
                     l1096 5438                       l3201 70EC                       l3121 6F46  
                     l3113 6F20                       l3105 6EF6                       l4001 7866  
                     l1186 47BE                       l1099 5440                       l3211 7116  
                     l3203 70F8                       l3131 6F80                       l3123 6F56  
                     l3115 6F26                       l3107 6F06                       l4011 797A  
                     l4003 7876                       l3221 7188                       l3205 70FC  
                     l3213 711C                       l3141 6FAC                       l3133 6F92  
                     l3125 6F66                       l3117 6F34                       l3109 6F0C  
                     l3301 44A8                       l4101 7D56                       l4021 7A16  
                     l4005 788A                       l4013 797E                       l3231 71E2  
                     l3215 7142                       l3223 7198                       l3207 710A  
                     l3151 6FC0                       l3143 6FB0                       l3135 6FA0  
                     l3127 6F68                       l3119 6F36                       l3303 44AC  
                     l4111 7D8C                       l4103 7D5E                       l4031 7AAA  
                     l4023 7A48                       l4015 799C                       l4007 78EE  
                     l3313 43FA                       l3401 5FCE                       l3321 5DE4  
                     l3241 7212                       l3233 71EC                       l3225 71BE  
                     l3217 7176                       l3209 710C                       l3161 6FD4  
                     l3153 6FC4                       l3145 6FB4                       l3137 6FA4  
                     l3129 6F70                       l3081 4D52                       l3305 44C4  
                     l4121 7DE8                       l4113 7D94                       l4105 7D6E  
                     l4041 7B60                       l4033 7ABC                       l4025 7A56  
                     l4017 79D0                       l4009 7946                       l3315 4416  
                     l3411 6014                       l3403 5FE0                       l3331 5E24  
                     l3323 5DF2                       l3251 723A                       l3243 7216  
                     l3235 71FA                       l3227 71CE                       l3219 7178  
                     l3171 700E                       l3163 6FD8                       l3155 6FC8  
                     l3147 6FB8                       l3139 6FA8                       l3091 6EAC  
                     l3083 4D70                       l3075 4D24                       l4131 7E26  
                     l4123 7DEE                       l4115 7DA0                       l4107 7D76  
                     l4051 7BAC                       l4043 7B72                       l4035 7AC8  
                     l4027 7A66                       l4019 7A02                       l4211 4E24  
                     l3421 6074                       l3405 5FF6                       l3413 6026  
                     l3341 5E4A                       l3333 5E26                       l3325 5DF4  
                     l3501 6280                       l3261 7294                       l3253 7248  
                     l3245 7226                       l3237 71FC                       l3181 7060  
                     l3173 702A                       l3165 6FDC                       l3157 6FCC  
                     l3149 6FBC                       l3093 6EBA                       l3085 4DA6  
                     l3077 4D36                       l3309 4542                       l4141 7E62  
                     l4133 7E38                       l4117 7DA6                       l4125 7DF4  
                     l4109 7D84                       l4061 7BE0                       l4053 7BBA  
                     l4045 7B84                       l4037 7AEC                       l4029 7A9A  
                     l4221 4EA0                       l4213 4E32                       l4205 4DEE  
                     l3431 60E2                       l3415 6034                       l3407 5FFC  
                     l3351 5E8A                       l3343 5E58                       l3327 5E04  
                     l3335 5E2E                       l3319 5DD8                       l3511 62D2  
                     l3503 6296                       l3271 72FE                       l3263 72A2  
                     l3255 725E                       l3239 720A                       l3247 7228  
                     l3191 70AC                       l3183 706E                       l3175 703A  
                     l3159 6FD0                       l3167 6FE0                       l3095 6EBC  
                     l3079 4D48                       l4151 7EBA                       l4143 7E68  
                     l4135 7E44                       l4127 7E06                       l4119 7DCC  
                     l4071 7C12                       l4063 7BF0                       l4055 7BCA  
                     l4047 7B92                       l4039 7B50                       l4215 4E4A  
                     l4207 4E18                       l4311 68EA                       l4303 683C  
                     l4233 48A8                       l4225 4884                       l4401 49C8  
                     l3601 4BB8                       l3441 614C                       l3425 609E  
                     l3433 60E6                       l3417 6038                       l3409 6006  
                     l3361 5ECA                       l3353 5E8C                       l3345 5E5A  
                     l3337 5E3E                       l3329 5E14                       l3521 6318  
                     l3513 62E0                       l3505 62A2                       l3281 7338  
                     l3273 731E                       l3265 72DC                       l3249 7236  
                     l3185 7070                       l3177 7050                       l3169 6FE4  
                     l3097 6ECC                       l3089 6EA0                       l4153 7EC2  
                     l4137 7E4C                       l4129 7E20                       l4081 7CBA  
                     l4073 7C24                       l4065 7BF4                       l4057 7BCE  
                     l4049 7B9A                       l4217 4E66                       l4321 6986  
                     l4313 691E                       l4305 686A                       l4243 48C6  
                     l4235 48AC                       l4227 4890                       l4251 43D6  
                     l4403 49D0                       l4171 52EA                       l4163 52B2  
                     l3611 4BEC                       l3603 4BC6                       l3443 6150  
                     l3435 6100                       l3427 60AA                       l3419 6046  
                     l3371 5EFA                       l3363 5ED2                       l3347 5E6A  
                     l3355 5E94                       l3339 5E44                       l3531 6386  
                     l3523 6332                       l3515 62EC                       l3507 62BA  
                     l3283 733E                       l3275 7322                       l3259 7288  
                     l3267 72DE                       l3195 70C0                       l3187 707A  
                     l3179 705C                       l3099 6EDC                       l3291 457A  
                     l4155 7ED2                       l4147 7E9C                       l4139 7E5C  
                     l4091 7D10                       l4083 7CC0                       l4075 7C28  
                     l4067 7BFA                       l4059 7BD4                       l4219 4E78  
                     l4331 69C2                       l4323 6994                       l4411 5792  
                     l4229 4894                       l4405 4A00                       l4181 5340  
                     l4173 5320                       l4165 52C6                       l3621 4C26  
                     l3613 4BF4                       l3605 4BCE                       l3445 615E  
                     l3437 6116                       l3429 60B8                       l3381 5F38  
                     l3373 5EFA                       l3365 5ED6                       l3357 5EA4  
                     l3349 5E7A                       l3701 5144                       l3541 641C  
                     l3533 63B0                       l3525 6342                       l3517 62FC  
                     l3509 62C6                       l3461 618C                       l3285 734C  
                     l3277 7330                       l3269 72EE                       l3197 70D0  
                     l3189 709C                       l3293 4586                       l4157 7ED8  
                     l4149 7EAE                       l4093 7D20                       l4069 7C00  
                     l4077 7C2E                       l4085 7CC4                       l4325 69A8  
                     l4309 68D8                       l4261 65E4                       l4253 659C  
                     l4501 4668                       l4421 57B2                       l4413 579A  
                     l4511 55D4                       l4239 48C0                       l4247 48CC  
                     l4351 448A                       l4343 4474                       l4407 4A02  
                     l4191 53BA                       l4183 5348                       l4175 5324  
                     l4167 52CA                       l3631 4C4C                       l3623 4C2E  
                     l3615 4BFC                       l3607 4BD2                       l3447 6164  
                     l3439 6130                       l3391 5F84                       l3383 5F48  
                     l3359 5EBA                       l3703 5152                       l3551 645C  
                     l3543 642A                       l3535 63E6                       l3527 635E  
                     l3519 6308                       l3471 61C4                       l3463 618E  
                     l3711 450A                       l3287 734E                       l3279 7336  
                     l3199 70DE                       l3295 4598                       l4095 7D30  
                     l4087 7CE2                       l4079 7C86                       l4319 6962  
                     l4271 667C                       l4263 6608                       l4255 65C0  
                     l4335 69CE                       l4503 4670                       l4431 57FE  
                     l4423 57C0                       l4513 55E4                       l4249 48D0  
                     l4353 448C                       l4345 4476                       l4361 496E  
                     l4185 5350                       l4169 52CE                       l3633 4C54  
                     l3625 4C30                       l3617 4C0A                       l3609 4BDA  
                     l3641 4AFC                       l3449 6166                       l3393 5F92  
                     l3385 5F58                       l3377 5F0E                       l3369 5EEA  
                     l3705 51A2                       l3561 64CE                       l3553 648A  
                     l3545 643C                       l3537 63F4                       l3529 636A  
                     l3481 61F0                       l3473 61D4                       l3465 619E  
                     l3457 6172                       l3713 4520                       l3721 51C2  
                     l3297 459C                       l4097 7D34                       l4089 7CFE  
                     l4337 69F2                       l4329 69B4                       l4273 669C  
                     l4265 6610                       l4281 6704                       l4257 65CE  
                     l4505 4678                       l4441 584A                       l4433 580A  
                     l4425 57CC                       l4409 5786                       l4601 4F96  
                     l4531 56AA                       l4523 5662                       l4515 55F2  
                     l4355 4498                       l4347 447C                       l4371 49A8  
                     l4363 4976                       l4195 53F8                       l4187 5384  
                     l4179 532A                       l3627 4C36                       l3619 4C10  
                     l3651 4B30                       l3643 4B04                       l3395 5F9E  
                     l3387 5F60                       l3379 5F28                       l3707 51A8  
                     l3571 6544                       l3563 64F8                       l3547 644A  
                     l3539 6412                       l3491 6246                       l3483 6200  
                     l3475 61DA                       l3467 61AE                       l3459 617E  
                     l3715 4530                       l3731 5212                       l3803 509E  
                     l3299 449C                       l3811 4760                       l4099 7D44  
                     l4291 67AA                       l4283 6726                       l4275 66AA  
                     l4267 661E                       l4259 65E0                       l4507 4694  
                     l4419 579E                       l4611 6A30                       l4541 572A  
                     l4533 56B6                       l4525 566A                       l4517 5638  
                     l4349 447E                       l4373 49B0                       l4365 497E  
                     l4357 4954                       l4197 540A                       l3629 4C3C  
                     l3661 4B6C                       l3653 4B38                       l3645 4B08  
                     l3637 4AEA                       l3397 5FBC                       l3389 5F70  
                     l3573 6560                       l3581 6586                       l3557 64B4  
                     l3565 64FC                       l3549 644E                       l3493 6256  
                     l3485 6210                       l3477 61E0                       l3469 61BE  
                     l3741 523C                       l3733 5216                       l3725 51D6  
                     l3821 5950                       l3901 7472                       l4293 67BC  
                     l4285 6736                       l4269 6642                       l4381 47C8  
                     l4453 58A6                       l4445 5866                       l4437 5826  
                     l4461 58D4                       l4429 57E8                       l4701 6D90  
                     l4621 6A5E                       l4613 6A36                       l4605 6A06  
                     ?_pad 0011                       l4551 5772                       l4543 572C  
                     l4535 56F2                       l4527 5676                       l4519 564E  
                     l4391 4452                       l4375 49B2                       l4367 498C  
                     l4359 495C                       l4199 541C                       l3663 4B72  
                     l3655 4B40                       l3647 4B16                       l3639 4AEE  
                     l3399 5FBE                       l3583 658A                       l3575 6570  
                     l3567 6516                       l3559 64C0                       l3487 6220  
                     l3479 61EE                       l3751 5264                       l3743 5246  
                     l3735 5224                       l3727 5200                       l3719 51AC  
                     l3823 5970                       l3807 46A8                       l3815 4796  
                     l3903 7484                       l4295 67D2                       l4287 6768  
                     l4279 66F2                       l4383 47D6                       l4471 5920  
                     l4463 58E0                       l4447 587E                       l4455 58B0  
                     l4439 583E                       l4711 6DCE                       l4703 6D92  
                     l4631 6AE4                       l4623 6A62                       l4615 6A40  
                     l4607 6A12                       l4553 5774                       l4545 5730  
                     l4537 56FE                       l4529 56A8                       l4393 4454  
                     l4377 49B8                       l4369 4992                       l3593 4B9A  
                     l3657 4B4E                       l3665 4B78                       l3649 4B1E  
                     l3681 4ABC                       l3673 4A40                       l3577 657E  
                     l3569 652A                       l3497 626A                       l3489 6226  
                     l3753 5270                       l3745 5250                       l3729 5202  
                     l3841 5B18                       l3833 5A58                       l3825 59C6  
                     l3809 46B8                       l3817 47A8                       l3921 7554  
                     l3905 74A0                       l3913 74E8                       l4297 67E0  
                     l4289 6778                       l4385 47FC                       l4473 5930  
                     l4457 58C2                       l4449 588A                       l4465 58E8  
                     l4713 6DD6                       l4721 6E04                       l4705 6D94  
                     l4641 6B16                       l4625 6A68                       l4617 6A48  
                     l4633 6AE8                       l4609 6A1E                       l4801 5D18  
                     l4561 4714                       l4547 5754                       l4539 570C  
                     l4395 4460                       l4387 444A                       l4491 4944  
                     l4483 48EA                       l3595 4B9E                       l3667 4B88  
                     l3659 4B64                       l3683 4AE0                       l3675 4A6E  
                     l3691 50D6                       l3579 6580                       l3499 6276  
                     l3587 45BE                       l3755 5280                       l3843 5B40  
                     l3835 5A94                       l3827 59DA                       l3771 4C9C  
                     l3763 4C5E                       l3923 7570                       l3915 750E  
                     l3931 758C                       l3907 74B8                       l4299 6810  
                     l4379 47C0                       l4475 5932                       l4467 58FE  
                     l4459 58C4                       l4731 6E36                       l4715 6DE8  
                     l4707 6DAC                       l4723 6E08                       l4651 6BBE  
                     l4643 6B24                       l4635 6AFC                       l4627 6A7C  
                     l4619 6A4C                       l4811 5D56                       l4803 5D24  
                     l4571 4F0A                       l4563 4EC4                       l4549 5764  
                     l4397 4462                       l4389 444C                       l4493 43E6  
                     l4485 4908                       l3861 464E                       l3853 4604  
                     l3597 4BAC                       l3669 4B90                       l3685 4AE6  
                     l3677 4A7E                       l3693 50E6                       l3589 45CE  
                     l3757 5290                       l3845 5B50                       l3829 59E8  
                     l3837 5AC8                       l3781 4D0A                       l3773 4CB0  
                     l3765 4C6E                       l3941 7612                       l3933 75A4  
                     l3909 74C0                       l4477 5944                       l4469 5910  
                     l4741 6E56                       l4733 6E38                       l4725 6E1C  
                     l4717 6DEE                       l4709 6DB8                       l4661 6C60  
                     l4645 6B94                       l4653 6BC4                       l4637 6B04  
                     l4629 6AB4                       l4821 5D76                       l4813 5D62  
                     l4805 5D2C                       l4557 4704                       l4581 4F3A  
                     l4573 4F16                       l4565 4EF2                       l4901 5528  
                     l4399 446E                       l4495 43EA                       l4487 4924  
                     l3855 4608                       l3599 4BB4                       l3679 4AAC  
                     l3695 5114                       l3759 52A0                       l3791 5030  
                     l3839 5B04                       l3775 4CC4                       l3767 4C82  
                     l3951 76E6                       l3943 766C                       l3919 7542  
                     l3871 7386                       l4479 5948                       l4751 6E80  
                     l4735 6E3E                       l4727 6E2E                       l4719 6DFA  
                     l4671 6C96                       l4663 6C6C                       l4655 6C1A  
                     l4743 6E62                       l4647 6BA0                       l4639 6B10  
                     l4831 5D9E                       l4823 5D7C                       l4559 4708  
                     l4591 4F50                       l4575 4F22                       l4567 4EF8  
                     l4911 554E                       l4903 552C                       l4497 43EE  
                     l4489 492C                       l3849 44D2                       l3857 461C  
                     l3697 5124                       l3689 50A8                       l3793 503C  
                     l3785 4FAA                       l3777 4CC8                       l3769 4C90  
                     l3961 7732                       l3953 76EA                       l3945 76A0  
                     l3937 75DA                       l3881 73D4                       l3873 738E  
                     l3865 7360                       l4753 6E8C                       l4745 6E66  
                     l4737 6E44                       l4729 6E34                       l4681 6CB4  
                     l4673 6C9A                       l4665 6C7C                       l4657 6C48  
                     l4649 6BAC                       l4833 5DA2                       l4825 5D88  
                     l4817 5D6E                       l4809 5D40                       l4761 5B7A  
                     l4593 4F6C                       l4577 4F28                       l4569 4EFE  
                     l4921 55A8                       l4913 5560                       l4905 5538  
                     l3859 464A                       l3699 5132                       l3787 4FCA  
                     l3779 4CF6                       l3971 7770                       l3955 76FC  
                     l3963 774A                       l3947 76A6                       l3939 760E  
                     l3891 740E                       l3883 73E4                       l3875 73B2  
                     l3867 7368                       l4499 4656                       l4747 6E6A  
                     l4739 6E50                       l4691 6D06                       l4683 6CBA  
                     l4675 6C9C                       l4667 6C84                       l4659 6C54  
                     l4835 5DB4                       l4827 5D8E                       l4819 5D70  
                     l4771 5BEA                       l4763 5B8C                       l4595 4F74  
                     l4587 4F44                       l4579 4F34                       l4923 55B8  
                     l4915 5570                       l4851 5466                       l4843 5442  
                     l3789 5008                       l3797 5048                       l3981 77D6  
                     l3973 778C                       l3957 7710                       l3949 76D8  
                     l3893 7412                       l3885 73F6                       l3877 73BA  
                     l3869 7378                       l4749 6E7C                       l4693 6D68  
                     l4685 6CC6                       l4677 6CA2                       l4669 6C84  
                     l4837 5DB8                       l4781 5C8A                       l4829 5D9A  
                     l4773 5BF6                       l4765 5B92                       l4757 5B62  
                     l4597 4F86                       l4589 4F4A                       l4925 55BE  
                     l4917 5584                       l4861 5496                       l4853 5472  
                     l4845 5456                       l3799 505A                       l3991 781E  
                     l3983 77E8                       l3975 77C2                       l3959 7718  
                     l3887 7402                       l3895 7418                       l3879 73C2  
                     l4695 6D6A                       l4687 6CCA                       l4679 6CA8  
                     l4839 5DC4                       l4791 5CF8                       l4783 5C96  
                     l4775 5C02                       l4767 5B9E                       l4759 5B6E  
                     l4599 4F8A                       l4919 5594                       l4871 54C6  
                     l4863 549C                       l4855 5478                       l4847 545A  
                     l3993 782C                       l3985 77FA                       l3977 77CA  
                     l3969 775E                       l3897 743E                       l3889 740A  
                     l4697 6D6C                       l4689 6CE6                       l4793 5CFA  
                     l4785 5CA2                       l4777 5C18                       l4769 5BB0  
                     l4881 54EA                       l4873 54CC                       l4865 54A8  
                     l4857 5484                       l4849 5460                       l3995 7844  
                     l3987 7808                       l3979 77CE                       l4699 6D84  
                     l4795 5D00                       l4787 5CE2                       l4779 5C5C  
                     l4891 5506                       l4883 54F6                       l4875 54D2  
                     l4867 54AE                       l4859 5490                       l4957 536E  
                     l3997 7856                       l3989 780C                       l4797 5D06  
                     l4789 5CF4                       l4893 550A                       l4885 54FA  
                     l4877 54D8                       l4869 54BA                       l3999 785E  
                     l4799 5D12                       l4895 550E                       l4887 54FE  
                     l4879 54E4                       l4897 5512                       l4889 5502  
                     l4899 5516                       STR_1 7EFF                       STR_2 7FBD  
                     STR_3 7F68                       STR_4 7F2F                       STR_5 7F20  
                     STR_6 7FC8                       STR_7 7F5A                       STR_8 7F9C  
                     STR_9 7FB2                       u3000 706E                       u3001 706A  
                     u3010 708E                       u3011 708A                       u3100 71CE  
                     u3020 709C                       u3101 71CA                       u3021 7098  
                     u3110 71FA                       u3030 70AC                       u3111 71F6  
                     u3031 70A8                       u3200 72DC                       u3120 720A  
                     u3040 70DE                       u4000 4C6E                       u3201 72D8  
                     u3121 7206                       u3041 70DA                       u4001 4C6A  
                     u3210 72EE                       u3130 7226                       u3050 70EC  
                     u4010 4C90                       u3211 72EA                       u3131 7222  
                     u3051 70E8                       u4011 4C8C                       u3300 5DF2  
                     u3220 72FE                       u3140 7236                       u3060 710A  
                     u4100 5096                       u4020 4CE6                       u3301 5DEE  
                     u3221 72FA                       u3141 7232                       u3061 7106  
                     u4021 4CE2                       u3310 5E04                       u3230 731E  
                     u3150 7248                       u3070 7142                       u4030 4CF6  
                     u4110 46F0                       u3311 5E00                       u3231 731A  
                     u3151 7244                       u3071 713E                       u4031 4CF2  
                     u3400 5FBC                       u3320 5E14                       u3240 7330  
                     u3160 725E                       u3080 7188                       u4040 4FEA  
                     u4200 5A54                       u4120 4702                       u5000 66EA  
                     u3401 5FB8                       u3321 5E10                       u3241 732C  
                     u3161 725A                       u3081 7184                       u4201 5A50  
                     u4121 46FE                       u5001 66E4                       u3410 5FE0  
                     u3330 5E58                       u3250 734C                       u3170 7274  
                     u3090 71BE                       u4050 5008                       u4210 5A78  
                     u4130 4790                       u5010 66EC                       u3411 5FDC  
                     u3331 5E54                       u3251 7348                       u3171 7270  
                     u3091 71BA                       u4051 5004                       u4131 478A  
                     u3500 6100                       u3420 5FF6                       u3340 5E6A  
                     u3180 7288                       u4060 5030                       u4220 5A94  
                     u3260 45BC                       u4140 4792                       u4300 7386  
                     u5100 6986                       u5020 6704                       u3501 60FC  
                     u3421 5FF2                       u3341 5E66                       u3181 7284  
                     u4061 502C                       u4045 4FE0                       u4221 5A90  
                     u3261 45B8                       u4117 46E6                       u4301 7382  
                     u5101 6982                       u5021 6700                       u5110 496E  
                     u3510 6130                       u3430 6014                       u3350 5E7A  
                     u3190 72A2                       u4070 505A                       u4230 5AE8  
                     u3270 44C4                       u4150 47A8                       u4310 73D4  
                     u5030 6736                       u5111 496A                       u3511 612C  
                     u3431 6010                       u3351 5E76                       u3191 729E  
                     u4071 5056                       u4215 5A6E                       u3271 44C0  
                     u4151 47A4                       u4311 73D0                       u5031 6732  
                     u5120 498C                       u3520 615E                       u3440 6034  
                     u3360 5EBA                       u3600 6256                       u4240 5B04  
                     u4160 5998                       u3280 4572                       u4400 753E  
                     u4320 73E4                       u5040 6778                       u5200 57E8  
                     u5121 4988                       u3521 615A                       u3441 6030  
                     u3361 5EB6                       u3601 6252                       u4241 5B00  
                     u3281 456C                       u4321 73E0                       u5041 6774  
                     u5201 57E4                       u5130 49A8                       u3450 6046  
                     u3370 5EFA                       u3610 63D0                       u3530 618C  
                     u4090 5094                       u4250 5B40                       u4170 59C6  
                     u3290 4574                       u4410 7554                       u4330 73F6  
                     u5050 67BC                       u5210 57FE                       u5131 49A4  
                     u3451 6042                       u3371 5EF6                       u3531 6188  
                     u4091 508E                       u4251 5B3C                       u4235 5ADE  
                     u4171 59C2                       u4411 7550                       u4331 73F2  
                     u5051 67B8                       u5211 57FA                       u4260 4502  
                     u3460 6074                       u3380 5F70                       u3700 6544  
                     u3620 642A                       u3540 619E                       u2900 6F1E  
                     u4180 59E8                       u4500 778C                       u4420 75D6  
                     u4340 743E                       u5060 686A                       u5140 4818  
                     u5300 58D4                       u5220 5818                       u4261 44FC  
                     u3461 6070                       u3381 5F6C                       u3701 6540  
                     u3621 6426                       u3541 619A                       u2901 6F1A  
                     u4085 506C                       u4181 59E4                       u4165 598E  
                     u4501 7788                       u4421 75D2                       u4341 743A  
                     u5061 6866                       u5141 4814                       u5301 58D0  
                     u5221 5814                       u5150 49FC                       u4270 4504  
                     u3470 608A                       u3390 5F92                       u3710 657E  
                     u3630 644A                       u3550 61AE                       u2910 6F34  
                     u2830 4D36                       u4510 77C2                       u4430 7668  
                     u4350 746C                       u5070 68D0                       u5310 58FE  
                     u5230 5826                       u3471 6086                       u3391 5F8E  
                     u3711 657A                       u3631 6446                       u3615 63C6  
                     u3551 61AA                       u2911 6F30                       u2831 4D32  
                     u4511 77BE                       u4431 7664                       u4351 7466  
                     u5071 68CA                       u5311 58FA                       u5231 5822  
                     u5400 56EE                       u5160 4A2E                       u4280 461C  
                     u3720 4BAC                       u3800 4B30                       u3480 609E  
                     u3640 645C                       u3560 61EE                       u2920 6F46  
                     u2840 4D48                       u4600 7A48                       u4520 77E8  
                     u4440 76D8                       u4360 746E                       u5080 68D2  
                     u5320 5910                       u5240 583E                       u5401 56EA  
                     u4281 4618                       u3721 4BA8                       u3801 4B2C  
                     u3481 609A                       u3641 6458                       u3561 61EA  
                     u2921 6F42                       u2841 4D44                       u4601 7A44  
                     u4521 77E4                       u4441 76D4                       u5321 590C  
                     u5241 583A                       u5410 570C                       u5170 4A3E  
                     u4290 464A                       u3730 4BC6                       u3810 4B4E  
                     u3490 60B8                       u3650 648A                       u3570 6200  
                     u2930 6F56                       u2850 4D70                       u4610 7A56  
                     u4530 77FA                       u4450 76FC                       u4370 7484  
                     u5090 68EA                       u5330 5920                       u5250 5858  
                     u5411 5708                       u5171 4A3A                       u4291 4646  
                     u3731 4BC2                       u3811 4B4A                       u3491 60B4  
                     u3651 6486                       u3571 61FC                       u2931 6F52  
                     u4195 59FC                       u2851 4D6C                       u4611 7A52  
                     u4531 77F6                       u4451 76F8                       u4371 7480  
                     u5091 68E6                       u5331 591C                       u5251 5854  
                     u5420 571C                       u3740 4BEC                       u3820 4B64  
                     u3900 5152                       u3660 64A0                       u3580 6210  
                     u2940 6F92                       u4196 5A06                       u2860 4DA6  
                     u4700 7CE2                       u4620 7ABC                       u4540 7808  
                     u4460 7710                       u4380 750E                       u5340 5930  
                     u5260 5866                       u5180 57C0                       u5500 6B94  
                     u5421 5718                       u5157 49F2                       u3741 4BE8  
                     u3821 4B60                       u3901 514E                       u3661 649C  
                     u3581 620C                       u2941 6F8E                       u4197 5A16  
                     u2861 4DA2                       u4701 7CDE                       u4621 7AB8  
                     u4541 7804                       u4461 770C                       u4381 750A  
                     u5341 592C                       u5261 5862                       u5181 57BC  
                     u5501 6B90                       u5430 572A                       u3750 4C0A  
                     u3830 4B88                       u3910 51A2                       u3670 64B4  
                     u3590 6246                       u2950 6FA0                       u2870 6EBA  
                     u4710 7CFE                       u4630 7B60                       u4550 781E  
                     u4470 7732                       u4390 753C                       u5350 5944  
                     u5270 587E                       u5190 57DA                       u5431 5726  
                     u5167 4A24                       u3751 4C06                       u3831 4B84  
                     u3911 519E                       u3671 64B0                       u3591 6242  
                     u2951 6F9C                       u2871 6EB6                       u4711 7CFA  
                     u4631 7B5C                       u4551 781A                       u4471 772E  
                     u4391 7536                       u5351 5940                       u5271 587A  
                     u5191 57D6                       u5511 6C8E                       u5440 5764  
                     u5360 55E4                       u3760 4C26                       u3840 4A6E  
                     u3680 64CE                       u3920 4520                       u2960 700E  
                     u2880 6ECC                       u4800 7E98                       u4720 7D10  
                     u4640 7B72                       u4560 782C                       u4480 775A  
                     u5280 5898                       u5520 6DCE                       u5600 5DD6  
                     u5441 5760                       u5361 55E0                       u3761 4C22  
                     u3841 4A6A                       u3681 64CA                       u3921 451C  
                     u2961 700A                       u2881 6EC8                       u4721 7D0C  
                     u4641 7B6E                       u4561 7828                       u4481 7756  
                     u5281 5894                       u5521 6DCA                       u5601 5DD2  
                     u5450 5772                       u5370 55F2                       u3770 4C4C  
                     u3850 4AAC                       u3690 6516                       u2970 7026  
                     u2890 6EDC                       u3930 51C2                       u4810 7EAE  
                     u4730 7D20                       u4650 7B84                       u4570 7856  
                     u4490 7770                       u5290 58A6                       u5530 6DE8  
                     u5610 554A                       u5451 576E                       u5371 55EE  
                     u3771 4C48                       u3851 4AA8                       u3691 6512  
                     u2971 7020                       u2891 6ED8                       u3931 51BE  
                     u4811 7EAA                       u4731 7D1C                       u4651 7B80  
                     u4571 7852                       u4491 776C                       u5291 58A2  
                     u5531 6DE4                       u5611 5546                       u5380 564E  
                     u4820 52EA                       u3780 4AFC                       u3860 4AE0  
                     u2980 7028                       u3940 51F6                       u4740 7D56  
                     u4660 7B92                       u4580 799C                       u4900 4E4A  
                     u5540 6E1C                       u5460 4F6C                       u5620 5560  
                     u5381 564A                       u4821 52E6                       u3781 4AF8  
                     u3861 4ADC                       u4741 7D52                       u4661 7B8E  
                     u4581 7998                       u4901 4E46                       u5541 6E18  
                     u5461 4F68                       u5621 555C                       u5390 56A4  
                     u4830 5320                       u3790 4B16                       u3870 50D6  
                     u2990 7050                       u3950 5224                       u4750 7D84  
                     u4670 7BAC                       u4590 7A02                       u4910 4E66  
                     u5550 6E2E                       u5470 4FA8                       u5630 5584  
                     u5391 56A0                       u4831 531C                       u3791 4B12  
                     u3871 50D2                       u2991 704C                       u3951 5220  
                     u4751 7D80                       u4671 7BA8                       u4591 79FE  
                     u4911 4E62                       u5551 6E2A                       u5471 4FA4  
                     u5631 5580                       u4840 533C                       u3880 5114  
                     u3960 5238                       u4760 7E06                       u4680 7BBA  
                     u4920 4E78                       u5560 6E9E                       u5480 6A7C  
                     u5640 55A8                       u4841 5338                       u3881 5110  
                     u3961 5234                       u3945 51EC                       u4761 7E02  
                     u4681 7BB6                       u4921 4E74                       u5561 6E9A  
                     u5481 6A78                       u5641 55A4                       u4850 53F2  
                     u3890 5132                       u3970 5260                       u4770 7E20  
                     u4690 7C12                       u4930 4EA0                       u5490 6AFC  
                     u5570 5BEA                       u4851 53EC                       u3891 512E  
                     u3971 525C                       u4771 7E1C                       u4691 7C0E  
                     u4931 4E9C                       u5491 6AF8                       u5571 5BE6  
                     u4940 48A4                       u4860 53F4                       u3980 5280  
                     u4780 7E38                       u4941 48A0                       u3981 527C  
                     u4781 7E34                       u5581 5CEC                       u4950 48BC  
                     u4870 540A                       u3990 5290                       u4790 7E96  
                     u5590 5D3C                       u4951 48B8                       u4871 5406  
                     u3991 528C                       u4791 7E90                       u5591 5D38  
                     u4960 48E6                       u4880 541C                       u4961 48E2  
                     u4881 5418                       u4890 4E18                       u4970 65C0  
                     u4891 4E14                       u4971 65BC                       u4980 6608  
                     u4981 6604                       u4990 6642                       u4991 663E  
                     _dbuf 0100                       _atoi 52B2                       _main 5442  
                     _prec 00EC                       _nout 00E8                       pad@i 0018  
                     pad@p 0015                       fsr0h 000FEA                       fsr1h 000FE2  
                     indf0 000FEF                       fsr2h 000FDA                       fsr0l 000FE9  
                     indf2 000FDF                       fsr1l 000FE1                       pad@w 001A  
                     fsr2l 000FD9              ___fpclassifyf 4FAA            ??_encher_tanque 00A4  
                     prodh 000FF4                       prodl 000FF3                       start 0000  
          ___fldiv@new_exp 0012           encher_tanque@num 00CC           encher_tanque@opt 00C4  
         encher_tanque@tmp 00DA           encher_tanque@vol 007E               ___param_bank 000000  
    encher_tanque@potencia 00C8                      ??_pad 0017              ___fltol@sign1 0022  
                    ?_atoi 0008            __end_of___fladd 7360                      ?_main 0001  
          __end_of___fldiv 6172            __end_of___awdiv 4C5E            __end_of___flneg 4542  
                    STR_10 7F10                      STR_11 7FA7                      STR_12 7FE3  
                    STR_20 7F4C                      STR_21 7FA7                      STR_13 7FFB  
                    STR_30 7FFB                      STR_22 7FE3                      STR_14 7F90  
                    STR_23 7FFB                      STR_31 7F87                      STR_15 7FD2  
                    STR_40 7FF8                      STR_32 7FE8                      STR_16 7F76  
                    STR_24 7F3E                      STR_25 7FD2                      STR_33 7FF0  
                    STR_17 7F83                      STR_18 7F9C                      STR_26 7F76  
                    STR_42 7FF8                      STR_27 7F83                      STR_19 7FB2  
                    STR_28 7FE3                      STR_36 7FEC            __end_of___awmod 4B9A  
                    STR_37 7FF4                      STR_29 7FDB            __end_of___flmul 659C  
          __end_of___flsub 4604            __end_of___fltol 52B2            ___awdiv@divisor 0009  
 __size_of_esvaziar_tanque 0276            __end_of___lwdiv 49C8            ___awdiv@counter 000B  
             vfpfcnvrt@fmt 0074           esvaziar_tanque@i 00C9           esvaziar_tanque@y 00B8  
          __end_of_lcd_dat 449C            __end_of_lcd_cmd 4472            __end_of_lcd_str 4A40  
                    _flags 00EE                      _linha 7EFB                      _fputc 4D24  
                    _fputs 457A            __end_of_isdigit 450A                      atoi@n 0015  
                    pad@fp 0011                      atoi@s 0008                      _width 00EA  
                    _putch 43D2            __end_of_isspace 4656            __end_of_isupper 457A  
                    tablat 000FF5            __end_of_pwmSet1 4954            __end_of_pwmInit 43FA  
        encher_tanque@F355 0164                      plusw1 000FE3                      plusw2 000FDB  
                    status 000FD8            __end_of_sprintf 46A8             ?___fpclassifyf 0001  
          __end_of_tolower 47C0            __end_of_strncmp 4EC4            __initialization 4822  
             __end_of_atoi 5442               __end_of_main 55D2                     ??_atoi 000A  
                   ??_main 0080              __activetblptr 000002            tc_tecla@timeout 0007  
                   ?_fputc 0001                     ?_fputs 000A           ___awdiv@dividend 0007  
                   ?_putch 0001           __end_of___xxtofl 5786    encher_tanque@incremento 00D0  
   esvaziar_tanque@numeros 00A4               vfprintf@cfmt 007C           __end_of_lcd_init 4760  
                   ___flge 50A8                     ___fleq 4A40                  ??___fladd 0017  
                   ___wmul 43FA                  ??___fldiv 0009                  ??___awdiv 000B  
                ??___flneg 0005                  ??___awmod 0005                  ??___flmul 0009  
                ??___flsub 0027                  ??___fltol 001E                     _efgtoa 7360  
                ??___lwdiv 0005                     _lcd_wr 43D4                     _atraso 00F6  
                   _floorf 5950                     clear_0 4868                     clear_1 4874  
         ___awdiv@quotient 000D            ___awmod@divisor 0003            ___awmod@counter 0005  
                   pad@buf 0013                  ??_lcd_dat 0007                  ??_lcd_cmd 0007  
         __end_of_tc_tecla 5950                     _strcpy 46A8                     _strlen 449C  
                   _volume 00F2                  ??_lcd_str 000A                     fputc@c 0001  
                   fputs@c 000E                     fputs@i 000F                     fputs@s 000A  
                ??_isdigit 0003            ___fpclassifyf@e 0009            ___fpclassifyf@u 000B  
          ___fpclassifyf@x 0001               __mediumconst 7EFA                  ??_isspace 0003  
                   tblptrh 000FF7                  ??_isupper 0003                     tblptrl 000FF6  
                   tblptru 000FF8                  ??_pwmSet1 0008                  ??_pwmInit 0001  
                   putch@c 0001           __end_of_vfprintf 4822          ??_esvaziar_tanque 0080  
                ??_sprintf 007E                  ??_tolower 0009                  ??_strncmp 0007  
               ___flge@ff1 001F                 ___flge@ff2 0023            ??___fpclassifyf 0005  
             ___xxtofl@arg 000B         encher_tanque@i_150 00CA               ___xxtofl@exp 000A  
             ___xxtofl@val 0001                 ___fleq@ff1 0001                 ___fleq@ff2 0005  
               __accesstop 0080    __end_of__initialization 487A                 ___flneg@f1 0001  
            ___rparam_used 000001         encher_tanque@tempo 00D4                 ___fltol@f1 001A  
           __pcstackCOMRAM 0001               __pidataBANK0 43DC               __pidataBANK1 4420  
            __end_of_linha 7EFF              __end_of_fputc 4DEE              __end_of_fputs 45BE  
            __end_of_putch 43D4           ??_ver_quantidade 0080                    ??_fputc 0005  
                  ??_fputs 000E         __size_of_atraso_ms 0064                    ??_putch 0001  
               __pbssBANK0 00E0                 __pbssBANK1 0100                tc_tecla@ret 000C  
              tc_tecla@tmp 000B                 _efgtoa$762 003E                 _efgtoa$763 0040  
               _efgtoa$772 0044                 _efgtoa$773 0046                 _efgtoa$774 0048  
               _efgtoa$768 0042                    ?___flge 001F                    ?___fleq 0001  
                  ?___wmul 0001                    ?_efgtoa 002E                    ?_lcd_wr 0001  
                  ?_floorf 001A                    ?_strcpy 0001                    ?_strlen 0001  
                ?___xxtofl 0001         __size_of_vfpfcnvrt 046A                  ?_lcd_init 0001  
               _atraso_min 00F8         esvaziar_tanque@opt 00C2         esvaziar_tanque@tmp 00C4  
       esvaziar_tanque@vol 007E                  ?_tc_tecla 0007                    __Hparam 0000  
                  __Lparam 0000      __end_of_encher_tanque 6EA0            __size_of___flge 0104  
          __size_of___fleq 00AA                    ___fladd 6EA0                    ___fldiv 5DD8  
                  ___awdiv 4B9A                    ___flneg 450A                    ___awmod 4AEA  
                  ___flmul 6172                    ___flsub 45BE                    ___fltol 51AC  
          __size_of___wmul 0026                    ___lwdiv 4954                  ?_vfprintf 008C  
        __end_of_atraso_ms 48E8            __size_of_efgtoa 0B9A            __size_of_lcd_wr 0008  
          __size_of_floorf 0212                    __pcinit 4822                    __ramtop 0600  
                  __ptext0 5442                    __ptext1 4EC4                    __ptext2 4704  
                  __ptext3 5B62                    __ptext4 6A06                    __ptext5 5786  
                  __ptext6 4656                    __ptext7 47C0                    __ptext8 659C  
                  __ptext9 4DEE                    _lcd_dat 4472                    _lcd_cmd 4448  
                  _lcd_str 49C8            __size_of_strcpy 005C            __size_of_strlen 0036  
             __size_of_pad 00C6                    _isdigit 44D2                 ??___xxtofl 0005  
         ___awmod@dividend 0001                    _isspace 4604                    _isupper 4542  
                  efgtoa@c 0034                    efgtoa@d 0052                    efgtoa@e 006A  
                  efgtoa@f 0030                    efgtoa@g 0066                    efgtoa@h 005C  
                  efgtoa@i 0064                    efgtoa@l 0060                    efgtoa@m 004E  
                  efgtoa@n 006C                    efgtoa@p 0056                    efgtoa@t 004A  
                  efgtoa@u 006E                    efgtoa@w 0059                    _pwmSet1 48E8  
                  _pwmInit 43E6                    atoi@neg 000E                    _sprintf 4656  
                  _tolower 4760                    main@opt 00DE                    main@tmp 00DD  
               ??_lcd_init 0008                    _strncmp 4DEE       end_of_initialization 487A  
                  floorf@e 0028                    floorf@m 0024                    floorf@u 002A  
                  floorf@x 001A                    fputc@fp 0003              __Lmediumconst 7EFA  
                  fputs@fp 000C                 ??_tc_tecla 0009          __end_of_vfpfcnvrt 6A06  
               efgtoa@mode 005B                 efgtoa@sign 0054                    postdec1 000FE5  
                  postdec2 000FDD                    postinc0 000FEE                    postinc1 000FE6  
                  postinc2 000FDE                 ??_vfprintf 007C                    strcpy@d 0009  
                  strlen@a 0003                    strcpy@s 0007                    strlen@s 0001  
          _esvaziar_tanque 5B62                ___fladd@grs 001E              ___xxtofl@sign 0009  
               lcd_dat@val 0007                 lcd_cmd@val 0007                ___fldiv@grs 0014  
              ___fldiv@rem 000D                ___flmul@grs 000E                 lcd_str@str 0008  
           __end_of___flge 51AC             __end_of___fleq 4AEA                 atraso_ms@i 0003  
               atraso_ms@j 0005                 atraso_ms@k 0006                 atraso_ms@t 0001  
              vfpfcnvrt@ap 0076                vfpfcnvrt@ct 0088                vfpfcnvrt@fp 0072  
           __end_of___wmul 4420       esvaziar_tanque@tempo 00C0             __end_of_efgtoa 7EFA  
           __end_of_lcd_wr 43DC             __end_of_floorf 5B62                 floorf@F524 00E0  
           __end_of_strcpy 4704             __end_of_strlen 44D2        start_initialization 4822  
              __end_of_pad 4D24      __end_of___fpclassifyf 50A8                vfprintf@fmt 008E  
  __end_of_esvaziar_tanque 5DD8                   ??___flge 0027                   ??___fleq 0009  
                 ??___wmul 0005                   ??_efgtoa 0035                   ??_lcd_wr 0001  
              __pdataBANK0 00F6                __pdataBANK1 0150                   ??_floorf 001E  
                 ??_strcpy 0005                   ??_strlen 0003                  ___fladd@a 0013  
                ___fladd@b 000F                  ___fldiv@a 0005                  ___fldiv@b 0001  
                ___flmul@a 0005                  ___flmul@b 0001                  ___flsub@a 0023  
                ___flsub@b 001F              __pcstackBANK0 0080          __size_of___xxtofl 01B4  
        __size_of_lcd_init 005C                 tc_tecla@to 0009           ___lwdiv@dividend 0001  
        __size_of_tc_tecla 01CA              __pmediumconst 7EFA                   ?___fladd 000F  
                 ?___fldiv 0001                   ?___awdiv 0007                   ?___flneg 0001  
                 ?___awmod 0001                   ?___flmul 0001                   ?___flsub 001F  
                 ?___fltol 001A                   ?___lwdiv 0001                   ?_lcd_dat 0001  
                 ?_lcd_cmd 0001          __size_of_vfprintf 0062                   ?_lcd_str 0008  
                _atrasoMed 00FC                  _atrasoMax 00FA                  _atrasoMin 00FE  
                _atraso_ms 4884                   ?_isdigit 0001            ver_quantidade@i 00AF  
          ver_quantidade@y 00A4                   ?_isspace 0001                   ?_isupper 0001  
                 ?_pwmSet1 0001                   ?_pwmInit 0001           ___lwdiv@quotient 0005  
                 ?_sprintf 0092                   ?_tolower 0007    __size_of_ver_quantidade 00E6  
           __size_of_fputc 00CA             __size_of_fputs 0044                   ?_strncmp 0001  
           __size_of_putch 0002             ___wmul@product 0005           ?_esvaziar_tanque 007E  
               pwmSet1@val 000B                  _vfpfcnvrt 659C          ___wmul@multiplier 0001  
               ?_atraso_ms 0001                  lcd_wr@val 0001        esvaziar_tanque@F342 0150  
   __size_of_encher_tanque 049A                 vfpfcnvrt@c 008B                 vfpfcnvrt@f 0084  
                copy_data0 4836                  copy_data1 4856         _encher_tanque$1210 00C6  
        ver_quantidade@num 00AC          ver_quantidade@tmp 00AE          ver_quantidade@vol 007E  
                 __Hrparam 0000                 vfprintf@ap 0090                   __Lrparam 0000  
               vfprintf@fp 008C           __size_of___fladd 04C0           __size_of___fldiv 039A  
         __size_of___awdiv 00C4           __size_of___flneg 0038           __size_of___awmod 00B0  
         __size_of___flmul 042A           __size_of___flsub 0046           __size_of___fltol 0106  
               ?_vfpfcnvrt 0072           __size_of___lwdiv 0074            pwmSet1@porcento 000A  
       ___fpclassifyf@F463 00E4           __size_of_lcd_dat 002A           __size_of_lcd_cmd 002A  
               sprintf@fmt 0094           __size_of_lcd_str 0078                   ___xxtofl 55D2  
                 _atoi$826 0010                   _atoi$827 0014                   _atoi$828 0012  
                tc_tecla@i 000D           __size_of_isdigit 0038            ___lwdiv@divisor 0003  
         __size_of_isspace 0052            ___lwdiv@counter 0007                   __ptext10 7360  
                 __ptext11 4760                   __ptext20 4FAA                   __ptext12 4542  
                 __ptext21 51AC                   __ptext13 46A8                   __ptext30 4B9A  
                 __ptext22 45BE                   __ptext14 4C5E                   __ptext31 52B2  
                 __ptext23 6EA0                   __ptext15 449C                   __ptext40 4448  
                 __ptext32 4604                   __ptext24 450A                   __ptext16 457A  
                 __ptext41 43D4                   __ptext33 44D2                   __ptext25 6172  
                 __ptext17 4D24                   __ptext42 4884                   __ptext34 48E8  
                 __ptext26 50A8                   __ptext18 43D2                   __ptext43 55D2  
                 __ptext35 43FA                   __ptext27 4A40                   __ptext19 5950  
                 __ptext36 4954                   __ptext28 5DD8                   __ptext37 43E6  
                 __ptext29 4AEA                   __ptext38 49C8                   __ptext39 4472  
         __size_of_isupper 0038           __size_of_pwmSet1 006C           __size_of_pwmInit 0014  
                 _lcd_init 4704           __size_of_sprintf 0052           __size_of_tolower 0060  
               strcpy@dest 0001           __size_of_strncmp 00D6              __size_of_atoi 0190  
            __size_of_main 0190                   _tc_tecla 5786                   efgtoa@fp 002E  
                 efgtoa@ne 0050                   efgtoa@pp 004C                   efgtoa@ou 003A  
            _encher_tanque 6A06                   _vfprintf 47C0                   lcd_str@i 000C  
              _isspace$857 0007                ??_atraso_ms 0003                   isdigit@c 0001  
           _ver_quantidade 4EC4                  sprintf@ap 009C                   isspace@c 0001  
                strcpy@src 0003                   isupper@c 0001                  strncmp@_l 0001  
                strncmp@_r 0003             ?_encher_tanque 007E                efgtoa@nmode 0058  
              ??_vfpfcnvrt 0078              _vfpfcnvrt$792 0082              _vfpfcnvrt$788 0080  
                 sprintf@f 009E                   tolower@c 0007                   sprintf@s 0092  
   __size_of___fpclassifyf 00FE     __end_of_ver_quantidade 4FAA                   strncmp@l 0008  
                 strncmp@n 0005                   strncmp@r 000A              ___fladd@signs 001B  
             ___fladd@aexp 001C               ___fladd@bexp 001D  

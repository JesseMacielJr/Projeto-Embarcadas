

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Jul 05 15:05:56 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    64                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    65  0000                     
    66                           ; Version 2.20
    67                           ; Generated 12/02/2020 GMT
    68                           ; 
    69                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F4520 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100  0000                     
   101                           	psect	idataBANK0
   102  0045DE                     __pidataBANK0:
   103                           	callstack 0
   104                           
   105                           ;initializer for _atraso_min
   106  0045DE  0005               	dw	5
   107                           
   108                           ;initializer for _atrasoMax
   109  0045E0  03E8               	dw	1000
   110                           
   111                           ;initializer for _atrasoMed
   112  0045E2  01F4               	dw	500
   113                           
   114                           ;initializer for _atrasoMin
   115  0045E4  0014               	dw	20
   116                           
   117                           	psect	idataBANK1
   118  004526                     __pidataBANK1:
   119                           	callstack 0
   120                           
   121                           ;initializer for esvaziar_tanque@F356
   122  004526  003F               	dw	63
   123  004528  0006               	dw	6
   124  00452A  005B               	dw	91
   125  00452C  004F               	dw	79
   126  00452E  0066               	dw	102
   127  004530  006D               	dw	109
   128  004532  007D               	dw	125
   129  004534  0007               	dw	7
   130  004536  007F               	dw	127
   131  004538  006F               	dw	111
   132                           
   133                           ;initializer for encher_tanque@F356
   134  00453A  003F               	dw	63
   135  00453C  0006               	dw	6
   136  00453E  005B               	dw	91
   137  004540  004F               	dw	79
   138  004542  0066               	dw	102
   139  004544  006D               	dw	109
   140  004546  007D               	dw	125
   141  004548  0007               	dw	7
   142  00454A  007F               	dw	127
   143  00454C  006F               	dw	111
   144                           
   145                           ;initializer for _atraso
   146  00454E  000F               	dw	15
   147                           
   148                           	psect	smallconst
   149  000600                     __psmallconst:
   150                           	callstack 0
   151  000600  00                 	db	0
   152  000601                     _linha:
   153                           	callstack 0
   154  000601  01                 	db	1
   155  000602  02                 	db	2
   156  000603  04                 	db	4
   157  000604  00                 	db	0
   158  000605                     __end_of_linha:
   159                           	callstack 0
   160  000605                     STR_1:
   161  000605  41                 	db	65	;'A'
   162  000606  62                 	db	98	;'b'
   163  000607  61                 	db	97	;'a'
   164  000608  73                 	db	115	;'s'
   165  000609  74                 	db	116	;'t'
   166  00060A  65                 	db	101	;'e'
   167  00060B  63                 	db	99	;'c'
   168  00060C  69                 	db	105	;'i'
   169  00060D  6D                 	db	109	;'m'
   170  00060E  65                 	db	101	;'e'
   171  00060F  6E                 	db	110	;'n'
   172  000610  74                 	db	116	;'t'
   173  000611  6F                 	db	111	;'o'
   174  000612  20                 	db	32
   175  000613  64                 	db	100	;'d'
   176  000614  65                 	db	101	;'e'
   177  000615  00                 	db	0
   178  000616                     STR_10:
   179  000616  45                 	db	69	;'E'
   180  000617  52                 	db	82	;'R'
   181  000618  52                 	db	82	;'R'
   182  000619  4F                 	db	79	;'O'
   183  00061A  3A                 	db	58	;':'
   184  00061B  20                 	db	32
   185  00061C  76                 	db	118	;'v'
   186  00061D  6F                 	db	111	;'o'
   187  00061E  6C                 	db	108	;'l'
   188  00061F  20                 	db	32
   189  000620  3E                 	db	62	;'>'
   190  000621  20                 	db	32
   191  000622  4D                 	db	77	;'M'
   192  000623  41                 	db	65	;'A'
   193  000624  58                 	db	88	;'X'
   194  000625  00                 	db	0
   195  000626                     STR_5:
   196  000626  31                 	db	49	;'1'
   197  000627  2D                 	db	45
   198  000628  56                 	db	86	;'V'
   199  000629  65                 	db	101	;'e'
   200  00062A  72                 	db	114	;'r'
   201  00062B  20                 	db	32
   202  00062C  32                 	db	50	;'2'
   203  00062D  2D                 	db	45
   204  00062E  45                 	db	69	;'E'
   205  00062F  6E                 	db	110	;'n'
   206  000630  63                 	db	99	;'c'
   207  000631  68                 	db	104	;'h'
   208  000632  65                 	db	101	;'e'
   209  000633  72                 	db	114	;'r'
   210  000634  00                 	db	0
   211  000635                     STR_4:
   212  000635  56                 	db	86	;'V'
   213  000636  61                 	db	97	;'a'
   214  000637  7A                 	db	122	;'z'
   215  000638  61                 	db	97	;'a'
   216  000639  6F                 	db	111	;'o'
   217  00063A  3A                 	db	58	;':'
   218  00063B  20                 	db	32
   219  00063C  30                 	db	48	;'0'
   220  00063D  2E                 	db	46
   221  00063E  35                 	db	53	;'5'
   222  00063F  20                 	db	32
   223  000640  4C                 	db	76	;'L'
   224  000641  2F                 	db	47
   225  000642  73                 	db	115	;'s'
   226  000643  00                 	db	0
   227  000644                     STR_24:
   228  000644  45                 	db	69	;'E'
   229  000645  73                 	db	115	;'s'
   230  000646  76                 	db	118	;'v'
   231  000647  61                 	db	97	;'a'
   232  000648  7A                 	db	122	;'z'
   233  000649  69                 	db	105	;'i'
   234  00064A  61                 	db	97	;'a'
   235  00064B  6E                 	db	110	;'n'
   236  00064C  64                 	db	100	;'d'
   237  00064D  6F                 	db	111	;'o'
   238  00064E  2E                 	db	46
   239  00064F  2E                 	db	46
   240  000650  2E                 	db	46
   241  000651  00                 	db	0
   242  000652                     STR_20:
   243  000652  45                 	db	69	;'E'
   244  000653  52                 	db	82	;'R'
   245  000654  52                 	db	82	;'R'
   246  000655  4F                 	db	79	;'O'
   247  000656  3A                 	db	58	;':'
   248  000657  20                 	db	32
   249  000658  76                 	db	118	;'v'
   250  000659  6F                 	db	111	;'o'
   251  00065A  6C                 	db	108	;'l'
   252  00065B  20                 	db	32
   253  00065C  3C                 	db	60	;'<'
   254  00065D  20                 	db	32
   255  00065E  30                 	db	48	;'0'
   256  00065F  00                 	db	0
   257  000660                     STR_17:
   258  000660  20                 	db	32
   259  000661  20                 	db	32
   260  000662  20                 	db	32
   261  000663  23                 	db	35
   262  000664  20                 	db	32
   263  000665  2D                 	db	45
   264  000666  20                 	db	32
   265  000667  56                 	db	86	;'V'
   266  000668  6F                 	db	111	;'o'
   267  000669  6C                 	db	108	;'l'
   268  00066A  74                 	db	116	;'t'
   269  00066B  61                 	db	97	;'a'
   270  00066C  72                 	db	114	;'r'
   271  00066D  00                 	db	0
   272  00066E                     STR_7:
   273  00066E  20                 	db	32
   274  00066F  20                 	db	32
   275  000670  20                 	db	32
   276  000671  20                 	db	32
   277  000672  49                 	db	73	;'I'
   278  000673  4E                 	db	78	;'N'
   279  000674  56                 	db	86	;'V'
   280  000675  41                 	db	65	;'A'
   281  000676  4C                 	db	76	;'L'
   282  000677  49                 	db	73	;'I'
   283  000678  44                 	db	68	;'D'
   284  000679  4F                 	db	79	;'O'
   285  00067A  21                 	db	33
   286  00067B  00                 	db	0
   287  00067C                     STR_3:
   288  00067C  56                 	db	86	;'V'
   289  00067D  6F                 	db	111	;'o'
   290  00067E  6C                 	db	108	;'l'
   291  00067F  20                 	db	32
   292  000680  6D                 	db	109	;'m'
   293  000681  61                 	db	97	;'a'
   294  000682  78                 	db	120	;'x'
   295  000683  20                 	db	32
   296  000684  3D                 	db	61	;'='
   297  000685  20                 	db	32
   298  000686  37                 	db	55	;'7'
   299  000687  30                 	db	48	;'0'
   300  000688  4C                 	db	76	;'L'
   301  000689  00                 	db	0
   302  00068A                     STR_16:
   303  00068A  20                 	db	32
   304  00068B  20                 	db	32
   305  00068C  20                 	db	32
   306  00068D  20                 	db	32
   307  00068E  53                 	db	83	;'S'
   308  00068F  55                 	db	85	;'U'
   309  000690  43                 	db	67	;'C'
   310  000691  45                 	db	69	;'E'
   311  000692  53                 	db	83	;'S'
   312  000693  53                 	db	83	;'S'
   313  000694  4F                 	db	79	;'O'
   314  000695  21                 	db	33
   315  000696  00                 	db	0
   316  000697                     STR_14:
   317  000697  45                 	db	69	;'E'
   318  000698  6E                 	db	110	;'n'
   319  000699  63                 	db	99	;'c'
   320  00069A  68                 	db	104	;'h'
   321  00069B  65                 	db	101	;'e'
   322  00069C  6E                 	db	110	;'n'
   323  00069D  64                 	db	100	;'d'
   324  00069E  6F                 	db	111	;'o'
   325  00069F  2E                 	db	46
   326  0006A0  2E                 	db	46
   327  0006A1  2E                 	db	46
   328  0006A2  00                 	db	0
   329  0006A3                     STR_8:
   330  0006A3  51                 	db	81	;'Q'
   331  0006A4  75                 	db	117	;'u'
   332  0006A5  61                 	db	97	;'a'
   333  0006A6  6E                 	db	110	;'n'
   334  0006A7  74                 	db	116	;'t'
   335  0006A8  28                 	db	40
   336  0006A9  4C                 	db	76	;'L'
   337  0006AA  29                 	db	41
   338  0006AB  3A                 	db	58	;':'
   339  0006AC  20                 	db	32
   340  0006AD  00                 	db	0
   341  0006AE                     STR_2:
   342  0006AE  20                 	db	32
   343  0006AF  20                 	db	32
   344  0006B0  20                 	db	32
   345  0006B1  20                 	db	32
   346  0006B2  20                 	db	32
   347  0006B3  20                 	db	32
   348  0006B4  61                 	db	97	;'a'
   349  0006B5  67                 	db	103	;'g'
   350  0006B6  75                 	db	117	;'u'
   351  0006B7  61                 	db	97	;'a'
   352  0006B8  00                 	db	0
   353  0006B9                     STR_6:
   354  0006B9  33                 	db	51	;'3'
   355  0006BA  2D                 	db	45
   356  0006BB  52                 	db	82	;'R'
   357  0006BC  65                 	db	101	;'e'
   358  0006BD  74                 	db	116	;'t'
   359  0006BE  69                 	db	105	;'i'
   360  0006BF  72                 	db	114	;'r'
   361  0006C0  61                 	db	97	;'a'
   362  0006C1  72                 	db	114	;'r'
   363  0006C2  00                 	db	0
   364  0006C3                     STR_15:
   365  0006C3  41                 	db	65	;'A'
   366  0006C4  67                 	db	103	;'g'
   367  0006C5  75                 	db	117	;'u'
   368  0006C6  61                 	db	97	;'a'
   369  0006C7  72                 	db	114	;'r'
   370  0006C8  64                 	db	100	;'d'
   371  0006C9  65                 	db	101	;'e'
   372  0006CA  21                 	db	33
   373  0006CB  00                 	db	0
   374  0006CC                     STR_29:
   375  0006CC  41                 	db	65	;'A'
   376  0006CD  74                 	db	116	;'t'
   377  0006CE  75                 	db	117	;'u'
   378  0006CF  61                 	db	97	;'a'
   379  0006D0  6C                 	db	108	;'l'
   380  0006D1  3A                 	db	58	;':'
   381  0006D2  20                 	db	32
   382  0006D3  00                 	db	0
   383  0006D4                     STR_12:
   384  0006D4  25                 	db	37
   385  0006D5  2E                 	db	46
   386  0006D6  31                 	db	49	;'1'
   387  0006D7  66                 	db	102	;'f'
   388  0006D8  00                 	db	0
   389  0006D9                     STR_32:
   390  0006D9  49                 	db	73	;'I'
   391  0006DA  4E                 	db	78	;'N'
   392  0006DB  46                 	db	70	;'F'
   393  0006DC  00                 	db	0
   394  0006DD                     STR_36:
   395  0006DD  4E                 	db	78	;'N'
   396  0006DE  41                 	db	65	;'A'
   397  0006DF  4E                 	db	78	;'N'
   398  0006E0  00                 	db	0
   399  0006E1                     STR_33:
   400  0006E1  69                 	db	105	;'i'
   401  0006E2  6E                 	db	110	;'n'
   402  0006E3  66                 	db	102	;'f'
   403  0006E4  00                 	db	0
   404  0006E5                     STR_37:
   405  0006E5  6E                 	db	110	;'n'
   406  0006E6  61                 	db	97	;'a'
   407  0006E7  6E                 	db	110	;'n'
   408  0006E8  00                 	db	0
   409  0006E9                     STR_40:
   410  0006E9  6C                 	db	108	;'l'
   411  0006EA  66                 	db	102	;'f'
   412  0006EB  00                 	db	0
   413  0006EC                     STR_13:
   414  0006EC  20                 	db	32
   415  0006ED  4C                 	db	76	;'L'
   416  0006EE  00                 	db	0
   417  0006EF  00                 	db	0	; dummy byte at the end
   418  0000                     
   419                           ; #config settings
   420                           
   421                           	psect	cinit
   422  00413E                     __pcinit:
   423                           	callstack 0
   424  00413E                     start_initialization:
   425                           	callstack 0
   426  00413E                     __initialization:
   427                           	callstack 0
   428                           
   429                           ; Initialize objects allocated to BANK1 (42 bytes)
   430                           ; load TBLPTR registers with __pidataBANK1
   431  00413E  0E26               	movlw	low __pidataBANK1
   432  004140  6EF6               	movwf	tblptrl,c
   433  004142  0E45               	movlw	high __pidataBANK1
   434  004144  6EF7               	movwf	tblptrh,c
   435  004146  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   436  004148  6EF8               	movwf	tblptru,c
   437  00414A  EE01  F08B         	lfsr	0,__pdataBANK1
   438  00414E  EE10 F02A          	lfsr	1,42
   439  004152                     copy_data0:
   440  004152  0009               	tblrd		*+
   441  004154  CFF5 FFEE          	movff	tablat,postinc0
   442  004158  50E5               	movf	postdec1,w,c
   443  00415A  50E1               	movf	fsr1l,w,c
   444  00415C  E1FA               	bnz	copy_data0
   445                           
   446                           ; Initialize objects allocated to BANK0 (8 bytes)
   447                           ; load TBLPTR registers with __pidataBANK0
   448  00415E  0EDE               	movlw	low __pidataBANK0
   449  004160  6EF6               	movwf	tblptrl,c
   450  004162  0E45               	movlw	high __pidataBANK0
   451  004164  6EF7               	movwf	tblptrh,c
   452  004166  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   453  004168  6EF8               	movwf	tblptru,c
   454  00416A  EE00  F0F8         	lfsr	0,__pdataBANK0
   455  00416E  EE10 F008          	lfsr	1,8
   456  004172                     copy_data1:
   457  004172  0009               	tblrd		*+
   458  004174  CFF5 FFEE          	movff	tablat,postinc0
   459  004178  50E5               	movf	postdec1,w,c
   460  00417A  50E1               	movf	fsr1l,w,c
   461  00417C  E1FA               	bnz	copy_data1
   462                           
   463                           ; Clear objects allocated to BANK1 (88 bytes)
   464  00417E  EE01  F000         	lfsr	0,__pbssBANK1
   465  004182  0E58               	movlw	88
   466  004184                     clear_0:
   467  004184  6AEE               	clrf	postinc0,c
   468  004186  06E8               	decf	wreg,f,c
   469  004188  E1FD               	bnz	clear_0
   470                           
   471                           ; Clear objects allocated to BANK0 (14 bytes)
   472  00418A  EE00  F0EA         	lfsr	0,__pbssBANK0
   473  00418E  0E0E               	movlw	14
   474  004190                     clear_1:
   475  004190  6AEE               	clrf	postinc0,c
   476  004192  06E8               	decf	wreg,f,c
   477  004194  E1FD               	bnz	clear_1
   478  004196                     end_of_initialization:
   479                           	callstack 0
   480  004196                     __end_of__initialization:
   481                           	callstack 0
   482  004196  0E00               	movlw	low (__Lmediumconst shr (0+16))
   483  004198  6EF8               	movwf	tblptru,c
   484  00419A  0100               	movlb	0
   485  00419C  EFA7  F01A         	goto	_main	;jump to C main() function
   486                           
   487                           	psect	bssBANK0
   488  0000EA                     __pbssBANK0:
   489                           	callstack 0
   490  0000EA                     _nout:
   491                           	callstack 0
   492  0000EA                     	ds	2
   493  0000EC                     _width:
   494                           	callstack 0
   495  0000EC                     	ds	2
   496  0000EE                     _prec:
   497                           	callstack 0
   498  0000EE                     	ds	2
   499  0000F0                     _flags:
   500                           	callstack 0
   501  0000F0                     	ds	2
   502  0000F2                     _i:
   503                           	callstack 0
   504  0000F2                     	ds	2
   505  0000F4                     _volume:
   506                           	callstack 0
   507  0000F4                     	ds	4
   508                           
   509                           	psect	dataBANK0
   510  0000F8                     __pdataBANK0:
   511                           	callstack 0
   512  0000F8                     _atraso_min:
   513                           	callstack 0
   514  0000F8                     	ds	2
   515  0000FA                     _atrasoMax:
   516                           	callstack 0
   517  0000FA                     	ds	2
   518  0000FC                     _atrasoMed:
   519                           	callstack 0
   520  0000FC                     	ds	2
   521  0000FE                     _atrasoMin:
   522                           	callstack 0
   523  0000FE                     	ds	2
   524                           
   525                           	psect	bssBANK1
   526  000100                     __pbssBANK1:
   527                           	callstack 0
   528  000100                     floorf@F524:
   529                           	callstack 0
   530  000100                     	ds	4
   531  000104                     ___fpclassifyf@F463:
   532                           	callstack 0
   533  000104                     	ds	4
   534  000108                     _dbuf:
   535                           	callstack 0
   536  000108                     	ds	80
   537                           
   538                           	psect	dataBANK1
   539  00018B                     __pdataBANK1:
   540                           	callstack 0
   541  00018B                     esvaziar_tanque@F356:
   542                           	callstack 0
   543  00018B                     	ds	20
   544  00019F                     encher_tanque@F356:
   545                           	callstack 0
   546  00019F                     	ds	20
   547  0001B3                     _atraso:
   548                           	callstack 0
   549  0001B3                     	ds	2
   550                           
   551                           	psect	cstackBANK1
   552  000158                     __pcstackBANK1:
   553                           	callstack 0
   554  000158                     encher_tanque@numeros:
   555                           	callstack 0
   556  000158                     esvaziar_tanque@numeros:
   557                           	callstack 0
   558                           
   559                           ; 20 bytes @ 0x0
   560  000158                     	ds	20
   561  00016C                     encher_tanque@y:
   562                           	callstack 0
   563  00016C                     esvaziar_tanque@y:
   564                           	callstack 0
   565                           
   566                           ; 8 bytes @ 0x14
   567  00016C                     	ds	8
   568  000174                     encher_tanque@porcento:
   569                           	callstack 0
   570  000174                     esvaziar_tanque@porcento:
   571                           	callstack 0
   572                           
   573                           ; 4 bytes @ 0x1C
   574  000174                     	ds	4
   575  000178                     encher_tanque@i_146:
   576                           	callstack 0
   577  000178                     esvaziar_tanque@i_181:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x20
   581  000178                     	ds	2
   582  00017A                     encher_tanque@num:
   583                           	callstack 0
   584  00017A                     esvaziar_tanque@num:
   585                           	callstack 0
   586                           
   587                           ; 4 bytes @ 0x22
   588  00017A                     	ds	4
   589  00017E                     encher_tanque@potencia:
   590                           	callstack 0
   591  00017E                     esvaziar_tanque@potencia:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x26
   595  00017E                     	ds	2
   596  000180                     encher_tanque@incremento:
   597                           	callstack 0
   598  000180                     esvaziar_tanque@decremento:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x28
   602  000180                     	ds	2
   603  000182                     encher_tanque@tempo:
   604                           	callstack 0
   605  000182                     esvaziar_tanque@tempo:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x2A
   609  000182                     	ds	2
   610  000184                     encher_tanque@t1:
   611                           	callstack 0
   612  000184                     esvaziar_tanque@t1:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x2C
   616  000184                     	ds	2
   617  000186                     encher_tanque@i:
   618                           	callstack 0
   619  000186                     esvaziar_tanque@i:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x2E
   623  000186                     	ds	2
   624  000188                     encher_tanque@t2:
   625                           	callstack 0
   626  000188                     esvaziar_tanque@t2:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x30
   630  000188                     	ds	2
   631  00018A                     encher_tanque@tmp:
   632                           	callstack 0
   633  00018A                     esvaziar_tanque@tmp:
   634                           	callstack 0
   635                           
   636                           ; 1 bytes @ 0x32
   637  00018A                     	ds	1
   638                           
   639                           	psect	cstackBANK0
   640  000080                     __pcstackBANK0:
   641                           	callstack 0
   642  000080                     efgtoa@ou:
   643                           	callstack 0
   644                           
   645                           ; 4 bytes @ 0x0
   646  000080                     	ds	4
   647  000084                     _efgtoa$768:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x4
   651  000084                     	ds	2
   652  000086                     _efgtoa$769:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x6
   656  000086                     	ds	2
   657  000088                     _efgtoa$774:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x8
   661  000088                     	ds	2
   662  00008A                     _efgtoa$778:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0xA
   666  00008A                     	ds	2
   667  00008C                     _efgtoa$779:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0xC
   671  00008C                     	ds	2
   672  00008E                     _efgtoa$780:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0xE
   676  00008E                     	ds	2
   677  000090                     efgtoa@t:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x10
   681  000090                     	ds	2
   682  000092                     efgtoa@pp:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x12
   686  000092                     	ds	2
   687  000094                     efgtoa@m:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x14
   691  000094                     	ds	2
   692  000096                     efgtoa@ne:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x16
   696  000096                     	ds	2
   697  000098                     efgtoa@d:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x18
   701  000098                     	ds	2
   702  00009A                     efgtoa@sign:
   703                           	callstack 0
   704                           
   705                           ; 2 bytes @ 0x1A
   706  00009A                     	ds	2
   707  00009C                     efgtoa@p:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0x1C
   711  00009C                     	ds	2
   712  00009E                     efgtoa@nmode:
   713                           	callstack 0
   714                           
   715                           ; 1 bytes @ 0x1E
   716  00009E                     	ds	1
   717  00009F                     efgtoa@w:
   718                           	callstack 0
   719                           
   720                           ; 2 bytes @ 0x1F
   721  00009F                     	ds	2
   722  0000A1                     efgtoa@mode:
   723                           	callstack 0
   724                           
   725                           ; 1 bytes @ 0x21
   726  0000A1                     	ds	1
   727  0000A2                     efgtoa@h:
   728                           	callstack 0
   729                           
   730                           ; 4 bytes @ 0x22
   731  0000A2                     	ds	4
   732  0000A6                     efgtoa@l:
   733                           	callstack 0
   734                           
   735                           ; 4 bytes @ 0x26
   736  0000A6                     	ds	4
   737  0000AA                     efgtoa@i:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x2A
   741  0000AA                     	ds	2
   742  0000AC                     efgtoa@g:
   743                           	callstack 0
   744                           
   745                           ; 4 bytes @ 0x2C
   746  0000AC                     	ds	4
   747  0000B0                     efgtoa@e:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x30
   751  0000B0                     	ds	2
   752  0000B2                     efgtoa@n:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x32
   756  0000B2                     	ds	2
   757  0000B4                     efgtoa@u:
   758                           	callstack 0
   759                           
   760                           ; 4 bytes @ 0x34
   761  0000B4                     	ds	4
   762  0000B8                     _vfpfcnvrt$794:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0x38
   766  0000B8                     	ds	2
   767  0000BA                     _vfpfcnvrt$798:
   768                           	callstack 0
   769                           
   770                           ; 2 bytes @ 0x3A
   771  0000BA                     	ds	2
   772  0000BC                     vfpfcnvrt@f:
   773                           	callstack 0
   774                           
   775                           ; 4 bytes @ 0x3C
   776  0000BC                     	ds	4
   777  0000C0                     vfpfcnvrt@ct:
   778                           	callstack 0
   779                           
   780                           ; 3 bytes @ 0x40
   781  0000C0                     	ds	3
   782  0000C3                     vfpfcnvrt@c:
   783                           	callstack 0
   784                           
   785                           ; 1 bytes @ 0x43
   786  0000C3                     	ds	1
   787  0000C4                     ?_vfprintf:
   788                           	callstack 0
   789  0000C4                     vfprintf@fp:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x44
   793  0000C4                     	ds	2
   794  0000C6                     vfprintf@fmt:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0x46
   798  0000C6                     	ds	2
   799  0000C8                     vfprintf@ap:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x48
   803  0000C8                     	ds	2
   804  0000CA                     ?_sprintf:
   805                           	callstack 0
   806  0000CA                     sprintf@s:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0x4A
   810  0000CA                     	ds	2
   811  0000CC                     sprintf@fmt:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x4C
   815  0000CC                     	ds	8
   816  0000D4                     sprintf@ap:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x54
   820  0000D4                     	ds	2
   821  0000D6                     sprintf@f:
   822                           	callstack 0
   823                           
   824                           ; 6 bytes @ 0x56
   825  0000D6                     	ds	6
   826  0000DC                     ??_encher_tanque:
   827  0000DC                     ??_esvaziar_tanque:
   828  0000DC                     ver_quantidade@y:
   829                           	callstack 0
   830                           
   831                           ; 8 bytes @ 0x5C
   832  0000DC                     	ds	8
   833  0000E4                     ver_quantidade@tmp:
   834                           	callstack 0
   835                           
   836                           ; 1 bytes @ 0x64
   837  0000E4                     	ds	1
   838  0000E5                     ver_quantidade@i:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0x65
   842  0000E5                     	ds	2
   843  0000E7                     main@tmp:
   844                           	callstack 0
   845                           
   846                           ; 1 bytes @ 0x67
   847  0000E7                     	ds	1
   848  0000E8                     main@opt:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x68
   852  0000E8                     	ds	2
   853                           
   854                           	psect	cstackCOMRAM
   855  000001                     __pcstackCOMRAM:
   856                           	callstack 0
   857  000001                     ?_strlen:
   858                           	callstack 0
   859  000001                     ?___fpclassifyf:
   860                           	callstack 0
   861  000001                     ?_isupper:
   862                           	callstack 0
   863  000001                     ?_isdigit:
   864                           	callstack 0
   865  000001                     ?_strncmp:
   866                           	callstack 0
   867  000001                     ?_isspace:
   868                           	callstack 0
   869  000001                     ?___wmul:
   870                           	callstack 0
   871  000001                     ?___awdiv:
   872                           	callstack 0
   873  000001                     ?___awmod:
   874                           	callstack 0
   875  000001                     ?___lwdiv:
   876                           	callstack 0
   877  000001                     ?___lwmod:
   878                           	callstack 0
   879  000001                     ?___flneg:
   880                           	callstack 0
   881  000001                     ?___xxtofl:
   882                           	callstack 0
   883  000001                     lcd_wr@val:
   884                           	callstack 0
   885  000001                     atraso_ms@t:
   886                           	callstack 0
   887  000001                     ___wmul@multiplier:
   888                           	callstack 0
   889  000001                     ___awdiv@dividend:
   890                           	callstack 0
   891  000001                     ___awmod@dividend:
   892                           	callstack 0
   893  000001                     ___lwdiv@dividend:
   894                           	callstack 0
   895  000001                     ___lwmod@dividend:
   896                           	callstack 0
   897  000001                     isdigit@c:
   898                           	callstack 0
   899  000001                     isspace@c:
   900                           	callstack 0
   901  000001                     isupper@c:
   902                           	callstack 0
   903  000001                     fputc@c:
   904                           	callstack 0
   905  000001                     strcpy@dest:
   906                           	callstack 0
   907  000001                     strlen@s:
   908                           	callstack 0
   909  000001                     strncmp@_l:
   910                           	callstack 0
   911  000001                     ___fleq@ff1:
   912                           	callstack 0
   913  000001                     ___flneg@f1:
   914                           	callstack 0
   915  000001                     ___xxtofl@val:
   916                           	callstack 0
   917  000001                     ___fpclassifyf@x:
   918                           	callstack 0
   919                           
   920                           ; 4 bytes @ 0x0
   921  000001                     	ds	2
   922  000003                     ??_isupper:
   923  000003                     ??_isdigit:
   924  000003                     ??_isspace:
   925  000003                     atraso_ms@i:
   926                           	callstack 0
   927  000003                     ___wmul@multiplicand:
   928                           	callstack 0
   929  000003                     ___awdiv@divisor:
   930                           	callstack 0
   931  000003                     ___awmod@divisor:
   932                           	callstack 0
   933  000003                     ___lwdiv@divisor:
   934                           	callstack 0
   935  000003                     ___lwmod@divisor:
   936                           	callstack 0
   937  000003                     fputc@fp:
   938                           	callstack 0
   939  000003                     strcpy@src:
   940                           	callstack 0
   941  000003                     strlen@a:
   942                           	callstack 0
   943  000003                     strncmp@_r:
   944                           	callstack 0
   945                           
   946                           ; 2 bytes @ 0x2
   947  000003                     	ds	2
   948  000005                     ??_fputc:
   949  000005                     ??___fpclassifyf:
   950  000005                     ??_strcpy:
   951  000005                     ??___xxtofl:
   952  000005                     atraso_ms@j:
   953                           	callstack 0
   954  000005                     ___awdiv@counter:
   955                           	callstack 0
   956  000005                     ___awmod@counter:
   957                           	callstack 0
   958  000005                     ___lwmod@counter:
   959                           	callstack 0
   960  000005                     ___wmul@product:
   961                           	callstack 0
   962  000005                     ___lwdiv@quotient:
   963                           	callstack 0
   964  000005                     strncmp@n:
   965                           	callstack 0
   966  000005                     ___fleq@ff2:
   967                           	callstack 0
   968                           
   969                           ; 4 bytes @ 0x4
   970  000005                     	ds	1
   971  000006                     atraso_ms@k:
   972                           	callstack 0
   973  000006                     ___awdiv@sign:
   974                           	callstack 0
   975  000006                     ___awmod@sign:
   976                           	callstack 0
   977                           
   978                           ; 1 bytes @ 0x5
   979  000006                     	ds	1
   980  000007                     ??_strncmp:
   981  000007                     ?_tolower:
   982                           	callstack 0
   983  000007                     lcd_cmd@val:
   984                           	callstack 0
   985  000007                     lcd_dat@val:
   986                           	callstack 0
   987  000007                     ___lwdiv@counter:
   988                           	callstack 0
   989  000007                     _isspace$863:
   990                           	callstack 0
   991  000007                     tc_tecla@timeout:
   992                           	callstack 0
   993  000007                     ___awdiv@quotient:
   994                           	callstack 0
   995  000007                     strcpy@s:
   996                           	callstack 0
   997  000007                     tolower@c:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0x6
  1001  000007                     	ds	1
  1002  000008                     ??_pwmSet1:
  1003  000008                     ?_atoi:
  1004                           	callstack 0
  1005  000008                     lcd_str@str:
  1006                           	callstack 0
  1007  000008                     atoi@s:
  1008                           	callstack 0
  1009  000008                     strncmp@l:
  1010                           	callstack 0
  1011                           
  1012                           ; 2 bytes @ 0x7
  1013  000008                     	ds	1
  1014  000009                     ??_tolower:
  1015  000009                     ??___fleq:
  1016  000009                     ___xxtofl@sign:
  1017                           	callstack 0
  1018  000009                     tc_tecla@to:
  1019                           	callstack 0
  1020  000009                     ___fpclassifyf@e:
  1021                           	callstack 0
  1022  000009                     strcpy@d:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x8
  1026  000009                     	ds	1
  1027  00000A                     ??_lcd_str:
  1028  00000A                     ??_atoi:
  1029  00000A                     pwmSet1@porcento:
  1030                           	callstack 0
  1031  00000A                     ___xxtofl@exp:
  1032                           	callstack 0
  1033  00000A                     fputs@s:
  1034                           	callstack 0
  1035  00000A                     strncmp@r:
  1036                           	callstack 0
  1037                           
  1038                           ; 2 bytes @ 0x9
  1039  00000A                     	ds	1
  1040  00000B                     tc_tecla@tmp:
  1041                           	callstack 0
  1042  00000B                     pwmSet1@val:
  1043                           	callstack 0
  1044  00000B                     ___xxtofl@arg:
  1045                           	callstack 0
  1046  00000B                     ___fpclassifyf@u:
  1047                           	callstack 0
  1048                           
  1049                           ; 4 bytes @ 0xA
  1050  00000B                     	ds	1
  1051  00000C                     tc_tecla@ret:
  1052                           	callstack 0
  1053  00000C                     lcd_str@i:
  1054                           	callstack 0
  1055  00000C                     fputs@fp:
  1056                           	callstack 0
  1057                           
  1058                           ; 2 bytes @ 0xB
  1059  00000C                     	ds	1
  1060  00000D                     tc_tecla@i:
  1061                           	callstack 0
  1062  00000D                     _tolower$927:
  1063                           	callstack 0
  1064                           
  1065                           ; 2 bytes @ 0xC
  1066  00000D                     	ds	1
  1067  00000E                     fputs@c:
  1068                           	callstack 0
  1069  00000E                     atoi@neg:
  1070                           	callstack 0
  1071                           
  1072                           ; 2 bytes @ 0xD
  1073  00000E                     	ds	1
  1074  00000F                     ?___flmul:
  1075                           	callstack 0
  1076  00000F                     fputs@i:
  1077                           	callstack 0
  1078  00000F                     ___flmul@b:
  1079                           	callstack 0
  1080                           
  1081                           ; 4 bytes @ 0xE
  1082  00000F                     	ds	1
  1083  000010                     _atoi$832:
  1084                           	callstack 0
  1085                           
  1086                           ; 2 bytes @ 0xF
  1087  000010                     	ds	1
  1088  000011                     ?_pad:
  1089                           	callstack 0
  1090  000011                     pad@fp:
  1091                           	callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x10
  1094  000011                     	ds	1
  1095  000012                     _atoi$834:
  1096                           	callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x11
  1099  000012                     	ds	1
  1100  000013                     pad@buf:
  1101                           	callstack 0
  1102  000013                     ___flmul@a:
  1103                           	callstack 0
  1104                           
  1105                           ; 4 bytes @ 0x12
  1106  000013                     	ds	1
  1107  000014                     _atoi$833:
  1108                           	callstack 0
  1109                           
  1110                           ; 1 bytes @ 0x13
  1111  000014                     	ds	1
  1112  000015                     pad@p:
  1113                           	callstack 0
  1114  000015                     atoi@n:
  1115                           	callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x14
  1118  000015                     	ds	2
  1119  000017                     ??___flmul:
  1120  000017                     ??_pad:
  1121                           
  1122                           ; 1 bytes @ 0x16
  1123  000017                     	ds	1
  1124  000018                     pad@i:
  1125                           	callstack 0
  1126                           
  1127                           ; 2 bytes @ 0x17
  1128  000018                     	ds	2
  1129  00001A                     pad@w:
  1130                           	callstack 0
  1131                           
  1132                           ; 2 bytes @ 0x19
  1133  00001A                     	ds	1
  1134  00001B                     ___flmul@sign:
  1135                           	callstack 0
  1136                           
  1137                           ; 1 bytes @ 0x1A
  1138  00001B                     	ds	1
  1139  00001C                     ___flmul@grs:
  1140                           	callstack 0
  1141                           
  1142                           ; 4 bytes @ 0x1B
  1143  00001C                     	ds	4
  1144  000020                     ___flmul@aexp:
  1145                           	callstack 0
  1146                           
  1147                           ; 1 bytes @ 0x1F
  1148  000020                     	ds	1
  1149  000021                     ___flmul@bexp:
  1150                           	callstack 0
  1151                           
  1152                           ; 1 bytes @ 0x20
  1153  000021                     	ds	1
  1154  000022                     ___flmul@prod:
  1155                           	callstack 0
  1156                           
  1157                           ; 4 bytes @ 0x21
  1158  000022                     	ds	4
  1159  000026                     ___flmul@temp:
  1160                           	callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x25
  1163  000026                     	ds	2
  1164  000028                     ?___fladd:
  1165                           	callstack 0
  1166  000028                     ?___fltol:
  1167                           	callstack 0
  1168  000028                     ___fltol@f1:
  1169                           	callstack 0
  1170  000028                     ___fladd@b:
  1171                           	callstack 0
  1172                           
  1173                           ; 4 bytes @ 0x27
  1174  000028                     	ds	4
  1175  00002C                     ??___fltol:
  1176  00002C                     ___fladd@a:
  1177                           	callstack 0
  1178                           
  1179                           ; 4 bytes @ 0x2B
  1180  00002C                     	ds	4
  1181  000030                     ??___fladd:
  1182  000030                     ___fltol@sign1:
  1183                           	callstack 0
  1184                           
  1185                           ; 1 bytes @ 0x2F
  1186  000030                     	ds	1
  1187  000031                     ___fltol@exp1:
  1188                           	callstack 0
  1189                           
  1190                           ; 1 bytes @ 0x30
  1191  000031                     	ds	3
  1192  000034                     ___fladd@signs:
  1193                           	callstack 0
  1194                           
  1195                           ; 1 bytes @ 0x33
  1196  000034                     	ds	1
  1197  000035                     ___fladd@aexp:
  1198                           	callstack 0
  1199                           
  1200                           ; 1 bytes @ 0x34
  1201  000035                     	ds	1
  1202  000036                     ___fladd@bexp:
  1203                           	callstack 0
  1204                           
  1205                           ; 1 bytes @ 0x35
  1206  000036                     	ds	1
  1207  000037                     ___fladd@grs:
  1208                           	callstack 0
  1209                           
  1210                           ; 1 bytes @ 0x36
  1211  000037                     	ds	1
  1212  000038                     ?___fldiv:
  1213                           	callstack 0
  1214  000038                     ?___flsub:
  1215                           	callstack 0
  1216  000038                     ___flge@ff1:
  1217                           	callstack 0
  1218  000038                     ___flsub@b:
  1219                           	callstack 0
  1220  000038                     ___fldiv@b:
  1221                           	callstack 0
  1222                           
  1223                           ; 4 bytes @ 0x37
  1224  000038                     	ds	4
  1225  00003C                     ___flge@ff2:
  1226                           	callstack 0
  1227  00003C                     ___flsub@a:
  1228                           	callstack 0
  1229  00003C                     ___fldiv@a:
  1230                           	callstack 0
  1231                           
  1232                           ; 4 bytes @ 0x3B
  1233  00003C                     	ds	4
  1234  000040                     ??___fldiv:
  1235  000040                     ??___flge:
  1236                           
  1237                           ; 1 bytes @ 0x3F
  1238  000040                     	ds	4
  1239  000044                     ___fldiv@rem:
  1240                           	callstack 0
  1241                           
  1242                           ; 4 bytes @ 0x43
  1243  000044                     	ds	4
  1244  000048                     ___fldiv@sign:
  1245                           	callstack 0
  1246                           
  1247                           ; 1 bytes @ 0x47
  1248  000048                     	ds	1
  1249  000049                     ___fldiv@new_exp:
  1250                           	callstack 0
  1251                           
  1252                           ; 2 bytes @ 0x48
  1253  000049                     	ds	2
  1254  00004B                     ___fldiv@grs:
  1255                           	callstack 0
  1256                           
  1257                           ; 4 bytes @ 0x4A
  1258  00004B                     	ds	4
  1259  00004F                     ___fldiv@bexp:
  1260                           	callstack 0
  1261                           
  1262                           ; 1 bytes @ 0x4E
  1263  00004F                     	ds	1
  1264  000050                     ___fldiv@aexp:
  1265                           	callstack 0
  1266                           
  1267                           ; 1 bytes @ 0x4F
  1268  000050                     	ds	1
  1269  000051                     ?_floorf:
  1270                           	callstack 0
  1271  000051                     floorf@x:
  1272                           	callstack 0
  1273                           
  1274                           ; 4 bytes @ 0x50
  1275  000051                     	ds	4
  1276  000055                     ??_floorf:
  1277                           
  1278                           ; 1 bytes @ 0x54
  1279  000055                     	ds	6
  1280  00005B                     floorf@m:
  1281                           	callstack 0
  1282                           
  1283                           ; 4 bytes @ 0x5A
  1284  00005B                     	ds	4
  1285  00005F                     floorf@e:
  1286                           	callstack 0
  1287                           
  1288                           ; 2 bytes @ 0x5E
  1289  00005F                     	ds	2
  1290  000061                     floorf@u:
  1291                           	callstack 0
  1292                           
  1293                           ; 4 bytes @ 0x60
  1294  000061                     	ds	4
  1295  000065                     ?_efgtoa:
  1296                           	callstack 0
  1297  000065                     efgtoa@fp:
  1298                           	callstack 0
  1299                           
  1300                           ; 2 bytes @ 0x64
  1301  000065                     	ds	2
  1302  000067                     efgtoa@f:
  1303                           	callstack 0
  1304                           
  1305                           ; 4 bytes @ 0x66
  1306  000067                     	ds	4
  1307  00006B                     efgtoa@c:
  1308                           	callstack 0
  1309                           
  1310                           ; 1 bytes @ 0x6A
  1311  00006B                     	ds	1
  1312  00006C                     ??_efgtoa:
  1313                           
  1314                           ; 1 bytes @ 0x6B
  1315  00006C                     	ds	5
  1316  000071                     ?_vfpfcnvrt:
  1317                           	callstack 0
  1318  000071                     vfpfcnvrt@fp:
  1319                           	callstack 0
  1320                           
  1321                           ; 2 bytes @ 0x70
  1322  000071                     	ds	2
  1323  000073                     vfpfcnvrt@fmt:
  1324                           	callstack 0
  1325                           
  1326                           ; 2 bytes @ 0x72
  1327  000073                     	ds	2
  1328  000075                     vfpfcnvrt@ap:
  1329                           	callstack 0
  1330                           
  1331                           ; 2 bytes @ 0x74
  1332  000075                     	ds	2
  1333  000077                     ??_vfpfcnvrt:
  1334                           
  1335                           ; 1 bytes @ 0x76
  1336  000077                     	ds	4
  1337  00007B                     vfprintf@cfmt:
  1338                           	callstack 0
  1339                           
  1340                           ; 2 bytes @ 0x7A
  1341  00007B                     	ds	2
  1342  00007D                     encher_tanque@vol:
  1343                           	callstack 0
  1344  00007D                     esvaziar_tanque@vol:
  1345                           	callstack 0
  1346  00007D                     ver_quantidade@vol:
  1347                           	callstack 0
  1348                           
  1349                           ; 2 bytes @ 0x7C
  1350  00007D                     	ds	2
  1351  00007F                     
  1352                           ; 1 bytes @ 0x7E
  1353 ;;
  1354 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1355 ;;
  1356 ;; *************** function _main *****************
  1357 ;; Defined at:
  1358 ;;		line 16 in file "main.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;		None
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;  opt             2  104[BANK0 ] unsigned int 
  1363 ;;  tmp             1  103[BANK0 ] unsigned char 
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  1    wreg      void 
  1366 ;; Registers used:
  1367 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1373 ;;      Params:         0       0       0       0       0       0       0
  1374 ;;      Locals:         0       3       0       0       0       0       0
  1375 ;;      Temps:          0       0       0       0       0       0       0
  1376 ;;      Totals:         0       3       0       0       0       0       0
  1377 ;;Total ram usage:        3 bytes
  1378 ;; Hardware stack levels required when called:    9
  1379 ;; This function calls:
  1380 ;;		_atraso_ms
  1381 ;;		_encher_tanque
  1382 ;;		_esvaziar_tanque
  1383 ;;		_lcd_cmd
  1384 ;;		_lcd_init
  1385 ;;		_lcd_str
  1386 ;;		_tc_tecla
  1387 ;;		_ver_quantidade
  1388 ;; This function is called by:
  1389 ;;		Startup code after reset
  1390 ;; This function uses a non-reentrant model
  1391 ;;
  1392                           
  1393                           	psect	text0
  1394  00354E                     __ptext0:
  1395                           	callstack 0
  1396  00354E                     _main:
  1397                           	callstack 22
  1398  00354E                     
  1399                           ;main.c: 18:     (*(volatile __near unsigned char*)0xFC1) = 0x06;
  1400  00354E  0E06               	movlw	6
  1401  003550  6EC1               	movwf	193,c	;volatile
  1402                           
  1403                           ;main.c: 19:     (*(volatile __near unsigned char*)0xF93) = 0x01;
  1404  003552  0E01               	movlw	1
  1405  003554  6E93               	movwf	147,c	;volatile
  1406                           
  1407                           ;main.c: 20:     (*(volatile __near unsigned char*)0xF95) = 0x00;
  1408  003556  0E00               	movlw	0
  1409  003558  6E95               	movwf	149,c	;volatile
  1410                           
  1411                           ;main.c: 21:     (*(volatile __near unsigned char*)0xF96) = 0x00;
  1412  00355A  0E00               	movlw	0
  1413  00355C  6E96               	movwf	150,c	;volatile
  1414  00355E                     
  1415                           ;main.c: 22:     lcd_init();
  1416  00355E  EC31  F021         	call	_lcd_init	;wreg free
  1417  003562                     
  1418                           ;main.c: 25:     lcd_cmd(0x01);
  1419  003562  0E01               	movlw	1
  1420  003564  ECBD  F022         	call	_lcd_cmd
  1421  003568                     
  1422                           ;main.c: 26:     lcd_cmd(0x80);
  1423  003568  0E80               	movlw	128
  1424  00356A  ECBD  F022         	call	_lcd_cmd
  1425  00356E                     
  1426                           ;main.c: 27:     lcd_str("Abastecimento de");
  1427  00356E  0E05               	movlw	low STR_1
  1428  003570  6E08               	movwf	lcd_str@str^0,c
  1429  003572  0E06               	movlw	high STR_1
  1430  003574  6E09               	movwf	(lcd_str@str+1)^0,c
  1431  003576  EC8F  F01F         	call	_lcd_str	;wreg free
  1432  00357A                     
  1433                           ;main.c: 28:     lcd_cmd(0xC0);
  1434  00357A  0EC0               	movlw	192
  1435  00357C  ECBD  F022         	call	_lcd_cmd
  1436  003580                     
  1437                           ;main.c: 29:     lcd_str("      agua");
  1438  003580  0EAE               	movlw	low STR_2
  1439  003582  6E08               	movwf	lcd_str@str^0,c
  1440  003584  0E06               	movlw	high STR_2
  1441  003586  6E09               	movwf	(lcd_str@str+1)^0,c
  1442  003588  EC8F  F01F         	call	_lcd_str	;wreg free
  1443  00358C                     
  1444                           ;main.c: 30:     atraso_ms(atrasoMin);
  1445  00358C  0E00               	movlw	0
  1446  00358E  6E02               	movwf	(atraso_ms@t+1)^0,c
  1447  003590  0E14               	movlw	20
  1448  003592  6E01               	movwf	atraso_ms@t^0,c
  1449  003594  EC3B  F020         	call	_atraso_ms	;wreg free
  1450  003598                     
  1451                           ;main.c: 31:     lcd_cmd(0x01);
  1452  003598  0E01               	movlw	1
  1453  00359A  ECBD  F022         	call	_lcd_cmd
  1454  00359E                     
  1455                           ;main.c: 34:     lcd_cmd(0x80);
  1456  00359E  0E80               	movlw	128
  1457  0035A0  ECBD  F022         	call	_lcd_cmd
  1458  0035A4                     
  1459                           ;main.c: 35:     lcd_str("Vol max = 70L");
  1460  0035A4  0E7C               	movlw	low STR_3
  1461  0035A6  6E08               	movwf	lcd_str@str^0,c
  1462  0035A8  0E06               	movlw	high STR_3
  1463  0035AA  6E09               	movwf	(lcd_str@str+1)^0,c
  1464  0035AC  EC8F  F01F         	call	_lcd_str	;wreg free
  1465  0035B0                     
  1466                           ;main.c: 36:     lcd_cmd(0xC0);
  1467  0035B0  0EC0               	movlw	192
  1468  0035B2  ECBD  F022         	call	_lcd_cmd
  1469  0035B6                     
  1470                           ;main.c: 37:     lcd_str("Vazao: 0.5 L/s");
  1471  0035B6  0E35               	movlw	low STR_4
  1472  0035B8  6E08               	movwf	lcd_str@str^0,c
  1473  0035BA  0E06               	movlw	high STR_4
  1474  0035BC  6E09               	movwf	(lcd_str@str+1)^0,c
  1475  0035BE  EC8F  F01F         	call	_lcd_str	;wreg free
  1476  0035C2                     
  1477                           ;main.c: 38:     atraso_ms(atrasoMin);
  1478  0035C2  0E00               	movlw	0
  1479  0035C4  6E02               	movwf	(atraso_ms@t+1)^0,c
  1480  0035C6  0E14               	movlw	20
  1481  0035C8  6E01               	movwf	atraso_ms@t^0,c
  1482  0035CA  EC3B  F020         	call	_atraso_ms	;wreg free
  1483  0035CE                     
  1484                           ;main.c: 39:     lcd_cmd(0x01);
  1485  0035CE  0E01               	movlw	1
  1486  0035D0  ECBD  F022         	call	_lcd_cmd
  1487  0035D4                     l5083:
  1488                           
  1489                           ;main.c: 43:         lcd_cmd(0x01);
  1490  0035D4  0E01               	movlw	1
  1491  0035D6  ECBD  F022         	call	_lcd_cmd
  1492  0035DA                     
  1493                           ;main.c: 44:         lcd_cmd(0x80);
  1494  0035DA  0E80               	movlw	128
  1495  0035DC  ECBD  F022         	call	_lcd_cmd
  1496  0035E0                     
  1497                           ;main.c: 45:         lcd_str("1-Ver 2-Encher");
  1498  0035E0  0E26               	movlw	low STR_5
  1499  0035E2  6E08               	movwf	lcd_str@str^0,c
  1500  0035E4  0E06               	movlw	high STR_5
  1501  0035E6  6E09               	movwf	(lcd_str@str+1)^0,c
  1502  0035E8  EC8F  F01F         	call	_lcd_str	;wreg free
  1503  0035EC                     
  1504                           ;main.c: 46:         lcd_cmd(0xC0);
  1505  0035EC  0EC0               	movlw	192
  1506  0035EE  ECBD  F022         	call	_lcd_cmd
  1507  0035F2                     
  1508                           ;main.c: 47:         lcd_str("3-Retirar");
  1509  0035F2  0EB9               	movlw	low STR_6
  1510  0035F4  6E08               	movwf	lcd_str@str^0,c
  1511  0035F6  0E06               	movlw	high STR_6
  1512  0035F8  6E09               	movwf	(lcd_str@str+1)^0,c
  1513  0035FA  EC8F  F01F         	call	_lcd_str	;wreg free
  1514  0035FE                     
  1515                           ;main.c: 49:         unsigned int opt;;main.c: 50:         unsigned char tmp;;main.c: 52
      +                          :         (*(volatile __near unsigned char*)0xF93) = 0xF8;
  1516  0035FE  0EF8               	movlw	248
  1517  003600  6E93               	movwf	147,c	;volatile
  1518  003602                     
  1519                           ;main.c: 55:             (*(volatile __near unsigned char*)0xF95) = 0x0F;
  1520  003602  0E0F               	movlw	15
  1521  003604  6E95               	movwf	149,c	;volatile
  1522  003606                     
  1523                           ;main.c: 56:             tmp = tc_tecla(0) + 0x30;
  1524  003606  0E00               	movlw	0
  1525  003608  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  1526  00360A  0E00               	movlw	0
  1527  00360C  6E07               	movwf	tc_tecla@timeout^0,c
  1528  00360E  EC20  F018         	call	_tc_tecla	;wreg free
  1529  003612  0F30               	addlw	48
  1530  003614  0100               	movlb	0	; () banked
  1531  003616  6FE7               	movwf	main@tmp& (0+255),b
  1532  003618                     
  1533                           ; BSR set to: 0
  1534                           ;main.c: 57:             (*(volatile __near unsigned char*)0xF95) = 0x00;
  1535  003618  0E00               	movlw	0
  1536  00361A  6E95               	movwf	149,c	;volatile
  1537  00361C                     
  1538                           ; BSR set to: 0
  1539                           ;main.c: 58:             opt = (tmp - '0');
  1540  00361C  0ED0               	movlw	208
  1541  00361E  25E7               	addwf	main@tmp& (0+255),w,b
  1542  003620  6FE8               	movwf	main@opt& (0+255),b
  1543  003622  6BE9               	clrf	(main@opt+1)& (0+255),b
  1544  003624  0EFF               	movlw	255
  1545  003626  23E9               	addwfc	(main@opt+1)& (0+255),f,b
  1546  003628                     
  1547                           ; BSR set to: 0
  1548                           ;main.c: 59:             if (opt == 1) {
  1549  003628  05E8               	decf	main@opt& (0+255),w,b
  1550  00362A  11E9               	iorwf	(main@opt+1)& (0+255),w,b
  1551  00362C  A4D8               	btfss	status,2,c
  1552  00362E  EF1B  F01B         	goto	u5841
  1553  003632  EF1D  F01B         	goto	u5840
  1554  003636                     u5841:
  1555  003636  EF25  F01B         	goto	l5109
  1556  00363A                     u5840:
  1557  00363A                     
  1558                           ; BSR set to: 0
  1559                           ;main.c: 60:                 ver_quantidade(&volume);
  1560  00363A  0EF4               	movlw	low _volume
  1561  00363C  6E7D               	movwf	ver_quantidade@vol^0,c
  1562  00363E  0E00               	movlw	high _volume
  1563  003640  6E7E               	movwf	(ver_quantidade@vol+1)^0,c
  1564  003642  ECE0  F01C         	call	_ver_quantidade	;wreg free
  1565                           
  1566                           ;main.c: 61:                 break;
  1567  003646  EFEA  F01A         	goto	l5083
  1568  00364A                     l5109:
  1569                           
  1570                           ; BSR set to: 0
  1571  00364A  0E02               	movlw	2
  1572  00364C  19E8               	xorwf	main@opt& (0+255),w,b
  1573  00364E  11E9               	iorwf	(main@opt+1)& (0+255),w,b
  1574  003650  A4D8               	btfss	status,2,c
  1575  003652  EF2D  F01B         	goto	u5851
  1576  003656  EF2F  F01B         	goto	u5850
  1577  00365A                     u5851:
  1578  00365A  EF37  F01B         	goto	l5115
  1579  00365E                     u5850:
  1580  00365E                     
  1581                           ; BSR set to: 0
  1582                           ;main.c: 63:                 encher_tanque(&volume);
  1583  00365E  0EF4               	movlw	low _volume
  1584  003660  6E7D               	movwf	encher_tanque@vol^0,c
  1585  003662  0E00               	movlw	high _volume
  1586  003664  6E7E               	movwf	(encher_tanque@vol+1)^0,c
  1587  003666  EC50  F009         	call	_encher_tanque	;wreg free
  1588                           
  1589                           ;main.c: 64:                 break;
  1590  00366A  EFEA  F01A         	goto	l5083
  1591  00366E                     l5115:
  1592                           
  1593                           ; BSR set to: 0
  1594  00366E  0E03               	movlw	3
  1595  003670  19E8               	xorwf	main@opt& (0+255),w,b
  1596  003672  11E9               	iorwf	(main@opt+1)& (0+255),w,b
  1597  003674  A4D8               	btfss	status,2,c
  1598  003676  EF3F  F01B         	goto	u5861
  1599  00367A  EF41  F01B         	goto	u5860
  1600  00367E                     u5861:
  1601  00367E  EF49  F01B         	goto	l5121
  1602  003682                     u5860:
  1603  003682                     
  1604                           ; BSR set to: 0
  1605                           ;main.c: 66:                 esvaziar_tanque(&volume);
  1606  003682  0EF4               	movlw	low _volume
  1607  003684  6E7D               	movwf	esvaziar_tanque@vol^0,c
  1608  003686  0E00               	movlw	high _volume
  1609  003688  6E7E               	movwf	(esvaziar_tanque@vol+1)^0,c
  1610  00368A  EC01  F00C         	call	_esvaziar_tanque	;wreg free
  1611                           
  1612                           ;main.c: 67:                 break;
  1613  00368E  EFEA  F01A         	goto	l5083
  1614  003692                     l5121:
  1615                           
  1616                           ; BSR set to: 0
  1617                           ;main.c: 69:                 lcd_cmd(0x01);
  1618  003692  0E01               	movlw	1
  1619  003694  ECBD  F022         	call	_lcd_cmd
  1620  003698                     
  1621                           ;main.c: 70:                 lcd_str("    INVALIDO!");
  1622  003698  0E6E               	movlw	low STR_7
  1623  00369A  6E08               	movwf	lcd_str@str^0,c
  1624  00369C  0E06               	movlw	high STR_7
  1625  00369E  6E09               	movwf	(lcd_str@str+1)^0,c
  1626  0036A0  EC8F  F01F         	call	_lcd_str	;wreg free
  1627  0036A4                     
  1628                           ;main.c: 71:                 atraso_ms(200);
  1629  0036A4  0E00               	movlw	0
  1630  0036A6  6E02               	movwf	(atraso_ms@t+1)^0,c
  1631  0036A8  0EC8               	movlw	200
  1632  0036AA  6E01               	movwf	atraso_ms@t^0,c
  1633  0036AC  EC3B  F020         	call	_atraso_ms	;wreg free
  1634                           
  1635                           ;main.c: 72:                 break;
  1636  0036B0  EFEA  F01A         	goto	l5083
  1637  0036B4  EF00  F000         	goto	start
  1638  0036B8                     __end_of_main:
  1639                           	callstack 0
  1640                           
  1641 ;; *************** function _ver_quantidade *****************
  1642 ;; Defined at:
  1643 ;;		line 8 in file "ver.c"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;  vol             2  124[COMRAM] PTR 
  1646 ;;		 -> volume(4), 
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;  y               8   92[BANK0 ] unsigned char [8]
  1649 ;;  i               2  101[BANK0 ] int 
  1650 ;;  tmp             1  100[BANK0 ] unsigned char 
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  1    wreg      void 
  1653 ;; Registers used:
  1654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1660 ;;      Params:         2       0       0       0       0       0       0
  1661 ;;      Locals:         0      11       0       0       0       0       0
  1662 ;;      Temps:          0       0       0       0       0       0       0
  1663 ;;      Totals:         2      11       0       0       0       0       0
  1664 ;;Total ram usage:       13 bytes
  1665 ;; Hardware stack levels used:    1
  1666 ;; Hardware stack levels required when called:    8
  1667 ;; This function calls:
  1668 ;;		_lcd_cmd
  1669 ;;		_lcd_str
  1670 ;;		_sprintf
  1671 ;;		_tc_tecla
  1672 ;; This function is called by:
  1673 ;;		_main
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text1
  1678  0039C0                     __ptext1:
  1679                           	callstack 0
  1680  0039C0                     _ver_quantidade:
  1681                           	callstack 22
  1682  0039C0                     
  1683                           ;ver.c: 10:     int i;;ver.c: 11:     char y[8];;ver.c: 12:     sprintf(y, "%.1f", *vol)
      +                          ;
  1684  0039C0  0EDC               	movlw	low ver_quantidade@y
  1685  0039C2  0100               	movlb	0	; () banked
  1686  0039C4  6FCA               	movwf	sprintf@s& (0+255),b
  1687  0039C6  0E00               	movlw	high ver_quantidade@y
  1688  0039C8  6FCB               	movwf	(sprintf@s+1)& (0+255),b
  1689  0039CA  0ED4               	movlw	low STR_12
  1690  0039CC  6FCC               	movwf	sprintf@fmt& (0+255),b
  1691  0039CE  0E06               	movlw	high STR_12
  1692  0039D0  6FCD               	movwf	(sprintf@fmt+1)& (0+255),b
  1693  0039D2  C07D  FFD9         	movff	ver_quantidade@vol,fsr2l
  1694  0039D6  C07E  FFDA         	movff	ver_quantidade@vol+1,fsr2h
  1695  0039DA  CFDE F0CE          	movff	postinc2,?_sprintf+4
  1696  0039DE  CFDE F0CF          	movff	postinc2,?_sprintf+5
  1697  0039E2  CFDE F0D0          	movff	postinc2,?_sprintf+6
  1698  0039E6  CFDE F0D1          	movff	postinc2,?_sprintf+7
  1699  0039EA  EC8D  F021         	call	_sprintf	;wreg free
  1700  0039EE                     
  1701                           ;ver.c: 14:     lcd_cmd(0x01);
  1702  0039EE  0E01               	movlw	1
  1703  0039F0  ECBD  F022         	call	_lcd_cmd
  1704  0039F4                     
  1705                           ;ver.c: 15:     lcd_cmd(0x80);
  1706  0039F4  0E80               	movlw	128
  1707  0039F6  ECBD  F022         	call	_lcd_cmd
  1708  0039FA                     
  1709                           ;ver.c: 16:     lcd_str("Atual: ");
  1710  0039FA  0ECC               	movlw	low STR_29
  1711  0039FC  6E08               	movwf	lcd_str@str^0,c
  1712  0039FE  0E06               	movlw	high STR_29
  1713  003A00  6E09               	movwf	(lcd_str@str+1)^0,c
  1714  003A02  EC8F  F01F         	call	_lcd_str	;wreg free
  1715  003A06                     
  1716                           ;ver.c: 17:     lcd_str(y);
  1717  003A06  0EDC               	movlw	low ver_quantidade@y
  1718  003A08  6E08               	movwf	lcd_str@str^0,c
  1719  003A0A  0E00               	movlw	high ver_quantidade@y
  1720  003A0C  6E09               	movwf	(lcd_str@str+1)^0,c
  1721  003A0E  EC8F  F01F         	call	_lcd_str	;wreg free
  1722  003A12                     
  1723                           ;ver.c: 18:     lcd_str(" L");
  1724  003A12  0EEC               	movlw	low STR_13
  1725  003A14  6E08               	movwf	lcd_str@str^0,c
  1726  003A16  0E06               	movlw	high STR_13
  1727  003A18  6E09               	movwf	(lcd_str@str+1)^0,c
  1728  003A1A  EC8F  F01F         	call	_lcd_str	;wreg free
  1729  003A1E                     
  1730                           ;ver.c: 19:     lcd_cmd(0xC0);
  1731  003A1E  0EC0               	movlw	192
  1732  003A20  ECBD  F022         	call	_lcd_cmd
  1733  003A24                     
  1734                           ;ver.c: 20:     lcd_str("# - Voltar");
  1735  003A24  0E63               	movlw	low (STR_17+3)
  1736  003A26  6E08               	movwf	lcd_str@str^0,c
  1737  003A28  0E06               	movlw	high (STR_17+3)
  1738  003A2A  6E09               	movwf	(lcd_str@str+1)^0,c
  1739  003A2C  EC8F  F01F         	call	_lcd_str	;wreg free
  1740  003A30                     
  1741                           ;ver.c: 21:     lcd_cmd(0xC0);
  1742  003A30  0EC0               	movlw	192
  1743  003A32  ECBD  F022         	call	_lcd_cmd
  1744  003A36                     
  1745                           ;ver.c: 23:     for (i = 0; i < 7; i++) {
  1746  003A36  0E00               	movlw	0
  1747  003A38  0100               	movlb	0	; () banked
  1748  003A3A  6FE6               	movwf	(ver_quantidade@i+1)& (0+255),b
  1749  003A3C  0E00               	movlw	0
  1750  003A3E  6FE5               	movwf	ver_quantidade@i& (0+255),b
  1751  003A40                     l4713:
  1752                           
  1753                           ; BSR set to: 0
  1754                           ;ver.c: 24:         lcd_cmd(0x10);
  1755  003A40  0E10               	movlw	16
  1756  003A42  ECBD  F022         	call	_lcd_cmd
  1757  003A46                     
  1758                           ;ver.c: 25:     }
  1759  003A46  0100               	movlb	0	; () banked
  1760  003A48  4BE5               	infsnz	ver_quantidade@i& (0+255),f,b
  1761  003A4A  2BE6               	incf	(ver_quantidade@i+1)& (0+255),f,b
  1762  003A4C                     
  1763                           ; BSR set to: 0
  1764  003A4C  BFE6               	btfsc	(ver_quantidade@i+1)& (0+255),7,b
  1765  003A4E  EF32  F01D         	goto	u5601
  1766  003A52  51E6               	movf	(ver_quantidade@i+1)& (0+255),w,b
  1767  003A54  E109               	bnz	u5600
  1768  003A56  0E07               	movlw	7
  1769  003A58  5DE5               	subwf	ver_quantidade@i& (0+255),w,b
  1770  003A5A  A0D8               	btfss	status,0,c
  1771  003A5C  EF32  F01D         	goto	u5601
  1772  003A60  EF34  F01D         	goto	u5600
  1773  003A64                     u5601:
  1774  003A64  EF20  F01D         	goto	l4713
  1775  003A68                     u5600:
  1776  003A68                     
  1777                           ; BSR set to: 0
  1778                           ;ver.c: 32:     unsigned char tmp;;ver.c: 34:     (*(volatile __near unsigned char*)0xF9
      +                          3) = 0xF8;
  1779  003A68  0EF8               	movlw	248
  1780  003A6A  6E93               	movwf	147,c	;volatile
  1781  003A6C                     l224:
  1782                           
  1783                           ; BSR set to: 0
  1784                           ;ver.c: 37:         (*(volatile __near unsigned char*)0xF95) = 0x0F;
  1785  003A6C  0E0F               	movlw	15
  1786  003A6E  6E95               	movwf	149,c	;volatile
  1787  003A70                     
  1788                           ; BSR set to: 0
  1789                           ;ver.c: 38:         tmp = tc_tecla(0) + 0x30;
  1790  003A70  0E00               	movlw	0
  1791  003A72  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  1792  003A74  0E00               	movlw	0
  1793  003A76  6E07               	movwf	tc_tecla@timeout^0,c
  1794  003A78  EC20  F018         	call	_tc_tecla	;wreg free
  1795  003A7C  0F30               	addlw	48
  1796  003A7E  0100               	movlb	0	; () banked
  1797  003A80  6FE4               	movwf	ver_quantidade@tmp& (0+255),b
  1798  003A82                     
  1799                           ; BSR set to: 0
  1800                           ;ver.c: 39:         (*(volatile __near unsigned char*)0xF95) = 0x00;
  1801  003A82  0E00               	movlw	0
  1802  003A84  6E95               	movwf	149,c	;volatile
  1803  003A86                     
  1804                           ; BSR set to: 0
  1805                           ;ver.c: 40:         if (tmp >= 0x3C) {
  1806  003A86  0E3B               	movlw	59
  1807  003A88  65E4               	cpfsgt	ver_quantidade@tmp& (0+255),b
  1808  003A8A  EF49  F01D         	goto	u5611
  1809  003A8E  EF4B  F01D         	goto	u5610
  1810  003A92                     u5611:
  1811  003A92  EF36  F01D         	goto	l224
  1812  003A96                     u5610:
  1813  003A96                     
  1814                           ; BSR set to: 0
  1815                           ;ver.c: 41:             (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<1));
  1816  003A96  9294               	bcf	148,1,c	;volatile
  1817  003A98                     
  1818                           ; BSR set to: 0
  1819  003A98  0012               	return		;funcret
  1820  003A9A                     __end_of_ver_quantidade:
  1821                           	callstack 0
  1822                           
  1823 ;; *************** function _lcd_init *****************
  1824 ;; Defined at:
  1825 ;;		line 29 in file "lcd.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;		None
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;		None
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  1    wreg      void 
  1832 ;; Registers used:
  1833 ;;		wreg, status,2, status,0, cstack
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1839 ;;      Params:         0       0       0       0       0       0       0
  1840 ;;      Locals:         0       0       0       0       0       0       0
  1841 ;;      Temps:          0       0       0       0       0       0       0
  1842 ;;      Totals:         0       0       0       0       0       0       0
  1843 ;;Total ram usage:        0 bytes
  1844 ;; Hardware stack levels used:    1
  1845 ;; Hardware stack levels required when called:    2
  1846 ;; This function calls:
  1847 ;;		_atraso_ms
  1848 ;;		_lcd_cmd
  1849 ;; This function is called by:
  1850 ;;		_main
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           	psect	text2
  1855  004262                     __ptext2:
  1856                           	callstack 0
  1857  004262                     _lcd_init:
  1858                           	callstack 28
  1859  004262                     
  1860                           ;lcd.c: 30:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  1861  004262  9284               	bcf	132,1,c	;volatile
  1862                           
  1863                           ;lcd.c: 31:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<2));
  1864  004264  9484               	bcf	132,2,c	;volatile
  1865  004266                     
  1866                           ;lcd.c: 32:     atraso_ms(20);
  1867  004266  0E00               	movlw	0
  1868  004268  6E02               	movwf	(atraso_ms@t+1)^0,c
  1869  00426A  0E14               	movlw	20
  1870  00426C  6E01               	movwf	atraso_ms@t^0,c
  1871  00426E  EC3B  F020         	call	_atraso_ms	;wreg free
  1872  004272                     
  1873                           ;lcd.c: 33:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  1874  004272  8284               	bsf	132,1,c	;volatile
  1875                           
  1876                           ;lcd.c: 35:     lcd_cmd(0x38);
  1877  004274  0E38               	movlw	56
  1878  004276  ECBD  F022         	call	_lcd_cmd
  1879                           
  1880                           ;lcd.c: 36:     atraso_ms(5);
  1881  00427A  0E00               	movlw	0
  1882  00427C  6E02               	movwf	(atraso_ms@t+1)^0,c
  1883  00427E  0E05               	movlw	5
  1884  004280  6E01               	movwf	atraso_ms@t^0,c
  1885  004282  EC3B  F020         	call	_atraso_ms	;wreg free
  1886                           
  1887                           ;lcd.c: 37:     lcd_cmd(0x38);
  1888  004286  0E38               	movlw	56
  1889  004288  ECBD  F022         	call	_lcd_cmd
  1890                           
  1891                           ;lcd.c: 38:     atraso_ms(1);
  1892  00428C  0E00               	movlw	0
  1893  00428E  6E02               	movwf	(atraso_ms@t+1)^0,c
  1894  004290  0E01               	movlw	1
  1895  004292  6E01               	movwf	atraso_ms@t^0,c
  1896  004294  EC3B  F020         	call	_atraso_ms	;wreg free
  1897                           
  1898                           ;lcd.c: 39:     lcd_cmd(0x38);
  1899  004298  0E38               	movlw	56
  1900  00429A  ECBD  F022         	call	_lcd_cmd
  1901                           
  1902                           ;lcd.c: 40:     lcd_cmd(0x08);
  1903  00429E  0E08               	movlw	8
  1904  0042A0  ECBD  F022         	call	_lcd_cmd
  1905                           
  1906                           ;lcd.c: 41:     lcd_cmd(0x0F);
  1907  0042A4  0E0F               	movlw	15
  1908  0042A6  ECBD  F022         	call	_lcd_cmd
  1909                           
  1910                           ;lcd.c: 42:     lcd_cmd(0x01);
  1911  0042AA  0E01               	movlw	1
  1912  0042AC  ECBD  F022         	call	_lcd_cmd
  1913                           
  1914                           ;lcd.c: 43:     lcd_cmd(0x38);
  1915  0042B0  0E38               	movlw	56
  1916  0042B2  ECBD  F022         	call	_lcd_cmd
  1917                           
  1918                           ;lcd.c: 44:     lcd_cmd(0x80);
  1919  0042B6  0E80               	movlw	128
  1920  0042B8  ECBD  F022         	call	_lcd_cmd
  1921  0042BC  0012               	return		;funcret
  1922  0042BE                     __end_of_lcd_init:
  1923                           	callstack 0
  1924                           
  1925 ;; *************** function _esvaziar_tanque *****************
  1926 ;; Defined at:
  1927 ;;		line 9 in file "esvaziar.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;  vol             2  124[COMRAM] PTR 
  1930 ;;		 -> volume(4), 
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;  numeros        20    0[BANK1 ] unsigned int [10]
  1933 ;;  y               8   20[BANK1 ] unsigned char [8]
  1934 ;;  porcento        4   28[BANK1 ] float 
  1935 ;;  t2              2   48[BANK1 ] unsigned int 
  1936 ;;  t1              2   44[BANK1 ] unsigned int 
  1937 ;;  tempo           2   42[BANK1 ] unsigned int 
  1938 ;;  potencia        2   38[BANK1 ] unsigned int 
  1939 ;;  i               2   32[BANK1 ] unsigned int 
  1940 ;;  num             4   34[BANK1 ] unsigned int [2]
  1941 ;;  i               2   46[BANK1 ] unsigned int 
  1942 ;;  decremento      2   40[BANK1 ] unsigned int 
  1943 ;;  tmp             1   50[BANK1 ] unsigned char 
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  1    wreg      void 
  1946 ;; Registers used:
  1947 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1953 ;;      Params:         2       0       0       0       0       0       0
  1954 ;;      Locals:         0       0      51       0       0       0       0
  1955 ;;      Temps:          0       4       0       0       0       0       0
  1956 ;;      Totals:         2       4      51       0       0       0       0
  1957 ;;Total ram usage:       57 bytes
  1958 ;; Hardware stack levels used:    1
  1959 ;; Hardware stack levels required when called:    8
  1960 ;; This function calls:
  1961 ;;		___fladd
  1962 ;;		___fldiv
  1963 ;;		___flmul
  1964 ;;		___flsub
  1965 ;;		___fltol
  1966 ;;		___lwdiv
  1967 ;;		___lwmod
  1968 ;;		___wmul
  1969 ;;		___xxtofl
  1970 ;;		_atraso_ms
  1971 ;;		_lcd_cmd
  1972 ;;		_lcd_dat
  1973 ;;		_lcd_str
  1974 ;;		_pwmInit
  1975 ;;		_pwmSet1
  1976 ;;		_sprintf
  1977 ;;		_tc_tecla
  1978 ;; This function is called by:
  1979 ;;		_main
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983                           	psect	text3
  1984  001802                     __ptext3:
  1985                           	callstack 0
  1986  001802                     _esvaziar_tanque:
  1987                           	callstack 22
  1988  001802                     
  1989                           ;esvaziar.c: 12:     lcd_cmd(0x01);
  1990  001802  0E01               	movlw	1
  1991  001804  ECBD  F022         	call	_lcd_cmd
  1992                           
  1993                           ;esvaziar.c: 13:     lcd_cmd(0x80);
  1994  001808  0E80               	movlw	128
  1995  00180A  ECBD  F022         	call	_lcd_cmd
  1996  00180E                     
  1997                           ;esvaziar.c: 14:     lcd_str("Quant(L): ");
  1998  00180E  0EA3               	movlw	low STR_8
  1999  001810  6E08               	movwf	lcd_str@str^0,c
  2000  001812  0E06               	movlw	high STR_8
  2001  001814  6E09               	movwf	(lcd_str@str+1)^0,c
  2002  001816  EC8F  F01F         	call	_lcd_str	;wreg free
  2003  00181A                     
  2004                           ;esvaziar.c: 15:     lcd_cmd(0xC0);
  2005  00181A  0EC0               	movlw	192
  2006  00181C  ECBD  F022         	call	_lcd_cmd
  2007                           
  2008                           ;esvaziar.c: 16:     lcd_str("# - Voltar");
  2009  001820  0E63               	movlw	low (STR_17+3)
  2010  001822  6E08               	movwf	lcd_str@str^0,c
  2011  001824  0E06               	movlw	high (STR_17+3)
  2012  001826  6E09               	movwf	(lcd_str@str+1)^0,c
  2013  001828  EC8F  F01F         	call	_lcd_str	;wreg free
  2014  00182C                     
  2015                           ;esvaziar.c: 17:     lcd_cmd(0x80 +10);
  2016  00182C  0E8A               	movlw	138
  2017  00182E  ECBD  F022         	call	_lcd_cmd
  2018  001832                     
  2019                           ;esvaziar.c: 19:     unsigned int decremento;;esvaziar.c: 21:     unsigned int i = 0;
  2020  001832  0E00               	movlw	0
  2021  001834  0101               	movlb	1	; () banked
  2022  001836  6F87               	movwf	(esvaziar_tanque@i+1)& (0+255),b
  2023  001838  0E00               	movlw	0
  2024  00183A  6F86               	movwf	esvaziar_tanque@i& (0+255),b
  2025  00183C                     
  2026                           ; BSR set to: 1
  2027                           ;esvaziar.c: 22:     unsigned int num[2];;esvaziar.c: 23:     unsigned char tmp;;esvazia
      +                          r.c: 25:     (*(volatile __near unsigned char*)0xF93) = 0xF8;
  2028  00183C  0EF8               	movlw	248
  2029  00183E  6E93               	movwf	147,c	;volatile
  2030                           
  2031                           ;esvaziar.c: 27:     while (i != 2) {
  2032  001840  EF80  F00C         	goto	l4925
  2033  001844                     l4903:
  2034                           
  2035                           ; BSR set to: 1
  2036                           ;esvaziar.c: 28:         (*(volatile __near unsigned char*)0xF95) = 0x0F;
  2037  001844  0E0F               	movlw	15
  2038  001846  6E95               	movwf	149,c	;volatile
  2039  001848                     
  2040                           ; BSR set to: 1
  2041                           ;esvaziar.c: 29:         tmp = tc_tecla(0) + 0x30;
  2042  001848  0E00               	movlw	0
  2043  00184A  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  2044  00184C  0E00               	movlw	0
  2045  00184E  6E07               	movwf	tc_tecla@timeout^0,c
  2046  001850  EC20  F018         	call	_tc_tecla	;wreg free
  2047  001854  0F30               	addlw	48
  2048  001856  0101               	movlb	1	; () banked
  2049  001858  6F8A               	movwf	esvaziar_tanque@tmp& (0+255),b
  2050  00185A                     
  2051                           ; BSR set to: 1
  2052                           ;esvaziar.c: 30:         (*(volatile __near unsigned char*)0xF95) = 0x00;
  2053  00185A  0E00               	movlw	0
  2054  00185C  6E95               	movwf	149,c	;volatile
  2055  00185E                     
  2056                           ; BSR set to: 1
  2057                           ;esvaziar.c: 31:         lcd_dat(tmp);
  2058  00185E  518A               	movf	esvaziar_tanque@tmp& (0+255),w,b
  2059  001860  ECA8  F022         	call	_lcd_dat
  2060  001864                     
  2061                           ;esvaziar.c: 32:         if (tmp >= 0x3C) {
  2062  001864  0E3B               	movlw	59
  2063  001866  0101               	movlb	1	; () banked
  2064  001868  658A               	cpfsgt	esvaziar_tanque@tmp& (0+255),b
  2065  00186A  EF39  F00C         	goto	u5731
  2066  00186E  EF3B  F00C         	goto	u5730
  2067  001872                     u5731:
  2068  001872  EF3D  F00C         	goto	l4917
  2069  001876                     u5730:
  2070  001876  EF9F  F00E         	goto	l191
  2071  00187A                     l4917:
  2072                           
  2073                           ; BSR set to: 1
  2074  00187A  5186               	movf	esvaziar_tanque@i& (0+255),w,b
  2075  00187C  1187               	iorwf	(esvaziar_tanque@i+1)& (0+255),w,b
  2076  00187E  A4D8               	btfss	status,2,c
  2077  001880  EF44  F00C         	goto	u5741
  2078  001884  EF46  F00C         	goto	u5740
  2079  001888                     u5741:
  2080  001888  EF62  F00C         	goto	l4921
  2081  00188C                     u5740:
  2082  00188C                     
  2083                           ; BSR set to: 1
  2084                           ;esvaziar.c: 35:             num[i] = (tmp - '0')*10;
  2085  00188C  0ED0               	movlw	208
  2086  00188E  258A               	addwf	esvaziar_tanque@tmp& (0+255),w,b
  2087  001890  6E01               	movwf	___wmul@multiplier^0,c
  2088  001892  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2089  001894  0EFF               	movlw	255
  2090  001896  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  2091  001898  0E00               	movlw	0
  2092  00189A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2093  00189C  0E0A               	movlw	10
  2094  00189E  6E03               	movwf	___wmul@multiplicand^0,c
  2095  0018A0  ECD2  F022         	call	___wmul	;wreg free
  2096  0018A4  90D8               	bcf	status,0,c
  2097  0018A6  0101               	movlb	1	; () banked
  2098  0018A8  3586               	rlcf	esvaziar_tanque@i& (0+255),w,b
  2099  0018AA  6ED9               	movwf	fsr2l,c
  2100  0018AC  3587               	rlcf	(esvaziar_tanque@i+1)& (0+255),w,b
  2101  0018AE  6EDA               	movwf	fsr2h,c
  2102  0018B0  0E7A               	movlw	low esvaziar_tanque@num
  2103  0018B2  26D9               	addwf	fsr2l,f,c
  2104  0018B4  0E01               	movlw	high esvaziar_tanque@num
  2105  0018B6  22DA               	addwfc	fsr2h,f,c
  2106  0018B8  C001  FFDE         	movff	?___wmul,postinc2
  2107  0018BC  C002  FFDD         	movff	?___wmul+1,postdec2
  2108                           
  2109                           ;esvaziar.c: 36:         } else {
  2110  0018C0  EF7E  F00C         	goto	l4923
  2111  0018C4                     l4921:
  2112                           
  2113                           ; BSR set to: 1
  2114                           ;esvaziar.c: 37:             num[i] = (tmp - '0');
  2115  0018C4  0ED0               	movlw	208
  2116  0018C6  0100               	movlb	0	; () banked
  2117  0018C8  6FDC               	movwf	??_esvaziar_tanque& (0+255),b
  2118  0018CA  0EFF               	movlw	255
  2119  0018CC  6FDD               	movwf	(??_esvaziar_tanque+1)& (0+255),b
  2120  0018CE  0101               	movlb	1	; () banked
  2121  0018D0  518A               	movf	esvaziar_tanque@tmp& (0+255),w,b
  2122  0018D2  0100               	movlb	0	; () banked
  2123  0018D4  6FDE               	movwf	(??_esvaziar_tanque+2)& (0+255),b
  2124  0018D6  6BDF               	clrf	(??_esvaziar_tanque+3)& (0+255),b
  2125  0018D8  51DC               	movf	??_esvaziar_tanque& (0+255),w,b
  2126  0018DA  27DE               	addwf	(??_esvaziar_tanque+2)& (0+255),f,b
  2127  0018DC  51DD               	movf	(??_esvaziar_tanque+1)& (0+255),w,b
  2128  0018DE  23DF               	addwfc	(??_esvaziar_tanque+3)& (0+255),f,b
  2129  0018E0  90D8               	bcf	status,0,c
  2130  0018E2  0101               	movlb	1	; () banked
  2131  0018E4  3586               	rlcf	esvaziar_tanque@i& (0+255),w,b
  2132  0018E6  6ED9               	movwf	fsr2l,c
  2133  0018E8  3587               	rlcf	(esvaziar_tanque@i+1)& (0+255),w,b
  2134  0018EA  6EDA               	movwf	fsr2h,c
  2135  0018EC  0E7A               	movlw	low esvaziar_tanque@num
  2136  0018EE  26D9               	addwf	fsr2l,f,c
  2137  0018F0  0E01               	movlw	high esvaziar_tanque@num
  2138  0018F2  22DA               	addwfc	fsr2h,f,c
  2139  0018F4  C0DE  FFDE         	movff	??_esvaziar_tanque+2,postinc2
  2140  0018F8  C0DF  FFDD         	movff	??_esvaziar_tanque+3,postdec2
  2141  0018FC                     l4923:
  2142                           
  2143                           ; BSR set to: 1
  2144                           ;esvaziar.c: 39:         i++;
  2145  0018FC  4B86               	infsnz	esvaziar_tanque@i& (0+255),f,b
  2146  0018FE  2B87               	incf	(esvaziar_tanque@i+1)& (0+255),f,b
  2147  001900                     l4925:
  2148                           
  2149                           ; BSR set to: 1
  2150                           ;esvaziar.c: 27:     while (i != 2) {
  2151  001900  0E02               	movlw	2
  2152  001902  1986               	xorwf	esvaziar_tanque@i& (0+255),w,b
  2153  001904  1187               	iorwf	(esvaziar_tanque@i+1)& (0+255),w,b
  2154  001906  A4D8               	btfss	status,2,c
  2155  001908  EF88  F00C         	goto	u5751
  2156  00190C  EF8A  F00C         	goto	u5750
  2157  001910                     u5751:
  2158  001910  EF22  F00C         	goto	l4903
  2159  001914                     u5750:
  2160  001914                     
  2161                           ; BSR set to: 1
  2162                           ;esvaziar.c: 42:     (*(volatile __near unsigned char*)0xF92) = 0x20;
  2163  001914  0E20               	movlw	32
  2164  001916  6E92               	movwf	146,c	;volatile
  2165                           
  2166                           ;esvaziar.c: 43:     (*(volatile __near unsigned char*)0xF93) = 0x3F;
  2167  001918  0E3F               	movlw	63
  2168  00191A  6E93               	movwf	147,c	;volatile
  2169  00191C                     
  2170                           ; BSR set to: 1
  2171                           ;esvaziar.c: 45:     atraso_ms(500);
  2172  00191C  0E01               	movlw	1
  2173  00191E  6E02               	movwf	(atraso_ms@t+1)^0,c
  2174  001920  0EF4               	movlw	244
  2175  001922  6E01               	movwf	atraso_ms@t^0,c
  2176  001924  EC3B  F020         	call	_atraso_ms	;wreg free
  2177  001928                     
  2178                           ;esvaziar.c: 46:     lcd_cmd(0x01);
  2179  001928  0E01               	movlw	1
  2180  00192A  ECBD  F022         	call	_lcd_cmd
  2181  00192E                     
  2182                           ;esvaziar.c: 48:     decremento = num[0] + num[1];
  2183  00192E  0101               	movlb	1	; () banked
  2184  001930  517A               	movf	esvaziar_tanque@num& (0+255),w,b
  2185  001932  257C               	addwf	(esvaziar_tanque@num+2)& (0+255),w,b
  2186  001934  6F80               	movwf	esvaziar_tanque@decremento& (0+255),b
  2187  001936  517B               	movf	(esvaziar_tanque@num+1)& (0+255),w,b
  2188  001938  217D               	addwfc	(esvaziar_tanque@num+3)& (0+255),w,b
  2189  00193A  6F81               	movwf	(esvaziar_tanque@decremento+1)& (0+255),b
  2190  00193C                     
  2191                           ; BSR set to: 1
  2192                           ;esvaziar.c: 50:     if (*vol - decremento < 0) {
  2193  00193C  C07D  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  2194  001940  C07E  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  2195  001944  CFDE F038          	movff	postinc2,___flsub@b
  2196  001948  CFDE F039          	movff	postinc2,___flsub@b+1
  2197  00194C  CFDE F03A          	movff	postinc2,___flsub@b+2
  2198  001950  CFDE F03B          	movff	postinc2,___flsub@b+3
  2199  001954  C180  F001         	movff	esvaziar_tanque@decremento,___xxtofl@val
  2200  001958  C181  F002         	movff	esvaziar_tanque@decremento+1,___xxtofl@val+1
  2201  00195C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2202  00195E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2203  001960  0E00               	movlw	0
  2204  001962  EC05  F019         	call	___xxtofl
  2205  001966  C001  F03C         	movff	?___xxtofl,___flsub@a
  2206  00196A  C002  F03D         	movff	?___xxtofl+1,___flsub@a+1
  2207  00196E  C003  F03E         	movff	?___xxtofl+2,___flsub@a+2
  2208  001972  C004  F03F         	movff	?___xxtofl+3,___flsub@a+3
  2209  001976  ECDF  F021         	call	___flsub	;wreg free
  2210  00197A  BE3B               	btfsc	(?___flsub+3)^0,7,c
  2211  00197C  EFC4  F00C         	goto	u5760
  2212  001980  EFC2  F00C         	goto	u5761
  2213  001984                     u5761:
  2214  001984  EFDC  F00C         	goto	l4945
  2215  001988                     u5760:
  2216  001988                     
  2217                           ;esvaziar.c: 53:         lcd_cmd(0x01);
  2218  001988  0E01               	movlw	1
  2219  00198A  ECBD  F022         	call	_lcd_cmd
  2220                           
  2221                           ;esvaziar.c: 54:         lcd_cmd(0x80);
  2222  00198E  0E80               	movlw	128
  2223  001990  ECBD  F022         	call	_lcd_cmd
  2224  001994                     
  2225                           ;esvaziar.c: 55:         lcd_str("ERRO: vol < 0");
  2226  001994  0E52               	movlw	low STR_20
  2227  001996  6E08               	movwf	lcd_str@str^0,c
  2228  001998  0E06               	movlw	high STR_20
  2229  00199A  6E09               	movwf	(lcd_str@str+1)^0,c
  2230  00199C  EC8F  F01F         	call	_lcd_str	;wreg free
  2231  0019A0                     
  2232                           ;esvaziar.c: 56:         lcd_cmd(0xC0);
  2233  0019A0  0EC0               	movlw	192
  2234  0019A2  ECBD  F022         	call	_lcd_cmd
  2235                           
  2236                           ;esvaziar.c: 57:         lcd_str("# - Voltar");
  2237  0019A6  0E63               	movlw	low (STR_17+3)
  2238  0019A8  6E08               	movwf	lcd_str@str^0,c
  2239  0019AA  0E06               	movlw	high (STR_17+3)
  2240  0019AC  6E09               	movwf	(lcd_str@str+1)^0,c
  2241  0019AE  EC8F  F01F         	call	_lcd_str	;wreg free
  2242  0019B2                     
  2243                           ;esvaziar.c: 60:         (((*(volatile __near unsigned char*)0xF94)) |= (1<<1));
  2244  0019B2  8294               	bsf	148,1,c	;volatile
  2245                           
  2246                           ;esvaziar.c: 63:     } else {
  2247  0019B4  EF87  F00E         	goto	l5041
  2248  0019B8                     l4945:
  2249                           
  2250                           ;esvaziar.c: 65:         *vol -= decremento;
  2251  0019B8  C07D  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  2252  0019BC  C07E  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  2253  0019C0  CFDE F038          	movff	postinc2,___flsub@b
  2254  0019C4  CFDE F039          	movff	postinc2,___flsub@b+1
  2255  0019C8  CFDE F03A          	movff	postinc2,___flsub@b+2
  2256  0019CC  CFDE F03B          	movff	postinc2,___flsub@b+3
  2257  0019D0  C180  F001         	movff	esvaziar_tanque@decremento,___xxtofl@val
  2258  0019D4  C181  F002         	movff	esvaziar_tanque@decremento+1,___xxtofl@val+1
  2259  0019D8  6A03               	clrf	(___xxtofl@val+2)^0,c
  2260  0019DA  6A04               	clrf	(___xxtofl@val+3)^0,c
  2261  0019DC  0E00               	movlw	0
  2262  0019DE  EC05  F019         	call	___xxtofl
  2263  0019E2  C001  F03C         	movff	?___xxtofl,___flsub@a
  2264  0019E6  C002  F03D         	movff	?___xxtofl+1,___flsub@a+1
  2265  0019EA  C003  F03E         	movff	?___xxtofl+2,___flsub@a+2
  2266  0019EE  C004  F03F         	movff	?___xxtofl+3,___flsub@a+3
  2267  0019F2  ECDF  F021         	call	___flsub	;wreg free
  2268  0019F6  C07D  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  2269  0019FA  C07E  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  2270  0019FE  C038  FFDE         	movff	?___flsub,postinc2
  2271  001A02  C039  FFDE         	movff	?___flsub+1,postinc2
  2272  001A06  C03A  FFDE         	movff	?___flsub+2,postinc2
  2273  001A0A  C03B  FFDE         	movff	?___flsub+3,postinc2
  2274  001A0E                     
  2275                           ;esvaziar.c: 66:         char y[8];;esvaziar.c: 67:         sprintf(y, "%.1f", *vol);
  2276  001A0E  0E6C               	movlw	low esvaziar_tanque@y
  2277  001A10  0100               	movlb	0	; () banked
  2278  001A12  6FCA               	movwf	sprintf@s& (0+255),b
  2279  001A14  0E01               	movlw	high esvaziar_tanque@y
  2280  001A16  6FCB               	movwf	(sprintf@s+1)& (0+255),b
  2281  001A18  0ED4               	movlw	low STR_12
  2282  001A1A  6FCC               	movwf	sprintf@fmt& (0+255),b
  2283  001A1C  0E06               	movlw	high STR_12
  2284  001A1E  6FCD               	movwf	(sprintf@fmt+1)& (0+255),b
  2285  001A20  C07D  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  2286  001A24  C07E  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  2287  001A28  CFDE F0CE          	movff	postinc2,?_sprintf+4
  2288  001A2C  CFDE F0CF          	movff	postinc2,?_sprintf+5
  2289  001A30  CFDE F0D0          	movff	postinc2,?_sprintf+6
  2290  001A34  CFDE F0D1          	movff	postinc2,?_sprintf+7
  2291  001A38  EC8D  F021         	call	_sprintf	;wreg free
  2292  001A3C                     
  2293                           ;esvaziar.c: 68:         lcd_str(y);
  2294  001A3C  0E6C               	movlw	low esvaziar_tanque@y
  2295  001A3E  6E08               	movwf	lcd_str@str^0,c
  2296  001A40  0E01               	movlw	high esvaziar_tanque@y
  2297  001A42  6E09               	movwf	(lcd_str@str+1)^0,c
  2298  001A44  EC8F  F01F         	call	_lcd_str	;wreg free
  2299  001A48                     
  2300                           ;esvaziar.c: 69:         lcd_str(" L");
  2301  001A48  0EEC               	movlw	low STR_13
  2302  001A4A  6E08               	movwf	lcd_str@str^0,c
  2303  001A4C  0E06               	movlw	high STR_13
  2304  001A4E  6E09               	movwf	(lcd_str@str+1)^0,c
  2305  001A50  EC8F  F01F         	call	_lcd_str	;wreg free
  2306  001A54                     
  2307                           ;esvaziar.c: 70:         atraso_ms(500);
  2308  001A54  0E01               	movlw	1
  2309  001A56  6E02               	movwf	(atraso_ms@t+1)^0,c
  2310  001A58  0EF4               	movlw	244
  2311  001A5A  6E01               	movwf	atraso_ms@t^0,c
  2312  001A5C  EC3B  F020         	call	_atraso_ms	;wreg free
  2313  001A60                     
  2314                           ;esvaziar.c: 73:         unsigned int i = 0, potencia = 100, t1, t2, tempo = decremento 
      +                          / 2;
  2315  001A60  0E00               	movlw	0
  2316  001A62  0101               	movlb	1	; () banked
  2317  001A64  6F79               	movwf	(esvaziar_tanque@i_181+1)& (0+255),b
  2318  001A66  0E00               	movlw	0
  2319  001A68  6F78               	movwf	esvaziar_tanque@i_181& (0+255),b
  2320  001A6A                     
  2321                           ; BSR set to: 1
  2322  001A6A  90D8               	bcf	status,0,c
  2323  001A6C  3181               	rrcf	(esvaziar_tanque@decremento+1)& (0+255),w,b
  2324  001A6E  0100               	movlb	0	; () banked
  2325  001A70  6FDC               	movwf	??_esvaziar_tanque& (0+255),b
  2326  001A72  0101               	movlb	1	; () banked
  2327  001A74  3180               	rrcf	esvaziar_tanque@decremento& (0+255),w,b
  2328  001A76  6F82               	movwf	esvaziar_tanque@tempo& (0+255),b
  2329  001A78  C0DC  F183         	movff	??_esvaziar_tanque,esvaziar_tanque@tempo+1
  2330  001A7C                     
  2331                           ; BSR set to: 1
  2332                           ;esvaziar.c: 74:         float porcento;;esvaziar.c: 75:         unsigned int numeros[10
      +                          ] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D,
  2333  001A7C  EE21  F08B         	lfsr	2,esvaziar_tanque@F356
  2334  001A80  EE11  F058         	lfsr	1,esvaziar_tanque@numeros
  2335  001A84  0E13               	movlw	19
  2336  001A86                     u5771:
  2337  001A86  CFDB FFE3          	movff	plusw2,plusw1
  2338  001A8A  06E8               	decf	wreg,f,c
  2339  001A8C  E2FC               	bc	u5771
  2340  001A8E                     
  2341                           ; BSR set to: 1
  2342                           ;esvaziar.c: 78:         (*(volatile __near unsigned char*)0xF92) = 0x00;
  2343  001A8E  0E00               	movlw	0
  2344  001A90  6E92               	movwf	146,c	;volatile
  2345  001A92                     
  2346                           ; BSR set to: 1
  2347                           ;esvaziar.c: 80:         lcd_cmd(0x01);
  2348  001A92  0E01               	movlw	1
  2349  001A94  ECBD  F022         	call	_lcd_cmd
  2350  001A98                     
  2351                           ;esvaziar.c: 81:         lcd_cmd(0x80);
  2352  001A98  0E80               	movlw	128
  2353  001A9A  ECBD  F022         	call	_lcd_cmd
  2354  001A9E                     
  2355                           ;esvaziar.c: 82:         lcd_str("Esvaziando...");
  2356  001A9E  0E44               	movlw	low STR_24
  2357  001AA0  6E08               	movwf	lcd_str@str^0,c
  2358  001AA2  0E06               	movlw	high STR_24
  2359  001AA4  6E09               	movwf	(lcd_str@str+1)^0,c
  2360  001AA6  EC8F  F01F         	call	_lcd_str	;wreg free
  2361  001AAA                     
  2362                           ;esvaziar.c: 83:         lcd_cmd(0xC0);
  2363  001AAA  0EC0               	movlw	192
  2364  001AAC  ECBD  F022         	call	_lcd_cmd
  2365  001AB0                     
  2366                           ;esvaziar.c: 84:         lcd_str("Aguarde!");
  2367  001AB0  0EC3               	movlw	low STR_15
  2368  001AB2  6E08               	movwf	lcd_str@str^0,c
  2369  001AB4  0E06               	movlw	high STR_15
  2370  001AB6  6E09               	movwf	(lcd_str@str+1)^0,c
  2371  001AB8  EC8F  F01F         	call	_lcd_str	;wreg free
  2372  001ABC                     
  2373                           ;esvaziar.c: 86:         pwmInit();
  2374  001ABC  ECE5  F022         	call	_pwmInit	;wreg free
  2375  001AC0                     
  2376                           ;esvaziar.c: 89:         t1 = tempo / 10;
  2377  001AC0  C182  F001         	movff	esvaziar_tanque@tempo,___lwdiv@dividend
  2378  001AC4  C183  F002         	movff	esvaziar_tanque@tempo+1,___lwdiv@dividend+1
  2379  001AC8  0E00               	movlw	0
  2380  001ACA  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2381  001ACC  0E0A               	movlw	10
  2382  001ACE  6E03               	movwf	___lwdiv@divisor^0,c
  2383  001AD0  ECCB  F01F         	call	___lwdiv	;wreg free
  2384  001AD4  C001  F184         	movff	?___lwdiv,esvaziar_tanque@t1
  2385  001AD8  C002  F185         	movff	?___lwdiv+1,esvaziar_tanque@t1+1
  2386  001ADC                     
  2387                           ;esvaziar.c: 90:         t2 = tempo % 10;
  2388  001ADC  C182  F001         	movff	esvaziar_tanque@tempo,___lwmod@dividend
  2389  001AE0  C183  F002         	movff	esvaziar_tanque@tempo+1,___lwmod@dividend+1
  2390  001AE4  0E00               	movlw	0
  2391  001AE6  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2392  001AE8  0E0A               	movlw	10
  2393  001AEA  6E03               	movwf	___lwmod@divisor^0,c
  2394  001AEC  EC6D  F020         	call	___lwmod	;wreg free
  2395  001AF0  C001  F188         	movff	?___lwmod,esvaziar_tanque@t2
  2396  001AF4  C002  F189         	movff	?___lwmod+1,esvaziar_tanque@t2+1
  2397                           
  2398                           ;esvaziar.c: 91:         while ((t1 != 0) || (t2 != 0)) {
  2399  001AF8  EF59  F00E         	goto	l5019
  2400  001AFC                     l4981:
  2401                           
  2402                           ; BSR set to: 1
  2403                           ;esvaziar.c: 96:             porcento = ((((float) t1 * 10.0) + (float) t2) / (float) te
      +                          mpo);
  2404  001AFC  C188  F001         	movff	esvaziar_tanque@t2,___xxtofl@val
  2405  001B00  C189  F002         	movff	esvaziar_tanque@t2+1,___xxtofl@val+1
  2406  001B04  6A03               	clrf	(___xxtofl@val+2)^0,c
  2407  001B06  6A04               	clrf	(___xxtofl@val+3)^0,c
  2408  001B08  0E00               	movlw	0
  2409  001B0A  EC05  F019         	call	___xxtofl
  2410  001B0E  C001  F02C         	movff	?___xxtofl,___fladd@a
  2411  001B12  C002  F02D         	movff	?___xxtofl+1,___fladd@a+1
  2412  001B16  C003  F02E         	movff	?___xxtofl+2,___fladd@a+2
  2413  001B1A  C004  F02F         	movff	?___xxtofl+3,___fladd@a+3
  2414  001B1E  0E00               	movlw	0
  2415  001B20  6E13               	movwf	___flmul@a^0,c
  2416  001B22  0E00               	movlw	0
  2417  001B24  6E14               	movwf	(___flmul@a+1)^0,c
  2418  001B26  0E20               	movlw	32
  2419  001B28  6E15               	movwf	(___flmul@a+2)^0,c
  2420  001B2A  0E41               	movlw	65
  2421  001B2C  6E16               	movwf	(___flmul@a+3)^0,c
  2422  001B2E  C184  F001         	movff	esvaziar_tanque@t1,___xxtofl@val
  2423  001B32  C185  F002         	movff	esvaziar_tanque@t1+1,___xxtofl@val+1
  2424  001B36  6A03               	clrf	(___xxtofl@val+2)^0,c
  2425  001B38  6A04               	clrf	(___xxtofl@val+3)^0,c
  2426  001B3A  0E00               	movlw	0
  2427  001B3C  EC05  F019         	call	___xxtofl
  2428  001B40  C001  F00F         	movff	?___xxtofl,___flmul@b
  2429  001B44  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  2430  001B48  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  2431  001B4C  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  2432  001B50  EC35  F013         	call	___flmul	;wreg free
  2433  001B54  C00F  F028         	movff	?___flmul,___fladd@b
  2434  001B58  C010  F029         	movff	?___flmul+1,___fladd@b+1
  2435  001B5C  C011  F02A         	movff	?___flmul+2,___fladd@b+2
  2436  001B60  C012  F02B         	movff	?___flmul+3,___fladd@b+3
  2437  001B64  ECA0  F00E         	call	___fladd	;wreg free
  2438  001B68  C028  F038         	movff	?___fladd,___fldiv@b
  2439  001B6C  C029  F039         	movff	?___fladd+1,___fldiv@b+1
  2440  001B70  C02A  F03A         	movff	?___fladd+2,___fldiv@b+2
  2441  001B74  C02B  F03B         	movff	?___fladd+3,___fldiv@b+3
  2442  001B78  C182  F001         	movff	esvaziar_tanque@tempo,___xxtofl@val
  2443  001B7C  C183  F002         	movff	esvaziar_tanque@tempo+1,___xxtofl@val+1
  2444  001B80  6A03               	clrf	(___xxtofl@val+2)^0,c
  2445  001B82  6A04               	clrf	(___xxtofl@val+3)^0,c
  2446  001B84  0E00               	movlw	0
  2447  001B86  EC05  F019         	call	___xxtofl
  2448  001B8A  C001  F03C         	movff	?___xxtofl,___fldiv@a
  2449  001B8E  C002  F03D         	movff	?___xxtofl+1,___fldiv@a+1
  2450  001B92  C003  F03E         	movff	?___xxtofl+2,___fldiv@a+2
  2451  001B96  C004  F03F         	movff	?___xxtofl+3,___fldiv@a+3
  2452  001B9A  EC4A  F015         	call	___fldiv	;wreg free
  2453  001B9E  C038  F174         	movff	?___fldiv,esvaziar_tanque@porcento
  2454  001BA2  C039  F175         	movff	?___fldiv+1,esvaziar_tanque@porcento+1
  2455  001BA6  C03A  F176         	movff	?___fldiv+2,esvaziar_tanque@porcento+2
  2456  001BAA  C03B  F177         	movff	?___fldiv+3,esvaziar_tanque@porcento+3
  2457                           
  2458                           ;esvaziar.c: 97:             potencia = 100 * porcento;
  2459  001BAE  0E00               	movlw	0
  2460  001BB0  6E13               	movwf	___flmul@a^0,c
  2461  001BB2  0E00               	movlw	0
  2462  001BB4  6E14               	movwf	(___flmul@a+1)^0,c
  2463  001BB6  0EC8               	movlw	200
  2464  001BB8  6E15               	movwf	(___flmul@a+2)^0,c
  2465  001BBA  0E42               	movlw	66
  2466  001BBC  6E16               	movwf	(___flmul@a+3)^0,c
  2467  001BBE  C174  F00F         	movff	esvaziar_tanque@porcento,___flmul@b
  2468  001BC2  C175  F010         	movff	esvaziar_tanque@porcento+1,___flmul@b+1
  2469  001BC6  C176  F011         	movff	esvaziar_tanque@porcento+2,___flmul@b+2
  2470  001BCA  C177  F012         	movff	esvaziar_tanque@porcento+3,___flmul@b+3
  2471  001BCE  EC35  F013         	call	___flmul	;wreg free
  2472  001BD2  C00F  F028         	movff	?___flmul,___fltol@f1
  2473  001BD6  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  2474  001BDA  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  2475  001BDE  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  2476  001BE2  EC5C  F01B         	call	___fltol	;wreg free
  2477  001BE6  C028  F17E         	movff	?___fltol,esvaziar_tanque@potencia
  2478  001BEA  C029  F17F         	movff	?___fltol+1,esvaziar_tanque@potencia+1
  2479  001BEE                     
  2480                           ;esvaziar.c: 98:             if (potencia == 100) {
  2481  001BEE  0E64               	movlw	100
  2482  001BF0  0101               	movlb	1	; () banked
  2483  001BF2  197E               	xorwf	esvaziar_tanque@potencia& (0+255),w,b
  2484  001BF4  117F               	iorwf	(esvaziar_tanque@potencia+1)& (0+255),w,b
  2485  001BF6  A4D8               	btfss	status,2,c
  2486  001BF8  EF00  F00E         	goto	u5781
  2487  001BFC  EF02  F00E         	goto	u5780
  2488  001C00                     u5781:
  2489  001C00  EF06  F00E         	goto	l4987
  2490  001C04                     u5780:
  2491  001C04                     
  2492                           ; BSR set to: 1
  2493                           ;esvaziar.c: 99:                 potencia = 99;
  2494  001C04  0E00               	movlw	0
  2495  001C06  6F7F               	movwf	(esvaziar_tanque@potencia+1)& (0+255),b
  2496  001C08  0E63               	movlw	99
  2497  001C0A  6F7E               	movwf	esvaziar_tanque@potencia& (0+255),b
  2498  001C0C                     l4987:
  2499                           
  2500                           ; BSR set to: 1
  2501                           ;esvaziar.c: 101:             pwmSet1(potencia);
  2502  001C0C  517E               	movf	esvaziar_tanque@potencia& (0+255),w,b
  2503  001C0E  EC05  F020         	call	_pwmSet1
  2504  001C12                     
  2505                           ;esvaziar.c: 104:             (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  2506  001C12  9A80               	bcf	128,5,c	;volatile
  2507  001C14                     
  2508                           ;esvaziar.c: 105:             (((*(volatile __near unsigned char*)0xF80)) |= (1<<4));
  2509  001C14  8880               	bsf	128,4,c	;volatile
  2510  001C16                     
  2511                           ;esvaziar.c: 106:             (*(volatile __near unsigned char*)0xF83) = numeros[t1];
  2512  001C16  90D8               	bcf	status,0,c
  2513  001C18  0101               	movlb	1	; () banked
  2514  001C1A  3584               	rlcf	esvaziar_tanque@t1& (0+255),w,b
  2515  001C1C  6ED9               	movwf	fsr2l,c
  2516  001C1E  3585               	rlcf	(esvaziar_tanque@t1+1)& (0+255),w,b
  2517  001C20  6EDA               	movwf	fsr2h,c
  2518  001C22  0E58               	movlw	low esvaziar_tanque@numeros
  2519  001C24  26D9               	addwf	fsr2l,f,c
  2520  001C26  0E01               	movlw	high esvaziar_tanque@numeros
  2521  001C28  22DA               	addwfc	fsr2h,f,c
  2522  001C2A  50DF               	movf	indf2,w,c
  2523  001C2C  6E83               	movwf	131,c	;volatile
  2524  001C2E                     
  2525                           ; BSR set to: 1
  2526                           ;esvaziar.c: 107:             atraso_ms(5);
  2527  001C2E  0E00               	movlw	0
  2528  001C30  6E02               	movwf	(atraso_ms@t+1)^0,c
  2529  001C32  0E05               	movlw	5
  2530  001C34  6E01               	movwf	atraso_ms@t^0,c
  2531  001C36  EC3B  F020         	call	_atraso_ms	;wreg free
  2532  001C3A                     
  2533                           ;esvaziar.c: 108:             (((*(volatile __near unsigned char*)0xF80)) |= (1<<5));
  2534  001C3A  8A80               	bsf	128,5,c	;volatile
  2535  001C3C                     
  2536                           ;esvaziar.c: 109:             (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<4));
  2537  001C3C  9880               	bcf	128,4,c	;volatile
  2538  001C3E                     
  2539                           ;esvaziar.c: 110:             (*(volatile __near unsigned char*)0xF83) = numeros[t2];
  2540  001C3E  90D8               	bcf	status,0,c
  2541  001C40  0101               	movlb	1	; () banked
  2542  001C42  3588               	rlcf	esvaziar_tanque@t2& (0+255),w,b
  2543  001C44  6ED9               	movwf	fsr2l,c
  2544  001C46  3589               	rlcf	(esvaziar_tanque@t2+1)& (0+255),w,b
  2545  001C48  6EDA               	movwf	fsr2h,c
  2546  001C4A  0E58               	movlw	low esvaziar_tanque@numeros
  2547  001C4C  26D9               	addwf	fsr2l,f,c
  2548  001C4E  0E01               	movlw	high esvaziar_tanque@numeros
  2549  001C50  22DA               	addwfc	fsr2h,f,c
  2550  001C52  50DF               	movf	indf2,w,c
  2551  001C54  6E83               	movwf	131,c	;volatile
  2552  001C56                     
  2553                           ; BSR set to: 1
  2554                           ;esvaziar.c: 111:             atraso_ms(5);
  2555  001C56  0E00               	movlw	0
  2556  001C58  6E02               	movwf	(atraso_ms@t+1)^0,c
  2557  001C5A  0E05               	movlw	5
  2558  001C5C  6E01               	movwf	atraso_ms@t^0,c
  2559  001C5E  EC3B  F020         	call	_atraso_ms	;wreg free
  2560  001C62                     
  2561                           ;esvaziar.c: 113:             if (i == 40) {
  2562  001C62  0E28               	movlw	40
  2563  001C64  0101               	movlb	1	; () banked
  2564  001C66  1978               	xorwf	esvaziar_tanque@i_181& (0+255),w,b
  2565  001C68  1179               	iorwf	(esvaziar_tanque@i_181+1)& (0+255),w,b
  2566  001C6A  A4D8               	btfss	status,2,c
  2567  001C6C  EF3A  F00E         	goto	u5791
  2568  001C70  EF3C  F00E         	goto	u5790
  2569  001C74                     u5791:
  2570  001C74  EF57  F00E         	goto	l5017
  2571  001C78                     u5790:
  2572  001C78                     
  2573                           ; BSR set to: 1
  2574                           ;esvaziar.c: 114:                 i = 0;
  2575  001C78  0E00               	movlw	0
  2576  001C7A  6F79               	movwf	(esvaziar_tanque@i_181+1)& (0+255),b
  2577  001C7C  0E00               	movlw	0
  2578  001C7E  6F78               	movwf	esvaziar_tanque@i_181& (0+255),b
  2579  001C80                     
  2580                           ; BSR set to: 1
  2581                           ;esvaziar.c: 115:                 if (t2 == 0) {
  2582  001C80  5188               	movf	esvaziar_tanque@t2& (0+255),w,b
  2583  001C82  1189               	iorwf	(esvaziar_tanque@t2+1)& (0+255),w,b
  2584  001C84  A4D8               	btfss	status,2,c
  2585  001C86  EF47  F00E         	goto	u5801
  2586  001C8A  EF49  F00E         	goto	u5800
  2587  001C8E                     u5801:
  2588  001C8E  EF52  F00E         	goto	l5015
  2589  001C92                     u5800:
  2590  001C92                     
  2591                           ; BSR set to: 1
  2592                           ;esvaziar.c: 116:                     t1--;
  2593  001C92  0784               	decf	esvaziar_tanque@t1& (0+255),f,b
  2594  001C94  A0D8               	btfss	status,0,c
  2595  001C96  0785               	decf	(esvaziar_tanque@t1+1)& (0+255),f,b
  2596  001C98                     
  2597                           ; BSR set to: 1
  2598                           ;esvaziar.c: 117:                     t2 = 9;
  2599  001C98  0E00               	movlw	0
  2600  001C9A  6F89               	movwf	(esvaziar_tanque@t2+1)& (0+255),b
  2601  001C9C  0E09               	movlw	9
  2602  001C9E  6F88               	movwf	esvaziar_tanque@t2& (0+255),b
  2603                           
  2604                           ;esvaziar.c: 118:                 } else {
  2605  001CA0  EF59  F00E         	goto	l5019
  2606  001CA4                     l5015:
  2607                           
  2608                           ; BSR set to: 1
  2609                           ;esvaziar.c: 119:                     t2--;
  2610  001CA4  0788               	decf	esvaziar_tanque@t2& (0+255),f,b
  2611  001CA6  A0D8               	btfss	status,0,c
  2612  001CA8  0789               	decf	(esvaziar_tanque@t2+1)& (0+255),f,b
  2613  001CAA  EF59  F00E         	goto	l5019
  2614  001CAE                     l5017:
  2615                           
  2616                           ; BSR set to: 1
  2617                           ;esvaziar.c: 122:                 i++;
  2618  001CAE  4B78               	infsnz	esvaziar_tanque@i_181& (0+255),f,b
  2619  001CB0  2B79               	incf	(esvaziar_tanque@i_181+1)& (0+255),f,b
  2620  001CB2                     l5019:
  2621                           
  2622                           ;esvaziar.c: 91:         while ((t1 != 0) || (t2 != 0)) {
  2623  001CB2  0101               	movlb	1	; () banked
  2624  001CB4  5184               	movf	esvaziar_tanque@t1& (0+255),w,b
  2625  001CB6  1185               	iorwf	(esvaziar_tanque@t1+1)& (0+255),w,b
  2626  001CB8  A4D8               	btfss	status,2,c
  2627  001CBA  EF61  F00E         	goto	u5811
  2628  001CBE  EF63  F00E         	goto	u5810
  2629  001CC2                     u5811:
  2630  001CC2  EF7E  F00D         	goto	l4981
  2631  001CC6                     u5810:
  2632  001CC6                     
  2633                           ; BSR set to: 1
  2634  001CC6  5188               	movf	esvaziar_tanque@t2& (0+255),w,b
  2635  001CC8  1189               	iorwf	(esvaziar_tanque@t2+1)& (0+255),w,b
  2636  001CCA  A4D8               	btfss	status,2,c
  2637  001CCC  EF6A  F00E         	goto	u5821
  2638  001CD0  EF6C  F00E         	goto	u5820
  2639  001CD4                     u5821:
  2640  001CD4  EF7E  F00D         	goto	l4981
  2641  001CD8                     u5820:
  2642  001CD8                     
  2643                           ; BSR set to: 1
  2644                           ;esvaziar.c: 125:         pwmSet1(0);
  2645  001CD8  0E00               	movlw	0
  2646  001CDA  EC05  F020         	call	_pwmSet1
  2647  001CDE                     
  2648                           ;esvaziar.c: 128:         (((*(volatile __near unsigned char*)0xF94)) |= (1<<1));
  2649  001CDE  8294               	bsf	148,1,c	;volatile
  2650  001CE0                     
  2651                           ;esvaziar.c: 131:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  2652  001CE0  9A80               	bcf	128,5,c	;volatile
  2653  001CE2                     
  2654                           ;esvaziar.c: 132:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<4));
  2655  001CE2  9880               	bcf	128,4,c	;volatile
  2656  001CE4                     
  2657                           ;esvaziar.c: 135:         lcd_cmd(0x01);
  2658  001CE4  0E01               	movlw	1
  2659  001CE6  ECBD  F022         	call	_lcd_cmd
  2660  001CEA                     
  2661                           ;esvaziar.c: 136:         lcd_cmd(0x80);
  2662  001CEA  0E80               	movlw	128
  2663  001CEC  ECBD  F022         	call	_lcd_cmd
  2664  001CF0                     
  2665                           ;esvaziar.c: 137:         lcd_str("    SUCESSO!");
  2666  001CF0  0E8A               	movlw	low STR_16
  2667  001CF2  6E08               	movwf	lcd_str@str^0,c
  2668  001CF4  0E06               	movlw	high STR_16
  2669  001CF6  6E09               	movwf	(lcd_str@str+1)^0,c
  2670  001CF8  EC8F  F01F         	call	_lcd_str	;wreg free
  2671  001CFC                     
  2672                           ;esvaziar.c: 138:         lcd_cmd(0xC0);
  2673  001CFC  0EC0               	movlw	192
  2674  001CFE  ECBD  F022         	call	_lcd_cmd
  2675  001D02                     
  2676                           ;esvaziar.c: 139:         lcd_str("   # - Voltar");
  2677  001D02  0E60               	movlw	low STR_17
  2678  001D04  6E08               	movwf	lcd_str@str^0,c
  2679  001D06  0E06               	movlw	high STR_17
  2680  001D08  6E09               	movwf	(lcd_str@str+1)^0,c
  2681  001D0A  EC8F  F01F         	call	_lcd_str	;wreg free
  2682  001D0E                     l5041:
  2683                           
  2684                           ;esvaziar.c: 147:     (*(volatile __near unsigned char*)0xF93) = 0xF8;
  2685  001D0E  0EF8               	movlw	248
  2686  001D10  6E93               	movwf	147,c	;volatile
  2687  001D12                     l5043:
  2688                           
  2689                           ;esvaziar.c: 150:         (*(volatile __near unsigned char*)0xF95) = 0x0F;
  2690  001D12  0E0F               	movlw	15
  2691  001D14  6E95               	movwf	149,c	;volatile
  2692  001D16                     
  2693                           ;esvaziar.c: 151:         tmp = tc_tecla(0) + 0x30;
  2694  001D16  0E00               	movlw	0
  2695  001D18  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  2696  001D1A  0E00               	movlw	0
  2697  001D1C  6E07               	movwf	tc_tecla@timeout^0,c
  2698  001D1E  EC20  F018         	call	_tc_tecla	;wreg free
  2699  001D22  0F30               	addlw	48
  2700  001D24  0101               	movlb	1	; () banked
  2701  001D26  6F8A               	movwf	esvaziar_tanque@tmp& (0+255),b
  2702  001D28                     
  2703                           ; BSR set to: 1
  2704                           ;esvaziar.c: 152:         (*(volatile __near unsigned char*)0xF95) = 0x00;
  2705  001D28  0E00               	movlw	0
  2706  001D2A  6E95               	movwf	149,c	;volatile
  2707  001D2C                     
  2708                           ; BSR set to: 1
  2709                           ;esvaziar.c: 153:         if (tmp >= 0x3C) {
  2710  001D2C  0E3B               	movlw	59
  2711  001D2E  658A               	cpfsgt	esvaziar_tanque@tmp& (0+255),b
  2712  001D30  EF9C  F00E         	goto	u5831
  2713  001D34  EF9E  F00E         	goto	u5830
  2714  001D38                     u5831:
  2715  001D38  EF89  F00E         	goto	l5043
  2716  001D3C                     u5830:
  2717  001D3C                     
  2718                           ; BSR set to: 1
  2719                           ;esvaziar.c: 154:             (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<1));
  2720  001D3C  9294               	bcf	148,1,c	;volatile
  2721  001D3E                     l191:
  2722                           
  2723                           ; BSR set to: 1
  2724  001D3E  0012               	return		;funcret
  2725  001D40                     __end_of_esvaziar_tanque:
  2726                           	callstack 0
  2727                           
  2728 ;; *************** function _encher_tanque *****************
  2729 ;; Defined at:
  2730 ;;		line 9 in file "encher.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;  vol             2  124[COMRAM] PTR 
  2733 ;;		 -> volume(4), 
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;  numeros        20    0[BANK1 ] int [10]
  2736 ;;  y               8   20[BANK1 ] unsigned char [8]
  2737 ;;  porcento        4   28[BANK1 ] float 
  2738 ;;  t2              2   48[BANK1 ] unsigned int 
  2739 ;;  t1              2   44[BANK1 ] unsigned int 
  2740 ;;  tempo           2   42[BANK1 ] unsigned int 
  2741 ;;  potencia        2   38[BANK1 ] unsigned int 
  2742 ;;  i               2   32[BANK1 ] unsigned int 
  2743 ;;  num             4   34[BANK1 ] unsigned int [2]
  2744 ;;  i               2   46[BANK1 ] unsigned int 
  2745 ;;  incremento      2   40[BANK1 ] unsigned int 
  2746 ;;  tmp             1   50[BANK1 ] unsigned char 
  2747 ;; Return value:  Size  Location     Type
  2748 ;;                  1    wreg      void 
  2749 ;; Registers used:
  2750 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2756 ;;      Params:         2       0       0       0       0       0       0
  2757 ;;      Locals:         0       0      51       0       0       0       0
  2758 ;;      Temps:          0       4       0       0       0       0       0
  2759 ;;      Totals:         2       4      51       0       0       0       0
  2760 ;;Total ram usage:       57 bytes
  2761 ;; Hardware stack levels used:    1
  2762 ;; Hardware stack levels required when called:    8
  2763 ;; This function calls:
  2764 ;;		___fladd
  2765 ;;		___fldiv
  2766 ;;		___flge
  2767 ;;		___flmul
  2768 ;;		___fltol
  2769 ;;		___lwdiv
  2770 ;;		___lwmod
  2771 ;;		___wmul
  2772 ;;		___xxtofl
  2773 ;;		_atraso_ms
  2774 ;;		_lcd_cmd
  2775 ;;		_lcd_dat
  2776 ;;		_lcd_str
  2777 ;;		_pwmInit
  2778 ;;		_pwmSet1
  2779 ;;		_sprintf
  2780 ;;		_tc_tecla
  2781 ;; This function is called by:
  2782 ;;		_main
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786                           	psect	text4
  2787  0012A0                     __ptext4:
  2788                           	callstack 0
  2789  0012A0                     _encher_tanque:
  2790                           	callstack 22
  2791  0012A0                     
  2792                           ;encher.c: 12:     lcd_cmd(0x01);
  2793  0012A0  0E01               	movlw	1
  2794  0012A2  ECBD  F022         	call	_lcd_cmd
  2795                           
  2796                           ;encher.c: 13:     lcd_cmd(0x80);
  2797  0012A6  0E80               	movlw	128
  2798  0012A8  ECBD  F022         	call	_lcd_cmd
  2799  0012AC                     
  2800                           ;encher.c: 14:     lcd_str("Quant(L): ");
  2801  0012AC  0EA3               	movlw	low STR_8
  2802  0012AE  6E08               	movwf	lcd_str@str^0,c
  2803  0012B0  0E06               	movlw	high STR_8
  2804  0012B2  6E09               	movwf	(lcd_str@str+1)^0,c
  2805  0012B4  EC8F  F01F         	call	_lcd_str	;wreg free
  2806  0012B8                     
  2807                           ;encher.c: 15:     lcd_cmd(0xC0);
  2808  0012B8  0EC0               	movlw	192
  2809  0012BA  ECBD  F022         	call	_lcd_cmd
  2810                           
  2811                           ;encher.c: 16:     lcd_str("# - Voltar");
  2812  0012BE  0E63               	movlw	low (STR_17+3)
  2813  0012C0  6E08               	movwf	lcd_str@str^0,c
  2814  0012C2  0E06               	movlw	high (STR_17+3)
  2815  0012C4  6E09               	movwf	(lcd_str@str+1)^0,c
  2816  0012C6  EC8F  F01F         	call	_lcd_str	;wreg free
  2817  0012CA                     
  2818                           ;encher.c: 17:     lcd_cmd(0x80 + 10);
  2819  0012CA  0E8A               	movlw	138
  2820  0012CC  ECBD  F022         	call	_lcd_cmd
  2821  0012D0                     
  2822                           ;encher.c: 19:     unsigned int incremento;;encher.c: 21:     unsigned int i = 0;
  2823  0012D0  0E00               	movlw	0
  2824  0012D2  0101               	movlb	1	; () banked
  2825  0012D4  6F87               	movwf	(encher_tanque@i+1)& (0+255),b
  2826  0012D6  0E00               	movlw	0
  2827  0012D8  6F86               	movwf	encher_tanque@i& (0+255),b
  2828  0012DA                     
  2829                           ; BSR set to: 1
  2830                           ;encher.c: 22:     unsigned int num[2];;encher.c: 23:     unsigned char tmp;;encher.c: 2
      +                          5:     (*(volatile __near unsigned char*)0xF93) = 0xF8;
  2831  0012DA  0EF8               	movlw	248
  2832  0012DC  6E93               	movwf	147,c	;volatile
  2833                           
  2834                           ;encher.c: 27:     while (i != 2) {
  2835  0012DE  EFCF  F009         	goto	l4763
  2836  0012E2                     l4741:
  2837                           
  2838                           ; BSR set to: 1
  2839                           ;encher.c: 28:         (*(volatile __near unsigned char*)0xF95) = 0x0F;
  2840  0012E2  0E0F               	movlw	15
  2841  0012E4  6E95               	movwf	149,c	;volatile
  2842  0012E6                     
  2843                           ; BSR set to: 1
  2844                           ;encher.c: 29:         tmp = tc_tecla(0) + 0x30;
  2845  0012E6  0E00               	movlw	0
  2846  0012E8  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  2847  0012EA  0E00               	movlw	0
  2848  0012EC  6E07               	movwf	tc_tecla@timeout^0,c
  2849  0012EE  EC20  F018         	call	_tc_tecla	;wreg free
  2850  0012F2  0F30               	addlw	48
  2851  0012F4  0101               	movlb	1	; () banked
  2852  0012F6  6F8A               	movwf	encher_tanque@tmp& (0+255),b
  2853  0012F8                     
  2854                           ; BSR set to: 1
  2855                           ;encher.c: 30:         (*(volatile __near unsigned char*)0xF95) = 0x00;
  2856  0012F8  0E00               	movlw	0
  2857  0012FA  6E95               	movwf	149,c	;volatile
  2858  0012FC                     
  2859                           ; BSR set to: 1
  2860                           ;encher.c: 31:         lcd_dat(tmp);
  2861  0012FC  518A               	movf	encher_tanque@tmp& (0+255),w,b
  2862  0012FE  ECA8  F022         	call	_lcd_dat
  2863  001302                     
  2864                           ;encher.c: 32:         if (tmp >= 0x3C) {
  2865  001302  0E3B               	movlw	59
  2866  001304  0101               	movlb	1	; () banked
  2867  001306  658A               	cpfsgt	encher_tanque@tmp& (0+255),b
  2868  001308  EF88  F009         	goto	u5621
  2869  00130C  EF8A  F009         	goto	u5620
  2870  001310                     u5621:
  2871  001310  EF8C  F009         	goto	l4755
  2872  001314                     u5620:
  2873  001314  EF00  F00C         	goto	l149
  2874  001318                     l4755:
  2875                           
  2876                           ; BSR set to: 1
  2877  001318  5186               	movf	encher_tanque@i& (0+255),w,b
  2878  00131A  1187               	iorwf	(encher_tanque@i+1)& (0+255),w,b
  2879  00131C  A4D8               	btfss	status,2,c
  2880  00131E  EF93  F009         	goto	u5631
  2881  001322  EF95  F009         	goto	u5630
  2882  001326                     u5631:
  2883  001326  EFB1  F009         	goto	l4759
  2884  00132A                     u5630:
  2885  00132A                     
  2886                           ; BSR set to: 1
  2887                           ;encher.c: 35:             num[i] = (tmp - '0')*10;
  2888  00132A  0ED0               	movlw	208
  2889  00132C  258A               	addwf	encher_tanque@tmp& (0+255),w,b
  2890  00132E  6E01               	movwf	___wmul@multiplier^0,c
  2891  001330  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2892  001332  0EFF               	movlw	255
  2893  001334  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  2894  001336  0E00               	movlw	0
  2895  001338  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2896  00133A  0E0A               	movlw	10
  2897  00133C  6E03               	movwf	___wmul@multiplicand^0,c
  2898  00133E  ECD2  F022         	call	___wmul	;wreg free
  2899  001342  90D8               	bcf	status,0,c
  2900  001344  0101               	movlb	1	; () banked
  2901  001346  3586               	rlcf	encher_tanque@i& (0+255),w,b
  2902  001348  6ED9               	movwf	fsr2l,c
  2903  00134A  3587               	rlcf	(encher_tanque@i+1)& (0+255),w,b
  2904  00134C  6EDA               	movwf	fsr2h,c
  2905  00134E  0E7A               	movlw	low encher_tanque@num
  2906  001350  26D9               	addwf	fsr2l,f,c
  2907  001352  0E01               	movlw	high encher_tanque@num
  2908  001354  22DA               	addwfc	fsr2h,f,c
  2909  001356  C001  FFDE         	movff	?___wmul,postinc2
  2910  00135A  C002  FFDD         	movff	?___wmul+1,postdec2
  2911                           
  2912                           ;encher.c: 36:         } else {
  2913  00135E  EFCD  F009         	goto	l4761
  2914  001362                     l4759:
  2915                           
  2916                           ; BSR set to: 1
  2917                           ;encher.c: 37:             num[i] = (tmp - '0');
  2918  001362  0ED0               	movlw	208
  2919  001364  0100               	movlb	0	; () banked
  2920  001366  6FDC               	movwf	??_encher_tanque& (0+255),b
  2921  001368  0EFF               	movlw	255
  2922  00136A  6FDD               	movwf	(??_encher_tanque+1)& (0+255),b
  2923  00136C  0101               	movlb	1	; () banked
  2924  00136E  518A               	movf	encher_tanque@tmp& (0+255),w,b
  2925  001370  0100               	movlb	0	; () banked
  2926  001372  6FDE               	movwf	(??_encher_tanque+2)& (0+255),b
  2927  001374  6BDF               	clrf	(??_encher_tanque+3)& (0+255),b
  2928  001376  51DC               	movf	??_encher_tanque& (0+255),w,b
  2929  001378  27DE               	addwf	(??_encher_tanque+2)& (0+255),f,b
  2930  00137A  51DD               	movf	(??_encher_tanque+1)& (0+255),w,b
  2931  00137C  23DF               	addwfc	(??_encher_tanque+3)& (0+255),f,b
  2932  00137E  90D8               	bcf	status,0,c
  2933  001380  0101               	movlb	1	; () banked
  2934  001382  3586               	rlcf	encher_tanque@i& (0+255),w,b
  2935  001384  6ED9               	movwf	fsr2l,c
  2936  001386  3587               	rlcf	(encher_tanque@i+1)& (0+255),w,b
  2937  001388  6EDA               	movwf	fsr2h,c
  2938  00138A  0E7A               	movlw	low encher_tanque@num
  2939  00138C  26D9               	addwf	fsr2l,f,c
  2940  00138E  0E01               	movlw	high encher_tanque@num
  2941  001390  22DA               	addwfc	fsr2h,f,c
  2942  001392  C0DE  FFDE         	movff	??_encher_tanque+2,postinc2
  2943  001396  C0DF  FFDD         	movff	??_encher_tanque+3,postdec2
  2944  00139A                     l4761:
  2945                           
  2946                           ; BSR set to: 1
  2947                           ;encher.c: 39:         i++;
  2948  00139A  4B86               	infsnz	encher_tanque@i& (0+255),f,b
  2949  00139C  2B87               	incf	(encher_tanque@i+1)& (0+255),f,b
  2950  00139E                     l4763:
  2951                           
  2952                           ; BSR set to: 1
  2953                           ;encher.c: 27:     while (i != 2) {
  2954  00139E  0E02               	movlw	2
  2955  0013A0  1986               	xorwf	encher_tanque@i& (0+255),w,b
  2956  0013A2  1187               	iorwf	(encher_tanque@i+1)& (0+255),w,b
  2957  0013A4  A4D8               	btfss	status,2,c
  2958  0013A6  EFD7  F009         	goto	u5641
  2959  0013AA  EFD9  F009         	goto	u5640
  2960  0013AE                     u5641:
  2961  0013AE  EF71  F009         	goto	l4741
  2962  0013B2                     u5640:
  2963  0013B2                     
  2964                           ; BSR set to: 1
  2965                           ;encher.c: 42:     (*(volatile __near unsigned char*)0xF92) = 0x20;
  2966  0013B2  0E20               	movlw	32
  2967  0013B4  6E92               	movwf	146,c	;volatile
  2968                           
  2969                           ;encher.c: 43:     (*(volatile __near unsigned char*)0xF93) = 0x3F;
  2970  0013B6  0E3F               	movlw	63
  2971  0013B8  6E93               	movwf	147,c	;volatile
  2972  0013BA                     
  2973                           ; BSR set to: 1
  2974                           ;encher.c: 45:     atraso_ms(500);
  2975  0013BA  0E01               	movlw	1
  2976  0013BC  6E02               	movwf	(atraso_ms@t+1)^0,c
  2977  0013BE  0EF4               	movlw	244
  2978  0013C0  6E01               	movwf	atraso_ms@t^0,c
  2979  0013C2  EC3B  F020         	call	_atraso_ms	;wreg free
  2980  0013C6                     
  2981                           ;encher.c: 46:     lcd_cmd(0x01);
  2982  0013C6  0E01               	movlw	1
  2983  0013C8  ECBD  F022         	call	_lcd_cmd
  2984  0013CC                     
  2985                           ;encher.c: 48:     incremento = num[0] + num[1];
  2986  0013CC  0101               	movlb	1	; () banked
  2987  0013CE  517A               	movf	encher_tanque@num& (0+255),w,b
  2988  0013D0  257C               	addwf	(encher_tanque@num+2)& (0+255),w,b
  2989  0013D2  6F80               	movwf	encher_tanque@incremento& (0+255),b
  2990  0013D4  517B               	movf	(encher_tanque@num+1)& (0+255),w,b
  2991  0013D6  217D               	addwfc	(encher_tanque@num+3)& (0+255),w,b
  2992  0013D8  6F81               	movwf	(encher_tanque@incremento+1)& (0+255),b
  2993  0013DA                     
  2994                           ; BSR set to: 1
  2995                           ;encher.c: 50:     if (*vol + incremento > 70) {
  2996  0013DA  0E00               	movlw	0
  2997  0013DC  6E38               	movwf	___flge@ff1^0,c
  2998  0013DE  0E00               	movlw	0
  2999  0013E0  6E39               	movwf	(___flge@ff1+1)^0,c
  3000  0013E2  0E8C               	movlw	140
  3001  0013E4  6E3A               	movwf	(___flge@ff1+2)^0,c
  3002  0013E6  0E42               	movlw	66
  3003  0013E8  6E3B               	movwf	(___flge@ff1+3)^0,c
  3004  0013EA  C07D  FFD9         	movff	encher_tanque@vol,fsr2l
  3005  0013EE  C07E  FFDA         	movff	encher_tanque@vol+1,fsr2h
  3006  0013F2  CFDE F02C          	movff	postinc2,___fladd@a
  3007  0013F6  CFDE F02D          	movff	postinc2,___fladd@a+1
  3008  0013FA  CFDE F02E          	movff	postinc2,___fladd@a+2
  3009  0013FE  CFDE F02F          	movff	postinc2,___fladd@a+3
  3010  001402  C180  F001         	movff	encher_tanque@incremento,___xxtofl@val
  3011  001406  C181  F002         	movff	encher_tanque@incremento+1,___xxtofl@val+1
  3012  00140A  6A03               	clrf	(___xxtofl@val+2)^0,c
  3013  00140C  6A04               	clrf	(___xxtofl@val+3)^0,c
  3014  00140E  0E00               	movlw	0
  3015  001410  EC05  F019         	call	___xxtofl
  3016  001414  C001  F028         	movff	?___xxtofl,___fladd@b
  3017  001418  C002  F029         	movff	?___xxtofl+1,___fladd@b+1
  3018  00141C  C003  F02A         	movff	?___xxtofl+2,___fladd@b+2
  3019  001420  C004  F02B         	movff	?___xxtofl+3,___fladd@b+3
  3020  001424  ECA0  F00E         	call	___fladd	;wreg free
  3021  001428  C028  F03C         	movff	?___fladd,___flge@ff2
  3022  00142C  C029  F03D         	movff	?___fladd+1,___flge@ff2+1
  3023  001430  C02A  F03E         	movff	?___fladd+2,___flge@ff2+2
  3024  001434  C02B  F03F         	movff	?___fladd+3,___flge@ff2+3
  3025  001438  ECDF  F01B         	call	___flge	;wreg free
  3026  00143C  B0D8               	btfsc	status,0,c
  3027  00143E  EF23  F00A         	goto	u5651
  3028  001442  EF25  F00A         	goto	u5650
  3029  001446                     u5651:
  3030  001446  EF3D  F00A         	goto	l4783
  3031  00144A                     u5650:
  3032  00144A                     
  3033                           ;encher.c: 53:         lcd_cmd(0x01);
  3034  00144A  0E01               	movlw	1
  3035  00144C  ECBD  F022         	call	_lcd_cmd
  3036                           
  3037                           ;encher.c: 54:         lcd_cmd(0x80);
  3038  001450  0E80               	movlw	128
  3039  001452  ECBD  F022         	call	_lcd_cmd
  3040  001456                     
  3041                           ;encher.c: 55:         lcd_str("ERRO: vol > MAX");
  3042  001456  0E16               	movlw	low STR_10
  3043  001458  6E08               	movwf	lcd_str@str^0,c
  3044  00145A  0E06               	movlw	high STR_10
  3045  00145C  6E09               	movwf	(lcd_str@str+1)^0,c
  3046  00145E  EC8F  F01F         	call	_lcd_str	;wreg free
  3047  001462                     
  3048                           ;encher.c: 56:         lcd_cmd(0xC0);
  3049  001462  0EC0               	movlw	192
  3050  001464  ECBD  F022         	call	_lcd_cmd
  3051                           
  3052                           ;encher.c: 57:         lcd_str("# - Voltar");
  3053  001468  0E63               	movlw	low (STR_17+3)
  3054  00146A  6E08               	movwf	lcd_str@str^0,c
  3055  00146C  0E06               	movlw	high (STR_17+3)
  3056  00146E  6E09               	movwf	(lcd_str@str+1)^0,c
  3057  001470  EC8F  F01F         	call	_lcd_str	;wreg free
  3058  001474                     
  3059                           ;encher.c: 60:         (((*(volatile __near unsigned char*)0xF94)) |= (1<<1));
  3060  001474  8294               	bsf	148,1,c	;volatile
  3061                           
  3062                           ;encher.c: 63:     } else {
  3063  001476  EFE8  F00B         	goto	l4879
  3064  00147A                     l4783:
  3065                           
  3066                           ;encher.c: 65:         *vol += incremento;
  3067  00147A  C07D  FFD9         	movff	encher_tanque@vol,fsr2l
  3068  00147E  C07E  FFDA         	movff	encher_tanque@vol+1,fsr2h
  3069  001482  CFDE F028          	movff	postinc2,___fladd@b
  3070  001486  CFDE F029          	movff	postinc2,___fladd@b+1
  3071  00148A  CFDE F02A          	movff	postinc2,___fladd@b+2
  3072  00148E  CFDE F02B          	movff	postinc2,___fladd@b+3
  3073  001492  C180  F001         	movff	encher_tanque@incremento,___xxtofl@val
  3074  001496  C181  F002         	movff	encher_tanque@incremento+1,___xxtofl@val+1
  3075  00149A  6A03               	clrf	(___xxtofl@val+2)^0,c
  3076  00149C  6A04               	clrf	(___xxtofl@val+3)^0,c
  3077  00149E  0E00               	movlw	0
  3078  0014A0  EC05  F019         	call	___xxtofl
  3079  0014A4  C001  F02C         	movff	?___xxtofl,___fladd@a
  3080  0014A8  C002  F02D         	movff	?___xxtofl+1,___fladd@a+1
  3081  0014AC  C003  F02E         	movff	?___xxtofl+2,___fladd@a+2
  3082  0014B0  C004  F02F         	movff	?___xxtofl+3,___fladd@a+3
  3083  0014B4  ECA0  F00E         	call	___fladd	;wreg free
  3084  0014B8  C07D  FFD9         	movff	encher_tanque@vol,fsr2l
  3085  0014BC  C07E  FFDA         	movff	encher_tanque@vol+1,fsr2h
  3086  0014C0  C028  FFDE         	movff	?___fladd,postinc2
  3087  0014C4  C029  FFDE         	movff	?___fladd+1,postinc2
  3088  0014C8  C02A  FFDE         	movff	?___fladd+2,postinc2
  3089  0014CC  C02B  FFDE         	movff	?___fladd+3,postinc2
  3090  0014D0                     
  3091                           ;encher.c: 66:         char y[8];;encher.c: 67:         sprintf(y, "%.1f", *vol);
  3092  0014D0  0E6C               	movlw	low encher_tanque@y
  3093  0014D2  0100               	movlb	0	; () banked
  3094  0014D4  6FCA               	movwf	sprintf@s& (0+255),b
  3095  0014D6  0E01               	movlw	high encher_tanque@y
  3096  0014D8  6FCB               	movwf	(sprintf@s+1)& (0+255),b
  3097  0014DA  0ED4               	movlw	low STR_12
  3098  0014DC  6FCC               	movwf	sprintf@fmt& (0+255),b
  3099  0014DE  0E06               	movlw	high STR_12
  3100  0014E0  6FCD               	movwf	(sprintf@fmt+1)& (0+255),b
  3101  0014E2  C07D  FFD9         	movff	encher_tanque@vol,fsr2l
  3102  0014E6  C07E  FFDA         	movff	encher_tanque@vol+1,fsr2h
  3103  0014EA  CFDE F0CE          	movff	postinc2,?_sprintf+4
  3104  0014EE  CFDE F0CF          	movff	postinc2,?_sprintf+5
  3105  0014F2  CFDE F0D0          	movff	postinc2,?_sprintf+6
  3106  0014F6  CFDE F0D1          	movff	postinc2,?_sprintf+7
  3107  0014FA  EC8D  F021         	call	_sprintf	;wreg free
  3108  0014FE                     
  3109                           ;encher.c: 68:         lcd_str(y);
  3110  0014FE  0E6C               	movlw	low encher_tanque@y
  3111  001500  6E08               	movwf	lcd_str@str^0,c
  3112  001502  0E01               	movlw	high encher_tanque@y
  3113  001504  6E09               	movwf	(lcd_str@str+1)^0,c
  3114  001506  EC8F  F01F         	call	_lcd_str	;wreg free
  3115  00150A                     
  3116                           ;encher.c: 69:         lcd_str(" L");
  3117  00150A  0EEC               	movlw	low STR_13
  3118  00150C  6E08               	movwf	lcd_str@str^0,c
  3119  00150E  0E06               	movlw	high STR_13
  3120  001510  6E09               	movwf	(lcd_str@str+1)^0,c
  3121  001512  EC8F  F01F         	call	_lcd_str	;wreg free
  3122  001516                     
  3123                           ;encher.c: 70:         atraso_ms(500);
  3124  001516  0E01               	movlw	1
  3125  001518  6E02               	movwf	(atraso_ms@t+1)^0,c
  3126  00151A  0EF4               	movlw	244
  3127  00151C  6E01               	movwf	atraso_ms@t^0,c
  3128  00151E  EC3B  F020         	call	_atraso_ms	;wreg free
  3129  001522                     
  3130                           ;encher.c: 73:         unsigned int i = 0, potencia = 100, t1, t2, tempo = incremento / 
      +                          2;
  3131  001522  0E00               	movlw	0
  3132  001524  0101               	movlb	1	; () banked
  3133  001526  6F79               	movwf	(encher_tanque@i_146+1)& (0+255),b
  3134  001528  0E00               	movlw	0
  3135  00152A  6F78               	movwf	encher_tanque@i_146& (0+255),b
  3136  00152C                     
  3137                           ; BSR set to: 1
  3138  00152C  90D8               	bcf	status,0,c
  3139  00152E  3181               	rrcf	(encher_tanque@incremento+1)& (0+255),w,b
  3140  001530  0100               	movlb	0	; () banked
  3141  001532  6FDC               	movwf	??_encher_tanque& (0+255),b
  3142  001534  0101               	movlb	1	; () banked
  3143  001536  3180               	rrcf	encher_tanque@incremento& (0+255),w,b
  3144  001538  6F82               	movwf	encher_tanque@tempo& (0+255),b
  3145  00153A  C0DC  F183         	movff	??_encher_tanque,encher_tanque@tempo+1
  3146  00153E                     
  3147                           ; BSR set to: 1
  3148                           ;encher.c: 74:         float porcento;;encher.c: 75:         int numeros[10] = {0x3F, 0x
      +                          06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D,
  3149  00153E  EE21  F09F         	lfsr	2,encher_tanque@F356
  3150  001542  EE11  F058         	lfsr	1,encher_tanque@numeros
  3151  001546  0E13               	movlw	19
  3152  001548                     u5661:
  3153  001548  CFDB FFE3          	movff	plusw2,plusw1
  3154  00154C  06E8               	decf	wreg,f,c
  3155  00154E  E2FC               	bc	u5661
  3156  001550                     
  3157                           ; BSR set to: 1
  3158                           ;encher.c: 78:         (*(volatile __near unsigned char*)0xF92) = 0x00;
  3159  001550  0E00               	movlw	0
  3160  001552  6E92               	movwf	146,c	;volatile
  3161  001554                     
  3162                           ; BSR set to: 1
  3163                           ;encher.c: 80:         lcd_cmd(0x01);
  3164  001554  0E01               	movlw	1
  3165  001556  ECBD  F022         	call	_lcd_cmd
  3166  00155A                     
  3167                           ;encher.c: 81:         lcd_cmd(0x80);
  3168  00155A  0E80               	movlw	128
  3169  00155C  ECBD  F022         	call	_lcd_cmd
  3170  001560                     
  3171                           ;encher.c: 82:         lcd_str("Enchendo...");
  3172  001560  0E97               	movlw	low STR_14
  3173  001562  6E08               	movwf	lcd_str@str^0,c
  3174  001564  0E06               	movlw	high STR_14
  3175  001566  6E09               	movwf	(lcd_str@str+1)^0,c
  3176  001568  EC8F  F01F         	call	_lcd_str	;wreg free
  3177  00156C                     
  3178                           ;encher.c: 83:         lcd_cmd(0xC0);
  3179  00156C  0EC0               	movlw	192
  3180  00156E  ECBD  F022         	call	_lcd_cmd
  3181  001572                     
  3182                           ;encher.c: 84:         lcd_str("Aguarde!");
  3183  001572  0EC3               	movlw	low STR_15
  3184  001574  6E08               	movwf	lcd_str@str^0,c
  3185  001576  0E06               	movlw	high STR_15
  3186  001578  6E09               	movwf	(lcd_str@str+1)^0,c
  3187  00157A  EC8F  F01F         	call	_lcd_str	;wreg free
  3188  00157E                     
  3189                           ;encher.c: 86:         pwmInit();
  3190  00157E  ECE5  F022         	call	_pwmInit	;wreg free
  3191  001582                     
  3192                           ;encher.c: 89:         t1 = tempo / 10;
  3193  001582  C182  F001         	movff	encher_tanque@tempo,___lwdiv@dividend
  3194  001586  C183  F002         	movff	encher_tanque@tempo+1,___lwdiv@dividend+1
  3195  00158A  0E00               	movlw	0
  3196  00158C  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3197  00158E  0E0A               	movlw	10
  3198  001590  6E03               	movwf	___lwdiv@divisor^0,c
  3199  001592  ECCB  F01F         	call	___lwdiv	;wreg free
  3200  001596  C001  F184         	movff	?___lwdiv,encher_tanque@t1
  3201  00159A  C002  F185         	movff	?___lwdiv+1,encher_tanque@t1+1
  3202  00159E                     
  3203                           ;encher.c: 90:         t2 = tempo % 10;
  3204  00159E  C182  F001         	movff	encher_tanque@tempo,___lwmod@dividend
  3205  0015A2  C183  F002         	movff	encher_tanque@tempo+1,___lwmod@dividend+1
  3206  0015A6  0E00               	movlw	0
  3207  0015A8  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3208  0015AA  0E0A               	movlw	10
  3209  0015AC  6E03               	movwf	___lwmod@divisor^0,c
  3210  0015AE  EC6D  F020         	call	___lwmod	;wreg free
  3211  0015B2  C001  F188         	movff	?___lwmod,encher_tanque@t2
  3212  0015B6  C002  F189         	movff	?___lwmod+1,encher_tanque@t2+1
  3213                           
  3214                           ;encher.c: 91:         while ((t1 != 0) || (t2 != 0)) {
  3215  0015BA  EFBA  F00B         	goto	l4857
  3216  0015BE                     l4819:
  3217                           
  3218                           ; BSR set to: 1
  3219                           ;encher.c: 96:             porcento = ((((float) t1 * 10.0) + (float) t2) / (float) temp
      +                          o);
  3220  0015BE  C188  F001         	movff	encher_tanque@t2,___xxtofl@val
  3221  0015C2  C189  F002         	movff	encher_tanque@t2+1,___xxtofl@val+1
  3222  0015C6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3223  0015C8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3224  0015CA  0E00               	movlw	0
  3225  0015CC  EC05  F019         	call	___xxtofl
  3226  0015D0  C001  F02C         	movff	?___xxtofl,___fladd@a
  3227  0015D4  C002  F02D         	movff	?___xxtofl+1,___fladd@a+1
  3228  0015D8  C003  F02E         	movff	?___xxtofl+2,___fladd@a+2
  3229  0015DC  C004  F02F         	movff	?___xxtofl+3,___fladd@a+3
  3230  0015E0  0E00               	movlw	0
  3231  0015E2  6E13               	movwf	___flmul@a^0,c
  3232  0015E4  0E00               	movlw	0
  3233  0015E6  6E14               	movwf	(___flmul@a+1)^0,c
  3234  0015E8  0E20               	movlw	32
  3235  0015EA  6E15               	movwf	(___flmul@a+2)^0,c
  3236  0015EC  0E41               	movlw	65
  3237  0015EE  6E16               	movwf	(___flmul@a+3)^0,c
  3238  0015F0  C184  F001         	movff	encher_tanque@t1,___xxtofl@val
  3239  0015F4  C185  F002         	movff	encher_tanque@t1+1,___xxtofl@val+1
  3240  0015F8  6A03               	clrf	(___xxtofl@val+2)^0,c
  3241  0015FA  6A04               	clrf	(___xxtofl@val+3)^0,c
  3242  0015FC  0E00               	movlw	0
  3243  0015FE  EC05  F019         	call	___xxtofl
  3244  001602  C001  F00F         	movff	?___xxtofl,___flmul@b
  3245  001606  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3246  00160A  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3247  00160E  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3248  001612  EC35  F013         	call	___flmul	;wreg free
  3249  001616  C00F  F028         	movff	?___flmul,___fladd@b
  3250  00161A  C010  F029         	movff	?___flmul+1,___fladd@b+1
  3251  00161E  C011  F02A         	movff	?___flmul+2,___fladd@b+2
  3252  001622  C012  F02B         	movff	?___flmul+3,___fladd@b+3
  3253  001626  ECA0  F00E         	call	___fladd	;wreg free
  3254  00162A  C028  F038         	movff	?___fladd,___fldiv@b
  3255  00162E  C029  F039         	movff	?___fladd+1,___fldiv@b+1
  3256  001632  C02A  F03A         	movff	?___fladd+2,___fldiv@b+2
  3257  001636  C02B  F03B         	movff	?___fladd+3,___fldiv@b+3
  3258  00163A  C182  F001         	movff	encher_tanque@tempo,___xxtofl@val
  3259  00163E  C183  F002         	movff	encher_tanque@tempo+1,___xxtofl@val+1
  3260  001642  6A03               	clrf	(___xxtofl@val+2)^0,c
  3261  001644  6A04               	clrf	(___xxtofl@val+3)^0,c
  3262  001646  0E00               	movlw	0
  3263  001648  EC05  F019         	call	___xxtofl
  3264  00164C  C001  F03C         	movff	?___xxtofl,___fldiv@a
  3265  001650  C002  F03D         	movff	?___xxtofl+1,___fldiv@a+1
  3266  001654  C003  F03E         	movff	?___xxtofl+2,___fldiv@a+2
  3267  001658  C004  F03F         	movff	?___xxtofl+3,___fldiv@a+3
  3268  00165C  EC4A  F015         	call	___fldiv	;wreg free
  3269  001660  C038  F174         	movff	?___fldiv,encher_tanque@porcento
  3270  001664  C039  F175         	movff	?___fldiv+1,encher_tanque@porcento+1
  3271  001668  C03A  F176         	movff	?___fldiv+2,encher_tanque@porcento+2
  3272  00166C  C03B  F177         	movff	?___fldiv+3,encher_tanque@porcento+3
  3273                           
  3274                           ;encher.c: 97:             potencia = 100 * porcento;
  3275  001670  0E00               	movlw	0
  3276  001672  6E13               	movwf	___flmul@a^0,c
  3277  001674  0E00               	movlw	0
  3278  001676  6E14               	movwf	(___flmul@a+1)^0,c
  3279  001678  0EC8               	movlw	200
  3280  00167A  6E15               	movwf	(___flmul@a+2)^0,c
  3281  00167C  0E42               	movlw	66
  3282  00167E  6E16               	movwf	(___flmul@a+3)^0,c
  3283  001680  C174  F00F         	movff	encher_tanque@porcento,___flmul@b
  3284  001684  C175  F010         	movff	encher_tanque@porcento+1,___flmul@b+1
  3285  001688  C176  F011         	movff	encher_tanque@porcento+2,___flmul@b+2
  3286  00168C  C177  F012         	movff	encher_tanque@porcento+3,___flmul@b+3
  3287  001690  EC35  F013         	call	___flmul	;wreg free
  3288  001694  C00F  F028         	movff	?___flmul,___fltol@f1
  3289  001698  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  3290  00169C  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  3291  0016A0  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  3292  0016A4  EC5C  F01B         	call	___fltol	;wreg free
  3293  0016A8  C028  F17E         	movff	?___fltol,encher_tanque@potencia
  3294  0016AC  C029  F17F         	movff	?___fltol+1,encher_tanque@potencia+1
  3295  0016B0                     
  3296                           ;encher.c: 98:             if (potencia == 100) {
  3297  0016B0  0E64               	movlw	100
  3298  0016B2  0101               	movlb	1	; () banked
  3299  0016B4  197E               	xorwf	encher_tanque@potencia& (0+255),w,b
  3300  0016B6  117F               	iorwf	(encher_tanque@potencia+1)& (0+255),w,b
  3301  0016B8  A4D8               	btfss	status,2,c
  3302  0016BA  EF61  F00B         	goto	u5671
  3303  0016BE  EF63  F00B         	goto	u5670
  3304  0016C2                     u5671:
  3305  0016C2  EF67  F00B         	goto	l4825
  3306  0016C6                     u5670:
  3307  0016C6                     
  3308                           ; BSR set to: 1
  3309                           ;encher.c: 99:                 potencia = 99;
  3310  0016C6  0E00               	movlw	0
  3311  0016C8  6F7F               	movwf	(encher_tanque@potencia+1)& (0+255),b
  3312  0016CA  0E63               	movlw	99
  3313  0016CC  6F7E               	movwf	encher_tanque@potencia& (0+255),b
  3314  0016CE                     l4825:
  3315                           
  3316                           ; BSR set to: 1
  3317                           ;encher.c: 101:             pwmSet1(potencia);
  3318  0016CE  517E               	movf	encher_tanque@potencia& (0+255),w,b
  3319  0016D0  EC05  F020         	call	_pwmSet1
  3320  0016D4                     
  3321                           ;encher.c: 104:             (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  3322  0016D4  9A80               	bcf	128,5,c	;volatile
  3323  0016D6                     
  3324                           ;encher.c: 105:             (((*(volatile __near unsigned char*)0xF80)) |= (1<<4));
  3325  0016D6  8880               	bsf	128,4,c	;volatile
  3326  0016D8                     
  3327                           ;encher.c: 106:             (*(volatile __near unsigned char*)0xF83) = numeros[t1];
  3328  0016D8  90D8               	bcf	status,0,c
  3329  0016DA  0101               	movlb	1	; () banked
  3330  0016DC  3584               	rlcf	encher_tanque@t1& (0+255),w,b
  3331  0016DE  6ED9               	movwf	fsr2l,c
  3332  0016E0  3585               	rlcf	(encher_tanque@t1+1)& (0+255),w,b
  3333  0016E2  6EDA               	movwf	fsr2h,c
  3334  0016E4  0E58               	movlw	low encher_tanque@numeros
  3335  0016E6  26D9               	addwf	fsr2l,f,c
  3336  0016E8  0E01               	movlw	high encher_tanque@numeros
  3337  0016EA  22DA               	addwfc	fsr2h,f,c
  3338  0016EC  50DF               	movf	indf2,w,c
  3339  0016EE  6E83               	movwf	131,c	;volatile
  3340  0016F0                     
  3341                           ; BSR set to: 1
  3342                           ;encher.c: 107:             atraso_ms(5);
  3343  0016F0  0E00               	movlw	0
  3344  0016F2  6E02               	movwf	(atraso_ms@t+1)^0,c
  3345  0016F4  0E05               	movlw	5
  3346  0016F6  6E01               	movwf	atraso_ms@t^0,c
  3347  0016F8  EC3B  F020         	call	_atraso_ms	;wreg free
  3348  0016FC                     
  3349                           ;encher.c: 108:             (((*(volatile __near unsigned char*)0xF80)) |= (1<<5));
  3350  0016FC  8A80               	bsf	128,5,c	;volatile
  3351  0016FE                     
  3352                           ;encher.c: 109:             (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<4));
  3353  0016FE  9880               	bcf	128,4,c	;volatile
  3354  001700                     
  3355                           ;encher.c: 110:             (*(volatile __near unsigned char*)0xF83) = numeros[t2];
  3356  001700  90D8               	bcf	status,0,c
  3357  001702  0101               	movlb	1	; () banked
  3358  001704  3588               	rlcf	encher_tanque@t2& (0+255),w,b
  3359  001706  6ED9               	movwf	fsr2l,c
  3360  001708  3589               	rlcf	(encher_tanque@t2+1)& (0+255),w,b
  3361  00170A  6EDA               	movwf	fsr2h,c
  3362  00170C  0E58               	movlw	low encher_tanque@numeros
  3363  00170E  26D9               	addwf	fsr2l,f,c
  3364  001710  0E01               	movlw	high encher_tanque@numeros
  3365  001712  22DA               	addwfc	fsr2h,f,c
  3366  001714  50DF               	movf	indf2,w,c
  3367  001716  6E83               	movwf	131,c	;volatile
  3368  001718                     
  3369                           ; BSR set to: 1
  3370                           ;encher.c: 111:             atraso_ms(5);
  3371  001718  0E00               	movlw	0
  3372  00171A  6E02               	movwf	(atraso_ms@t+1)^0,c
  3373  00171C  0E05               	movlw	5
  3374  00171E  6E01               	movwf	atraso_ms@t^0,c
  3375  001720  EC3B  F020         	call	_atraso_ms	;wreg free
  3376  001724                     
  3377                           ;encher.c: 113:             if (i == 40) {
  3378  001724  0E28               	movlw	40
  3379  001726  0101               	movlb	1	; () banked
  3380  001728  1978               	xorwf	encher_tanque@i_146& (0+255),w,b
  3381  00172A  1179               	iorwf	(encher_tanque@i_146+1)& (0+255),w,b
  3382  00172C  A4D8               	btfss	status,2,c
  3383  00172E  EF9B  F00B         	goto	u5681
  3384  001732  EF9D  F00B         	goto	u5680
  3385  001736                     u5681:
  3386  001736  EFB8  F00B         	goto	l4855
  3387  00173A                     u5680:
  3388  00173A                     
  3389                           ; BSR set to: 1
  3390                           ;encher.c: 114:                 i = 0;
  3391  00173A  0E00               	movlw	0
  3392  00173C  6F79               	movwf	(encher_tanque@i_146+1)& (0+255),b
  3393  00173E  0E00               	movlw	0
  3394  001740  6F78               	movwf	encher_tanque@i_146& (0+255),b
  3395  001742                     
  3396                           ; BSR set to: 1
  3397                           ;encher.c: 115:                 if (t2 == 0) {
  3398  001742  5188               	movf	encher_tanque@t2& (0+255),w,b
  3399  001744  1189               	iorwf	(encher_tanque@t2+1)& (0+255),w,b
  3400  001746  A4D8               	btfss	status,2,c
  3401  001748  EFA8  F00B         	goto	u5691
  3402  00174C  EFAA  F00B         	goto	u5690
  3403  001750                     u5691:
  3404  001750  EFB3  F00B         	goto	l4853
  3405  001754                     u5690:
  3406  001754                     
  3407                           ; BSR set to: 1
  3408                           ;encher.c: 116:                     t1--;
  3409  001754  0784               	decf	encher_tanque@t1& (0+255),f,b
  3410  001756  A0D8               	btfss	status,0,c
  3411  001758  0785               	decf	(encher_tanque@t1+1)& (0+255),f,b
  3412  00175A                     
  3413                           ; BSR set to: 1
  3414                           ;encher.c: 117:                     t2 = 9;
  3415  00175A  0E00               	movlw	0
  3416  00175C  6F89               	movwf	(encher_tanque@t2+1)& (0+255),b
  3417  00175E  0E09               	movlw	9
  3418  001760  6F88               	movwf	encher_tanque@t2& (0+255),b
  3419                           
  3420                           ;encher.c: 118:                 } else {
  3421  001762  EFBA  F00B         	goto	l4857
  3422  001766                     l4853:
  3423                           
  3424                           ; BSR set to: 1
  3425                           ;encher.c: 119:                     t2--;
  3426  001766  0788               	decf	encher_tanque@t2& (0+255),f,b
  3427  001768  A0D8               	btfss	status,0,c
  3428  00176A  0789               	decf	(encher_tanque@t2+1)& (0+255),f,b
  3429  00176C  EFBA  F00B         	goto	l4857
  3430  001770                     l4855:
  3431                           
  3432                           ; BSR set to: 1
  3433                           ;encher.c: 122:                 i++;
  3434  001770  4B78               	infsnz	encher_tanque@i_146& (0+255),f,b
  3435  001772  2B79               	incf	(encher_tanque@i_146+1)& (0+255),f,b
  3436  001774                     l4857:
  3437                           
  3438                           ;encher.c: 91:         while ((t1 != 0) || (t2 != 0)) {
  3439  001774  0101               	movlb	1	; () banked
  3440  001776  5184               	movf	encher_tanque@t1& (0+255),w,b
  3441  001778  1185               	iorwf	(encher_tanque@t1+1)& (0+255),w,b
  3442  00177A  A4D8               	btfss	status,2,c
  3443  00177C  EFC2  F00B         	goto	u5701
  3444  001780  EFC4  F00B         	goto	u5700
  3445  001784                     u5701:
  3446  001784  EFDF  F00A         	goto	l4819
  3447  001788                     u5700:
  3448  001788                     
  3449                           ; BSR set to: 1
  3450  001788  5188               	movf	encher_tanque@t2& (0+255),w,b
  3451  00178A  1189               	iorwf	(encher_tanque@t2+1)& (0+255),w,b
  3452  00178C  A4D8               	btfss	status,2,c
  3453  00178E  EFCB  F00B         	goto	u5711
  3454  001792  EFCD  F00B         	goto	u5710
  3455  001796                     u5711:
  3456  001796  EFDF  F00A         	goto	l4819
  3457  00179A                     u5710:
  3458  00179A                     
  3459                           ; BSR set to: 1
  3460                           ;encher.c: 125:         pwmSet1(0);
  3461  00179A  0E00               	movlw	0
  3462  00179C  EC05  F020         	call	_pwmSet1
  3463  0017A0                     
  3464                           ;encher.c: 128:         (((*(volatile __near unsigned char*)0xF94)) |= (1<<1));
  3465  0017A0  8294               	bsf	148,1,c	;volatile
  3466  0017A2                     
  3467                           ;encher.c: 131:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  3468  0017A2  9A80               	bcf	128,5,c	;volatile
  3469  0017A4                     
  3470                           ;encher.c: 132:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<4));
  3471  0017A4  9880               	bcf	128,4,c	;volatile
  3472  0017A6                     
  3473                           ;encher.c: 135:         lcd_cmd(0x01);
  3474  0017A6  0E01               	movlw	1
  3475  0017A8  ECBD  F022         	call	_lcd_cmd
  3476  0017AC                     
  3477                           ;encher.c: 136:         lcd_cmd(0x80);
  3478  0017AC  0E80               	movlw	128
  3479  0017AE  ECBD  F022         	call	_lcd_cmd
  3480  0017B2                     
  3481                           ;encher.c: 137:         lcd_str("    SUCESSO!");
  3482  0017B2  0E8A               	movlw	low STR_16
  3483  0017B4  6E08               	movwf	lcd_str@str^0,c
  3484  0017B6  0E06               	movlw	high STR_16
  3485  0017B8  6E09               	movwf	(lcd_str@str+1)^0,c
  3486  0017BA  EC8F  F01F         	call	_lcd_str	;wreg free
  3487  0017BE                     
  3488                           ;encher.c: 138:         lcd_cmd(0xC0);
  3489  0017BE  0EC0               	movlw	192
  3490  0017C0  ECBD  F022         	call	_lcd_cmd
  3491  0017C4                     
  3492                           ;encher.c: 139:         lcd_str("   # - Voltar");
  3493  0017C4  0E60               	movlw	low STR_17
  3494  0017C6  6E08               	movwf	lcd_str@str^0,c
  3495  0017C8  0E06               	movlw	high STR_17
  3496  0017CA  6E09               	movwf	(lcd_str@str+1)^0,c
  3497  0017CC  EC8F  F01F         	call	_lcd_str	;wreg free
  3498  0017D0                     l4879:
  3499                           
  3500                           ;encher.c: 147:     (*(volatile __near unsigned char*)0xF93) = 0xF8;
  3501  0017D0  0EF8               	movlw	248
  3502  0017D2  6E93               	movwf	147,c	;volatile
  3503  0017D4                     l4881:
  3504                           
  3505                           ;encher.c: 150:         (*(volatile __near unsigned char*)0xF95) = 0x0F;
  3506  0017D4  0E0F               	movlw	15
  3507  0017D6  6E95               	movwf	149,c	;volatile
  3508  0017D8                     
  3509                           ;encher.c: 151:         tmp = tc_tecla(0) + 0x30;
  3510  0017D8  0E00               	movlw	0
  3511  0017DA  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  3512  0017DC  0E00               	movlw	0
  3513  0017DE  6E07               	movwf	tc_tecla@timeout^0,c
  3514  0017E0  EC20  F018         	call	_tc_tecla	;wreg free
  3515  0017E4  0F30               	addlw	48
  3516  0017E6  0101               	movlb	1	; () banked
  3517  0017E8  6F8A               	movwf	encher_tanque@tmp& (0+255),b
  3518  0017EA                     
  3519                           ; BSR set to: 1
  3520                           ;encher.c: 152:         (*(volatile __near unsigned char*)0xF95) = 0x00;
  3521  0017EA  0E00               	movlw	0
  3522  0017EC  6E95               	movwf	149,c	;volatile
  3523  0017EE                     
  3524                           ; BSR set to: 1
  3525                           ;encher.c: 153:         if (tmp >= 0x3C) {
  3526  0017EE  0E3B               	movlw	59
  3527  0017F0  658A               	cpfsgt	encher_tanque@tmp& (0+255),b
  3528  0017F2  EFFD  F00B         	goto	u5721
  3529  0017F6  EFFF  F00B         	goto	u5720
  3530  0017FA                     u5721:
  3531  0017FA  EFEA  F00B         	goto	l4881
  3532  0017FE                     u5720:
  3533  0017FE                     
  3534                           ; BSR set to: 1
  3535                           ;encher.c: 154:             (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<1));
  3536  0017FE  9294               	bcf	148,1,c	;volatile
  3537  001800                     l149:
  3538                           
  3539                           ; BSR set to: 1
  3540  001800  0012               	return		;funcret
  3541  001802                     __end_of_encher_tanque:
  3542                           	callstack 0
  3543                           
  3544 ;; *************** function _tc_tecla *****************
  3545 ;; Defined at:
  3546 ;;		line 14 in file "teclado.c"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;  timeout         2    6[COMRAM] unsigned int 
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;  to              2    8[COMRAM] unsigned int 
  3551 ;;  i               1   12[COMRAM] unsigned char 
  3552 ;;  ret             1   11[COMRAM] unsigned char 
  3553 ;;  tmp             1   10[COMRAM] unsigned char 
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  1    wreg      unsigned char 
  3556 ;; Registers used:
  3557 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 0/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3563 ;;      Params:         2       0       0       0       0       0       0
  3564 ;;      Locals:         5       0       0       0       0       0       0
  3565 ;;      Temps:          0       0       0       0       0       0       0
  3566 ;;      Totals:         7       0       0       0       0       0       0
  3567 ;;Total ram usage:        7 bytes
  3568 ;; Hardware stack levels used:    1
  3569 ;; Hardware stack levels required when called:    1
  3570 ;; This function calls:
  3571 ;;		_atraso_ms
  3572 ;; This function is called by:
  3573 ;;		_main
  3574 ;;		_encher_tanque
  3575 ;;		_esvaziar_tanque
  3576 ;;		_ver_quantidade
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           	psect	text5
  3581  003040                     __ptext5:
  3582                           	callstack 0
  3583  003040                     _tc_tecla:
  3584                           	callstack 28
  3585  003040                     
  3586                           ;teclado.c: 15:     unsigned int to = 0;
  3587  003040  0E00               	movlw	0
  3588  003042  6E0A               	movwf	(tc_tecla@to+1)^0,c
  3589  003044  0E00               	movlw	0
  3590  003046  6E09               	movwf	tc_tecla@to^0,c
  3591                           
  3592                           ;teclado.c: 16:     unsigned char i;;teclado.c: 17:     unsigned char ret = 0;
  3593  003048  0E00               	movlw	0
  3594  00304A  6E0C               	movwf	tc_tecla@ret^0,c
  3595  00304C                     
  3596                           ;teclado.c: 18:     unsigned char tmp = (*(volatile __near unsigned char*)0xF81);
  3597  00304C  CF81 F00B          	movff	3969,tc_tecla@tmp	;volatile
  3598                           
  3599                           ;teclado.c: 21:     while (((to < timeout) || (!timeout))&&(!ret)) {
  3600  003050  EFD1  F018         	goto	l4575
  3601  003054                     l4523:
  3602                           
  3603                           ;teclado.c: 22:         for (i = 0; i < 3; i++) {
  3604  003054  0E00               	movlw	0
  3605  003056  6E0D               	movwf	tc_tecla@i^0,c
  3606  003058                     l4529:
  3607                           
  3608                           ;teclado.c: 23:             (*(volatile __near unsigned char*)0xF81) |= ~linha[i];
  3609  003058  0E01               	movlw	low _linha
  3610  00305A  240D               	addwf	tc_tecla@i^0,w,c
  3611  00305C  6EF6               	movwf	tblptrl,c
  3612  00305E  6AF7               	clrf	tblptrh,c
  3613  003060  0E06               	movlw	high _linha
  3614  003062  22F7               	addwfc	tblptrh,f,c
  3615  003064                     	if	0	;There are less than 3 active tblptr bytes
  3616  003064                     	endif
  3617  003064  0008               	tblrd		*
  3618  003066  50F5               	movf	tablat,w,c
  3619  003068  0AFF               	xorlw	255
  3620  00306A  1281               	iorwf	129,f,c	;volatile
  3621  00306C                     
  3622                           ;teclado.c: 24:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<3))) 
      +                          {
  3623  00306C  B683               	btfsc	131,3,c	;volatile
  3624  00306E  EF3B  F018         	goto	u5291
  3625  003072  EF3D  F018         	goto	u5290
  3626  003076                     u5291:
  3627  003076  EF55  F018         	goto	l58
  3628  00307A                     u5290:
  3629  00307A                     
  3630                           ;teclado.c: 25:                 atraso_ms(atraso);
  3631  00307A  0E00               	movlw	0
  3632  00307C  6E02               	movwf	(atraso_ms@t+1)^0,c
  3633  00307E  0E0F               	movlw	15
  3634  003080  6E01               	movwf	atraso_ms@t^0,c
  3635  003082  EC3B  F020         	call	_atraso_ms	;wreg free
  3636  003086                     
  3637                           ;teclado.c: 26:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<3
      +                          ))) {
  3638  003086  B683               	btfsc	131,3,c	;volatile
  3639  003088  EF48  F018         	goto	u5301
  3640  00308C  EF4A  F018         	goto	u5300
  3641  003090                     u5301:
  3642  003090  EF55  F018         	goto	l58
  3643  003094                     u5300:
  3644  003094                     l60:
  3645  003094  A683               	btfss	131,3,c	;volatile
  3646  003096  EF4F  F018         	goto	u5311
  3647  00309A  EF51  F018         	goto	u5310
  3648  00309E                     u5311:
  3649  00309E  EF4A  F018         	goto	l60
  3650  0030A2                     u5310:
  3651  0030A2                     
  3652                           ;teclado.c: 28:                     ret = 1 + i;
  3653  0030A2  280D               	incf	tc_tecla@i^0,w,c
  3654  0030A4  6E0C               	movwf	tc_tecla@ret^0,c
  3655                           
  3656                           ;teclado.c: 29:                     break;
  3657  0030A6  EFC7  F018         	goto	l4571
  3658  0030AA                     l58:
  3659                           
  3660                           ;teclado.c: 32:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<2))) 
      +                          {
  3661  0030AA  B483               	btfsc	131,2,c	;volatile
  3662  0030AC  EF5A  F018         	goto	u5321
  3663  0030B0  EF5C  F018         	goto	u5320
  3664  0030B4                     u5321:
  3665  0030B4  EF75  F018         	goto	l63
  3666  0030B8                     u5320:
  3667  0030B8                     
  3668                           ;teclado.c: 33:                 atraso_ms(atraso);
  3669  0030B8  0E00               	movlw	0
  3670  0030BA  6E02               	movwf	(atraso_ms@t+1)^0,c
  3671  0030BC  0E0F               	movlw	15
  3672  0030BE  6E01               	movwf	atraso_ms@t^0,c
  3673  0030C0  EC3B  F020         	call	_atraso_ms	;wreg free
  3674  0030C4                     
  3675                           ;teclado.c: 34:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<2
      +                          ))) {
  3676  0030C4  B483               	btfsc	131,2,c	;volatile
  3677  0030C6  EF67  F018         	goto	u5331
  3678  0030CA  EF69  F018         	goto	u5330
  3679  0030CE                     u5331:
  3680  0030CE  EF75  F018         	goto	l63
  3681  0030D2                     u5330:
  3682  0030D2                     l65:
  3683  0030D2  A483               	btfss	131,2,c	;volatile
  3684  0030D4  EF6E  F018         	goto	u5341
  3685  0030D8  EF70  F018         	goto	u5340
  3686  0030DC                     u5341:
  3687  0030DC  EF69  F018         	goto	l65
  3688  0030E0                     u5340:
  3689  0030E0                     
  3690                           ;teclado.c: 36:                     ret = 4 + i;
  3691  0030E0  500D               	movf	tc_tecla@i^0,w,c
  3692  0030E2  0F04               	addlw	4
  3693  0030E4  6E0C               	movwf	tc_tecla@ret^0,c
  3694                           
  3695                           ;teclado.c: 37:                     break;
  3696  0030E6  EFC7  F018         	goto	l4571
  3697  0030EA                     l63:
  3698                           
  3699                           ;teclado.c: 40:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<1))) 
      +                          {
  3700  0030EA  B283               	btfsc	131,1,c	;volatile
  3701  0030EC  EF7A  F018         	goto	u5351
  3702  0030F0  EF7C  F018         	goto	u5350
  3703  0030F4                     u5351:
  3704  0030F4  EF95  F018         	goto	l68
  3705  0030F8                     u5350:
  3706  0030F8                     
  3707                           ;teclado.c: 41:                 atraso_ms(atraso);
  3708  0030F8  0E00               	movlw	0
  3709  0030FA  6E02               	movwf	(atraso_ms@t+1)^0,c
  3710  0030FC  0E0F               	movlw	15
  3711  0030FE  6E01               	movwf	atraso_ms@t^0,c
  3712  003100  EC3B  F020         	call	_atraso_ms	;wreg free
  3713  003104                     
  3714                           ;teclado.c: 42:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<1
      +                          ))) {
  3715  003104  B283               	btfsc	131,1,c	;volatile
  3716  003106  EF87  F018         	goto	u5361
  3717  00310A  EF89  F018         	goto	u5360
  3718  00310E                     u5361:
  3719  00310E  EF95  F018         	goto	l68
  3720  003112                     u5360:
  3721  003112                     l70:
  3722  003112  A283               	btfss	131,1,c	;volatile
  3723  003114  EF8E  F018         	goto	u5371
  3724  003118  EF90  F018         	goto	u5370
  3725  00311C                     u5371:
  3726  00311C  EF89  F018         	goto	l70
  3727  003120                     u5370:
  3728  003120                     
  3729                           ;teclado.c: 44:                     ret = 7 + i;
  3730  003120  500D               	movf	tc_tecla@i^0,w,c
  3731  003122  0F07               	addlw	7
  3732  003124  6E0C               	movwf	tc_tecla@ret^0,c
  3733                           
  3734                           ;teclado.c: 45:                     break;
  3735  003126  EFC7  F018         	goto	l4571
  3736  00312A                     l68:
  3737                           
  3738                           ;teclado.c: 48:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<0))) 
      +                          {
  3739  00312A  B083               	btfsc	131,0,c	;volatile
  3740  00312C  EF9A  F018         	goto	u5381
  3741  003130  EF9C  F018         	goto	u5380
  3742  003134                     u5381:
  3743  003134  EFB5  F018         	goto	l4565
  3744  003138                     u5380:
  3745  003138                     
  3746                           ;teclado.c: 49:                 atraso_ms(atraso);
  3747  003138  0E00               	movlw	0
  3748  00313A  6E02               	movwf	(atraso_ms@t+1)^0,c
  3749  00313C  0E0F               	movlw	15
  3750  00313E  6E01               	movwf	atraso_ms@t^0,c
  3751  003140  EC3B  F020         	call	_atraso_ms	;wreg free
  3752  003144                     
  3753                           ;teclado.c: 50:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<0
      +                          ))) {
  3754  003144  B083               	btfsc	131,0,c	;volatile
  3755  003146  EFA7  F018         	goto	u5391
  3756  00314A  EFA9  F018         	goto	u5390
  3757  00314E                     u5391:
  3758  00314E  EFB5  F018         	goto	l4565
  3759  003152                     u5390:
  3760  003152                     l75:
  3761  003152  A083               	btfss	131,0,c	;volatile
  3762  003154  EFAE  F018         	goto	u5401
  3763  003158  EFB0  F018         	goto	u5400
  3764  00315C                     u5401:
  3765  00315C  EFA9  F018         	goto	l75
  3766  003160                     u5400:
  3767  003160                     
  3768                           ;teclado.c: 52:                     ret = 10 + i;
  3769  003160  500D               	movf	tc_tecla@i^0,w,c
  3770  003162  0F0A               	addlw	10
  3771  003164  6E0C               	movwf	tc_tecla@ret^0,c
  3772                           
  3773                           ;teclado.c: 53:                     break;
  3774  003166  EFC7  F018         	goto	l4571
  3775  00316A                     l4565:
  3776                           
  3777                           ;teclado.c: 56:             (*(volatile __near unsigned char*)0xF81) &= linha[i];
  3778  00316A  0E01               	movlw	low _linha
  3779  00316C  240D               	addwf	tc_tecla@i^0,w,c
  3780  00316E  6EF6               	movwf	tblptrl,c
  3781  003170  6AF7               	clrf	tblptrh,c
  3782  003172  0E06               	movlw	high _linha
  3783  003174  22F7               	addwfc	tblptrh,f,c
  3784  003176                     	if	0	;There are less than 3 active tblptr bytes
  3785  003176                     	endif
  3786  003176  0008               	tblrd		*
  3787  003178  50F5               	movf	tablat,w,c
  3788  00317A  1681               	andwf	129,f,c	;volatile
  3789  00317C                     
  3790                           ;teclado.c: 57:         };
  3791  00317C  2A0D               	incf	tc_tecla@i^0,f,c
  3792  00317E  0E02               	movlw	2
  3793  003180  640D               	cpfsgt	tc_tecla@i^0,c
  3794  003182  EFC5  F018         	goto	u5411
  3795  003186  EFC7  F018         	goto	u5410
  3796  00318A                     u5411:
  3797  00318A  EF2C  F018         	goto	l4529
  3798  00318E                     u5410:
  3799  00318E                     l4571:
  3800                           
  3801                           ;teclado.c: 58:         atraso_ms(atraso_min);
  3802  00318E  0E00               	movlw	0
  3803  003190  6E02               	movwf	(atraso_ms@t+1)^0,c
  3804  003192  0E05               	movlw	5
  3805  003194  6E01               	movwf	atraso_ms@t^0,c
  3806  003196  EC3B  F020         	call	_atraso_ms	;wreg free
  3807  00319A                     
  3808                           ;teclado.c: 59:         to += 5;
  3809  00319A  0E05               	movlw	5
  3810  00319C  2609               	addwf	tc_tecla@to^0,f,c
  3811  00319E  0E00               	movlw	0
  3812  0031A0  220A               	addwfc	(tc_tecla@to+1)^0,f,c
  3813  0031A2                     l4575:
  3814                           
  3815                           ;teclado.c: 21:     while (((to < timeout) || (!timeout))&&(!ret)) {
  3816  0031A2  5007               	movf	tc_tecla@timeout^0,w,c
  3817  0031A4  5C09               	subwf	tc_tecla@to^0,w,c
  3818  0031A6  5008               	movf	(tc_tecla@timeout+1)^0,w,c
  3819  0031A8  580A               	subwfb	(tc_tecla@to+1)^0,w,c
  3820  0031AA  A0D8               	btfss	status,0,c
  3821  0031AC  EFDA  F018         	goto	u5421
  3822  0031B0  EFDC  F018         	goto	u5420
  3823  0031B4                     u5421:
  3824  0031B4  EFE5  F018         	goto	l4579
  3825  0031B8                     u5420:
  3826  0031B8  5007               	movf	tc_tecla@timeout^0,w,c
  3827  0031BA  1008               	iorwf	(tc_tecla@timeout+1)^0,w,c
  3828  0031BC  A4D8               	btfss	status,2,c
  3829  0031BE  EFE3  F018         	goto	u5431
  3830  0031C2  EFE5  F018         	goto	u5430
  3831  0031C6                     u5431:
  3832  0031C6  EFED  F018         	goto	l4581
  3833  0031CA                     u5430:
  3834  0031CA                     l4579:
  3835  0031CA  500C               	movf	tc_tecla@ret^0,w,c
  3836  0031CC  B4D8               	btfsc	status,2,c
  3837  0031CE  EFEB  F018         	goto	u5441
  3838  0031D2  EFED  F018         	goto	u5440
  3839  0031D6                     u5441:
  3840  0031D6  EF2A  F018         	goto	l4523
  3841  0031DA                     u5440:
  3842  0031DA                     l4581:
  3843                           
  3844                           ;teclado.c: 62:     if (!ret)ret = 255;
  3845  0031DA  500C               	movf	tc_tecla@ret^0,w,c
  3846  0031DC  A4D8               	btfss	status,2,c
  3847  0031DE  EFF3  F018         	goto	u5451
  3848  0031E2  EFF5  F018         	goto	u5450
  3849  0031E6                     u5451:
  3850  0031E6  EFF6  F018         	goto	l4585
  3851  0031EA                     u5450:
  3852  0031EA  680C               	setf	tc_tecla@ret^0,c
  3853  0031EC                     l4585:
  3854                           
  3855                           ;teclado.c: 63:     if (ret == 11)ret = 0;
  3856  0031EC  0E0B               	movlw	11
  3857  0031EE  180C               	xorwf	tc_tecla@ret^0,w,c
  3858  0031F0  A4D8               	btfss	status,2,c
  3859  0031F2  EFFD  F018         	goto	u5461
  3860  0031F6  EFFF  F018         	goto	u5460
  3861  0031FA                     u5461:
  3862  0031FA  EF01  F019         	goto	l4589
  3863  0031FE                     u5460:
  3864  0031FE  0E00               	movlw	0
  3865  003200  6E0C               	movwf	tc_tecla@ret^0,c
  3866  003202                     l4589:
  3867                           
  3868                           ;teclado.c: 64:     (*(volatile __near unsigned char*)0xF81) = tmp;
  3869  003202  C00B  FF81         	movff	tc_tecla@tmp,3969	;volatile
  3870                           
  3871                           ;teclado.c: 65:     return ret;
  3872  003206  500C               	movf	tc_tecla@ret^0,w,c
  3873  003208  0012               	return		;funcret
  3874  00320A                     __end_of_tc_tecla:
  3875                           	callstack 0
  3876                           
  3877 ;; *************** function _sprintf *****************
  3878 ;; Defined at:
  3879 ;;		line 9 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;  s               2   74[BANK0 ] PTR unsigned char 
  3882 ;;		 -> ver_quantidade@y(8), esvaziar_tanque@y(8), encher_tanque@y(8), 
  3883 ;;  fmt             2   76[BANK0 ] PTR const unsigned char 
  3884 ;;		 -> STR_28(5), STR_22(5), STR_12(5), 
  3885 ;; Auto vars:     Size  Location     Type
  3886 ;;  f               6   86[BANK0 ] struct _IO_FILE
  3887 ;;  ap              2   84[BANK0 ] PTR void [1]
  3888 ;;		 -> ?_sprintf(2), 
  3889 ;;  ret             2    0        int 
  3890 ;; Return value:  Size  Location     Type
  3891 ;;                  2   74[BANK0 ] int 
  3892 ;; Registers used:
  3893 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3894 ;; Tracked objects:
  3895 ;;		On entry : 0/0
  3896 ;;		On exit  : 0/0
  3897 ;;		Unchanged: 0/0
  3898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3899 ;;      Params:         0       8       0       0       0       0       0
  3900 ;;      Locals:         0      10       0       0       0       0       0
  3901 ;;      Temps:          0       0       0       0       0       0       0
  3902 ;;      Totals:         0      18       0       0       0       0       0
  3903 ;;Total ram usage:       18 bytes
  3904 ;; Hardware stack levels used:    1
  3905 ;; Hardware stack levels required when called:    7
  3906 ;; This function calls:
  3907 ;;		_vfprintf
  3908 ;; This function is called by:
  3909 ;;		_encher_tanque
  3910 ;;		_esvaziar_tanque
  3911 ;;		_ver_quantidade
  3912 ;; This function uses a non-reentrant model
  3913 ;;
  3914                           
  3915                           	psect	text6
  3916  00431A                     __ptext6:
  3917                           	callstack 0
  3918  00431A                     _sprintf:
  3919                           	callstack 22
  3920  00431A  0ECE               	movlw	low (?_sprintf+4)
  3921  00431C  0100               	movlb	0	; () banked
  3922  00431E  6FD4               	movwf	sprintf@ap& (0+255),b
  3923  004320  0E00               	movlw	high (?_sprintf+4)
  3924  004322  6FD5               	movwf	(sprintf@ap+1)& (0+255),b
  3925  004324  C0CA  F0D6         	movff	sprintf@s,sprintf@f
  3926  004328  C0CB  F0D7         	movff	sprintf@s+1,sprintf@f+1
  3927  00432C                     
  3928                           ; BSR set to: 0
  3929  00432C  0E00               	movlw	0
  3930  00432E  6FD9               	movwf	(sprintf@f+3)& (0+255),b
  3931  004330  0E00               	movlw	0
  3932  004332  6FD8               	movwf	(sprintf@f+2)& (0+255),b
  3933  004334                     
  3934                           ; BSR set to: 0
  3935  004334  0E00               	movlw	0
  3936  004336  6FDB               	movwf	(sprintf@f+5)& (0+255),b
  3937  004338  0E00               	movlw	0
  3938  00433A  6FDA               	movwf	(sprintf@f+4)& (0+255),b
  3939  00433C                     
  3940                           ; BSR set to: 0
  3941  00433C  0ED6               	movlw	low sprintf@f
  3942  00433E  6FC4               	movwf	vfprintf@fp& (0+255),b
  3943  004340  0E00               	movlw	high sprintf@f
  3944  004342  6FC5               	movwf	(vfprintf@fp+1)& (0+255),b
  3945  004344  C0CC  F0C6         	movff	sprintf@fmt,vfprintf@fmt
  3946  004348  C0CD  F0C7         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3947  00434C  0ED4               	movlw	low sprintf@ap
  3948  00434E  6FC8               	movwf	vfprintf@ap& (0+255),b
  3949  004350  0E00               	movlw	high sprintf@ap
  3950  004352  6FC9               	movwf	(vfprintf@ap+1)& (0+255),b
  3951  004354  ECD0  F020         	call	_vfprintf	;wreg free
  3952  004358  0100               	movlb	0	; () banked
  3953  00435A  51D8               	movf	(sprintf@f+2)& (0+255),w,b
  3954  00435C  25CA               	addwf	sprintf@s& (0+255),w,b
  3955  00435E  6ED9               	movwf	fsr2l,c
  3956  004360  51D9               	movf	(sprintf@f+3)& (0+255),w,b
  3957  004362  21CB               	addwfc	(sprintf@s+1)& (0+255),w,b
  3958  004364  6EDA               	movwf	fsr2h,c
  3959  004366  0E00               	movlw	0
  3960  004368  6EDF               	movwf	indf2,c
  3961  00436A                     
  3962                           ; BSR set to: 0
  3963  00436A  0012               	return		;funcret
  3964  00436C                     __end_of_sprintf:
  3965                           	callstack 0
  3966                           
  3967 ;; *************** function _vfprintf *****************
  3968 ;; Defined at:
  3969 ;;		line 1368 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3970 ;; Parameters:    Size  Location     Type
  3971 ;;  fp              2   68[BANK0 ] PTR struct _IO_FILE
  3972 ;;		 -> sprintf@f(6), 
  3973 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  3974 ;;		 -> STR_28(5), STR_22(5), STR_12(5), 
  3975 ;;  ap              2   72[BANK0 ] PTR PTR void 
  3976 ;;		 -> sprintf@ap(2), 
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;  cfmt            2  122[COMRAM] PTR unsigned char 
  3979 ;;		 -> STR_28(5), STR_22(5), STR_12(5), 
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  2   68[BANK0 ] int 
  3982 ;; Registers used:
  3983 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3989 ;;      Params:         0       6       0       0       0       0       0
  3990 ;;      Locals:         2       0       0       0       0       0       0
  3991 ;;      Temps:          0       0       0       0       0       0       0
  3992 ;;      Totals:         2       6       0       0       0       0       0
  3993 ;;Total ram usage:        8 bytes
  3994 ;; Hardware stack levels used:    1
  3995 ;; Hardware stack levels required when called:    6
  3996 ;; This function calls:
  3997 ;;		_vfpfcnvrt
  3998 ;; This function is called by:
  3999 ;;		_sprintf
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003                           	psect	text7
  4004  0041A0                     __ptext7:
  4005                           	callstack 0
  4006  0041A0                     _vfprintf:
  4007                           	callstack 22
  4008  0041A0                     
  4009                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprintf(FIL
      +                          E *fp, const char *fmt, va_list ap);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1369: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 13
      +                          71:     char *cfmt;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 137
      +                          3:     cfmt = (char *)fmt;
  4010  0041A0  C0C6  F07B         	movff	vfprintf@fmt,vfprintf@cfmt
  4011  0041A4  C0C7  F07C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4012  0041A8                     
  4013                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 0;
  4014  0041A8  0E00               	movlw	0
  4015  0041AA  0100               	movlb	0	; () banked
  4016  0041AC  6FEB               	movwf	(_nout+1)& (0+255),b
  4017  0041AE  0E00               	movlw	0
  4018  0041B0  6FEA               	movwf	_nout& (0+255),b
  4019                           
  4020                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt
      +                          ) {
  4021  0041B2  EFEE  F020         	goto	l4495
  4022  0041B6                     l4493:
  4023                           
  4024                           ; BSR set to: 0
  4025                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nout += 
      +                          vfpfcnvrt(fp, &cfmt, ap);
  4026  0041B6  C0C4  F071         	movff	vfprintf@fp,vfpfcnvrt@fp
  4027  0041BA  C0C5  F072         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4028  0041BE  0E7B               	movlw	low vfprintf@cfmt
  4029  0041C0  6E73               	movwf	vfpfcnvrt@fmt^0,c
  4030  0041C2  0E00               	movlw	high vfprintf@cfmt
  4031  0041C4  6E74               	movwf	(vfpfcnvrt@fmt+1)^0,c
  4032  0041C6  C0C8  F075         	movff	vfprintf@ap,vfpfcnvrt@ap
  4033  0041CA  C0C9  F076         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4034  0041CE  EC00  F011         	call	_vfpfcnvrt	;wreg free
  4035  0041D2  5071               	movf	?_vfpfcnvrt^0,w,c
  4036  0041D4  0100               	movlb	0	; () banked
  4037  0041D6  27EA               	addwf	_nout& (0+255),f,b
  4038  0041D8  5072               	movf	(?_vfpfcnvrt+1)^0,w,c
  4039  0041DA  23EB               	addwfc	(_nout+1)& (0+255),f,b
  4040  0041DC                     l4495:
  4041                           
  4042                           ; BSR set to: 0
  4043                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt
      +                          ) {
  4044  0041DC  C07B  FFF6         	movff	vfprintf@cfmt,tblptrl
  4045  0041E0  C07C  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4046  0041E4                     	if	0	;tblptru may be non-zero
  4047  0041E4                     	endif
  4048  0041E4                     	if	0	;tblptru may be non-zero
  4049  0041E4                     	endif
  4050  0041E4  0008               	tblrd		*
  4051  0041E6  50F5               	movf	tablat,w,c
  4052  0041E8  0900               	iorlw	0
  4053  0041EA  A4D8               	btfss	status,2,c
  4054  0041EC  EFFA  F020         	goto	u5251
  4055  0041F0  EFFC  F020         	goto	u5250
  4056  0041F4                     u5251:
  4057  0041F4  EFDB  F020         	goto	l4493
  4058  0041F8                     u5250:
  4059  0041F8                     
  4060                           ; BSR set to: 0
  4061                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return nout;
  4062  0041F8  C0EA  F0C4         	movff	_nout,?_vfprintf
  4063  0041FC  C0EB  F0C5         	movff	_nout+1,?_vfprintf+1
  4064  004200                     
  4065                           ; BSR set to: 0
  4066  004200  0012               	return		;funcret
  4067  004202                     __end_of_vfprintf:
  4068                           	callstack 0
  4069                           
  4070 ;; *************** function _vfpfcnvrt *****************
  4071 ;; Defined at:
  4072 ;;		line 670 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4073 ;; Parameters:    Size  Location     Type
  4074 ;;  fp              2  112[COMRAM] PTR struct _IO_FILE
  4075 ;;		 -> sprintf@f(6), 
  4076 ;;  fmt             2  114[COMRAM] PTR PTR unsigned char 
  4077 ;;		 -> vfprintf@cfmt(2), 
  4078 ;;  ap              2  116[COMRAM] PTR PTR void 
  4079 ;;		 -> sprintf@ap(2), 
  4080 ;; Auto vars:     Size  Location     Type
  4081 ;;  llu             8    0        unsigned long long 
  4082 ;;  ll              8    0        long long 
  4083 ;;  f               4   60[BANK0 ] long long 
  4084 ;;  ct              3   64[BANK0 ] unsigned char [3]
  4085 ;;  vp              3    0        PTR void 
  4086 ;;  cp              3    0        PTR unsigned char 
  4087 ;;  i               2    0        int 
  4088 ;;  done            2    0        int 
  4089 ;;  c               1   67[BANK0 ] unsigned char 
  4090 ;; Return value:  Size  Location     Type
  4091 ;;                  2  112[COMRAM] int 
  4092 ;; Registers used:
  4093 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4094 ;; Tracked objects:
  4095 ;;		On entry : 0/0
  4096 ;;		On exit  : 0/0
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4099 ;;      Params:         6       0       0       0       0       0       0
  4100 ;;      Locals:         0      12       0       0       0       0       0
  4101 ;;      Temps:          4       0       0       0       0       0       0
  4102 ;;      Totals:        10      12       0       0       0       0       0
  4103 ;;Total ram usage:       22 bytes
  4104 ;; Hardware stack levels used:    1
  4105 ;; Hardware stack levels required when called:    5
  4106 ;; This function calls:
  4107 ;;		_atoi
  4108 ;;		_efgtoa
  4109 ;;		_fputc
  4110 ;;		_isdigit
  4111 ;;		_isupper
  4112 ;;		_strncmp
  4113 ;;		_tolower
  4114 ;; This function is called by:
  4115 ;;		_vfprintf
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           	psect	text8
  4120  002200                     __ptext8:
  4121                           	callstack 0
  4122  002200                     _vfpfcnvrt:
  4123                           	callstack 22
  4124  002200                     
  4125                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int vfpfcn
      +                          vrt(FILE *fp, char *fmt[], va_list ap);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\c
      +                          ommon\doprnt.c: 671: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          672:     char c, *cp, ct[3];;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\dopr
      +                          nt.c: 673:     int done, i;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 674:     long long ll;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 675:     unsigned long long llu;
  4126  002200  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4127  002204  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4128  002208  CFDE FFF6          	movff	postinc2,tblptrl
  4129  00220C  CFDD FFF7          	movff	postdec2,tblptrh
  4130  002210                     	if	0	;tblptru may be non-zero
  4131  002210                     	endif
  4132  002210                     	if	0	;tblptru may be non-zero
  4133  002210                     	endif
  4134  002210  0008               	tblrd		*
  4135  002212  50F5               	movf	tablat,w,c
  4136  002214  0A25               	xorlw	37
  4137  002216  A4D8               	btfss	status,2,c
  4138  002218  EF10  F011         	goto	u5081
  4139  00221C  EF12  F011         	goto	u5080
  4140  002220                     u5081:
  4141  002220  EF19  F013         	goto	l4445
  4142  002224                     u5080:
  4143  002224                     
  4144                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*fmt;
  4145  002224  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4146  002228  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4147  00222C  2ADE               	incf	postinc2,f,c
  4148  00222E  0E00               	movlw	0
  4149  002230  22DD               	addwfc	postdec2,f,c
  4150  002232                     
  4151                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flags = w
      +                          idth = 0;
  4152  002232  0E00               	movlw	0
  4153  002234  0100               	movlb	0	; () banked
  4154  002236  6FED               	movwf	(_width+1)& (0+255),b
  4155  002238  0E00               	movlw	0
  4156  00223A  6FEC               	movwf	_width& (0+255),b
  4157  00223C  C0EC  F0F0         	movff	_width,_flags
  4158  002240  C0ED  F0F1         	movff	_width+1,_flags+1
  4159  002244                     
  4160                           ; BSR set to: 0
  4161                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec = -1
      +                          ;
  4162  002244  69EE               	setf	_prec& (0+255),b
  4163  002246  69EF               	setf	(_prec+1)& (0+255),b
  4164  002248                     
  4165                           ; BSR set to: 0
  4166                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if ((*fmt
      +                          )[0] == '.') {
  4167  002248  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4168  00224C  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4169  002250  CFDE FFF6          	movff	postinc2,tblptrl
  4170  002254  CFDD FFF7          	movff	postdec2,tblptrh
  4171  002258                     	if	0	;tblptru may be non-zero
  4172  002258                     	endif
  4173  002258                     	if	0	;tblptru may be non-zero
  4174  002258                     	endif
  4175  002258  0008               	tblrd		*
  4176  00225A  50F5               	movf	tablat,w,c
  4177  00225C  0A2E               	xorlw	46
  4178  00225E  A4D8               	btfss	status,2,c
  4179  002260  EF34  F011         	goto	u5091
  4180  002264  EF36  F011         	goto	u5090
  4181  002268                     u5091:
  4182  002268  EFB4  F011         	goto	l4391
  4183  00226C                     u5090:
  4184  00226C                     
  4185                           ; BSR set to: 0
  4186                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             prec 
      +                          = 0;
  4187  00226C  0E00               	movlw	0
  4188  00226E  6FEF               	movwf	(_prec+1)& (0+255),b
  4189  002270  0E00               	movlw	0
  4190  002272  6FEE               	movwf	_prec& (0+255),b
  4191  002274                     
  4192                           ; BSR set to: 0
  4193                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             ++*fm
      +                          t;
  4194  002274  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4195  002278  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4196  00227C  2ADE               	incf	postinc2,f,c
  4197  00227E  0E00               	movlw	0
  4198  002280  22DD               	addwfc	postdec2,f,c
  4199  002282                     
  4200                           ; BSR set to: 0
  4201                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             if ((
      +                          *fmt)[0] == '*') {
  4202  002282  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4203  002286  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4204  00228A  CFDE FFF6          	movff	postinc2,tblptrl
  4205  00228E  CFDD FFF7          	movff	postdec2,tblptrh
  4206  002292                     	if	0	;tblptru may be non-zero
  4207  002292                     	endif
  4208  002292                     	if	0	;tblptru may be non-zero
  4209  002292                     	endif
  4210  002292  0008               	tblrd		*
  4211  002294  50F5               	movf	tablat,w,c
  4212  002296  0A2A               	xorlw	42
  4213  002298  A4D8               	btfss	status,2,c
  4214  00229A  EF51  F011         	goto	u5101
  4215  00229E  EF53  F011         	goto	u5100
  4216  0022A2                     u5101:
  4217  0022A2  EF70  F011         	goto	l4381
  4218  0022A6                     u5100:
  4219  0022A6                     
  4220                           ; BSR set to: 0
  4221                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:                 +
      +                          +*fmt;
  4222  0022A6  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4223  0022AA  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4224  0022AE  2ADE               	incf	postinc2,f,c
  4225  0022B0  0E00               	movlw	0
  4226  0022B2  22DD               	addwfc	postdec2,f,c
  4227                           
  4228                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:                 p
      +                          rec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4229  0022B4  C075  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4230  0022B8  C076  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4231  0022BC  CFDF F077          	movff	indf2,??_vfpfcnvrt
  4232  0022C0  0E02               	movlw	2
  4233  0022C2  26DE               	addwf	postinc2,f,c
  4234  0022C4  CFDF F078          	movff	indf2,??_vfpfcnvrt+1
  4235  0022C8  0E00               	movlw	0
  4236  0022CA  22DD               	addwfc	postdec2,f,c
  4237  0022CC  C077  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4238  0022D0  C078  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4239  0022D4  CFDE F0EE          	movff	postinc2,_prec
  4240  0022D8  CFDD F0EF          	movff	postdec2,_prec+1
  4241                           
  4242                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             } els
      +                          e {
  4243  0022DC  EFB4  F011         	goto	l4391
  4244  0022E0                     l4381:
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:                 p
      +                          rec = atoi(*fmt);
  4248  0022E0  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4249  0022E4  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4250  0022E8  CFDE F008          	movff	postinc2,atoi@s
  4251  0022EC  CFDD F009          	movff	postdec2,atoi@s+1
  4252  0022F0  ECDF  F019         	call	_atoi	;wreg free
  4253  0022F4  C008  F0EE         	movff	?_atoi,_prec
  4254  0022F8  C009  F0EF         	movff	?_atoi+1,_prec+1
  4255                           
  4256                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:                 w
      +                          hile ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4257  0022FC  EF87  F011         	goto	l4385
  4258  002300                     l4383:
  4259                           
  4260                           ; BSR set to: 0
  4261                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:                  
      +                             ++*fmt;
  4262  002300  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4263  002304  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4264  002308  2ADE               	incf	postinc2,f,c
  4265  00230A  0E00               	movlw	0
  4266  00230C  22DD               	addwfc	postdec2,f,c
  4267  00230E                     l4385:
  4268  00230E  0ED0               	movlw	208
  4269  002310  6E77               	movwf	??_vfpfcnvrt^0,c
  4270  002312  0EFF               	movlw	255
  4271  002314  6E78               	movwf	(??_vfpfcnvrt+1)^0,c
  4272  002316  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4273  00231A  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4274  00231E  CFDE FFF6          	movff	postinc2,tblptrl
  4275  002322  CFDD FFF7          	movff	postdec2,tblptrh
  4276  002326                     	if	0	;tblptru may be non-zero
  4277  002326                     	endif
  4278  002326                     	if	0	;tblptru may be non-zero
  4279  002326                     	endif
  4280  002326  0008               	tblrd		*
  4281  002328  50F5               	movf	tablat,w,c
  4282  00232A  6E79               	movwf	(??_vfpfcnvrt+2)^0,c
  4283  00232C  6A7A               	clrf	(??_vfpfcnvrt+3)^0,c
  4284  00232E  5077               	movf	??_vfpfcnvrt^0,w,c
  4285  002330  2679               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4286  002332  5078               	movf	(??_vfpfcnvrt+1)^0,w,c
  4287  002334  227A               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4288  002336  507A               	movf	(??_vfpfcnvrt+3)^0,w,c
  4289  002338  E10A               	bnz	u5110
  4290  00233A  0E0A               	movlw	10
  4291  00233C  5C79               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4292  00233E  A0D8               	btfss	status,0,c
  4293  002340  EFA4  F011         	goto	u5111
  4294  002344  EFA7  F011         	goto	u5110
  4295  002348                     u5111:
  4296  002348  0E01               	movlw	1
  4297  00234A  EFA8  F011         	goto	u5120
  4298  00234E                     u5110:
  4299  00234E  0E00               	movlw	0
  4300  002350                     u5120:
  4301  002350  0100               	movlb	0	; () banked
  4302  002352  6FB8               	movwf	_vfpfcnvrt$794& (0+255),b
  4303  002354  6BB9               	clrf	(_vfpfcnvrt$794+1)& (0+255),b
  4304  002356                     
  4305                           ; BSR set to: 0
  4306  002356  51B8               	movf	_vfpfcnvrt$794& (0+255),w,b
  4307  002358  11B9               	iorwf	(_vfpfcnvrt$794+1)& (0+255),w,b
  4308  00235A  A4D8               	btfss	status,2,c
  4309  00235C  EFB2  F011         	goto	u5131
  4310  002360  EFB4  F011         	goto	u5130
  4311  002364                     u5131:
  4312  002364  EF80  F011         	goto	l4383
  4313  002368                     u5130:
  4314  002368                     l4391:
  4315                           
  4316                           ; BSR set to: 0
  4317                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0] = t
      +                          olower((int)(*fmt)[0]);
  4318  002368  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4319  00236C  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4320  002370  CFDE FFF6          	movff	postinc2,tblptrl
  4321  002374  CFDD FFF7          	movff	postdec2,tblptrh
  4322  002378                     	if	0	;tblptru may be non-zero
  4323  002378                     	endif
  4324  002378                     	if	0	;tblptru may be non-zero
  4325  002378                     	endif
  4326  002378  0008               	tblrd		*
  4327  00237A  50F5               	movf	tablat,w,c
  4328  00237C  6E07               	movwf	tolower@c^0,c
  4329  00237E  6A08               	clrf	(tolower@c+1)^0,c
  4330  002380  EC01  F021         	call	_tolower	;wreg free
  4331  002384  5007               	movf	?_tolower^0,w,c
  4332  002386  0100               	movlb	0	; () banked
  4333  002388  6FC0               	movwf	vfpfcnvrt@ct& (0+255),b
  4334  00238A                     
  4335                           ; BSR set to: 0
  4336                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (ct[0]
      +                          ) {
  4337  00238A  51C0               	movf	vfpfcnvrt@ct& (0+255),w,b
  4338  00238C  B4D8               	btfsc	status,2,c
  4339  00238E  EFCB  F011         	goto	u5141
  4340  002392  EFCD  F011         	goto	u5140
  4341  002396                     u5141:
  4342  002396  EF07  F012         	goto	l4401
  4343  00239A                     u5140:
  4344  00239A                     
  4345                           ; BSR set to: 0
  4346                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             ct[1]
      +                           = tolower((int)(*fmt)[1]);
  4347  00239A  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4348  00239E  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4349  0023A2  CFDE F077          	movff	postinc2,??_vfpfcnvrt
  4350  0023A6  CFDD F078          	movff	postdec2,??_vfpfcnvrt+1
  4351  0023AA  0E01               	movlw	1
  4352  0023AC  2677               	addwf	??_vfpfcnvrt^0,f,c
  4353  0023AE  0E00               	movlw	0
  4354  0023B0  2278               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4355  0023B2  C077  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4356  0023B6  C078  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4357  0023BA                     	if	0	;tblptru may be non-zero
  4358  0023BA                     	endif
  4359  0023BA                     	if	0	;tblptru may be non-zero
  4360  0023BA                     	endif
  4361  0023BA  0008               	tblrd		*
  4362  0023BC  50F5               	movf	tablat,w,c
  4363  0023BE  6E07               	movwf	tolower@c^0,c
  4364  0023C0  6A08               	clrf	(tolower@c+1)^0,c
  4365  0023C2  EC01  F021         	call	_tolower	;wreg free
  4366  0023C6  5007               	movf	?_tolower^0,w,c
  4367  0023C8  0100               	movlb	0	; () banked
  4368  0023CA  6FC1               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  4369  0023CC                     
  4370                           ; BSR set to: 0
  4371                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             if (c
      +                          t[1]) {
  4372  0023CC  51C1               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  4373  0023CE  B4D8               	btfsc	status,2,c
  4374  0023D0  EFEC  F011         	goto	u5151
  4375  0023D4  EFEE  F011         	goto	u5150
  4376  0023D8                     u5151:
  4377  0023D8  EF07  F012         	goto	l4401
  4378  0023DC                     u5150:
  4379  0023DC                     
  4380                           ; BSR set to: 0
  4381                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:                 c
      +                          t[2] = tolower((int)(*fmt)[2]);
  4382  0023DC  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4383  0023E0  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4384  0023E4  CFDE F077          	movff	postinc2,??_vfpfcnvrt
  4385  0023E8  CFDD F078          	movff	postdec2,??_vfpfcnvrt+1
  4386  0023EC  0E02               	movlw	2
  4387  0023EE  2677               	addwf	??_vfpfcnvrt^0,f,c
  4388  0023F0  0E00               	movlw	0
  4389  0023F2  2278               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4390  0023F4  C077  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4391  0023F8  C078  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4392  0023FC                     	if	0	;tblptru may be non-zero
  4393  0023FC                     	endif
  4394  0023FC                     	if	0	;tblptru may be non-zero
  4395  0023FC                     	endif
  4396  0023FC  0008               	tblrd		*
  4397  0023FE  50F5               	movf	tablat,w,c
  4398  002400  6E07               	movwf	tolower@c^0,c
  4399  002402  6A08               	clrf	(tolower@c+1)^0,c
  4400  002404  EC01  F021         	call	_tolower	;wreg free
  4401  002408  5007               	movf	?_tolower^0,w,c
  4402  00240A  0100               	movlb	0	; () banked
  4403  00240C  6FC2               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4404  00240E                     l4401:
  4405                           
  4406                           ; BSR set to: 0
  4407                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (ct[0]
      +                           == 'f') {
  4408  00240E  0E66               	movlw	102
  4409  002410  19C0               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  4410  002412  A4D8               	btfss	status,2,c
  4411  002414  EF0E  F012         	goto	u5161
  4412  002418  EF10  F012         	goto	u5160
  4413  00241C                     u5161:
  4414  00241C  EF50  F012         	goto	l4413
  4415  002420                     u5160:
  4416  002420                     
  4417                           ; BSR set to: 0
  4418                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             c = (
      +                          *fmt)[0];
  4419  002420  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4420  002424  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4421  002428  CFDE FFF6          	movff	postinc2,tblptrl
  4422  00242C  CFDD FFF7          	movff	postdec2,tblptrh
  4423  002430                     	if	0	;tblptru may be non-zero
  4424  002430                     	endif
  4425  002430                     	if	0	;tblptru may be non-zero
  4426  002430                     	endif
  4427  002430  0008               	tblrd		*
  4428  002432  CFF5 F0C3          	movff	tablat,vfpfcnvrt@c
  4429  002436                     
  4430                           ; BSR set to: 0
  4431                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             ++*fm
      +                          t;
  4432  002436  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4433  00243A  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4434  00243E  2ADE               	incf	postinc2,f,c
  4435  002440  0E00               	movlw	0
  4436  002442  22DD               	addwfc	postdec2,f,c
  4437  002444                     
  4438                           ; BSR set to: 0
  4439                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             f = (
      +                          long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4440  002444  C075  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4441  002448  C076  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4442  00244C  CFDF F077          	movff	indf2,??_vfpfcnvrt
  4443  002450  0E04               	movlw	4
  4444  002452  26DE               	addwf	postinc2,f,c
  4445  002454  CFDF F078          	movff	indf2,??_vfpfcnvrt+1
  4446  002458  0E00               	movlw	0
  4447  00245A  22DD               	addwfc	postdec2,f,c
  4448  00245C  C077  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4449  002460  C078  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4450  002464  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f
  4451  002468  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+1
  4452  00246C  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f+2
  4453  002470  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+3
  4454  002474                     l4409:
  4455                           
  4456                           ; BSR set to: 0
  4457                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             retur
      +                          n efgtoa(fp, f, c);
  4458  002474  C071  F065         	movff	vfpfcnvrt@fp,efgtoa@fp
  4459  002478  C072  F066         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4460  00247C  C0BC  F067         	movff	vfpfcnvrt@f,efgtoa@f
  4461  002480  C0BD  F068         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  4462  002484  C0BE  F069         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  4463  002488  C0BF  F06A         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  4464  00248C  C0C3  F06B         	movff	vfpfcnvrt@c,efgtoa@c
  4465  002490  EC78  F003         	call	_efgtoa	;wreg free
  4466  002494  C065  F071         	movff	?_efgtoa,?_vfpfcnvrt
  4467  002498  C066  F072         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4468  00249C  EF34  F013         	goto	l1063
  4469  0024A0                     l4413:
  4470                           
  4471                           ; BSR set to: 0
  4472                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (!strn
      +                          cmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  4473  0024A0  0EC0               	movlw	low vfpfcnvrt@ct
  4474  0024A2  6E01               	movwf	strncmp@_l^0,c
  4475  0024A4  0E00               	movlw	high vfpfcnvrt@ct
  4476  0024A6  6E02               	movwf	(strncmp@_l+1)^0,c
  4477  0024A8  0EE9               	movlw	low STR_40
  4478  0024AA  6E03               	movwf	strncmp@_r^0,c
  4479  0024AC  0E06               	movlw	high STR_40
  4480  0024AE  6E04               	movwf	(strncmp@_r+1)^0,c
  4481  0024B0  0E00               	movlw	0
  4482  0024B2  6E06               	movwf	(strncmp@n+1)^0,c
  4483  0024B4  0E02               	movlw	2
  4484  0024B6  6E05               	movwf	strncmp@n^0,c
  4485  0024B8  EC4D  F01D         	call	_strncmp	;wreg free
  4486  0024BC  5001               	movf	?_strncmp^0,w,c
  4487  0024BE  1002               	iorwf	(?_strncmp+1)^0,w,c
  4488  0024C0  A4D8               	btfss	status,2,c
  4489  0024C2  EF65  F012         	goto	u5171
  4490  0024C6  EF67  F012         	goto	u5170
  4491  0024CA                     u5171:
  4492  0024CA  EFE3  F012         	goto	l4429
  4493  0024CE                     u5170:
  4494  0024CE                     
  4495                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             if ((
      +                          0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  4496  0024CE  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4497  0024D2  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4498  0024D6  CFDE F077          	movff	postinc2,??_vfpfcnvrt
  4499  0024DA  CFDD F078          	movff	postdec2,??_vfpfcnvrt+1
  4500  0024DE  0E01               	movlw	1
  4501  0024E0  2677               	addwf	??_vfpfcnvrt^0,f,c
  4502  0024E2  0E00               	movlw	0
  4503  0024E4  2278               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4504  0024E6  C077  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4505  0024EA  C078  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4506  0024EE                     	if	0	;tblptru may be non-zero
  4507  0024EE                     	endif
  4508  0024EE                     	if	0	;tblptru may be non-zero
  4509  0024EE                     	endif
  4510  0024EE  0008               	tblrd		*
  4511  0024F0  CFF5 F0C3          	movff	tablat,vfpfcnvrt@c
  4512  0024F4  0EBF               	movlw	191
  4513  0024F6  6E77               	movwf	??_vfpfcnvrt^0,c
  4514  0024F8  0EFF               	movlw	255
  4515  0024FA  6E78               	movwf	(??_vfpfcnvrt+1)^0,c
  4516  0024FC  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4517  002500  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4518  002504  CFDE FFF6          	movff	postinc2,tblptrl
  4519  002508  CFDD FFF7          	movff	postdec2,tblptrh
  4520  00250C                     	if	0	;tblptru may be non-zero
  4521  00250C                     	endif
  4522  00250C                     	if	0	;tblptru may be non-zero
  4523  00250C                     	endif
  4524  00250C  0008               	tblrd		*
  4525  00250E  50F5               	movf	tablat,w,c
  4526  002510  6E79               	movwf	(??_vfpfcnvrt+2)^0,c
  4527  002512  6A7A               	clrf	(??_vfpfcnvrt+3)^0,c
  4528  002514  5077               	movf	??_vfpfcnvrt^0,w,c
  4529  002516  2679               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4530  002518  5078               	movf	(??_vfpfcnvrt+1)^0,w,c
  4531  00251A  227A               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4532  00251C  507A               	movf	(??_vfpfcnvrt+3)^0,w,c
  4533  00251E  E10A               	bnz	u5180
  4534  002520  0E1A               	movlw	26
  4535  002522  5C79               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4536  002524  A0D8               	btfss	status,0,c
  4537  002526  EF97  F012         	goto	u5181
  4538  00252A  EF9A  F012         	goto	u5180
  4539  00252E                     u5181:
  4540  00252E  0E01               	movlw	1
  4541  002530  EF9B  F012         	goto	u5190
  4542  002534                     u5180:
  4543  002534  0E00               	movlw	0
  4544  002536                     u5190:
  4545  002536  0100               	movlb	0	; () banked
  4546  002538  6FBA               	movwf	_vfpfcnvrt$798& (0+255),b
  4547  00253A  6BBB               	clrf	(_vfpfcnvrt$798+1)& (0+255),b
  4548  00253C                     
  4549                           ; BSR set to: 0
  4550  00253C  51BA               	movf	_vfpfcnvrt$798& (0+255),w,b
  4551  00253E  11BB               	iorwf	(_vfpfcnvrt$798+1)& (0+255),w,b
  4552  002540  B4D8               	btfsc	status,2,c
  4553  002542  EFA5  F012         	goto	u5201
  4554  002546  EFA7  F012         	goto	u5200
  4555  00254A                     u5201:
  4556  00254A  EFC1  F012         	goto	l4423
  4557  00254E                     u5200:
  4558  00254E                     
  4559                           ; BSR set to: 0
  4560                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:                 f
      +                           = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4561  00254E  C075  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4562  002552  C076  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4563  002556  CFDF F077          	movff	indf2,??_vfpfcnvrt
  4564  00255A  0E04               	movlw	4
  4565  00255C  26DE               	addwf	postinc2,f,c
  4566  00255E  CFDF F078          	movff	indf2,??_vfpfcnvrt+1
  4567  002562  0E00               	movlw	0
  4568  002564  22DD               	addwfc	postdec2,f,c
  4569  002566  C077  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4570  00256A  C078  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4571  00256E  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f
  4572  002572  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+1
  4573  002576  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f+2
  4574  00257A  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+3
  4575                           
  4576                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             } els
      +                          e {
  4577  00257E  EFD9  F012         	goto	l1070
  4578  002582                     l4423:
  4579                           
  4580                           ; BSR set to: 0
  4581                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:                 f
      +                           = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4582  002582  C075  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4583  002586  C076  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4584  00258A  CFDF F077          	movff	indf2,??_vfpfcnvrt
  4585  00258E  0E04               	movlw	4
  4586  002590  26DE               	addwf	postinc2,f,c
  4587  002592  CFDF F078          	movff	indf2,??_vfpfcnvrt+1
  4588  002596  0E00               	movlw	0
  4589  002598  22DD               	addwfc	postdec2,f,c
  4590  00259A  C077  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4591  00259E  C078  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4592  0025A2  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f
  4593  0025A6  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+1
  4594  0025AA  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f+2
  4595  0025AE  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+3
  4596  0025B2                     l1070:
  4597                           
  4598                           ; BSR set to: 0
  4599                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             *fmt 
      +                          += ((sizeof("lf")/sizeof("lf"[0]))-1);
  4600  0025B2  0E02               	movlw	2
  4601  0025B4  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4602  0025B8  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4603  0025BC  26DE               	addwf	postinc2,f,c
  4604  0025BE  0E00               	movlw	0
  4605  0025C0  22DD               	addwfc	postdec2,f,c
  4606  0025C2  EF3A  F012         	goto	l4409
  4607  0025C6                     l4429:
  4608                           
  4609                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if ((*fm
      +                          t)[0] == '%') {
  4610  0025C6  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4611  0025CA  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4612  0025CE  CFDE FFF6          	movff	postinc2,tblptrl
  4613  0025D2  CFDD FFF7          	movff	postdec2,tblptrh
  4614  0025D6                     	if	0	;tblptru may be non-zero
  4615  0025D6                     	endif
  4616  0025D6                     	if	0	;tblptru may be non-zero
  4617  0025D6                     	endif
  4618  0025D6  0008               	tblrd		*
  4619  0025D8  50F5               	movf	tablat,w,c
  4620  0025DA  0A25               	xorlw	37
  4621  0025DC  A4D8               	btfss	status,2,c
  4622  0025DE  EFF3  F012         	goto	u5211
  4623  0025E2  EFF5  F012         	goto	u5210
  4624  0025E6                     u5211:
  4625  0025E6  EF0C  F013         	goto	l4439
  4626  0025EA                     u5210:
  4627  0025EA                     
  4628                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:             ++*f
      +                          mt;
  4629  0025EA  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4630  0025EE  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4631  0025F2  2ADE               	incf	postinc2,f,c
  4632  0025F4  0E00               	movlw	0
  4633  0025F6  22DD               	addwfc	postdec2,f,c
  4634  0025F8                     
  4635                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:             fput
      +                          c((int)'%', fp);
  4636  0025F8  0E00               	movlw	0
  4637  0025FA  6E02               	movwf	(fputc@c+1)^0,c
  4638  0025FC  0E25               	movlw	37
  4639  0025FE  6E01               	movwf	fputc@c^0,c
  4640  002600  C071  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4641  002604  C072  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4642  002608  ECB8  F01D         	call	_fputc	;wreg free
  4643  00260C                     l4435:
  4644                           
  4645                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:             retu
      +                          rn 1;
  4646  00260C  0E00               	movlw	0
  4647  00260E  6E72               	movwf	(?_vfpfcnvrt+1)^0,c
  4648  002610  0E01               	movlw	1
  4649  002612  6E71               	movwf	?_vfpfcnvrt^0,c
  4650  002614  EF34  F013         	goto	l1063
  4651  002618                     l4439:
  4652                           
  4653                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*fmt;
  4654  002618  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4655  00261C  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4656  002620  2ADE               	incf	postinc2,f,c
  4657  002622  0E00               	movlw	0
  4658  002624  22DD               	addwfc	postdec2,f,c
  4659  002626                     
  4660                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         return 0
      +                          ;
  4661  002626  0E00               	movlw	0
  4662  002628  6E72               	movwf	(?_vfpfcnvrt+1)^0,c
  4663  00262A  0E00               	movlw	0
  4664  00262C  6E71               	movwf	?_vfpfcnvrt^0,c
  4665  00262E  EF34  F013         	goto	l1063
  4666  002632                     l4445:
  4667                           
  4668                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((int)(
      +                          *fmt)[0], fp);
  4669  002632  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4670  002636  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4671  00263A  CFDE FFF6          	movff	postinc2,tblptrl
  4672  00263E  CFDD FFF7          	movff	postdec2,tblptrh
  4673  002642                     	if	0	;tblptru may be non-zero
  4674  002642                     	endif
  4675  002642                     	if	0	;tblptru may be non-zero
  4676  002642                     	endif
  4677  002642  0008               	tblrd		*
  4678  002644  50F5               	movf	tablat,w,c
  4679  002646  6E01               	movwf	fputc@c^0,c
  4680  002648  6A02               	clrf	(fputc@c+1)^0,c
  4681  00264A  C071  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4682  00264E  C072  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4683  002652  ECB8  F01D         	call	_fputc	;wreg free
  4684  002656                     
  4685                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  4686  002656  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4687  00265A  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4688  00265E  2ADE               	incf	postinc2,f,c
  4689  002660  0E00               	movlw	0
  4690  002662  22DD               	addwfc	postdec2,f,c
  4691  002664  EF06  F013         	goto	l4435
  4692  002668                     l1063:
  4693  002668  0012               	return		;funcret
  4694  00266A                     __end_of_vfpfcnvrt:
  4695                           	callstack 0
  4696                           
  4697 ;; *************** function _strncmp *****************
  4698 ;; Defined at:
  4699 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  4700 ;; Parameters:    Size  Location     Type
  4701 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  4702 ;;		 -> vfpfcnvrt@ct(3), 
  4703 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  4704 ;;		 -> STR_42(3), 
  4705 ;;  n               2    4[COMRAM] unsigned int 
  4706 ;; Auto vars:     Size  Location     Type
  4707 ;;  r               2    9[COMRAM] PTR const unsigned char 
  4708 ;;		 -> STR_42(3), 
  4709 ;;  l               2    7[COMRAM] PTR const unsigned char 
  4710 ;;		 -> vfpfcnvrt@ct(3), 
  4711 ;; Return value:  Size  Location     Type
  4712 ;;                  2    0[COMRAM] int 
  4713 ;; Registers used:
  4714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4715 ;; Tracked objects:
  4716 ;;		On entry : 0/0
  4717 ;;		On exit  : 0/0
  4718 ;;		Unchanged: 0/0
  4719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4720 ;;      Params:         6       0       0       0       0       0       0
  4721 ;;      Locals:         4       0       0       0       0       0       0
  4722 ;;      Temps:          1       0       0       0       0       0       0
  4723 ;;      Totals:        11       0       0       0       0       0       0
  4724 ;;Total ram usage:       11 bytes
  4725 ;; Hardware stack levels used:    1
  4726 ;; This function calls:
  4727 ;;		Nothing
  4728 ;; This function is called by:
  4729 ;;		_vfpfcnvrt
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           
  4733                           	psect	text9
  4734  003A9A                     __ptext9:
  4735                           	callstack 0
  4736  003A9A                     _strncmp:
  4737                           	callstack 26
  4738  003A9A  C001  F008         	movff	strncmp@_l,strncmp@l
  4739  003A9E  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  4740  003AA2  C003  F00A         	movff	strncmp@_r,strncmp@r
  4741  003AA6  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  4742  003AAA  0605               	decf	strncmp@n^0,f,c
  4743  003AAC  A0D8               	btfss	status,0,c
  4744  003AAE  0606               	decf	(strncmp@n+1)^0,f,c
  4745  003AB0  2805               	incf	strncmp@n^0,w,c
  4746  003AB2  E106               	bnz	u5001
  4747  003AB4  2806               	incf	(strncmp@n+1)^0,w,c
  4748  003AB6  A4D8               	btfss	status,2,c
  4749  003AB8  EF60  F01D         	goto	u5001
  4750  003ABC  EF62  F01D         	goto	u5000
  4751  003AC0                     u5001:
  4752  003AC0  EF6F  F01D         	goto	l4323
  4753  003AC4                     u5000:
  4754  003AC4  0E00               	movlw	0
  4755  003AC6  6E02               	movwf	(?_strncmp+1)^0,c
  4756  003AC8  0E00               	movlw	0
  4757  003ACA  6E01               	movwf	?_strncmp^0,c
  4758  003ACC  EFB7  F01D         	goto	l1191
  4759  003AD0                     l4321:
  4760  003AD0  4A08               	infsnz	strncmp@l^0,f,c
  4761  003AD2  2A09               	incf	(strncmp@l+1)^0,f,c
  4762  003AD4  4A0A               	infsnz	strncmp@r^0,f,c
  4763  003AD6  2A0B               	incf	(strncmp@r+1)^0,f,c
  4764  003AD8  0605               	decf	strncmp@n^0,f,c
  4765  003ADA  A0D8               	btfss	status,0,c
  4766  003ADC  0606               	decf	(strncmp@n+1)^0,f,c
  4767  003ADE                     l4323:
  4768  003ADE  C008  FFD9         	movff	strncmp@l,fsr2l
  4769  003AE2  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4770  003AE6  50DF               	movf	indf2,w,c
  4771  003AE8  B4D8               	btfsc	status,2,c
  4772  003AEA  EF79  F01D         	goto	u5011
  4773  003AEE  EF7B  F01D         	goto	u5010
  4774  003AF2                     u5011:
  4775  003AF2  EFA6  F01D         	goto	l4331
  4776  003AF6                     u5010:
  4777  003AF6  C00A  FFF6         	movff	strncmp@r,tblptrl
  4778  003AFA  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4779  003AFE                     	if	0	;tblptru may be non-zero
  4780  003AFE                     	endif
  4781  003AFE                     	if	0	;tblptru may be non-zero
  4782  003AFE                     	endif
  4783  003AFE  0008               	tblrd		*
  4784  003B00  50F5               	movf	tablat,w,c
  4785  003B02  0900               	iorlw	0
  4786  003B04  B4D8               	btfsc	status,2,c
  4787  003B06  EF87  F01D         	goto	u5021
  4788  003B0A  EF89  F01D         	goto	u5020
  4789  003B0E                     u5021:
  4790  003B0E  EFA6  F01D         	goto	l4331
  4791  003B12                     u5020:
  4792  003B12  5005               	movf	strncmp@n^0,w,c
  4793  003B14  1006               	iorwf	(strncmp@n+1)^0,w,c
  4794  003B16  B4D8               	btfsc	status,2,c
  4795  003B18  EF90  F01D         	goto	u5031
  4796  003B1C  EF92  F01D         	goto	u5030
  4797  003B20                     u5031:
  4798  003B20  EFA6  F01D         	goto	l4331
  4799  003B24                     u5030:
  4800  003B24  C008  FFD9         	movff	strncmp@l,fsr2l
  4801  003B28  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4802  003B2C  50DF               	movf	indf2,w,c
  4803  003B2E  6E07               	movwf	??_strncmp^0,c
  4804  003B30  C00A  FFF6         	movff	strncmp@r,tblptrl
  4805  003B34  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4806  003B38                     	if	0	;tblptru may be non-zero
  4807  003B38                     	endif
  4808  003B38                     	if	0	;tblptru may be non-zero
  4809  003B38                     	endif
  4810  003B38  0008               	tblrd		*
  4811  003B3A  50F5               	movf	tablat,w,c
  4812  003B3C  1807               	xorwf	??_strncmp^0,w,c
  4813  003B3E  B4D8               	btfsc	status,2,c
  4814  003B40  EFA4  F01D         	goto	u5041
  4815  003B44  EFA6  F01D         	goto	u5040
  4816  003B48                     u5041:
  4817  003B48  EF68  F01D         	goto	l4321
  4818  003B4C                     u5040:
  4819  003B4C                     l4331:
  4820  003B4C  C008  FFD9         	movff	strncmp@l,fsr2l
  4821  003B50  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4822  003B54  50DF               	movf	indf2,w,c
  4823  003B56  6E07               	movwf	??_strncmp^0,c
  4824  003B58  C00A  FFF6         	movff	strncmp@r,tblptrl
  4825  003B5C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4826  003B60                     	if	0	;tblptru may be non-zero
  4827  003B60                     	endif
  4828  003B60                     	if	0	;tblptru may be non-zero
  4829  003B60                     	endif
  4830  003B60  0008               	tblrd		*
  4831  003B62  50F5               	movf	tablat,w,c
  4832  003B64  5C07               	subwf	??_strncmp^0,w,c
  4833  003B66  6E01               	movwf	?_strncmp^0,c
  4834  003B68  6A02               	clrf	(?_strncmp+1)^0,c
  4835  003B6A  A0D8               	btfss	status,0,c
  4836  003B6C  0602               	decf	(?_strncmp+1)^0,f,c
  4837  003B6E                     l1191:
  4838  003B6E  0012               	return		;funcret
  4839  003B70                     __end_of_strncmp:
  4840                           	callstack 0
  4841                           
  4842 ;; *************** function _efgtoa *****************
  4843 ;; Defined at:
  4844 ;;		line 319 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4845 ;; Parameters:    Size  Location     Type
  4846 ;;  fp              2  100[COMRAM] PTR struct _IO_FILE
  4847 ;;		 -> sprintf@f(6), 
  4848 ;;  f               4  102[COMRAM] PTR struct _IO_FILE
  4849 ;;  c               1  106[COMRAM] unsigned char 
  4850 ;; Auto vars:     Size  Location     Type
  4851 ;;  u               4   52[BANK0 ] unsigned char 
  4852 ;;  g               4   44[BANK0 ] unsigned char 
  4853 ;;  l               4   38[BANK0 ] unsigned char 
  4854 ;;  h               4   34[BANK0 ] unsigned char 
  4855 ;;  ou              4    0[BANK0 ] unsigned char 
  4856 ;;  n               2   50[BANK0 ] int 
  4857 ;;  e               2   48[BANK0 ] int 
  4858 ;;  i               2   42[BANK0 ] int 
  4859 ;;  w               2   31[BANK0 ] int 
  4860 ;;  p               2   28[BANK0 ] int 
  4861 ;;  sign            2   26[BANK0 ] int 
  4862 ;;  d               2   24[BANK0 ] int 
  4863 ;;  ne              2   22[BANK0 ] int 
  4864 ;;  m               2   20[BANK0 ] int 
  4865 ;;  pp              2   18[BANK0 ] int 
  4866 ;;  t               2   16[BANK0 ] int 
  4867 ;;  mode            1   33[BANK0 ] unsigned char 
  4868 ;;  nmode           1   30[BANK0 ] unsigned char 
  4869 ;; Return value:  Size  Location     Type
  4870 ;;                  2  100[COMRAM] int 
  4871 ;; Registers used:
  4872 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4873 ;; Tracked objects:
  4874 ;;		On entry : 0/0
  4875 ;;		On exit  : 0/0
  4876 ;;		Unchanged: 0/0
  4877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4878 ;;      Params:         7       0       0       0       0       0       0
  4879 ;;      Locals:         0      56       0       0       0       0       0
  4880 ;;      Temps:          5       0       0       0       0       0       0
  4881 ;;      Totals:        12      56       0       0       0       0       0
  4882 ;;Total ram usage:       68 bytes
  4883 ;; Hardware stack levels used:    1
  4884 ;; Hardware stack levels required when called:    4
  4885 ;; This function calls:
  4886 ;;		___awdiv
  4887 ;;		___awmod
  4888 ;;		___fladd
  4889 ;;		___fldiv
  4890 ;;		___fleq
  4891 ;;		___flge
  4892 ;;		___flmul
  4893 ;;		___flneg
  4894 ;;		___flsub
  4895 ;;		___fltol
  4896 ;;		___fpclassifyf
  4897 ;;		_floorf
  4898 ;;		_isupper
  4899 ;;		_pad
  4900 ;;		_strcpy
  4901 ;;		_tolower
  4902 ;; This function is called by:
  4903 ;;		_vfpfcnvrt
  4904 ;; This function uses a non-reentrant model
  4905 ;;
  4906                           
  4907                           	psect	text10
  4908  0006F0                     __ptext10:
  4909                           	callstack 0
  4910  0006F0                     _efgtoa:
  4911                           	callstack 22
  4912  0006F0                     
  4913                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int efgtoa
      +                          (FILE *fp, long double f, char c);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common
      +                          \doprnt.c: 320: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 321: 
      +                              char mode, nmode;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 3
      +                          22:     int d, e, i, m, n, ne, p, pp, sign, t, w;;D:\Programs\Microship\xc8\v2.20\pic\so
      +                          urces\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;;D:\Programs\Microship\xc
      +                          8\v2.20\pic\sources\c99\common\doprnt.c: 326:     sign = 0;
  4914  0006F0  0E00               	movlw	0
  4915  0006F2  0100               	movlb	0	; () banked
  4916  0006F4  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  4917  0006F6  0E00               	movlw	0
  4918  0006F8  6F9A               	movwf	efgtoa@sign& (0+255),b
  4919  0006FA                     
  4920                           ; BSR set to: 0
  4921                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  4922  0006FA  C067  F0AC         	movff	efgtoa@f,efgtoa@g
  4923  0006FE  C068  F0AD         	movff	efgtoa@f+1,efgtoa@g+1
  4924  000702  C069  F0AE         	movff	efgtoa@f+2,efgtoa@g+2
  4925  000706  C06A  F0AF         	movff	efgtoa@f+3,efgtoa@g+3
  4926  00070A                     
  4927                           ; BSR set to: 0
  4928                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 0.0) 
      +                          {
  4929  00070A  BFAF               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4930  00070C  EF8C  F003         	goto	u4410
  4931  000710  EF8A  F003         	goto	u4411
  4932  000714                     u4411:
  4933  000714  EFA2  F003         	goto	l3985
  4934  000718                     u4410:
  4935  000718                     
  4936                           ; BSR set to: 0
  4937                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign = 1;
  4938  000718  0E00               	movlw	0
  4939  00071A  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  4940  00071C  0E01               	movlw	1
  4941  00071E  6F9A               	movwf	efgtoa@sign& (0+255),b
  4942  000720                     
  4943                           ; BSR set to: 0
  4944                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = -g;
  4945  000720  C0AC  F001         	movff	efgtoa@g,___flneg@f1
  4946  000724  C0AD  F002         	movff	efgtoa@g+1,___flneg@f1+1
  4947  000728  C0AE  F003         	movff	efgtoa@g+2,___flneg@f1+2
  4948  00072C  C0AF  F004         	movff	efgtoa@g+3,___flneg@f1+3
  4949  000730  EC40  F022         	call	___flneg	;wreg free
  4950  000734  C001  F0AC         	movff	?___flneg,efgtoa@g
  4951  000738  C002  F0AD         	movff	?___flneg+1,efgtoa@g+1
  4952  00073C  C003  F0AE         	movff	?___flneg+2,efgtoa@g+2
  4953  000740  C004  F0AF         	movff	?___flneg+3,efgtoa@g+3
  4954  000744                     l3985:
  4955                           
  4956                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  4957  000744  0E00               	movlw	0
  4958  000746  0100               	movlb	0	; () banked
  4959  000748  6FB3               	movwf	(efgtoa@n+1)& (0+255),b
  4960  00074A  0E00               	movlw	0
  4961  00074C  6FB2               	movwf	efgtoa@n& (0+255),b
  4962  00074E                     
  4963                           ; BSR set to: 0
  4964                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = width;
  4965  00074E  C0EC  F09F         	movff	_width,efgtoa@w
  4966  000752  C0ED  F0A0         	movff	_width+1,efgtoa@w+1
  4967  000756                     
  4968                           ; BSR set to: 0
  4969                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign || (
      +                          flags & (1 << 2))) {
  4970  000756  519A               	movf	efgtoa@sign& (0+255),w,b
  4971  000758  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4972  00075A  A4D8               	btfss	status,2,c
  4973  00075C  EFB2  F003         	goto	u4421
  4974  000760  EFB4  F003         	goto	u4420
  4975  000764                     u4421:
  4976  000764  EFBB  F003         	goto	l3993
  4977  000768                     u4420:
  4978  000768                     
  4979                           ; BSR set to: 0
  4980  000768  A5F0               	btfss	_flags& (0+255),2,b
  4981  00076A  EFB9  F003         	goto	u4431
  4982  00076E  EFBB  F003         	goto	u4430
  4983  000772                     u4431:
  4984  000772  EFD5  F003         	goto	l4005
  4985  000776                     u4430:
  4986  000776                     l3993:
  4987                           
  4988                           ; BSR set to: 0
  4989                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf[n] =
      +                           sign ? '-' : '+';
  4990  000776  519A               	movf	efgtoa@sign& (0+255),w,b
  4991  000778  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4992  00077A  A4D8               	btfss	status,2,c
  4993  00077C  EFC2  F003         	goto	u4441
  4994  000780  EFC4  F003         	goto	u4440
  4995  000784                     u4441:
  4996  000784  EFCA  F003         	goto	l3997
  4997  000788                     u4440:
  4998  000788                     
  4999                           ; BSR set to: 0
  5000  000788  0E00               	movlw	0
  5001  00078A  6F85               	movwf	(_efgtoa$768+1)& (0+255),b
  5002  00078C  0E2B               	movlw	43
  5003  00078E  6F84               	movwf	_efgtoa$768& (0+255),b
  5004  000790  EFCE  F003         	goto	l3999
  5005  000794                     l3997:
  5006                           
  5007                           ; BSR set to: 0
  5008  000794  0E00               	movlw	0
  5009  000796  6F85               	movwf	(_efgtoa$768+1)& (0+255),b
  5010  000798  0E2D               	movlw	45
  5011  00079A  6F84               	movwf	_efgtoa$768& (0+255),b
  5012  00079C                     l3999:
  5013                           
  5014                           ; BSR set to: 0
  5015  00079C  C084  F108         	movff	_efgtoa$768,_dbuf
  5016  0007A0                     
  5017                           ; BSR set to: 0
  5018                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  5019  0007A0  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  5020  0007A2  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  5021  0007A4                     
  5022                           ; BSR set to: 0
  5023                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  5024  0007A4  079F               	decf	efgtoa@w& (0+255),f,b
  5025  0007A6  A0D8               	btfss	status,0,c
  5026  0007A8  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  5027  0007AA                     l4005:
  5028                           
  5029                           ; BSR set to: 0
  5030                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if ((0 ? 
      +                          isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5031  0007AA  C0AC  F001         	movff	efgtoa@g,___fpclassifyf@x
  5032  0007AE  C0AD  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  5033  0007B2  C0AE  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  5034  0007B6  C0AF  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  5035  0007BA  EC61  F01C         	call	___fpclassifyf	;wreg free
  5036  0007BE  0401               	decf	?___fpclassifyf^0,w,c
  5037  0007C0  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  5038  0007C2  A4D8               	btfss	status,2,c
  5039  0007C4  EFE6  F003         	goto	u4451
  5040  0007C8  EFE8  F003         	goto	u4450
  5041  0007CC                     u4451:
  5042  0007CC  EF3F  F004         	goto	l4023
  5043  0007D0                     u4450:
  5044  0007D0  0EBF               	movlw	191
  5045  0007D2  6E6C               	movwf	??_efgtoa^0,c
  5046  0007D4  0EFF               	movlw	255
  5047  0007D6  6E6D               	movwf	(??_efgtoa+1)^0,c
  5048  0007D8  506B               	movf	efgtoa@c^0,w,c
  5049  0007DA  6E6E               	movwf	(??_efgtoa+2)^0,c
  5050  0007DC  6A6F               	clrf	(??_efgtoa+3)^0,c
  5051  0007DE  506C               	movf	??_efgtoa^0,w,c
  5052  0007E0  266E               	addwf	(??_efgtoa+2)^0,f,c
  5053  0007E2  506D               	movf	(??_efgtoa+1)^0,w,c
  5054  0007E4  226F               	addwfc	(??_efgtoa+3)^0,f,c
  5055  0007E6  506F               	movf	(??_efgtoa+3)^0,w,c
  5056  0007E8  E10A               	bnz	u4460
  5057  0007EA  0E1A               	movlw	26
  5058  0007EC  5C6E               	subwf	(??_efgtoa+2)^0,w,c
  5059  0007EE  A0D8               	btfss	status,0,c
  5060  0007F0  EFFC  F003         	goto	u4461
  5061  0007F4  EFFF  F003         	goto	u4460
  5062  0007F8                     u4461:
  5063  0007F8  0E01               	movlw	1
  5064  0007FA  EF00  F004         	goto	u4470
  5065  0007FE                     u4460:
  5066  0007FE  0E00               	movlw	0
  5067  000800                     u4470:
  5068  000800  0100               	movlb	0	; () banked
  5069  000802  6F86               	movwf	_efgtoa$769& (0+255),b
  5070  000804  6B87               	clrf	(_efgtoa$769+1)& (0+255),b
  5071  000806                     
  5072                           ; BSR set to: 0
  5073  000806  5186               	movf	_efgtoa$769& (0+255),w,b
  5074  000808  1187               	iorwf	(_efgtoa$769+1)& (0+255),w,b
  5075  00080A  B4D8               	btfsc	status,2,c
  5076  00080C  EF0A  F004         	goto	u4481
  5077  000810  EF0C  F004         	goto	u4480
  5078  000814                     u4481:
  5079  000814  EF1A  F004         	goto	l4015
  5080  000818                     u4480:
  5081  000818                     
  5082                           ; BSR set to: 0
  5083                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             strcp
      +                          y(&dbuf[n], "INF");
  5084  000818  0E08               	movlw	low _dbuf
  5085  00081A  25B2               	addwf	efgtoa@n& (0+255),w,b
  5086  00081C  6E01               	movwf	strcpy@dest^0,c
  5087  00081E  0E01               	movlw	high _dbuf
  5088  000820  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5089  000822  6E02               	movwf	(strcpy@dest+1)^0,c
  5090  000824  0ED9               	movlw	low STR_32
  5091  000826  6E03               	movwf	strcpy@src^0,c
  5092  000828  0E06               	movlw	high STR_32
  5093  00082A  6E04               	movwf	(strcpy@src+1)^0,c
  5094  00082C  EC5F  F021         	call	_strcpy	;wreg free
  5095                           
  5096                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } else {
  5097  000830  EF26  F004         	goto	l4017
  5098  000834                     l4015:
  5099                           
  5100                           ; BSR set to: 0
  5101                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             strcp
      +                          y(&dbuf[n], "inf");
  5102  000834  0E08               	movlw	low _dbuf
  5103  000836  25B2               	addwf	efgtoa@n& (0+255),w,b
  5104  000838  6E01               	movwf	strcpy@dest^0,c
  5105  00083A  0E01               	movlw	high _dbuf
  5106  00083C  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5107  00083E  6E02               	movwf	(strcpy@dest+1)^0,c
  5108  000840  0EE1               	movlw	low STR_33
  5109  000842  6E03               	movwf	strcpy@src^0,c
  5110  000844  0E06               	movlw	high STR_33
  5111  000846  6E04               	movwf	(strcpy@src+1)^0,c
  5112  000848  EC5F  F021         	call	_strcpy	;wreg free
  5113  00084C                     l4017:
  5114                           
  5115                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -= ((si
      +                          zeof("inf")/sizeof("inf"[0]))-1);
  5116  00084C  0100               	movlb	0	; () banked
  5117  00084E  0EFD               	movlw	253
  5118  000850  279F               	addwf	efgtoa@w& (0+255),f,b
  5119  000852  0EFF               	movlw	255
  5120  000854  23A0               	addwfc	(efgtoa@w+1)& (0+255),f,b
  5121  000856                     l4019:
  5122                           
  5123                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         return pa
      +                          d(fp, &dbuf[0], w);
  5124  000856  C065  F011         	movff	efgtoa@fp,pad@fp
  5125  00085A  C066  F012         	movff	efgtoa@fp+1,pad@fp+1
  5126  00085E  0E08               	movlw	low _dbuf
  5127  000860  6E13               	movwf	pad@buf^0,c
  5128  000862  0E01               	movlw	high _dbuf
  5129  000864  6E14               	movwf	(pad@buf+1)^0,c
  5130  000866  C09F  F015         	movff	efgtoa@w,pad@p
  5131  00086A  C0A0  F016         	movff	efgtoa@w+1,pad@p+1
  5132  00086E  EC1D  F01E         	call	_pad	;wreg free
  5133  000872  C011  F065         	movff	?_pad,?_efgtoa
  5134  000876  C012  F066         	movff	?_pad+1,?_efgtoa+1
  5135  00087A  EF4F  F009         	goto	l973
  5136  00087E                     l4023:
  5137                           
  5138                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if ((0 ? 
      +                          isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5139  00087E  C0AC  F001         	movff	efgtoa@g,___fpclassifyf@x
  5140  000882  C0AD  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  5141  000886  C0AE  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  5142  00088A  C0AF  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  5143  00088E  EC61  F01C         	call	___fpclassifyf	;wreg free
  5144  000892  5001               	movf	?___fpclassifyf^0,w,c
  5145  000894  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  5146  000896  A4D8               	btfss	status,2,c
  5147  000898  EF50  F004         	goto	u4491
  5148  00089C  EF52  F004         	goto	u4490
  5149  0008A0                     u4491:
  5150  0008A0  EF92  F004         	goto	l4041
  5151  0008A4                     u4490:
  5152  0008A4  0EBF               	movlw	191
  5153  0008A6  6E6C               	movwf	??_efgtoa^0,c
  5154  0008A8  0EFF               	movlw	255
  5155  0008AA  6E6D               	movwf	(??_efgtoa+1)^0,c
  5156  0008AC  506B               	movf	efgtoa@c^0,w,c
  5157  0008AE  6E6E               	movwf	(??_efgtoa+2)^0,c
  5158  0008B0  6A6F               	clrf	(??_efgtoa+3)^0,c
  5159  0008B2  506C               	movf	??_efgtoa^0,w,c
  5160  0008B4  266E               	addwf	(??_efgtoa+2)^0,f,c
  5161  0008B6  506D               	movf	(??_efgtoa+1)^0,w,c
  5162  0008B8  226F               	addwfc	(??_efgtoa+3)^0,f,c
  5163  0008BA  506F               	movf	(??_efgtoa+3)^0,w,c
  5164  0008BC  E10A               	bnz	u4500
  5165  0008BE  0E1A               	movlw	26
  5166  0008C0  5C6E               	subwf	(??_efgtoa+2)^0,w,c
  5167  0008C2  A0D8               	btfss	status,0,c
  5168  0008C4  EF66  F004         	goto	u4501
  5169  0008C8  EF69  F004         	goto	u4500
  5170  0008CC                     u4501:
  5171  0008CC  0E01               	movlw	1
  5172  0008CE  EF6A  F004         	goto	u4510
  5173  0008D2                     u4500:
  5174  0008D2  0E00               	movlw	0
  5175  0008D4                     u4510:
  5176  0008D4  0100               	movlb	0	; () banked
  5177  0008D6  6F88               	movwf	_efgtoa$774& (0+255),b
  5178  0008D8  6B89               	clrf	(_efgtoa$774+1)& (0+255),b
  5179  0008DA                     
  5180                           ; BSR set to: 0
  5181  0008DA  5188               	movf	_efgtoa$774& (0+255),w,b
  5182  0008DC  1189               	iorwf	(_efgtoa$774+1)& (0+255),w,b
  5183  0008DE  B4D8               	btfsc	status,2,c
  5184  0008E0  EF74  F004         	goto	u4521
  5185  0008E4  EF76  F004         	goto	u4520
  5186  0008E8                     u4521:
  5187  0008E8  EF84  F004         	goto	l4033
  5188  0008EC                     u4520:
  5189  0008EC                     
  5190                           ; BSR set to: 0
  5191                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             strcp
      +                          y(&dbuf[n], "NAN");
  5192  0008EC  0E08               	movlw	low _dbuf
  5193  0008EE  25B2               	addwf	efgtoa@n& (0+255),w,b
  5194  0008F0  6E01               	movwf	strcpy@dest^0,c
  5195  0008F2  0E01               	movlw	high _dbuf
  5196  0008F4  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5197  0008F6  6E02               	movwf	(strcpy@dest+1)^0,c
  5198  0008F8  0EDD               	movlw	low STR_36
  5199  0008FA  6E03               	movwf	strcpy@src^0,c
  5200  0008FC  0E06               	movlw	high STR_36
  5201  0008FE  6E04               	movwf	(strcpy@src+1)^0,c
  5202  000900  EC5F  F021         	call	_strcpy	;wreg free
  5203                           
  5204                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } else {
  5205  000904  EF26  F004         	goto	l4017
  5206  000908                     l4033:
  5207                           
  5208                           ; BSR set to: 0
  5209                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             strcp
      +                          y(&dbuf[n], "nan");
  5210  000908  0E08               	movlw	low _dbuf
  5211  00090A  25B2               	addwf	efgtoa@n& (0+255),w,b
  5212  00090C  6E01               	movwf	strcpy@dest^0,c
  5213  00090E  0E01               	movlw	high _dbuf
  5214  000910  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5215  000912  6E02               	movwf	(strcpy@dest+1)^0,c
  5216  000914  0EE5               	movlw	low STR_37
  5217  000916  6E03               	movwf	strcpy@src^0,c
  5218  000918  0E06               	movlw	high STR_37
  5219  00091A  6E04               	movwf	(strcpy@src+1)^0,c
  5220  00091C  EC5F  F021         	call	_strcpy	;wreg free
  5221  000920  EF26  F004         	goto	l4017
  5222  000924                     l4041:
  5223                           
  5224                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  5225  000924  0E00               	movlw	0
  5226  000926  0100               	movlb	0	; () banked
  5227  000928  6FB4               	movwf	efgtoa@u& (0+255),b
  5228  00092A  0E00               	movlw	0
  5229  00092C  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  5230  00092E  0E80               	movlw	128
  5231  000930  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  5232  000932  0E3F               	movlw	63
  5233  000934  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  5234                           
  5235                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  5236  000936  0E00               	movlw	0
  5237  000938  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  5238  00093A  0E00               	movlw	0
  5239  00093C  6FB0               	movwf	efgtoa@e& (0+255),b
  5240  00093E                     
  5241                           ; BSR set to: 0
  5242                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g == 0.
      +                          0)) {
  5243  00093E  C0AC  F001         	movff	efgtoa@g,___fleq@ff1
  5244  000942  C0AD  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  5245  000946  C0AE  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  5246  00094A  C0AF  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  5247  00094E  0E00               	movlw	0
  5248  000950  6E05               	movwf	___fleq@ff2^0,c
  5249  000952  0E00               	movlw	0
  5250  000954  6E06               	movwf	(___fleq@ff2+1)^0,c
  5251  000956  0E00               	movlw	0
  5252  000958  6E07               	movwf	(___fleq@ff2+2)^0,c
  5253  00095A  0E00               	movlw	0
  5254  00095C  6E08               	movwf	(___fleq@ff2+3)^0,c
  5255  00095E  EC3A  F01F         	call	___fleq	;wreg free
  5256  000962  B0D8               	btfsc	status,0,c
  5257  000964  EFB6  F004         	goto	u4531
  5258  000968  EFB8  F004         	goto	u4530
  5259  00096C                     u4531:
  5260  00096C  EF3B  F005         	goto	l4059
  5261  000970                     u4530:
  5262  000970  EFD7  F004         	goto	l4051
  5263  000974                     l4047:
  5264                           
  5265                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             u = u
      +                          *10.0;
  5266  000974  C0B4  F00F         	movff	efgtoa@u,___flmul@b
  5267  000978  C0B5  F010         	movff	efgtoa@u+1,___flmul@b+1
  5268  00097C  C0B6  F011         	movff	efgtoa@u+2,___flmul@b+2
  5269  000980  C0B7  F012         	movff	efgtoa@u+3,___flmul@b+3
  5270  000984  0E00               	movlw	0
  5271  000986  6E13               	movwf	___flmul@a^0,c
  5272  000988  0E00               	movlw	0
  5273  00098A  6E14               	movwf	(___flmul@a+1)^0,c
  5274  00098C  0E20               	movlw	32
  5275  00098E  6E15               	movwf	(___flmul@a+2)^0,c
  5276  000990  0E41               	movlw	65
  5277  000992  6E16               	movwf	(___flmul@a+3)^0,c
  5278  000994  EC35  F013         	call	___flmul	;wreg free
  5279  000998  C00F  F0B4         	movff	?___flmul,efgtoa@u
  5280  00099C  C010  F0B5         	movff	?___flmul+1,efgtoa@u+1
  5281  0009A0  C011  F0B6         	movff	?___flmul+2,efgtoa@u+2
  5282  0009A4  C012  F0B7         	movff	?___flmul+3,efgtoa@u+3
  5283  0009A8                     
  5284                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             ++e;
  5285  0009A8  0100               	movlb	0	; () banked
  5286  0009AA  4BB0               	infsnz	efgtoa@e& (0+255),f,b
  5287  0009AC  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  5288  0009AE                     l4051:
  5289                           
  5290                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         while (!(
      +                          g < (u*10.0))) {
  5291  0009AE  C0AC  F038         	movff	efgtoa@g,___flge@ff1
  5292  0009B2  C0AD  F039         	movff	efgtoa@g+1,___flge@ff1+1
  5293  0009B6  C0AE  F03A         	movff	efgtoa@g+2,___flge@ff1+2
  5294  0009BA  C0AF  F03B         	movff	efgtoa@g+3,___flge@ff1+3
  5295  0009BE  0E00               	movlw	0
  5296  0009C0  6E13               	movwf	___flmul@a^0,c
  5297  0009C2  0E00               	movlw	0
  5298  0009C4  6E14               	movwf	(___flmul@a+1)^0,c
  5299  0009C6  0E20               	movlw	32
  5300  0009C8  6E15               	movwf	(___flmul@a+2)^0,c
  5301  0009CA  0E41               	movlw	65
  5302  0009CC  6E16               	movwf	(___flmul@a+3)^0,c
  5303  0009CE  C0B4  F00F         	movff	efgtoa@u,___flmul@b
  5304  0009D2  C0B5  F010         	movff	efgtoa@u+1,___flmul@b+1
  5305  0009D6  C0B6  F011         	movff	efgtoa@u+2,___flmul@b+2
  5306  0009DA  C0B7  F012         	movff	efgtoa@u+3,___flmul@b+3
  5307  0009DE  EC35  F013         	call	___flmul	;wreg free
  5308  0009E2  C00F  F03C         	movff	?___flmul,___flge@ff2
  5309  0009E6  C010  F03D         	movff	?___flmul+1,___flge@ff2+1
  5310  0009EA  C011  F03E         	movff	?___flmul+2,___flge@ff2+2
  5311  0009EE  C012  F03F         	movff	?___flmul+3,___flge@ff2+3
  5312  0009F2  ECDF  F01B         	call	___flge	;wreg free
  5313  0009F6  B0D8               	btfsc	status,0,c
  5314  0009F8  EF00  F005         	goto	u4541
  5315  0009FC  EF02  F005         	goto	u4540
  5316  000A00                     u4541:
  5317  000A00  EFBA  F004         	goto	l4047
  5318  000A04                     u4540:
  5319  000A04  EF22  F005         	goto	l4057
  5320  000A08                     l4053:
  5321                           
  5322                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             u = u
      +                          /10.0;
  5323  000A08  C0B4  F038         	movff	efgtoa@u,___fldiv@b
  5324  000A0C  C0B5  F039         	movff	efgtoa@u+1,___fldiv@b+1
  5325  000A10  C0B6  F03A         	movff	efgtoa@u+2,___fldiv@b+2
  5326  000A14  C0B7  F03B         	movff	efgtoa@u+3,___fldiv@b+3
  5327  000A18  0E00               	movlw	0
  5328  000A1A  6E3C               	movwf	___fldiv@a^0,c
  5329  000A1C  0E00               	movlw	0
  5330  000A1E  6E3D               	movwf	(___fldiv@a+1)^0,c
  5331  000A20  0E20               	movlw	32
  5332  000A22  6E3E               	movwf	(___fldiv@a+2)^0,c
  5333  000A24  0E41               	movlw	65
  5334  000A26  6E3F               	movwf	(___fldiv@a+3)^0,c
  5335  000A28  EC4A  F015         	call	___fldiv	;wreg free
  5336  000A2C  C038  F0B4         	movff	?___fldiv,efgtoa@u
  5337  000A30  C039  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  5338  000A34  C03A  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  5339  000A38  C03B  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  5340  000A3C                     
  5341                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             --e;
  5342  000A3C  0100               	movlb	0	; () banked
  5343  000A3E  07B0               	decf	efgtoa@e& (0+255),f,b
  5344  000A40  A0D8               	btfss	status,0,c
  5345  000A42  07B1               	decf	(efgtoa@e+1)& (0+255),f,b
  5346  000A44                     l4057:
  5347                           
  5348                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         while (g 
      +                          < u) {
  5349  000A44  C0AC  F038         	movff	efgtoa@g,___flge@ff1
  5350  000A48  C0AD  F039         	movff	efgtoa@g+1,___flge@ff1+1
  5351  000A4C  C0AE  F03A         	movff	efgtoa@g+2,___flge@ff1+2
  5352  000A50  C0AF  F03B         	movff	efgtoa@g+3,___flge@ff1+3
  5353  000A54  C0B4  F03C         	movff	efgtoa@u,___flge@ff2
  5354  000A58  C0B5  F03D         	movff	efgtoa@u+1,___flge@ff2+1
  5355  000A5C  C0B6  F03E         	movff	efgtoa@u+2,___flge@ff2+2
  5356  000A60  C0B7  F03F         	movff	efgtoa@u+3,___flge@ff2+3
  5357  000A64  ECDF  F01B         	call	___flge	;wreg free
  5358  000A68  A0D8               	btfss	status,0,c
  5359  000A6A  EF39  F005         	goto	u4551
  5360  000A6E  EF3B  F005         	goto	u4550
  5361  000A72                     u4551:
  5362  000A72  EF04  F005         	goto	l4053
  5363  000A76                     u4550:
  5364  000A76                     l4059:
  5365                           
  5366                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = tolowe
      +                          r((int)c);
  5367  000A76  C06B  F007         	movff	efgtoa@c,tolower@c
  5368  000A7A  6A08               	clrf	(tolower@c+1)^0,c
  5369  000A7C  EC01  F021         	call	_tolower	;wreg free
  5370  000A80  5007               	movf	?_tolower^0,w,c
  5371  000A82  0100               	movlb	0	; () banked
  5372  000A84  6FA1               	movwf	efgtoa@mode& (0+255),b
  5373  000A86                     
  5374                           ; BSR set to: 0
  5375                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = mode;
  5376  000A86  C0A1  F09E         	movff	efgtoa@mode,efgtoa@nmode
  5377  000A8A                     
  5378                           ; BSR set to: 0
  5379                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode == '
      +                          g') {
  5380  000A8A  0E67               	movlw	103
  5381  000A8C  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  5382  000A8E  A4D8               	btfss	status,2,c
  5383  000A90  EF4C  F005         	goto	u4561
  5384  000A94  EF4E  F005         	goto	u4560
  5385  000A98                     u4561:
  5386  000A98  EF74  F005         	goto	l4073
  5387  000A9C                     u4560:
  5388  000A9C                     
  5389                           ; BSR set to: 0
  5390                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec == 0) 
      +                          {
  5391  000A9C  51EE               	movf	_prec& (0+255),w,b
  5392  000A9E  11EF               	iorwf	(_prec+1)& (0+255),w,b
  5393  000AA0  A4D8               	btfss	status,2,c
  5394  000AA2  EF55  F005         	goto	u4571
  5395  000AA6  EF57  F005         	goto	u4570
  5396  000AAA                     u4571:
  5397  000AAA  EF5B  F005         	goto	l4069
  5398  000AAE                     u4570:
  5399  000AAE                     
  5400                           ; BSR set to: 0
  5401                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  5402  000AAE  0E00               	movlw	0
  5403  000AB0  6FEF               	movwf	(_prec+1)& (0+255),b
  5404  000AB2  0E01               	movlw	1
  5405  000AB4  6FEE               	movwf	_prec& (0+255),b
  5406  000AB6                     l4069:
  5407                           
  5408                           ; BSR set to: 0
  5409                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = (0 < 
      +                          prec) ? prec : 6;
  5410  000AB6  BFEF               	btfsc	(_prec+1)& (0+255),7,b
  5411  000AB8  EF68  F005         	goto	u4580
  5412  000ABC  51EF               	movf	(_prec+1)& (0+255),w,b
  5413  000ABE  E106               	bnz	u4581
  5414  000AC0  05EE               	decf	_prec& (0+255),w,b
  5415  000AC2  B0D8               	btfsc	status,0,c
  5416  000AC4  EF66  F005         	goto	u4581
  5417  000AC8  EF68  F005         	goto	u4580
  5418  000ACC                     u4581:
  5419  000ACC  EF6E  F005         	goto	l991
  5420  000AD0                     u4580:
  5421  000AD0                     l4071:
  5422                           
  5423                           ; BSR set to: 0
  5424  000AD0  0E00               	movlw	0
  5425  000AD2  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  5426  000AD4  0E06               	movlw	6
  5427  000AD6  6F9C               	movwf	efgtoa@p& (0+255),b
  5428  000AD8  EF7D  F005         	goto	l4079
  5429  000ADC                     l991:
  5430                           
  5431                           ; BSR set to: 0
  5432  000ADC  C0EE  F09C         	movff	_prec,efgtoa@p
  5433  000AE0  C0EF  F09D         	movff	_prec+1,efgtoa@p+1
  5434  000AE4  EF7D  F005         	goto	l4079
  5435  000AE8                     l4073:
  5436                           
  5437                           ; BSR set to: 0
  5438                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = (prec
      +                           < 0) ? 6 : prec;
  5439  000AE8  BFEF               	btfsc	(_prec+1)& (0+255),7,b
  5440  000AEA  EF79  F005         	goto	u4591
  5441  000AEE  EF7B  F005         	goto	u4590
  5442  000AF2                     u4591:
  5443  000AF2  EF68  F005         	goto	l4071
  5444  000AF6                     u4590:
  5445  000AF6  EF6E  F005         	goto	l991
  5446  000AFA                     l4079:
  5447                           
  5448                           ; BSR set to: 0
  5449                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode == '
      +                          g') {
  5450  000AFA  0E67               	movlw	103
  5451  000AFC  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  5452  000AFE  A4D8               	btfss	status,2,c
  5453  000B00  EF84  F005         	goto	u4601
  5454  000B04  EF86  F005         	goto	u4600
  5455  000B08                     u4601:
  5456  000B08  EFB5  F005         	goto	l4089
  5457  000B0C                     u4600:
  5458  000B0C                     
  5459                           ; BSR set to: 0
  5460                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (!(e <
      +                           -4) && !((p - 1) < e)) {
  5461  000B0C  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  5462  000B0E  EF94  F005         	goto	u4610
  5463  000B12  0EFC               	movlw	252
  5464  000B14  5DB0               	subwf	efgtoa@e& (0+255),w,b
  5465  000B16  0EFF               	movlw	255
  5466  000B18  59B1               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5467  000B1A  A0D8               	btfss	status,0,c
  5468  000B1C  EF92  F005         	goto	u4611
  5469  000B20  EF94  F005         	goto	u4610
  5470  000B24                     u4611:
  5471  000B24  EFB3  F005         	goto	l4087
  5472  000B28                     u4610:
  5473  000B28                     
  5474                           ; BSR set to: 0
  5475  000B28  0EFF               	movlw	255
  5476  000B2A  6E6C               	movwf	??_efgtoa^0,c
  5477  000B2C  0EFF               	movlw	255
  5478  000B2E  6E6D               	movwf	(??_efgtoa+1)^0,c
  5479  000B30  C09C  F06E         	movff	efgtoa@p,??_efgtoa+2
  5480  000B34  C09D  F06F         	movff	efgtoa@p+1,??_efgtoa+3
  5481  000B38  506C               	movf	??_efgtoa^0,w,c
  5482  000B3A  266E               	addwf	(??_efgtoa+2)^0,f,c
  5483  000B3C  506D               	movf	(??_efgtoa+1)^0,w,c
  5484  000B3E  226F               	addwfc	(??_efgtoa+3)^0,f,c
  5485  000B40  51B0               	movf	efgtoa@e& (0+255),w,b
  5486  000B42  5C6E               	subwf	(??_efgtoa+2)^0,w,c
  5487  000B44  506F               	movf	(??_efgtoa+3)^0,w,c
  5488  000B46  0A80               	xorlw	128
  5489  000B48  6E70               	movwf	(??_efgtoa+4)^0,c
  5490  000B4A  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  5491  000B4C  0A80               	xorlw	128
  5492  000B4E  5870               	subwfb	(??_efgtoa+4)^0,w,c
  5493  000B50  A0D8               	btfss	status,0,c
  5494  000B52  EFAD  F005         	goto	u4621
  5495  000B56  EFAF  F005         	goto	u4620
  5496  000B5A                     u4621:
  5497  000B5A  EFB3  F005         	goto	l4087
  5498  000B5E                     u4620:
  5499  000B5E                     
  5500                           ; BSR set to: 0
  5501                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             nmode
      +                           = 'f';
  5502  000B5E  0E66               	movlw	102
  5503  000B60  6F9E               	movwf	efgtoa@nmode& (0+255),b
  5504                           
  5505                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } else {
  5506  000B62  EFB5  F005         	goto	l4089
  5507  000B66                     l4087:
  5508                           
  5509                           ; BSR set to: 0
  5510                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             nmode
      +                           = 'e';
  5511  000B66  0E65               	movlw	101
  5512  000B68  6F9E               	movwf	efgtoa@nmode& (0+255),b
  5513  000B6A                     l4089:
  5514                           
  5515                           ; BSR set to: 0
  5516                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  5517  000B6A  C09C  F094         	movff	efgtoa@p,efgtoa@m
  5518  000B6E  C09D  F095         	movff	efgtoa@p+1,efgtoa@m+1
  5519  000B72                     
  5520                           ; BSR set to: 0
  5521                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mode ==
      +                           'g') || ((nmode == 'f') && (e < 0))) {
  5522  000B72  0E67               	movlw	103
  5523  000B74  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  5524  000B76  A4D8               	btfss	status,2,c
  5525  000B78  EFC0  F005         	goto	u4631
  5526  000B7C  EFC2  F005         	goto	u4630
  5527  000B80                     u4631:
  5528  000B80  EFD2  F005         	goto	l4097
  5529  000B84                     u4630:
  5530  000B84                     
  5531                           ; BSR set to: 0
  5532  000B84  0E66               	movlw	102
  5533  000B86  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  5534  000B88  A4D8               	btfss	status,2,c
  5535  000B8A  EFC9  F005         	goto	u4641
  5536  000B8E  EFCB  F005         	goto	u4640
  5537  000B92                     u4641:
  5538  000B92  EFD4  F005         	goto	l4099
  5539  000B96                     u4640:
  5540  000B96                     
  5541                           ; BSR set to: 0
  5542  000B96  BFB1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5543  000B98  EFD2  F005         	goto	u4650
  5544  000B9C  EFD0  F005         	goto	u4651
  5545  000BA0                     u4651:
  5546  000BA0  EFD4  F005         	goto	l4099
  5547  000BA4                     u4650:
  5548  000BA4                     l4097:
  5549                           
  5550                           ; BSR set to: 0
  5551                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  5552  000BA4  4B94               	infsnz	efgtoa@m& (0+255),f,b
  5553  000BA6  2B95               	incf	(efgtoa@m+1)& (0+255),f,b
  5554  000BA8                     l4099:
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmode == 
      +                          'f') {
  5558  000BA8  0E66               	movlw	102
  5559  000BAA  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  5560  000BAC  A4D8               	btfss	status,2,c
  5561  000BAE  EFDB  F005         	goto	u4661
  5562  000BB2  EFDD  F005         	goto	u4660
  5563  000BB6                     u4661:
  5564  000BB6  EFFD  F005         	goto	l4109
  5565  000BBA                     u4660:
  5566  000BBA                     
  5567                           ; BSR set to: 0
  5568                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (e < 0
      +                          ) {
  5569  000BBA  BFB1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5570  000BBC  EFE4  F005         	goto	u4670
  5571  000BC0  EFE2  F005         	goto	u4671
  5572  000BC4                     u4671:
  5573  000BC4  EFF0  F005         	goto	l4105
  5574  000BC8                     u4670:
  5575  000BC8                     
  5576                           ; BSR set to: 0
  5577                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             u = 1
      +                          .0;
  5578  000BC8  0E00               	movlw	0
  5579  000BCA  6FB4               	movwf	efgtoa@u& (0+255),b
  5580  000BCC  0E00               	movlw	0
  5581  000BCE  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  5582  000BD0  0E80               	movlw	128
  5583  000BD2  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  5584  000BD4  0E3F               	movlw	63
  5585  000BD6  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  5586                           
  5587                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             e = 0
      +                          ;
  5588  000BD8  0E00               	movlw	0
  5589  000BDA  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  5590  000BDC  0E00               	movlw	0
  5591  000BDE  6FB0               	movwf	efgtoa@e& (0+255),b
  5592  000BE0                     l4105:
  5593                           
  5594                           ; BSR set to: 0
  5595                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (!(mod
      +                          e == 'g')) {
  5596  000BE0  0E67               	movlw	103
  5597  000BE2  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  5598  000BE4  B4D8               	btfsc	status,2,c
  5599  000BE6  EFF7  F005         	goto	u4681
  5600  000BEA  EFF9  F005         	goto	u4680
  5601  000BEE                     u4681:
  5602  000BEE  EFFD  F005         	goto	l4109
  5603  000BF2                     u4680:
  5604  000BF2                     
  5605                           ; BSR set to: 0
  5606                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             m += 
      +                          e;
  5607  000BF2  51B0               	movf	efgtoa@e& (0+255),w,b
  5608  000BF4  2794               	addwf	efgtoa@m& (0+255),f,b
  5609  000BF6  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  5610  000BF8  2395               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5611  000BFA                     l4109:
  5612                           
  5613                           ; BSR set to: 0
  5614                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  5615  000BFA  0E00               	movlw	0
  5616  000BFC  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  5617  000BFE  0E00               	movlw	0
  5618  000C00  6FAA               	movwf	efgtoa@i& (0+255),b
  5619  000C02                     
  5620                           ; BSR set to: 0
  5621                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  5622  000C02  C0AC  F0A2         	movff	efgtoa@g,efgtoa@h
  5623  000C06  C0AD  F0A3         	movff	efgtoa@g+1,efgtoa@h+1
  5624  000C0A  C0AE  F0A4         	movff	efgtoa@g+2,efgtoa@h+2
  5625  000C0E  C0AF  F0A5         	movff	efgtoa@g+3,efgtoa@h+3
  5626  000C12                     
  5627                           ; BSR set to: 0
  5628                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  5629  000C12  C0B4  F080         	movff	efgtoa@u,efgtoa@ou
  5630  000C16  C0B5  F081         	movff	efgtoa@u+1,efgtoa@ou+1
  5631  000C1A  C0B6  F082         	movff	efgtoa@u+2,efgtoa@ou+2
  5632  000C1E  C0B7  F083         	movff	efgtoa@u+3,efgtoa@ou+3
  5633                           
  5634                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i < m)
      +                           {
  5635  000C22  EF8E  F006         	goto	l4123
  5636  000C26                     l4115:
  5637                           
  5638                           ; BSR set to: 0
  5639                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = floor
      +                          f(h/u);
  5640  000C26  C0A2  F038         	movff	efgtoa@h,___fldiv@b
  5641  000C2A  C0A3  F039         	movff	efgtoa@h+1,___fldiv@b+1
  5642  000C2E  C0A4  F03A         	movff	efgtoa@h+2,___fldiv@b+2
  5643  000C32  C0A5  F03B         	movff	efgtoa@h+3,___fldiv@b+3
  5644  000C36  C0B4  F03C         	movff	efgtoa@u,___fldiv@a
  5645  000C3A  C0B5  F03D         	movff	efgtoa@u+1,___fldiv@a+1
  5646  000C3E  C0B6  F03E         	movff	efgtoa@u+2,___fldiv@a+2
  5647  000C42  C0B7  F03F         	movff	efgtoa@u+3,___fldiv@a+3
  5648  000C46  EC4A  F015         	call	___fldiv	;wreg free
  5649  000C4A  C038  F051         	movff	?___fldiv,floorf@x
  5650  000C4E  C039  F052         	movff	?___fldiv+1,floorf@x+1
  5651  000C52  C03A  F053         	movff	?___fldiv+2,floorf@x+2
  5652  000C56  C03B  F054         	movff	?___fldiv+3,floorf@x+3
  5653  000C5A  EC17  F017         	call	_floorf	;wreg free
  5654  000C5E  C051  F0A6         	movff	?_floorf,efgtoa@l
  5655  000C62  C052  F0A7         	movff	?_floorf+1,efgtoa@l+1
  5656  000C66  C053  F0A8         	movff	?_floorf+2,efgtoa@l+2
  5657  000C6A  C054  F0A9         	movff	?_floorf+3,efgtoa@l+3
  5658                           
  5659                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = (int)
      +                          l;
  5660  000C6E  C0A6  F028         	movff	efgtoa@l,___fltol@f1
  5661  000C72  C0A7  F029         	movff	efgtoa@l+1,___fltol@f1+1
  5662  000C76  C0A8  F02A         	movff	efgtoa@l+2,___fltol@f1+2
  5663  000C7A  C0A9  F02B         	movff	efgtoa@l+3,___fltol@f1+3
  5664  000C7E  EC5C  F01B         	call	___fltol	;wreg free
  5665  000C82  C028  F098         	movff	?___fltol,efgtoa@d
  5666  000C86  C029  F099         	movff	?___fltol+1,efgtoa@d+1
  5667  000C8A                     
  5668                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -= l*u;
  5669  000C8A  C0A2  F038         	movff	efgtoa@h,___flsub@b
  5670  000C8E  C0A3  F039         	movff	efgtoa@h+1,___flsub@b+1
  5671  000C92  C0A4  F03A         	movff	efgtoa@h+2,___flsub@b+2
  5672  000C96  C0A5  F03B         	movff	efgtoa@h+3,___flsub@b+3
  5673  000C9A  C0B4  F013         	movff	efgtoa@u,___flmul@a
  5674  000C9E  C0B5  F014         	movff	efgtoa@u+1,___flmul@a+1
  5675  000CA2  C0B6  F015         	movff	efgtoa@u+2,___flmul@a+2
  5676  000CA6  C0B7  F016         	movff	efgtoa@u+3,___flmul@a+3
  5677  000CAA  C0A6  F00F         	movff	efgtoa@l,___flmul@b
  5678  000CAE  C0A7  F010         	movff	efgtoa@l+1,___flmul@b+1
  5679  000CB2  C0A8  F011         	movff	efgtoa@l+2,___flmul@b+2
  5680  000CB6  C0A9  F012         	movff	efgtoa@l+3,___flmul@b+3
  5681  000CBA  EC35  F013         	call	___flmul	;wreg free
  5682  000CBE  C00F  F03C         	movff	?___flmul,___flsub@a
  5683  000CC2  C010  F03D         	movff	?___flmul+1,___flsub@a+1
  5684  000CC6  C011  F03E         	movff	?___flmul+2,___flsub@a+2
  5685  000CCA  C012  F03F         	movff	?___flmul+3,___flsub@a+3
  5686  000CCE  ECDF  F021         	call	___flsub	;wreg free
  5687  000CD2  C038  F0A2         	movff	?___flsub,efgtoa@h
  5688  000CD6  C039  F0A3         	movff	?___flsub+1,efgtoa@h+1
  5689  000CDA  C03A  F0A4         	movff	?___flsub+2,efgtoa@h+2
  5690  000CDE  C03B  F0A5         	movff	?___flsub+3,efgtoa@h+3
  5691  000CE2                     
  5692                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = u/10.
      +                          0;
  5693  000CE2  C0B4  F038         	movff	efgtoa@u,___fldiv@b
  5694  000CE6  C0B5  F039         	movff	efgtoa@u+1,___fldiv@b+1
  5695  000CEA  C0B6  F03A         	movff	efgtoa@u+2,___fldiv@b+2
  5696  000CEE  C0B7  F03B         	movff	efgtoa@u+3,___fldiv@b+3
  5697  000CF2  0E00               	movlw	0
  5698  000CF4  6E3C               	movwf	___fldiv@a^0,c
  5699  000CF6  0E00               	movlw	0
  5700  000CF8  6E3D               	movwf	(___fldiv@a+1)^0,c
  5701  000CFA  0E20               	movlw	32
  5702  000CFC  6E3E               	movwf	(___fldiv@a+2)^0,c
  5703  000CFE  0E41               	movlw	65
  5704  000D00  6E3F               	movwf	(___fldiv@a+3)^0,c
  5705  000D02  EC4A  F015         	call	___fldiv	;wreg free
  5706  000D06  C038  F0B4         	movff	?___fldiv,efgtoa@u
  5707  000D0A  C039  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  5708  000D0E  C03A  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  5709  000D12  C03B  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  5710  000D16                     
  5711                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  5712  000D16  0100               	movlb	0	; () banked
  5713  000D18  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  5714  000D1A  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  5715  000D1C                     l4123:
  5716                           
  5717                           ; BSR set to: 0
  5718                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i < m)
      +                           {
  5719  000D1C  5194               	movf	efgtoa@m& (0+255),w,b
  5720  000D1E  5DAA               	subwf	efgtoa@i& (0+255),w,b
  5721  000D20  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  5722  000D22  0A80               	xorlw	128
  5723  000D24  6E6C               	movwf	??_efgtoa^0,c
  5724  000D26  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  5725  000D28  0A80               	xorlw	128
  5726  000D2A  586C               	subwfb	??_efgtoa^0,w,c
  5727  000D2C  A0D8               	btfss	status,0,c
  5728  000D2E  EF9B  F006         	goto	u4691
  5729  000D32  EF9D  F006         	goto	u4690
  5730  000D36                     u4691:
  5731  000D36  EF13  F006         	goto	l4115
  5732  000D3A                     u4690:
  5733  000D3A                     
  5734                           ; BSR set to: 0
  5735                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.0;
  5736  000D3A  C0B4  F00F         	movff	efgtoa@u,___flmul@b
  5737  000D3E  C0B5  F010         	movff	efgtoa@u+1,___flmul@b+1
  5738  000D42  C0B6  F011         	movff	efgtoa@u+2,___flmul@b+2
  5739  000D46  C0B7  F012         	movff	efgtoa@u+3,___flmul@b+3
  5740  000D4A  0E00               	movlw	0
  5741  000D4C  6E13               	movwf	___flmul@a^0,c
  5742  000D4E  0E00               	movlw	0
  5743  000D50  6E14               	movwf	(___flmul@a+1)^0,c
  5744  000D52  0EA0               	movlw	160
  5745  000D54  6E15               	movwf	(___flmul@a+2)^0,c
  5746  000D56  0E40               	movlw	64
  5747  000D58  6E16               	movwf	(___flmul@a+3)^0,c
  5748  000D5A  EC35  F013         	call	___flmul	;wreg free
  5749  000D5E  C00F  F0A6         	movff	?___flmul,efgtoa@l
  5750  000D62  C010  F0A7         	movff	?___flmul+1,efgtoa@l+1
  5751  000D66  C011  F0A8         	movff	?___flmul+2,efgtoa@l+2
  5752  000D6A  C012  F0A9         	movff	?___flmul+3,efgtoa@l+3
  5753  000D6E                     
  5754                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < l) {
  5755  000D6E  C0A2  F038         	movff	efgtoa@h,___flge@ff1
  5756  000D72  C0A3  F039         	movff	efgtoa@h+1,___flge@ff1+1
  5757  000D76  C0A4  F03A         	movff	efgtoa@h+2,___flge@ff1+2
  5758  000D7A  C0A5  F03B         	movff	efgtoa@h+3,___flge@ff1+3
  5759  000D7E  C0A6  F03C         	movff	efgtoa@l,___flge@ff2
  5760  000D82  C0A7  F03D         	movff	efgtoa@l+1,___flge@ff2+1
  5761  000D86  C0A8  F03E         	movff	efgtoa@l+2,___flge@ff2+2
  5762  000D8A  C0A9  F03F         	movff	efgtoa@l+3,___flge@ff2+3
  5763  000D8E  ECDF  F01B         	call	___flge	;wreg free
  5764  000D92  B0D8               	btfsc	status,0,c
  5765  000D94  EFCE  F006         	goto	u4701
  5766  000D98  EFD0  F006         	goto	u4700
  5767  000D9C                     u4701:
  5768  000D9C  EFDB  F006         	goto	l4131
  5769  000DA0                     u4700:
  5770  000DA0                     
  5771                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 0.0;
  5772  000DA0  0E00               	movlw	0
  5773  000DA2  0100               	movlb	0	; () banked
  5774  000DA4  6FA6               	movwf	efgtoa@l& (0+255),b
  5775  000DA6  0E00               	movlw	0
  5776  000DA8  6FA7               	movwf	(efgtoa@l+1)& (0+255),b
  5777  000DAA  0E00               	movlw	0
  5778  000DAC  6FA8               	movwf	(efgtoa@l+2)& (0+255),b
  5779  000DAE  0E00               	movlw	0
  5780  000DB0  6FA9               	movwf	(efgtoa@l+3)& (0+255),b
  5781                           
  5782                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  5783  000DB2  EF04  F007         	goto	l4137
  5784  000DB6                     l4131:
  5785                           
  5786                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if ((h ==
      +                           l) && !(d % 2)) {
  5787  000DB6  C0A2  F001         	movff	efgtoa@h,___fleq@ff1
  5788  000DBA  C0A3  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  5789  000DBE  C0A4  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  5790  000DC2  C0A5  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  5791  000DC6  C0A6  F005         	movff	efgtoa@l,___fleq@ff2
  5792  000DCA  C0A7  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  5793  000DCE  C0A8  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  5794  000DD2  C0A9  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  5795  000DD6  EC3A  F01F         	call	___fleq	;wreg free
  5796  000DDA  A0D8               	btfss	status,0,c
  5797  000DDC  EFF2  F006         	goto	u4711
  5798  000DE0  EFF4  F006         	goto	u4710
  5799  000DE4                     u4711:
  5800  000DE4  EF04  F007         	goto	l4137
  5801  000DE8                     u4710:
  5802  000DE8  0100               	movlb	0	; () banked
  5803  000DEA  B198               	btfsc	efgtoa@d& (0+255),0,b
  5804  000DEC  EFFA  F006         	goto	u4721
  5805  000DF0  EFFC  F006         	goto	u4720
  5806  000DF4                     u4721:
  5807  000DF4  EF04  F007         	goto	l4137
  5808  000DF8                     u4720:
  5809  000DF8                     
  5810                           ; BSR set to: 0
  5811                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             l = 0
      +                          .0;
  5812  000DF8  0E00               	movlw	0
  5813  000DFA  6FA6               	movwf	efgtoa@l& (0+255),b
  5814  000DFC  0E00               	movlw	0
  5815  000DFE  6FA7               	movwf	(efgtoa@l+1)& (0+255),b
  5816  000E00  0E00               	movlw	0
  5817  000E02  6FA8               	movwf	(efgtoa@l+2)& (0+255),b
  5818  000E04  0E00               	movlw	0
  5819  000E06  6FA9               	movwf	(efgtoa@l+3)& (0+255),b
  5820  000E08                     l4137:
  5821                           
  5822                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + l;
  5823  000E08  C0AC  F028         	movff	efgtoa@g,___fladd@b
  5824  000E0C  C0AD  F029         	movff	efgtoa@g+1,___fladd@b+1
  5825  000E10  C0AE  F02A         	movff	efgtoa@g+2,___fladd@b+2
  5826  000E14  C0AF  F02B         	movff	efgtoa@g+3,___fladd@b+3
  5827  000E18  C0A6  F02C         	movff	efgtoa@l,___fladd@a
  5828  000E1C  C0A7  F02D         	movff	efgtoa@l+1,___fladd@a+1
  5829  000E20  C0A8  F02E         	movff	efgtoa@l+2,___fladd@a+2
  5830  000E24  C0A9  F02F         	movff	efgtoa@l+3,___fladd@a+3
  5831  000E28  ECA0  F00E         	call	___fladd	;wreg free
  5832  000E2C  C028  F0A2         	movff	?___fladd,efgtoa@h
  5833  000E30  C029  F0A3         	movff	?___fladd+1,efgtoa@h+1
  5834  000E34  C02A  F0A4         	movff	?___fladd+2,efgtoa@h+2
  5835  000E38  C02B  F0A5         	movff	?___fladd+3,efgtoa@h+3
  5836  000E3C                     
  5837                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  5838  000E3C  C080  F0B4         	movff	efgtoa@ou,efgtoa@u
  5839  000E40  C081  F0B5         	movff	efgtoa@ou+1,efgtoa@u+1
  5840  000E44  C082  F0B6         	movff	efgtoa@ou+2,efgtoa@u+2
  5841  000E48  C083  F0B7         	movff	efgtoa@ou+3,efgtoa@u+3
  5842  000E4C                     
  5843                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nmode =
      +                          = 'e') ? 0 : e;
  5844  000E4C  0E65               	movlw	101
  5845  000E4E  0100               	movlb	0	; () banked
  5846  000E50  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  5847  000E52  B4D8               	btfsc	status,2,c
  5848  000E54  EF2E  F007         	goto	u4731
  5849  000E58  EF30  F007         	goto	u4730
  5850  000E5C                     u4731:
  5851  000E5C  EF36  F007         	goto	l4145
  5852  000E60                     u4730:
  5853  000E60                     
  5854                           ; BSR set to: 0
  5855  000E60  C0B0  F096         	movff	efgtoa@e,efgtoa@ne
  5856  000E64  C0B1  F097         	movff	efgtoa@e+1,efgtoa@ne+1
  5857  000E68  EF3A  F007         	goto	l1017
  5858  000E6C                     l4145:
  5859                           
  5860                           ; BSR set to: 0
  5861  000E6C  0E00               	movlw	0
  5862  000E6E  6F97               	movwf	(efgtoa@ne+1)& (0+255),b
  5863  000E70  0E00               	movlw	0
  5864  000E72  6F96               	movwf	efgtoa@ne& (0+255),b
  5865  000E74                     l1017:
  5866                           
  5867                           ; BSR set to: 0
  5868                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  5869  000E74  0E00               	movlw	0
  5870  000E76  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  5871  000E78  0E00               	movlw	0
  5872  000E7A  6F92               	movwf	efgtoa@pp& (0+255),b
  5873                           
  5874                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  5875  000E7C  0E00               	movlw	0
  5876  000E7E  6F91               	movwf	(efgtoa@t+1)& (0+255),b
  5877  000E80  0E00               	movlw	0
  5878  000E82  6F90               	movwf	efgtoa@t& (0+255),b
  5879                           
  5880                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  5881  000E84  0E00               	movlw	0
  5882  000E86  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  5883  000E88  0E00               	movlw	0
  5884  000E8A  6FAA               	movwf	efgtoa@i& (0+255),b
  5885                           
  5886                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((i < m
      +                          ) && (n < (80 - 5))) {
  5887  000E8C  EF35  F008         	goto	l4195
  5888  000E90                     l4147:
  5889                           
  5890                           ; BSR set to: 0
  5891                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = floor
      +                          f(h/u);
  5892  000E90  C0A2  F038         	movff	efgtoa@h,___fldiv@b
  5893  000E94  C0A3  F039         	movff	efgtoa@h+1,___fldiv@b+1
  5894  000E98  C0A4  F03A         	movff	efgtoa@h+2,___fldiv@b+2
  5895  000E9C  C0A5  F03B         	movff	efgtoa@h+3,___fldiv@b+3
  5896  000EA0  C0B4  F03C         	movff	efgtoa@u,___fldiv@a
  5897  000EA4  C0B5  F03D         	movff	efgtoa@u+1,___fldiv@a+1
  5898  000EA8  C0B6  F03E         	movff	efgtoa@u+2,___fldiv@a+2
  5899  000EAC  C0B7  F03F         	movff	efgtoa@u+3,___fldiv@a+3
  5900  000EB0  EC4A  F015         	call	___fldiv	;wreg free
  5901  000EB4  C038  F051         	movff	?___fldiv,floorf@x
  5902  000EB8  C039  F052         	movff	?___fldiv+1,floorf@x+1
  5903  000EBC  C03A  F053         	movff	?___fldiv+2,floorf@x+2
  5904  000EC0  C03B  F054         	movff	?___fldiv+3,floorf@x+3
  5905  000EC4  EC17  F017         	call	_floorf	;wreg free
  5906  000EC8  C051  F0A6         	movff	?_floorf,efgtoa@l
  5907  000ECC  C052  F0A7         	movff	?_floorf+1,efgtoa@l+1
  5908  000ED0  C053  F0A8         	movff	?_floorf+2,efgtoa@l+2
  5909  000ED4  C054  F0A9         	movff	?_floorf+3,efgtoa@l+3
  5910                           
  5911                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = (int)
      +                          l;
  5912  000ED8  C0A6  F028         	movff	efgtoa@l,___fltol@f1
  5913  000EDC  C0A7  F029         	movff	efgtoa@l+1,___fltol@f1+1
  5914  000EE0  C0A8  F02A         	movff	efgtoa@l+2,___fltol@f1+2
  5915  000EE4  C0A9  F02B         	movff	efgtoa@l+3,___fltol@f1+3
  5916  000EE8  EC5C  F01B         	call	___fltol	;wreg free
  5917  000EEC  C028  F098         	movff	?___fltol,efgtoa@d
  5918  000EF0  C029  F099         	movff	?___fltol+1,efgtoa@d+1
  5919  000EF4                     
  5920                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (!(fla
      +                          gs & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5921  000EF4  0100               	movlb	0	; () banked
  5922  000EF6  B9F0               	btfsc	_flags& (0+255),4,b
  5923  000EF8  EF80  F007         	goto	u4741
  5924  000EFC  EF82  F007         	goto	u4740
  5925  000F00                     u4741:
  5926  000F00  EF9F  F007         	goto	l4159
  5927  000F04                     u4740:
  5928  000F04                     
  5929                           ; BSR set to: 0
  5930  000F04  5198               	movf	efgtoa@d& (0+255),w,b
  5931  000F06  1199               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5932  000F08  A4D8               	btfss	status,2,c
  5933  000F0A  EF89  F007         	goto	u4751
  5934  000F0E  EF8B  F007         	goto	u4750
  5935  000F12                     u4751:
  5936  000F12  EF9F  F007         	goto	l4159
  5937  000F16                     u4750:
  5938  000F16                     
  5939                           ; BSR set to: 0
  5940  000F16  0E67               	movlw	103
  5941  000F18  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  5942  000F1A  A4D8               	btfss	status,2,c
  5943  000F1C  EF92  F007         	goto	u4761
  5944  000F20  EF94  F007         	goto	u4760
  5945  000F24                     u4761:
  5946  000F24  EF9F  F007         	goto	l4159
  5947  000F28                     u4760:
  5948  000F28                     
  5949                           ; BSR set to: 0
  5950  000F28  BF97               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5951  000F2A  EF9B  F007         	goto	u4770
  5952  000F2E  EF99  F007         	goto	u4771
  5953  000F32                     u4771:
  5954  000F32  EF9F  F007         	goto	l4159
  5955  000F36                     u4770:
  5956  000F36                     
  5957                           ; BSR set to: 0
  5958                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             ++t;
  5959  000F36  4B90               	infsnz	efgtoa@t& (0+255),f,b
  5960  000F38  2B91               	incf	(efgtoa@t+1)& (0+255),f,b
  5961                           
  5962                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } else {
  5963  000F3A  EFE9  F007         	goto	l4187
  5964  000F3E                     l4159:
  5965                           
  5966                           ; BSR set to: 0
  5967                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             if (!
      +                          pp && (ne < 0)) {
  5968  000F3E  5192               	movf	efgtoa@pp& (0+255),w,b
  5969  000F40  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5970  000F42  A4D8               	btfss	status,2,c
  5971  000F44  EFA6  F007         	goto	u4781
  5972  000F48  EFA8  F007         	goto	u4780
  5973  000F4C                     u4781:
  5974  000F4C  EFD2  F007         	goto	l4179
  5975  000F50                     u4780:
  5976  000F50                     
  5977                           ; BSR set to: 0
  5978  000F50  BF97               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5979  000F52  EFAF  F007         	goto	u4790
  5980  000F56  EFAD  F007         	goto	u4791
  5981  000F5A                     u4791:
  5982  000F5A  EFD2  F007         	goto	l4179
  5983  000F5E                     u4790:
  5984  000F5E                     
  5985                           ; BSR set to: 0
  5986                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:                 d
      +                          buf[n++] = '.';
  5987  000F5E  0E08               	movlw	low _dbuf
  5988  000F60  25B2               	addwf	efgtoa@n& (0+255),w,b
  5989  000F62  6ED9               	movwf	fsr2l,c
  5990  000F64  0E01               	movlw	high _dbuf
  5991  000F66  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5992  000F68  6EDA               	movwf	fsr2h,c
  5993  000F6A  0E2E               	movlw	46
  5994  000F6C  6EDF               	movwf	indf2,c
  5995  000F6E                     
  5996                           ; BSR set to: 0
  5997  000F6E  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  5998  000F70  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  5999  000F72                     
  6000                           ; BSR set to: 0
  6001                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:                 -
      +                          -w;
  6002  000F72  079F               	decf	efgtoa@w& (0+255),f,b
  6003  000F74  A0D8               	btfss	status,0,c
  6004  000F76  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  6005  000F78                     
  6006                           ; BSR set to: 0
  6007                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:                 p
      +                          p = 1;
  6008  000F78  0E00               	movlw	0
  6009  000F7A  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  6010  000F7C  0E01               	movlw	1
  6011  000F7E  6F92               	movwf	efgtoa@pp& (0+255),b
  6012  000F80  EFD2  F007         	goto	l4179
  6013  000F84                     l4171:
  6014                           
  6015                           ; BSR set to: 0
  6016                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:                 d
      +                          buf[n++] = '0';
  6017  000F84  0E08               	movlw	low _dbuf
  6018  000F86  25B2               	addwf	efgtoa@n& (0+255),w,b
  6019  000F88  6ED9               	movwf	fsr2l,c
  6020  000F8A  0E01               	movlw	high _dbuf
  6021  000F8C  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6022  000F8E  6EDA               	movwf	fsr2h,c
  6023  000F90  0E30               	movlw	48
  6024  000F92  6EDF               	movwf	indf2,c
  6025  000F94                     
  6026                           ; BSR set to: 0
  6027  000F94  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  6028  000F96  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  6029  000F98                     
  6030                           ; BSR set to: 0
  6031                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:                 -
      +                          -w;
  6032  000F98  079F               	decf	efgtoa@w& (0+255),f,b
  6033  000F9A  A0D8               	btfss	status,0,c
  6034  000F9C  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  6035  000F9E                     
  6036                           ; BSR set to: 0
  6037                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:                 -
      +                          -t;
  6038  000F9E  0790               	decf	efgtoa@t& (0+255),f,b
  6039  000FA0  A0D8               	btfss	status,0,c
  6040  000FA2  0791               	decf	(efgtoa@t+1)& (0+255),f,b
  6041  000FA4                     l4179:
  6042                           
  6043                           ; BSR set to: 0
  6044                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             while
      +                           (t) {
  6045  000FA4  5190               	movf	efgtoa@t& (0+255),w,b
  6046  000FA6  1191               	iorwf	(efgtoa@t+1)& (0+255),w,b
  6047  000FA8  A4D8               	btfss	status,2,c
  6048  000FAA  EFD9  F007         	goto	u4801
  6049  000FAE  EFDB  F007         	goto	u4800
  6050  000FB2                     u4801:
  6051  000FB2  EFC2  F007         	goto	l4171
  6052  000FB6                     u4800:
  6053  000FB6                     
  6054                           ; BSR set to: 0
  6055                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             dbuf[
      +                          n++] = '0' + d;
  6056  000FB6  0E08               	movlw	low _dbuf
  6057  000FB8  25B2               	addwf	efgtoa@n& (0+255),w,b
  6058  000FBA  6ED9               	movwf	fsr2l,c
  6059  000FBC  0E01               	movlw	high _dbuf
  6060  000FBE  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6061  000FC0  6EDA               	movwf	fsr2h,c
  6062  000FC2  5198               	movf	efgtoa@d& (0+255),w,b
  6063  000FC4  0F30               	addlw	48
  6064  000FC6  6EDF               	movwf	indf2,c
  6065  000FC8                     
  6066                           ; BSR set to: 0
  6067  000FC8  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  6068  000FCA  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  6069  000FCC                     
  6070                           ; BSR set to: 0
  6071                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             --w;
  6072  000FCC  079F               	decf	efgtoa@w& (0+255),f,b
  6073  000FCE  A0D8               	btfss	status,0,c
  6074  000FD0  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  6075  000FD2                     l4187:
  6076                           
  6077                           ; BSR set to: 0
  6078                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -= l*u;
  6079  000FD2  C0A2  F038         	movff	efgtoa@h,___flsub@b
  6080  000FD6  C0A3  F039         	movff	efgtoa@h+1,___flsub@b+1
  6081  000FDA  C0A4  F03A         	movff	efgtoa@h+2,___flsub@b+2
  6082  000FDE  C0A5  F03B         	movff	efgtoa@h+3,___flsub@b+3
  6083  000FE2  C0B4  F013         	movff	efgtoa@u,___flmul@a
  6084  000FE6  C0B5  F014         	movff	efgtoa@u+1,___flmul@a+1
  6085  000FEA  C0B6  F015         	movff	efgtoa@u+2,___flmul@a+2
  6086  000FEE  C0B7  F016         	movff	efgtoa@u+3,___flmul@a+3
  6087  000FF2  C0A6  F00F         	movff	efgtoa@l,___flmul@b
  6088  000FF6  C0A7  F010         	movff	efgtoa@l+1,___flmul@b+1
  6089  000FFA  C0A8  F011         	movff	efgtoa@l+2,___flmul@b+2
  6090  000FFE  C0A9  F012         	movff	efgtoa@l+3,___flmul@b+3
  6091  001002  EC35  F013         	call	___flmul	;wreg free
  6092  001006  C00F  F03C         	movff	?___flmul,___flsub@a
  6093  00100A  C010  F03D         	movff	?___flmul+1,___flsub@a+1
  6094  00100E  C011  F03E         	movff	?___flmul+2,___flsub@a+2
  6095  001012  C012  F03F         	movff	?___flmul+3,___flsub@a+3
  6096  001016  ECDF  F021         	call	___flsub	;wreg free
  6097  00101A  C038  F0A2         	movff	?___flsub,efgtoa@h
  6098  00101E  C039  F0A3         	movff	?___flsub+1,efgtoa@h+1
  6099  001022  C03A  F0A4         	movff	?___flsub+2,efgtoa@h+2
  6100  001026  C03B  F0A5         	movff	?___flsub+3,efgtoa@h+3
  6101  00102A                     
  6102                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = u/10.
      +                          0;
  6103  00102A  C0B4  F038         	movff	efgtoa@u,___fldiv@b
  6104  00102E  C0B5  F039         	movff	efgtoa@u+1,___fldiv@b+1
  6105  001032  C0B6  F03A         	movff	efgtoa@u+2,___fldiv@b+2
  6106  001036  C0B7  F03B         	movff	efgtoa@u+3,___fldiv@b+3
  6107  00103A  0E00               	movlw	0
  6108  00103C  6E3C               	movwf	___fldiv@a^0,c
  6109  00103E  0E00               	movlw	0
  6110  001040  6E3D               	movwf	(___fldiv@a+1)^0,c
  6111  001042  0E20               	movlw	32
  6112  001044  6E3E               	movwf	(___fldiv@a+2)^0,c
  6113  001046  0E41               	movlw	65
  6114  001048  6E3F               	movwf	(___fldiv@a+3)^0,c
  6115  00104A  EC4A  F015         	call	___fldiv	;wreg free
  6116  00104E  C038  F0B4         	movff	?___fldiv,efgtoa@u
  6117  001052  C039  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  6118  001056  C03A  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  6119  00105A  C03B  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  6120  00105E                     
  6121                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne;
  6122  00105E  0100               	movlb	0	; () banked
  6123  001060  0796               	decf	efgtoa@ne& (0+255),f,b
  6124  001062  A0D8               	btfss	status,0,c
  6125  001064  0797               	decf	(efgtoa@ne+1)& (0+255),f,b
  6126  001066                     
  6127                           ; BSR set to: 0
  6128                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  6129  001066  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  6130  001068  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  6131  00106A                     l4195:
  6132                           
  6133                           ; BSR set to: 0
  6134                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((i < m
      +                          ) && (n < (80 - 5))) {
  6135  00106A  5194               	movf	efgtoa@m& (0+255),w,b
  6136  00106C  5DAA               	subwf	efgtoa@i& (0+255),w,b
  6137  00106E  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  6138  001070  0A80               	xorlw	128
  6139  001072  6E6C               	movwf	??_efgtoa^0,c
  6140  001074  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  6141  001076  0A80               	xorlw	128
  6142  001078  586C               	subwfb	??_efgtoa^0,w,c
  6143  00107A  B0D8               	btfsc	status,0,c
  6144  00107C  EF42  F008         	goto	u4811
  6145  001080  EF44  F008         	goto	u4810
  6146  001084                     u4811:
  6147  001084  EF52  F008         	goto	l4199
  6148  001088                     u4810:
  6149  001088                     
  6150                           ; BSR set to: 0
  6151  001088  BFB3               	btfsc	(efgtoa@n+1)& (0+255),7,b
  6152  00108A  EF50  F008         	goto	u4821
  6153  00108E  51B3               	movf	(efgtoa@n+1)& (0+255),w,b
  6154  001090  E109               	bnz	u4820
  6155  001092  0E4B               	movlw	75
  6156  001094  5DB2               	subwf	efgtoa@n& (0+255),w,b
  6157  001096  A0D8               	btfss	status,0,c
  6158  001098  EF50  F008         	goto	u4821
  6159  00109C  EF52  F008         	goto	u4820
  6160  0010A0                     u4821:
  6161  0010A0  EF48  F007         	goto	l4147
  6162  0010A4                     u4820:
  6163  0010A4                     l4199:
  6164                           
  6165                           ; BSR set to: 0
  6166                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp && (f
      +                          lags & (1 << 4))) {
  6167  0010A4  5192               	movf	efgtoa@pp& (0+255),w,b
  6168  0010A6  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6169  0010A8  A4D8               	btfss	status,2,c
  6170  0010AA  EF59  F008         	goto	u4831
  6171  0010AE  EF5B  F008         	goto	u4830
  6172  0010B2                     u4831:
  6173  0010B2  EF6C  F008         	goto	l4207
  6174  0010B6                     u4830:
  6175  0010B6                     
  6176                           ; BSR set to: 0
  6177  0010B6  A9F0               	btfss	_flags& (0+255),4,b
  6178  0010B8  EF60  F008         	goto	u4841
  6179  0010BC  EF62  F008         	goto	u4840
  6180  0010C0                     u4841:
  6181  0010C0  EF6C  F008         	goto	l4207
  6182  0010C4                     u4840:
  6183  0010C4                     
  6184                           ; BSR set to: 0
  6185                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf[n++]
      +                           = '.';
  6186  0010C4  0E08               	movlw	low _dbuf
  6187  0010C6  25B2               	addwf	efgtoa@n& (0+255),w,b
  6188  0010C8  6ED9               	movwf	fsr2l,c
  6189  0010CA  0E01               	movlw	high _dbuf
  6190  0010CC  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6191  0010CE  6EDA               	movwf	fsr2h,c
  6192  0010D0  0E2E               	movlw	46
  6193  0010D2  6EDF               	movwf	indf2,c
  6194  0010D4                     
  6195                           ; BSR set to: 0
  6196  0010D4  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  6197  0010D6  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  6198  0010D8                     l4207:
  6199                           
  6200                           ; BSR set to: 0
  6201                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] = '\0
      +                          ';
  6202  0010D8  0E08               	movlw	low _dbuf
  6203  0010DA  25B2               	addwf	efgtoa@n& (0+255),w,b
  6204  0010DC  6ED9               	movwf	fsr2l,c
  6205  0010DE  0E01               	movlw	high _dbuf
  6206  0010E0  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6207  0010E2  6EDA               	movwf	fsr2h,c
  6208  0010E4  0E00               	movlw	0
  6209  0010E6  6EDF               	movwf	indf2,c
  6210  0010E8                     
  6211                           ; BSR set to: 0
  6212                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmode == 
      +                          'e') {
  6213  0010E8  0E65               	movlw	101
  6214  0010EA  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  6215  0010EC  A4D8               	btfss	status,2,c
  6216  0010EE  EF7B  F008         	goto	u4851
  6217  0010F2  EF7D  F008         	goto	u4850
  6218  0010F6                     u4851:
  6219  0010F6  EF2B  F004         	goto	l4019
  6220  0010FA                     u4850:
  6221  0010FA                     
  6222                           ; BSR set to: 0
  6223                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = sizeo
      +                          f(dbuf) - 1;
  6224  0010FA  0E00               	movlw	0
  6225  0010FC  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  6226  0010FE  0E4F               	movlw	79
  6227  001100  6FAA               	movwf	efgtoa@i& (0+255),b
  6228  001102                     
  6229                           ; BSR set to: 0
  6230                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf[i] =
      +                           '\0';
  6231  001102  0E08               	movlw	low _dbuf
  6232  001104  25AA               	addwf	efgtoa@i& (0+255),w,b
  6233  001106  6ED9               	movwf	fsr2l,c
  6234  001108  0E01               	movlw	high _dbuf
  6235  00110A  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6236  00110C  6EDA               	movwf	fsr2h,c
  6237  00110E  0E00               	movlw	0
  6238  001110  6EDF               	movwf	indf2,c
  6239  001112                     
  6240                           ; BSR set to: 0
  6241                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign = 0;
  6242  001112  0E00               	movlw	0
  6243  001114  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  6244  001116  0E00               	movlw	0
  6245  001118  6F9A               	movwf	efgtoa@sign& (0+255),b
  6246  00111A                     
  6247                           ; BSR set to: 0
  6248                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (e < 0
      +                          ) {
  6249  00111A  BFB1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6250  00111C  EF94  F008         	goto	u4860
  6251  001120  EF92  F008         	goto	u4861
  6252  001124                     u4861:
  6253  001124  EF9C  F008         	goto	l4223
  6254  001128                     u4860:
  6255  001128                     
  6256                           ; BSR set to: 0
  6257                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             sign 
      +                          = 1;
  6258  001128  0E00               	movlw	0
  6259  00112A  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  6260  00112C  0E01               	movlw	1
  6261  00112E  6F9A               	movwf	efgtoa@sign& (0+255),b
  6262  001130                     
  6263                           ; BSR set to: 0
  6264                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             e = -
      +                          e;
  6265  001130  6DB0               	negf	efgtoa@e& (0+255),b
  6266  001132  1FB1               	comf	(efgtoa@e+1)& (0+255),f,b
  6267  001134  B0D8               	btfsc	status,0,c
  6268  001136  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  6269  001138                     l4223:
  6270                           
  6271                           ; BSR set to: 0
  6272                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 2;
  6273  001138  0E00               	movlw	0
  6274  00113A  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  6275  00113C  0E02               	movlw	2
  6276  00113E  6F9C               	movwf	efgtoa@p& (0+255),b
  6277                           
  6278                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         while (e 
      +                          || (0 < p)) {
  6279  001140  EFCD  F008         	goto	l4235
  6280  001144                     l4225:
  6281                           
  6282                           ; BSR set to: 0
  6283                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             --i;
  6284  001144  07AA               	decf	efgtoa@i& (0+255),f,b
  6285  001146  A0D8               	btfss	status,0,c
  6286  001148  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  6287  00114A                     
  6288                           ; BSR set to: 0
  6289                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             dbuf[
      +                          i] = '0' + (e % 10);
  6290  00114A  0E08               	movlw	low _dbuf
  6291  00114C  25AA               	addwf	efgtoa@i& (0+255),w,b
  6292  00114E  6ED9               	movwf	fsr2l,c
  6293  001150  0E01               	movlw	high _dbuf
  6294  001152  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6295  001154  6EDA               	movwf	fsr2h,c
  6296  001156  C0B0  F001         	movff	efgtoa@e,___awmod@dividend
  6297  00115A  C0B1  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  6298  00115E  0E00               	movlw	0
  6299  001160  6E04               	movwf	(___awmod@divisor+1)^0,c
  6300  001162  0E0A               	movlw	10
  6301  001164  6E03               	movwf	___awmod@divisor^0,c
  6302  001166  ECE2  F01E         	call	___awmod	;wreg free
  6303  00116A  5001               	movf	?___awmod^0,w,c
  6304  00116C  0F30               	addlw	48
  6305  00116E  6EDF               	movwf	indf2,c
  6306  001170                     
  6307                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             e = e
      +                           / 10;
  6308  001170  C0B0  F001         	movff	efgtoa@e,___awdiv@dividend
  6309  001174  C0B1  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  6310  001178  0E00               	movlw	0
  6311  00117A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6312  00117C  0E0A               	movlw	10
  6313  00117E  6E03               	movwf	___awdiv@divisor^0,c
  6314  001180  EC80  F01E         	call	___awdiv	;wreg free
  6315  001184  C001  F0B0         	movff	?___awdiv,efgtoa@e
  6316  001188  C002  F0B1         	movff	?___awdiv+1,efgtoa@e+1
  6317  00118C                     
  6318                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             --p;
  6319  00118C  0100               	movlb	0	; () banked
  6320  00118E  079C               	decf	efgtoa@p& (0+255),f,b
  6321  001190  A0D8               	btfss	status,0,c
  6322  001192  079D               	decf	(efgtoa@p+1)& (0+255),f,b
  6323  001194                     
  6324                           ; BSR set to: 0
  6325                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             --w;
  6326  001194  079F               	decf	efgtoa@w& (0+255),f,b
  6327  001196  A0D8               	btfss	status,0,c
  6328  001198  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  6329  00119A                     l4235:
  6330                           
  6331                           ; BSR set to: 0
  6332                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         while (e 
      +                          || (0 < p)) {
  6333  00119A  51B0               	movf	efgtoa@e& (0+255),w,b
  6334  00119C  11B1               	iorwf	(efgtoa@e+1)& (0+255),w,b
  6335  00119E  A4D8               	btfss	status,2,c
  6336  0011A0  EFD4  F008         	goto	u4871
  6337  0011A4  EFD6  F008         	goto	u4870
  6338  0011A8                     u4871:
  6339  0011A8  EFA2  F008         	goto	l4225
  6340  0011AC                     u4870:
  6341  0011AC                     
  6342                           ; BSR set to: 0
  6343  0011AC  BF9D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  6344  0011AE  EFE3  F008         	goto	u4880
  6345  0011B2  519D               	movf	(efgtoa@p+1)& (0+255),w,b
  6346  0011B4  E106               	bnz	u4881
  6347  0011B6  059C               	decf	efgtoa@p& (0+255),w,b
  6348  0011B8  B0D8               	btfsc	status,0,c
  6349  0011BA  EFE1  F008         	goto	u4881
  6350  0011BE  EFE3  F008         	goto	u4880
  6351  0011C2                     u4881:
  6352  0011C2  EFA2  F008         	goto	l4225
  6353  0011C6                     u4880:
  6354  0011C6                     
  6355                           ; BSR set to: 0
  6356                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  6357  0011C6  07AA               	decf	efgtoa@i& (0+255),f,b
  6358  0011C8  A0D8               	btfss	status,0,c
  6359  0011CA  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  6360  0011CC                     
  6361                           ; BSR set to: 0
  6362                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf[i] =
      +                           sign ? '-' : '+';
  6363  0011CC  519A               	movf	efgtoa@sign& (0+255),w,b
  6364  0011CE  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6365  0011D0  A4D8               	btfss	status,2,c
  6366  0011D2  EFED  F008         	goto	u4891
  6367  0011D6  EFEF  F008         	goto	u4890
  6368  0011DA                     u4891:
  6369  0011DA  EFF5  F008         	goto	l4245
  6370  0011DE                     u4890:
  6371  0011DE                     
  6372                           ; BSR set to: 0
  6373  0011DE  0E00               	movlw	0
  6374  0011E0  6F8B               	movwf	(_efgtoa$778+1)& (0+255),b
  6375  0011E2  0E2B               	movlw	43
  6376  0011E4  6F8A               	movwf	_efgtoa$778& (0+255),b
  6377  0011E6  EFF9  F008         	goto	l4247
  6378  0011EA                     l4245:
  6379                           
  6380                           ; BSR set to: 0
  6381  0011EA  0E00               	movlw	0
  6382  0011EC  6F8B               	movwf	(_efgtoa$778+1)& (0+255),b
  6383  0011EE  0E2D               	movlw	45
  6384  0011F0  6F8A               	movwf	_efgtoa$778& (0+255),b
  6385  0011F2                     l4247:
  6386                           
  6387                           ; BSR set to: 0
  6388  0011F2  0E08               	movlw	low _dbuf
  6389  0011F4  25AA               	addwf	efgtoa@i& (0+255),w,b
  6390  0011F6  6ED9               	movwf	fsr2l,c
  6391  0011F8  0E01               	movlw	high _dbuf
  6392  0011FA  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6393  0011FC  6EDA               	movwf	fsr2h,c
  6394  0011FE  C08A  FFDF         	movff	_efgtoa$778,indf2
  6395  001202                     
  6396                           ; BSR set to: 0
  6397                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  6398  001202  079F               	decf	efgtoa@w& (0+255),f,b
  6399  001204  A0D8               	btfss	status,0,c
  6400  001206  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  6401  001208                     
  6402                           ; BSR set to: 0
  6403                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf[i] =
      +                           (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6404  001208  07AA               	decf	efgtoa@i& (0+255),f,b
  6405  00120A  A0D8               	btfss	status,0,c
  6406  00120C  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  6407  00120E                     
  6408                           ; BSR set to: 0
  6409  00120E  0EBF               	movlw	191
  6410  001210  6E6C               	movwf	??_efgtoa^0,c
  6411  001212  0EFF               	movlw	255
  6412  001214  6E6D               	movwf	(??_efgtoa+1)^0,c
  6413  001216  506B               	movf	efgtoa@c^0,w,c
  6414  001218  6E6E               	movwf	(??_efgtoa+2)^0,c
  6415  00121A  6A6F               	clrf	(??_efgtoa+3)^0,c
  6416  00121C  506C               	movf	??_efgtoa^0,w,c
  6417  00121E  266E               	addwf	(??_efgtoa+2)^0,f,c
  6418  001220  506D               	movf	(??_efgtoa+1)^0,w,c
  6419  001222  226F               	addwfc	(??_efgtoa+3)^0,f,c
  6420  001224  506F               	movf	(??_efgtoa+3)^0,w,c
  6421  001226  E10A               	bnz	u4900
  6422  001228  0E1A               	movlw	26
  6423  00122A  5C6E               	subwf	(??_efgtoa+2)^0,w,c
  6424  00122C  A0D8               	btfss	status,0,c
  6425  00122E  EF1B  F009         	goto	u4901
  6426  001232  EF1E  F009         	goto	u4900
  6427  001236                     u4901:
  6428  001236  0E01               	movlw	1
  6429  001238  EF1F  F009         	goto	u4910
  6430  00123C                     u4900:
  6431  00123C  0E00               	movlw	0
  6432  00123E                     u4910:
  6433  00123E  6F8E               	movwf	_efgtoa$780& (0+255),b
  6434  001240  6B8F               	clrf	(_efgtoa$780+1)& (0+255),b
  6435  001242                     
  6436                           ; BSR set to: 0
  6437  001242  518E               	movf	_efgtoa$780& (0+255),w,b
  6438  001244  118F               	iorwf	(_efgtoa$780+1)& (0+255),w,b
  6439  001246  A4D8               	btfss	status,2,c
  6440  001248  EF28  F009         	goto	u4921
  6441  00124C  EF2A  F009         	goto	u4920
  6442  001250                     u4921:
  6443  001250  EF30  F009         	goto	l4261
  6444  001254                     u4920:
  6445  001254                     
  6446                           ; BSR set to: 0
  6447  001254  0E00               	movlw	0
  6448  001256  6F8D               	movwf	(_efgtoa$779+1)& (0+255),b
  6449  001258  0E65               	movlw	101
  6450  00125A  6F8C               	movwf	_efgtoa$779& (0+255),b
  6451  00125C  EF34  F009         	goto	l4263
  6452  001260                     l4261:
  6453                           
  6454                           ; BSR set to: 0
  6455  001260  0E00               	movlw	0
  6456  001262  6F8D               	movwf	(_efgtoa$779+1)& (0+255),b
  6457  001264  0E45               	movlw	69
  6458  001266  6F8C               	movwf	_efgtoa$779& (0+255),b
  6459  001268                     l4263:
  6460                           
  6461                           ; BSR set to: 0
  6462  001268  0E08               	movlw	low _dbuf
  6463  00126A  25AA               	addwf	efgtoa@i& (0+255),w,b
  6464  00126C  6ED9               	movwf	fsr2l,c
  6465  00126E  0E01               	movlw	high _dbuf
  6466  001270  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6467  001272  6EDA               	movwf	fsr2h,c
  6468  001274  C08C  FFDF         	movff	_efgtoa$779,indf2
  6469  001278                     
  6470                           ; BSR set to: 0
  6471                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  6472  001278  079F               	decf	efgtoa@w& (0+255),f,b
  6473  00127A  A0D8               	btfss	status,0,c
  6474  00127C  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  6475  00127E                     
  6476                           ; BSR set to: 0
  6477                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strcpy(&d
      +                          buf[n], &dbuf[i]);
  6478  00127E  0E08               	movlw	low _dbuf
  6479  001280  25B2               	addwf	efgtoa@n& (0+255),w,b
  6480  001282  6E01               	movwf	strcpy@dest^0,c
  6481  001284  0E01               	movlw	high _dbuf
  6482  001286  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6483  001288  6E02               	movwf	(strcpy@dest+1)^0,c
  6484  00128A  0E08               	movlw	low _dbuf
  6485  00128C  25AA               	addwf	efgtoa@i& (0+255),w,b
  6486  00128E  6E03               	movwf	strcpy@src^0,c
  6487  001290  0E01               	movlw	high _dbuf
  6488  001292  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6489  001294  6E04               	movwf	(strcpy@src+1)^0,c
  6490  001296  EC5F  F021         	call	_strcpy	;wreg free
  6491  00129A  EF2B  F004         	goto	l4019
  6492  00129E                     l973:
  6493  00129E  0012               	return		;funcret
  6494  0012A0                     __end_of_efgtoa:
  6495                           	callstack 0
  6496                           
  6497 ;; *************** function _tolower *****************
  6498 ;; Defined at:
  6499 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\tolower.c"
  6500 ;; Parameters:    Size  Location     Type
  6501 ;;  c               2    6[COMRAM] int 
  6502 ;; Auto vars:     Size  Location     Type
  6503 ;;		None
  6504 ;; Return value:  Size  Location     Type
  6505 ;;                  2    6[COMRAM] int 
  6506 ;; Registers used:
  6507 ;;		wreg, status,2, status,0
  6508 ;; Tracked objects:
  6509 ;;		On entry : 0/0
  6510 ;;		On exit  : 0/0
  6511 ;;		Unchanged: 0/0
  6512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6513 ;;      Params:         2       0       0       0       0       0       0
  6514 ;;      Locals:         2       0       0       0       0       0       0
  6515 ;;      Temps:          4       0       0       0       0       0       0
  6516 ;;      Totals:         8       0       0       0       0       0       0
  6517 ;;Total ram usage:        8 bytes
  6518 ;; Hardware stack levels used:    1
  6519 ;; Hardware stack levels required when called:    1
  6520 ;; This function calls:
  6521 ;;		_isupper
  6522 ;; This function is called by:
  6523 ;;		_efgtoa
  6524 ;;		_vfpfcnvrt
  6525 ;; This function uses a non-reentrant model
  6526 ;;
  6527                           
  6528                           	psect	text11
  6529  004202                     __ptext11:
  6530                           	callstack 0
  6531  004202                     _tolower:
  6532                           	callstack 25
  6533  004202  0EBF               	movlw	191
  6534  004204  6E09               	movwf	??_tolower^0,c
  6535  004206  0EFF               	movlw	255
  6536  004208  6E0A               	movwf	(??_tolower+1)^0,c
  6537  00420A  C007  F00B         	movff	tolower@c,??_tolower+2
  6538  00420E  C008  F00C         	movff	tolower@c+1,??_tolower+3
  6539  004212  5009               	movf	??_tolower^0,w,c
  6540  004214  260B               	addwf	(??_tolower+2)^0,f,c
  6541  004216  500A               	movf	(??_tolower+1)^0,w,c
  6542  004218  220C               	addwfc	(??_tolower+3)^0,f,c
  6543  00421A  500C               	movf	(??_tolower+3)^0,w,c
  6544  00421C  E10A               	bnz	u4240
  6545  00421E  0E1A               	movlw	26
  6546  004220  5C0B               	subwf	(??_tolower+2)^0,w,c
  6547  004222  A0D8               	btfss	status,0,c
  6548  004224  EF16  F021         	goto	u4241
  6549  004228  EF19  F021         	goto	u4240
  6550  00422C                     u4241:
  6551  00422C  0E01               	movlw	1
  6552  00422E  EF1A  F021         	goto	u4250
  6553  004232                     u4240:
  6554  004232  0E00               	movlw	0
  6555  004234                     u4250:
  6556  004234  6E0D               	movwf	_tolower$927^0,c
  6557  004236  6A0E               	clrf	(_tolower$927+1)^0,c
  6558  004238  500D               	movf	_tolower$927^0,w,c
  6559  00423A  100E               	iorwf	(_tolower$927+1)^0,w,c
  6560  00423C  B4D8               	btfsc	status,2,c
  6561  00423E  EF23  F021         	goto	u4261
  6562  004242  EF25  F021         	goto	u4260
  6563  004246                     u4261:
  6564  004246  EF2C  F021         	goto	l1201
  6565  00424A                     u4260:
  6566  00424A  0E20               	movlw	32
  6567  00424C  1007               	iorwf	tolower@c^0,w,c
  6568  00424E  6E07               	movwf	?_tolower^0,c
  6569  004250  5008               	movf	(tolower@c+1)^0,w,c
  6570  004252  6E08               	movwf	(?_tolower+1)^0,c
  6571  004254  EF30  F021         	goto	l1206
  6572  004258                     l1201:
  6573  004258  C007  F007         	movff	tolower@c,?_tolower
  6574  00425C  C008  F008         	movff	tolower@c+1,?_tolower+1
  6575  004260                     l1206:
  6576  004260  0012               	return		;funcret
  6577  004262                     __end_of_tolower:
  6578                           	callstack 0
  6579                           
  6580 ;; *************** function _isupper *****************
  6581 ;; Defined at:
  6582 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\isupper.c"
  6583 ;; Parameters:    Size  Location     Type
  6584 ;;  c               2    0[COMRAM] int 
  6585 ;; Auto vars:     Size  Location     Type
  6586 ;;		None
  6587 ;; Return value:  Size  Location     Type
  6588 ;;                  2    0[COMRAM] int 
  6589 ;; Registers used:
  6590 ;;		wreg, status,2, status,0
  6591 ;; Tracked objects:
  6592 ;;		On entry : 0/0
  6593 ;;		On exit  : 0/0
  6594 ;;		Unchanged: 0/0
  6595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6596 ;;      Params:         2       0       0       0       0       0       0
  6597 ;;      Locals:         0       0       0       0       0       0       0
  6598 ;;      Temps:          4       0       0       0       0       0       0
  6599 ;;      Totals:         6       0       0       0       0       0       0
  6600 ;;Total ram usage:        6 bytes
  6601 ;; Hardware stack levels used:    1
  6602 ;; This function calls:
  6603 ;;		Nothing
  6604 ;; This function is called by:
  6605 ;;		_efgtoa
  6606 ;;		_vfpfcnvrt
  6607 ;;		_tolower
  6608 ;; This function uses a non-reentrant model
  6609 ;;
  6610                           
  6611                           	psect	text12
  6612  004448                     __ptext12:
  6613                           	callstack 0
  6614  004448                     _isupper:
  6615                           	callstack 25
  6616  004448  0EBF               	movlw	191
  6617  00444A  6E03               	movwf	??_isupper^0,c
  6618  00444C  0EFF               	movlw	255
  6619  00444E  6E04               	movwf	(??_isupper+1)^0,c
  6620  004450  C001  F005         	movff	isupper@c,??_isupper+2
  6621  004454  C002  F006         	movff	isupper@c+1,??_isupper+3
  6622  004458  5003               	movf	??_isupper^0,w,c
  6623  00445A  2605               	addwf	(??_isupper+2)^0,f,c
  6624  00445C  5004               	movf	(??_isupper+1)^0,w,c
  6625  00445E  2206               	addwfc	(??_isupper+3)^0,f,c
  6626  004460  5006               	movf	(??_isupper+3)^0,w,c
  6627  004462  E10A               	bnz	u3390
  6628  004464  0E1A               	movlw	26
  6629  004466  5C05               	subwf	(??_isupper+2)^0,w,c
  6630  004468  A0D8               	btfss	status,0,c
  6631  00446A  EF39  F022         	goto	u3391
  6632  00446E  EF3C  F022         	goto	u3390
  6633  004472                     u3391:
  6634  004472  0E01               	movlw	1
  6635  004474  EF3D  F022         	goto	u3400
  6636  004478                     u3390:
  6637  004478  0E00               	movlw	0
  6638  00447A                     u3400:
  6639  00447A  6E01               	movwf	?_isupper^0,c
  6640  00447C  6A02               	clrf	(?_isupper+1)^0,c
  6641  00447E  0012               	return		;funcret
  6642  004480                     __end_of_isupper:
  6643                           	callstack 0
  6644                           
  6645 ;; *************** function _strcpy *****************
  6646 ;; Defined at:
  6647 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  6648 ;; Parameters:    Size  Location     Type
  6649 ;;  dest            2    0[COMRAM] PTR unsigned char 
  6650 ;;		 -> dbuf(80), 
  6651 ;;  src             2    2[COMRAM] PTR const unsigned char 
  6652 ;;		 -> STR_37(4), STR_36(4), STR_33(4), STR_32(4), 
  6653 ;;		 -> dbuf(80), 
  6654 ;; Auto vars:     Size  Location     Type
  6655 ;;  d               2    8[COMRAM] PTR unsigned char 
  6656 ;;		 -> dbuf(80), 
  6657 ;;  s               2    6[COMRAM] PTR const unsigned char 
  6658 ;;		 -> STR_37(4), STR_36(4), STR_33(4), STR_32(4), 
  6659 ;;		 -> dbuf(80), 
  6660 ;; Return value:  Size  Location     Type
  6661 ;;                  2    0[COMRAM] PTR unsigned char 
  6662 ;; Registers used:
  6663 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6664 ;; Tracked objects:
  6665 ;;		On entry : 0/0
  6666 ;;		On exit  : 0/0
  6667 ;;		Unchanged: 0/0
  6668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6669 ;;      Params:         4       0       0       0       0       0       0
  6670 ;;      Locals:         4       0       0       0       0       0       0
  6671 ;;      Temps:          2       0       0       0       0       0       0
  6672 ;;      Totals:        10       0       0       0       0       0       0
  6673 ;;Total ram usage:       10 bytes
  6674 ;; Hardware stack levels used:    1
  6675 ;; This function calls:
  6676 ;;		Nothing
  6677 ;; This function is called by:
  6678 ;;		_efgtoa
  6679 ;; This function uses a non-reentrant model
  6680 ;;
  6681                           
  6682                           	psect	text13
  6683  0042BE                     __ptext13:
  6684                           	callstack 0
  6685  0042BE                     _strcpy:
  6686                           	callstack 25
  6687  0042BE  C003  F007         	movff	strcpy@src,strcpy@s
  6688  0042C2  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  6689  0042C6  C001  F009         	movff	strcpy@dest,strcpy@d
  6690  0042CA  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  6691  0042CE                     l3919:
  6692  0042CE  5007               	movf	strcpy@s^0,w,c
  6693  0042D0  6E05               	movwf	??_strcpy^0,c
  6694  0042D2  5008               	movf	(strcpy@s+1)^0,w,c
  6695  0042D4  6E06               	movwf	(??_strcpy+1)^0,c
  6696  0042D6  4A07               	infsnz	strcpy@s^0,f,c
  6697  0042D8  2A08               	incf	(strcpy@s+1)^0,f,c
  6698  0042DA  C005  FFF6         	movff	??_strcpy,tblptrl
  6699  0042DE  C006  FFF7         	movff	??_strcpy+1,tblptrh
  6700  0042E2  6AF8               	clrf	tblptru,c
  6701  0042E4  C009  FFD9         	movff	strcpy@d,fsr2l
  6702  0042E8  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  6703  0042EC  4A09               	infsnz	strcpy@d^0,f,c
  6704  0042EE  2A0A               	incf	(strcpy@d+1)^0,f,c
  6705  0042F0  0E05               	movlw	(high __ramtop+-1)
  6706  0042F2  64F7               	cpfsgt	tblptrh,c
  6707  0042F4  D003               	bra	u4227
  6708  0042F6  0008               	tblrd		*
  6709  0042F8  50F5               	movf	tablat,w,c
  6710  0042FA  D005               	bra	u4220
  6711  0042FC                     u4227:
  6712  0042FC  CFF6 FFE9          	movff	tblptrl,fsr0l
  6713  004300  CFF7 FFEA          	movff	tblptrh,fsr0h
  6714  004304  50EF               	movf	indf0,w,c
  6715  004306                     u4220:
  6716  004306  6EDF               	movwf	indf2,c
  6717  004308  50DF               	movf	indf2,w,c
  6718  00430A  A4D8               	btfss	status,2,c
  6719  00430C  EF8A  F021         	goto	u4231
  6720  004310  EF8C  F021         	goto	u4230
  6721  004314                     u4231:
  6722  004314  EF67  F021         	goto	l3919
  6723  004318                     u4230:
  6724  004318  0012               	return		;funcret
  6725  00431A                     __end_of_strcpy:
  6726                           	callstack 0
  6727                           
  6728 ;; *************** function _pad *****************
  6729 ;; Defined at:
  6730 ;;		line 72 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6731 ;; Parameters:    Size  Location     Type
  6732 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6733 ;;		 -> sprintf@f(6), 
  6734 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6735 ;;		 -> dbuf(80), 
  6736 ;;  p               2   20[COMRAM] int 
  6737 ;; Auto vars:     Size  Location     Type
  6738 ;;  w               2   25[COMRAM] int 
  6739 ;;  i               2   23[COMRAM] int 
  6740 ;; Return value:  Size  Location     Type
  6741 ;;                  2   16[COMRAM] int 
  6742 ;; Registers used:
  6743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6744 ;; Tracked objects:
  6745 ;;		On entry : 0/0
  6746 ;;		On exit  : 0/0
  6747 ;;		Unchanged: 0/0
  6748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6749 ;;      Params:         6       0       0       0       0       0       0
  6750 ;;      Locals:         4       0       0       0       0       0       0
  6751 ;;      Temps:          1       0       0       0       0       0       0
  6752 ;;      Totals:        11       0       0       0       0       0       0
  6753 ;;Total ram usage:       11 bytes
  6754 ;; Hardware stack levels used:    1
  6755 ;; Hardware stack levels required when called:    3
  6756 ;; This function calls:
  6757 ;;		_fputc
  6758 ;;		_fputs
  6759 ;;		_strlen
  6760 ;; This function is called by:
  6761 ;;		_efgtoa
  6762 ;; This function uses a non-reentrant model
  6763 ;;
  6764                           
  6765                           	psect	text14
  6766  003C3A                     __ptext14:
  6767                           	callstack 0
  6768  003C3A                     _pad:
  6769                           	callstack 22
  6770  003C3A                     
  6771                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pad(FIL
      +                          E *fp, char *buf, int p);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c
      +                          : 73: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 74:     int i, 
      +                          w;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 77:     if (flags & 
      +                          (1 << 0)) {
  6772  003C3A  0100               	movlb	0	; () banked
  6773  003C3C  A1F0               	btfss	_flags& (0+255),0,b
  6774  003C3E  EF23  F01E         	goto	u4111
  6775  003C42  EF25  F01E         	goto	u4110
  6776  003C46                     u4111:
  6777  003C46  EF2F  F01E         	goto	l3877
  6778  003C4A                     u4110:
  6779  003C4A                     
  6780                           ; BSR set to: 0
  6781                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs((con
      +                          st char *)buf, fp);
  6782  003C4A  C013  F00A         	movff	pad@buf,fputs@s
  6783  003C4E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6784  003C52  C011  F00C         	movff	pad@fp,fputs@fp
  6785  003C56  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6786  003C5A  EC02  F022         	call	_fputs	;wreg free
  6787  003C5E                     l3877:
  6788                           
  6789                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ? 
      +                          0 : p;
  6790  003C5E  BE16               	btfsc	(pad@p+1)^0,7,c
  6791  003C60  EF34  F01E         	goto	u4121
  6792  003C64  EF36  F01E         	goto	u4120
  6793  003C68                     u4121:
  6794  003C68  EF3C  F01E         	goto	l3881
  6795  003C6C                     u4120:
  6796  003C6C  C015  F01A         	movff	pad@p,pad@w
  6797  003C70  C016  F01B         	movff	pad@p+1,pad@w+1
  6798  003C74  EF40  F01E         	goto	l950
  6799  003C78                     l3881:
  6800  003C78  0E00               	movlw	0
  6801  003C7A  6E1B               	movwf	(pad@w+1)^0,c
  6802  003C7C  0E00               	movlw	0
  6803  003C7E  6E1A               	movwf	pad@w^0,c
  6804  003C80                     l950:
  6805                           
  6806                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6807  003C80  0E00               	movlw	0
  6808  003C82  6E19               	movwf	(pad@i+1)^0,c
  6809  003C84  0E00               	movlw	0
  6810  003C86  6E18               	movwf	pad@i^0,c
  6811                           
  6812                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  6813  003C88  EF52  F01E         	goto	l3887
  6814  003C8C                     l3883:
  6815                           
  6816                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc(' ',
      +                           fp);
  6817  003C8C  0E00               	movlw	0
  6818  003C8E  6E02               	movwf	(fputc@c+1)^0,c
  6819  003C90  0E20               	movlw	32
  6820  003C92  6E01               	movwf	fputc@c^0,c
  6821  003C94  C011  F003         	movff	pad@fp,fputc@fp
  6822  003C98  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6823  003C9C  ECB8  F01D         	call	_fputc	;wreg free
  6824  003CA0                     
  6825                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6826  003CA0  4A18               	infsnz	pad@i^0,f,c
  6827  003CA2  2A19               	incf	(pad@i+1)^0,f,c
  6828  003CA4                     l3887:
  6829                           
  6830                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  6831  003CA4  501A               	movf	pad@w^0,w,c
  6832  003CA6  5C18               	subwf	pad@i^0,w,c
  6833  003CA8  5019               	movf	(pad@i+1)^0,w,c
  6834  003CAA  0A80               	xorlw	128
  6835  003CAC  6E17               	movwf	??_pad^0,c
  6836  003CAE  501B               	movf	(pad@w+1)^0,w,c
  6837  003CB0  0A80               	xorlw	128
  6838  003CB2  5817               	subwfb	??_pad^0,w,c
  6839  003CB4  A0D8               	btfss	status,0,c
  6840  003CB6  EF5F  F01E         	goto	u4131
  6841  003CBA  EF61  F01E         	goto	u4130
  6842  003CBE                     u4131:
  6843  003CBE  EF46  F01E         	goto	l3883
  6844  003CC2                     u4130:
  6845  003CC2                     
  6846                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(flags & 
      +                          (1 << 0))) {
  6847  003CC2  0100               	movlb	0	; () banked
  6848  003CC4  B1F0               	btfsc	_flags& (0+255),0,b
  6849  003CC6  EF67  F01E         	goto	u4141
  6850  003CCA  EF69  F01E         	goto	u4140
  6851  003CCE                     u4141:
  6852  003CCE  EF73  F01E         	goto	l3891
  6853  003CD2                     u4140:
  6854  003CD2                     
  6855                           ; BSR set to: 0
  6856                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs((con
      +                          st char *)buf, fp);
  6857  003CD2  C013  F00A         	movff	pad@buf,fputs@s
  6858  003CD6  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6859  003CDA  C011  F00C         	movff	pad@fp,fputs@fp
  6860  003CDE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6861  003CE2  EC02  F022         	call	_fputs	;wreg free
  6862  003CE6                     l3891:
  6863                           
  6864                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return strlen(
      +                          buf) + w;
  6865  003CE6  C013  F001         	movff	pad@buf,strlen@s
  6866  003CEA  C014  F002         	movff	pad@buf+1,strlen@s+1
  6867  003CEE  EC78  F022         	call	_strlen	;wreg free
  6868  003CF2  501A               	movf	pad@w^0,w,c
  6869  003CF4  2401               	addwf	?_strlen^0,w,c
  6870  003CF6  6E11               	movwf	?_pad^0,c
  6871  003CF8  501B               	movf	(pad@w+1)^0,w,c
  6872  003CFA  2002               	addwfc	(?_strlen+1)^0,w,c
  6873  003CFC  6E12               	movwf	(?_pad+1)^0,c
  6874  003CFE  0012               	return		;funcret
  6875  003D00                     __end_of_pad:
  6876                           	callstack 0
  6877                           
  6878 ;; *************** function _strlen *****************
  6879 ;; Defined at:
  6880 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strlen.c"
  6881 ;; Parameters:    Size  Location     Type
  6882 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6883 ;;		 -> dbuf(80), 
  6884 ;; Auto vars:     Size  Location     Type
  6885 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6886 ;;		 -> dbuf(80), 
  6887 ;; Return value:  Size  Location     Type
  6888 ;;                  2    0[COMRAM] unsigned int 
  6889 ;; Registers used:
  6890 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6891 ;; Tracked objects:
  6892 ;;		On entry : 0/0
  6893 ;;		On exit  : 0/0
  6894 ;;		Unchanged: 0/0
  6895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6896 ;;      Params:         2       0       0       0       0       0       0
  6897 ;;      Locals:         2       0       0       0       0       0       0
  6898 ;;      Temps:          0       0       0       0       0       0       0
  6899 ;;      Totals:         4       0       0       0       0       0       0
  6900 ;;Total ram usage:        4 bytes
  6901 ;; Hardware stack levels used:    1
  6902 ;; This function calls:
  6903 ;;		Nothing
  6904 ;; This function is called by:
  6905 ;;		_pad
  6906 ;; This function uses a non-reentrant model
  6907 ;;
  6908                           
  6909                           	psect	text15
  6910  0044F0                     __ptext15:
  6911                           	callstack 0
  6912  0044F0                     _strlen:
  6913                           	callstack 24
  6914  0044F0  C001  F003         	movff	strlen@s,strlen@a
  6915  0044F4  C002  F004         	movff	strlen@s+1,strlen@a+1
  6916  0044F8  EF80  F022         	goto	l3413
  6917  0044FC                     l3411:
  6918  0044FC  4A01               	infsnz	strlen@s^0,f,c
  6919  0044FE  2A02               	incf	(strlen@s+1)^0,f,c
  6920  004500                     l3413:
  6921  004500  C001  FFD9         	movff	strlen@s,fsr2l
  6922  004504  C002  FFDA         	movff	strlen@s+1,fsr2h
  6923  004508  50DF               	movf	indf2,w,c
  6924  00450A  A4D8               	btfss	status,2,c
  6925  00450C  EF8A  F022         	goto	u3381
  6926  004510  EF8C  F022         	goto	u3380
  6927  004514                     u3381:
  6928  004514  EF7E  F022         	goto	l3411
  6929  004518                     u3380:
  6930  004518  5003               	movf	strlen@a^0,w,c
  6931  00451A  5C01               	subwf	strlen@s^0,w,c
  6932  00451C  6E01               	movwf	?_strlen^0,c
  6933  00451E  5004               	movf	(strlen@a+1)^0,w,c
  6934  004520  5802               	subwfb	(strlen@s+1)^0,w,c
  6935  004522  6E02               	movwf	(?_strlen+1)^0,c
  6936  004524  0012               	return		;funcret
  6937  004526                     __end_of_strlen:
  6938                           	callstack 0
  6939                           
  6940 ;; *************** function _fputs *****************
  6941 ;; Defined at:
  6942 ;;		line 8 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  6943 ;; Parameters:    Size  Location     Type
  6944 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6945 ;;		 -> dbuf(80), 
  6946 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6947 ;;		 -> sprintf@f(6), 
  6948 ;; Auto vars:     Size  Location     Type
  6949 ;;  i               2   14[COMRAM] int 
  6950 ;;  c               1   13[COMRAM] unsigned char 
  6951 ;; Return value:  Size  Location     Type
  6952 ;;                  2    9[COMRAM] int 
  6953 ;; Registers used:
  6954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6955 ;; Tracked objects:
  6956 ;;		On entry : 0/0
  6957 ;;		On exit  : 0/0
  6958 ;;		Unchanged: 0/0
  6959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6960 ;;      Params:         4       0       0       0       0       0       0
  6961 ;;      Locals:         3       0       0       0       0       0       0
  6962 ;;      Temps:          0       0       0       0       0       0       0
  6963 ;;      Totals:         7       0       0       0       0       0       0
  6964 ;;Total ram usage:        7 bytes
  6965 ;; Hardware stack levels used:    1
  6966 ;; Hardware stack levels required when called:    2
  6967 ;; This function calls:
  6968 ;;		_fputc
  6969 ;; This function is called by:
  6970 ;;		_pad
  6971 ;; This function uses a non-reentrant model
  6972 ;;
  6973                           
  6974                           	psect	text16
  6975  004404                     __ptext16:
  6976                           	callstack 0
  6977  004404                     _fputs:
  6978                           	callstack 22
  6979  004404  0E00               	movlw	0
  6980  004406  6E10               	movwf	(fputs@i+1)^0,c
  6981  004408  0E00               	movlw	0
  6982  00440A  6E0F               	movwf	fputs@i^0,c
  6983  00440C  EF13  F022         	goto	l3407
  6984  004410                     l3403:
  6985  004410  C00E  F001         	movff	fputs@c,fputc@c
  6986  004414  6A02               	clrf	(fputc@c+1)^0,c
  6987  004416  C00C  F003         	movff	fputs@fp,fputc@fp
  6988  00441A  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6989  00441E  ECB8  F01D         	call	_fputc	;wreg free
  6990  004422  4A0F               	infsnz	fputs@i^0,f,c
  6991  004424  2A10               	incf	(fputs@i+1)^0,f,c
  6992  004426                     l3407:
  6993  004426  500F               	movf	fputs@i^0,w,c
  6994  004428  240A               	addwf	fputs@s^0,w,c
  6995  00442A  6ED9               	movwf	fsr2l,c
  6996  00442C  5010               	movf	(fputs@i+1)^0,w,c
  6997  00442E  200B               	addwfc	(fputs@s+1)^0,w,c
  6998  004430  6EDA               	movwf	fsr2h,c
  6999  004432  50DF               	movf	indf2,w,c
  7000  004434  6E0E               	movwf	fputs@c^0,c
  7001  004436  500E               	movf	fputs@c^0,w,c
  7002  004438  A4D8               	btfss	status,2,c
  7003  00443A  EF21  F022         	goto	u3371
  7004  00443E  EF23  F022         	goto	u3370
  7005  004442                     u3371:
  7006  004442  EF08  F022         	goto	l3403
  7007  004446                     u3370:
  7008  004446  0012               	return		;funcret
  7009  004448                     __end_of_fputs:
  7010                           	callstack 0
  7011                           
  7012 ;; *************** function _fputc *****************
  7013 ;; Defined at:
  7014 ;;		line 8 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  7015 ;; Parameters:    Size  Location     Type
  7016 ;;  c               2    0[COMRAM] int 
  7017 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7018 ;;		 -> sprintf@f(6), 
  7019 ;; Auto vars:     Size  Location     Type
  7020 ;;		None
  7021 ;; Return value:  Size  Location     Type
  7022 ;;                  2    0[COMRAM] int 
  7023 ;; Registers used:
  7024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7025 ;; Tracked objects:
  7026 ;;		On entry : 0/0
  7027 ;;		On exit  : 0/0
  7028 ;;		Unchanged: 0/0
  7029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7030 ;;      Params:         4       0       0       0       0       0       0
  7031 ;;      Locals:         0       0       0       0       0       0       0
  7032 ;;      Temps:          5       0       0       0       0       0       0
  7033 ;;      Totals:         9       0       0       0       0       0       0
  7034 ;;Total ram usage:        9 bytes
  7035 ;; Hardware stack levels used:    1
  7036 ;; Hardware stack levels required when called:    1
  7037 ;; This function calls:
  7038 ;;		_putch
  7039 ;; This function is called by:
  7040 ;;		_pad
  7041 ;;		_vfpfcnvrt
  7042 ;;		_fputs
  7043 ;; This function uses a non-reentrant model
  7044 ;;
  7045                           
  7046                           	psect	text17
  7047  003B70                     __ptext17:
  7048                           	callstack 0
  7049  003B70                     _fputc:
  7050                           	callstack 25
  7051  003B70  5003               	movf	fputc@fp^0,w,c
  7052  003B72  1004               	iorwf	(fputc@fp+1)^0,w,c
  7053  003B74  B4D8               	btfsc	status,2,c
  7054  003B76  EFBF  F01D         	goto	u2941
  7055  003B7A  EFC1  F01D         	goto	u2940
  7056  003B7E                     u2941:
  7057  003B7E  EFCA  F01D         	goto	l3189
  7058  003B82                     u2940:
  7059  003B82  5003               	movf	fputc@fp^0,w,c
  7060  003B84  1004               	iorwf	(fputc@fp+1)^0,w,c
  7061  003B86  A4D8               	btfss	status,2,c
  7062  003B88  EFC8  F01D         	goto	u2951
  7063  003B8C  EFCA  F01D         	goto	u2950
  7064  003B90                     u2951:
  7065  003B90  EFCF  F01D         	goto	l3191
  7066  003B94                     u2950:
  7067  003B94                     l3189:
  7068  003B94  5001               	movf	fputc@c^0,w,c
  7069  003B96  ECF7  F022         	call	_putch
  7070  003B9A  EF1C  F01E         	goto	l1164
  7071  003B9E                     l3191:
  7072  003B9E  EE20 F004          	lfsr	2,4
  7073  003BA2  5003               	movf	fputc@fp^0,w,c
  7074  003BA4  26D9               	addwf	fsr2l,f,c
  7075  003BA6  5004               	movf	(fputc@fp+1)^0,w,c
  7076  003BA8  22DA               	addwfc	fsr2h,f,c
  7077  003BAA  50DE               	movf	postinc2,w,c
  7078  003BAC  10DE               	iorwf	postinc2,w,c
  7079  003BAE  B4D8               	btfsc	status,2,c
  7080  003BB0  EFDC  F01D         	goto	u2961
  7081  003BB4  EFDE  F01D         	goto	u2960
  7082  003BB8                     u2961:
  7083  003BB8  EFF9  F01D         	goto	l3195
  7084  003BBC                     u2960:
  7085  003BBC  EE20 F004          	lfsr	2,4
  7086  003BC0  5003               	movf	fputc@fp^0,w,c
  7087  003BC2  26D9               	addwf	fsr2l,f,c
  7088  003BC4  5004               	movf	(fputc@fp+1)^0,w,c
  7089  003BC6  22DA               	addwfc	fsr2h,f,c
  7090  003BC8  EE10 F002          	lfsr	1,2
  7091  003BCC  5003               	movf	fputc@fp^0,w,c
  7092  003BCE  26E1               	addwf	fsr1l,f,c
  7093  003BD0  5004               	movf	(fputc@fp+1)^0,w,c
  7094  003BD2  22E2               	addwfc	fsr1h,f,c
  7095  003BD4  50DE               	movf	postinc2,w,c
  7096  003BD6  5CE6               	subwf	postinc1,w,c
  7097  003BD8  50E6               	movf	postinc1,w,c
  7098  003BDA  0A80               	xorlw	128
  7099  003BDC  6E09               	movwf	(??_fputc+4)^0,c
  7100  003BDE  50DE               	movf	postinc2,w,c
  7101  003BE0  0A80               	xorlw	128
  7102  003BE2  5809               	subwfb	(??_fputc+4)^0,w,c
  7103  003BE4  B0D8               	btfsc	status,0,c
  7104  003BE6  EFF7  F01D         	goto	u2971
  7105  003BEA  EFF9  F01D         	goto	u2970
  7106  003BEE                     u2971:
  7107  003BEE  EF1C  F01E         	goto	l1164
  7108  003BF2                     u2970:
  7109  003BF2                     l3195:
  7110  003BF2  EE20 F002          	lfsr	2,2
  7111  003BF6  5003               	movf	fputc@fp^0,w,c
  7112  003BF8  26D9               	addwf	fsr2l,f,c
  7113  003BFA  5004               	movf	(fputc@fp+1)^0,w,c
  7114  003BFC  22DA               	addwfc	fsr2h,f,c
  7115  003BFE  CFDE F005          	movff	postinc2,??_fputc
  7116  003C02  CFDD F006          	movff	postdec2,??_fputc+1
  7117  003C06  C003  FFD9         	movff	fputc@fp,fsr2l
  7118  003C0A  C004  FFDA         	movff	fputc@fp+1,fsr2h
  7119  003C0E  CFDE F007          	movff	postinc2,??_fputc+2
  7120  003C12  CFDD F008          	movff	postdec2,??_fputc+3
  7121  003C16  5005               	movf	??_fputc^0,w,c
  7122  003C18  2407               	addwf	(??_fputc+2)^0,w,c
  7123  003C1A  6ED9               	movwf	fsr2l,c
  7124  003C1C  5006               	movf	(??_fputc+1)^0,w,c
  7125  003C1E  2008               	addwfc	(??_fputc+3)^0,w,c
  7126  003C20  6EDA               	movwf	fsr2h,c
  7127  003C22  C001  FFDF         	movff	fputc@c,indf2
  7128  003C26  EE20 F002          	lfsr	2,2
  7129  003C2A  5003               	movf	fputc@fp^0,w,c
  7130  003C2C  26D9               	addwf	fsr2l,f,c
  7131  003C2E  5004               	movf	(fputc@fp+1)^0,w,c
  7132  003C30  22DA               	addwfc	fsr2h,f,c
  7133  003C32  2ADE               	incf	postinc2,f,c
  7134  003C34  0E00               	movlw	0
  7135  003C36  22DD               	addwfc	postdec2,f,c
  7136  003C38                     l1164:
  7137  003C38  0012               	return		;funcret
  7138  003C3A                     __end_of_fputc:
  7139                           	callstack 0
  7140                           
  7141 ;; *************** function _putch *****************
  7142 ;; Defined at:
  7143 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\putch.c"
  7144 ;; Parameters:    Size  Location     Type
  7145 ;;  c               1    wreg     unsigned char 
  7146 ;; Auto vars:     Size  Location     Type
  7147 ;;  c               1    0[COMRAM] unsigned char 
  7148 ;; Return value:  Size  Location     Type
  7149 ;;                  1    wreg      void 
  7150 ;; Registers used:
  7151 ;;		wreg
  7152 ;; Tracked objects:
  7153 ;;		On entry : 0/0
  7154 ;;		On exit  : 0/0
  7155 ;;		Unchanged: 0/0
  7156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7157 ;;      Params:         0       0       0       0       0       0       0
  7158 ;;      Locals:         0       0       0       0       0       0       0
  7159 ;;      Temps:          0       0       0       0       0       0       0
  7160 ;;      Totals:         0       0       0       0       0       0       0
  7161 ;;Total ram usage:        0 bytes
  7162 ;; Hardware stack levels used:    1
  7163 ;; This function calls:
  7164 ;;		Nothing
  7165 ;; This function is called by:
  7166 ;;		_fputc
  7167 ;; This function uses a non-reentrant model
  7168 ;;
  7169                           
  7170                           	psect	text18
  7171  0045EE                     __ptext18:
  7172                           	callstack 0
  7173  0045EE                     _putch:
  7174                           	callstack 25
  7175  0045EE  0012               	return		;funcret
  7176  0045F0                     __end_of_putch:
  7177                           	callstack 0
  7178                           
  7179 ;; *************** function _floorf *****************
  7180 ;; Defined at:
  7181 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\floorf.c"
  7182 ;; Parameters:    Size  Location     Type
  7183 ;;  x               4   80[COMRAM] float 
  7184 ;; Auto vars:     Size  Location     Type
  7185 ;;  u               4   96[COMRAM] struct .
  7186 ;;  m               4   90[COMRAM] unsigned long 
  7187 ;;  e               2   94[COMRAM] int 
  7188 ;; Return value:  Size  Location     Type
  7189 ;;                  4   80[COMRAM] float 
  7190 ;; Registers used:
  7191 ;;		wreg, status,2, status,0
  7192 ;; Tracked objects:
  7193 ;;		On entry : 0/0
  7194 ;;		On exit  : 0/0
  7195 ;;		Unchanged: 0/0
  7196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7197 ;;      Params:         4       0       0       0       0       0       0
  7198 ;;      Locals:        10       0       0       0       0       0       0
  7199 ;;      Temps:          6       0       0       0       0       0       0
  7200 ;;      Totals:        20       0       0       0       0       0       0
  7201 ;;Total ram usage:       20 bytes
  7202 ;; Hardware stack levels used:    1
  7203 ;; This function calls:
  7204 ;;		Nothing
  7205 ;; This function is called by:
  7206 ;;		_efgtoa
  7207 ;; This function uses a non-reentrant model
  7208 ;;
  7209                           
  7210                           	psect	text19
  7211  002E2E                     __ptext19:
  7212                           	callstack 0
  7213  002E2E                     _floorf:
  7214                           	callstack 25
  7215  002E2E  C100  F061         	movff	floorf@F524,floorf@u
  7216  002E32  C101  F062         	movff	floorf@F524+1,floorf@u+1
  7217  002E36  C102  F063         	movff	floorf@F524+2,floorf@u+2
  7218  002E3A  C103  F064         	movff	floorf@F524+3,floorf@u+3
  7219  002E3E  C051  F061         	movff	floorf@x,floorf@u
  7220  002E42  C052  F062         	movff	floorf@x+1,floorf@u+1
  7221  002E46  C053  F063         	movff	floorf@x+2,floorf@u+2
  7222  002E4A  C054  F064         	movff	floorf@x+3,floorf@u+3
  7223  002E4E  0E81               	movlw	129
  7224  002E50  6E55               	movwf	??_floorf^0,c
  7225  002E52  0EFF               	movlw	255
  7226  002E54  6E56               	movwf	(??_floorf+1)^0,c
  7227  002E56  C061  F057         	movff	floorf@u,??_floorf+2
  7228  002E5A  C062  F058         	movff	floorf@u+1,??_floorf+3
  7229  002E5E  C063  F059         	movff	floorf@u+2,??_floorf+4
  7230  002E62  C064  F05A         	movff	floorf@u+3,??_floorf+5
  7231  002E66  0E18               	movlw	24
  7232  002E68  EF3B  F017         	goto	u4270
  7233  002E6C                     u4275:
  7234  002E6C  90D8               	bcf	status,0,c
  7235  002E6E  325A               	rrcf	(??_floorf+5)^0,f,c
  7236  002E70  3259               	rrcf	(??_floorf+4)^0,f,c
  7237  002E72  3258               	rrcf	(??_floorf+3)^0,f,c
  7238  002E74  3257               	rrcf	(??_floorf+2)^0,f,c
  7239  002E76                     u4270:
  7240  002E76  2EE8               	decfsz	wreg,f,c
  7241  002E78  EF36  F017         	goto	u4275
  7242  002E7C  5057               	movf	(??_floorf+2)^0,w,c
  7243  002E7E  2455               	addwf	??_floorf^0,w,c
  7244  002E80  6E5F               	movwf	floorf@e^0,c
  7245  002E82  0E00               	movlw	0
  7246  002E84  2056               	addwfc	(??_floorf+1)^0,w,c
  7247  002E86  6E60               	movwf	(floorf@e+1)^0,c
  7248  002E88  BE60               	btfsc	(floorf@e+1)^0,7,c
  7249  002E8A  EF50  F017         	goto	u4281
  7250  002E8E  5060               	movf	(floorf@e+1)^0,w,c
  7251  002E90  E109               	bnz	u4280
  7252  002E92  0E17               	movlw	23
  7253  002E94  5C5F               	subwf	floorf@e^0,w,c
  7254  002E96  A0D8               	btfss	status,0,c
  7255  002E98  EF50  F017         	goto	u4281
  7256  002E9C  EF52  F017         	goto	u4280
  7257  002EA0                     u4281:
  7258  002EA0  EF5C  F017         	goto	l3937
  7259  002EA4                     u4280:
  7260  002EA4                     l3935:
  7261  002EA4  C051  F051         	movff	floorf@x,?_floorf
  7262  002EA8  C052  F052         	movff	floorf@x+1,?_floorf+1
  7263  002EAC  C053  F053         	movff	floorf@x+2,?_floorf+2
  7264  002EB0  C054  F054         	movff	floorf@x+3,?_floorf+3
  7265  002EB4  EF1F  F018         	goto	l1125
  7266  002EB8                     l3937:
  7267  002EB8  BE60               	btfsc	(floorf@e+1)^0,7,c
  7268  002EBA  EF61  F017         	goto	u4291
  7269  002EBE  EF63  F017         	goto	u4290
  7270  002EC2                     u4291:
  7271  002EC2  EFD3  F017         	goto	l3947
  7272  002EC6                     u4290:
  7273  002EC6  C05F  F055         	movff	floorf@e,??_floorf
  7274  002ECA  0EFF               	movlw	255
  7275  002ECC  6E56               	movwf	(??_floorf+1)^0,c
  7276  002ECE  0EFF               	movlw	255
  7277  002ED0  6E57               	movwf	(??_floorf+2)^0,c
  7278  002ED2  0E7F               	movlw	127
  7279  002ED4  6E58               	movwf	(??_floorf+3)^0,c
  7280  002ED6  0E00               	movlw	0
  7281  002ED8  6E59               	movwf	(??_floorf+4)^0,c
  7282  002EDA                     u4305:
  7283  002EDA  6655               	tstfsz	??_floorf^0,c
  7284  002EDC  EF72  F017         	goto	u4306
  7285  002EE0  EF7A  F017         	goto	u4307
  7286  002EE4                     u4306:
  7287  002EE4  3459               	rlcf	(??_floorf+4)^0,w,c
  7288  002EE6  3259               	rrcf	(??_floorf+4)^0,f,c
  7289  002EE8  3258               	rrcf	(??_floorf+3)^0,f,c
  7290  002EEA  3257               	rrcf	(??_floorf+2)^0,f,c
  7291  002EEC  3256               	rrcf	(??_floorf+1)^0,f,c
  7292  002EEE  2E55               	decfsz	??_floorf^0,f,c
  7293  002EF0  EF6D  F017         	goto	u4305
  7294  002EF4                     u4307:
  7295  002EF4  C056  F05B         	movff	??_floorf+1,floorf@m
  7296  002EF8  C057  F05C         	movff	??_floorf+2,floorf@m+1
  7297  002EFC  C058  F05D         	movff	??_floorf+3,floorf@m+2
  7298  002F00  C059  F05E         	movff	??_floorf+4,floorf@m+3
  7299  002F04  505B               	movf	floorf@m^0,w,c
  7300  002F06  1461               	andwf	floorf@u^0,w,c
  7301  002F08  6E55               	movwf	??_floorf^0,c
  7302  002F0A  505C               	movf	(floorf@m+1)^0,w,c
  7303  002F0C  1462               	andwf	(floorf@u+1)^0,w,c
  7304  002F0E  6E56               	movwf	(??_floorf+1)^0,c
  7305  002F10  505D               	movf	(floorf@m+2)^0,w,c
  7306  002F12  1463               	andwf	(floorf@u+2)^0,w,c
  7307  002F14  6E57               	movwf	(??_floorf+2)^0,c
  7308  002F16  505E               	movf	(floorf@m+3)^0,w,c
  7309  002F18  1464               	andwf	(floorf@u+3)^0,w,c
  7310  002F1A  6E58               	movwf	(??_floorf+3)^0,c
  7311  002F1C  5055               	movf	??_floorf^0,w,c
  7312  002F1E  1056               	iorwf	(??_floorf+1)^0,w,c
  7313  002F20  1057               	iorwf	(??_floorf+2)^0,w,c
  7314  002F22  1058               	iorwf	(??_floorf+3)^0,w,c
  7315  002F24  A4D8               	btfss	status,2,c
  7316  002F26  EF97  F017         	goto	u4311
  7317  002F2A  EF99  F017         	goto	u4310
  7318  002F2E                     u4311:
  7319  002F2E  EF9B  F017         	goto	l3943
  7320  002F32                     u4310:
  7321  002F32  EF52  F017         	goto	l3935
  7322  002F36                     l3943:
  7323  002F36  C061  F055         	movff	floorf@u,??_floorf
  7324  002F3A  C062  F056         	movff	floorf@u+1,??_floorf+1
  7325  002F3E  C063  F057         	movff	floorf@u+2,??_floorf+2
  7326  002F42  C064  F058         	movff	floorf@u+3,??_floorf+3
  7327  002F46  0E20               	movlw	32
  7328  002F48  EFAB  F017         	goto	u4320
  7329  002F4C                     u4325:
  7330  002F4C  90D8               	bcf	status,0,c
  7331  002F4E  3258               	rrcf	(??_floorf+3)^0,f,c
  7332  002F50  3257               	rrcf	(??_floorf+2)^0,f,c
  7333  002F52  3256               	rrcf	(??_floorf+1)^0,f,c
  7334  002F54  3255               	rrcf	??_floorf^0,f,c
  7335  002F56                     u4320:
  7336  002F56  2EE8               	decfsz	wreg,f,c
  7337  002F58  EFA6  F017         	goto	u4325
  7338  002F5C  5055               	movf	??_floorf^0,w,c
  7339  002F5E  1056               	iorwf	(??_floorf+1)^0,w,c
  7340  002F60  1057               	iorwf	(??_floorf+2)^0,w,c
  7341  002F62  1058               	iorwf	(??_floorf+3)^0,w,c
  7342  002F64  B4D8               	btfsc	status,2,c
  7343  002F66  EFB7  F017         	goto	u4331
  7344  002F6A  EFB9  F017         	goto	u4330
  7345  002F6E                     u4331:
  7346  002F6E  EFC1  F017         	goto	l1128
  7347  002F72                     u4330:
  7348  002F72  505B               	movf	floorf@m^0,w,c
  7349  002F74  2661               	addwf	floorf@u^0,f,c
  7350  002F76  505C               	movf	(floorf@m+1)^0,w,c
  7351  002F78  2262               	addwfc	(floorf@u+1)^0,f,c
  7352  002F7A  505D               	movf	(floorf@m+2)^0,w,c
  7353  002F7C  2263               	addwfc	(floorf@u+2)^0,f,c
  7354  002F7E  505E               	movf	(floorf@m+3)^0,w,c
  7355  002F80  2264               	addwfc	(floorf@u+3)^0,f,c
  7356  002F82                     l1128:
  7357  002F82  1C5B               	comf	floorf@m^0,w,c
  7358  002F84  6E55               	movwf	??_floorf^0,c
  7359  002F86  1C5C               	comf	(floorf@m+1)^0,w,c
  7360  002F88  6E56               	movwf	(??_floorf+1)^0,c
  7361  002F8A  1C5D               	comf	(floorf@m+2)^0,w,c
  7362  002F8C  6E57               	movwf	(??_floorf+2)^0,c
  7363  002F8E  1C5E               	comf	(floorf@m+3)^0,w,c
  7364  002F90  6E58               	movwf	(??_floorf+3)^0,c
  7365  002F92  5055               	movf	??_floorf^0,w,c
  7366  002F94  1661               	andwf	floorf@u^0,f,c
  7367  002F96  5056               	movf	(??_floorf+1)^0,w,c
  7368  002F98  1662               	andwf	(floorf@u+1)^0,f,c
  7369  002F9A  5057               	movf	(??_floorf+2)^0,w,c
  7370  002F9C  1663               	andwf	(floorf@u+2)^0,f,c
  7371  002F9E  5058               	movf	(??_floorf+3)^0,w,c
  7372  002FA0  1664               	andwf	(floorf@u+3)^0,f,c
  7373  002FA2  EF17  F018         	goto	l3955
  7374  002FA6                     l3947:
  7375  002FA6  C061  F055         	movff	floorf@u,??_floorf
  7376  002FAA  C062  F056         	movff	floorf@u+1,??_floorf+1
  7377  002FAE  C063  F057         	movff	floorf@u+2,??_floorf+2
  7378  002FB2  C064  F058         	movff	floorf@u+3,??_floorf+3
  7379  002FB6  0E20               	movlw	32
  7380  002FB8  EFE3  F017         	goto	u4340
  7381  002FBC                     u4345:
  7382  002FBC  90D8               	bcf	status,0,c
  7383  002FBE  3258               	rrcf	(??_floorf+3)^0,f,c
  7384  002FC0  3257               	rrcf	(??_floorf+2)^0,f,c
  7385  002FC2  3256               	rrcf	(??_floorf+1)^0,f,c
  7386  002FC4  3255               	rrcf	??_floorf^0,f,c
  7387  002FC6                     u4340:
  7388  002FC6  2EE8               	decfsz	wreg,f,c
  7389  002FC8  EFDE  F017         	goto	u4345
  7390  002FCC  5055               	movf	??_floorf^0,w,c
  7391  002FCE  1056               	iorwf	(??_floorf+1)^0,w,c
  7392  002FD0  1057               	iorwf	(??_floorf+2)^0,w,c
  7393  002FD2  1058               	iorwf	(??_floorf+3)^0,w,c
  7394  002FD4  A4D8               	btfss	status,2,c
  7395  002FD6  EFEF  F017         	goto	u4351
  7396  002FDA  EFF1  F017         	goto	u4350
  7397  002FDE                     u4351:
  7398  002FDE  EFFB  F017         	goto	l3951
  7399  002FE2                     u4350:
  7400  002FE2  0E00               	movlw	0
  7401  002FE4  6E61               	movwf	floorf@u^0,c
  7402  002FE6  0E00               	movlw	0
  7403  002FE8  6E62               	movwf	(floorf@u+1)^0,c
  7404  002FEA  0E00               	movlw	0
  7405  002FEC  6E63               	movwf	(floorf@u+2)^0,c
  7406  002FEE  0E00               	movlw	0
  7407  002FF0  6E64               	movwf	(floorf@u+3)^0,c
  7408  002FF2  EF17  F018         	goto	l3955
  7409  002FF6                     l3951:
  7410  002FF6  90D8               	bcf	status,0,c
  7411  002FF8  3461               	rlcf	floorf@u^0,w,c
  7412  002FFA  6E55               	movwf	??_floorf^0,c
  7413  002FFC  3462               	rlcf	(floorf@u+1)^0,w,c
  7414  002FFE  6E56               	movwf	(??_floorf+1)^0,c
  7415  003000  3463               	rlcf	(floorf@u+2)^0,w,c
  7416  003002  6E57               	movwf	(??_floorf+2)^0,c
  7417  003004  3464               	rlcf	(floorf@u+3)^0,w,c
  7418  003006  6E58               	movwf	(??_floorf+3)^0,c
  7419  003008  5055               	movf	??_floorf^0,w,c
  7420  00300A  1056               	iorwf	(??_floorf+1)^0,w,c
  7421  00300C  1057               	iorwf	(??_floorf+2)^0,w,c
  7422  00300E  1058               	iorwf	(??_floorf+3)^0,w,c
  7423  003010  B4D8               	btfsc	status,2,c
  7424  003012  EF0D  F018         	goto	u4361
  7425  003016  EF0F  F018         	goto	u4360
  7426  00301A                     u4361:
  7427  00301A  EF17  F018         	goto	l3955
  7428  00301E                     u4360:
  7429  00301E  0E00               	movlw	0
  7430  003020  6E61               	movwf	floorf@u^0,c
  7431  003022  0E00               	movlw	0
  7432  003024  6E62               	movwf	(floorf@u+1)^0,c
  7433  003026  0E80               	movlw	128
  7434  003028  6E63               	movwf	(floorf@u+2)^0,c
  7435  00302A  0EBF               	movlw	191
  7436  00302C  6E64               	movwf	(floorf@u+3)^0,c
  7437  00302E                     l3955:
  7438  00302E  C061  F051         	movff	floorf@u,?_floorf
  7439  003032  C062  F052         	movff	floorf@u+1,?_floorf+1
  7440  003036  C063  F053         	movff	floorf@u+2,?_floorf+2
  7441  00303A  C064  F054         	movff	floorf@u+3,?_floorf+3
  7442  00303E                     l1125:
  7443  00303E  0012               	return		;funcret
  7444  003040                     __end_of_floorf:
  7445                           	callstack 0
  7446                           
  7447 ;; *************** function ___fpclassifyf *****************
  7448 ;; Defined at:
  7449 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  7450 ;; Parameters:    Size  Location     Type
  7451 ;;  x               4    0[COMRAM] float 
  7452 ;; Auto vars:     Size  Location     Type
  7453 ;;  u               4   10[COMRAM] struct .
  7454 ;;  e               2    8[COMRAM] int 
  7455 ;; Return value:  Size  Location     Type
  7456 ;;                  2    0[COMRAM] int 
  7457 ;; Registers used:
  7458 ;;		wreg, status,2, status,0
  7459 ;; Tracked objects:
  7460 ;;		On entry : 0/0
  7461 ;;		On exit  : 0/0
  7462 ;;		Unchanged: 0/0
  7463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7464 ;;      Params:         4       0       0       0       0       0       0
  7465 ;;      Locals:         6       0       0       0       0       0       0
  7466 ;;      Temps:          4       0       0       0       0       0       0
  7467 ;;      Totals:        14       0       0       0       0       0       0
  7468 ;;Total ram usage:       14 bytes
  7469 ;; Hardware stack levels used:    1
  7470 ;; This function calls:
  7471 ;;		Nothing
  7472 ;; This function is called by:
  7473 ;;		_efgtoa
  7474 ;; This function uses a non-reentrant model
  7475 ;;
  7476                           
  7477                           	psect	text20
  7478  0038C2                     __ptext20:
  7479                           	callstack 0
  7480  0038C2                     ___fpclassifyf:
  7481                           	callstack 25
  7482  0038C2  C104  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  7483  0038C6  C105  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  7484  0038CA  C106  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  7485  0038CE  C107  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  7486  0038D2  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  7487  0038D6  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  7488  0038DA  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  7489  0038DE  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  7490  0038E2  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  7491  0038E6  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7492  0038EA  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7493  0038EE  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7494  0038F2  0E18               	movlw	24
  7495  0038F4  EF81  F01C         	goto	u4150
  7496  0038F8                     u4155:
  7497  0038F8  90D8               	bcf	status,0,c
  7498  0038FA  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  7499  0038FC  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  7500  0038FE  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  7501  003900  3205               	rrcf	??___fpclassifyf^0,f,c
  7502  003902                     u4150:
  7503  003902  2EE8               	decfsz	wreg,f,c
  7504  003904  EF7C  F01C         	goto	u4155
  7505  003908  5005               	movf	??___fpclassifyf^0,w,c
  7506  00390A  6E09               	movwf	___fpclassifyf@e^0,c
  7507  00390C  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  7508  00390E  5009               	movf	___fpclassifyf@e^0,w,c
  7509  003910  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7510  003912  A4D8               	btfss	status,2,c
  7511  003914  EF8E  F01C         	goto	u4161
  7512  003918  EF90  F01C         	goto	u4160
  7513  00391C                     u4161:
  7514  00391C  EFB0  F01C         	goto	l3907
  7515  003920                     u4160:
  7516  003920  90D8               	bcf	status,0,c
  7517  003922  340B               	rlcf	___fpclassifyf@u^0,w,c
  7518  003924  6E05               	movwf	??___fpclassifyf^0,c
  7519  003926  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  7520  003928  6E06               	movwf	(??___fpclassifyf+1)^0,c
  7521  00392A  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  7522  00392C  6E07               	movwf	(??___fpclassifyf+2)^0,c
  7523  00392E  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  7524  003930  6E08               	movwf	(??___fpclassifyf+3)^0,c
  7525  003932  5005               	movf	??___fpclassifyf^0,w,c
  7526  003934  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  7527  003936  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  7528  003938  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  7529  00393A  A4D8               	btfss	status,2,c
  7530  00393C  EFA2  F01C         	goto	u4171
  7531  003940  EFA4  F01C         	goto	u4170
  7532  003944                     u4171:
  7533  003944  EFAA  F01C         	goto	l3903
  7534  003948                     u4170:
  7535  003948  0E00               	movlw	0
  7536  00394A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7537  00394C  0E02               	movlw	2
  7538  00394E  6E01               	movwf	?___fpclassifyf^0,c
  7539  003950  EFDF  F01C         	goto	l1087
  7540  003954                     l3903:
  7541  003954  0E00               	movlw	0
  7542  003956  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7543  003958  0E03               	movlw	3
  7544  00395A  6E01               	movwf	?___fpclassifyf^0,c
  7545  00395C  EFDF  F01C         	goto	l1087
  7546  003960                     l3907:
  7547  003960  2809               	incf	___fpclassifyf@e^0,w,c
  7548  003962  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7549  003964  A4D8               	btfss	status,2,c
  7550  003966  EFB7  F01C         	goto	u4181
  7551  00396A  EFB9  F01C         	goto	u4180
  7552  00396E                     u4181:
  7553  00396E  EFDB  F01C         	goto	l3913
  7554  003972                     u4180:
  7555  003972  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  7556  003976  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7557  00397A  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7558  00397E  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7559  003982  0E09               	movlw	9
  7560  003984                     u4195:
  7561  003984  90D8               	bcf	status,0,c
  7562  003986  3605               	rlcf	??___fpclassifyf^0,f,c
  7563  003988  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  7564  00398A  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  7565  00398C  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  7566  00398E  2EE8               	decfsz	wreg,f,c
  7567  003990  EFC2  F01C         	goto	u4195
  7568  003994  5005               	movf	??___fpclassifyf^0,w,c
  7569  003996  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  7570  003998  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  7571  00399A  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  7572  00399C  B4D8               	btfsc	status,2,c
  7573  00399E  EFD3  F01C         	goto	u4201
  7574  0039A2  EFD6  F01C         	goto	u4200
  7575  0039A6                     u4201:
  7576  0039A6  0E01               	movlw	1
  7577  0039A8  EFD7  F01C         	goto	u4210
  7578  0039AC                     u4200:
  7579  0039AC  0E00               	movlw	0
  7580  0039AE                     u4210:
  7581  0039AE  6E01               	movwf	?___fpclassifyf^0,c
  7582  0039B0  6A02               	clrf	(?___fpclassifyf+1)^0,c
  7583  0039B2  EFDF  F01C         	goto	l1087
  7584  0039B6                     l3913:
  7585  0039B6  0E00               	movlw	0
  7586  0039B8  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7587  0039BA  0E04               	movlw	4
  7588  0039BC  6E01               	movwf	?___fpclassifyf^0,c
  7589  0039BE                     l1087:
  7590  0039BE  0012               	return		;funcret
  7591  0039C0                     __end_of___fpclassifyf:
  7592                           	callstack 0
  7593                           
  7594 ;; *************** function ___fltol *****************
  7595 ;; Defined at:
  7596 ;;		line 43 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\fltol.c"
  7597 ;; Parameters:    Size  Location     Type
  7598 ;;  f1              4   39[COMRAM] int 
  7599 ;; Auto vars:     Size  Location     Type
  7600 ;;  exp1            1   48[COMRAM] unsigned char 
  7601 ;;  sign1           1   47[COMRAM] unsigned char 
  7602 ;; Return value:  Size  Location     Type
  7603 ;;                  4   39[COMRAM] long 
  7604 ;; Registers used:
  7605 ;;		wreg, status,2, status,0
  7606 ;; Tracked objects:
  7607 ;;		On entry : 0/0
  7608 ;;		On exit  : 0/0
  7609 ;;		Unchanged: 0/0
  7610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7611 ;;      Params:         4       0       0       0       0       0       0
  7612 ;;      Locals:         2       0       0       0       0       0       0
  7613 ;;      Temps:          4       0       0       0       0       0       0
  7614 ;;      Totals:        10       0       0       0       0       0       0
  7615 ;;Total ram usage:       10 bytes
  7616 ;; Hardware stack levels used:    1
  7617 ;; This function calls:
  7618 ;;		Nothing
  7619 ;; This function is called by:
  7620 ;;		_encher_tanque
  7621 ;;		_esvaziar_tanque
  7622 ;;		_efgtoa
  7623 ;; This function uses a non-reentrant model
  7624 ;;
  7625                           
  7626                           	psect	text21
  7627  0036B8                     __ptext21:
  7628                           	callstack 0
  7629  0036B8                     ___fltol:
  7630                           	callstack 25
  7631  0036B8  342A               	rlcf	(___fltol@f1+2)^0,w,c
  7632  0036BA  342B               	rlcf	(___fltol@f1+3)^0,w,c
  7633  0036BC  6E31               	movwf	___fltol@exp1^0,c
  7634  0036BE  5031               	movf	___fltol@exp1^0,w,c
  7635  0036C0  A4D8               	btfss	status,2,c
  7636  0036C2  EF65  F01B         	goto	u4041
  7637  0036C6  EF67  F01B         	goto	u4040
  7638  0036CA                     u4041:
  7639  0036CA  EF71  F01B         	goto	l3835
  7640  0036CE                     u4040:
  7641  0036CE                     l3831:
  7642  0036CE  0E00               	movlw	0
  7643  0036D0  6E28               	movwf	?___fltol^0,c
  7644  0036D2  0E00               	movlw	0
  7645  0036D4  6E29               	movwf	(?___fltol+1)^0,c
  7646  0036D6  0E00               	movlw	0
  7647  0036D8  6E2A               	movwf	(?___fltol+2)^0,c
  7648  0036DA  0E00               	movlw	0
  7649  0036DC  6E2B               	movwf	(?___fltol+3)^0,c
  7650  0036DE  EFDE  F01B         	goto	l528
  7651  0036E2                     l3835:
  7652  0036E2  C028  F02C         	movff	___fltol@f1,??___fltol
  7653  0036E6  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  7654  0036EA  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  7655  0036EE  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  7656  0036F2  0E20               	movlw	32
  7657  0036F4  EF81  F01B         	goto	u4050
  7658  0036F8                     u4055:
  7659  0036F8  90D8               	bcf	status,0,c
  7660  0036FA  322F               	rrcf	(??___fltol+3)^0,f,c
  7661  0036FC  322E               	rrcf	(??___fltol+2)^0,f,c
  7662  0036FE  322D               	rrcf	(??___fltol+1)^0,f,c
  7663  003700  322C               	rrcf	??___fltol^0,f,c
  7664  003702                     u4050:
  7665  003702  2EE8               	decfsz	wreg,f,c
  7666  003704  EF7C  F01B         	goto	u4055
  7667  003708  502C               	movf	??___fltol^0,w,c
  7668  00370A  6E30               	movwf	___fltol@sign1^0,c
  7669  00370C  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  7670  00370E  0EFF               	movlw	255
  7671  003710  1628               	andwf	___fltol@f1^0,f,c
  7672  003712  0EFF               	movlw	255
  7673  003714  1629               	andwf	(___fltol@f1+1)^0,f,c
  7674  003716  0EFF               	movlw	255
  7675  003718  162A               	andwf	(___fltol@f1+2)^0,f,c
  7676  00371A  0E00               	movlw	0
  7677  00371C  162B               	andwf	(___fltol@f1+3)^0,f,c
  7678  00371E  0E96               	movlw	150
  7679  003720  5E31               	subwf	___fltol@exp1^0,f,c
  7680  003722  BE31               	btfsc	___fltol@exp1^0,7,c
  7681  003724  EF98  F01B         	goto	u4060
  7682  003728  EF96  F01B         	goto	u4061
  7683  00372C                     u4061:
  7684  00372C  EFAE  F01B         	goto	l3855
  7685  003730                     u4060:
  7686  003730  5031               	movf	___fltol@exp1^0,w,c
  7687  003732  0A80               	xorlw	128
  7688  003734  0F97               	addlw	151
  7689  003736  B0D8               	btfsc	status,0,c
  7690  003738  EFA0  F01B         	goto	u4071
  7691  00373C  EFA2  F01B         	goto	u4070
  7692  003740                     u4071:
  7693  003740  EFA4  F01B         	goto	l3851
  7694  003744                     u4070:
  7695  003744  EF67  F01B         	goto	l3831
  7696  003748                     l3851:
  7697  003748  90D8               	bcf	status,0,c
  7698  00374A  322B               	rrcf	(___fltol@f1+3)^0,f,c
  7699  00374C  322A               	rrcf	(___fltol@f1+2)^0,f,c
  7700  00374E  3229               	rrcf	(___fltol@f1+1)^0,f,c
  7701  003750  3228               	rrcf	___fltol@f1^0,f,c
  7702  003752  3E31               	incfsz	___fltol@exp1^0,f,c
  7703  003754  EFA4  F01B         	goto	l3851
  7704  003758  EFC6  F01B         	goto	l3865
  7705  00375C                     l3855:
  7706  00375C  0E1F               	movlw	31
  7707  00375E  6431               	cpfsgt	___fltol@exp1^0,c
  7708  003760  EFB4  F01B         	goto	u4081
  7709  003764  EFB6  F01B         	goto	u4080
  7710  003768                     u4081:
  7711  003768  EFBE  F01B         	goto	l3863
  7712  00376C                     u4080:
  7713  00376C  EF67  F01B         	goto	l3831
  7714  003770                     l3861:
  7715  003770  90D8               	bcf	status,0,c
  7716  003772  3628               	rlcf	___fltol@f1^0,f,c
  7717  003774  3629               	rlcf	(___fltol@f1+1)^0,f,c
  7718  003776  362A               	rlcf	(___fltol@f1+2)^0,f,c
  7719  003778  362B               	rlcf	(___fltol@f1+3)^0,f,c
  7720  00377A  0631               	decf	___fltol@exp1^0,f,c
  7721  00377C                     l3863:
  7722  00377C  5031               	movf	___fltol@exp1^0,w,c
  7723  00377E  A4D8               	btfss	status,2,c
  7724  003780  EFC4  F01B         	goto	u4091
  7725  003784  EFC6  F01B         	goto	u4090
  7726  003788                     u4091:
  7727  003788  EFB8  F01B         	goto	l3861
  7728  00378C                     u4090:
  7729  00378C                     l3865:
  7730  00378C  5030               	movf	___fltol@sign1^0,w,c
  7731  00378E  B4D8               	btfsc	status,2,c
  7732  003790  EFCC  F01B         	goto	u4101
  7733  003794  EFCE  F01B         	goto	u4100
  7734  003798                     u4101:
  7735  003798  EFD6  F01B         	goto	l3869
  7736  00379C                     u4100:
  7737  00379C  1E2B               	comf	(___fltol@f1+3)^0,f,c
  7738  00379E  1E2A               	comf	(___fltol@f1+2)^0,f,c
  7739  0037A0  1E29               	comf	(___fltol@f1+1)^0,f,c
  7740  0037A2  6C28               	negf	___fltol@f1^0,c
  7741  0037A4  0E00               	movlw	0
  7742  0037A6  2229               	addwfc	(___fltol@f1+1)^0,f,c
  7743  0037A8  222A               	addwfc	(___fltol@f1+2)^0,f,c
  7744  0037AA  222B               	addwfc	(___fltol@f1+3)^0,f,c
  7745  0037AC                     l3869:
  7746  0037AC  C028  F028         	movff	___fltol@f1,?___fltol
  7747  0037B0  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  7748  0037B4  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  7749  0037B8  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  7750  0037BC                     l528:
  7751  0037BC  0012               	return		;funcret
  7752  0037BE                     __end_of___fltol:
  7753                           	callstack 0
  7754                           
  7755 ;; *************** function ___flsub *****************
  7756 ;; Defined at:
  7757 ;;		line 245 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  7758 ;; Parameters:    Size  Location     Type
  7759 ;;  b               4   55[COMRAM] long 
  7760 ;;  a               4   59[COMRAM] long 
  7761 ;; Auto vars:     Size  Location     Type
  7762 ;;		None
  7763 ;; Return value:  Size  Location     Type
  7764 ;;                  4   55[COMRAM] long 
  7765 ;; Registers used:
  7766 ;;		wreg, status,2, status,0, cstack
  7767 ;; Tracked objects:
  7768 ;;		On entry : 0/0
  7769 ;;		On exit  : 0/0
  7770 ;;		Unchanged: 0/0
  7771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7772 ;;      Params:         8       0       0       0       0       0       0
  7773 ;;      Locals:         0       0       0       0       0       0       0
  7774 ;;      Temps:          0       0       0       0       0       0       0
  7775 ;;      Totals:         8       0       0       0       0       0       0
  7776 ;;Total ram usage:        8 bytes
  7777 ;; Hardware stack levels used:    1
  7778 ;; Hardware stack levels required when called:    1
  7779 ;; This function calls:
  7780 ;;		___fladd
  7781 ;; This function is called by:
  7782 ;;		_esvaziar_tanque
  7783 ;;		_efgtoa
  7784 ;; This function uses a non-reentrant model
  7785 ;;
  7786                           
  7787                           	psect	text22
  7788  0043BE                     __ptext22:
  7789                           	callstack 0
  7790  0043BE                     ___flsub:
  7791                           	callstack 24
  7792  0043BE  0E00               	movlw	0
  7793  0043C0  1A3C               	xorwf	___flsub@a^0,f,c
  7794  0043C2  0E00               	movlw	0
  7795  0043C4  1A3D               	xorwf	(___flsub@a+1)^0,f,c
  7796  0043C6  0E00               	movlw	0
  7797  0043C8  1A3E               	xorwf	(___flsub@a+2)^0,f,c
  7798  0043CA  0E80               	movlw	128
  7799  0043CC  1A3F               	xorwf	(___flsub@a+3)^0,f,c
  7800  0043CE  C038  F028         	movff	___flsub@b,___fladd@b
  7801  0043D2  C039  F029         	movff	___flsub@b+1,___fladd@b+1
  7802  0043D6  C03A  F02A         	movff	___flsub@b+2,___fladd@b+2
  7803  0043DA  C03B  F02B         	movff	___flsub@b+3,___fladd@b+3
  7804  0043DE  C03C  F02C         	movff	___flsub@a,___fladd@a
  7805  0043E2  C03D  F02D         	movff	___flsub@a+1,___fladd@a+1
  7806  0043E6  C03E  F02E         	movff	___flsub@a+2,___fladd@a+2
  7807  0043EA  C03F  F02F         	movff	___flsub@a+3,___fladd@a+3
  7808  0043EE  ECA0  F00E         	call	___fladd	;wreg free
  7809  0043F2  C028  F038         	movff	?___fladd,?___flsub
  7810  0043F6  C029  F039         	movff	?___fladd+1,?___flsub+1
  7811  0043FA  C02A  F03A         	movff	?___fladd+2,?___flsub+2
  7812  0043FE  C02B  F03B         	movff	?___fladd+3,?___flsub+3
  7813  004402  0012               	return		;funcret
  7814  004404                     __end_of___flsub:
  7815                           	callstack 0
  7816                           
  7817 ;; *************** function ___fladd *****************
  7818 ;; Defined at:
  7819 ;;		line 10 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  7820 ;; Parameters:    Size  Location     Type
  7821 ;;  b               4   39[COMRAM] long 
  7822 ;;  a               4   43[COMRAM] long 
  7823 ;; Auto vars:     Size  Location     Type
  7824 ;;  grs             1   54[COMRAM] unsigned char 
  7825 ;;  bexp            1   53[COMRAM] unsigned char 
  7826 ;;  aexp            1   52[COMRAM] unsigned char 
  7827 ;;  signs           1   51[COMRAM] unsigned char 
  7828 ;; Return value:  Size  Location     Type
  7829 ;;                  4   39[COMRAM] unsigned char 
  7830 ;; Registers used:
  7831 ;;		wreg, status,2, status,0
  7832 ;; Tracked objects:
  7833 ;;		On entry : 0/0
  7834 ;;		On exit  : 0/0
  7835 ;;		Unchanged: 0/0
  7836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7837 ;;      Params:         8       0       0       0       0       0       0
  7838 ;;      Locals:         4       0       0       0       0       0       0
  7839 ;;      Temps:          4       0       0       0       0       0       0
  7840 ;;      Totals:        16       0       0       0       0       0       0
  7841 ;;Total ram usage:       16 bytes
  7842 ;; Hardware stack levels used:    1
  7843 ;; This function calls:
  7844 ;;		Nothing
  7845 ;; This function is called by:
  7846 ;;		_encher_tanque
  7847 ;;		_esvaziar_tanque
  7848 ;;		___flsub
  7849 ;;		_efgtoa
  7850 ;; This function uses a non-reentrant model
  7851 ;;
  7852                           
  7853                           	psect	text23
  7854  001D40                     __ptext23:
  7855                           	callstack 0
  7856  001D40                     ___fladd:
  7857                           	callstack 24
  7858  001D40  502B               	movf	(___fladd@b+3)^0,w,c
  7859  001D42  0B80               	andlw	128
  7860  001D44  6E34               	movwf	___fladd@signs^0,c
  7861  001D46  502B               	movf	(___fladd@b+3)^0,w,c
  7862  001D48  242B               	addwf	(___fladd@b+3)^0,w,c
  7863  001D4A  6E36               	movwf	___fladd@bexp^0,c
  7864  001D4C  AE2A               	btfss	(___fladd@b+2)^0,7,c
  7865  001D4E  EFAB  F00E         	goto	u2981
  7866  001D52  EFAD  F00E         	goto	u2980
  7867  001D56                     u2981:
  7868  001D56  EFAE  F00E         	goto	l3205
  7869  001D5A                     u2980:
  7870  001D5A  8036               	bsf	___fladd@bexp^0,0,c
  7871  001D5C                     l3205:
  7872  001D5C  5036               	movf	___fladd@bexp^0,w,c
  7873  001D5E  B4D8               	btfsc	status,2,c
  7874  001D60  EFB4  F00E         	goto	u2991
  7875  001D64  EFB6  F00E         	goto	u2990
  7876  001D68                     u2991:
  7877  001D68  EFCB  F00E         	goto	l3215
  7878  001D6C                     u2990:
  7879  001D6C  2836               	incf	___fladd@bexp^0,w,c
  7880  001D6E  A4D8               	btfss	status,2,c
  7881  001D70  EFBC  F00E         	goto	u3001
  7882  001D74  EFBE  F00E         	goto	u3000
  7883  001D78                     u3001:
  7884  001D78  EFC6  F00E         	goto	l3211
  7885  001D7C                     u3000:
  7886  001D7C  0E00               	movlw	0
  7887  001D7E  6E28               	movwf	___fladd@b^0,c
  7888  001D80  0E00               	movlw	0
  7889  001D82  6E29               	movwf	(___fladd@b+1)^0,c
  7890  001D84  0E00               	movlw	0
  7891  001D86  6E2A               	movwf	(___fladd@b+2)^0,c
  7892  001D88  0E00               	movlw	0
  7893  001D8A  6E2B               	movwf	(___fladd@b+3)^0,c
  7894  001D8C                     l3211:
  7895  001D8C  8E2A               	bsf	(___fladd@b+2)^0,7,c
  7896  001D8E  0E00               	movlw	0
  7897  001D90  6E2B               	movwf	(___fladd@b+3)^0,c
  7898  001D92  EFD3  F00E         	goto	l3217
  7899  001D96                     l3215:
  7900  001D96  0E00               	movlw	0
  7901  001D98  6E28               	movwf	___fladd@b^0,c
  7902  001D9A  0E00               	movlw	0
  7903  001D9C  6E29               	movwf	(___fladd@b+1)^0,c
  7904  001D9E  0E00               	movlw	0
  7905  001DA0  6E2A               	movwf	(___fladd@b+2)^0,c
  7906  001DA2  0E00               	movlw	0
  7907  001DA4  6E2B               	movwf	(___fladd@b+3)^0,c
  7908  001DA6                     l3217:
  7909  001DA6  502F               	movf	(___fladd@a+3)^0,w,c
  7910  001DA8  0B80               	andlw	128
  7911  001DAA  6E35               	movwf	___fladd@aexp^0,c
  7912  001DAC  5034               	movf	___fladd@signs^0,w,c
  7913  001DAE  1835               	xorwf	___fladd@aexp^0,w,c
  7914  001DB0  B4D8               	btfsc	status,2,c
  7915  001DB2  EFDD  F00E         	goto	u3011
  7916  001DB6  EFDF  F00E         	goto	u3010
  7917  001DBA                     u3011:
  7918  001DBA  EFE0  F00E         	goto	l3223
  7919  001DBE                     u3010:
  7920  001DBE  8C34               	bsf	___fladd@signs^0,6,c
  7921  001DC0                     l3223:
  7922  001DC0  502F               	movf	(___fladd@a+3)^0,w,c
  7923  001DC2  242F               	addwf	(___fladd@a+3)^0,w,c
  7924  001DC4  6E35               	movwf	___fladd@aexp^0,c
  7925  001DC6  AE2E               	btfss	(___fladd@a+2)^0,7,c
  7926  001DC8  EFE8  F00E         	goto	u3021
  7927  001DCC  EFEA  F00E         	goto	u3020
  7928  001DD0                     u3021:
  7929  001DD0  EFEB  F00E         	goto	l3229
  7930  001DD4                     u3020:
  7931  001DD4  8035               	bsf	___fladd@aexp^0,0,c
  7932  001DD6                     l3229:
  7933  001DD6  5035               	movf	___fladd@aexp^0,w,c
  7934  001DD8  B4D8               	btfsc	status,2,c
  7935  001DDA  EFF1  F00E         	goto	u3031
  7936  001DDE  EFF3  F00E         	goto	u3030
  7937  001DE2                     u3031:
  7938  001DE2  EF08  F00F         	goto	l3239
  7939  001DE6                     u3030:
  7940  001DE6  2835               	incf	___fladd@aexp^0,w,c
  7941  001DE8  A4D8               	btfss	status,2,c
  7942  001DEA  EFF9  F00E         	goto	u3041
  7943  001DEE  EFFB  F00E         	goto	u3040
  7944  001DF2                     u3041:
  7945  001DF2  EF03  F00F         	goto	l3235
  7946  001DF6                     u3040:
  7947  001DF6  0E00               	movlw	0
  7948  001DF8  6E2C               	movwf	___fladd@a^0,c
  7949  001DFA  0E00               	movlw	0
  7950  001DFC  6E2D               	movwf	(___fladd@a+1)^0,c
  7951  001DFE  0E00               	movlw	0
  7952  001E00  6E2E               	movwf	(___fladd@a+2)^0,c
  7953  001E02  0E00               	movlw	0
  7954  001E04  6E2F               	movwf	(___fladd@a+3)^0,c
  7955  001E06                     l3235:
  7956  001E06  8E2E               	bsf	(___fladd@a+2)^0,7,c
  7957  001E08  0E00               	movlw	0
  7958  001E0A  6E2F               	movwf	(___fladd@a+3)^0,c
  7959  001E0C  EF10  F00F         	goto	l3241
  7960  001E10                     l3239:
  7961  001E10  0E00               	movlw	0
  7962  001E12  6E2C               	movwf	___fladd@a^0,c
  7963  001E14  0E00               	movlw	0
  7964  001E16  6E2D               	movwf	(___fladd@a+1)^0,c
  7965  001E18  0E00               	movlw	0
  7966  001E1A  6E2E               	movwf	(___fladd@a+2)^0,c
  7967  001E1C  0E00               	movlw	0
  7968  001E1E  6E2F               	movwf	(___fladd@a+3)^0,c
  7969  001E20                     l3241:
  7970  001E20  5036               	movf	___fladd@bexp^0,w,c
  7971  001E22  5C35               	subwf	___fladd@aexp^0,w,c
  7972  001E24  B0D8               	btfsc	status,0,c
  7973  001E26  EF17  F00F         	goto	u3051
  7974  001E2A  EF19  F00F         	goto	u3050
  7975  001E2E                     u3051:
  7976  001E2E  EF40  F00F         	goto	l3277
  7977  001E32                     u3050:
  7978  001E32  AC34               	btfss	___fladd@signs^0,6,c
  7979  001E34  EF1E  F00F         	goto	u3061
  7980  001E38  EF20  F00F         	goto	u3060
  7981  001E3C                     u3061:
  7982  001E3C  EF22  F00F         	goto	l3247
  7983  001E40                     u3060:
  7984  001E40  0E80               	movlw	128
  7985  001E42  1A34               	xorwf	___fladd@signs^0,f,c
  7986  001E44                     l3247:
  7987  001E44  C036  F037         	movff	___fladd@bexp,___fladd@grs
  7988  001E48  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  7989  001E4C  C037  F035         	movff	___fladd@grs,___fladd@aexp
  7990  001E50  C028  F037         	movff	___fladd@b,___fladd@grs
  7991  001E54  C02C  F028         	movff	___fladd@a,___fladd@b
  7992  001E58  C037  F02C         	movff	___fladd@grs,___fladd@a
  7993  001E5C  C029  F037         	movff	___fladd@b+1,___fladd@grs
  7994  001E60  C02D  F029         	movff	___fladd@a+1,___fladd@b+1
  7995  001E64  C037  F02D         	movff	___fladd@grs,___fladd@a+1
  7996  001E68  C02A  F037         	movff	___fladd@b+2,___fladd@grs
  7997  001E6C  C02E  F02A         	movff	___fladd@a+2,___fladd@b+2
  7998  001E70  C037  F02E         	movff	___fladd@grs,___fladd@a+2
  7999  001E74  C02B  F037         	movff	___fladd@b+3,___fladd@grs
  8000  001E78  C02F  F02B         	movff	___fladd@a+3,___fladd@b+3
  8001  001E7C  C037  F02F         	movff	___fladd@grs,___fladd@a+3
  8002  001E80                     l3277:
  8003  001E80  0E00               	movlw	0
  8004  001E82  6E37               	movwf	___fladd@grs^0,c
  8005  001E84  5036               	movf	___fladd@bexp^0,w,c
  8006  001E86  C035  F030         	movff	___fladd@aexp,??___fladd
  8007  001E8A  6A31               	clrf	(??___fladd+1)^0,c
  8008  001E8C  5E30               	subwf	??___fladd^0,f,c
  8009  001E8E  0E00               	movlw	0
  8010  001E90  5A31               	subwfb	(??___fladd+1)^0,f,c
  8011  001E92  BE31               	btfsc	(??___fladd+1)^0,7,c
  8012  001E94  EF55  F00F         	goto	u3071
  8013  001E98  5031               	movf	(??___fladd+1)^0,w,c
  8014  001E9A  E109               	bnz	u3070
  8015  001E9C  0E1A               	movlw	26
  8016  001E9E  5C30               	subwf	??___fladd^0,w,c
  8017  001EA0  A0D8               	btfss	status,0,c
  8018  001EA2  EF55  F00F         	goto	u3071
  8019  001EA6  EF57  F00F         	goto	u3070
  8020  001EAA                     u3071:
  8021  001EAA  EF8E  F00F         	goto	l760
  8022  001EAE                     u3070:
  8023  001EAE  5028               	movf	___fladd@b^0,w,c
  8024  001EB0  1029               	iorwf	(___fladd@b+1)^0,w,c
  8025  001EB2  102A               	iorwf	(___fladd@b+2)^0,w,c
  8026  001EB4  102B               	iorwf	(___fladd@b+3)^0,w,c
  8027  001EB6  A4D8               	btfss	status,2,c
  8028  001EB8  EF60  F00F         	goto	u3081
  8029  001EBC  EF63  F00F         	goto	u3080
  8030  001EC0                     u3081:
  8031  001EC0  0E01               	movlw	1
  8032  001EC2  EF64  F00F         	goto	u3090
  8033  001EC6                     u3080:
  8034  001EC6  0E00               	movlw	0
  8035  001EC8                     u3090:
  8036  001EC8  6E37               	movwf	___fladd@grs^0,c
  8037  001ECA  0E00               	movlw	0
  8038  001ECC  6E28               	movwf	___fladd@b^0,c
  8039  001ECE  0E00               	movlw	0
  8040  001ED0  6E29               	movwf	(___fladd@b+1)^0,c
  8041  001ED2  0E00               	movlw	0
  8042  001ED4  6E2A               	movwf	(___fladd@b+2)^0,c
  8043  001ED6  0E00               	movlw	0
  8044  001ED8  6E2B               	movwf	(___fladd@b+3)^0,c
  8045  001EDA  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  8046  001EDE  EF97  F00F         	goto	l759
  8047  001EE2                     l761:
  8048  001EE2  A037               	btfss	___fladd@grs^0,0,c
  8049  001EE4  EF76  F00F         	goto	u3101
  8050  001EE8  EF78  F00F         	goto	u3100
  8051  001EEC                     u3101:
  8052  001EEC  EF7E  F00F         	goto	l3289
  8053  001EF0                     u3100:
  8054  001EF0  90D8               	bcf	status,0,c
  8055  001EF2  3037               	rrcf	___fladd@grs^0,w,c
  8056  001EF4  0901               	iorlw	1
  8057  001EF6  6E37               	movwf	___fladd@grs^0,c
  8058  001EF8  EF80  F00F         	goto	l3291
  8059  001EFC                     l3289:
  8060  001EFC  90D8               	bcf	status,0,c
  8061  001EFE  3237               	rrcf	___fladd@grs^0,f,c
  8062  001F00                     l3291:
  8063  001F00  A028               	btfss	___fladd@b^0,0,c
  8064  001F02  EF85  F00F         	goto	u3111
  8065  001F06  EF87  F00F         	goto	u3110
  8066  001F0A                     u3111:
  8067  001F0A  EF88  F00F         	goto	l3295
  8068  001F0E                     u3110:
  8069  001F0E  8E37               	bsf	___fladd@grs^0,7,c
  8070  001F10                     l3295:
  8071  001F10  342B               	rlcf	(___fladd@b+3)^0,w,c
  8072  001F12  322B               	rrcf	(___fladd@b+3)^0,f,c
  8073  001F14  322A               	rrcf	(___fladd@b+2)^0,f,c
  8074  001F16  3229               	rrcf	(___fladd@b+1)^0,f,c
  8075  001F18  3228               	rrcf	___fladd@b^0,f,c
  8076  001F1A  2A36               	incf	___fladd@bexp^0,f,c
  8077  001F1C                     l760:
  8078  001F1C  5035               	movf	___fladd@aexp^0,w,c
  8079  001F1E  5C36               	subwf	___fladd@bexp^0,w,c
  8080  001F20  A0D8               	btfss	status,0,c
  8081  001F22  EF95  F00F         	goto	u3121
  8082  001F26  EF97  F00F         	goto	u3120
  8083  001F2A                     u3121:
  8084  001F2A  EF71  F00F         	goto	l761
  8085  001F2E                     u3120:
  8086  001F2E                     l759:
  8087  001F2E  BC34               	btfsc	___fladd@signs^0,6,c
  8088  001F30  EF9C  F00F         	goto	u3131
  8089  001F34  EF9E  F00F         	goto	u3130
  8090  001F38                     u3131:
  8091  001F38  EFDE  F00F         	goto	l3323
  8092  001F3C                     u3130:
  8093  001F3C  5036               	movf	___fladd@bexp^0,w,c
  8094  001F3E  A4D8               	btfss	status,2,c
  8095  001F40  EFA4  F00F         	goto	u3141
  8096  001F44  EFA6  F00F         	goto	u3140
  8097  001F48                     u3141:
  8098  001F48  EFB0  F00F         	goto	l3305
  8099  001F4C                     u3140:
  8100  001F4C  0E00               	movlw	0
  8101  001F4E  6E28               	movwf	?___fladd^0,c
  8102  001F50  0E00               	movlw	0
  8103  001F52  6E29               	movwf	(?___fladd+1)^0,c
  8104  001F54  0E00               	movlw	0
  8105  001F56  6E2A               	movwf	(?___fladd+2)^0,c
  8106  001F58  0E00               	movlw	0
  8107  001F5A  6E2B               	movwf	(?___fladd+3)^0,c
  8108  001F5C  EFFF  F010         	goto	l768
  8109  001F60                     l3305:
  8110  001F60  502C               	movf	___fladd@a^0,w,c
  8111  001F62  2628               	addwf	___fladd@b^0,f,c
  8112  001F64  502D               	movf	(___fladd@a+1)^0,w,c
  8113  001F66  2229               	addwfc	(___fladd@b+1)^0,f,c
  8114  001F68  502E               	movf	(___fladd@a+2)^0,w,c
  8115  001F6A  222A               	addwfc	(___fladd@b+2)^0,f,c
  8116  001F6C  502F               	movf	(___fladd@a+3)^0,w,c
  8117  001F6E  222B               	addwfc	(___fladd@b+3)^0,f,c
  8118  001F70  A02B               	btfss	(___fladd@b+3)^0,0,c
  8119  001F72  EFBD  F00F         	goto	u3151
  8120  001F76  EFBF  F00F         	goto	u3150
  8121  001F7A                     u3151:
  8122  001F7A  EF6B  F010         	goto	l3359
  8123  001F7E                     u3150:
  8124  001F7E  A037               	btfss	___fladd@grs^0,0,c
  8125  001F80  EFC4  F00F         	goto	u3161
  8126  001F84  EFC6  F00F         	goto	u3160
  8127  001F88                     u3161:
  8128  001F88  EFCC  F00F         	goto	l3313
  8129  001F8C                     u3160:
  8130  001F8C  90D8               	bcf	status,0,c
  8131  001F8E  3037               	rrcf	___fladd@grs^0,w,c
  8132  001F90  0901               	iorlw	1
  8133  001F92  6E37               	movwf	___fladd@grs^0,c
  8134  001F94  EFCE  F00F         	goto	l3315
  8135  001F98                     l3313:
  8136  001F98  90D8               	bcf	status,0,c
  8137  001F9A  3237               	rrcf	___fladd@grs^0,f,c
  8138  001F9C                     l3315:
  8139  001F9C  A028               	btfss	___fladd@b^0,0,c
  8140  001F9E  EFD3  F00F         	goto	u3171
  8141  001FA2  EFD5  F00F         	goto	u3170
  8142  001FA6                     u3171:
  8143  001FA6  EFD6  F00F         	goto	l3319
  8144  001FAA                     u3170:
  8145  001FAA  8E37               	bsf	___fladd@grs^0,7,c
  8146  001FAC                     l3319:
  8147  001FAC  342B               	rlcf	(___fladd@b+3)^0,w,c
  8148  001FAE  322B               	rrcf	(___fladd@b+3)^0,f,c
  8149  001FB0  322A               	rrcf	(___fladd@b+2)^0,f,c
  8150  001FB2  3229               	rrcf	(___fladd@b+1)^0,f,c
  8151  001FB4  3228               	rrcf	___fladd@b^0,f,c
  8152  001FB6  2A36               	incf	___fladd@bexp^0,f,c
  8153  001FB8  EF6B  F010         	goto	l3359
  8154  001FBC                     l3323:
  8155  001FBC  502C               	movf	___fladd@a^0,w,c
  8156  001FBE  5C28               	subwf	___fladd@b^0,w,c
  8157  001FC0  502D               	movf	(___fladd@a+1)^0,w,c
  8158  001FC2  5829               	subwfb	(___fladd@b+1)^0,w,c
  8159  001FC4  502E               	movf	(___fladd@a+2)^0,w,c
  8160  001FC6  582A               	subwfb	(___fladd@b+2)^0,w,c
  8161  001FC8  502B               	movf	(___fladd@b+3)^0,w,c
  8162  001FCA  0A80               	xorlw	128
  8163  001FCC  6E30               	movwf	??___fladd^0,c
  8164  001FCE  502F               	movf	(___fladd@a+3)^0,w,c
  8165  001FD0  0A80               	xorlw	128
  8166  001FD2  5830               	subwfb	??___fladd^0,w,c
  8167  001FD4  B0D8               	btfsc	status,0,c
  8168  001FD6  EFEF  F00F         	goto	u3181
  8169  001FDA  EFF1  F00F         	goto	u3180
  8170  001FDE                     u3181:
  8171  001FDE  EF1C  F010         	goto	l3333
  8172  001FE2                     u3180:
  8173  001FE2  5028               	movf	___fladd@b^0,w,c
  8174  001FE4  5C2C               	subwf	___fladd@a^0,w,c
  8175  001FE6  6E30               	movwf	??___fladd^0,c
  8176  001FE8  5029               	movf	(___fladd@b+1)^0,w,c
  8177  001FEA  582D               	subwfb	(___fladd@a+1)^0,w,c
  8178  001FEC  6E31               	movwf	(??___fladd+1)^0,c
  8179  001FEE  502A               	movf	(___fladd@b+2)^0,w,c
  8180  001FF0  582E               	subwfb	(___fladd@a+2)^0,w,c
  8181  001FF2  6E32               	movwf	(??___fladd+2)^0,c
  8182  001FF4  502B               	movf	(___fladd@b+3)^0,w,c
  8183  001FF6  582F               	subwfb	(___fladd@a+3)^0,w,c
  8184  001FF8  6E33               	movwf	(??___fladd+3)^0,c
  8185  001FFA  0EFF               	movlw	255
  8186  001FFC  2430               	addwf	??___fladd^0,w,c
  8187  001FFE  6E28               	movwf	___fladd@b^0,c
  8188  002000  0EFF               	movlw	255
  8189  002002  2031               	addwfc	(??___fladd+1)^0,w,c
  8190  002004  6E29               	movwf	(___fladd@b+1)^0,c
  8191  002006  0EFF               	movlw	255
  8192  002008  2032               	addwfc	(??___fladd+2)^0,w,c
  8193  00200A  6E2A               	movwf	(___fladd@b+2)^0,c
  8194  00200C  0EFF               	movlw	255
  8195  00200E  2033               	addwfc	(??___fladd+3)^0,w,c
  8196  002010  6E2B               	movwf	(___fladd@b+3)^0,c
  8197  002012  0E80               	movlw	128
  8198  002014  1A34               	xorwf	___fladd@signs^0,f,c
  8199  002016  6C37               	negf	___fladd@grs^0,c
  8200  002018  5037               	movf	___fladd@grs^0,w,c
  8201  00201A  A4D8               	btfss	status,2,c
  8202  00201C  EF12  F010         	goto	u3191
  8203  002020  EF14  F010         	goto	u3190
  8204  002024                     u3191:
  8205  002024  EF24  F010         	goto	l776
  8206  002028                     u3190:
  8207  002028  0E01               	movlw	1
  8208  00202A  2628               	addwf	___fladd@b^0,f,c
  8209  00202C  0E00               	movlw	0
  8210  00202E  2229               	addwfc	(___fladd@b+1)^0,f,c
  8211  002030  222A               	addwfc	(___fladd@b+2)^0,f,c
  8212  002032  222B               	addwfc	(___fladd@b+3)^0,f,c
  8213  002034  EF24  F010         	goto	l776
  8214  002038                     l3333:
  8215  002038  502C               	movf	___fladd@a^0,w,c
  8216  00203A  5E28               	subwf	___fladd@b^0,f,c
  8217  00203C  502D               	movf	(___fladd@a+1)^0,w,c
  8218  00203E  5A29               	subwfb	(___fladd@b+1)^0,f,c
  8219  002040  502E               	movf	(___fladd@a+2)^0,w,c
  8220  002042  5A2A               	subwfb	(___fladd@b+2)^0,f,c
  8221  002044  502F               	movf	(___fladd@a+3)^0,w,c
  8222  002046  5A2B               	subwfb	(___fladd@b+3)^0,f,c
  8223  002048                     l776:
  8224  002048  5028               	movf	___fladd@b^0,w,c
  8225  00204A  1029               	iorwf	(___fladd@b+1)^0,w,c
  8226  00204C  102A               	iorwf	(___fladd@b+2)^0,w,c
  8227  00204E  102B               	iorwf	(___fladd@b+3)^0,w,c
  8228  002050  A4D8               	btfss	status,2,c
  8229  002052  EF2D  F010         	goto	u3201
  8230  002056  EF2F  F010         	goto	u3200
  8231  00205A                     u3201:
  8232  00205A  EF64  F010         	goto	l3357
  8233  00205E                     u3200:
  8234  00205E  5037               	movf	___fladd@grs^0,w,c
  8235  002060  A4D8               	btfss	status,2,c
  8236  002062  EF35  F010         	goto	u3211
  8237  002066  EF37  F010         	goto	u3210
  8238  00206A                     u3211:
  8239  00206A  EF64  F010         	goto	l3357
  8240  00206E                     u3210:
  8241  00206E  0E00               	movlw	0
  8242  002070  6E28               	movwf	?___fladd^0,c
  8243  002072  0E00               	movlw	0
  8244  002074  6E29               	movwf	(?___fladd+1)^0,c
  8245  002076  0E00               	movlw	0
  8246  002078  6E2A               	movwf	(?___fladd+2)^0,c
  8247  00207A  0E00               	movlw	0
  8248  00207C  6E2B               	movwf	(?___fladd+3)^0,c
  8249  00207E  EFFF  F010         	goto	l768
  8250  002082                     l3341:
  8251  002082  90D8               	bcf	status,0,c
  8252  002084  3628               	rlcf	___fladd@b^0,f,c
  8253  002086  3629               	rlcf	(___fladd@b+1)^0,f,c
  8254  002088  362A               	rlcf	(___fladd@b+2)^0,f,c
  8255  00208A  362B               	rlcf	(___fladd@b+3)^0,f,c
  8256  00208C  AE37               	btfss	___fladd@grs^0,7,c
  8257  00208E  EF4B  F010         	goto	u3221
  8258  002092  EF4D  F010         	goto	u3220
  8259  002096                     u3221:
  8260  002096  EF4E  F010         	goto	l3347
  8261  00209A                     u3220:
  8262  00209A  8028               	bsf	___fladd@b^0,0,c
  8263  00209C                     l3347:
  8264  00209C  A037               	btfss	___fladd@grs^0,0,c
  8265  00209E  EF53  F010         	goto	u3231
  8266  0020A2  EF55  F010         	goto	u3230
  8267  0020A6                     u3231:
  8268  0020A6  EF59  F010         	goto	l3351
  8269  0020AA                     u3230:
  8270  0020AA  80D8               	bsf	status,0,c
  8271  0020AC  3637               	rlcf	___fladd@grs^0,f,c
  8272  0020AE  EF5B  F010         	goto	l3353
  8273  0020B2                     l3351:
  8274  0020B2  90D8               	bcf	status,0,c
  8275  0020B4  3637               	rlcf	___fladd@grs^0,f,c
  8276  0020B6                     l3353:
  8277  0020B6  5036               	movf	___fladd@bexp^0,w,c
  8278  0020B8  B4D8               	btfsc	status,2,c
  8279  0020BA  EF61  F010         	goto	u3241
  8280  0020BE  EF63  F010         	goto	u3240
  8281  0020C2                     u3241:
  8282  0020C2  EF64  F010         	goto	l3357
  8283  0020C6                     u3240:
  8284  0020C6  0636               	decf	___fladd@bexp^0,f,c
  8285  0020C8                     l3357:
  8286  0020C8  AE2A               	btfss	(___fladd@b+2)^0,7,c
  8287  0020CA  EF69  F010         	goto	u3251
  8288  0020CE  EF6B  F010         	goto	u3250
  8289  0020D2                     u3251:
  8290  0020D2  EF41  F010         	goto	l3341
  8291  0020D6                     u3250:
  8292  0020D6                     l3359:
  8293  0020D6  0E00               	movlw	0
  8294  0020D8  6E35               	movwf	___fladd@aexp^0,c
  8295  0020DA  AE37               	btfss	___fladd@grs^0,7,c
  8296  0020DC  EF72  F010         	goto	u3261
  8297  0020E0  EF74  F010         	goto	u3260
  8298  0020E4                     u3261:
  8299  0020E4  EF8C  F010         	goto	l785
  8300  0020E8                     u3260:
  8301  0020E8  C037  F030         	movff	___fladd@grs,??___fladd
  8302  0020EC  0E7F               	movlw	127
  8303  0020EE  1630               	andwf	??___fladd^0,f,c
  8304  0020F0  B4D8               	btfsc	status,2,c
  8305  0020F2  EF7D  F010         	goto	u3271
  8306  0020F6  EF7F  F010         	goto	u3270
  8307  0020FA                     u3271:
  8308  0020FA  EF83  F010         	goto	l786
  8309  0020FE                     u3270:
  8310  0020FE                     l3365:
  8311  0020FE  0E01               	movlw	1
  8312  002100  6E35               	movwf	___fladd@aexp^0,c
  8313  002102  EF8C  F010         	goto	l785
  8314  002106                     l786:
  8315  002106  A028               	btfss	___fladd@b^0,0,c
  8316  002108  EF88  F010         	goto	u3281
  8317  00210C  EF8A  F010         	goto	u3280
  8318  002110                     u3281:
  8319  002110  EF8C  F010         	goto	l785
  8320  002114                     u3280:
  8321  002114  EF7F  F010         	goto	l3365
  8322  002118                     l785:
  8323  002118  5035               	movf	___fladd@aexp^0,w,c
  8324  00211A  B4D8               	btfsc	status,2,c
  8325  00211C  EF92  F010         	goto	u3291
  8326  002120  EF94  F010         	goto	u3290
  8327  002124                     u3291:
  8328  002124  EFBF  F010         	goto	l3377
  8329  002128                     u3290:
  8330  002128  0E01               	movlw	1
  8331  00212A  2628               	addwf	___fladd@b^0,f,c
  8332  00212C  0E00               	movlw	0
  8333  00212E  2229               	addwfc	(___fladd@b+1)^0,f,c
  8334  002130  222A               	addwfc	(___fladd@b+2)^0,f,c
  8335  002132  222B               	addwfc	(___fladd@b+3)^0,f,c
  8336  002134  A02B               	btfss	(___fladd@b+3)^0,0,c
  8337  002136  EF9F  F010         	goto	u3301
  8338  00213A  EFA1  F010         	goto	u3300
  8339  00213E                     u3301:
  8340  00213E  EFBF  F010         	goto	l3377
  8341  002142                     u3300:
  8342  002142  C028  F030         	movff	___fladd@b,??___fladd
  8343  002146  C029  F031         	movff	___fladd@b+1,??___fladd+1
  8344  00214A  C02A  F032         	movff	___fladd@b+2,??___fladd+2
  8345  00214E  C02B  F033         	movff	___fladd@b+3,??___fladd+3
  8346  002152  3433               	rlcf	(??___fladd+3)^0,w,c
  8347  002154  3233               	rrcf	(??___fladd+3)^0,f,c
  8348  002156  3232               	rrcf	(??___fladd+2)^0,f,c
  8349  002158  3231               	rrcf	(??___fladd+1)^0,f,c
  8350  00215A  3230               	rrcf	??___fladd^0,f,c
  8351  00215C  C030  F028         	movff	??___fladd,___fladd@b
  8352  002160  C031  F029         	movff	??___fladd+1,___fladd@b+1
  8353  002164  C032  F02A         	movff	??___fladd+2,___fladd@b+2
  8354  002168  C033  F02B         	movff	??___fladd+3,___fladd@b+3
  8355  00216C  2836               	incf	___fladd@bexp^0,w,c
  8356  00216E  B4D8               	btfsc	status,2,c
  8357  002170  EFBC  F010         	goto	u3311
  8358  002174  EFBE  F010         	goto	u3310
  8359  002178                     u3311:
  8360  002178  EFBF  F010         	goto	l3377
  8361  00217C                     u3310:
  8362  00217C  2A36               	incf	___fladd@bexp^0,f,c
  8363  00217E                     l3377:
  8364  00217E  2836               	incf	___fladd@bexp^0,w,c
  8365  002180  B4D8               	btfsc	status,2,c
  8366  002182  EFC5  F010         	goto	u3321
  8367  002186  EFC7  F010         	goto	u3320
  8368  00218A                     u3321:
  8369  00218A  EFCF  F010         	goto	l3381
  8370  00218E                     u3320:
  8371  00218E  5036               	movf	___fladd@bexp^0,w,c
  8372  002190  A4D8               	btfss	status,2,c
  8373  002192  EFCD  F010         	goto	u3331
  8374  002196  EFCF  F010         	goto	u3330
  8375  00219A                     u3331:
  8376  00219A  EFE1  F010         	goto	l3385
  8377  00219E                     u3330:
  8378  00219E                     l3381:
  8379  00219E  0E00               	movlw	0
  8380  0021A0  6E28               	movwf	___fladd@b^0,c
  8381  0021A2  0E00               	movlw	0
  8382  0021A4  6E29               	movwf	(___fladd@b+1)^0,c
  8383  0021A6  0E00               	movlw	0
  8384  0021A8  6E2A               	movwf	(___fladd@b+2)^0,c
  8385  0021AA  0E00               	movlw	0
  8386  0021AC  6E2B               	movwf	(___fladd@b+3)^0,c
  8387  0021AE  5036               	movf	___fladd@bexp^0,w,c
  8388  0021B0  A4D8               	btfss	status,2,c
  8389  0021B2  EFDD  F010         	goto	u3341
  8390  0021B6  EFDF  F010         	goto	u3340
  8391  0021BA                     u3341:
  8392  0021BA  EFE1  F010         	goto	l3385
  8393  0021BE                     u3340:
  8394  0021BE  0E00               	movlw	0
  8395  0021C0  6E34               	movwf	___fladd@signs^0,c
  8396  0021C2                     l3385:
  8397  0021C2  A036               	btfss	___fladd@bexp^0,0,c
  8398  0021C4  EFE6  F010         	goto	u3351
  8399  0021C8  EFE8  F010         	goto	u3350
  8400  0021CC                     u3351:
  8401  0021CC  EFEB  F010         	goto	l3389
  8402  0021D0                     u3350:
  8403  0021D0  8E2A               	bsf	(___fladd@b+2)^0,7,c
  8404  0021D2  EFEC  F010         	goto	l3391
  8405  0021D6                     l3389:
  8406  0021D6  9E2A               	bcf	(___fladd@b+2)^0,7,c
  8407  0021D8                     l3391:
  8408  0021D8  90D8               	bcf	status,0,c
  8409  0021DA  3036               	rrcf	___fladd@bexp^0,w,c
  8410  0021DC  6E2B               	movwf	(___fladd@b+3)^0,c
  8411  0021DE  AE34               	btfss	___fladd@signs^0,7,c
  8412  0021E0  EFF4  F010         	goto	u3361
  8413  0021E4  EFF6  F010         	goto	u3360
  8414  0021E8                     u3361:
  8415  0021E8  EFF7  F010         	goto	l3397
  8416  0021EC                     u3360:
  8417  0021EC  8E2B               	bsf	(___fladd@b+3)^0,7,c
  8418  0021EE                     l3397:
  8419  0021EE  C028  F028         	movff	___fladd@b,?___fladd
  8420  0021F2  C029  F029         	movff	___fladd@b+1,?___fladd+1
  8421  0021F6  C02A  F02A         	movff	___fladd@b+2,?___fladd+2
  8422  0021FA  C02B  F02B         	movff	___fladd@b+3,?___fladd+3
  8423  0021FE                     l768:
  8424  0021FE  0012               	return		;funcret
  8425  002200                     __end_of___fladd:
  8426                           	callstack 0
  8427                           
  8428 ;; *************** function ___flneg *****************
  8429 ;; Defined at:
  8430 ;;		line 15 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\flneg.c"
  8431 ;; Parameters:    Size  Location     Type
  8432 ;;  f1              4    0[COMRAM] unsigned char 
  8433 ;; Auto vars:     Size  Location     Type
  8434 ;;		None
  8435 ;; Return value:  Size  Location     Type
  8436 ;;                  4    0[COMRAM] unsigned char 
  8437 ;; Registers used:
  8438 ;;		wreg, status,2, status,0
  8439 ;; Tracked objects:
  8440 ;;		On entry : 0/0
  8441 ;;		On exit  : 0/0
  8442 ;;		Unchanged: 0/0
  8443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8444 ;;      Params:         4       0       0       0       0       0       0
  8445 ;;      Locals:         0       0       0       0       0       0       0
  8446 ;;      Temps:          0       0       0       0       0       0       0
  8447 ;;      Totals:         4       0       0       0       0       0       0
  8448 ;;Total ram usage:        4 bytes
  8449 ;; Hardware stack levels used:    1
  8450 ;; This function calls:
  8451 ;;		Nothing
  8452 ;; This function is called by:
  8453 ;;		_efgtoa
  8454 ;; This function uses a non-reentrant model
  8455 ;;
  8456                           
  8457                           	psect	text24
  8458  004480                     __ptext24:
  8459                           	callstack 0
  8460  004480                     ___flneg:
  8461                           	callstack 25
  8462  004480  5001               	movf	___flneg@f1^0,w,c
  8463  004482  1002               	iorwf	(___flneg@f1+1)^0,w,c
  8464  004484  1003               	iorwf	(___flneg@f1+2)^0,w,c
  8465  004486  1004               	iorwf	(___flneg@f1+3)^0,w,c
  8466  004488  B4D8               	btfsc	status,2,c
  8467  00448A  EF49  F022         	goto	u4031
  8468  00448E  EF4B  F022         	goto	u4030
  8469  004492                     u4031:
  8470  004492  EF53  F022         	goto	l3825
  8471  004496                     u4030:
  8472  004496  0E00               	movlw	0
  8473  004498  1A01               	xorwf	___flneg@f1^0,f,c
  8474  00449A  0E00               	movlw	0
  8475  00449C  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  8476  00449E  0E00               	movlw	0
  8477  0044A0  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  8478  0044A2  0E80               	movlw	128
  8479  0044A4  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  8480  0044A6                     l3825:
  8481  0044A6  C001  F001         	movff	___flneg@f1,?___flneg
  8482  0044AA  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  8483  0044AE  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  8484  0044B2  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  8485  0044B6  0012               	return		;funcret
  8486  0044B8                     __end_of___flneg:
  8487                           	callstack 0
  8488                           
  8489 ;; *************** function ___flmul *****************
  8490 ;; Defined at:
  8491 ;;		line 8 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
  8492 ;; Parameters:    Size  Location     Type
  8493 ;;  b               4   14[COMRAM] unsigned char 
  8494 ;;  a               4   18[COMRAM] unsigned char 
  8495 ;; Auto vars:     Size  Location     Type
  8496 ;;  prod            4   33[COMRAM] struct .
  8497 ;;  grs             4   27[COMRAM] unsigned long 
  8498 ;;  temp            2   37[COMRAM] struct .
  8499 ;;  bexp            1   32[COMRAM] unsigned char 
  8500 ;;  aexp            1   31[COMRAM] unsigned char 
  8501 ;;  sign            1   26[COMRAM] unsigned char 
  8502 ;; Return value:  Size  Location     Type
  8503 ;;                  4   14[COMRAM] unsigned char 
  8504 ;; Registers used:
  8505 ;;		wreg, status,2, status,0, prodl, prodh
  8506 ;; Tracked objects:
  8507 ;;		On entry : 0/0
  8508 ;;		On exit  : 0/0
  8509 ;;		Unchanged: 0/0
  8510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8511 ;;      Params:         8       0       0       0       0       0       0
  8512 ;;      Locals:        13       0       0       0       0       0       0
  8513 ;;      Temps:          4       0       0       0       0       0       0
  8514 ;;      Totals:        25       0       0       0       0       0       0
  8515 ;;Total ram usage:       25 bytes
  8516 ;; Hardware stack levels used:    1
  8517 ;; This function calls:
  8518 ;;		Nothing
  8519 ;; This function is called by:
  8520 ;;		_encher_tanque
  8521 ;;		_esvaziar_tanque
  8522 ;;		_efgtoa
  8523 ;; This function uses a non-reentrant model
  8524 ;;
  8525                           
  8526                           	psect	text25
  8527  00266A                     __ptext25:
  8528                           	callstack 0
  8529  00266A                     ___flmul:
  8530                           	callstack 25
  8531  00266A  5012               	movf	(___flmul@b+3)^0,w,c
  8532  00266C  0B80               	andlw	128
  8533  00266E  6E1B               	movwf	___flmul@sign^0,c
  8534  002670  5012               	movf	(___flmul@b+3)^0,w,c
  8535  002672  2412               	addwf	(___flmul@b+3)^0,w,c
  8536  002674  6E21               	movwf	___flmul@bexp^0,c
  8537  002676  AE11               	btfss	(___flmul@b+2)^0,7,c
  8538  002678  EF40  F013         	goto	u3641
  8539  00267C  EF42  F013         	goto	u3640
  8540  002680                     u3641:
  8541  002680  EF43  F013         	goto	l3573
  8542  002684                     u3640:
  8543  002684  8021               	bsf	___flmul@bexp^0,0,c
  8544  002686                     l3573:
  8545  002686  5021               	movf	___flmul@bexp^0,w,c
  8546  002688  B4D8               	btfsc	status,2,c
  8547  00268A  EF49  F013         	goto	u3651
  8548  00268E  EF4B  F013         	goto	u3650
  8549  002692                     u3651:
  8550  002692  EF5E  F013         	goto	l3581
  8551  002696                     u3650:
  8552  002696  2821               	incf	___flmul@bexp^0,w,c
  8553  002698  A4D8               	btfss	status,2,c
  8554  00269A  EF51  F013         	goto	u3661
  8555  00269E  EF53  F013         	goto	u3660
  8556  0026A2                     u3661:
  8557  0026A2  EF5B  F013         	goto	l3579
  8558  0026A6                     u3660:
  8559  0026A6  0E00               	movlw	0
  8560  0026A8  6E0F               	movwf	___flmul@b^0,c
  8561  0026AA  0E00               	movlw	0
  8562  0026AC  6E10               	movwf	(___flmul@b+1)^0,c
  8563  0026AE  0E00               	movlw	0
  8564  0026B0  6E11               	movwf	(___flmul@b+2)^0,c
  8565  0026B2  0E00               	movlw	0
  8566  0026B4  6E12               	movwf	(___flmul@b+3)^0,c
  8567  0026B6                     l3579:
  8568  0026B6  8E11               	bsf	(___flmul@b+2)^0,7,c
  8569  0026B8  EF66  F013         	goto	l3583
  8570  0026BC                     l3581:
  8571  0026BC  0E00               	movlw	0
  8572  0026BE  6E0F               	movwf	___flmul@b^0,c
  8573  0026C0  0E00               	movlw	0
  8574  0026C2  6E10               	movwf	(___flmul@b+1)^0,c
  8575  0026C4  0E00               	movlw	0
  8576  0026C6  6E11               	movwf	(___flmul@b+2)^0,c
  8577  0026C8  0E00               	movlw	0
  8578  0026CA  6E12               	movwf	(___flmul@b+3)^0,c
  8579  0026CC                     l3583:
  8580  0026CC  5016               	movf	(___flmul@a+3)^0,w,c
  8581  0026CE  0B80               	andlw	128
  8582  0026D0  1A1B               	xorwf	___flmul@sign^0,f,c
  8583  0026D2  5016               	movf	(___flmul@a+3)^0,w,c
  8584  0026D4  2416               	addwf	(___flmul@a+3)^0,w,c
  8585  0026D6  6E20               	movwf	___flmul@aexp^0,c
  8586  0026D8  AE15               	btfss	(___flmul@a+2)^0,7,c
  8587  0026DA  EF71  F013         	goto	u3671
  8588  0026DE  EF73  F013         	goto	u3670
  8589  0026E2                     u3671:
  8590  0026E2  EF74  F013         	goto	l3591
  8591  0026E6                     u3670:
  8592  0026E6  8020               	bsf	___flmul@aexp^0,0,c
  8593  0026E8                     l3591:
  8594  0026E8  5020               	movf	___flmul@aexp^0,w,c
  8595  0026EA  B4D8               	btfsc	status,2,c
  8596  0026EC  EF7A  F013         	goto	u3681
  8597  0026F0  EF7C  F013         	goto	u3680
  8598  0026F4                     u3681:
  8599  0026F4  EF8F  F013         	goto	l3599
  8600  0026F8                     u3680:
  8601  0026F8  2820               	incf	___flmul@aexp^0,w,c
  8602  0026FA  A4D8               	btfss	status,2,c
  8603  0026FC  EF82  F013         	goto	u3691
  8604  002700  EF84  F013         	goto	u3690
  8605  002704                     u3691:
  8606  002704  EF8C  F013         	goto	l3597
  8607  002708                     u3690:
  8608  002708  0E00               	movlw	0
  8609  00270A  6E13               	movwf	___flmul@a^0,c
  8610  00270C  0E00               	movlw	0
  8611  00270E  6E14               	movwf	(___flmul@a+1)^0,c
  8612  002710  0E00               	movlw	0
  8613  002712  6E15               	movwf	(___flmul@a+2)^0,c
  8614  002714  0E00               	movlw	0
  8615  002716  6E16               	movwf	(___flmul@a+3)^0,c
  8616  002718                     l3597:
  8617  002718  8E15               	bsf	(___flmul@a+2)^0,7,c
  8618  00271A  EF97  F013         	goto	l845
  8619  00271E                     l3599:
  8620  00271E  0E00               	movlw	0
  8621  002720  6E13               	movwf	___flmul@a^0,c
  8622  002722  0E00               	movlw	0
  8623  002724  6E14               	movwf	(___flmul@a+1)^0,c
  8624  002726  0E00               	movlw	0
  8625  002728  6E15               	movwf	(___flmul@a+2)^0,c
  8626  00272A  0E00               	movlw	0
  8627  00272C  6E16               	movwf	(___flmul@a+3)^0,c
  8628  00272E                     l845:
  8629  00272E  5020               	movf	___flmul@aexp^0,w,c
  8630  002730  B4D8               	btfsc	status,2,c
  8631  002732  EF9D  F013         	goto	u3701
  8632  002736  EF9F  F013         	goto	u3700
  8633  00273A                     u3701:
  8634  00273A  EFA7  F013         	goto	l3603
  8635  00273E                     u3700:
  8636  00273E  5021               	movf	___flmul@bexp^0,w,c
  8637  002740  A4D8               	btfss	status,2,c
  8638  002742  EFA5  F013         	goto	u3711
  8639  002746  EFA7  F013         	goto	u3710
  8640  00274A                     u3711:
  8641  00274A  EFB1  F013         	goto	l3607
  8642  00274E                     u3710:
  8643  00274E                     l3603:
  8644  00274E  0E00               	movlw	0
  8645  002750  6E0F               	movwf	?___flmul^0,c
  8646  002752  0E00               	movlw	0
  8647  002754  6E10               	movwf	(?___flmul+1)^0,c
  8648  002756  0E00               	movlw	0
  8649  002758  6E11               	movwf	(?___flmul+2)^0,c
  8650  00275A  0E00               	movlw	0
  8651  00275C  6E12               	movwf	(?___flmul+3)^0,c
  8652  00275E  EF49  F015         	goto	l849
  8653  002762                     l3607:
  8654  002762  5015               	movf	(___flmul@a+2)^0,w,c
  8655  002764  020F               	mulwf	___flmul@b^0,c
  8656  002766  CFF3 F026          	movff	prodl,___flmul@temp
  8657  00276A  CFF4 F027          	movff	prodh,___flmul@temp+1
  8658  00276E  5026               	movf	___flmul@temp^0,w,c
  8659  002770  6E1C               	movwf	___flmul@grs^0,c
  8660  002772  6A1D               	clrf	(___flmul@grs+1)^0,c
  8661  002774  6A1E               	clrf	(___flmul@grs+2)^0,c
  8662  002776  6A1F               	clrf	(___flmul@grs+3)^0,c
  8663  002778  5027               	movf	(___flmul@temp+1)^0,w,c
  8664  00277A  6E22               	movwf	___flmul@prod^0,c
  8665  00277C  6A23               	clrf	(___flmul@prod+1)^0,c
  8666  00277E  6A24               	clrf	(___flmul@prod+2)^0,c
  8667  002780  6A25               	clrf	(___flmul@prod+3)^0,c
  8668  002782  5014               	movf	(___flmul@a+1)^0,w,c
  8669  002784  0210               	mulwf	(___flmul@b+1)^0,c
  8670  002786  CFF3 F026          	movff	prodl,___flmul@temp
  8671  00278A  CFF4 F027          	movff	prodh,___flmul@temp+1
  8672  00278E  5026               	movf	___flmul@temp^0,w,c
  8673  002790  261C               	addwf	___flmul@grs^0,f,c
  8674  002792  0E00               	movlw	0
  8675  002794  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8676  002796  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8677  002798  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8678  00279A  5027               	movf	(___flmul@temp+1)^0,w,c
  8679  00279C  2622               	addwf	___flmul@prod^0,f,c
  8680  00279E  0E00               	movlw	0
  8681  0027A0  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8682  0027A2  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8683  0027A4  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8684  0027A6  5013               	movf	___flmul@a^0,w,c
  8685  0027A8  0211               	mulwf	(___flmul@b+2)^0,c
  8686  0027AA  CFF3 F026          	movff	prodl,___flmul@temp
  8687  0027AE  CFF4 F027          	movff	prodh,___flmul@temp+1
  8688  0027B2  5026               	movf	___flmul@temp^0,w,c
  8689  0027B4  261C               	addwf	___flmul@grs^0,f,c
  8690  0027B6  0E00               	movlw	0
  8691  0027B8  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8692  0027BA  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8693  0027BC  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8694  0027BE  5027               	movf	(___flmul@temp+1)^0,w,c
  8695  0027C0  2622               	addwf	___flmul@prod^0,f,c
  8696  0027C2  0E00               	movlw	0
  8697  0027C4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8698  0027C6  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8699  0027C8  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8700  0027CA  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8701  0027CE  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8702  0027D2  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8703  0027D6  6A1C               	clrf	___flmul@grs^0,c
  8704  0027D8  5013               	movf	___flmul@a^0,w,c
  8705  0027DA  0210               	mulwf	(___flmul@b+1)^0,c
  8706  0027DC  CFF3 F026          	movff	prodl,___flmul@temp
  8707  0027E0  CFF4 F027          	movff	prodh,___flmul@temp+1
  8708  0027E4  5026               	movf	___flmul@temp^0,w,c
  8709  0027E6  261C               	addwf	___flmul@grs^0,f,c
  8710  0027E8  5027               	movf	(___flmul@temp+1)^0,w,c
  8711  0027EA  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8712  0027EC  0E00               	movlw	0
  8713  0027EE  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8714  0027F0  0E00               	movlw	0
  8715  0027F2  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8716  0027F4  5014               	movf	(___flmul@a+1)^0,w,c
  8717  0027F6  020F               	mulwf	___flmul@b^0,c
  8718  0027F8  CFF3 F026          	movff	prodl,___flmul@temp
  8719  0027FC  CFF4 F027          	movff	prodh,___flmul@temp+1
  8720  002800  5026               	movf	___flmul@temp^0,w,c
  8721  002802  261C               	addwf	___flmul@grs^0,f,c
  8722  002804  5027               	movf	(___flmul@temp+1)^0,w,c
  8723  002806  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8724  002808  0E00               	movlw	0
  8725  00280A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8726  00280C  0E00               	movlw	0
  8727  00280E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8728  002810  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8729  002814  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8730  002818  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8731  00281C  6A1C               	clrf	___flmul@grs^0,c
  8732  00281E  5013               	movf	___flmul@a^0,w,c
  8733  002820  020F               	mulwf	___flmul@b^0,c
  8734  002822  CFF3 F026          	movff	prodl,___flmul@temp
  8735  002826  CFF4 F027          	movff	prodh,___flmul@temp+1
  8736  00282A  5026               	movf	___flmul@temp^0,w,c
  8737  00282C  261C               	addwf	___flmul@grs^0,f,c
  8738  00282E  5027               	movf	(___flmul@temp+1)^0,w,c
  8739  002830  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8740  002832  0E00               	movlw	0
  8741  002834  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8742  002836  0E00               	movlw	0
  8743  002838  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8744  00283A  5015               	movf	(___flmul@a+2)^0,w,c
  8745  00283C  0210               	mulwf	(___flmul@b+1)^0,c
  8746  00283E  CFF3 F026          	movff	prodl,___flmul@temp
  8747  002842  CFF4 F027          	movff	prodh,___flmul@temp+1
  8748  002846  5026               	movf	___flmul@temp^0,w,c
  8749  002848  2622               	addwf	___flmul@prod^0,f,c
  8750  00284A  5027               	movf	(___flmul@temp+1)^0,w,c
  8751  00284C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8752  00284E  0E00               	movlw	0
  8753  002850  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8754  002852  0E00               	movlw	0
  8755  002854  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8756  002856  5014               	movf	(___flmul@a+1)^0,w,c
  8757  002858  0211               	mulwf	(___flmul@b+2)^0,c
  8758  00285A  CFF3 F026          	movff	prodl,___flmul@temp
  8759  00285E  CFF4 F027          	movff	prodh,___flmul@temp+1
  8760  002862  5026               	movf	___flmul@temp^0,w,c
  8761  002864  2622               	addwf	___flmul@prod^0,f,c
  8762  002866  5027               	movf	(___flmul@temp+1)^0,w,c
  8763  002868  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8764  00286A  0E00               	movlw	0
  8765  00286C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8766  00286E  0E00               	movlw	0
  8767  002870  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8768  002872  5015               	movf	(___flmul@a+2)^0,w,c
  8769  002874  0211               	mulwf	(___flmul@b+2)^0,c
  8770  002876  CFF3 F026          	movff	prodl,___flmul@temp
  8771  00287A  CFF4 F027          	movff	prodh,___flmul@temp+1
  8772  00287E  5026               	movf	___flmul@temp^0,w,c
  8773  002880  6E17               	movwf	??___flmul^0,c
  8774  002882  5027               	movf	(___flmul@temp+1)^0,w,c
  8775  002884  6E18               	movwf	(??___flmul+1)^0,c
  8776  002886  6A19               	clrf	(??___flmul+2)^0,c
  8777  002888  6A1A               	clrf	(??___flmul+3)^0,c
  8778  00288A  C019  F01A         	movff	??___flmul+2,??___flmul+3
  8779  00288E  C018  F019         	movff	??___flmul+1,??___flmul+2
  8780  002892  C017  F018         	movff	??___flmul,??___flmul+1
  8781  002896  6A17               	clrf	??___flmul^0,c
  8782  002898  5017               	movf	??___flmul^0,w,c
  8783  00289A  2622               	addwf	___flmul@prod^0,f,c
  8784  00289C  5018               	movf	(??___flmul+1)^0,w,c
  8785  00289E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8786  0028A0  5019               	movf	(??___flmul+2)^0,w,c
  8787  0028A2  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8788  0028A4  501A               	movf	(??___flmul+3)^0,w,c
  8789  0028A6  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8790  0028A8  C01C  F017         	movff	___flmul@grs,??___flmul
  8791  0028AC  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  8792  0028B0  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  8793  0028B4  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  8794  0028B8  0E19               	movlw	25
  8795  0028BA  EF64  F014         	goto	u3720
  8796  0028BE                     u3725:
  8797  0028BE  90D8               	bcf	status,0,c
  8798  0028C0  321A               	rrcf	(??___flmul+3)^0,f,c
  8799  0028C2  3219               	rrcf	(??___flmul+2)^0,f,c
  8800  0028C4  3218               	rrcf	(??___flmul+1)^0,f,c
  8801  0028C6  3217               	rrcf	??___flmul^0,f,c
  8802  0028C8                     u3720:
  8803  0028C8  2EE8               	decfsz	wreg,f,c
  8804  0028CA  EF5F  F014         	goto	u3725
  8805  0028CE  5017               	movf	??___flmul^0,w,c
  8806  0028D0  2622               	addwf	___flmul@prod^0,f,c
  8807  0028D2  5018               	movf	(??___flmul+1)^0,w,c
  8808  0028D4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8809  0028D6  5019               	movf	(??___flmul+2)^0,w,c
  8810  0028D8  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8811  0028DA  501A               	movf	(??___flmul+3)^0,w,c
  8812  0028DC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8813  0028DE  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8814  0028E2  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8815  0028E6  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8816  0028EA  6A1C               	clrf	___flmul@grs^0,c
  8817  0028EC  5020               	movf	___flmul@aexp^0,w,c
  8818  0028EE  C021  F017         	movff	___flmul@bexp,??___flmul
  8819  0028F2  6A18               	clrf	(??___flmul+1)^0,c
  8820  0028F4  2617               	addwf	??___flmul^0,f,c
  8821  0028F6  0E00               	movlw	0
  8822  0028F8  2218               	addwfc	(??___flmul+1)^0,f,c
  8823  0028FA  0E82               	movlw	130
  8824  0028FC  2417               	addwf	??___flmul^0,w,c
  8825  0028FE  6E26               	movwf	___flmul@temp^0,c
  8826  002900  0EFF               	movlw	255
  8827  002902  2018               	addwfc	(??___flmul+1)^0,w,c
  8828  002904  6E27               	movwf	(___flmul@temp+1)^0,c
  8829  002906  EF9A  F014         	goto	l3655
  8830  00290A                     l3649:
  8831  00290A  90D8               	bcf	status,0,c
  8832  00290C  3622               	rlcf	___flmul@prod^0,f,c
  8833  00290E  3623               	rlcf	(___flmul@prod+1)^0,f,c
  8834  002910  3624               	rlcf	(___flmul@prod+2)^0,f,c
  8835  002912  3625               	rlcf	(___flmul@prod+3)^0,f,c
  8836  002914  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  8837  002916  EF8F  F014         	goto	u3731
  8838  00291A  EF91  F014         	goto	u3730
  8839  00291E                     u3731:
  8840  00291E  EF92  F014         	goto	l852
  8841  002922                     u3730:
  8842  002922  8022               	bsf	___flmul@prod^0,0,c
  8843  002924                     l852:
  8844  002924  90D8               	bcf	status,0,c
  8845  002926  361C               	rlcf	___flmul@grs^0,f,c
  8846  002928  361D               	rlcf	(___flmul@grs+1)^0,f,c
  8847  00292A  361E               	rlcf	(___flmul@grs+2)^0,f,c
  8848  00292C  361F               	rlcf	(___flmul@grs+3)^0,f,c
  8849  00292E  0626               	decf	___flmul@temp^0,f,c
  8850  002930  A0D8               	btfss	status,0,c
  8851  002932  0627               	decf	(___flmul@temp+1)^0,f,c
  8852  002934                     l3655:
  8853  002934  AE24               	btfss	(___flmul@prod+2)^0,7,c
  8854  002936  EF9F  F014         	goto	u3741
  8855  00293A  EFA1  F014         	goto	u3740
  8856  00293E                     u3741:
  8857  00293E  EF85  F014         	goto	l3649
  8858  002942                     u3740:
  8859  002942  0E00               	movlw	0
  8860  002944  6E20               	movwf	___flmul@aexp^0,c
  8861  002946  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  8862  002948  EFA8  F014         	goto	u3751
  8863  00294C  EFAA  F014         	goto	u3750
  8864  002950                     u3751:
  8865  002950  EFCE  F014         	goto	l854
  8866  002954                     u3750:
  8867  002954  0EFF               	movlw	255
  8868  002956  141C               	andwf	___flmul@grs^0,w,c
  8869  002958  6E17               	movwf	??___flmul^0,c
  8870  00295A  0EFF               	movlw	255
  8871  00295C  141D               	andwf	(___flmul@grs+1)^0,w,c
  8872  00295E  6E18               	movwf	(??___flmul+1)^0,c
  8873  002960  0EFF               	movlw	255
  8874  002962  141E               	andwf	(___flmul@grs+2)^0,w,c
  8875  002964  6E19               	movwf	(??___flmul+2)^0,c
  8876  002966  0E7F               	movlw	127
  8877  002968  141F               	andwf	(___flmul@grs+3)^0,w,c
  8878  00296A  6E1A               	movwf	(??___flmul+3)^0,c
  8879  00296C  5017               	movf	??___flmul^0,w,c
  8880  00296E  1018               	iorwf	(??___flmul+1)^0,w,c
  8881  002970  1019               	iorwf	(??___flmul+2)^0,w,c
  8882  002972  101A               	iorwf	(??___flmul+3)^0,w,c
  8883  002974  B4D8               	btfsc	status,2,c
  8884  002976  EFBF  F014         	goto	u3761
  8885  00297A  EFC1  F014         	goto	u3760
  8886  00297E                     u3761:
  8887  00297E  EFC5  F014         	goto	l855
  8888  002982                     u3760:
  8889  002982                     l3663:
  8890  002982  0E01               	movlw	1
  8891  002984  6E20               	movwf	___flmul@aexp^0,c
  8892  002986  EFCE  F014         	goto	l854
  8893  00298A                     l855:
  8894  00298A  A022               	btfss	___flmul@prod^0,0,c
  8895  00298C  EFCA  F014         	goto	u3771
  8896  002990  EFCC  F014         	goto	u3770
  8897  002994                     u3771:
  8898  002994  EFCE  F014         	goto	l854
  8899  002998                     u3770:
  8900  002998  EFC1  F014         	goto	l3663
  8901  00299C                     l854:
  8902  00299C  5020               	movf	___flmul@aexp^0,w,c
  8903  00299E  B4D8               	btfsc	status,2,c
  8904  0029A0  EFD4  F014         	goto	u3781
  8905  0029A4  EFD6  F014         	goto	u3780
  8906  0029A8                     u3781:
  8907  0029A8  EFFA  F014         	goto	l3675
  8908  0029AC                     u3780:
  8909  0029AC  0E01               	movlw	1
  8910  0029AE  2622               	addwf	___flmul@prod^0,f,c
  8911  0029B0  0E00               	movlw	0
  8912  0029B2  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8913  0029B4  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8914  0029B6  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8915  0029B8  A025               	btfss	(___flmul@prod+3)^0,0,c
  8916  0029BA  EFE1  F014         	goto	u3791
  8917  0029BE  EFE3  F014         	goto	u3790
  8918  0029C2                     u3791:
  8919  0029C2  EFFA  F014         	goto	l3675
  8920  0029C6                     u3790:
  8921  0029C6  C022  F017         	movff	___flmul@prod,??___flmul
  8922  0029CA  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  8923  0029CE  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  8924  0029D2  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  8925  0029D6  341A               	rlcf	(??___flmul+3)^0,w,c
  8926  0029D8  321A               	rrcf	(??___flmul+3)^0,f,c
  8927  0029DA  3219               	rrcf	(??___flmul+2)^0,f,c
  8928  0029DC  3218               	rrcf	(??___flmul+1)^0,f,c
  8929  0029DE  3217               	rrcf	??___flmul^0,f,c
  8930  0029E0  C017  F022         	movff	??___flmul,___flmul@prod
  8931  0029E4  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  8932  0029E8  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  8933  0029EC  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  8934  0029F0  4A26               	infsnz	___flmul@temp^0,f,c
  8935  0029F2  2A27               	incf	(___flmul@temp+1)^0,f,c
  8936  0029F4                     l3675:
  8937  0029F4  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  8938  0029F6  EF05  F015         	goto	u3801
  8939  0029FA  5027               	movf	(___flmul@temp+1)^0,w,c
  8940  0029FC  E108               	bnz	u3800
  8941  0029FE  2826               	incf	___flmul@temp^0,w,c
  8942  002A00  A0D8               	btfss	status,0,c
  8943  002A02  EF05  F015         	goto	u3801
  8944  002A06  EF07  F015         	goto	u3800
  8945  002A0A                     u3801:
  8946  002A0A  EF11  F015         	goto	l3679
  8947  002A0E                     u3800:
  8948  002A0E  0E00               	movlw	0
  8949  002A10  6E22               	movwf	___flmul@prod^0,c
  8950  002A12  0E00               	movlw	0
  8951  002A14  6E23               	movwf	(___flmul@prod+1)^0,c
  8952  002A16  0E80               	movlw	128
  8953  002A18  6E24               	movwf	(___flmul@prod+2)^0,c
  8954  002A1A  0E7F               	movlw	127
  8955  002A1C  6E25               	movwf	(___flmul@prod+3)^0,c
  8956  002A1E  EF3F  F015         	goto	l3691
  8957  002A22                     l3679:
  8958  002A22  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  8959  002A24  EF1E  F015         	goto	u3810
  8960  002A28  5027               	movf	(___flmul@temp+1)^0,w,c
  8961  002A2A  E106               	bnz	u3811
  8962  002A2C  0426               	decf	___flmul@temp^0,w,c
  8963  002A2E  B0D8               	btfsc	status,0,c
  8964  002A30  EF1C  F015         	goto	u3811
  8965  002A34  EF1E  F015         	goto	u3810
  8966  002A38                     u3811:
  8967  002A38  EF2A  F015         	goto	l862
  8968  002A3C                     u3810:
  8969  002A3C  0E00               	movlw	0
  8970  002A3E  6E22               	movwf	___flmul@prod^0,c
  8971  002A40  0E00               	movlw	0
  8972  002A42  6E23               	movwf	(___flmul@prod+1)^0,c
  8973  002A44  0E00               	movlw	0
  8974  002A46  6E24               	movwf	(___flmul@prod+2)^0,c
  8975  002A48  0E00               	movlw	0
  8976  002A4A  6E25               	movwf	(___flmul@prod+3)^0,c
  8977  002A4C  0E00               	movlw	0
  8978  002A4E  6E1B               	movwf	___flmul@sign^0,c
  8979  002A50  EF3F  F015         	goto	l3691
  8980  002A54                     l862:
  8981  002A54  C026  F021         	movff	___flmul@temp,___flmul@bexp
  8982  002A58  0EFF               	movlw	255
  8983  002A5A  1622               	andwf	___flmul@prod^0,f,c
  8984  002A5C  0EFF               	movlw	255
  8985  002A5E  1623               	andwf	(___flmul@prod+1)^0,f,c
  8986  002A60  0E7F               	movlw	127
  8987  002A62  1624               	andwf	(___flmul@prod+2)^0,f,c
  8988  002A64  0E00               	movlw	0
  8989  002A66  1625               	andwf	(___flmul@prod+3)^0,f,c
  8990  002A68  A021               	btfss	___flmul@bexp^0,0,c
  8991  002A6A  EF39  F015         	goto	u3821
  8992  002A6E  EF3B  F015         	goto	u3820
  8993  002A72                     u3821:
  8994  002A72  EF3C  F015         	goto	l3689
  8995  002A76                     u3820:
  8996  002A76  8E24               	bsf	(___flmul@prod+2)^0,7,c
  8997  002A78                     l3689:
  8998  002A78  90D8               	bcf	status,0,c
  8999  002A7A  3021               	rrcf	___flmul@bexp^0,w,c
  9000  002A7C  6E25               	movwf	(___flmul@prod+3)^0,c
  9001  002A7E                     l3691:
  9002  002A7E  501B               	movf	___flmul@sign^0,w,c
  9003  002A80  1225               	iorwf	(___flmul@prod+3)^0,f,c
  9004  002A82  C022  F00F         	movff	___flmul@prod,?___flmul
  9005  002A86  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  9006  002A8A  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  9007  002A8E  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  9008  002A92                     l849:
  9009  002A92  0012               	return		;funcret
  9010  002A94                     __end_of___flmul:
  9011                           	callstack 0
  9012                           
  9013 ;; *************** function ___flge *****************
  9014 ;; Defined at:
  9015 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\flge.c"
  9016 ;; Parameters:    Size  Location     Type
  9017 ;;  ff1             4   55[COMRAM] unsigned char 
  9018 ;;  ff2             4   59[COMRAM] unsigned char 
  9019 ;; Auto vars:     Size  Location     Type
  9020 ;;		None
  9021 ;; Return value:  Size  Location     Type
  9022 ;;		None               void
  9023 ;; Registers used:
  9024 ;;		wreg, status,2, status,0
  9025 ;; Tracked objects:
  9026 ;;		On entry : 0/0
  9027 ;;		On exit  : 0/0
  9028 ;;		Unchanged: 0/0
  9029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9030 ;;      Params:         8       0       0       0       0       0       0
  9031 ;;      Locals:         0       0       0       0       0       0       0
  9032 ;;      Temps:          4       0       0       0       0       0       0
  9033 ;;      Totals:        12       0       0       0       0       0       0
  9034 ;;Total ram usage:       12 bytes
  9035 ;; Hardware stack levels used:    1
  9036 ;; This function calls:
  9037 ;;		Nothing
  9038 ;; This function is called by:
  9039 ;;		_encher_tanque
  9040 ;;		_efgtoa
  9041 ;; This function uses a non-reentrant model
  9042 ;;
  9043                           
  9044                           	psect	text26
  9045  0037BE                     __ptext26:
  9046                           	callstack 0
  9047  0037BE                     ___flge:
  9048                           	callstack 25
  9049  0037BE  0E00               	movlw	0
  9050  0037C0  1438               	andwf	___flge@ff1^0,w,c
  9051  0037C2  6E40               	movwf	??___flge^0,c
  9052  0037C4  0E00               	movlw	0
  9053  0037C6  1439               	andwf	(___flge@ff1+1)^0,w,c
  9054  0037C8  6E41               	movwf	(??___flge+1)^0,c
  9055  0037CA  0E80               	movlw	128
  9056  0037CC  143A               	andwf	(___flge@ff1+2)^0,w,c
  9057  0037CE  6E42               	movwf	(??___flge+2)^0,c
  9058  0037D0  0E7F               	movlw	127
  9059  0037D2  143B               	andwf	(___flge@ff1+3)^0,w,c
  9060  0037D4  6E43               	movwf	(??___flge+3)^0,c
  9061  0037D6  5040               	movf	??___flge^0,w,c
  9062  0037D8  1041               	iorwf	(??___flge+1)^0,w,c
  9063  0037DA  1042               	iorwf	(??___flge+2)^0,w,c
  9064  0037DC  1043               	iorwf	(??___flge+3)^0,w,c
  9065  0037DE  A4D8               	btfss	status,2,c
  9066  0037E0  EFF4  F01B         	goto	u3981
  9067  0037E4  EFF6  F01B         	goto	u3980
  9068  0037E8                     u3981:
  9069  0037E8  EFFE  F01B         	goto	l3803
  9070  0037EC                     u3980:
  9071  0037EC  0E00               	movlw	0
  9072  0037EE  6E38               	movwf	___flge@ff1^0,c
  9073  0037F0  0E00               	movlw	0
  9074  0037F2  6E39               	movwf	(___flge@ff1+1)^0,c
  9075  0037F4  0E00               	movlw	0
  9076  0037F6  6E3A               	movwf	(___flge@ff1+2)^0,c
  9077  0037F8  0E00               	movlw	0
  9078  0037FA  6E3B               	movwf	(___flge@ff1+3)^0,c
  9079  0037FC                     l3803:
  9080  0037FC  0E00               	movlw	0
  9081  0037FE  143C               	andwf	___flge@ff2^0,w,c
  9082  003800  6E40               	movwf	??___flge^0,c
  9083  003802  0E00               	movlw	0
  9084  003804  143D               	andwf	(___flge@ff2+1)^0,w,c
  9085  003806  6E41               	movwf	(??___flge+1)^0,c
  9086  003808  0E80               	movlw	128
  9087  00380A  143E               	andwf	(___flge@ff2+2)^0,w,c
  9088  00380C  6E42               	movwf	(??___flge+2)^0,c
  9089  00380E  0E7F               	movlw	127
  9090  003810  143F               	andwf	(___flge@ff2+3)^0,w,c
  9091  003812  6E43               	movwf	(??___flge+3)^0,c
  9092  003814  5040               	movf	??___flge^0,w,c
  9093  003816  1041               	iorwf	(??___flge+1)^0,w,c
  9094  003818  1042               	iorwf	(??___flge+2)^0,w,c
  9095  00381A  1043               	iorwf	(??___flge+3)^0,w,c
  9096  00381C  A4D8               	btfss	status,2,c
  9097  00381E  EF13  F01C         	goto	u3991
  9098  003822  EF15  F01C         	goto	u3990
  9099  003826                     u3991:
  9100  003826  EF1D  F01C         	goto	l3807
  9101  00382A                     u3990:
  9102  00382A  0E00               	movlw	0
  9103  00382C  6E3C               	movwf	___flge@ff2^0,c
  9104  00382E  0E00               	movlw	0
  9105  003830  6E3D               	movwf	(___flge@ff2+1)^0,c
  9106  003832  0E00               	movlw	0
  9107  003834  6E3E               	movwf	(___flge@ff2+2)^0,c
  9108  003836  0E00               	movlw	0
  9109  003838  6E3F               	movwf	(___flge@ff2+3)^0,c
  9110  00383A                     l3807:
  9111  00383A  AE3B               	btfss	(___flge@ff1+3)^0,7,c
  9112  00383C  EF22  F01C         	goto	u4001
  9113  003840  EF24  F01C         	goto	u4000
  9114  003844                     u4001:
  9115  003844  EF2D  F01C         	goto	l3811
  9116  003848                     u4000:
  9117  003848  6C38               	negf	___flge@ff1^0,c
  9118  00384A  1E39               	comf	(___flge@ff1+1)^0,f,c
  9119  00384C  B0D8               	btfsc	status,0,c
  9120  00384E  2A39               	incf	(___flge@ff1+1)^0,f,c
  9121  003850  1E3A               	comf	(___flge@ff1+2)^0,f,c
  9122  003852  B0D8               	btfsc	status,0,c
  9123  003854  2A3A               	incf	(___flge@ff1+2)^0,f,c
  9124  003856  0E80               	movlw	128
  9125  003858  563B               	subfwb	(___flge@ff1+3)^0,f,c
  9126  00385A                     l3811:
  9127  00385A  AE3F               	btfss	(___flge@ff2+3)^0,7,c
  9128  00385C  EF32  F01C         	goto	u4011
  9129  003860  EF34  F01C         	goto	u4010
  9130  003864                     u4011:
  9131  003864  EF3D  F01C         	goto	l496
  9132  003868                     u4010:
  9133  003868  6C3C               	negf	___flge@ff2^0,c
  9134  00386A  1E3D               	comf	(___flge@ff2+1)^0,f,c
  9135  00386C  B0D8               	btfsc	status,0,c
  9136  00386E  2A3D               	incf	(___flge@ff2+1)^0,f,c
  9137  003870  1E3E               	comf	(___flge@ff2+2)^0,f,c
  9138  003872  B0D8               	btfsc	status,0,c
  9139  003874  2A3E               	incf	(___flge@ff2+2)^0,f,c
  9140  003876  0E80               	movlw	128
  9141  003878  563F               	subfwb	(___flge@ff2+3)^0,f,c
  9142  00387A                     l496:
  9143  00387A  0E00               	movlw	0
  9144  00387C  1A38               	xorwf	___flge@ff1^0,f,c
  9145  00387E  0E00               	movlw	0
  9146  003880  1A39               	xorwf	(___flge@ff1+1)^0,f,c
  9147  003882  0E00               	movlw	0
  9148  003884  1A3A               	xorwf	(___flge@ff1+2)^0,f,c
  9149  003886  0E80               	movlw	128
  9150  003888  1A3B               	xorwf	(___flge@ff1+3)^0,f,c
  9151  00388A  0E00               	movlw	0
  9152  00388C  1A3C               	xorwf	___flge@ff2^0,f,c
  9153  00388E  0E00               	movlw	0
  9154  003890  1A3D               	xorwf	(___flge@ff2+1)^0,f,c
  9155  003892  0E00               	movlw	0
  9156  003894  1A3E               	xorwf	(___flge@ff2+2)^0,f,c
  9157  003896  0E80               	movlw	128
  9158  003898  1A3F               	xorwf	(___flge@ff2+3)^0,f,c
  9159  00389A  503C               	movf	___flge@ff2^0,w,c
  9160  00389C  5C38               	subwf	___flge@ff1^0,w,c
  9161  00389E  503D               	movf	(___flge@ff2+1)^0,w,c
  9162  0038A0  5839               	subwfb	(___flge@ff1+1)^0,w,c
  9163  0038A2  503E               	movf	(___flge@ff2+2)^0,w,c
  9164  0038A4  583A               	subwfb	(___flge@ff1+2)^0,w,c
  9165  0038A6  503F               	movf	(___flge@ff2+3)^0,w,c
  9166  0038A8  583B               	subwfb	(___flge@ff1+3)^0,w,c
  9167  0038AA  B0D8               	btfsc	status,0,c
  9168  0038AC  EF5A  F01C         	goto	u4021
  9169  0038B0  EF5C  F01C         	goto	u4020
  9170  0038B4                     u4021:
  9171  0038B4  EF5F  F01C         	goto	l3817
  9172  0038B8                     u4020:
  9173  0038B8  90D8               	bcf	status,0,c
  9174  0038BA  EF60  F01C         	goto	l501
  9175  0038BE                     l3817:
  9176  0038BE  80D8               	bsf	status,0,c
  9177  0038C0                     l501:
  9178  0038C0  0012               	return		;funcret
  9179  0038C2                     __end_of___flge:
  9180                           	callstack 0
  9181                           
  9182 ;; *************** function ___fleq *****************
  9183 ;; Defined at:
  9184 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\fleq.c"
  9185 ;; Parameters:    Size  Location     Type
  9186 ;;  ff1             4    0[COMRAM] unsigned char 
  9187 ;;  ff2             4    4[COMRAM] unsigned char 
  9188 ;; Auto vars:     Size  Location     Type
  9189 ;;		None
  9190 ;; Return value:  Size  Location     Type
  9191 ;;		None               void
  9192 ;; Registers used:
  9193 ;;		wreg, status,2, status,0
  9194 ;; Tracked objects:
  9195 ;;		On entry : 0/0
  9196 ;;		On exit  : 0/0
  9197 ;;		Unchanged: 0/0
  9198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9199 ;;      Params:         8       0       0       0       0       0       0
  9200 ;;      Locals:         0       0       0       0       0       0       0
  9201 ;;      Temps:          4       0       0       0       0       0       0
  9202 ;;      Totals:        12       0       0       0       0       0       0
  9203 ;;Total ram usage:       12 bytes
  9204 ;; Hardware stack levels used:    1
  9205 ;; This function calls:
  9206 ;;		Nothing
  9207 ;; This function is called by:
  9208 ;;		_efgtoa
  9209 ;; This function uses a non-reentrant model
  9210 ;;
  9211                           
  9212                           	psect	text27
  9213  003E74                     __ptext27:
  9214                           	callstack 0
  9215  003E74                     ___fleq:
  9216                           	callstack 25
  9217  003E74  0E00               	movlw	0
  9218  003E76  1401               	andwf	___fleq@ff1^0,w,c
  9219  003E78  6E09               	movwf	??___fleq^0,c
  9220  003E7A  0E00               	movlw	0
  9221  003E7C  1402               	andwf	(___fleq@ff1+1)^0,w,c
  9222  003E7E  6E0A               	movwf	(??___fleq+1)^0,c
  9223  003E80  0E80               	movlw	128
  9224  003E82  1403               	andwf	(___fleq@ff1+2)^0,w,c
  9225  003E84  6E0B               	movwf	(??___fleq+2)^0,c
  9226  003E86  0E7F               	movlw	127
  9227  003E88  1404               	andwf	(___fleq@ff1+3)^0,w,c
  9228  003E8A  6E0C               	movwf	(??___fleq+3)^0,c
  9229  003E8C  5009               	movf	??___fleq^0,w,c
  9230  003E8E  100A               	iorwf	(??___fleq+1)^0,w,c
  9231  003E90  100B               	iorwf	(??___fleq+2)^0,w,c
  9232  003E92  100C               	iorwf	(??___fleq+3)^0,w,c
  9233  003E94  A4D8               	btfss	status,2,c
  9234  003E96  EF4F  F01F         	goto	u3951
  9235  003E9A  EF51  F01F         	goto	u3950
  9236  003E9E                     u3951:
  9237  003E9E  EF59  F01F         	goto	l3787
  9238  003EA2                     u3950:
  9239  003EA2  0E00               	movlw	0
  9240  003EA4  6E01               	movwf	___fleq@ff1^0,c
  9241  003EA6  0E00               	movlw	0
  9242  003EA8  6E02               	movwf	(___fleq@ff1+1)^0,c
  9243  003EAA  0E00               	movlw	0
  9244  003EAC  6E03               	movwf	(___fleq@ff1+2)^0,c
  9245  003EAE  0E00               	movlw	0
  9246  003EB0  6E04               	movwf	(___fleq@ff1+3)^0,c
  9247  003EB2                     l3787:
  9248  003EB2  0E00               	movlw	0
  9249  003EB4  1405               	andwf	___fleq@ff2^0,w,c
  9250  003EB6  6E09               	movwf	??___fleq^0,c
  9251  003EB8  0E00               	movlw	0
  9252  003EBA  1406               	andwf	(___fleq@ff2+1)^0,w,c
  9253  003EBC  6E0A               	movwf	(??___fleq+1)^0,c
  9254  003EBE  0E80               	movlw	128
  9255  003EC0  1407               	andwf	(___fleq@ff2+2)^0,w,c
  9256  003EC2  6E0B               	movwf	(??___fleq+2)^0,c
  9257  003EC4  0E7F               	movlw	127
  9258  003EC6  1408               	andwf	(___fleq@ff2+3)^0,w,c
  9259  003EC8  6E0C               	movwf	(??___fleq+3)^0,c
  9260  003ECA  5009               	movf	??___fleq^0,w,c
  9261  003ECC  100A               	iorwf	(??___fleq+1)^0,w,c
  9262  003ECE  100B               	iorwf	(??___fleq+2)^0,w,c
  9263  003ED0  100C               	iorwf	(??___fleq+3)^0,w,c
  9264  003ED2  A4D8               	btfss	status,2,c
  9265  003ED4  EF6E  F01F         	goto	u3961
  9266  003ED8  EF70  F01F         	goto	u3960
  9267  003EDC                     u3961:
  9268  003EDC  EF78  F01F         	goto	l3791
  9269  003EE0                     u3960:
  9270  003EE0  0E00               	movlw	0
  9271  003EE2  6E05               	movwf	___fleq@ff2^0,c
  9272  003EE4  0E00               	movlw	0
  9273  003EE6  6E06               	movwf	(___fleq@ff2+1)^0,c
  9274  003EE8  0E00               	movlw	0
  9275  003EEA  6E07               	movwf	(___fleq@ff2+2)^0,c
  9276  003EEC  0E00               	movlw	0
  9277  003EEE  6E08               	movwf	(___fleq@ff2+3)^0,c
  9278  003EF0                     l3791:
  9279  003EF0  5005               	movf	___fleq@ff2^0,w,c
  9280  003EF2  1801               	xorwf	___fleq@ff1^0,w,c
  9281  003EF4  E10F               	bnz	u3970
  9282  003EF6  5006               	movf	(___fleq@ff2+1)^0,w,c
  9283  003EF8  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  9284  003EFA  E10C               	bnz	u3970
  9285  003EFC  5007               	movf	(___fleq@ff2+2)^0,w,c
  9286  003EFE  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  9287  003F00  E109               	bnz	u3970
  9288  003F02  5008               	movf	(___fleq@ff2+3)^0,w,c
  9289  003F04  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  9290  003F06  B4D8               	btfsc	status,2,c
  9291  003F08  EF88  F01F         	goto	u3971
  9292  003F0C  EF8A  F01F         	goto	u3970
  9293  003F10                     u3971:
  9294  003F10  EF8D  F01F         	goto	l3795
  9295  003F14                     u3970:
  9296  003F14  90D8               	bcf	status,0,c
  9297  003F16  EF8E  F01F         	goto	l490
  9298  003F1A                     l3795:
  9299  003F1A  80D8               	bsf	status,0,c
  9300  003F1C                     l490:
  9301  003F1C  0012               	return		;funcret
  9302  003F1E                     __end_of___fleq:
  9303                           	callstack 0
  9304                           
  9305 ;; *************** function ___fldiv *****************
  9306 ;; Defined at:
  9307 ;;		line 11 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
  9308 ;; Parameters:    Size  Location     Type
  9309 ;;  b               4   55[COMRAM] unsigned char 
  9310 ;;  a               4   59[COMRAM] unsigned char 
  9311 ;; Auto vars:     Size  Location     Type
  9312 ;;  grs             4   74[COMRAM] unsigned long 
  9313 ;;  rem             4   67[COMRAM] unsigned long 
  9314 ;;  new_exp         2   72[COMRAM] short 
  9315 ;;  aexp            1   79[COMRAM] unsigned char 
  9316 ;;  bexp            1   78[COMRAM] unsigned char 
  9317 ;;  sign            1   71[COMRAM] unsigned char 
  9318 ;; Return value:  Size  Location     Type
  9319 ;;                  4   55[COMRAM] unsigned char 
  9320 ;; Registers used:
  9321 ;;		wreg, status,2, status,0
  9322 ;; Tracked objects:
  9323 ;;		On entry : 0/0
  9324 ;;		On exit  : 0/0
  9325 ;;		Unchanged: 0/0
  9326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9327 ;;      Params:         8       0       0       0       0       0       0
  9328 ;;      Locals:        13       0       0       0       0       0       0
  9329 ;;      Temps:          4       0       0       0       0       0       0
  9330 ;;      Totals:        25       0       0       0       0       0       0
  9331 ;;Total ram usage:       25 bytes
  9332 ;; Hardware stack levels used:    1
  9333 ;; This function calls:
  9334 ;;		Nothing
  9335 ;; This function is called by:
  9336 ;;		_encher_tanque
  9337 ;;		_esvaziar_tanque
  9338 ;;		_efgtoa
  9339 ;; This function uses a non-reentrant model
  9340 ;;
  9341                           
  9342                           	psect	text28
  9343  002A94                     __ptext28:
  9344                           	callstack 0
  9345  002A94                     ___fldiv:
  9346                           	callstack 25
  9347  002A94  503B               	movf	(___fldiv@b+3)^0,w,c
  9348  002A96  0B80               	andlw	128
  9349  002A98  6E48               	movwf	___fldiv@sign^0,c
  9350  002A9A  503B               	movf	(___fldiv@b+3)^0,w,c
  9351  002A9C  243B               	addwf	(___fldiv@b+3)^0,w,c
  9352  002A9E  6E4F               	movwf	___fldiv@bexp^0,c
  9353  002AA0  AE3A               	btfss	(___fldiv@b+2)^0,7,c
  9354  002AA2  EF55  F015         	goto	u3411
  9355  002AA6  EF57  F015         	goto	u3410
  9356  002AAA                     u3411:
  9357  002AAA  EF58  F015         	goto	l3435
  9358  002AAE                     u3410:
  9359  002AAE  804F               	bsf	___fldiv@bexp^0,0,c
  9360  002AB0                     l3435:
  9361  002AB0  504F               	movf	___fldiv@bexp^0,w,c
  9362  002AB2  B4D8               	btfsc	status,2,c
  9363  002AB4  EF5E  F015         	goto	u3421
  9364  002AB8  EF60  F015         	goto	u3420
  9365  002ABC                     u3421:
  9366  002ABC  EF75  F015         	goto	l3445
  9367  002AC0                     u3420:
  9368  002AC0  284F               	incf	___fldiv@bexp^0,w,c
  9369  002AC2  A4D8               	btfss	status,2,c
  9370  002AC4  EF66  F015         	goto	u3431
  9371  002AC8  EF68  F015         	goto	u3430
  9372  002ACC                     u3431:
  9373  002ACC  EF70  F015         	goto	l3441
  9374  002AD0                     u3430:
  9375  002AD0  0E00               	movlw	0
  9376  002AD2  6E38               	movwf	___fldiv@b^0,c
  9377  002AD4  0E00               	movlw	0
  9378  002AD6  6E39               	movwf	(___fldiv@b+1)^0,c
  9379  002AD8  0E00               	movlw	0
  9380  002ADA  6E3A               	movwf	(___fldiv@b+2)^0,c
  9381  002ADC  0E00               	movlw	0
  9382  002ADE  6E3B               	movwf	(___fldiv@b+3)^0,c
  9383  002AE0                     l3441:
  9384  002AE0  8E3A               	bsf	(___fldiv@b+2)^0,7,c
  9385  002AE2  0E00               	movlw	0
  9386  002AE4  6E3B               	movwf	(___fldiv@b+3)^0,c
  9387  002AE6  EF7D  F015         	goto	l3447
  9388  002AEA                     l3445:
  9389  002AEA  0E00               	movlw	0
  9390  002AEC  6E38               	movwf	___fldiv@b^0,c
  9391  002AEE  0E00               	movlw	0
  9392  002AF0  6E39               	movwf	(___fldiv@b+1)^0,c
  9393  002AF2  0E00               	movlw	0
  9394  002AF4  6E3A               	movwf	(___fldiv@b+2)^0,c
  9395  002AF6  0E00               	movlw	0
  9396  002AF8  6E3B               	movwf	(___fldiv@b+3)^0,c
  9397  002AFA                     l3447:
  9398  002AFA  503F               	movf	(___fldiv@a+3)^0,w,c
  9399  002AFC  0B80               	andlw	128
  9400  002AFE  1A48               	xorwf	___fldiv@sign^0,f,c
  9401  002B00  503F               	movf	(___fldiv@a+3)^0,w,c
  9402  002B02  243F               	addwf	(___fldiv@a+3)^0,w,c
  9403  002B04  6E50               	movwf	___fldiv@aexp^0,c
  9404  002B06  AE3E               	btfss	(___fldiv@a+2)^0,7,c
  9405  002B08  EF88  F015         	goto	u3441
  9406  002B0C  EF8A  F015         	goto	u3440
  9407  002B10                     u3441:
  9408  002B10  EF8B  F015         	goto	l3455
  9409  002B14                     u3440:
  9410  002B14  8050               	bsf	___fldiv@aexp^0,0,c
  9411  002B16                     l3455:
  9412  002B16  5050               	movf	___fldiv@aexp^0,w,c
  9413  002B18  B4D8               	btfsc	status,2,c
  9414  002B1A  EF91  F015         	goto	u3451
  9415  002B1E  EF93  F015         	goto	u3450
  9416  002B22                     u3451:
  9417  002B22  EFA8  F015         	goto	l3465
  9418  002B26                     u3450:
  9419  002B26  2850               	incf	___fldiv@aexp^0,w,c
  9420  002B28  A4D8               	btfss	status,2,c
  9421  002B2A  EF99  F015         	goto	u3461
  9422  002B2E  EF9B  F015         	goto	u3460
  9423  002B32                     u3461:
  9424  002B32  EFA3  F015         	goto	l3461
  9425  002B36                     u3460:
  9426  002B36  0E00               	movlw	0
  9427  002B38  6E3C               	movwf	___fldiv@a^0,c
  9428  002B3A  0E00               	movlw	0
  9429  002B3C  6E3D               	movwf	(___fldiv@a+1)^0,c
  9430  002B3E  0E00               	movlw	0
  9431  002B40  6E3E               	movwf	(___fldiv@a+2)^0,c
  9432  002B42  0E00               	movlw	0
  9433  002B44  6E3F               	movwf	(___fldiv@a+3)^0,c
  9434  002B46                     l3461:
  9435  002B46  8E3E               	bsf	(___fldiv@a+2)^0,7,c
  9436  002B48  0E00               	movlw	0
  9437  002B4A  6E3F               	movwf	(___fldiv@a+3)^0,c
  9438  002B4C  EFB0  F015         	goto	l3467
  9439  002B50                     l3465:
  9440  002B50  0E00               	movlw	0
  9441  002B52  6E3C               	movwf	___fldiv@a^0,c
  9442  002B54  0E00               	movlw	0
  9443  002B56  6E3D               	movwf	(___fldiv@a+1)^0,c
  9444  002B58  0E00               	movlw	0
  9445  002B5A  6E3E               	movwf	(___fldiv@a+2)^0,c
  9446  002B5C  0E00               	movlw	0
  9447  002B5E  6E3F               	movwf	(___fldiv@a+3)^0,c
  9448  002B60                     l3467:
  9449  002B60  503C               	movf	___fldiv@a^0,w,c
  9450  002B62  103D               	iorwf	(___fldiv@a+1)^0,w,c
  9451  002B64  103E               	iorwf	(___fldiv@a+2)^0,w,c
  9452  002B66  103F               	iorwf	(___fldiv@a+3)^0,w,c
  9453  002B68  A4D8               	btfss	status,2,c
  9454  002B6A  EFB9  F015         	goto	u3471
  9455  002B6E  EFBB  F015         	goto	u3470
  9456  002B72                     u3471:
  9457  002B72  EFD3  F015         	goto	l3479
  9458  002B76                     u3470:
  9459  002B76  0E00               	movlw	0
  9460  002B78  6E38               	movwf	___fldiv@b^0,c
  9461  002B7A  0E00               	movlw	0
  9462  002B7C  6E39               	movwf	(___fldiv@b+1)^0,c
  9463  002B7E  0E00               	movlw	0
  9464  002B80  6E3A               	movwf	(___fldiv@b+2)^0,c
  9465  002B82  0E00               	movlw	0
  9466  002B84  6E3B               	movwf	(___fldiv@b+3)^0,c
  9467  002B86  0E80               	movlw	128
  9468  002B88  123A               	iorwf	(___fldiv@b+2)^0,f,c
  9469  002B8A  0E7F               	movlw	127
  9470  002B8C  123B               	iorwf	(___fldiv@b+3)^0,f,c
  9471  002B8E                     l3473:
  9472  002B8E  5048               	movf	___fldiv@sign^0,w,c
  9473  002B90  123B               	iorwf	(___fldiv@b+3)^0,f,c
  9474  002B92  C038  F038         	movff	___fldiv@b,?___fldiv
  9475  002B96  C039  F039         	movff	___fldiv@b+1,?___fldiv+1
  9476  002B9A  C03A  F03A         	movff	___fldiv@b+2,?___fldiv+2
  9477  002B9E  C03B  F03B         	movff	___fldiv@b+3,?___fldiv+3
  9478  002BA2  EF16  F017         	goto	l813
  9479  002BA6                     l3479:
  9480  002BA6  504F               	movf	___fldiv@bexp^0,w,c
  9481  002BA8  A4D8               	btfss	status,2,c
  9482  002BAA  EFD9  F015         	goto	u3481
  9483  002BAE  EFDB  F015         	goto	u3480
  9484  002BB2                     u3481:
  9485  002BB2  EFE5  F015         	goto	l3487
  9486  002BB6                     u3480:
  9487  002BB6  0E00               	movlw	0
  9488  002BB8  6E38               	movwf	?___fldiv^0,c
  9489  002BBA  0E00               	movlw	0
  9490  002BBC  6E39               	movwf	(?___fldiv+1)^0,c
  9491  002BBE  0E00               	movlw	0
  9492  002BC0  6E3A               	movwf	(?___fldiv+2)^0,c
  9493  002BC2  0E00               	movlw	0
  9494  002BC4  6E3B               	movwf	(?___fldiv+3)^0,c
  9495  002BC6  EF16  F017         	goto	l813
  9496  002BCA                     l3487:
  9497  002BCA  5050               	movf	___fldiv@aexp^0,w,c
  9498  002BCC  C04F  F040         	movff	___fldiv@bexp,??___fldiv
  9499  002BD0  6A41               	clrf	(??___fldiv+1)^0,c
  9500  002BD2  5E40               	subwf	??___fldiv^0,f,c
  9501  002BD4  0E00               	movlw	0
  9502  002BD6  5A41               	subwfb	(??___fldiv+1)^0,f,c
  9503  002BD8  0E7F               	movlw	127
  9504  002BDA  2440               	addwf	??___fldiv^0,w,c
  9505  002BDC  6E49               	movwf	___fldiv@new_exp^0,c
  9506  002BDE  0E00               	movlw	0
  9507  002BE0  2041               	addwfc	(??___fldiv+1)^0,w,c
  9508  002BE2  6E4A               	movwf	(___fldiv@new_exp+1)^0,c
  9509  002BE4  C038  F044         	movff	___fldiv@b,___fldiv@rem
  9510  002BE8  C039  F045         	movff	___fldiv@b+1,___fldiv@rem+1
  9511  002BEC  C03A  F046         	movff	___fldiv@b+2,___fldiv@rem+2
  9512  002BF0  C03B  F047         	movff	___fldiv@b+3,___fldiv@rem+3
  9513  002BF4  0E00               	movlw	0
  9514  002BF6  6E38               	movwf	___fldiv@b^0,c
  9515  002BF8  0E00               	movlw	0
  9516  002BFA  6E39               	movwf	(___fldiv@b+1)^0,c
  9517  002BFC  0E00               	movlw	0
  9518  002BFE  6E3A               	movwf	(___fldiv@b+2)^0,c
  9519  002C00  0E00               	movlw	0
  9520  002C02  6E3B               	movwf	(___fldiv@b+3)^0,c
  9521  002C04  0E00               	movlw	0
  9522  002C06  6E4B               	movwf	___fldiv@grs^0,c
  9523  002C08  0E00               	movlw	0
  9524  002C0A  6E4C               	movwf	(___fldiv@grs+1)^0,c
  9525  002C0C  0E00               	movlw	0
  9526  002C0E  6E4D               	movwf	(___fldiv@grs+2)^0,c
  9527  002C10  0E00               	movlw	0
  9528  002C12  6E4E               	movwf	(___fldiv@grs+3)^0,c
  9529  002C14  0E00               	movlw	0
  9530  002C16  6E50               	movwf	___fldiv@aexp^0,c
  9531  002C18  EF46  F016         	goto	l815
  9532  002C1C                     l3497:
  9533  002C1C  5050               	movf	___fldiv@aexp^0,w,c
  9534  002C1E  B4D8               	btfsc	status,2,c
  9535  002C20  EF14  F016         	goto	u3491
  9536  002C24  EF16  F016         	goto	u3490
  9537  002C28                     u3491:
  9538  002C28  EF2D  F016         	goto	l3505
  9539  002C2C                     u3490:
  9540  002C2C  90D8               	bcf	status,0,c
  9541  002C2E  3644               	rlcf	___fldiv@rem^0,f,c
  9542  002C30  3645               	rlcf	(___fldiv@rem+1)^0,f,c
  9543  002C32  3646               	rlcf	(___fldiv@rem+2)^0,f,c
  9544  002C34  3647               	rlcf	(___fldiv@rem+3)^0,f,c
  9545  002C36  90D8               	bcf	status,0,c
  9546  002C38  3638               	rlcf	___fldiv@b^0,f,c
  9547  002C3A  3639               	rlcf	(___fldiv@b+1)^0,f,c
  9548  002C3C  363A               	rlcf	(___fldiv@b+2)^0,f,c
  9549  002C3E  363B               	rlcf	(___fldiv@b+3)^0,f,c
  9550  002C40  AE4E               	btfss	(___fldiv@grs+3)^0,7,c
  9551  002C42  EF25  F016         	goto	u3501
  9552  002C46  EF27  F016         	goto	u3500
  9553  002C4A                     u3501:
  9554  002C4A  EF28  F016         	goto	l818
  9555  002C4E                     u3500:
  9556  002C4E  8038               	bsf	___fldiv@b^0,0,c
  9557  002C50                     l818:
  9558  002C50  90D8               	bcf	status,0,c
  9559  002C52  364B               	rlcf	___fldiv@grs^0,f,c
  9560  002C54  364C               	rlcf	(___fldiv@grs+1)^0,f,c
  9561  002C56  364D               	rlcf	(___fldiv@grs+2)^0,f,c
  9562  002C58  364E               	rlcf	(___fldiv@grs+3)^0,f,c
  9563  002C5A                     l3505:
  9564  002C5A  503C               	movf	___fldiv@a^0,w,c
  9565  002C5C  5C44               	subwf	___fldiv@rem^0,w,c
  9566  002C5E  503D               	movf	(___fldiv@a+1)^0,w,c
  9567  002C60  5845               	subwfb	(___fldiv@rem+1)^0,w,c
  9568  002C62  503E               	movf	(___fldiv@a+2)^0,w,c
  9569  002C64  5846               	subwfb	(___fldiv@rem+2)^0,w,c
  9570  002C66  503F               	movf	(___fldiv@a+3)^0,w,c
  9571  002C68  5847               	subwfb	(___fldiv@rem+3)^0,w,c
  9572  002C6A  A0D8               	btfss	status,0,c
  9573  002C6C  EF3A  F016         	goto	u3511
  9574  002C70  EF3C  F016         	goto	u3510
  9575  002C74                     u3511:
  9576  002C74  EF45  F016         	goto	l3511
  9577  002C78                     u3510:
  9578  002C78  8C4E               	bsf	(___fldiv@grs+3)^0,6,c
  9579  002C7A  503C               	movf	___fldiv@a^0,w,c
  9580  002C7C  5E44               	subwf	___fldiv@rem^0,f,c
  9581  002C7E  503D               	movf	(___fldiv@a+1)^0,w,c
  9582  002C80  5A45               	subwfb	(___fldiv@rem+1)^0,f,c
  9583  002C82  503E               	movf	(___fldiv@a+2)^0,w,c
  9584  002C84  5A46               	subwfb	(___fldiv@rem+2)^0,f,c
  9585  002C86  503F               	movf	(___fldiv@a+3)^0,w,c
  9586  002C88  5A47               	subwfb	(___fldiv@rem+3)^0,f,c
  9587  002C8A                     l3511:
  9588  002C8A  2A50               	incf	___fldiv@aexp^0,f,c
  9589  002C8C                     l815:
  9590  002C8C  0E19               	movlw	25
  9591  002C8E  6450               	cpfsgt	___fldiv@aexp^0,c
  9592  002C90  EF4C  F016         	goto	u3521
  9593  002C94  EF4E  F016         	goto	u3520
  9594  002C98                     u3521:
  9595  002C98  EF0E  F016         	goto	l3497
  9596  002C9C                     u3520:
  9597  002C9C  5044               	movf	___fldiv@rem^0,w,c
  9598  002C9E  1045               	iorwf	(___fldiv@rem+1)^0,w,c
  9599  002CA0  1046               	iorwf	(___fldiv@rem+2)^0,w,c
  9600  002CA2  1047               	iorwf	(___fldiv@rem+3)^0,w,c
  9601  002CA4  B4D8               	btfsc	status,2,c
  9602  002CA6  EF57  F016         	goto	u3531
  9603  002CAA  EF59  F016         	goto	u3530
  9604  002CAE                     u3531:
  9605  002CAE  EF71  F016         	goto	l3523
  9606  002CB2                     u3530:
  9607  002CB2  804B               	bsf	___fldiv@grs^0,0,c
  9608  002CB4  EF71  F016         	goto	l3523
  9609  002CB8                     l3517:
  9610  002CB8  90D8               	bcf	status,0,c
  9611  002CBA  3638               	rlcf	___fldiv@b^0,f,c
  9612  002CBC  3639               	rlcf	(___fldiv@b+1)^0,f,c
  9613  002CBE  363A               	rlcf	(___fldiv@b+2)^0,f,c
  9614  002CC0  363B               	rlcf	(___fldiv@b+3)^0,f,c
  9615  002CC2  AE4E               	btfss	(___fldiv@grs+3)^0,7,c
  9616  002CC4  EF66  F016         	goto	u3541
  9617  002CC8  EF68  F016         	goto	u3540
  9618  002CCC                     u3541:
  9619  002CCC  EF69  F016         	goto	l824
  9620  002CD0                     u3540:
  9621  002CD0  8038               	bsf	___fldiv@b^0,0,c
  9622  002CD2                     l824:
  9623  002CD2  90D8               	bcf	status,0,c
  9624  002CD4  364B               	rlcf	___fldiv@grs^0,f,c
  9625  002CD6  364C               	rlcf	(___fldiv@grs+1)^0,f,c
  9626  002CD8  364D               	rlcf	(___fldiv@grs+2)^0,f,c
  9627  002CDA  364E               	rlcf	(___fldiv@grs+3)^0,f,c
  9628  002CDC  0649               	decf	___fldiv@new_exp^0,f,c
  9629  002CDE  A0D8               	btfss	status,0,c
  9630  002CE0  064A               	decf	(___fldiv@new_exp+1)^0,f,c
  9631  002CE2                     l3523:
  9632  002CE2  AE3A               	btfss	(___fldiv@b+2)^0,7,c
  9633  002CE4  EF76  F016         	goto	u3551
  9634  002CE8  EF78  F016         	goto	u3550
  9635  002CEC                     u3551:
  9636  002CEC  EF5C  F016         	goto	l3517
  9637  002CF0                     u3550:
  9638  002CF0  0E00               	movlw	0
  9639  002CF2  6E50               	movwf	___fldiv@aexp^0,c
  9640  002CF4  AE4E               	btfss	(___fldiv@grs+3)^0,7,c
  9641  002CF6  EF7F  F016         	goto	u3561
  9642  002CFA  EF81  F016         	goto	u3560
  9643  002CFE                     u3561:
  9644  002CFE  EFA5  F016         	goto	l826
  9645  002D02                     u3560:
  9646  002D02  0EFF               	movlw	255
  9647  002D04  144B               	andwf	___fldiv@grs^0,w,c
  9648  002D06  6E40               	movwf	??___fldiv^0,c
  9649  002D08  0EFF               	movlw	255
  9650  002D0A  144C               	andwf	(___fldiv@grs+1)^0,w,c
  9651  002D0C  6E41               	movwf	(??___fldiv+1)^0,c
  9652  002D0E  0EFF               	movlw	255
  9653  002D10  144D               	andwf	(___fldiv@grs+2)^0,w,c
  9654  002D12  6E42               	movwf	(??___fldiv+2)^0,c
  9655  002D14  0E7F               	movlw	127
  9656  002D16  144E               	andwf	(___fldiv@grs+3)^0,w,c
  9657  002D18  6E43               	movwf	(??___fldiv+3)^0,c
  9658  002D1A  5040               	movf	??___fldiv^0,w,c
  9659  002D1C  1041               	iorwf	(??___fldiv+1)^0,w,c
  9660  002D1E  1042               	iorwf	(??___fldiv+2)^0,w,c
  9661  002D20  1043               	iorwf	(??___fldiv+3)^0,w,c
  9662  002D22  B4D8               	btfsc	status,2,c
  9663  002D24  EF96  F016         	goto	u3571
  9664  002D28  EF98  F016         	goto	u3570
  9665  002D2C                     u3571:
  9666  002D2C  EF9C  F016         	goto	l827
  9667  002D30                     u3570:
  9668  002D30                     l3531:
  9669  002D30  0E01               	movlw	1
  9670  002D32  6E50               	movwf	___fldiv@aexp^0,c
  9671  002D34  EFA5  F016         	goto	l826
  9672  002D38                     l827:
  9673  002D38  A038               	btfss	___fldiv@b^0,0,c
  9674  002D3A  EFA1  F016         	goto	u3581
  9675  002D3E  EFA3  F016         	goto	u3580
  9676  002D42                     u3581:
  9677  002D42  EFA5  F016         	goto	l826
  9678  002D46                     u3580:
  9679  002D46  EF98  F016         	goto	l3531
  9680  002D4A                     l826:
  9681  002D4A  5050               	movf	___fldiv@aexp^0,w,c
  9682  002D4C  B4D8               	btfsc	status,2,c
  9683  002D4E  EFAB  F016         	goto	u3591
  9684  002D52  EFAD  F016         	goto	u3590
  9685  002D56                     u3591:
  9686  002D56  EFD1  F016         	goto	l3543
  9687  002D5A                     u3590:
  9688  002D5A  0E01               	movlw	1
  9689  002D5C  2638               	addwf	___fldiv@b^0,f,c
  9690  002D5E  0E00               	movlw	0
  9691  002D60  2239               	addwfc	(___fldiv@b+1)^0,f,c
  9692  002D62  223A               	addwfc	(___fldiv@b+2)^0,f,c
  9693  002D64  223B               	addwfc	(___fldiv@b+3)^0,f,c
  9694  002D66  A03B               	btfss	(___fldiv@b+3)^0,0,c
  9695  002D68  EFB8  F016         	goto	u3601
  9696  002D6C  EFBA  F016         	goto	u3600
  9697  002D70                     u3601:
  9698  002D70  EFD1  F016         	goto	l3543
  9699  002D74                     u3600:
  9700  002D74  C038  F040         	movff	___fldiv@b,??___fldiv
  9701  002D78  C039  F041         	movff	___fldiv@b+1,??___fldiv+1
  9702  002D7C  C03A  F042         	movff	___fldiv@b+2,??___fldiv+2
  9703  002D80  C03B  F043         	movff	___fldiv@b+3,??___fldiv+3
  9704  002D84  3443               	rlcf	(??___fldiv+3)^0,w,c
  9705  002D86  3243               	rrcf	(??___fldiv+3)^0,f,c
  9706  002D88  3242               	rrcf	(??___fldiv+2)^0,f,c
  9707  002D8A  3241               	rrcf	(??___fldiv+1)^0,f,c
  9708  002D8C  3240               	rrcf	??___fldiv^0,f,c
  9709  002D8E  C040  F038         	movff	??___fldiv,___fldiv@b
  9710  002D92  C041  F039         	movff	??___fldiv+1,___fldiv@b+1
  9711  002D96  C042  F03A         	movff	??___fldiv+2,___fldiv@b+2
  9712  002D9A  C043  F03B         	movff	??___fldiv+3,___fldiv@b+3
  9713  002D9E  4A49               	infsnz	___fldiv@new_exp^0,f,c
  9714  002DA0  2A4A               	incf	(___fldiv@new_exp+1)^0,f,c
  9715  002DA2                     l3543:
  9716  002DA2  BE4A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9717  002DA4  EFDC  F016         	goto	u3611
  9718  002DA8  504A               	movf	(___fldiv@new_exp+1)^0,w,c
  9719  002DAA  E108               	bnz	u3610
  9720  002DAC  2849               	incf	___fldiv@new_exp^0,w,c
  9721  002DAE  A0D8               	btfss	status,0,c
  9722  002DB0  EFDC  F016         	goto	u3611
  9723  002DB4  EFDE  F016         	goto	u3610
  9724  002DB8                     u3611:
  9725  002DB8  EFE9  F016         	goto	l3547
  9726  002DBC                     u3610:
  9727  002DBC  0E00               	movlw	0
  9728  002DBE  6E4A               	movwf	(___fldiv@new_exp+1)^0,c
  9729  002DC0  6849               	setf	___fldiv@new_exp^0,c
  9730  002DC2  0E00               	movlw	0
  9731  002DC4  6E38               	movwf	___fldiv@b^0,c
  9732  002DC6  0E00               	movlw	0
  9733  002DC8  6E39               	movwf	(___fldiv@b+1)^0,c
  9734  002DCA  0E00               	movlw	0
  9735  002DCC  6E3A               	movwf	(___fldiv@b+2)^0,c
  9736  002DCE  0E00               	movlw	0
  9737  002DD0  6E3B               	movwf	(___fldiv@b+3)^0,c
  9738  002DD2                     l3547:
  9739  002DD2  BE4A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9740  002DD4  EFF6  F016         	goto	u3620
  9741  002DD8  504A               	movf	(___fldiv@new_exp+1)^0,w,c
  9742  002DDA  E106               	bnz	u3621
  9743  002DDC  0449               	decf	___fldiv@new_exp^0,w,c
  9744  002DDE  B0D8               	btfsc	status,0,c
  9745  002DE0  EFF4  F016         	goto	u3621
  9746  002DE4  EFF6  F016         	goto	u3620
  9747  002DE8                     u3621:
  9748  002DE8  EF04  F017         	goto	l3551
  9749  002DEC                     u3620:
  9750  002DEC  0E00               	movlw	0
  9751  002DEE  6E4A               	movwf	(___fldiv@new_exp+1)^0,c
  9752  002DF0  0E00               	movlw	0
  9753  002DF2  6E49               	movwf	___fldiv@new_exp^0,c
  9754  002DF4  0E00               	movlw	0
  9755  002DF6  6E38               	movwf	___fldiv@b^0,c
  9756  002DF8  0E00               	movlw	0
  9757  002DFA  6E39               	movwf	(___fldiv@b+1)^0,c
  9758  002DFC  0E00               	movlw	0
  9759  002DFE  6E3A               	movwf	(___fldiv@b+2)^0,c
  9760  002E00  0E00               	movlw	0
  9761  002E02  6E3B               	movwf	(___fldiv@b+3)^0,c
  9762  002E04  0E00               	movlw	0
  9763  002E06  6E48               	movwf	___fldiv@sign^0,c
  9764  002E08                     l3551:
  9765  002E08  C049  F04F         	movff	___fldiv@new_exp,___fldiv@bexp
  9766  002E0C  A04F               	btfss	___fldiv@bexp^0,0,c
  9767  002E0E  EF0B  F017         	goto	u3631
  9768  002E12  EF0D  F017         	goto	u3630
  9769  002E16                     u3631:
  9770  002E16  EF10  F017         	goto	l3557
  9771  002E1A                     u3630:
  9772  002E1A  8E3A               	bsf	(___fldiv@b+2)^0,7,c
  9773  002E1C  EF11  F017         	goto	l3559
  9774  002E20                     l3557:
  9775  002E20  9E3A               	bcf	(___fldiv@b+2)^0,7,c
  9776  002E22                     l3559:
  9777  002E22  90D8               	bcf	status,0,c
  9778  002E24  304F               	rrcf	___fldiv@bexp^0,w,c
  9779  002E26  6E3B               	movwf	(___fldiv@b+3)^0,c
  9780  002E28  EFC7  F015         	goto	l3473
  9781  002E2C                     l813:
  9782  002E2C  0012               	return		;funcret
  9783  002E2E                     __end_of___fldiv:
  9784                           	callstack 0
  9785                           
  9786 ;; *************** function ___awmod *****************
  9787 ;; Defined at:
  9788 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\awmod.c"
  9789 ;; Parameters:    Size  Location     Type
  9790 ;;  dividend        2    0[COMRAM] int 
  9791 ;;  divisor         2    2[COMRAM] int 
  9792 ;; Auto vars:     Size  Location     Type
  9793 ;;  sign            1    5[COMRAM] unsigned char 
  9794 ;;  counter         1    4[COMRAM] unsigned char 
  9795 ;; Return value:  Size  Location     Type
  9796 ;;                  2    0[COMRAM] int 
  9797 ;; Registers used:
  9798 ;;		wreg, status,2, status,0
  9799 ;; Tracked objects:
  9800 ;;		On entry : 0/0
  9801 ;;		On exit  : 0/0
  9802 ;;		Unchanged: 0/0
  9803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9804 ;;      Params:         4       0       0       0       0       0       0
  9805 ;;      Locals:         2       0       0       0       0       0       0
  9806 ;;      Temps:          0       0       0       0       0       0       0
  9807 ;;      Totals:         6       0       0       0       0       0       0
  9808 ;;Total ram usage:        6 bytes
  9809 ;; Hardware stack levels used:    1
  9810 ;; This function calls:
  9811 ;;		Nothing
  9812 ;; This function is called by:
  9813 ;;		_efgtoa
  9814 ;; This function uses a non-reentrant model
  9815 ;;
  9816                           
  9817                           	psect	text29
  9818  003DC4                     __ptext29:
  9819                           	callstack 0
  9820  003DC4                     ___awmod:
  9821                           	callstack 25
  9822  003DC4  0E00               	movlw	0
  9823  003DC6  6E06               	movwf	___awmod@sign^0,c
  9824  003DC8  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  9825  003DCA  EFEB  F01E         	goto	u3890
  9826  003DCE  EFE9  F01E         	goto	u3891
  9827  003DD2                     u3891:
  9828  003DD2  EFF1  F01E         	goto	l3755
  9829  003DD6                     u3890:
  9830  003DD6  6C01               	negf	___awmod@dividend^0,c
  9831  003DD8  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9832  003DDA  B0D8               	btfsc	status,0,c
  9833  003DDC  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9834  003DDE  0E01               	movlw	1
  9835  003DE0  6E06               	movwf	___awmod@sign^0,c
  9836  003DE2                     l3755:
  9837  003DE2  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  9838  003DE4  EFF8  F01E         	goto	u3900
  9839  003DE8  EFF6  F01E         	goto	u3901
  9840  003DEC                     u3901:
  9841  003DEC  EFFC  F01E         	goto	l3759
  9842  003DF0                     u3900:
  9843  003DF0  6C03               	negf	___awmod@divisor^0,c
  9844  003DF2  1E04               	comf	(___awmod@divisor+1)^0,f,c
  9845  003DF4  B0D8               	btfsc	status,0,c
  9846  003DF6  2A04               	incf	(___awmod@divisor+1)^0,f,c
  9847  003DF8                     l3759:
  9848  003DF8  5003               	movf	___awmod@divisor^0,w,c
  9849  003DFA  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  9850  003DFC  B4D8               	btfsc	status,2,c
  9851  003DFE  EF03  F01F         	goto	u3911
  9852  003E02  EF05  F01F         	goto	u3910
  9853  003E06                     u3911:
  9854  003E06  EF29  F01F         	goto	l3775
  9855  003E0A                     u3910:
  9856  003E0A  0E01               	movlw	1
  9857  003E0C  6E05               	movwf	___awmod@counter^0,c
  9858  003E0E  EF0D  F01F         	goto	l3765
  9859  003E12                     l3763:
  9860  003E12  90D8               	bcf	status,0,c
  9861  003E14  3603               	rlcf	___awmod@divisor^0,f,c
  9862  003E16  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  9863  003E18  2A05               	incf	___awmod@counter^0,f,c
  9864  003E1A                     l3765:
  9865  003E1A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  9866  003E1C  EF12  F01F         	goto	u3921
  9867  003E20  EF14  F01F         	goto	u3920
  9868  003E24                     u3921:
  9869  003E24  EF09  F01F         	goto	l3763
  9870  003E28                     u3920:
  9871  003E28                     l3767:
  9872  003E28  5003               	movf	___awmod@divisor^0,w,c
  9873  003E2A  5C01               	subwf	___awmod@dividend^0,w,c
  9874  003E2C  5004               	movf	(___awmod@divisor+1)^0,w,c
  9875  003E2E  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  9876  003E30  A0D8               	btfss	status,0,c
  9877  003E32  EF1D  F01F         	goto	u3931
  9878  003E36  EF1F  F01F         	goto	u3930
  9879  003E3A                     u3931:
  9880  003E3A  EF23  F01F         	goto	l3771
  9881  003E3E                     u3930:
  9882  003E3E  5003               	movf	___awmod@divisor^0,w,c
  9883  003E40  5E01               	subwf	___awmod@dividend^0,f,c
  9884  003E42  5004               	movf	(___awmod@divisor+1)^0,w,c
  9885  003E44  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  9886  003E46                     l3771:
  9887  003E46  90D8               	bcf	status,0,c
  9888  003E48  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  9889  003E4A  3203               	rrcf	___awmod@divisor^0,f,c
  9890  003E4C  2E05               	decfsz	___awmod@counter^0,f,c
  9891  003E4E  EF14  F01F         	goto	l3767
  9892  003E52                     l3775:
  9893  003E52  5006               	movf	___awmod@sign^0,w,c
  9894  003E54  B4D8               	btfsc	status,2,c
  9895  003E56  EF2F  F01F         	goto	u3941
  9896  003E5A  EF31  F01F         	goto	u3940
  9897  003E5E                     u3941:
  9898  003E5E  EF35  F01F         	goto	l3779
  9899  003E62                     u3940:
  9900  003E62  6C01               	negf	___awmod@dividend^0,c
  9901  003E64  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9902  003E66  B0D8               	btfsc	status,0,c
  9903  003E68  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9904  003E6A                     l3779:
  9905  003E6A  C001  F001         	movff	___awmod@dividend,?___awmod
  9906  003E6E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  9907  003E72  0012               	return		;funcret
  9908  003E74                     __end_of___awmod:
  9909                           	callstack 0
  9910                           
  9911 ;; *************** function ___awdiv *****************
  9912 ;; Defined at:
  9913 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  9914 ;; Parameters:    Size  Location     Type
  9915 ;;  dividend        2    0[COMRAM] int 
  9916 ;;  divisor         2    2[COMRAM] int 
  9917 ;; Auto vars:     Size  Location     Type
  9918 ;;  quotient        2    6[COMRAM] int 
  9919 ;;  sign            1    5[COMRAM] unsigned char 
  9920 ;;  counter         1    4[COMRAM] unsigned char 
  9921 ;; Return value:  Size  Location     Type
  9922 ;;                  2    0[COMRAM] int 
  9923 ;; Registers used:
  9924 ;;		wreg, status,2, status,0
  9925 ;; Tracked objects:
  9926 ;;		On entry : 0/0
  9927 ;;		On exit  : 0/0
  9928 ;;		Unchanged: 0/0
  9929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9930 ;;      Params:         4       0       0       0       0       0       0
  9931 ;;      Locals:         4       0       0       0       0       0       0
  9932 ;;      Temps:          0       0       0       0       0       0       0
  9933 ;;      Totals:         8       0       0       0       0       0       0
  9934 ;;Total ram usage:        8 bytes
  9935 ;; Hardware stack levels used:    1
  9936 ;; This function calls:
  9937 ;;		Nothing
  9938 ;; This function is called by:
  9939 ;;		_efgtoa
  9940 ;; This function uses a non-reentrant model
  9941 ;;
  9942                           
  9943                           	psect	text30
  9944  003D00                     __ptext30:
  9945                           	callstack 0
  9946  003D00                     ___awdiv:
  9947                           	callstack 25
  9948  003D00  0E00               	movlw	0
  9949  003D02  6E06               	movwf	___awdiv@sign^0,c
  9950  003D04  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  9951  003D06  EF89  F01E         	goto	u3830
  9952  003D0A  EF87  F01E         	goto	u3831
  9953  003D0E                     u3831:
  9954  003D0E  EF8F  F01E         	goto	l3711
  9955  003D12                     u3830:
  9956  003D12  6C03               	negf	___awdiv@divisor^0,c
  9957  003D14  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  9958  003D16  B0D8               	btfsc	status,0,c
  9959  003D18  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  9960  003D1A  0E01               	movlw	1
  9961  003D1C  6E06               	movwf	___awdiv@sign^0,c
  9962  003D1E                     l3711:
  9963  003D1E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  9964  003D20  EF96  F01E         	goto	u3840
  9965  003D24  EF94  F01E         	goto	u3841
  9966  003D28                     u3841:
  9967  003D28  EF9C  F01E         	goto	l3717
  9968  003D2C                     u3840:
  9969  003D2C  6C01               	negf	___awdiv@dividend^0,c
  9970  003D2E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  9971  003D30  B0D8               	btfsc	status,0,c
  9972  003D32  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  9973  003D34  0E01               	movlw	1
  9974  003D36  1A06               	xorwf	___awdiv@sign^0,f,c
  9975  003D38                     l3717:
  9976  003D38  0E00               	movlw	0
  9977  003D3A  6E08               	movwf	(___awdiv@quotient+1)^0,c
  9978  003D3C  0E00               	movlw	0
  9979  003D3E  6E07               	movwf	___awdiv@quotient^0,c
  9980  003D40  5003               	movf	___awdiv@divisor^0,w,c
  9981  003D42  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  9982  003D44  B4D8               	btfsc	status,2,c
  9983  003D46  EFA7  F01E         	goto	u3851
  9984  003D4A  EFA9  F01E         	goto	u3850
  9985  003D4E                     u3851:
  9986  003D4E  EFD1  F01E         	goto	l3739
  9987  003D52                     u3850:
  9988  003D52  0E01               	movlw	1
  9989  003D54  6E05               	movwf	___awdiv@counter^0,c
  9990  003D56  EFB1  F01E         	goto	l3725
  9991  003D5A                     l3723:
  9992  003D5A  90D8               	bcf	status,0,c
  9993  003D5C  3603               	rlcf	___awdiv@divisor^0,f,c
  9994  003D5E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  9995  003D60  2A05               	incf	___awdiv@counter^0,f,c
  9996  003D62                     l3725:
  9997  003D62  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  9998  003D64  EFB6  F01E         	goto	u3861
  9999  003D68  EFB8  F01E         	goto	u3860
 10000  003D6C                     u3861:
 10001  003D6C  EFAD  F01E         	goto	l3723
 10002  003D70                     u3860:
 10003  003D70                     l3727:
 10004  003D70  90D8               	bcf	status,0,c
 10005  003D72  3607               	rlcf	___awdiv@quotient^0,f,c
 10006  003D74  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 10007  003D76  5003               	movf	___awdiv@divisor^0,w,c
 10008  003D78  5C01               	subwf	___awdiv@dividend^0,w,c
 10009  003D7A  5004               	movf	(___awdiv@divisor+1)^0,w,c
 10010  003D7C  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 10011  003D7E  A0D8               	btfss	status,0,c
 10012  003D80  EFC4  F01E         	goto	u3871
 10013  003D84  EFC6  F01E         	goto	u3870
 10014  003D88                     u3871:
 10015  003D88  EFCB  F01E         	goto	l3735
 10016  003D8C                     u3870:
 10017  003D8C  5003               	movf	___awdiv@divisor^0,w,c
 10018  003D8E  5E01               	subwf	___awdiv@dividend^0,f,c
 10019  003D90  5004               	movf	(___awdiv@divisor+1)^0,w,c
 10020  003D92  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 10021  003D94  8007               	bsf	___awdiv@quotient^0,0,c
 10022  003D96                     l3735:
 10023  003D96  90D8               	bcf	status,0,c
 10024  003D98  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 10025  003D9A  3203               	rrcf	___awdiv@divisor^0,f,c
 10026  003D9C  2E05               	decfsz	___awdiv@counter^0,f,c
 10027  003D9E  EFB8  F01E         	goto	l3727
 10028  003DA2                     l3739:
 10029  003DA2  5006               	movf	___awdiv@sign^0,w,c
 10030  003DA4  B4D8               	btfsc	status,2,c
 10031  003DA6  EFD7  F01E         	goto	u3881
 10032  003DAA  EFD9  F01E         	goto	u3880
 10033  003DAE                     u3881:
 10034  003DAE  EFDD  F01E         	goto	l3743
 10035  003DB2                     u3880:
 10036  003DB2  6C07               	negf	___awdiv@quotient^0,c
 10037  003DB4  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 10038  003DB6  B0D8               	btfsc	status,0,c
 10039  003DB8  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 10040  003DBA                     l3743:
 10041  003DBA  C007  F001         	movff	___awdiv@quotient,?___awdiv
 10042  003DBE  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 10043  003DC2  0012               	return		;funcret
 10044  003DC4                     __end_of___awdiv:
 10045                           	callstack 0
 10046                           
 10047 ;; *************** function _atoi *****************
 10048 ;; Defined at:
 10049 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\atoi.c"
 10050 ;; Parameters:    Size  Location     Type
 10051 ;;  s               2    7[COMRAM] PTR const unsigned char 
 10052 ;;		 -> STR_28(5), STR_22(5), STR_12(5), 
 10053 ;; Auto vars:     Size  Location     Type
 10054 ;;  n               2   20[COMRAM] int 
 10055 ;;  neg             2   13[COMRAM] int 
 10056 ;; Return value:  Size  Location     Type
 10057 ;;                  2    7[COMRAM] int 
 10058 ;; Registers used:
 10059 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10060 ;; Tracked objects:
 10061 ;;		On entry : 0/0
 10062 ;;		On exit  : 0/0
 10063 ;;		Unchanged: 0/0
 10064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10065 ;;      Params:         2       0       0       0       0       0       0
 10066 ;;      Locals:         9       0       0       0       0       0       0
 10067 ;;      Temps:          4       0       0       0       0       0       0
 10068 ;;      Totals:        15       0       0       0       0       0       0
 10069 ;;Total ram usage:       15 bytes
 10070 ;; Hardware stack levels used:    1
 10071 ;; Hardware stack levels required when called:    1
 10072 ;; This function calls:
 10073 ;;		___wmul
 10074 ;;		_isdigit
 10075 ;;		_isspace
 10076 ;; This function is called by:
 10077 ;;		_vfpfcnvrt
 10078 ;; This function uses a non-reentrant model
 10079 ;;
 10080                           
 10081                           	psect	text31
 10082  0033BE                     __ptext31:
 10083                           	callstack 0
 10084  0033BE                     _atoi:
 10085                           	callstack 25
 10086  0033BE  0E00               	movlw	0
 10087  0033C0  6E16               	movwf	(atoi@n+1)^0,c
 10088  0033C2  0E00               	movlw	0
 10089  0033C4  6E15               	movwf	atoi@n^0,c
 10090  0033C6  0E00               	movlw	0
 10091  0033C8  6E0F               	movwf	(atoi@neg+1)^0,c
 10092  0033CA  0E00               	movlw	0
 10093  0033CC  6E0E               	movwf	atoi@neg^0,c
 10094  0033CE  EFEB  F019         	goto	l4277
 10095  0033D2                     l4275:
 10096  0033D2  4A08               	infsnz	atoi@s^0,f,c
 10097  0033D4  2A09               	incf	(atoi@s+1)^0,f,c
 10098  0033D6                     l4277:
 10099  0033D6  0E01               	movlw	1
 10100  0033D8  6E14               	movwf	_atoi$833^0,c
 10101  0033DA  C008  FFF6         	movff	atoi@s,tblptrl
 10102  0033DE  C009  FFF7         	movff	atoi@s+1,tblptrh
 10103  0033E2                     	if	0	;tblptru may be non-zero
 10104  0033E2                     	endif
 10105  0033E2                     	if	0	;tblptru may be non-zero
 10106  0033E2                     	endif
 10107  0033E2  0008               	tblrd		*
 10108  0033E4  50F5               	movf	tablat,w,c
 10109  0033E6  0A20               	xorlw	32
 10110  0033E8  B4D8               	btfsc	status,2,c
 10111  0033EA  EFF9  F019         	goto	u4931
 10112  0033EE  EFFB  F019         	goto	u4930
 10113  0033F2                     u4931:
 10114  0033F2  EF18  F01A         	goto	l4285
 10115  0033F6                     u4930:
 10116  0033F6  0EF7               	movlw	247
 10117  0033F8  6E0A               	movwf	??_atoi^0,c
 10118  0033FA  0EFF               	movlw	255
 10119  0033FC  6E0B               	movwf	(??_atoi+1)^0,c
 10120  0033FE  C008  FFF6         	movff	atoi@s,tblptrl
 10121  003402  C009  FFF7         	movff	atoi@s+1,tblptrh
 10122  003406                     	if	0	;tblptru may be non-zero
 10123  003406                     	endif
 10124  003406                     	if	0	;tblptru may be non-zero
 10125  003406                     	endif
 10126  003406  0008               	tblrd		*
 10127  003408  50F5               	movf	tablat,w,c
 10128  00340A  6E0C               	movwf	(??_atoi+2)^0,c
 10129  00340C  6A0D               	clrf	(??_atoi+3)^0,c
 10130  00340E  500A               	movf	??_atoi^0,w,c
 10131  003410  260C               	addwf	(??_atoi+2)^0,f,c
 10132  003412  500B               	movf	(??_atoi+1)^0,w,c
 10133  003414  220D               	addwfc	(??_atoi+3)^0,f,c
 10134  003416  500D               	movf	(??_atoi+3)^0,w,c
 10135  003418  E109               	bnz	u4940
 10136  00341A  0E05               	movlw	5
 10137  00341C  5C0C               	subwf	(??_atoi+2)^0,w,c
 10138  00341E  A0D8               	btfss	status,0,c
 10139  003420  EF14  F01A         	goto	u4941
 10140  003424  EF16  F01A         	goto	u4940
 10141  003428                     u4941:
 10142  003428  EF18  F01A         	goto	l4285
 10143  00342C                     u4940:
 10144  00342C  0E00               	movlw	0
 10145  00342E  6E14               	movwf	_atoi$833^0,c
 10146  003430                     l4285:
 10147  003430  C014  F010         	movff	_atoi$833,_atoi$832
 10148  003434  6A11               	clrf	(_atoi$832+1)^0,c
 10149  003436  5010               	movf	_atoi$832^0,w,c
 10150  003438  1011               	iorwf	(_atoi$832+1)^0,w,c
 10151  00343A  A4D8               	btfss	status,2,c
 10152  00343C  EF22  F01A         	goto	u4951
 10153  003440  EF24  F01A         	goto	u4950
 10154  003444                     u4951:
 10155  003444  EFE9  F019         	goto	l4275
 10156  003448                     u4950:
 10157  003448  EF2E  F01A         	goto	l4295
 10158  00344C                     l4291:
 10159  00344C  0E00               	movlw	0
 10160  00344E  6E0F               	movwf	(atoi@neg+1)^0,c
 10161  003450  0E01               	movlw	1
 10162  003452  6E0E               	movwf	atoi@neg^0,c
 10163  003454                     l4293:
 10164  003454  4A08               	infsnz	atoi@s^0,f,c
 10165  003456  2A09               	incf	(atoi@s+1)^0,f,c
 10166  003458  EF63  F01A         	goto	l4301
 10167  00345C                     l4295:
 10168  00345C  C008  FFF6         	movff	atoi@s,tblptrl
 10169  003460  C009  FFF7         	movff	atoi@s+1,tblptrh
 10170  003464                     	if	0	;tblptru may be non-zero
 10171  003464                     	endif
 10172  003464                     	if	0	;tblptru may be non-zero
 10173  003464                     	endif
 10174  003464  0008               	tblrd		*
 10175  003466  50F5               	movf	tablat,w,c
 10176  003468  6E0A               	movwf	??_atoi^0,c
 10177  00346A  6A0B               	clrf	(??_atoi+1)^0,c
 10178                           
 10179                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10180                           ; Switch size 1, requested type "simple"
 10181                           ; Number of cases is 1, Range of values is 0 to 0
 10182                           ; switch strategies available:
 10183                           ; Name         Instructions Cycles
 10184                           ; simple_byte            4     3 (average)
 10185                           ;	Chosen strategy is simple_byte
 10186  00346C  500B               	movf	(??_atoi+1)^0,w,c
 10187  00346E  0A00               	xorlw	0	; case 0
 10188  003470  B4D8               	btfsc	status,2,c
 10189  003472  EF3D  F01A         	goto	l5157
 10190  003476  EF63  F01A         	goto	l4301
 10191  00347A                     l5157:
 10192                           
 10193                           ; Switch size 1, requested type "simple"
 10194                           ; Number of cases is 2, Range of values is 43 to 45
 10195                           ; switch strategies available:
 10196                           ; Name         Instructions Cycles
 10197                           ; simple_byte            7     4 (average)
 10198                           ;	Chosen strategy is simple_byte
 10199  00347A  500A               	movf	??_atoi^0,w,c
 10200  00347C  0A2B               	xorlw	43	; case 43
 10201  00347E  B4D8               	btfsc	status,2,c
 10202  003480  EF2A  F01A         	goto	l4293
 10203  003484  0A06               	xorlw	6	; case 45
 10204  003486  B4D8               	btfsc	status,2,c
 10205  003488  EF26  F01A         	goto	l4291
 10206  00348C  EF63  F01A         	goto	l4301
 10207  003490                     l4297:
 10208  003490  C015  F001         	movff	atoi@n,___wmul@multiplier
 10209  003494  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 10210  003498  0E00               	movlw	0
 10211  00349A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10212  00349C  0E0A               	movlw	10
 10213  00349E  6E03               	movwf	___wmul@multiplicand^0,c
 10214  0034A0  ECD2  F022         	call	___wmul	;wreg free
 10215  0034A4  C008  FFF6         	movff	atoi@s,tblptrl
 10216  0034A8  C009  FFF7         	movff	atoi@s+1,tblptrh
 10217  0034AC                     	if	0	;tblptru may be non-zero
 10218  0034AC                     	endif
 10219  0034AC                     	if	0	;tblptru may be non-zero
 10220  0034AC                     	endif
 10221  0034AC  0008               	tblrd		*
 10222  0034AE  50F5               	movf	tablat,w,c
 10223  0034B0  5E01               	subwf	?___wmul^0,f,c
 10224  0034B2  0E00               	movlw	0
 10225  0034B4  5A02               	subwfb	(?___wmul+1)^0,f,c
 10226  0034B6  0E30               	movlw	48
 10227  0034B8  2401               	addwf	?___wmul^0,w,c
 10228  0034BA  6E15               	movwf	atoi@n^0,c
 10229  0034BC  0E00               	movlw	0
 10230  0034BE  2002               	addwfc	(?___wmul+1)^0,w,c
 10231  0034C0  6E16               	movwf	(atoi@n+1)^0,c
 10232  0034C2  EF2A  F01A         	goto	l4293
 10233  0034C6                     l4301:
 10234  0034C6  0ED0               	movlw	208
 10235  0034C8  6E0A               	movwf	??_atoi^0,c
 10236  0034CA  0EFF               	movlw	255
 10237  0034CC  6E0B               	movwf	(??_atoi+1)^0,c
 10238  0034CE  C008  FFF6         	movff	atoi@s,tblptrl
 10239  0034D2  C009  FFF7         	movff	atoi@s+1,tblptrh
 10240  0034D6                     	if	0	;tblptru may be non-zero
 10241  0034D6                     	endif
 10242  0034D6                     	if	0	;tblptru may be non-zero
 10243  0034D6                     	endif
 10244  0034D6  0008               	tblrd		*
 10245  0034D8  50F5               	movf	tablat,w,c
 10246  0034DA  6E0C               	movwf	(??_atoi+2)^0,c
 10247  0034DC  6A0D               	clrf	(??_atoi+3)^0,c
 10248  0034DE  500A               	movf	??_atoi^0,w,c
 10249  0034E0  260C               	addwf	(??_atoi+2)^0,f,c
 10250  0034E2  500B               	movf	(??_atoi+1)^0,w,c
 10251  0034E4  220D               	addwfc	(??_atoi+3)^0,f,c
 10252  0034E6  500D               	movf	(??_atoi+3)^0,w,c
 10253  0034E8  E10A               	bnz	u4960
 10254  0034EA  0E0A               	movlw	10
 10255  0034EC  5C0C               	subwf	(??_atoi+2)^0,w,c
 10256  0034EE  A0D8               	btfss	status,0,c
 10257  0034F0  EF7C  F01A         	goto	u4961
 10258  0034F4  EF7F  F01A         	goto	u4960
 10259  0034F8                     u4961:
 10260  0034F8  0E01               	movlw	1
 10261  0034FA  EF80  F01A         	goto	u4970
 10262  0034FE                     u4960:
 10263  0034FE  0E00               	movlw	0
 10264  003500                     u4970:
 10265  003500  6E12               	movwf	_atoi$834^0,c
 10266  003502  6A13               	clrf	(_atoi$834+1)^0,c
 10267  003504  5012               	movf	_atoi$834^0,w,c
 10268  003506  1013               	iorwf	(_atoi$834+1)^0,w,c
 10269  003508  A4D8               	btfss	status,2,c
 10270  00350A  EF89  F01A         	goto	u4981
 10271  00350E  EF8B  F01A         	goto	u4980
 10272  003512                     u4981:
 10273  003512  EF48  F01A         	goto	l4297
 10274  003516                     u4980:
 10275  003516  500E               	movf	atoi@neg^0,w,c
 10276  003518  100F               	iorwf	(atoi@neg+1)^0,w,c
 10277  00351A  A4D8               	btfss	status,2,c
 10278  00351C  EF92  F01A         	goto	u4991
 10279  003520  EF94  F01A         	goto	u4990
 10280  003524                     u4991:
 10281  003524  EFA2  F01A         	goto	l1116
 10282  003528                     u4990:
 10283  003528  C015  F00A         	movff	atoi@n,??_atoi
 10284  00352C  C016  F00B         	movff	atoi@n+1,??_atoi+1
 10285  003530  1E0A               	comf	??_atoi^0,f,c
 10286  003532  1E0B               	comf	(??_atoi+1)^0,f,c
 10287  003534  4A0A               	infsnz	??_atoi^0,f,c
 10288  003536  2A0B               	incf	(??_atoi+1)^0,f,c
 10289  003538  C00A  F008         	movff	??_atoi,?_atoi
 10290  00353C  C00B  F009         	movff	??_atoi+1,?_atoi+1
 10291  003540  EFA6  F01A         	goto	l1119
 10292  003544                     l1116:
 10293  003544  C015  F008         	movff	atoi@n,?_atoi
 10294  003548  C016  F009         	movff	atoi@n+1,?_atoi+1
 10295  00354C                     l1119:
 10296  00354C  0012               	return		;funcret
 10297  00354E                     __end_of_atoi:
 10298                           	callstack 0
 10299                           
 10300 ;; *************** function _isspace *****************
 10301 ;; Defined at:
 10302 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\isspace.c"
 10303 ;; Parameters:    Size  Location     Type
 10304 ;;  c               2    0[COMRAM] int 
 10305 ;; Auto vars:     Size  Location     Type
 10306 ;;		None
 10307 ;; Return value:  Size  Location     Type
 10308 ;;                  2    0[COMRAM] int 
 10309 ;; Registers used:
 10310 ;;		wreg, status,2, status,0
 10311 ;; Tracked objects:
 10312 ;;		On entry : 0/0
 10313 ;;		On exit  : 0/0
 10314 ;;		Unchanged: 0/0
 10315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10316 ;;      Params:         2       0       0       0       0       0       0
 10317 ;;      Locals:         1       0       0       0       0       0       0
 10318 ;;      Temps:          4       0       0       0       0       0       0
 10319 ;;      Totals:         7       0       0       0       0       0       0
 10320 ;;Total ram usage:        7 bytes
 10321 ;; Hardware stack levels used:    1
 10322 ;; This function calls:
 10323 ;;		Nothing
 10324 ;; This function is called by:
 10325 ;;		_atoi
 10326 ;; This function uses a non-reentrant model
 10327 ;;
 10328                           
 10329                           	psect	text32
 10330  00436C                     __ptext32:
 10331                           	callstack 0
 10332  00436C                     _isspace:
 10333                           	callstack 25
 10334  00436C  0E01               	movlw	1
 10335  00436E  6E07               	movwf	_isspace$863^0,c
 10336  004370  0E20               	movlw	32
 10337  004372  1801               	xorwf	isspace@c^0,w,c
 10338  004374  1002               	iorwf	(isspace@c+1)^0,w,c
 10339  004376  B4D8               	btfsc	status,2,c
 10340  004378  EFC0  F021         	goto	u4391
 10341  00437C  EFC2  F021         	goto	u4390
 10342  004380                     u4391:
 10343  004380  EFDB  F021         	goto	l3971
 10344  004384                     u4390:
 10345  004384  0EF7               	movlw	247
 10346  004386  6E03               	movwf	??_isspace^0,c
 10347  004388  0EFF               	movlw	255
 10348  00438A  6E04               	movwf	(??_isspace+1)^0,c
 10349  00438C  C001  F005         	movff	isspace@c,??_isspace+2
 10350  004390  C002  F006         	movff	isspace@c+1,??_isspace+3
 10351  004394  5003               	movf	??_isspace^0,w,c
 10352  004396  2605               	addwf	(??_isspace+2)^0,f,c
 10353  004398  5004               	movf	(??_isspace+1)^0,w,c
 10354  00439A  2206               	addwfc	(??_isspace+3)^0,f,c
 10355  00439C  5006               	movf	(??_isspace+3)^0,w,c
 10356  00439E  E109               	bnz	u4400
 10357  0043A0  0E05               	movlw	5
 10358  0043A2  5C05               	subwf	(??_isspace+2)^0,w,c
 10359  0043A4  A0D8               	btfss	status,0,c
 10360  0043A6  EFD7  F021         	goto	u4401
 10361  0043AA  EFD9  F021         	goto	u4400
 10362  0043AE                     u4401:
 10363  0043AE  EFDB  F021         	goto	l3971
 10364  0043B2                     u4400:
 10365  0043B2  0E00               	movlw	0
 10366  0043B4  6E07               	movwf	_isspace$863^0,c
 10367  0043B6                     l3971:
 10368  0043B6  C007  F001         	movff	_isspace$863,?_isspace
 10369  0043BA  6A02               	clrf	(?_isspace+1)^0,c
 10370  0043BC  0012               	return		;funcret
 10371  0043BE                     __end_of_isspace:
 10372                           	callstack 0
 10373                           
 10374 ;; *************** function _isdigit *****************
 10375 ;; Defined at:
 10376 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\isdigit.c"
 10377 ;; Parameters:    Size  Location     Type
 10378 ;;  c               2    0[COMRAM] int 
 10379 ;; Auto vars:     Size  Location     Type
 10380 ;;		None
 10381 ;; Return value:  Size  Location     Type
 10382 ;;                  2    0[COMRAM] int 
 10383 ;; Registers used:
 10384 ;;		wreg, status,2, status,0
 10385 ;; Tracked objects:
 10386 ;;		On entry : 0/0
 10387 ;;		On exit  : 0/0
 10388 ;;		Unchanged: 0/0
 10389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10390 ;;      Params:         2       0       0       0       0       0       0
 10391 ;;      Locals:         0       0       0       0       0       0       0
 10392 ;;      Temps:          4       0       0       0       0       0       0
 10393 ;;      Totals:         6       0       0       0       0       0       0
 10394 ;;Total ram usage:        6 bytes
 10395 ;; Hardware stack levels used:    1
 10396 ;; This function calls:
 10397 ;;		Nothing
 10398 ;; This function is called by:
 10399 ;;		_vfpfcnvrt
 10400 ;;		_atoi
 10401 ;; This function uses a non-reentrant model
 10402 ;;
 10403                           
 10404                           	psect	text33
 10405  0044B8                     __ptext33:
 10406                           	callstack 0
 10407  0044B8                     _isdigit:
 10408                           	callstack 26
 10409  0044B8  0ED0               	movlw	208
 10410  0044BA  6E03               	movwf	??_isdigit^0,c
 10411  0044BC  0EFF               	movlw	255
 10412  0044BE  6E04               	movwf	(??_isdigit+1)^0,c
 10413  0044C0  C001  F005         	movff	isdigit@c,??_isdigit+2
 10414  0044C4  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 10415  0044C8  5003               	movf	??_isdigit^0,w,c
 10416  0044CA  2605               	addwf	(??_isdigit+2)^0,f,c
 10417  0044CC  5004               	movf	(??_isdigit+1)^0,w,c
 10418  0044CE  2206               	addwfc	(??_isdigit+3)^0,f,c
 10419  0044D0  5006               	movf	(??_isdigit+3)^0,w,c
 10420  0044D2  E10A               	bnz	u4370
 10421  0044D4  0E0A               	movlw	10
 10422  0044D6  5C05               	subwf	(??_isdigit+2)^0,w,c
 10423  0044D8  A0D8               	btfss	status,0,c
 10424  0044DA  EF71  F022         	goto	u4371
 10425  0044DE  EF74  F022         	goto	u4370
 10426  0044E2                     u4371:
 10427  0044E2  0E01               	movlw	1
 10428  0044E4  EF75  F022         	goto	u4380
 10429  0044E8                     u4370:
 10430  0044E8  0E00               	movlw	0
 10431  0044EA                     u4380:
 10432  0044EA  6E01               	movwf	?_isdigit^0,c
 10433  0044EC  6A02               	clrf	(?_isdigit+1)^0,c
 10434  0044EE  0012               	return		;funcret
 10435  0044F0                     __end_of_isdigit:
 10436                           	callstack 0
 10437                           
 10438 ;; *************** function _pwmSet1 *****************
 10439 ;; Defined at:
 10440 ;;		line 23 in file "pwm.c"
 10441 ;; Parameters:    Size  Location     Type
 10442 ;;  porcento        1    wreg     unsigned char 
 10443 ;; Auto vars:     Size  Location     Type
 10444 ;;  porcento        1    9[COMRAM] unsigned char 
 10445 ;;  val             2   10[COMRAM] unsigned int 
 10446 ;; Return value:  Size  Location     Type
 10447 ;;                  1    wreg      void 
 10448 ;; Registers used:
 10449 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10450 ;; Tracked objects:
 10451 ;;		On entry : 0/0
 10452 ;;		On exit  : 0/0
 10453 ;;		Unchanged: 0/0
 10454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10455 ;;      Params:         0       0       0       0       0       0       0
 10456 ;;      Locals:         3       0       0       0       0       0       0
 10457 ;;      Temps:          2       0       0       0       0       0       0
 10458 ;;      Totals:         5       0       0       0       0       0       0
 10459 ;;Total ram usage:        5 bytes
 10460 ;; Hardware stack levels used:    1
 10461 ;; Hardware stack levels required when called:    1
 10462 ;; This function calls:
 10463 ;;		___lwdiv
 10464 ;;		___wmul
 10465 ;; This function is called by:
 10466 ;;		_encher_tanque
 10467 ;;		_esvaziar_tanque
 10468 ;; This function uses a non-reentrant model
 10469 ;;
 10470                           
 10471                           	psect	text34
 10472  00400A                     __ptext34:
 10473                           	callstack 0
 10474  00400A                     _pwmSet1:
 10475                           	callstack 28
 10476                           
 10477                           ;incstack = 0
 10478                           ;pwmSet1@porcento stored from wreg
 10479  00400A  6E0A               	movwf	pwmSet1@porcento^0,c
 10480  00400C                     
 10481                           ;pwm.c: 23: void pwmSet1(unsigned char porcento);pwm.c: 24: {;pwm.c: 30:  unsigned int v
      +                          al = ((unsigned int)porcento) *((*(volatile __near unsigned char*)0xFCB)+1);
 10482  00400C  0E01               	movlw	1
 10483  00400E  24CB               	addwf	203,w,c	;volatile
 10484  004010  6E01               	movwf	___wmul@multiplier^0,c
 10485  004012  6A02               	clrf	(___wmul@multiplier+1)^0,c
 10486  004014  0E00               	movlw	0
 10487  004016  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
 10488  004018  C00A  F003         	movff	pwmSet1@porcento,___wmul@multiplicand
 10489  00401C  6A04               	clrf	(___wmul@multiplicand+1)^0,c
 10490  00401E  ECD2  F022         	call	___wmul	;wreg free
 10491  004022  C001  F00B         	movff	?___wmul,pwmSet1@val
 10492  004026  C002  F00C         	movff	?___wmul+1,pwmSet1@val+1
 10493  00402A                     
 10494                           ;pwm.c: 31:  val = val / 25;
 10495  00402A  C00B  F001         	movff	pwmSet1@val,___lwdiv@dividend
 10496  00402E  C00C  F002         	movff	pwmSet1@val+1,___lwdiv@dividend+1
 10497  004032  0E00               	movlw	0
 10498  004034  6E04               	movwf	(___lwdiv@divisor+1)^0,c
 10499  004036  0E19               	movlw	25
 10500  004038  6E03               	movwf	___lwdiv@divisor^0,c
 10501  00403A  ECCB  F01F         	call	___lwdiv	;wreg free
 10502  00403E  C001  F00B         	movff	?___lwdiv,pwmSet1@val
 10503  004042  C002  F00C         	movff	?___lwdiv+1,pwmSet1@val+1
 10504  004046                     
 10505                           ;pwm.c: 33:  val &= 0x03ff;
 10506  004046  0EFF               	movlw	255
 10507  004048  160B               	andwf	pwmSet1@val^0,f,c
 10508  00404A  0E03               	movlw	3
 10509  00404C  160C               	andwf	(pwmSet1@val+1)^0,f,c
 10510  00404E                     
 10511                           ;pwm.c: 35:  (*(volatile __near unsigned char*)0xFBE) = val >> 2;
 10512  00404E  C00B  F008         	movff	pwmSet1@val,??_pwmSet1
 10513  004052  C00C  F009         	movff	pwmSet1@val+1,??_pwmSet1+1
 10514  004056  90D8               	bcf	status,0,c
 10515  004058  3209               	rrcf	(??_pwmSet1+1)^0,f,c
 10516  00405A  3208               	rrcf	??_pwmSet1^0,f,c
 10517  00405C  90D8               	bcf	status,0,c
 10518  00405E  3209               	rrcf	(??_pwmSet1+1)^0,f,c
 10519  004060  3208               	rrcf	??_pwmSet1^0,f,c
 10520  004062  5008               	movf	??_pwmSet1^0,w,c
 10521  004064  6EBE               	movwf	190,c	;volatile
 10522  004066                     
 10523                           ;pwm.c: 37:  (*(volatile __near unsigned char*)0xFBD) |= (val & 0x0003) << 4;
 10524  004066  C00B  F008         	movff	pwmSet1@val,??_pwmSet1
 10525  00406A  0E03               	movlw	3
 10526  00406C  1608               	andwf	??_pwmSet1^0,f,c
 10527  00406E  3808               	swapf	??_pwmSet1^0,w,c
 10528  004070  0BF0               	andlw	240
 10529  004072  12BD               	iorwf	189,f,c	;volatile
 10530  004074  0012               	return		;funcret
 10531  004076                     __end_of_pwmSet1:
 10532                           	callstack 0
 10533                           
 10534 ;; *************** function ___wmul *****************
 10535 ;; Defined at:
 10536 ;;		line 15 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 10537 ;; Parameters:    Size  Location     Type
 10538 ;;  multiplier      2    0[COMRAM] unsigned int 
 10539 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10540 ;; Auto vars:     Size  Location     Type
 10541 ;;  product         2    4[COMRAM] unsigned int 
 10542 ;; Return value:  Size  Location     Type
 10543 ;;                  2    0[COMRAM] unsigned int 
 10544 ;; Registers used:
 10545 ;;		wreg, status,2, status,0, prodl, prodh
 10546 ;; Tracked objects:
 10547 ;;		On entry : 0/0
 10548 ;;		On exit  : 0/0
 10549 ;;		Unchanged: 0/0
 10550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10551 ;;      Params:         4       0       0       0       0       0       0
 10552 ;;      Locals:         2       0       0       0       0       0       0
 10553 ;;      Temps:          0       0       0       0       0       0       0
 10554 ;;      Totals:         6       0       0       0       0       0       0
 10555 ;;Total ram usage:        6 bytes
 10556 ;; Hardware stack levels used:    1
 10557 ;; This function calls:
 10558 ;;		Nothing
 10559 ;; This function is called by:
 10560 ;;		_pwmSet1
 10561 ;;		_encher_tanque
 10562 ;;		_esvaziar_tanque
 10563 ;;		_atoi
 10564 ;;		_pwmSet2
 10565 ;; This function uses a non-reentrant model
 10566 ;;
 10567                           
 10568                           	psect	text35
 10569  0045A4                     __ptext35:
 10570                           	callstack 0
 10571  0045A4                     ___wmul:
 10572                           	callstack 25
 10573  0045A4  5001               	movf	___wmul@multiplier^0,w,c
 10574  0045A6  0203               	mulwf	___wmul@multiplicand^0,c
 10575  0045A8  CFF3 F005          	movff	prodl,___wmul@product
 10576  0045AC  CFF4 F006          	movff	prodh,___wmul@product+1
 10577  0045B0  5001               	movf	___wmul@multiplier^0,w,c
 10578  0045B2  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 10579  0045B4  50F3               	movf	243,w,c
 10580  0045B6  2606               	addwf	(___wmul@product+1)^0,f,c
 10581  0045B8  5002               	movf	(___wmul@multiplier+1)^0,w,c
 10582  0045BA  0203               	mulwf	___wmul@multiplicand^0,c
 10583  0045BC  50F3               	movf	243,w,c
 10584  0045BE  2606               	addwf	(___wmul@product+1)^0,f,c
 10585  0045C0  C005  F001         	movff	___wmul@product,?___wmul
 10586  0045C4  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10587  0045C8  0012               	return		;funcret
 10588  0045CA                     __end_of___wmul:
 10589                           	callstack 0
 10590                           
 10591 ;; *************** function ___lwdiv *****************
 10592 ;; Defined at:
 10593 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\lwdiv.c"
 10594 ;; Parameters:    Size  Location     Type
 10595 ;;  dividend        2    0[COMRAM] unsigned int 
 10596 ;;  divisor         2    2[COMRAM] unsigned int 
 10597 ;; Auto vars:     Size  Location     Type
 10598 ;;  quotient        2    4[COMRAM] unsigned int 
 10599 ;;  counter         1    6[COMRAM] unsigned char 
 10600 ;; Return value:  Size  Location     Type
 10601 ;;                  2    0[COMRAM] unsigned int 
 10602 ;; Registers used:
 10603 ;;		wreg, status,2, status,0
 10604 ;; Tracked objects:
 10605 ;;		On entry : 0/0
 10606 ;;		On exit  : 0/0
 10607 ;;		Unchanged: 0/0
 10608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10609 ;;      Params:         4       0       0       0       0       0       0
 10610 ;;      Locals:         3       0       0       0       0       0       0
 10611 ;;      Temps:          0       0       0       0       0       0       0
 10612 ;;      Totals:         7       0       0       0       0       0       0
 10613 ;;Total ram usage:        7 bytes
 10614 ;; Hardware stack levels used:    1
 10615 ;; This function calls:
 10616 ;;		Nothing
 10617 ;; This function is called by:
 10618 ;;		_pwmSet1
 10619 ;;		_encher_tanque
 10620 ;;		_esvaziar_tanque
 10621 ;;		_pwmSet2
 10622 ;; This function uses a non-reentrant model
 10623 ;;
 10624                           
 10625                           	psect	text36
 10626  003F96                     __ptext36:
 10627                           	callstack 0
 10628  003F96                     ___lwdiv:
 10629                           	callstack 28
 10630  003F96  0E00               	movlw	0
 10631  003F98  6E06               	movwf	(___lwdiv@quotient+1)^0,c
 10632  003F9A  0E00               	movlw	0
 10633  003F9C  6E05               	movwf	___lwdiv@quotient^0,c
 10634  003F9E  5003               	movf	___lwdiv@divisor^0,w,c
 10635  003FA0  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
 10636  003FA2  B4D8               	btfsc	status,2,c
 10637  003FA4  EFD6  F01F         	goto	u5221
 10638  003FA8  EFD8  F01F         	goto	u5220
 10639  003FAC                     u5221:
 10640  003FAC  EF00  F020         	goto	l722
 10641  003FB0                     u5220:
 10642  003FB0  0E01               	movlw	1
 10643  003FB2  6E07               	movwf	___lwdiv@counter^0,c
 10644  003FB4  EFE0  F01F         	goto	l4475
 10645  003FB8                     l4473:
 10646  003FB8  90D8               	bcf	status,0,c
 10647  003FBA  3603               	rlcf	___lwdiv@divisor^0,f,c
 10648  003FBC  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
 10649  003FBE  2A07               	incf	___lwdiv@counter^0,f,c
 10650  003FC0                     l4475:
 10651  003FC0  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
 10652  003FC2  EFE5  F01F         	goto	u5231
 10653  003FC6  EFE7  F01F         	goto	u5230
 10654  003FCA                     u5231:
 10655  003FCA  EFDC  F01F         	goto	l4473
 10656  003FCE                     u5230:
 10657  003FCE                     l4477:
 10658  003FCE  90D8               	bcf	status,0,c
 10659  003FD0  3605               	rlcf	___lwdiv@quotient^0,f,c
 10660  003FD2  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
 10661  003FD4  5003               	movf	___lwdiv@divisor^0,w,c
 10662  003FD6  5C01               	subwf	___lwdiv@dividend^0,w,c
 10663  003FD8  5004               	movf	(___lwdiv@divisor+1)^0,w,c
 10664  003FDA  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
 10665  003FDC  A0D8               	btfss	status,0,c
 10666  003FDE  EFF3  F01F         	goto	u5241
 10667  003FE2  EFF5  F01F         	goto	u5240
 10668  003FE6                     u5241:
 10669  003FE6  EFFA  F01F         	goto	l4485
 10670  003FEA                     u5240:
 10671  003FEA  5003               	movf	___lwdiv@divisor^0,w,c
 10672  003FEC  5E01               	subwf	___lwdiv@dividend^0,f,c
 10673  003FEE  5004               	movf	(___lwdiv@divisor+1)^0,w,c
 10674  003FF0  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
 10675  003FF2  8005               	bsf	___lwdiv@quotient^0,0,c
 10676  003FF4                     l4485:
 10677  003FF4  90D8               	bcf	status,0,c
 10678  003FF6  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
 10679  003FF8  3203               	rrcf	___lwdiv@divisor^0,f,c
 10680  003FFA  2E07               	decfsz	___lwdiv@counter^0,f,c
 10681  003FFC  EFE7  F01F         	goto	l4477
 10682  004000                     l722:
 10683  004000  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 10684  004004  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10685  004008  0012               	return		;funcret
 10686  00400A                     __end_of___lwdiv:
 10687                           	callstack 0
 10688                           
 10689 ;; *************** function _pwmInit *****************
 10690 ;; Defined at:
 10691 ;;		line 59 in file "pwm.c"
 10692 ;; Parameters:    Size  Location     Type
 10693 ;;		None
 10694 ;; Auto vars:     Size  Location     Type
 10695 ;;		None
 10696 ;; Return value:  Size  Location     Type
 10697 ;;                  1    wreg      void 
 10698 ;; Registers used:
 10699 ;;		wreg, status,2, status,0
 10700 ;; Tracked objects:
 10701 ;;		On entry : 0/0
 10702 ;;		On exit  : 0/0
 10703 ;;		Unchanged: 0/0
 10704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10705 ;;      Params:         0       0       0       0       0       0       0
 10706 ;;      Locals:         0       0       0       0       0       0       0
 10707 ;;      Temps:          0       0       0       0       0       0       0
 10708 ;;      Totals:         0       0       0       0       0       0       0
 10709 ;;Total ram usage:        0 bytes
 10710 ;; Hardware stack levels used:    1
 10711 ;; This function calls:
 10712 ;;		Nothing
 10713 ;; This function is called by:
 10714 ;;		_encher_tanque
 10715 ;;		_esvaziar_tanque
 10716 ;; This function uses a non-reentrant model
 10717 ;;
 10718                           
 10719                           	psect	text37
 10720  0045CA                     __ptext37:
 10721                           	callstack 0
 10722  0045CA                     _pwmInit:
 10723                           	callstack 29
 10724  0045CA                     
 10725                           ;pwm.c: 61:  (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<1));
 10726  0045CA  9294               	bcf	148,1,c	;volatile
 10727                           
 10728                           ;pwm.c: 62:  (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<2));
 10729  0045CC  9494               	bcf	148,2,c	;volatile
 10730  0045CE                     
 10731                           ;pwm.c: 64:  (*(volatile __near unsigned char*)0xFCA) |= 0b00000011;
 10732  0045CE  0E03               	movlw	3
 10733  0045D0  12CA               	iorwf	202,f,c	;volatile
 10734  0045D2                     
 10735                           ;pwm.c: 65:  (((*(volatile __near unsigned char*)0xFCA)) |= (1<<2));
 10736  0045D2  84CA               	bsf	202,2,c	;volatile
 10737                           
 10738                           ;pwm.c: 68:  (*(volatile __near unsigned char*)0xFBD) |= 0b00001100;
 10739  0045D4  0E0C               	movlw	12
 10740  0045D6  12BD               	iorwf	189,f,c	;volatile
 10741                           
 10742                           ;pwm.c: 69:  (*(volatile __near unsigned char*)0xFBA) |= 0b00001100;
 10743  0045D8  0E0C               	movlw	12
 10744  0045DA  12BA               	iorwf	186,f,c	;volatile
 10745  0045DC  0012               	return		;funcret
 10746  0045DE                     __end_of_pwmInit:
 10747                           	callstack 0
 10748                           
 10749 ;; *************** function _lcd_str *****************
 10750 ;; Defined at:
 10751 ;;		line 47 in file "lcd.c"
 10752 ;; Parameters:    Size  Location     Type
 10753 ;;  str             2    7[COMRAM] PTR const unsigned char 
 10754 ;;		 -> STR_31(11), STR_30(3), STR_29(8), ver_quantidade@y(8), 
 10755 ;;		 -> STR_27(14), STR_26(13), STR_25(9), STR_24(14), 
 10756 ;;		 -> STR_23(3), esvaziar_tanque@y(8), STR_21(11), STR_20(14), 
 10757 ;;		 -> STR_19(11), STR_18(11), STR_17(14), STR_16(13), 
 10758 ;;		 -> STR_15(9), STR_14(12), STR_13(3), encher_tanque@y(8), 
 10759 ;;		 -> STR_11(11), STR_10(16), STR_9(11), STR_8(11), 
 10760 ;;		 -> STR_7(14), STR_6(10), STR_5(15), STR_4(15), 
 10761 ;;		 -> STR_3(14), STR_2(11), STR_1(17), 
 10762 ;; Auto vars:     Size  Location     Type
 10763 ;;  i               1   11[COMRAM] unsigned char 
 10764 ;; Return value:  Size  Location     Type
 10765 ;;                  1    wreg      void 
 10766 ;; Registers used:
 10767 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10768 ;; Tracked objects:
 10769 ;;		On entry : 0/0
 10770 ;;		On exit  : 0/0
 10771 ;;		Unchanged: 0/0
 10772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10773 ;;      Params:         2       0       0       0       0       0       0
 10774 ;;      Locals:         1       0       0       0       0       0       0
 10775 ;;      Temps:          2       0       0       0       0       0       0
 10776 ;;      Totals:         5       0       0       0       0       0       0
 10777 ;;Total ram usage:        5 bytes
 10778 ;; Hardware stack levels used:    1
 10779 ;; Hardware stack levels required when called:    2
 10780 ;; This function calls:
 10781 ;;		_lcd_dat
 10782 ;; This function is called by:
 10783 ;;		_main
 10784 ;;		_encher_tanque
 10785 ;;		_esvaziar_tanque
 10786 ;;		_ver_quantidade
 10787 ;; This function uses a non-reentrant model
 10788 ;;
 10789                           
 10790                           	psect	text38
 10791  003F1E                     __ptext38:
 10792                           	callstack 0
 10793  003F1E                     _lcd_str:
 10794                           	callstack 27
 10795  003F1E                     
 10796                           ;lcd.c: 48:     unsigned char i = 0;
 10797  003F1E  0E00               	movlw	0
 10798  003F20  6E0C               	movwf	lcd_str@i^0,c
 10799                           
 10800                           ;lcd.c: 50:     while (str[i] != 0) {
 10801  003F22  EFAC  F01F         	goto	l4517
 10802  003F26                     l4513:
 10803                           
 10804                           ;lcd.c: 51:         lcd_dat(str[i]);
 10805  003F26  500C               	movf	lcd_str@i^0,w,c
 10806  003F28  2408               	addwf	lcd_str@str^0,w,c
 10807  003F2A  6E0A               	movwf	??_lcd_str^0,c
 10808  003F2C  0E00               	movlw	0
 10809  003F2E  2009               	addwfc	(lcd_str@str+1)^0,w,c
 10810  003F30  6E0B               	movwf	(??_lcd_str+1)^0,c
 10811  003F32  C00A  FFF6         	movff	??_lcd_str,tblptrl
 10812  003F36  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
 10813  003F3A  6AF8               	clrf	tblptru,c
 10814  003F3C  0E05               	movlw	(high __ramtop+-1)
 10815  003F3E  64F7               	cpfsgt	tblptrh,c
 10816  003F40  D003               	bra	u5267
 10817  003F42  0008               	tblrd		*
 10818  003F44  50F5               	movf	tablat,w,c
 10819  003F46  D005               	bra	u5260
 10820  003F48                     u5267:
 10821  003F48  CFF6 FFE9          	movff	tblptrl,fsr0l
 10822  003F4C  CFF7 FFEA          	movff	tblptrh,fsr0h
 10823  003F50  50EF               	movf	indf0,w,c
 10824  003F52                     u5260:
 10825  003F52  ECA8  F022         	call	_lcd_dat
 10826  003F56                     
 10827                           ;lcd.c: 52:         i++;
 10828  003F56  2A0C               	incf	lcd_str@i^0,f,c
 10829  003F58                     l4517:
 10830                           
 10831                           ;lcd.c: 50:     while (str[i] != 0) {
 10832  003F58  500C               	movf	lcd_str@i^0,w,c
 10833  003F5A  2408               	addwf	lcd_str@str^0,w,c
 10834  003F5C  6E0A               	movwf	??_lcd_str^0,c
 10835  003F5E  0E00               	movlw	0
 10836  003F60  2009               	addwfc	(lcd_str@str+1)^0,w,c
 10837  003F62  6E0B               	movwf	(??_lcd_str+1)^0,c
 10838  003F64  C00A  FFF6         	movff	??_lcd_str,tblptrl
 10839  003F68  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
 10840  003F6C  6AF8               	clrf	tblptru,c
 10841  003F6E  0E05               	movlw	(high __ramtop+-1)
 10842  003F70  64F7               	cpfsgt	tblptrh,c
 10843  003F72  D003               	bra	u5277
 10844  003F74  0008               	tblrd		*
 10845  003F76  50F5               	movf	tablat,w,c
 10846  003F78  D005               	bra	u5270
 10847  003F7A                     u5277:
 10848  003F7A  CFF6 FFE9          	movff	tblptrl,fsr0l
 10849  003F7E  CFF7 FFEA          	movff	tblptrh,fsr0h
 10850  003F82  50EF               	movf	indf0,w,c
 10851  003F84                     u5270:
 10852  003F84  0900               	iorlw	0
 10853  003F86  A4D8               	btfss	status,2,c
 10854  003F88  EFC8  F01F         	goto	u5281
 10855  003F8C  EFCA  F01F         	goto	u5280
 10856  003F90                     u5281:
 10857  003F90  EF93  F01F         	goto	l4513
 10858  003F94                     u5280:
 10859  003F94  0012               	return		;funcret
 10860  003F96                     __end_of_lcd_str:
 10861                           	callstack 0
 10862                           
 10863 ;; *************** function _lcd_dat *****************
 10864 ;; Defined at:
 10865 ;;		line 19 in file "lcd.c"
 10866 ;; Parameters:    Size  Location     Type
 10867 ;;  val             1    wreg     unsigned char 
 10868 ;; Auto vars:     Size  Location     Type
 10869 ;;  val             1    6[COMRAM] unsigned char 
 10870 ;; Return value:  Size  Location     Type
 10871 ;;                  1    wreg      void 
 10872 ;; Registers used:
 10873 ;;		wreg, status,2, status,0, cstack
 10874 ;; Tracked objects:
 10875 ;;		On entry : 0/0
 10876 ;;		On exit  : 0/0
 10877 ;;		Unchanged: 0/0
 10878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10879 ;;      Params:         0       0       0       0       0       0       0
 10880 ;;      Locals:         1       0       0       0       0       0       0
 10881 ;;      Temps:          0       0       0       0       0       0       0
 10882 ;;      Totals:         1       0       0       0       0       0       0
 10883 ;;Total ram usage:        1 bytes
 10884 ;; Hardware stack levels used:    1
 10885 ;; Hardware stack levels required when called:    1
 10886 ;; This function calls:
 10887 ;;		_atraso_ms
 10888 ;;		_lcd_wr
 10889 ;; This function is called by:
 10890 ;;		_lcd_str
 10891 ;;		_encher_tanque
 10892 ;;		_esvaziar_tanque
 10893 ;; This function uses a non-reentrant model
 10894 ;;
 10895                           
 10896                           	psect	text39
 10897  004550                     __ptext39:
 10898                           	callstack 0
 10899  004550                     _lcd_dat:
 10900                           	callstack 27
 10901                           
 10902                           ;incstack = 0
 10903                           ;lcd_dat@val stored from wreg
 10904  004550  6E07               	movwf	lcd_dat@val^0,c
 10905  004552                     
 10906                           ;lcd.c: 20:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
 10907  004552  8284               	bsf	132,1,c	;volatile
 10908  004554                     
 10909                           ;lcd.c: 21:     lcd_wr(val);
 10910  004554  5007               	movf	lcd_dat@val^0,w,c
 10911  004556  ECF3  F022         	call	_lcd_wr
 10912  00455A                     
 10913                           ;lcd.c: 22:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<2));
 10914  00455A  8484               	bsf	132,2,c	;volatile
 10915  00455C                     
 10916                           ;lcd.c: 23:     atraso_ms(3);
 10917  00455C  0E00               	movlw	0
 10918  00455E  6E02               	movwf	(atraso_ms@t+1)^0,c
 10919  004560  0E03               	movlw	3
 10920  004562  6E01               	movwf	atraso_ms@t^0,c
 10921  004564  EC3B  F020         	call	_atraso_ms	;wreg free
 10922  004568                     
 10923                           ;lcd.c: 24:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
 10924  004568  9284               	bcf	132,1,c	;volatile
 10925  00456A                     
 10926                           ;lcd.c: 25:     atraso_ms(3);
 10927  00456A  0E00               	movlw	0
 10928  00456C  6E02               	movwf	(atraso_ms@t+1)^0,c
 10929  00456E  0E03               	movlw	3
 10930  004570  6E01               	movwf	atraso_ms@t^0,c
 10931  004572  EC3B  F020         	call	_atraso_ms	;wreg free
 10932  004576                     
 10933                           ;lcd.c: 26:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
 10934  004576  8284               	bsf	132,1,c	;volatile
 10935  004578  0012               	return		;funcret
 10936  00457A                     __end_of_lcd_dat:
 10937                           	callstack 0
 10938                           
 10939 ;; *************** function _lcd_cmd *****************
 10940 ;; Defined at:
 10941 ;;		line 9 in file "lcd.c"
 10942 ;; Parameters:    Size  Location     Type
 10943 ;;  val             1    wreg     unsigned char 
 10944 ;; Auto vars:     Size  Location     Type
 10945 ;;  val             1    6[COMRAM] unsigned char 
 10946 ;; Return value:  Size  Location     Type
 10947 ;;                  1    wreg      void 
 10948 ;; Registers used:
 10949 ;;		wreg, status,2, status,0, cstack
 10950 ;; Tracked objects:
 10951 ;;		On entry : 0/0
 10952 ;;		On exit  : 0/0
 10953 ;;		Unchanged: 0/0
 10954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10955 ;;      Params:         0       0       0       0       0       0       0
 10956 ;;      Locals:         1       0       0       0       0       0       0
 10957 ;;      Temps:          0       0       0       0       0       0       0
 10958 ;;      Totals:         1       0       0       0       0       0       0
 10959 ;;Total ram usage:        1 bytes
 10960 ;; Hardware stack levels used:    1
 10961 ;; Hardware stack levels required when called:    1
 10962 ;; This function calls:
 10963 ;;		_atraso_ms
 10964 ;;		_lcd_wr
 10965 ;; This function is called by:
 10966 ;;		_main
 10967 ;;		_lcd_init
 10968 ;;		_encher_tanque
 10969 ;;		_esvaziar_tanque
 10970 ;;		_ver_quantidade
 10971 ;; This function uses a non-reentrant model
 10972 ;;
 10973                           
 10974                           	psect	text40
 10975  00457A                     __ptext40:
 10976                           	callstack 0
 10977  00457A                     _lcd_cmd:
 10978                           	callstack 28
 10979                           
 10980                           ;incstack = 0
 10981                           ;lcd_cmd@val stored from wreg
 10982  00457A  6E07               	movwf	lcd_cmd@val^0,c
 10983  00457C                     
 10984                           ;lcd.c: 10:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
 10985  00457C  8284               	bsf	132,1,c	;volatile
 10986  00457E                     
 10987                           ;lcd.c: 11:     lcd_wr(val);
 10988  00457E  5007               	movf	lcd_cmd@val^0,w,c
 10989  004580  ECF3  F022         	call	_lcd_wr
 10990  004584                     
 10991                           ;lcd.c: 12:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<2));
 10992  004584  9484               	bcf	132,2,c	;volatile
 10993  004586                     
 10994                           ;lcd.c: 13:     atraso_ms(3);
 10995  004586  0E00               	movlw	0
 10996  004588  6E02               	movwf	(atraso_ms@t+1)^0,c
 10997  00458A  0E03               	movlw	3
 10998  00458C  6E01               	movwf	atraso_ms@t^0,c
 10999  00458E  EC3B  F020         	call	_atraso_ms	;wreg free
 11000  004592                     
 11001                           ;lcd.c: 14:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
 11002  004592  9284               	bcf	132,1,c	;volatile
 11003  004594                     
 11004                           ;lcd.c: 15:     atraso_ms(3);
 11005  004594  0E00               	movlw	0
 11006  004596  6E02               	movwf	(atraso_ms@t+1)^0,c
 11007  004598  0E03               	movlw	3
 11008  00459A  6E01               	movwf	atraso_ms@t^0,c
 11009  00459C  EC3B  F020         	call	_atraso_ms	;wreg free
 11010  0045A0                     
 11011                           ;lcd.c: 16:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
 11012  0045A0  8284               	bsf	132,1,c	;volatile
 11013  0045A2  0012               	return		;funcret
 11014  0045A4                     __end_of_lcd_cmd:
 11015                           	callstack 0
 11016                           
 11017 ;; *************** function _lcd_wr *****************
 11018 ;; Defined at:
 11019 ;;		line 5 in file "lcd.c"
 11020 ;; Parameters:    Size  Location     Type
 11021 ;;  val             1    wreg     unsigned char 
 11022 ;; Auto vars:     Size  Location     Type
 11023 ;;  val             1    0[COMRAM] unsigned char 
 11024 ;; Return value:  Size  Location     Type
 11025 ;;                  1    wreg      void 
 11026 ;; Registers used:
 11027 ;;		wreg
 11028 ;; Tracked objects:
 11029 ;;		On entry : 0/0
 11030 ;;		On exit  : 0/0
 11031 ;;		Unchanged: 0/0
 11032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11033 ;;      Params:         0       0       0       0       0       0       0
 11034 ;;      Locals:         1       0       0       0       0       0       0
 11035 ;;      Temps:          0       0       0       0       0       0       0
 11036 ;;      Totals:         1       0       0       0       0       0       0
 11037 ;;Total ram usage:        1 bytes
 11038 ;; Hardware stack levels used:    1
 11039 ;; This function calls:
 11040 ;;		Nothing
 11041 ;; This function is called by:
 11042 ;;		_lcd_cmd
 11043 ;;		_lcd_dat
 11044 ;; This function uses a non-reentrant model
 11045 ;;
 11046                           
 11047                           	psect	text41
 11048  0045E6                     __ptext41:
 11049                           	callstack 0
 11050  0045E6                     _lcd_wr:
 11051                           	callstack 27
 11052                           
 11053                           ;incstack = 0
 11054                           ;lcd_wr@val stored from wreg
 11055  0045E6  6E01               	movwf	lcd_wr@val^0,c
 11056  0045E8                     
 11057                           ;lcd.c: 6:     (*(volatile __near unsigned char*)0xF83) = val;
 11058  0045E8  C001  FF83         	movff	lcd_wr@val,3971	;volatile
 11059  0045EC  0012               	return		;funcret
 11060  0045EE                     __end_of_lcd_wr:
 11061                           	callstack 0
 11062                           
 11063 ;; *************** function _atraso_ms *****************
 11064 ;; Defined at:
 11065 ;;		line 3 in file "delay.c"
 11066 ;; Parameters:    Size  Location     Type
 11067 ;;  t               2    0[COMRAM] int 
 11068 ;; Auto vars:     Size  Location     Type
 11069 ;;  i               2    2[COMRAM] volatile unsigned int 
 11070 ;;  k               1    5[COMRAM] volatile unsigned char 
 11071 ;;  j               1    4[COMRAM] volatile unsigned char 
 11072 ;; Return value:  Size  Location     Type
 11073 ;;                  1    wreg      void 
 11074 ;; Registers used:
 11075 ;;		wreg, status,2, status,0
 11076 ;; Tracked objects:
 11077 ;;		On entry : 0/0
 11078 ;;		On exit  : 0/0
 11079 ;;		Unchanged: 0/0
 11080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11081 ;;      Params:         2       0       0       0       0       0       0
 11082 ;;      Locals:         4       0       0       0       0       0       0
 11083 ;;      Temps:          0       0       0       0       0       0       0
 11084 ;;      Totals:         6       0       0       0       0       0       0
 11085 ;;Total ram usage:        6 bytes
 11086 ;; Hardware stack levels used:    1
 11087 ;; This function calls:
 11088 ;;		Nothing
 11089 ;; This function is called by:
 11090 ;;		_main
 11091 ;;		_tc_tecla
 11092 ;;		_lcd_cmd
 11093 ;;		_lcd_dat
 11094 ;;		_lcd_init
 11095 ;;		_encher_tanque
 11096 ;;		_esvaziar_tanque
 11097 ;; This function uses a non-reentrant model
 11098 ;;
 11099                           
 11100                           	psect	text42
 11101  004076                     __ptext42:
 11102                           	callstack 0
 11103  004076                     _atraso_ms:
 11104                           	callstack 28
 11105  004076                     
 11106                           ;delay.c: 4:     volatile unsigned char j, k;;delay.c: 5:     volatile unsigned int i;;d
      +                          elay.c: 7:     for (i = 0; i < (t); i++) {
 11107  004076  0E00               	movlw	0
 11108  004078  6E04               	movwf	(atraso_ms@i+1)^0,c	;volatile
 11109  00407A  0E00               	movlw	0
 11110  00407C  6E03               	movwf	atraso_ms@i^0,c	;volatile
 11111  00407E  EF61  F020         	goto	l4359
 11112  004082                     l4337:
 11113                           
 11114                           ;delay.c: 8:         for (j = 0; j < 41; j++) {
 11115  004082  0E00               	movlw	0
 11116  004084  6E05               	movwf	atraso_ms@j^0,c	;volatile
 11117  004086                     l4339:
 11118  004086  0E28               	movlw	40
 11119  004088  6405               	cpfsgt	atraso_ms@j^0,c	;volatile
 11120  00408A  EF49  F020         	goto	u5051
 11121  00408E  EF4B  F020         	goto	u5050
 11122  004092                     u5051:
 11123  004092  EF4D  F020         	goto	l4343
 11124  004096                     u5050:
 11125  004096  EF5F  F020         	goto	l4357
 11126  00409A                     l4343:
 11127                           
 11128                           ;delay.c: 9:             for (k = 0; k < 3; k++);
 11129  00409A  0E00               	movlw	0
 11130  00409C  6E06               	movwf	atraso_ms@k^0,c	;volatile
 11131  00409E                     l4345:
 11132  00409E  0E02               	movlw	2
 11133  0040A0  6406               	cpfsgt	atraso_ms@k^0,c	;volatile
 11134  0040A2  EF55  F020         	goto	u5061
 11135  0040A6  EF57  F020         	goto	u5060
 11136  0040AA                     u5061:
 11137  0040AA  EF59  F020         	goto	l4349
 11138  0040AE                     u5060:
 11139  0040AE  EF5C  F020         	goto	l4353
 11140  0040B2                     l4349:
 11141  0040B2  2A06               	incf	atraso_ms@k^0,f,c	;volatile
 11142  0040B4  EF4F  F020         	goto	l4345
 11143  0040B8                     l4353:
 11144                           
 11145                           ;delay.c: 10:         }
 11146  0040B8  2A05               	incf	atraso_ms@j^0,f,c	;volatile
 11147  0040BA  EF43  F020         	goto	l4339
 11148  0040BE                     l4357:
 11149                           
 11150                           ;delay.c: 11:     }
 11151  0040BE  4A03               	infsnz	atraso_ms@i^0,f,c	;volatile
 11152  0040C0  2A04               	incf	(atraso_ms@i+1)^0,f,c	;volatile
 11153  0040C2                     l4359:
 11154  0040C2  5001               	movf	atraso_ms@t^0,w,c
 11155  0040C4  5C03               	subwf	atraso_ms@i^0,w,c	;volatile
 11156  0040C6  5002               	movf	(atraso_ms@t+1)^0,w,c
 11157  0040C8  5804               	subwfb	(atraso_ms@i+1)^0,w,c	;volatile
 11158  0040CA  A0D8               	btfss	status,0,c
 11159  0040CC  EF6A  F020         	goto	u5071
 11160  0040D0  EF6C  F020         	goto	u5070
 11161  0040D4                     u5071:
 11162  0040D4  EF41  F020         	goto	l4337
 11163  0040D8                     u5070:
 11164  0040D8  0012               	return		;funcret
 11165  0040DA                     __end_of_atraso_ms:
 11166                           	callstack 0
 11167                           
 11168 ;; *************** function ___xxtofl *****************
 11169 ;; Defined at:
 11170 ;;		line 10 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
 11171 ;; Parameters:    Size  Location     Type
 11172 ;;  sign            1    wreg     unsigned char 
 11173 ;;  val             4    0[COMRAM] long 
 11174 ;; Auto vars:     Size  Location     Type
 11175 ;;  sign            1    8[COMRAM] unsigned char 
 11176 ;;  arg             4   10[COMRAM] unsigned long 
 11177 ;;  exp             1    9[COMRAM] unsigned char 
 11178 ;; Return value:  Size  Location     Type
 11179 ;;                  4    0[COMRAM] unsigned char 
 11180 ;; Registers used:
 11181 ;;		wreg, status,2, status,0
 11182 ;; Tracked objects:
 11183 ;;		On entry : 0/0
 11184 ;;		On exit  : 0/0
 11185 ;;		Unchanged: 0/0
 11186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11187 ;;      Params:         4       0       0       0       0       0       0
 11188 ;;      Locals:         6       0       0       0       0       0       0
 11189 ;;      Temps:          4       0       0       0       0       0       0
 11190 ;;      Totals:        14       0       0       0       0       0       0
 11191 ;;Total ram usage:       14 bytes
 11192 ;; Hardware stack levels used:    1
 11193 ;; This function calls:
 11194 ;;		Nothing
 11195 ;; This function is called by:
 11196 ;;		_encher_tanque
 11197 ;;		_esvaziar_tanque
 11198 ;; This function uses a non-reentrant model
 11199 ;;
 11200                           
 11201                           	psect	text43
 11202  00320A                     __ptext43:
 11203                           	callstack 0
 11204  00320A                     ___xxtofl:
 11205                           	callstack 29
 11206                           
 11207                           ;incstack = 0
 11208                           ;___xxtofl@sign stored from wreg
 11209  00320A  6E09               	movwf	___xxtofl@sign^0,c
 11210  00320C  5009               	movf	___xxtofl@sign^0,w,c
 11211  00320E  B4D8               	btfsc	status,2,c
 11212  003210  EF0C  F019         	goto	u5501
 11213  003214  EF0E  F019         	goto	u5500
 11214  003218                     u5501:
 11215  003218  EF30  F019         	goto	l886
 11216  00321C                     u5500:
 11217  00321C  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 11218  00321E  EF15  F019         	goto	u5510
 11219  003222  EF13  F019         	goto	u5511
 11220  003226                     u5511:
 11221  003226  EF30  F019         	goto	l886
 11222  00322A                     u5510:
 11223  00322A  C001  F005         	movff	___xxtofl@val,??___xxtofl
 11224  00322E  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 11225  003232  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 11226  003236  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 11227  00323A  1E05               	comf	??___xxtofl^0,f,c
 11228  00323C  1E06               	comf	(??___xxtofl+1)^0,f,c
 11229  00323E  1E07               	comf	(??___xxtofl+2)^0,f,c
 11230  003240  1E08               	comf	(??___xxtofl+3)^0,f,c
 11231  003242  2A05               	incf	??___xxtofl^0,f,c
 11232  003244  0E00               	movlw	0
 11233  003246  2206               	addwfc	(??___xxtofl+1)^0,f,c
 11234  003248  2207               	addwfc	(??___xxtofl+2)^0,f,c
 11235  00324A  2208               	addwfc	(??___xxtofl+3)^0,f,c
 11236  00324C  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 11237  003250  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 11238  003254  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 11239  003258  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 11240  00325C  EF38  F019         	goto	l4643
 11241  003260                     l886:
 11242  003260  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 11243  003264  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11244  003268  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11245  00326C  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11246  003270                     l4643:
 11247  003270  5001               	movf	___xxtofl@val^0,w,c
 11248  003272  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 11249  003274  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 11250  003276  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 11251  003278  A4D8               	btfss	status,2,c
 11252  00327A  EF41  F019         	goto	u5521
 11253  00327E  EF43  F019         	goto	u5520
 11254  003282                     u5521:
 11255  003282  EF4D  F019         	goto	l4649
 11256  003286                     u5520:
 11257  003286  0E00               	movlw	0
 11258  003288  6E01               	movwf	?___xxtofl^0,c
 11259  00328A  0E00               	movlw	0
 11260  00328C  6E02               	movwf	(?___xxtofl+1)^0,c
 11261  00328E  0E00               	movlw	0
 11262  003290  6E03               	movwf	(?___xxtofl+2)^0,c
 11263  003292  0E00               	movlw	0
 11264  003294  6E04               	movwf	(?___xxtofl+3)^0,c
 11265  003296  EFDE  F019         	goto	l889
 11266  00329A                     l4649:
 11267  00329A  0E96               	movlw	150
 11268  00329C  6E0A               	movwf	___xxtofl@exp^0,c
 11269  00329E  EF57  F019         	goto	l4653
 11270  0032A2                     l4651:
 11271  0032A2  2A0A               	incf	___xxtofl@exp^0,f,c
 11272  0032A4  90D8               	bcf	status,0,c
 11273  0032A6  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 11274  0032A8  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 11275  0032AA  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 11276  0032AC  320B               	rrcf	___xxtofl@arg^0,f,c
 11277  0032AE                     l4653:
 11278  0032AE  0E00               	movlw	0
 11279  0032B0  140B               	andwf	___xxtofl@arg^0,w,c
 11280  0032B2  6E05               	movwf	??___xxtofl^0,c
 11281  0032B4  0E00               	movlw	0
 11282  0032B6  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 11283  0032B8  6E06               	movwf	(??___xxtofl+1)^0,c
 11284  0032BA  0E00               	movlw	0
 11285  0032BC  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 11286  0032BE  6E07               	movwf	(??___xxtofl+2)^0,c
 11287  0032C0  0EFE               	movlw	254
 11288  0032C2  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 11289  0032C4  6E08               	movwf	(??___xxtofl+3)^0,c
 11290  0032C6  5005               	movf	??___xxtofl^0,w,c
 11291  0032C8  1006               	iorwf	(??___xxtofl+1)^0,w,c
 11292  0032CA  1007               	iorwf	(??___xxtofl+2)^0,w,c
 11293  0032CC  1008               	iorwf	(??___xxtofl+3)^0,w,c
 11294  0032CE  A4D8               	btfss	status,2,c
 11295  0032D0  EF6C  F019         	goto	u5531
 11296  0032D4  EF6E  F019         	goto	u5530
 11297  0032D8                     u5531:
 11298  0032D8  EF51  F019         	goto	l4651
 11299  0032DC                     u5530:
 11300  0032DC  EF7C  F019         	goto	l893
 11301  0032E0                     l4655:
 11302  0032E0  2A0A               	incf	___xxtofl@exp^0,f,c
 11303  0032E2  0E01               	movlw	1
 11304  0032E4  260B               	addwf	___xxtofl@arg^0,f,c
 11305  0032E6  0E00               	movlw	0
 11306  0032E8  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 11307  0032EA  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 11308  0032EC  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 11309  0032EE  90D8               	bcf	status,0,c
 11310  0032F0  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 11311  0032F2  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 11312  0032F4  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 11313  0032F6  320B               	rrcf	___xxtofl@arg^0,f,c
 11314  0032F8                     l893:
 11315  0032F8  0E00               	movlw	0
 11316  0032FA  140B               	andwf	___xxtofl@arg^0,w,c
 11317  0032FC  6E05               	movwf	??___xxtofl^0,c
 11318  0032FE  0E00               	movlw	0
 11319  003300  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 11320  003302  6E06               	movwf	(??___xxtofl+1)^0,c
 11321  003304  0E00               	movlw	0
 11322  003306  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 11323  003308  6E07               	movwf	(??___xxtofl+2)^0,c
 11324  00330A  0EFF               	movlw	255
 11325  00330C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 11326  00330E  6E08               	movwf	(??___xxtofl+3)^0,c
 11327  003310  5005               	movf	??___xxtofl^0,w,c
 11328  003312  1006               	iorwf	(??___xxtofl+1)^0,w,c
 11329  003314  1007               	iorwf	(??___xxtofl+2)^0,w,c
 11330  003316  1008               	iorwf	(??___xxtofl+3)^0,w,c
 11331  003318  A4D8               	btfss	status,2,c
 11332  00331A  EF91  F019         	goto	u5541
 11333  00331E  EF93  F019         	goto	u5540
 11334  003322                     u5541:
 11335  003322  EF70  F019         	goto	l4655
 11336  003326                     u5540:
 11337  003326  EF9B  F019         	goto	l4663
 11338  00332A                     l4661:
 11339  00332A  060A               	decf	___xxtofl@exp^0,f,c
 11340  00332C  90D8               	bcf	status,0,c
 11341  00332E  360B               	rlcf	___xxtofl@arg^0,f,c
 11342  003330  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 11343  003332  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 11344  003334  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 11345  003336                     l4663:
 11346  003336  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 11347  003338  EFA0  F019         	goto	u5551
 11348  00333C  EFA2  F019         	goto	u5550
 11349  003340                     u5551:
 11350  003340  EFAA  F019         	goto	l900
 11351  003344                     u5550:
 11352  003344  0E02               	movlw	2
 11353  003346  600A               	cpfslt	___xxtofl@exp^0,c
 11354  003348  EFA8  F019         	goto	u5561
 11355  00334C  EFAA  F019         	goto	u5560
 11356  003350                     u5561:
 11357  003350  EF95  F019         	goto	l4661
 11358  003354                     u5560:
 11359  003354                     l900:
 11360  003354  B00A               	btfsc	___xxtofl@exp^0,0,c
 11361  003356  EFAF  F019         	goto	u5571
 11362  00335A  EFB1  F019         	goto	u5570
 11363  00335E                     u5571:
 11364  00335E  EFB2  F019         	goto	l4669
 11365  003362                     u5570:
 11366  003362  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 11367  003364                     l4669:
 11368  003364  90D8               	bcf	status,0,c
 11369  003366  320A               	rrcf	___xxtofl@exp^0,f,c
 11370  003368  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 11371  00336C  6A06               	clrf	(??___xxtofl+1)^0,c
 11372  00336E  6A07               	clrf	(??___xxtofl+2)^0,c
 11373  003370  6A08               	clrf	(??___xxtofl+3)^0,c
 11374  003372  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 11375  003376  6A07               	clrf	(??___xxtofl+2)^0,c
 11376  003378  6A06               	clrf	(??___xxtofl+1)^0,c
 11377  00337A  6A05               	clrf	??___xxtofl^0,c
 11378  00337C  5005               	movf	??___xxtofl^0,w,c
 11379  00337E  120B               	iorwf	___xxtofl@arg^0,f,c
 11380  003380  5006               	movf	(??___xxtofl+1)^0,w,c
 11381  003382  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 11382  003384  5007               	movf	(??___xxtofl+2)^0,w,c
 11383  003386  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 11384  003388  5008               	movf	(??___xxtofl+3)^0,w,c
 11385  00338A  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 11386  00338C  5009               	movf	___xxtofl@sign^0,w,c
 11387  00338E  B4D8               	btfsc	status,2,c
 11388  003390  EFCC  F019         	goto	u5581
 11389  003394  EFCE  F019         	goto	u5580
 11390  003398                     u5581:
 11391  003398  EFD6  F019         	goto	l4679
 11392  00339C                     u5580:
 11393  00339C  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 11394  00339E  EFD5  F019         	goto	u5590
 11395  0033A2  EFD3  F019         	goto	u5591
 11396  0033A6                     u5591:
 11397  0033A6  EFD6  F019         	goto	l4679
 11398  0033AA                     u5590:
 11399  0033AA  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 11400  0033AC                     l4679:
 11401  0033AC  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 11402  0033B0  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 11403  0033B4  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 11404  0033B8  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 11405  0033BC                     l889:
 11406  0033BC  0012               	return		;funcret
 11407  0033BE                     __end_of___xxtofl:
 11408                           	callstack 0
 11409                           
 11410 ;; *************** function ___lwmod *****************
 11411 ;; Defined at:
 11412 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\lwmod.c"
 11413 ;; Parameters:    Size  Location     Type
 11414 ;;  dividend        2    0[COMRAM] unsigned int 
 11415 ;;  divisor         2    2[COMRAM] unsigned int 
 11416 ;; Auto vars:     Size  Location     Type
 11417 ;;  counter         1    4[COMRAM] unsigned char 
 11418 ;; Return value:  Size  Location     Type
 11419 ;;                  2    0[COMRAM] unsigned int 
 11420 ;; Registers used:
 11421 ;;		wreg, status,2, status,0
 11422 ;; Tracked objects:
 11423 ;;		On entry : 0/0
 11424 ;;		On exit  : 0/0
 11425 ;;		Unchanged: 0/0
 11426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11427 ;;      Params:         4       0       0       0       0       0       0
 11428 ;;      Locals:         1       0       0       0       0       0       0
 11429 ;;      Temps:          0       0       0       0       0       0       0
 11430 ;;      Totals:         5       0       0       0       0       0       0
 11431 ;;Total ram usage:        5 bytes
 11432 ;; Hardware stack levels used:    1
 11433 ;; This function calls:
 11434 ;;		Nothing
 11435 ;; This function is called by:
 11436 ;;		_encher_tanque
 11437 ;;		_esvaziar_tanque
 11438 ;; This function uses a non-reentrant model
 11439 ;;
 11440                           
 11441                           	psect	text44
 11442  0040DA                     __ptext44:
 11443                           	callstack 0
 11444  0040DA                     ___lwmod:
 11445                           	callstack 29
 11446  0040DA  5003               	movf	___lwmod@divisor^0,w,c
 11447  0040DC  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
 11448  0040DE  B4D8               	btfsc	status,2,c
 11449  0040E0  EF74  F020         	goto	u5471
 11450  0040E4  EF76  F020         	goto	u5470
 11451  0040E8                     u5471:
 11452  0040E8  EF9A  F020         	goto	l732
 11453  0040EC                     u5470:
 11454  0040EC  0E01               	movlw	1
 11455  0040EE  6E05               	movwf	___lwmod@counter^0,c
 11456  0040F0  EF7E  F020         	goto	l4627
 11457  0040F4                     l4625:
 11458  0040F4  90D8               	bcf	status,0,c
 11459  0040F6  3603               	rlcf	___lwmod@divisor^0,f,c
 11460  0040F8  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
 11461  0040FA  2A05               	incf	___lwmod@counter^0,f,c
 11462  0040FC                     l4627:
 11463  0040FC  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
 11464  0040FE  EF83  F020         	goto	u5481
 11465  004102  EF85  F020         	goto	u5480
 11466  004106                     u5481:
 11467  004106  EF7A  F020         	goto	l4625
 11468  00410A                     u5480:
 11469  00410A                     l4629:
 11470  00410A  5003               	movf	___lwmod@divisor^0,w,c
 11471  00410C  5C01               	subwf	___lwmod@dividend^0,w,c
 11472  00410E  5004               	movf	(___lwmod@divisor+1)^0,w,c
 11473  004110  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
 11474  004112  A0D8               	btfss	status,0,c
 11475  004114  EF8E  F020         	goto	u5491
 11476  004118  EF90  F020         	goto	u5490
 11477  00411C                     u5491:
 11478  00411C  EF94  F020         	goto	l4633
 11479  004120                     u5490:
 11480  004120  5003               	movf	___lwmod@divisor^0,w,c
 11481  004122  5E01               	subwf	___lwmod@dividend^0,f,c
 11482  004124  5004               	movf	(___lwmod@divisor+1)^0,w,c
 11483  004126  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
 11484  004128                     l4633:
 11485  004128  90D8               	bcf	status,0,c
 11486  00412A  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
 11487  00412C  3203               	rrcf	___lwmod@divisor^0,f,c
 11488  00412E  2E05               	decfsz	___lwmod@counter^0,f,c
 11489  004130  EF85  F020         	goto	l4629
 11490  004134                     l732:
 11491  004134  C001  F001         	movff	___lwmod@dividend,?___lwmod
 11492  004138  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
 11493  00413C  0012               	return		;funcret
 11494  00413E                     __end_of___lwmod:
 11495                           	callstack 0
 11496                           
 11497                           	psect	rparam
 11498  0000                     
 11499                           	psect	idloc
 11500                           
 11501                           ;Config register IDLOC0 @ 0x200000
 11502                           ;	unspecified, using default values
 11503  200000                     	org	2097152
 11504  200000  FF                 	db	255
 11505                           
 11506                           ;Config register IDLOC1 @ 0x200001
 11507                           ;	unspecified, using default values
 11508  200001                     	org	2097153
 11509  200001  FF                 	db	255
 11510                           
 11511                           ;Config register IDLOC2 @ 0x200002
 11512                           ;	unspecified, using default values
 11513  200002                     	org	2097154
 11514  200002  FF                 	db	255
 11515                           
 11516                           ;Config register IDLOC3 @ 0x200003
 11517                           ;	unspecified, using default values
 11518  200003                     	org	2097155
 11519  200003  FF                 	db	255
 11520                           
 11521                           ;Config register IDLOC4 @ 0x200004
 11522                           ;	unspecified, using default values
 11523  200004                     	org	2097156
 11524  200004  FF                 	db	255
 11525                           
 11526                           ;Config register IDLOC5 @ 0x200005
 11527                           ;	unspecified, using default values
 11528  200005                     	org	2097157
 11529  200005  FF                 	db	255
 11530                           
 11531                           ;Config register IDLOC6 @ 0x200006
 11532                           ;	unspecified, using default values
 11533  200006                     	org	2097158
 11534  200006  FF                 	db	255
 11535                           
 11536                           ;Config register IDLOC7 @ 0x200007
 11537                           ;	unspecified, using default values
 11538  200007                     	org	2097159
 11539  200007  FF                 	db	255
 11540                           
 11541                           	psect	config
 11542                           
 11543                           ; Padding undefined space
 11544  300000                     	org	3145728
 11545  300000  FF                 	db	255
 11546                           
 11547                           ;Config register CONFIG1H @ 0x300001
 11548                           ;	Oscillator Selection bits
 11549                           ;	OSC = HS, HS oscillator
 11550                           ;	Fail-Safe Clock Monitor Enable bit
 11551                           ;	FCMEN = 0x0, unprogrammed default
 11552                           ;	Internal/External Oscillator Switchover bit
 11553                           ;	IESO = 0x0, unprogrammed default
 11554  300001                     	org	3145729
 11555  300001  02                 	db	2
 11556                           
 11557                           ;Config register CONFIG2L @ 0x300002
 11558                           ;	unspecified, using default values
 11559                           ;	Power-up Timer Enable bit
 11560                           ;	PWRT = 0x1, unprogrammed default
 11561                           ;	Brown-out Reset Enable bits
 11562                           ;	BOREN = 0x3, unprogrammed default
 11563                           ;	Brown Out Reset Voltage bits
 11564                           ;	BORV = 0x3, unprogrammed default
 11565  300002                     	org	3145730
 11566  300002  1F                 	db	31
 11567                           
 11568                           ;Config register CONFIG2H @ 0x300003
 11569                           ;	Watchdog Timer Enable bit
 11570                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 11571                           ;	Watchdog Timer Postscale Select bits
 11572                           ;	WDTPS = 1, 1:1
 11573  300003                     	org	3145731
 11574  300003  00                 	db	0
 11575                           
 11576                           ; Padding undefined space
 11577  300004                     	org	3145732
 11578  300004  FF                 	db	255
 11579                           
 11580                           ;Config register CONFIG3H @ 0x300005
 11581                           ;	unspecified, using default values
 11582                           ;	CCP2 MUX bit
 11583                           ;	CCP2MX = 0x1, unprogrammed default
 11584                           ;	PORTB A/D Enable bit
 11585                           ;	PBADEN = 0x1, unprogrammed default
 11586                           ;	Low-Power Timer1 Oscillator Enable bit
 11587                           ;	LPT1OSC = 0x0, unprogrammed default
 11588                           ;	MCLR Pin Enable bit
 11589                           ;	MCLRE = 0x1, unprogrammed default
 11590  300005                     	org	3145733
 11591  300005  83                 	db	131
 11592                           
 11593                           ;Config register CONFIG4L @ 0x300006
 11594                           ;	Stack Full/Underflow Reset Enable bit
 11595                           ;	STVREN = 0x1, unprogrammed default
 11596                           ;	Single-Supply ICSP Enable bit
 11597                           ;	LVP = OFF, Single-Supply ICSP disabled
 11598                           ;	Extended Instruction Set Enable bit
 11599                           ;	XINST = 0x0, unprogrammed default
 11600                           ;	Background Debugger Enable bit
 11601                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 11602  300006                     	org	3145734
 11603  300006  81                 	db	129
 11604                           
 11605                           ; Padding undefined space
 11606  300007                     	org	3145735
 11607  300007  FF                 	db	255
 11608                           
 11609                           ;Config register CONFIG5L @ 0x300008
 11610                           ;	unspecified, using default values
 11611                           ;	Code Protection bit
 11612                           ;	CP0 = 0x1, unprogrammed default
 11613                           ;	Code Protection bit
 11614                           ;	CP1 = 0x1, unprogrammed default
 11615                           ;	Code Protection bit
 11616                           ;	CP2 = 0x1, unprogrammed default
 11617                           ;	Code Protection bit
 11618                           ;	CP3 = 0x1, unprogrammed default
 11619  300008                     	org	3145736
 11620  300008  0F                 	db	15
 11621                           
 11622                           ;Config register CONFIG5H @ 0x300009
 11623                           ;	unspecified, using default values
 11624                           ;	Boot Block Code Protection bit
 11625                           ;	CPB = 0x1, unprogrammed default
 11626                           ;	Data EEPROM Code Protection bit
 11627                           ;	CPD = 0x1, unprogrammed default
 11628  300009                     	org	3145737
 11629  300009  C0                 	db	192
 11630                           
 11631                           ;Config register CONFIG6L @ 0x30000A
 11632                           ;	unspecified, using default values
 11633                           ;	Write Protection bit
 11634                           ;	WRT0 = 0x1, unprogrammed default
 11635                           ;	Write Protection bit
 11636                           ;	WRT1 = 0x1, unprogrammed default
 11637                           ;	Write Protection bit
 11638                           ;	WRT2 = 0x1, unprogrammed default
 11639                           ;	Write Protection bit
 11640                           ;	WRT3 = 0x1, unprogrammed default
 11641  30000A                     	org	3145738
 11642  30000A  0F                 	db	15
 11643                           
 11644                           ;Config register CONFIG6H @ 0x30000B
 11645                           ;	unspecified, using default values
 11646                           ;	Configuration Register Write Protection bit
 11647                           ;	WRTC = 0x1, unprogrammed default
 11648                           ;	Boot Block Write Protection bit
 11649                           ;	WRTB = 0x1, unprogrammed default
 11650                           ;	Data EEPROM Write Protection bit
 11651                           ;	WRTD = 0x1, unprogrammed default
 11652  30000B                     	org	3145739
 11653  30000B  E0                 	db	224
 11654                           
 11655                           ;Config register CONFIG7L @ 0x30000C
 11656                           ;	unspecified, using default values
 11657                           ;	Table Read Protection bit
 11658                           ;	EBTR0 = 0x1, unprogrammed default
 11659                           ;	Table Read Protection bit
 11660                           ;	EBTR1 = 0x1, unprogrammed default
 11661                           ;	Table Read Protection bit
 11662                           ;	EBTR2 = 0x1, unprogrammed default
 11663                           ;	Table Read Protection bit
 11664                           ;	EBTR3 = 0x1, unprogrammed default
 11665  30000C                     	org	3145740
 11666  30000C  0F                 	db	15
 11667                           
 11668                           ;Config register CONFIG7H @ 0x30000D
 11669                           ;	unspecified, using default values
 11670                           ;	Boot Block Table Read Protection bit
 11671                           ;	EBTRB = 0x1, unprogrammed default
 11672  30000D                     	org	3145741
 11673  30000D  40                 	db	64
 11674                           tosu	equ	0xFFF
 11675                           tosh	equ	0xFFE
 11676                           tosl	equ	0xFFD
 11677                           stkptr	equ	0xFFC
 11678                           pclatu	equ	0xFFB
 11679                           pclath	equ	0xFFA
 11680                           pcl	equ	0xFF9
 11681                           tblptru	equ	0xFF8
 11682                           tblptrh	equ	0xFF7
 11683                           tblptrl	equ	0xFF6
 11684                           tablat	equ	0xFF5
 11685                           prodh	equ	0xFF4
 11686                           prodl	equ	0xFF3
 11687                           indf0	equ	0xFEF
 11688                           postinc0	equ	0xFEE
 11689                           postdec0	equ	0xFED
 11690                           preinc0	equ	0xFEC
 11691                           plusw0	equ	0xFEB
 11692                           fsr0h	equ	0xFEA
 11693                           fsr0l	equ	0xFE9
 11694                           wreg	equ	0xFE8
 11695                           indf1	equ	0xFE7
 11696                           postinc1	equ	0xFE6
 11697                           postdec1	equ	0xFE5
 11698                           preinc1	equ	0xFE4
 11699                           plusw1	equ	0xFE3
 11700                           fsr1h	equ	0xFE2
 11701                           fsr1l	equ	0xFE1
 11702                           bsr	equ	0xFE0
 11703                           indf2	equ	0xFDF
 11704                           postinc2	equ	0xFDE
 11705                           postdec2	equ	0xFDD
 11706                           preinc2	equ	0xFDC
 11707                           plusw2	equ	0xFDB
 11708                           fsr2h	equ	0xFDA
 11709                           fsr2l	equ	0xFD9
 11710                           status	equ	0xFD8

Data Sizes:
    Strings     234
    Constant    4
    Data        50
    BSS         102
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    126     126
    BANK0           128    106     128
    BANK1           256     51     181
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_42(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_42(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_37(CODE[4]), STR_36(CODE[4]), STR_33(CODE[4]), STR_32(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_37(CODE[4]), STR_36(CODE[4]), STR_33(CODE[4]), STR_32(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> ver_quantidade@y(BANK0[8]), esvaziar_tanque@y(BANK1[8]), encher_tanque@y(BANK1[8]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_28(CODE[5]), STR_22(CODE[5]), STR_12(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_28(CODE[5]), STR_22(CODE[5]), STR_12(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_28(CODE[5]), STR_22(CODE[5]), STR_12(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_28(CODE[5]), STR_22(CODE[5]), STR_12(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 8
		 -> ver_quantidade@y(BANK0[8]), esvaziar_tanque@y(BANK1[8]), encher_tanque@y(BANK1[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S643_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 8
		 -> ver_quantidade@y(BANK0[8]), esvaziar_tanque@y(BANK1[8]), encher_tanque@y(BANK1[8]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> ver_quantidade@y(BANK0[8]), esvaziar_tanque@y(BANK1[8]), encher_tanque@y(BANK1[8]), 

    ver_quantidade@vol	PTR  size(2) Largest target is 4
		 -> volume(BANK0[4]), 

    esvaziar_tanque@vol	PTR  size(2) Largest target is 4
		 -> volume(BANK0[4]), 

    encher_tanque@vol	PTR  size(2) Largest target is 4
		 -> volume(BANK0[4]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_31(CODE[11]), STR_30(CODE[3]), STR_29(CODE[8]), ver_quantidade@y(BANK0[8]), 
		 -> STR_27(CODE[14]), STR_26(CODE[13]), STR_25(CODE[9]), STR_24(CODE[14]), 
		 -> STR_23(CODE[3]), esvaziar_tanque@y(BANK1[8]), STR_21(CODE[11]), STR_20(CODE[14]), 
		 -> STR_19(CODE[11]), STR_18(CODE[11]), STR_17(CODE[14]), STR_16(CODE[13]), 
		 -> STR_15(CODE[9]), STR_14(CODE[12]), STR_13(CODE[3]), encher_tanque@y(BANK1[8]), 
		 -> STR_11(CODE[11]), STR_10(CODE[16]), STR_9(CODE[11]), STR_8(CODE[11]), 
		 -> STR_7(CODE[14]), STR_6(CODE[10]), STR_5(CODE[15]), STR_4(CODE[15]), 
		 -> STR_3(CODE[14]), STR_2(CODE[11]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_encher_tanque
    _main->_esvaziar_tanque
    _main->_ver_quantidade
    _lcd_init->_lcd_cmd
    _tc_tecla->_atraso_ms
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___fltol->___flmul
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___flge->___fladd
    ___fldiv->___fladd
    _atoi->_isspace
    _pwmSet1->___lwdiv
    _lcd_str->_lcd_dat
    _lcd_dat->_atraso_ms
    _lcd_cmd->_atraso_ms

Critical Paths under _main in BANK0

    _main->_ver_quantidade
    _ver_quantidade->_sprintf
    _esvaziar_tanque->_sprintf
    _encher_tanque->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    _main->_encher_tanque
    _main->_esvaziar_tanque

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  177499
                                            103 BANK0      3     3      0
                          _atraso_ms
                      _encher_tanque
                    _esvaziar_tanque
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                           _tc_tecla
                     _ver_quantidade
 ---------------------------------------------------------------------------------
 (1) _ver_quantidade                                      13    11      2   40446
                                            124 COMRAM     2     0      2
                                             92 BANK0     11    11      0
                            _lcd_cmd
                            _lcd_str
                            _sprintf
                           _tc_tecla
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    3816
                          _atraso_ms
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _esvaziar_tanque                                     57    55      2   62630
                                            124 COMRAM     2     0      2
                                             92 BANK0      4     4      0
                                              0 BANK1     51    51      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                            ___lwdiv
                            ___lwmod
                             ___wmul
                           ___xxtofl
                          _atraso_ms
                            _lcd_cmd
                            _lcd_dat
                            _lcd_str
                            _pwmInit
                            _pwmSet1
                            _sprintf
                           _tc_tecla
 ---------------------------------------------------------------------------------
 (1) _encher_tanque                                       57    55      2   59619
                                            124 COMRAM     2     0      2
                                             92 BANK0      4     4      0
                                              0 BANK1     51    51      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                            ___lwdiv
                            ___lwmod
                             ___wmul
                           ___xxtofl
                          _atraso_ms
                            _lcd_cmd
                            _lcd_dat
                            _lcd_str
                            _pwmInit
                            _pwmSet1
                            _sprintf
                           _tc_tecla
 ---------------------------------------------------------------------------------
 (2) _tc_tecla                                             7     5      2    2706
                                              6 COMRAM     7     5      2
                          _atraso_ms
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   31217
                                             74 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   30556
                                            122 COMRAM     2     2      0
                                             68 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   30184
                                            112 COMRAM    10     4      6
                                             56 BANK0     12    12      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   24277
                                            100 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             80 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     533
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    3801
                                             55 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3022
                                             39 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2960
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     790
                                             55 COMRAM    12     4      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2311
                                             55 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1760
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _pwmSet1                                              5     5      0    1780
                                              7 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     919
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     770
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _pwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lcd_str                                              5     3      2    4376
                                              7 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (3) _lcd_dat                                              1     1      0    1930
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0    1930
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (4) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _atraso_ms                                            6     4      2    1886
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1082
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     463
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atraso_ms
   _encher_tanque
     ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flge
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___lwdiv
     ___lwmod
     ___wmul
     ___xxtofl
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_dat
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _pwmInit
     _pwmSet1
       ___lwdiv
       ___wmul
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
     _tc_tecla
       _atraso_ms
   _esvaziar_tanque
     ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___flsub
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___lwdiv
     ___lwmod
     ___wmul
     ___xxtofl
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_dat
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _pwmInit
     _pwmSet1
       ___lwdiv
       ___wmul
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
     _tc_tecla
       _atraso_ms
   _lcd_cmd
     _atraso_ms
     _lcd_wr
   _lcd_init
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
   _lcd_str
     _lcd_dat
       _atraso_ms
       _lcd_wr
   _tc_tecla
     _atraso_ms
   _ver_quantidade
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
     _tc_tecla
       _atraso_ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     33      B5       7       70.7%
BITBANK0            80      0       0       4        0.0%
BANK0               80     6A      80       5      100.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7E      7E       1       99.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B3      15        0.0%
DATA                 0      0     1B3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Jul 05 15:05:56 2020

             ___fldiv@aexp 0050  esvaziar_tanque@decremento 0180               ___fldiv@bexp 004F  
                        _i 00F2               ___fldiv@sign 0048                         l60 3094  
                       l70 3112                         l63 30EA                         l65 30D2  
                       l58 30AA                         l75 3152                         l68 312A  
                       l85 3208                         l88 4074                         l97 45DC  
             ___awdiv@sign 0006        ___wmul@multiplicand 0003             encher_tanque@i 0186  
           encher_tanque@y 016C                        l102 45EC                        l111 42BC  
                      l105 45A2                        l108 4578                        l117 3F94  
                      l127 40D8                        l231 45C8                        l224 3A6C  
                      l228 3A98                        l501 38C0                        l149 1800  
                      l191 1D3E                        l505 44B6                        l462 3DC2  
                      l528 37BC                        l801 4402                        l722 4000  
                      l490 3F1C                        l475 3E72                        l732 4134  
                      l900 3354                        l813 2E2C                        l815 2C8C  
                      l824 2CD2                        l496 387A                        l760 1F1C  
                      l729 4008                        l761 1EE2                        l826 2D4A  
                      l818 2C50                        l739 413C                        l827 2D38  
                      l852 2924                        l845 272E                        l909 436A  
                      l862 2A54                        l854 299C                        l950 3C80  
                      l855 298A                        l759 1F2E                        l776 2048  
                      l768 21FE                        l849 2A92                        l785 2118  
                      l953 3CC2                        l786 2106                        l955 3CFE  
                      l893 32F8                        l973 129E                        l886 3260  
                      l991 0ADC                        l889 33BC                        _pad 3C3A  
             ___awmod@sign 0006                        wreg 000FE8            ?_ver_quantidade 007D  
          encher_tanque@t1 0184            encher_tanque@t2 0188               ___flmul@aexp 0020  
             ___flmul@bexp 0021                _tolower$927 000D               ___flmul@sign 001B  
             ___flmul@temp 0026               ___flmul@prod 0022       encher_tanque@numeros 0158  
             ___fltol@exp1 0031                       l1201 4258                       l1017 0E74  
                     l1116 3544                       l1125 303E                       l1206 4260  
                     l1070 25B2                       l1135 44EE                       l1143 43BC  
                     l1119 354C                       l1063 2668                       l1128 2F82  
                     l1164 3C38                       l1172 4446                       l1076 41F8  
                     l1181 4318                       l1149 447E                       l1077 4200  
                     l1087 39BE                       l1175 45EE                       l1191 3B6E  
                     l3201 1D4C                       l4001 07A0                       l3211 1D8C  
                     l3203 1D5A                       l1187 4524                       l4011 0806  
                     l4003 07A4                       l3301 1F4C                       l3221 1DBE  
                     l3213 1D8E                       l3205 1D5C                       l4101 0BBA  
                     l4013 0818                       l4005 07AA                       l3311 1F8C  
                     l3231 1DE6                       l3223 1DC0                       l3207 1D6C  
                     l3215 1D96                       l4111 0C02                       l4103 0BC8  
                     l4031 08EC                       l4015 0834                       l4007 07D0  
                     l4023 087E                       l3321 1FB6                       l3313 1F98  
                     l3305 1F60                       l3241 1E20                       l3233 1DF6  
                     l3225 1DC6                       l3217 1DA6                       l3209 1D7C  
                     l3401 4404                       l4201 10B6                       l4121 0D16  
                     l4113 0C12                       l4105 0BE0                       l4033 0908  
                     l4025 08A4                       l4041 0924                       l4017 084C  
                     l5001 1C3E                       l3331 2028                       l3315 1F9C  
                     l3307 1F70                       l3323 1FBC                       l3251 1E4C  
                     l3243 1E32                       l3235 1E06                       l3227 1DD4  
                     l3219 1DAC                       l3403 4410                       l3411 44FC  
                     l4211 10FA                       l4203 10C4                       l4131 0DB6  
                     l4115 0C26                       l4123 0D1C                       l4107 0BF2  
                     l4051 09AE                       l4043 093E                       l4019 0856  
                     l5011 1C92                       l5003 1C56                       l4301 34C6  
                     l3501 2C40                       l3341 2082                       l3325 1FE2  
                     l3333 2038                       l3317 1FAA                       l3309 1F7E  
                     l3261 1E60                       l3253 1E50                       l3245 1E40  
                     l3237 1E08                       l3229 1DD6                       l3405 4422  
                     l3413 4500                       l4221 1130                       l4213 1102  
                     l4205 10D4                       l4141 0E4C                       l4133 0DE8  
                     l4125 0D3A                       l4117 0C8A                       l4109 0BFA  
                     l4061 0A86                       l4053 0A08                       l4029 08DA  
                     l5021 1CC6                       l5013 1C98                       l5005 1C62  
                     l5101 361C                       l3423 45A4                       l3511 2C8A  
                     l3503 2C4E                       l3431 2AA0                       l3351 20B2  
                     l3343 208C                       l3335 205E                       l3327 2016  
                     l3319 1FAC                       l3271 1E74                       l3263 1E64  
                     l3255 1E54                       l3247 1E44                       l3239 1E10  
                     l3191 3B9E                       l3407 4426                       l3415 4518  
                     l4231 118C                       l4223 1138                       l4215 1112  
                     l4207 10D8                       l4151 0F04                       l4143 0E60  
                     l4135 0DF8                       l4127 0D6E                       l4119 0CE2  
                     l4071 0AD0                       l4063 0A8A                       l4055 0A3C  
                     l4047 0974                       l5031 1CE4                       l5023 1CD8  
                     l5015 1CA4                       l5007 1C78                       l5111 365E  
                     l5103 3628                       l3425 45C0                       l4305 3504  
                     l3521 2CD0                       l3513 2C9C                       l3505 2C5A  
                     l3441 2AE0                       l3433 2AAE                       l3601 273E  
                     l3361 20DA                       l3353 20B6                       l3345 209A  
                     l3337 206E                       l3329 2018                       l3281 1EAE  
                     l3273 1E78                       l3265 1E68                       l3257 1E58  
                     l3249 1E48                       l3193 3BBC                       l3185 3B70  
                     l3409 44F0                       l4241 11CC                       l4233 1194  
                     l4225 1144                       l4217 111A                       l4209 10E8  
                     l4161 0F50                       l4153 0F16                       l4145 0E6C  
                     l4137 0E08                       l4129 0DA0                       l4081 0B0C  
                     l4065 0A9C                       l4073 0AE8                       l4057 0A44  
                     l4049 09A8                       l4321 3AD0                       l4401 240E  
                     l5033 1CEA                       l5025 1CDE                       l5009 1C80  
                     l5017 1CAE                       l5041 1D0E                       l5121 3692  
                     l5105 363A                       l4307 3516                       l3531 2D30  
                     l3515 2CB2                       l3523 2CE2                       l3507 2C78  
                     l3451 2B06                       l3443 2AE2                       l3435 2AB0  
                     l3611 2778                       l3603 274E                       l3371 2134  
                     l3363 20E8                       l3355 20C6                       l3347 209C  
                     l3291 1F00                       l3283 1ECA                       l3275 1E7C  
                     l3267 1E6C                       l3259 1E5C                       l3195 3BF2  
                     l3187 3B82                       l3419 4448                       l4251 1208  
                     l4243 11DE                       l4227 114A                       l4235 119A  
                     l4219 1128                       l4171 0F84                       l4163 0F5E  
                     l4155 0F28                       l4147 0E90                       l4139 0E3C  
                     l4091 0B72                       l4083 0B28                       l4067 0AAE  
                     l4059 0A76                       l4331 3B4C                       l4323 3ADE  
                     l4315 3A9A                       l4403 2420                       l5051 1D3C  
                     l5043 1D12                       l5035 1CF0                       l5027 1CE0  
                     l5019 1CB2                       l5123 3698                       l5115 366E  
                     l4501 4584                       l4309 3528                       l3541 2D9E  
                     l3525 2CF0                       l3517 2CB8                       l3509 2C7A  
                     l3461 2B46                       l3453 2B14                       l3437 2AC0  
                     l3445 2AEA                       l3429 2A94                       l3621 27CA  
                     l3613 278E                       l3381 219E                       l3373 2142  
                     l3365 20FE                       l3349 20AA                       l3357 20C8  
                     l3293 1F0E                       l3285 1EDA                       l3269 1E70  
                     l3277 1E80                       l3189 3B94                       l4261 1260  
                     l4253 120E                       l4245 11EA                       l4237 11AC  
                     l4229 1170                       l4181 0FB6                       l4173 0F94  
                     l4165 0F6E                       l4157 0F36                       l4149 0EF4  
                     l4093 0B84                       l4085 0B5E                       l4069 0AB6  
                     l4325 3AF6                       l4317 3AC4                       l4421 254E  
                     l4405 2436                       l4413 24A0                       l5045 1D16  
                     l5037 1CFC                       l5029 1CE2                       l5125 36A4  
                     l5117 3682                       l5109 364A                       l5061 356E  
                     l5053 354E                       l4343 409A                       l4335 4076  
                     l4503 4586                       l4511 3F1E                       l3711 3D1E  
                     l3703 3D00                       l3551 2E08                       l3535 2D5A  
                     l3543 2DA2                       l3527 2CF4                       l3519 2CC2  
                     l3471 2B86                       l3463 2B48                       l3455 2B16  
                     l3447 2AFA                       l3439 2AD0                       l3631 2810  
                     l3623 27D8                       l3615 279A                       l3607 2762  
                     l3391 21D8                       l3383 21BE                       l3375 217C  
                     l3359 20D6                       l3295 1F10                       l3287 1EF0  
                     l3279 1E84                       l3199 1D40                       l4263 1268  
                     l4247 11F2                       l4239 11C6                       l4191 105E  
                     l4183 0FC8                       l4175 0F98                       l4167 0F72  
                     l4159 0F3E                       l4095 0B96                       l4087 0B66  
                     l4079 0AFA                       l4327 3B12                       l4431 25EA  
                     l4423 2582                       l4415 24CE                       l4407 2444  
                     l5047 1D28                       l5039 1D02                       l5071 359E  
                     l5063 357A                       l5055 355E                       l4353 40B8  
                     l4345 409E                       l4337 4082                       l4361 45E8  
                     l4505 4592                       l4513 3F26                       l4601 4066  
                     l4281 33F6                       l4273 33BE                       l3721 3D52  
                     l3713 3D2C                       l3705 3D04                       l3553 2E0C  
                     l3545 2DBC                       l3537 2D66                       l3529 2D02  
                     l3481 2BB6                       l3473 2B8E                       l3457 2B26  
                     l3465 2B50                       l3449 2B00                       l3801 37EC  
                     l3641 287E                       l3633 282A                       l3625 27E4  
                     l3617 27B2                       l3609 276E                       l3393 21DE  
                     l3385 21C2                       l3369 2128                       l3377 217E  
                     l3297 1F1A                       l3289 1EFC                       l4265 1278  
                     l4257 1242                       l4249 1202                       l4193 1066  
                     l4185 0FCC                       l4177 0F9E                       l4169 0F78  
                     l4097 0BA4                       l4089 0B6A                       l4329 3B24  
                     l4441 2626                       l4433 25F8                       l4409 2474  
                     l4521 304C                       l5049 1D2C                       l5081 35CE  
                     l5073 35A4                       l5065 3580                       l5057 3562  
                     l4339 4086                       l4507 4594                       l4515 3F56  
                     l4603 45CA                       l4291 344C                       l4283 342C  
                     l4275 33D2                       l3731 3D8C                       l3723 3D5A  
                     l3715 3D34                       l3707 3D12                       l3555 2E1A  
                     l3547 2DD2                       l3539 2D74                       l3491 2BF4  
                     l3483 2BB6                       l3475 2B92                       l3467 2B60  
                     l3459 2B36                       l3811 385A                       l3803 37FC  
                     l3651 2914                       l3643 28A8                       l3635 283A  
                     l3627 27F4                       l3619 27BE                       l3571 2684  
                     l3395 21EC                       l3387 21D0                       l3379 218E  
                     l3299 1F3C                       l4267 127E                       l4259 1254  
                     l4179 0FA4                       l4187 0FD2                       l4195 106A  
                     l4099 0BA8                       l4435 260C                       l4419 253C  
                     l4371 2248                       l4363 2200                       l4611 432C  
                     l4531 306C                       l4523 3054                       l5091 35F2  
                     l5083 35D4                       l5075 35B0                       l5067 358C  
                     l5059 3568                       l4621 40DA                       l4349 40B2  
                     l4357 40BE                       l4509 45A0                       l4461 4568  
                     l4453 4552                       l4517 3F58                       l4605 45CE  
                     l5157 347A                       l4293 3454                       l4285 3430  
                     l4277 33D6                       l3741 3DB2                       l3733 3D94  
                     l3725 3D62                       l3717 3D38                       l3709 3D1A  
                     l3557 2E20                       l3549 2DEC                       l3493 2C04  
                     l3469 2B76                       l3813 3868                       l3805 382A  
                     l3661 2954                       l3653 2922                       l3645 28DE  
                     l3637 2856                       l3629 2800                       l3581 26BC  
                     l3573 2686                       l3821 4480                       l3397 21EE  
                     l3389 21D6                       l3901 3948                       l4197 1088  
                     l4189 102A                       l4429 25C6                       l4381 22E0  
                     l4373 226C                       l4365 2224                       l4445 2632  
                     l4613 4334                       l4541 30B8                       l4533 307A  
                     l4701 3A1E                       l5093 35FE                       l5085 35DA  
                     l5077 35B6                       l5069 3598                       ?_pad 0011  
                     l4631 4120                       l4623 40EC                       l4359 40C2  
                     l4463 456A                       l4455 4554                       l4607 45D2  
                     l4471 3FB0                       l4295 345C                       l4279 33DA  
                     l3743 3DBA                       l3735 3D96                       l3727 3D70  
                     l3719 3D40                       l3751 3DD6                       l3559 2E22  
                     l3495 2C14                       l3487 2BCA                       l3479 2BA6  
                     l3815 38B8                       l3807 383A                       l3671 29C6  
                     l3663 2982                       l3655 2934                       l3647 28EC  
                     l3639 2862                       l3591 26E8                       l3583 26CC  
                     l3575 2696                       l3567 266A                       l3823 4496  
                     l3831 36CE                       l3903 3954                       l4199 10A4  
                     l4447 2656                       l4439 2618                       l4383 2300  
                     l4375 2274                       l4391 2368                       l4367 2232  
                     l4615 433C                       l4551 3104                       l4543 30C4  
                     l4535 3086                       l4519 3040                       l4703 3A24  
                     l5095 3602                       l5087 35E0                       l5079 35C2  
                     l4633 4128                       l4625 40F4                       l4641 322A  
                     l4465 4576                       l4457 455A                       l4481 3FEA  
                     l4473 3FB8                       l4297 3490                       l4289 3436  
                     l3737 3D9C                       l3729 3D76                       l3761 3E0A  
                     l3753 3DDE                       l3497 2C1C                       l3489 2BE4  
                     l3817 38BE                       l3809 3848                       l3681 2A3C  
                     l3673 29F0                       l3657 2942                       l3649 290A  
                     l3593 26F8                       l3585 26D2                       l3577 26A6  
                     l3569 2676                       l3825 44A6                       l3841 371E  
                     l3913 39B6                       l3921 4202                       l4393 238A  
                     l4385 230E                       l4377 2282                       l4369 2244  
                     l4617 4358                       l4609 431A                       l4529 3058  
                     l4801 1550                       l4721 3A70                       l4713 3A40  
                     l4705 3A30                       l5097 3606                       l5089 35EC  
                     l4635 412E                       l4627 40FC                       l4651 32A2  
                     l4643 3270                       l4459 455C                       l4483 3FF2  
                     l4475 3FC0                       l4467 3F96                       l3739 3DA2  
                     l3771 3E46                       l3763 3E12                       l3755 3DE2  
                     l3747 3DC4                       l3499 2C2C                       l3683 2A58  
                     l3691 2A7E                       l3667 29AC                       l3675 29F4  
                     l3659 2946                       l3595 2708                       l3587 26D8  
                     l3579 26B6                       l3851 3748                       l3843 3722  
                     l3835 36E2                       l3907 3960                       l3931 2E2E  
                     l4395 239A                       l4379 22A6                       l4491 41A8  
                     l4563 3160                       l4555 3120                       l4547 30E0  
                     l4571 318E                       l4539 30A2                       l4811 1572  
                     l4803 1554                       l4731 12AC                       l4723 3A82  
                     l4715 3A46                       l4707 3A36                       l5099 3618  
                     l4629 410A                       l4661 332A                       l4653 32AE  
                     l4645 3286                       l4637 320C                       l4485 3FF4  
                     l4477 3FCE                       l4469 3F9E                       l3773 3E4C  
                     l3765 3E1A                       l3757 3DF0                       l3749 3DC8  
                     l3693 2A82                       l3685 2A68                       l3677 2A0E  
                     l3669 29B8                       l3597 2718                       l3589 26E6  
                     l3861 3770                       l3853 3752                       l3845 3730  
                     l3837 370C                       l3829 36B8                       l3909 3972  
                     l3933 2E4E                       l3917 42BE                       l3925 4238  
                     l4397 23CC                       l4389 2356                       l4493 41B6  
                     l4581 31DA                       l4573 319A                       l4557 3138  
                     l4565 316A                       l4549 30F8                       l4821 16B0  
                     l4813 157E                       l4805 155A                       l4741 12E2  
                     l4733 12B8                       l4901 183C                       l4725 3A86  
                     l4717 3A4C                       l4671 3368                       l4663 3336  
                     l4655 32E0                       l4639 321C                       l4487 3FFA  
                     l4479 3FD4                       l3767 3E28                       l3775 3E52  
                     l3759 3DF8                       l3791 3EF0                       l3783 3E74  
                     l3687 2A76                       l3679 2A22                       l3599 271E  
                     l3863 377C                       l3855 375C                       l3839 370E  
                     l3951 2FF6                       l3943 2F36                       l3935 2EA4  
                     l3919 42CE                       l3927 424A                       l4399 23DC  
                     l4495 41DC                       l4583 31EA                       l4567 317C  
                     l4559 3144                       l4575 31A2                       l4831 16D8  
                     l4823 16C6                       l4815 1582                       l4807 1560  
                     l4743 12E6                       l4735 12CA                       l4911 1864  
                     l4903 1844                       l4727 3A96                       l4719 3A68  
                     l4673 338C                       l4665 3344                       l4657 32E2  
                     l4649 329A                       l4497 457C                       l4593 400C  
                     l3777 3E62                       l3769 3E3E                       l3793 3F14  
                     l3785 3EA2                       l3689 2A78                       l3697 43BE  
                     l3865 378C                       l3953 301E                       l3945 2F72  
                     l3937 2EB8                       l3881 3C78                       l3873 3C3A  
                     l4489 41A0                       l4585 31EC                       l4577 31B8  
                     l4569 317E                       l4841 1718                       l4833 16F0  
                     l4825 16CE                       l4817 159E                       l4809 156C  
                     l4761 139A                       l4745 12F8                       l4737 12D0  
                     l4729 12A0                       l4921 18C4                       l4905 1848  
                     l4675 339C                       l4667 3362                       l4659 32EE  
                     l4499 457E                       l4595 402A                       l3971 43B6  
                     l3963 436C                       l3779 3E6A                       l3795 3F1A  
                     l3787 3EB2                       l3699 43CE                       l3867 379C  
                     l3955 302E                       l3939 2EC6                       l3947 2FA6  
                     l3891 3CE6                       l3883 3C8C                       l3875 3C4A  
                     l4587 31FE                       l4579 31CA                       l4851 175A  
                     l4843 1724                       l4835 16FC                       l4827 16D4  
                     l4819 15BE                       l4771 13CC                       l4755 1318  
                     l4747 12FC                       l4763 139E                       l4739 12DA  
                     l4931 1928                       l4923 18FC                       l4907 185A  
                     l4683 4262                       l4691 39EE                       l4677 33AA  
                     l4669 3364                       l4597 4046                       l3965 4370  
                     l3789 3EE0                       l3869 37AC                       l3949 2FE2  
                     l3885 3CA0                       l3877 3C5E                       l3981 0718  
                     l4589 3202                       l4861 179A                       l4853 1766  
                     l4845 173A                       l4837 16FE                       l4829 16D6  
                     l4781 1474                       l4773 13DA                       l4765 13B2  
                     l4757 132A                       l4749 1302                       l4941 19A0  
                     l4933 192E                       l4917 187A                       l4909 185E  
                     l4925 1900                       l4685 4266                       l4693 39F4  
                     l4679 33AC                       l4599 404E                       l3959 44B8  
                     l3967 4384                       l3799 37BE                       l3895 38C2  
                     l3887 3CA4                       l3879 3C6C                       l3991 0768  
                     l3983 0720                       l3975 06F0                       l4871 17AC  
                     l4863 17A0                       l4847 1742                       l4855 1770  
                     l4839 1700                       l4791 1516                       l4775 144A  
                     l4783 147A                       l4767 13BA                       l4759 1362  
                     l4951 1A48                       l4943 19B2                       l4935 193C  
                     l4927 1914                       l4919 188C                       l4687 4272  
                     l4695 39FA                       l3969 43B2                       l3897 38E2  
                     l3889 3CD2                       l3993 0776                       l3985 0744  
                     l3977 06FA                       l4881 17D4                       l4873 17B2  
                     l4865 17A2                       l4849 1754                       l4857 1774  
                     l4793 1522                       l4785 14D0                       l4777 1456  
                     l4769 13C6                       l4961 1A7C                       l4953 1A54  
                     l4937 1988                       l4945 19B8                       l4929 191C  
                     l4697 3A06                       l4689 39C0                       l3899 3920  
                     l3995 0788                       l3987 074E                       l3979 070A  
                     l4883 17D8                       l4875 17BE                       l4867 17A4  
                     l4859 1788                       l4795 152C                       l4787 14FE  
                     l4779 1462                       l4971 1AAA                       l4963 1A8E  
                     l4955 1A60                       l4947 1A0E                       l4939 1994  
                     l4891 1802                       l4699 3A12                       l3997 0794  
                     l3989 0756                       l4885 17EA                       l4877 17C4  
                     l4869 17A6                       l4797 152C                       l4789 150A  
                     l4981 1AFC                       l4973 1AB0                       l4965 1A92  
                     l4957 1A6A                       l4949 1A3C                       l4893 180E  
                     l3999 079C                       l4887 17EE                       l4799 153E  
                     l4879 17D0                       l4991 1C14                       l4983 1BEE  
                     l4975 1ABC                       l4967 1A98                       l4959 1A6A  
                     l4895 181A                       l4889 17FE                       l4993 1C16  
                     l4985 1C04                       l4977 1AC0                       l4969 1A9E  
                     l4897 182C                       l4995 1C2E                       l4987 1C0C  
                     l4979 1ADC                       l4899 1832                       l4997 1C3A  
                     l4989 1C12                       l4999 1C3C                       STR_1 0605  
                     STR_2 06AE                       STR_3 067C                       STR_4 0635  
                     STR_5 0626                       STR_6 06B9                       STR_7 066E  
                     STR_8 06A3                       STR_9 0663                       u3000 1D7C  
                     u3001 1D78                       u3010 1DBE                       u3011 1DBA  
                     u3100 1EF0                       u3020 1DD4                       u3101 1EEC  
                     u3021 1DD0                       u3110 1F0E                       u3030 1DE6  
                     u3111 1F0A                       u3031 1DE2                       u4000 3848  
                     u3200 205E                       u3120 1F2E                       u3040 1DF6  
                     u4001 3844                       u3201 205A                       u3121 1F2A  
                     u3041 1DF2                       u4010 3868                       u3210 206E  
                     u3130 1F3C                       u3050 1E32                       u4011 3864  
                     u3211 206A                       u3131 1F38                       u3051 1E2E  
                     u4020 38B8                       u3300 2142                       u3220 209A  
                     u3140 1F4C                       u3060 1E40                       u4100 379C  
                     u4021 38B4                       u3301 213E                       u3221 2096  
                     u3141 1F48                       u3061 1E3C                       u4101 3798  
                     u4030 4496                       u3310 217C                       u3230 20AA  
                     u3150 1F7E                       u3070 1EAE                       u4110 3C4A  
                     u4031 4492                       u3311 2178                       u3231 20A6  
                     u3151 1F7A                       u3071 1EAA                       u4111 3C46  
                     u3320 218E                       u3240 20C6                       u3160 1F8C  
                     u3080 1EC6                       u4040 36CE                       u4200 39AC  
                     u4120 3C6C                       u3400 447A                       u5000 3AC4  
                     u3321 218A                       u3241 20C2                       u3161 1F88  
                     u3081 1EC0                       u4041 36CA                       u4201 39A6  
                     u4121 3C68                       u5001 3AC0                       u3410 2AAE  
                     u3330 219E                       u3250 20D6                       u3170 1FAA  
                     u3090 1EC8                       u4050 3702                       u4210 39AE  
                     u4130 3CC2                       u5010 3AF6                       u3411 2AAA  
                     u3331 219A                       u3251 20D2                       u3171 1FA6  
                     u4131 3CBE                       u5011 3AF2                       u3500 2C4E  
                     u3420 2AC0                       u3340 21BE                       u3260 20E8  
                     u3180 1FE2                       u4060 3730                       u4140 3CD2  
                     u4220 4306                       u5020 3B12                       u5100 22A6  
                     u3501 2C4A                       u3421 2ABC                       u3341 21BA  
                     u3261 20E4                       u3181 1FDE                       u4061 372C  
                     u4141 3CCE                       u5021 3B0E                       u5101 22A2  
                     u3510 2C78                       u3430 2AD0                       u3350 21D0  
                     u3270 20FE                       u3190 2028                       u4070 3744  
                     u4150 3902                       u4310 2F32                       u4230 4318  
                     u5030 3B24                       u5110 234E                       u3511 2C74  
                     u3431 2ACC                       u3351 21CC                       u3271 20FA  
                     u3191 2024                       u4071 3740                       u4055 36F8  
                     u4311 2F2E                       u4231 4314                       u5031 3B20  
                     u5111 2348                       u4400 43B2                       u3600 2D74  
                     u3520 2C9C                       u3440 2B14                       u3360 21EC  
                     u3280 2114                       u4080 376C                       u4160 3920  
                     u4320 2F56                       u4240 4232                       u5040 3B4C  
                     u5200 254E                       u5120 2350                       u4401 43AE  
                     u3601 2D70                       u3521 2C98                       u3441 2B10  
                     u3361 21E8                       u3281 2110                       u4081 3768  
                     u4161 391C                       u4305 2EDA                       u4241 422C  
                     u5041 3B48                       u5201 254A                       u5050 4096  
                     u3610 2DBC                       u3530 2CB2                       u3450 2B26  
                     u3290 2128                       u4090 378C                       u4170 3948  
                     u4330 2F72                       u4306 2EE4                       u3370 4446  
                     u4250 4234                       u4410 0718                       u5210 25EA  
                     u5130 2368                       u5051 4092                       u3611 2DB8  
                     u3531 2CAE                       u3451 2B22                       u3291 2124  
                     u4091 3788                       u4171 3944                       u4155 38F8  
                     u4331 2F6E                       u4307 2EF4                       u3371 4442  
                     u4227 42FC                       u4411 0714                       u5211 25E6  
                     u5131 2364                       u5060 40AE                       u5220 3FB0  
                     u3620 2DEC                       u3540 2CD0                       u3460 2B36  
                     u3700 273E                       u4180 3972                       u4340 2FC6  
                     u3380 4518                       u4260 424A                       u4500 08D2  
                     u4420 0768                       u5140 239A                       u5300 3094  
                     u5061 40AA                       u5221 3FAC                       u3621 2DE8  
                     u3541 2CCC                       u3461 2B32                       u3701 273A  
                     u4181 396E                       u4325 2F4C                       u3381 4514  
                     u4261 4246                       u4501 08CC                       u4421 0764  
                     u5141 2396                       u5301 3090                       u5070 40D8  
                     u5230 3FCE                       u3630 2E1A                       u3550 2CF0  
                     u3470 2B76                       u3710 274E                       u4350 2FE2  
                     u4270 2E76                       u3390 4478                       u4510 08D4  
                     u4430 0776                       u5150 23DC                       u5310 30A2  
                     u5071 40D4                       u5231 3FCA                       u3631 2E16  
                     u3551 2CEC                       u3471 2B72                       u3711 274A  
                     u4351 2FDE                       u3391 4472                       u4431 0772  
                     u5151 23D8                       u5311 309E                       u5240 3FEA  
                     u3560 2D02                       u3480 2BB6                       u3800 2A0E  
                     u3720 28C8                       u3640 2684                       u4360 301E  
                     u4280 2EA4                       u4600 0B0C                       u4520 08EC  
                     u4440 0788                       u5160 2420                       u5080 2224  
                     u5400 3160                       u5320 30B8                       u5241 3FE6  
                     u3561 2CFE                       u3481 2BB2                       u3801 2A0A  
                     u3641 2680                       u4361 301A                       u4345 2FBC  
                     u4281 2EA0                       u4601 0B08                       u4521 08E8  
                     u4441 0784                       u5161 241C                       u5081 2220  
                     u5401 315C                       u5321 30B4                       u4370 44E8  
                     u3570 2D30                       u3490 2C2C                       u3810 2A3C  
                     u3730 2922                       u3650 2696                       u4290 2EC6  
                     u4610 0B28                       u4530 0970                       u4450 07D0  
                     u5170 24CE                       u5090 226C                       u5250 41F8  
                     u5410 318E                       u5330 30D2                       u4371 44E2  
                     u3571 2D2C                       u3491 2C28                       u3811 2A38  
                     u3731 291E                       u3651 2692                       u4195 3984  
                     u4291 2EC2                       u4275 2E6C                       u4611 0B24  
                     u4531 096C                       u4451 07CC                       u5171 24CA  
                     u5091 2268                       u5251 41F4                       u5411 318A  
                     u5331 30CE                       u5500 321C                       u5260 3F52  
                     u4380 44EA                       u3900 3DF0                       u3580 2D46  
                     u3820 2A76                       u3740 2942                       u3660 26A6  
                     u2940 3B82                       u4700 0DA0                       u4620 0B5E  
                     u4540 0A04                       u4460 07FE                       u5180 2534  
                     u5420 31B8                       u5340 30E0                       u5501 3218  
                     u3901 3DEC                       u3581 2D42                       u3821 2A72  
                     u3741 293E                       u3725 28BE                       u3661 26A2  
                     u2941 3B7E                       u4701 0D9C                       u4621 0B5A  
                     u4541 0A00                       u4461 07F8                       u5181 252E  
                     u5421 31B4                       u5341 30DC                       u5510 322A  
                     u5270 3F84                       u4390 4384                       u3830 3D12  
                     u3910 3E0A                       u3590 2D5A                       u3750 2954  
                     u3670 26E6                       u2950 3B94                       u4710 0DE8  
                     u4630 0B84                       u4550 0A76                       u4470 0800  
                     u5190 2536                       u5430 31CA                       u5350 30F8  
                     u5511 3226                       u4391 4380                       u3831 3D0E  
                     u3911 3E06                       u3591 2D56                       u3751 2950  
                     u3671 26E2                       u2951 3B90                       u4711 0DE4  
                     u4631 0B80                       u4551 0A72                       u5431 31C6  
                     u5351 30F4                       u5520 3286                       u5280 3F94  
                     u3840 3D2C                       u3920 3E28                       u3760 2982  
                     u3680 26F8                       u2960 3BBC                       u4800 0FB6  
                     u4720 0DF8                       u4640 0B96                       u4560 0A9C  
                     u4480 0818                       u5440 31DA                       u5360 3112  
                     u5600 3A68                       u5521 3282                       u5281 3F90  
                     u3841 3D28                       u3921 3E24                       u3761 297E  
                     u3681 26F4                       u2961 3BB8                       u4801 0FB2  
                     u4721 0DF4                       u4641 0B92                       u4561 0A98  
                     u4481 0814                       u5441 31D6                       u5361 310E  
                     u5601 3A64                       u5530 32DC                       u3850 3D52  
                     u3930 3E3E                       u3770 2998                       u3690 2708  
                     u2970 3BF2                       u4810 1088                       u4730 0E60  
                     u4650 0BA4                       u4570 0AAE                       u4490 08A4  
                     u5450 31EA                       u5370 3120                       u5290 307A  
                     u5610 3A96                       u5531 32D8                       u5267 3F48  
                     u3851 3D4E                       u3931 3E3A                       u3771 2994  
                     u3691 2704                       u2971 3BEE                       u4811 1084  
                     u4731 0E5C                       u4651 0BA0                       u4571 0AAA  
                     u4491 08A0                       u5451 31E6                       u5371 311C  
                     u5291 3076                       u5611 3A92                       u5540 3326  
                     u3860 3D70                       u3940 3E62                       u3780 29AC  
                     u2980 1D5A                       u4900 123C                       u4820 10A4  
                     u4740 0F04                       u4660 0BBA                       u4580 0AD0  
                     u5460 31FE                       u5380 3138                       u5700 1788  
                     u5620 1314                       u5541 3322                       u5277 3F7A  
                     u3861 3D6C                       u3941 3E5E                       u3781 29A8  
                     u2981 1D56                       u4901 1236                       u4821 10A0  
                     u4741 0F00                       u4661 0BB6                       u4581 0ACC  
                     u5461 31FA                       u5381 3134                       u5701 1784  
                     u5621 1310                       u5470 40EC                       u5550 3344  
                     u3870 3D8C                       u3950 3EA2                       u3790 29C6  
                     u2990 1D6C                       u4910 123E                       u4830 10B6  
                     u4750 0F16                       u4670 0BC8                       u4590 0AF6  
                     u5390 3152                       u5710 179A                       u5630 132A  
                     u5471 40E8                       u5551 3340                       u3871 3D88  
                     u3951 3E9E                       u3791 29C2                       u2991 1D68  
                     u4831 10B2                       u4751 0F12                       u4671 0BC4  
                     u4591 0AF2                       u5391 314E                       u5711 1796  
                     u5631 1326                       u5480 410A                       u5560 3354  
                     u3880 3DB2                       u3960 3EE0                       u4920 1254  
                     u4840 10C4                       u4760 0F28                       u4680 0BF2  
                     u5720 17FE                       u5640 13B2                       u5800 1C92  
                     u5481 4106                       u5561 3350                       u3881 3DAE  
                     u3961 3EDC                       u4921 1250                       u4841 10C0  
                     u4761 0F24                       u4681 0BEE                       u5721 17FA  
                     u5641 13AE                       u5801 1C8E                       u5490 4120  
                     u5570 3362                       u4930 33F6                       u3890 3DD6  
                     u3970 3F14                       u4850 10FA                       u4770 0F36  
                     u4690 0D3A                       u5650 144A                       u5810 1CC6  
                     u5730 1876                       u5491 411C                       u5571 335E  
                     u4931 33F2                       u3891 3DD2                       u3971 3F10  
                     u4851 10F6                       u4771 0F32                       u4691 0D36  
                     u5651 1446                       u5811 1CC2                       u5731 1872  
                     u5580 339C                       u4940 342C                       u3980 37EC  
                     u4860 1128                       u4780 0F50                       u5820 1CD8  
                     u5740 188C                       u5581 3398                       u4941 3428  
                     u3981 37E8                       u4861 1124                       u4781 0F4C  
                     u5661 1548                       u5821 1CD4                       u5741 1888  
                     u5590 33AA                       u4950 3448                       u3990 382A  
                     u4870 11AC                       u4790 0F5E                       u5670 16C6  
                     u5830 1D3C                       u5750 1914                       u5591 33A6  
                     u4951 3444                       u3991 3826                       u4871 11A8  
                     u4791 0F5A                       u5671 16C2                       u5831 1D38  
                     u5751 1910                       u4960 34FE                       u4880 11C6  
                     u5680 173A                       u5760 1988                       u5840 363A  
                     u4961 34F8                       u4881 11C2                       u5681 1736  
                     u5761 1984                       u5841 3636                       u4970 3500  
                     u4890 11DE                       u5690 1754                       u5850 365E  
                     u4891 11DA                       u5691 1750                       u5771 1A86  
                     u5851 365A                       u4980 3516                       u5780 1C04  
                     u5860 3682                       u4981 3512                       u5781 1C00  
                     u5861 367E                       u4990 3528                       u5790 1C78  
                     u4991 3524                       u5791 1C74                       _dbuf 0108  
                     _atoi 33BE                       _main 354E                       _prec 00EE  
                     _nout 00EA                       pad@i 0018                       pad@p 0015  
                     fsr0h 000FEA                       fsr1h 000FE2                       indf0 000FEF  
                     fsr2h 000FDA                       fsr0l 000FE9                       indf2 000FDF  
                     fsr1l 000FE1                       pad@w 001A                       fsr2l 000FD9  
            ___fpclassifyf 38C2            ??_encher_tanque 00DC                       prodh 000FF4  
                     prodl 000FF3                       start 0000            ___fldiv@new_exp 0049  
         encher_tanque@num 017A           encher_tanque@tmp 018A           encher_tanque@vol 007D  
             ___param_bank 000000      encher_tanque@porcento 0174      encher_tanque@potencia 017E  
                    ??_pad 0017              ___fltol@sign1 0030                      ?_atoi 0008  
          __end_of___fladd 2200                      ?_main 0001            __end_of___fldiv 2E2E  
          __end_of___awdiv 3DC4            __end_of___flneg 44B8                      STR_10 0616  
                    STR_11 0663                      STR_12 06D4                      STR_20 0652  
                    STR_21 0663                      STR_13 06EC                      STR_30 06EC  
                    STR_22 06D4                      STR_14 0697                      STR_23 06EC  
                    STR_31 0663                      STR_15 06C3                      STR_40 06E9  
                    STR_32 06D9                      STR_16 068A                      STR_24 0644  
                    STR_25 06C3                      STR_33 06E1                      STR_17 0660  
                    STR_18 06A3                      STR_26 068A                      STR_42 06E9  
                    STR_19 0663                      STR_27 0660                      STR_28 06D4  
                    STR_36 06DD            __end_of___awmod 3E74                      STR_37 06E5  
                    STR_29 06CC            __end_of___flmul 2A94            __end_of___flsub 4404  
          __end_of___fltol 37BE            ___awdiv@divisor 0003   __size_of_esvaziar_tanque 053E  
          __end_of___lwdiv 400A            __end_of___lwmod 413E            ___awdiv@counter 0005  
             vfpfcnvrt@fmt 0073           esvaziar_tanque@i 0186           esvaziar_tanque@y 016C  
          __end_of_lcd_dat 457A            __end_of_lcd_cmd 45A4            __end_of_lcd_str 3F96  
                    _flags 00F0                      _linha 0601                      _fputc 3B70  
                    _fputs 4404            __end_of_isdigit 44F0                      atoi@n 0015  
                    pad@fp 0011                      atoi@s 0008                      _width 00EC  
                    _putch 45EE            __end_of_isspace 43BE            __end_of_isupper 4480  
                    tablat 000FF5            __end_of_pwmSet1 4076            __end_of_pwmInit 45DE  
        encher_tanque@F356 019F                      plusw1 000FE3                      plusw2 000FDB  
                    status 000FD8            __end_of_sprintf 436C             ?___fpclassifyf 0001  
          __end_of_tolower 4262            __end_of_strncmp 3B70            __initialization 413E  
             __end_of_atoi 354E               __end_of_main 36B8                     ??_atoi 000A  
                   ??_main 007F              __activetblptr 000002            tc_tecla@timeout 0007  
                   ?_fputc 0001                     ?_fputs 000A           ___awdiv@dividend 0001  
                   ?_putch 0001           __end_of___xxtofl 33BE          esvaziar_tanque@t1 0184  
        esvaziar_tanque@t2 0188    encher_tanque@incremento 0180     esvaziar_tanque@numeros 0158  
             vfprintf@cfmt 007B           __end_of_lcd_init 42BE                     ___flge 37BE  
                   ___fleq 3E74                  ??___fladd 0030                     ___wmul 45A4  
                ??___fldiv 0040                  ??___awdiv 0005                  ??___flneg 0005  
                ??___awmod 0005                  ??___flmul 0017                  ??___flsub 0040  
                ??___fltol 002C                     _efgtoa 06F0                  ??___lwdiv 0005  
                ??___lwmod 0005                     _lcd_wr 45E6                     _atraso 01B3  
                   _floorf 2E2E                     clear_0 4184                     clear_1 4190  
         ___awdiv@quotient 0007            ___awmod@divisor 0003            ___awmod@counter 0005  
                   pad@buf 0013                  ??_lcd_dat 0007                  ??_lcd_cmd 0007  
         __end_of_tc_tecla 320A                     _strcpy 42BE                     _strlen 44F0  
                   _volume 00F4                  ??_lcd_str 000A                     fputc@c 0001  
                   fputs@c 000E                     fputs@i 000F                     fputs@s 000A  
                ??_isdigit 0003            ___fpclassifyf@e 0009            ___fpclassifyf@u 000B  
          ___fpclassifyf@x 0001               __mediumconst 0000                  ??_isspace 0003  
                   tblptrh 000FF7                  ??_isupper 0003                     tblptrl 000FF6  
                   tblptru 000FF8                  ??_pwmSet1 0008                  ??_pwmInit 0001  
                   putch@c 0001           __end_of_vfprintf 4202                  ??_sprintf 007D  
        ??_esvaziar_tanque 00DC                  ??_tolower 0009                  ??_strncmp 0007  
               ___flge@ff1 0038                 ___flge@ff2 003C            ??___fpclassifyf 0005  
             ___xxtofl@arg 000B         encher_tanque@i_146 0178               ___xxtofl@exp 000A  
             ___xxtofl@val 0001                 ___fleq@ff1 0001                 ___fleq@ff2 0005  
               __accesstop 0080    __end_of__initialization 4196                 ___flneg@f1 0001  
            ___rparam_used 000001         encher_tanque@tempo 0182                 ___fltol@f1 0028  
           __pcstackCOMRAM 0001               __pidataBANK0 45DE               __pidataBANK1 4526  
            __end_of_linha 0605              __end_of_fputc 3C3A              __end_of_fputs 4448  
            __end_of_putch 45F0           ??_ver_quantidade 007F                    ??_fputc 0005  
                  ??_fputs 000E         __size_of_atraso_ms 0064                    ??_putch 0001  
               __pbssBANK0 00EA                 __pbssBANK1 0100                tc_tecla@ret 000C  
              tc_tecla@tmp 000B                 _efgtoa$780 008E                 _efgtoa$774 0088  
               _efgtoa$768 0084                 _efgtoa$769 0086                 _efgtoa$778 008A  
               _efgtoa$779 008C                    ?___flge 0038                    ?___fleq 0001  
                  ?___wmul 0001                    ?_efgtoa 0065                    ?_lcd_wr 0001  
                  ?_floorf 0051                    ?_strcpy 0001                    ?_strlen 0001  
                ?___xxtofl 0001         __size_of_vfpfcnvrt 046A                  ?_lcd_init 0001  
               _atraso_min 00F8         esvaziar_tanque@num 017A         esvaziar_tanque@tmp 018A  
       esvaziar_tanque@vol 007D                  ?_tc_tecla 0007    esvaziar_tanque@porcento 0174  
  esvaziar_tanque@potencia 017E                    __Hparam 0000                    __Lparam 0000  
    __end_of_encher_tanque 1802            __size_of___flge 0104            __size_of___fleq 00AA  
                  ___fladd 1D40                    ___fldiv 2A94                    ___awdiv 3D00  
                  ___flneg 4480                    ___awmod 3DC4                    ___flmul 266A  
                  ___flsub 43BE                    ___fltol 36B8            __size_of___wmul 0026  
                  ___lwdiv 3F96                    ___lwmod 40DA                  ?_vfprintf 00C4  
        __end_of_atraso_ms 40DA               __psmallconst 0600            __size_of_efgtoa 0BB0  
          __size_of_lcd_wr 0008            __size_of_floorf 0212                    __pcinit 413E  
                  __ramtop 0600                    __ptext0 354E                    __ptext1 39C0  
                  __ptext2 4262                    __ptext3 1802                    __ptext4 12A0  
                  __ptext5 3040                    __ptext6 431A                    __ptext7 41A0  
                  __ptext8 2200                    __ptext9 3A9A                    _lcd_dat 4550  
                  _lcd_cmd 457A                    _lcd_str 3F1E            __size_of_strcpy 005C  
          __size_of_strlen 0036               __size_of_pad 00C6                    _isdigit 44B8  
               ??___xxtofl 0005           ___awmod@dividend 0001                    _isspace 436C  
                  _isupper 4448                    efgtoa@c 006B                    efgtoa@d 0098  
                  efgtoa@e 00B0                    efgtoa@f 0067                    efgtoa@g 00AC  
                  efgtoa@h 00A2                    efgtoa@i 00AA                    efgtoa@l 00A6  
                  efgtoa@m 0094                    efgtoa@n 00B2                    efgtoa@p 009C  
                  efgtoa@t 0090                    efgtoa@u 00B4                    efgtoa@w 009F  
                  _pwmSet1 400A                    _pwmInit 45CA                    atoi@neg 000E  
                  _sprintf 431A                    _tolower 4202                    main@opt 00E8  
                  main@tmp 00E7                 ??_lcd_init 0008                    _strncmp 3A9A  
     end_of_initialization 4196                    floorf@e 005F                    floorf@m 005B  
                  floorf@u 0061                    floorf@x 0051                    fputc@fp 0003  
            __Lmediumconst 0000                    fputs@fp 000C                 ??_tc_tecla 0009  
        __end_of_vfpfcnvrt 266A                 efgtoa@mode 00A1                 efgtoa@sign 009A  
                  postdec1 000FE5                    postdec2 000FDD                    postinc0 000FEE  
                  postinc1 000FE6                    postinc2 000FDE                 ??_vfprintf 007B  
                  strcpy@d 0009                    strlen@a 0003                    strcpy@s 0007  
                  strlen@s 0001            _esvaziar_tanque 1802                ___fladd@grs 0037  
            ___xxtofl@sign 0009                 lcd_dat@val 0007                 lcd_cmd@val 0007  
              ___fldiv@grs 004B                ___fldiv@rem 0044                ___flmul@grs 001C  
               lcd_str@str 0008       esvaziar_tanque@i_181 0178             __end_of___flge 38C2  
           __end_of___fleq 3F1E                 atraso_ms@i 0003                 atraso_ms@j 0005  
               atraso_ms@k 0006                 atraso_ms@t 0001                vfpfcnvrt@ap 0075  
              vfpfcnvrt@ct 00C0                vfpfcnvrt@fp 0071             __end_of___wmul 45CA  
     esvaziar_tanque@tempo 0182             __end_of_efgtoa 12A0             __end_of_lcd_wr 45EE  
           __end_of_floorf 3040                 floorf@F524 0100             __end_of_strcpy 431A  
           __end_of_strlen 4526        start_initialization 413E                __end_of_pad 3D00  
    __end_of___fpclassifyf 39C0                vfprintf@fmt 00C6    __end_of_esvaziar_tanque 1D40  
                 ??___flge 0040                   ??___fleq 0009                   ??___wmul 0005  
                 ??_efgtoa 006C                   ??_lcd_wr 0001                __pdataBANK0 00F8  
              __pdataBANK1 018B                   ??_floorf 0055                   ??_strcpy 0005  
                 ??_strlen 0003                  ___fladd@a 002C                  ___fladd@b 0028  
                ___fldiv@a 003C                  ___fldiv@b 0038                  ___flmul@a 0013  
                ___flmul@b 000F                  ___flsub@a 003C                  ___flsub@b 0038  
            __pcstackBANK0 0080              __pcstackBANK1 0158          __size_of___xxtofl 01B4  
        __size_of_lcd_init 005C                 tc_tecla@to 0009           ___lwdiv@dividend 0001  
        __size_of_tc_tecla 01CA                   ?___fladd 0028                   ?___fldiv 0038  
                 ?___awdiv 0001                   ?___flneg 0001                   ?___awmod 0001  
                 ?___flmul 000F                   ?___flsub 0038                   ?___fltol 0028  
                 ?___lwdiv 0001                   ?___lwmod 0001                   ?_lcd_dat 0001  
                 ?_lcd_cmd 0001          __size_of_vfprintf 0062                   ?_lcd_str 0008  
                _atrasoMed 00FC                  _atrasoMax 00FA                  _atrasoMin 00FE  
                _atraso_ms 4076                __smallconst 0600                   ?_isdigit 0001  
          ver_quantidade@i 00E5            ver_quantidade@y 00DC                   ?_isspace 0001  
                 ?_isupper 0001                   ?_pwmSet1 0001                   ?_pwmInit 0001  
         ___lwdiv@quotient 0005                   ?_sprintf 00CA                   ?_tolower 0007  
  __size_of_ver_quantidade 00DA             __size_of_fputc 00CA             __size_of_fputs 0044  
                 ?_strncmp 0001             __size_of_putch 0002             ___wmul@product 0005  
         ?_esvaziar_tanque 007D                 pwmSet1@val 000B                  _vfpfcnvrt 2200  
        ___wmul@multiplier 0001                 ?_atraso_ms 0001                  lcd_wr@val 0001  
      esvaziar_tanque@F356 018B     __size_of_encher_tanque 0562                 vfpfcnvrt@c 00C3  
               vfpfcnvrt@f 00BC                  copy_data0 4152                  copy_data1 4172  
        ver_quantidade@tmp 00E4          ver_quantidade@vol 007D                   __Hrparam 0000  
               vfprintf@ap 00C8                   __Lrparam 0000                 vfprintf@fp 00C4  
         __size_of___fladd 04C0           __size_of___fldiv 039A           __size_of___awdiv 00C4  
         __size_of___flneg 0038           __size_of___awmod 00B0           __size_of___flmul 042A  
         __size_of___flsub 0046           __size_of___fltol 0106                 ?_vfpfcnvrt 0071  
         __size_of___lwdiv 0074           __size_of___lwmod 0064            pwmSet1@porcento 000A  
       ___fpclassifyf@F463 0104           __size_of_lcd_dat 002A           __size_of_lcd_cmd 002A  
               sprintf@fmt 00CC           __size_of_lcd_str 0078                   ___xxtofl 320A  
                 _atoi$832 0010                   _atoi$833 0014                   _atoi$834 0012  
                tc_tecla@i 000D           __size_of_isdigit 0038            ___lwdiv@divisor 0003  
         __size_of_isspace 0052            ___lwdiv@counter 0007                   __ptext10 06F0  
                 __ptext11 4202                   __ptext20 38C2                   __ptext12 4448  
                 __ptext21 36B8                   __ptext13 42BE                   __ptext30 3D00  
                 __ptext22 43BE                   __ptext14 3C3A                   __ptext31 33BE  
                 __ptext23 1D40                   __ptext15 44F0                   __ptext40 457A  
                 __ptext32 436C                   __ptext24 4480                   __ptext16 4404  
                 __ptext41 45E6                   __ptext33 44B8                   __ptext25 266A  
                 __ptext17 3B70                   __ptext42 4076                   __ptext34 400A  
                 __ptext26 37BE                   __ptext18 45EE                   __ptext43 320A  
                 __ptext35 45A4                   __ptext27 3E74                   __ptext19 2E2E  
                 __ptext44 40DA                   __ptext36 3F96                   __ptext28 2A94  
                 __ptext37 45CA                   __ptext29 3DC4                   __ptext38 3F1E  
                 __ptext39 4550           __size_of_isupper 0038           __size_of_pwmSet1 006C  
         __size_of_pwmInit 0014                   _lcd_init 4262           __size_of_sprintf 0052  
         __size_of_tolower 0060                 strcpy@dest 0001           __size_of_strncmp 00D6  
            __size_of_atoi 0190              __size_of_main 016A                   _tc_tecla 3040  
                 efgtoa@fp 0065                   efgtoa@ne 0096                   efgtoa@pp 0092  
                 efgtoa@ou 0080              _encher_tanque 12A0                   _vfprintf 41A0  
                 lcd_str@i 000C                _isspace$863 0007                ??_atraso_ms 0003  
                 isdigit@c 0001             _ver_quantidade 39C0                  sprintf@ap 00D4  
         ___lwmod@dividend 0001                   isspace@c 0001                  strcpy@src 0003  
                 isupper@c 0001                  strncmp@_l 0001                  strncmp@_r 0003  
           ?_encher_tanque 007D                efgtoa@nmode 009E                ??_vfpfcnvrt 0077  
            _vfpfcnvrt$794 00B8              _vfpfcnvrt$798 00BA                   sprintf@f 00D6  
                 tolower@c 0007                   sprintf@s 00CA     __size_of___fpclassifyf 00FE  
          ___lwmod@divisor 0003            ___lwmod@counter 0005     __end_of_ver_quantidade 3A9A  
                 strncmp@l 0008                   strncmp@n 0005                   strncmp@r 000A  
            ___fladd@signs 0034               ___fladd@aexp 0035               ___fladd@bexp 0036  



Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Jul 07 10:16:04 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    64                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    65  0000                     
    66                           ; Version 2.20
    67                           ; Generated 12/02/2020 GMT
    68                           ; 
    69                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F4520 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100  0000                     
   101                           	psect	idataBANK0
   102  005092                     __pidataBANK0:
   103                           	callstack 0
   104                           
   105                           ;initializer for _atraso_min
   106  005092  0005               	dw	5
   107                           
   108                           ;initializer for _atrasoMax
   109  005094  03E8               	dw	1000
   110                           
   111                           ;initializer for _atrasoMed
   112  005096  01F4               	dw	500
   113                           
   114                           ;initializer for _atrasoMin
   115  005098  0014               	dw	20
   116                           
   117                           	psect	idataBANK1
   118  004FDA                     __pidataBANK1:
   119                           	callstack 0
   120                           
   121                           ;initializer for esvaziar_tanque@F356
   122  004FDA  003F               	dw	63
   123  004FDC  0006               	dw	6
   124  004FDE  005B               	dw	91
   125  004FE0  004F               	dw	79
   126  004FE2  0066               	dw	102
   127  004FE4  006D               	dw	109
   128  004FE6  007D               	dw	125
   129  004FE8  0007               	dw	7
   130  004FEA  007F               	dw	127
   131  004FEC  006F               	dw	111
   132                           
   133                           ;initializer for encher_tanque@F356
   134  004FEE  003F               	dw	63
   135  004FF0  0006               	dw	6
   136  004FF2  005B               	dw	91
   137  004FF4  004F               	dw	79
   138  004FF6  0066               	dw	102
   139  004FF8  006D               	dw	109
   140  004FFA  007D               	dw	125
   141  004FFC  0007               	dw	7
   142  004FFE  007F               	dw	127
   143  005000  006F               	dw	111
   144                           
   145                           ;initializer for _atraso
   146  005002  000F               	dw	15
   147                           
   148                           	psect	smallconst
   149  000600                     __psmallconst:
   150                           	callstack 0
   151  000600  00                 	db	0
   152  000601                     _linha:
   153                           	callstack 0
   154  000601  01                 	db	1
   155  000602  02                 	db	2
   156  000603  04                 	db	4
   157  000604  00                 	db	0
   158  000605                     __end_of_linha:
   159                           	callstack 0
   160  000605                     STR_1:
   161  000605  41                 	db	65	;'A'
   162  000606  62                 	db	98	;'b'
   163  000607  61                 	db	97	;'a'
   164  000608  73                 	db	115	;'s'
   165  000609  74                 	db	116	;'t'
   166  00060A  65                 	db	101	;'e'
   167  00060B  63                 	db	99	;'c'
   168  00060C  69                 	db	105	;'i'
   169  00060D  6D                 	db	109	;'m'
   170  00060E  65                 	db	101	;'e'
   171  00060F  6E                 	db	110	;'n'
   172  000610  74                 	db	116	;'t'
   173  000611  6F                 	db	111	;'o'
   174  000612  20                 	db	32
   175  000613  64                 	db	100	;'d'
   176  000614  65                 	db	101	;'e'
   177  000615  00                 	db	0
   178  000616                     STR_10:
   179  000616  45                 	db	69	;'E'
   180  000617  52                 	db	82	;'R'
   181  000618  52                 	db	82	;'R'
   182  000619  4F                 	db	79	;'O'
   183  00061A  3A                 	db	58	;':'
   184  00061B  20                 	db	32
   185  00061C  76                 	db	118	;'v'
   186  00061D  6F                 	db	111	;'o'
   187  00061E  6C                 	db	108	;'l'
   188  00061F  20                 	db	32
   189  000620  3E                 	db	62	;'>'
   190  000621  20                 	db	32
   191  000622  4D                 	db	77	;'M'
   192  000623  41                 	db	65	;'A'
   193  000624  58                 	db	88	;'X'
   194  000625  00                 	db	0
   195  000626                     STR_5:
   196  000626  31                 	db	49	;'1'
   197  000627  2D                 	db	45
   198  000628  56                 	db	86	;'V'
   199  000629  65                 	db	101	;'e'
   200  00062A  72                 	db	114	;'r'
   201  00062B  20                 	db	32
   202  00062C  32                 	db	50	;'2'
   203  00062D  2D                 	db	45
   204  00062E  45                 	db	69	;'E'
   205  00062F  6E                 	db	110	;'n'
   206  000630  63                 	db	99	;'c'
   207  000631  68                 	db	104	;'h'
   208  000632  65                 	db	101	;'e'
   209  000633  72                 	db	114	;'r'
   210  000634  00                 	db	0
   211  000635                     STR_4:
   212  000635  56                 	db	86	;'V'
   213  000636  61                 	db	97	;'a'
   214  000637  7A                 	db	122	;'z'
   215  000638  61                 	db	97	;'a'
   216  000639  6F                 	db	111	;'o'
   217  00063A  3A                 	db	58	;':'
   218  00063B  20                 	db	32
   219  00063C  30                 	db	48	;'0'
   220  00063D  2E                 	db	46
   221  00063E  35                 	db	53	;'5'
   222  00063F  20                 	db	32
   223  000640  4C                 	db	76	;'L'
   224  000641  2F                 	db	47
   225  000642  73                 	db	115	;'s'
   226  000643  00                 	db	0
   227  000644                     STR_24:
   228  000644  45                 	db	69	;'E'
   229  000645  73                 	db	115	;'s'
   230  000646  76                 	db	118	;'v'
   231  000647  61                 	db	97	;'a'
   232  000648  7A                 	db	122	;'z'
   233  000649  69                 	db	105	;'i'
   234  00064A  61                 	db	97	;'a'
   235  00064B  6E                 	db	110	;'n'
   236  00064C  64                 	db	100	;'d'
   237  00064D  6F                 	db	111	;'o'
   238  00064E  2E                 	db	46
   239  00064F  2E                 	db	46
   240  000650  2E                 	db	46
   241  000651  00                 	db	0
   242  000652                     STR_20:
   243  000652  45                 	db	69	;'E'
   244  000653  52                 	db	82	;'R'
   245  000654  52                 	db	82	;'R'
   246  000655  4F                 	db	79	;'O'
   247  000656  3A                 	db	58	;':'
   248  000657  20                 	db	32
   249  000658  76                 	db	118	;'v'
   250  000659  6F                 	db	111	;'o'
   251  00065A  6C                 	db	108	;'l'
   252  00065B  20                 	db	32
   253  00065C  3C                 	db	60	;'<'
   254  00065D  20                 	db	32
   255  00065E  30                 	db	48	;'0'
   256  00065F  00                 	db	0
   257  000660                     STR_11:
   258  000660  20                 	db	32
   259  000661  52                 	db	82	;'R'
   260  000662  42                 	db	66	;'B'
   261  000663  33                 	db	51	;'3'
   262  000664  20                 	db	32
   263  000665  2D                 	db	45
   264  000666  20                 	db	32
   265  000667  56                 	db	86	;'V'
   266  000668  6F                 	db	111	;'o'
   267  000669  6C                 	db	108	;'l'
   268  00066A  74                 	db	116	;'t'
   269  00066B  61                 	db	97	;'a'
   270  00066C  72                 	db	114	;'r'
   271  00066D  00                 	db	0
   272  00066E                     STR_7:
   273  00066E  20                 	db	32
   274  00066F  20                 	db	32
   275  000670  20                 	db	32
   276  000671  20                 	db	32
   277  000672  49                 	db	73	;'I'
   278  000673  4E                 	db	78	;'N'
   279  000674  56                 	db	86	;'V'
   280  000675  41                 	db	65	;'A'
   281  000676  4C                 	db	76	;'L'
   282  000677  49                 	db	73	;'I'
   283  000678  44                 	db	68	;'D'
   284  000679  4F                 	db	79	;'O'
   285  00067A  21                 	db	33
   286  00067B  00                 	db	0
   287  00067C                     STR_3:
   288  00067C  56                 	db	86	;'V'
   289  00067D  6F                 	db	111	;'o'
   290  00067E  6C                 	db	108	;'l'
   291  00067F  20                 	db	32
   292  000680  6D                 	db	109	;'m'
   293  000681  61                 	db	97	;'a'
   294  000682  78                 	db	120	;'x'
   295  000683  20                 	db	32
   296  000684  3D                 	db	61	;'='
   297  000685  20                 	db	32
   298  000686  37                 	db	55	;'7'
   299  000687  30                 	db	48	;'0'
   300  000688  4C                 	db	76	;'L'
   301  000689  00                 	db	0
   302  00068A                     STR_16:
   303  00068A  20                 	db	32
   304  00068B  20                 	db	32
   305  00068C  20                 	db	32
   306  00068D  20                 	db	32
   307  00068E  53                 	db	83	;'S'
   308  00068F  55                 	db	85	;'U'
   309  000690  43                 	db	67	;'C'
   310  000691  45                 	db	69	;'E'
   311  000692  53                 	db	83	;'S'
   312  000693  53                 	db	83	;'S'
   313  000694  4F                 	db	79	;'O'
   314  000695  21                 	db	33
   315  000696  00                 	db	0
   316  000697                     STR_9:
   317  000697  20                 	db	32
   318  000698  20                 	db	32
   319  000699  23                 	db	35
   320  00069A  20                 	db	32
   321  00069B  2D                 	db	45
   322  00069C  20                 	db	32
   323  00069D  56                 	db	86	;'V'
   324  00069E  6F                 	db	111	;'o'
   325  00069F  6C                 	db	108	;'l'
   326  0006A0  74                 	db	116	;'t'
   327  0006A1  61                 	db	97	;'a'
   328  0006A2  72                 	db	114	;'r'
   329  0006A3  00                 	db	0
   330  0006A4                     STR_14:
   331  0006A4  45                 	db	69	;'E'
   332  0006A5  6E                 	db	110	;'n'
   333  0006A6  63                 	db	99	;'c'
   334  0006A7  68                 	db	104	;'h'
   335  0006A8  65                 	db	101	;'e'
   336  0006A9  6E                 	db	110	;'n'
   337  0006AA  64                 	db	100	;'d'
   338  0006AB  6F                 	db	111	;'o'
   339  0006AC  2E                 	db	46
   340  0006AD  2E                 	db	46
   341  0006AE  2E                 	db	46
   342  0006AF  00                 	db	0
   343  0006B0                     STR_8:
   344  0006B0  51                 	db	81	;'Q'
   345  0006B1  75                 	db	117	;'u'
   346  0006B2  61                 	db	97	;'a'
   347  0006B3  6E                 	db	110	;'n'
   348  0006B4  74                 	db	116	;'t'
   349  0006B5  28                 	db	40
   350  0006B6  4C                 	db	76	;'L'
   351  0006B7  29                 	db	41
   352  0006B8  3A                 	db	58	;':'
   353  0006B9  20                 	db	32
   354  0006BA  00                 	db	0
   355  0006BB                     STR_2:
   356  0006BB  20                 	db	32
   357  0006BC  20                 	db	32
   358  0006BD  20                 	db	32
   359  0006BE  20                 	db	32
   360  0006BF  20                 	db	32
   361  0006C0  20                 	db	32
   362  0006C1  61                 	db	97	;'a'
   363  0006C2  67                 	db	103	;'g'
   364  0006C3  75                 	db	117	;'u'
   365  0006C4  61                 	db	97	;'a'
   366  0006C5  00                 	db	0
   367  0006C6                     STR_6:
   368  0006C6  33                 	db	51	;'3'
   369  0006C7  2D                 	db	45
   370  0006C8  52                 	db	82	;'R'
   371  0006C9  65                 	db	101	;'e'
   372  0006CA  74                 	db	116	;'t'
   373  0006CB  69                 	db	105	;'i'
   374  0006CC  72                 	db	114	;'r'
   375  0006CD  61                 	db	97	;'a'
   376  0006CE  72                 	db	114	;'r'
   377  0006CF  00                 	db	0
   378  0006D0                     STR_15:
   379  0006D0  41                 	db	65	;'A'
   380  0006D1  67                 	db	103	;'g'
   381  0006D2  75                 	db	117	;'u'
   382  0006D3  61                 	db	97	;'a'
   383  0006D4  72                 	db	114	;'r'
   384  0006D5  64                 	db	100	;'d'
   385  0006D6  65                 	db	101	;'e'
   386  0006D7  21                 	db	33
   387  0006D8  00                 	db	0
   388  0006D9                     STR_29:
   389  0006D9  41                 	db	65	;'A'
   390  0006DA  74                 	db	116	;'t'
   391  0006DB  75                 	db	117	;'u'
   392  0006DC  61                 	db	97	;'a'
   393  0006DD  6C                 	db	108	;'l'
   394  0006DE  3A                 	db	58	;':'
   395  0006DF  20                 	db	32
   396  0006E0  00                 	db	0
   397  0006E1                     STR_12:
   398  0006E1  25                 	db	37
   399  0006E2  2E                 	db	46
   400  0006E3  31                 	db	49	;'1'
   401  0006E4  66                 	db	102	;'f'
   402  0006E5  00                 	db	0
   403  0006E6                     STR_32:
   404  0006E6  49                 	db	73	;'I'
   405  0006E7  4E                 	db	78	;'N'
   406  0006E8  46                 	db	70	;'F'
   407  0006E9  00                 	db	0
   408  0006EA                     STR_36:
   409  0006EA  4E                 	db	78	;'N'
   410  0006EB  41                 	db	65	;'A'
   411  0006EC  4E                 	db	78	;'N'
   412  0006ED  00                 	db	0
   413  0006EE                     STR_33:
   414  0006EE  69                 	db	105	;'i'
   415  0006EF  6E                 	db	110	;'n'
   416  0006F0  66                 	db	102	;'f'
   417  0006F1  00                 	db	0
   418  0006F2                     STR_37:
   419  0006F2  6E                 	db	110	;'n'
   420  0006F3  61                 	db	97	;'a'
   421  0006F4  6E                 	db	110	;'n'
   422  0006F5  00                 	db	0
   423  0006F6                     STR_40:
   424  0006F6  6C                 	db	108	;'l'
   425  0006F7  66                 	db	102	;'f'
   426  0006F8  00                 	db	0
   427  0006F9                     STR_13:
   428  0006F9  20                 	db	32
   429  0006FA  4C                 	db	76	;'L'
   430  0006FB  00                 	db	0
   431  0006FC  00                 	db	0	; dummy byte at the end
   432  0000                     
   433                           ; #config settings
   434                           
   435                           	psect	cinit
   436  004BF2                     __pcinit:
   437                           	callstack 0
   438  004BF2                     start_initialization:
   439                           	callstack 0
   440  004BF2                     __initialization:
   441                           	callstack 0
   442                           
   443                           ; Initialize objects allocated to BANK1 (42 bytes)
   444                           ; load TBLPTR registers with __pidataBANK1
   445  004BF2  0EDA               	movlw	low __pidataBANK1
   446  004BF4  6EF6               	movwf	tblptrl,c
   447  004BF6  0E4F               	movlw	high __pidataBANK1
   448  004BF8  6EF7               	movwf	tblptrh,c
   449  004BFA  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   450  004BFC  6EF8               	movwf	tblptru,c
   451  004BFE  EE01  F08B         	lfsr	0,__pdataBANK1
   452  004C02  EE10 F02A          	lfsr	1,42
   453  004C06                     copy_data0:
   454  004C06  0009               	tblrd		*+
   455  004C08  CFF5 FFEE          	movff	tablat,postinc0
   456  004C0C  50E5               	movf	postdec1,w,c
   457  004C0E  50E1               	movf	fsr1l,w,c
   458  004C10  E1FA               	bnz	copy_data0
   459                           
   460                           ; Initialize objects allocated to BANK0 (8 bytes)
   461                           ; load TBLPTR registers with __pidataBANK0
   462  004C12  0E92               	movlw	low __pidataBANK0
   463  004C14  6EF6               	movwf	tblptrl,c
   464  004C16  0E50               	movlw	high __pidataBANK0
   465  004C18  6EF7               	movwf	tblptrh,c
   466  004C1A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   467  004C1C  6EF8               	movwf	tblptru,c
   468  004C1E  EE00  F0F7         	lfsr	0,__pdataBANK0
   469  004C22  EE10 F008          	lfsr	1,8
   470  004C26                     copy_data1:
   471  004C26  0009               	tblrd		*+
   472  004C28  CFF5 FFEE          	movff	tablat,postinc0
   473  004C2C  50E5               	movf	postdec1,w,c
   474  004C2E  50E1               	movf	fsr1l,w,c
   475  004C30  E1FA               	bnz	copy_data1
   476                           
   477                           ; Clear objects allocated to BANK1 (88 bytes)
   478  004C32  EE01  F000         	lfsr	0,__pbssBANK1
   479  004C36  0E58               	movlw	88
   480  004C38                     clear_0:
   481  004C38  6AEE               	clrf	postinc0,c
   482  004C3A  06E8               	decf	wreg,f,c
   483  004C3C  E1FD               	bnz	clear_0
   484                           
   485                           ; Clear objects allocated to BANK0 (14 bytes)
   486  004C3E  EE00  F0E9         	lfsr	0,__pbssBANK0
   487  004C42  0E0E               	movlw	14
   488  004C44                     clear_1:
   489  004C44  6AEE               	clrf	postinc0,c
   490  004C46  06E8               	decf	wreg,f,c
   491  004C48  E1FD               	bnz	clear_1
   492  004C4A                     end_of_initialization:
   493                           	callstack 0
   494  004C4A                     __end_of__initialization:
   495                           	callstack 0
   496  004C4A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   497  004C4C  6EF8               	movwf	tblptru,c
   498  004C4E  0100               	movlb	0
   499  004C50  EF6E  F020         	goto	_main	;jump to C main() function
   500                           
   501                           	psect	bssBANK0
   502  0000E9                     __pbssBANK0:
   503                           	callstack 0
   504  0000E9                     _nout:
   505                           	callstack 0
   506  0000E9                     	ds	2
   507  0000EB                     _width:
   508                           	callstack 0
   509  0000EB                     	ds	2
   510  0000ED                     _prec:
   511                           	callstack 0
   512  0000ED                     	ds	2
   513  0000EF                     _flags:
   514                           	callstack 0
   515  0000EF                     	ds	2
   516  0000F1                     _i:
   517                           	callstack 0
   518  0000F1                     	ds	2
   519  0000F3                     _volume:
   520                           	callstack 0
   521  0000F3                     	ds	4
   522                           
   523                           	psect	dataBANK0
   524  0000F7                     __pdataBANK0:
   525                           	callstack 0
   526  0000F7                     _atraso_min:
   527                           	callstack 0
   528  0000F7                     	ds	2
   529  0000F9                     _atrasoMax:
   530                           	callstack 0
   531  0000F9                     	ds	2
   532  0000FB                     _atrasoMed:
   533                           	callstack 0
   534  0000FB                     	ds	2
   535  0000FD                     _atrasoMin:
   536                           	callstack 0
   537  0000FD                     	ds	2
   538                           
   539                           	psect	bssBANK1
   540  000100                     __pbssBANK1:
   541                           	callstack 0
   542  000100                     floorf@F524:
   543                           	callstack 0
   544  000100                     	ds	4
   545  000104                     ___fpclassifyf@F463:
   546                           	callstack 0
   547  000104                     	ds	4
   548  000108                     _dbuf:
   549                           	callstack 0
   550  000108                     	ds	80
   551                           
   552                           	psect	dataBANK1
   553  00018B                     __pdataBANK1:
   554                           	callstack 0
   555  00018B                     esvaziar_tanque@F356:
   556                           	callstack 0
   557  00018B                     	ds	20
   558  00019F                     encher_tanque@F356:
   559                           	callstack 0
   560  00019F                     	ds	20
   561  0001B3                     _atraso:
   562                           	callstack 0
   563  0001B3                     	ds	2
   564                           
   565                           	psect	cstackBANK1
   566  000158                     __pcstackBANK1:
   567                           	callstack 0
   568  000158                     encher_tanque@numeros:
   569                           	callstack 0
   570  000158                     esvaziar_tanque@numeros:
   571                           	callstack 0
   572                           
   573                           ; 20 bytes @ 0x0
   574  000158                     	ds	20
   575  00016C                     encher_tanque@y:
   576                           	callstack 0
   577  00016C                     esvaziar_tanque@y:
   578                           	callstack 0
   579                           
   580                           ; 8 bytes @ 0x14
   581  00016C                     	ds	8
   582  000174                     encher_tanque@porcento:
   583                           	callstack 0
   584  000174                     esvaziar_tanque@porcento:
   585                           	callstack 0
   586                           
   587                           ; 4 bytes @ 0x1C
   588  000174                     	ds	4
   589  000178                     encher_tanque@i_146:
   590                           	callstack 0
   591  000178                     esvaziar_tanque@i_181:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x20
   595  000178                     	ds	2
   596  00017A                     encher_tanque@num:
   597                           	callstack 0
   598  00017A                     esvaziar_tanque@num:
   599                           	callstack 0
   600                           
   601                           ; 4 bytes @ 0x22
   602  00017A                     	ds	4
   603  00017E                     encher_tanque@potencia:
   604                           	callstack 0
   605  00017E                     esvaziar_tanque@potencia:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x26
   609  00017E                     	ds	2
   610  000180                     encher_tanque@incremento:
   611                           	callstack 0
   612  000180                     esvaziar_tanque@decremento:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x28
   616  000180                     	ds	2
   617  000182                     encher_tanque@tempo:
   618                           	callstack 0
   619  000182                     esvaziar_tanque@tempo:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x2A
   623  000182                     	ds	2
   624  000184                     encher_tanque@t1:
   625                           	callstack 0
   626  000184                     esvaziar_tanque@t1:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x2C
   630  000184                     	ds	2
   631  000186                     encher_tanque@i:
   632                           	callstack 0
   633  000186                     esvaziar_tanque@i:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x2E
   637  000186                     	ds	2
   638  000188                     encher_tanque@tmp:
   639                           	callstack 0
   640  000188                     esvaziar_tanque@tmp:
   641                           	callstack 0
   642                           
   643                           ; 1 bytes @ 0x30
   644  000188                     	ds	1
   645  000189                     encher_tanque@t2:
   646                           	callstack 0
   647  000189                     esvaziar_tanque@t2:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x31
   651  000189                     	ds	2
   652                           
   653                           	psect	cstackBANK0
   654  000080                     __pcstackBANK0:
   655                           	callstack 0
   656  000080                     efgtoa@ou:
   657                           	callstack 0
   658                           
   659                           ; 4 bytes @ 0x0
   660  000080                     	ds	4
   661  000084                     _efgtoa$766:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x4
   665  000084                     	ds	2
   666  000086                     _efgtoa$767:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x6
   670  000086                     	ds	2
   671  000088                     _efgtoa$772:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x8
   675  000088                     	ds	2
   676  00008A                     _efgtoa$776:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0xA
   680  00008A                     	ds	2
   681  00008C                     _efgtoa$777:
   682                           	callstack 0
   683                           
   684                           ; 2 bytes @ 0xC
   685  00008C                     	ds	2
   686  00008E                     _efgtoa$778:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0xE
   690  00008E                     	ds	2
   691  000090                     efgtoa@t:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x10
   695  000090                     	ds	2
   696  000092                     efgtoa@pp:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x12
   700  000092                     	ds	2
   701  000094                     efgtoa@m:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x14
   705  000094                     	ds	2
   706  000096                     efgtoa@ne:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x16
   710  000096                     	ds	2
   711  000098                     efgtoa@d:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x18
   715  000098                     	ds	2
   716  00009A                     efgtoa@sign:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x1A
   720  00009A                     	ds	2
   721  00009C                     efgtoa@p:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x1C
   725  00009C                     	ds	2
   726  00009E                     efgtoa@nmode:
   727                           	callstack 0
   728                           
   729                           ; 1 bytes @ 0x1E
   730  00009E                     	ds	1
   731  00009F                     efgtoa@w:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x1F
   735  00009F                     	ds	2
   736  0000A1                     efgtoa@mode:
   737                           	callstack 0
   738                           
   739                           ; 1 bytes @ 0x21
   740  0000A1                     	ds	1
   741  0000A2                     efgtoa@h:
   742                           	callstack 0
   743                           
   744                           ; 4 bytes @ 0x22
   745  0000A2                     	ds	4
   746  0000A6                     efgtoa@l:
   747                           	callstack 0
   748                           
   749                           ; 4 bytes @ 0x26
   750  0000A6                     	ds	4
   751  0000AA                     efgtoa@i:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x2A
   755  0000AA                     	ds	2
   756  0000AC                     efgtoa@g:
   757                           	callstack 0
   758                           
   759                           ; 4 bytes @ 0x2C
   760  0000AC                     	ds	4
   761  0000B0                     efgtoa@e:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0x30
   765  0000B0                     	ds	2
   766  0000B2                     efgtoa@n:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x32
   770  0000B2                     	ds	2
   771  0000B4                     efgtoa@u:
   772                           	callstack 0
   773                           
   774                           ; 4 bytes @ 0x34
   775  0000B4                     	ds	4
   776  0000B8                     _vfpfcnvrt$792:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x38
   780  0000B8                     	ds	2
   781  0000BA                     _vfpfcnvrt$796:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x3A
   785  0000BA                     	ds	2
   786  0000BC                     vfpfcnvrt@f:
   787                           	callstack 0
   788                           
   789                           ; 4 bytes @ 0x3C
   790  0000BC                     	ds	4
   791  0000C0                     vfpfcnvrt@ct:
   792                           	callstack 0
   793                           
   794                           ; 3 bytes @ 0x40
   795  0000C0                     	ds	3
   796  0000C3                     vfpfcnvrt@c:
   797                           	callstack 0
   798                           
   799                           ; 1 bytes @ 0x43
   800  0000C3                     	ds	1
   801  0000C4                     ?_vfprintf:
   802                           	callstack 0
   803  0000C4                     vfprintf@fp:
   804                           	callstack 0
   805                           
   806                           ; 2 bytes @ 0x44
   807  0000C4                     	ds	2
   808  0000C6                     vfprintf@fmt:
   809                           	callstack 0
   810                           
   811                           ; 2 bytes @ 0x46
   812  0000C6                     	ds	2
   813  0000C8                     vfprintf@ap:
   814                           	callstack 0
   815                           
   816                           ; 2 bytes @ 0x48
   817  0000C8                     	ds	2
   818  0000CA                     ?_sprintf:
   819                           	callstack 0
   820  0000CA                     sprintf@s:
   821                           	callstack 0
   822                           
   823                           ; 2 bytes @ 0x4A
   824  0000CA                     	ds	2
   825  0000CC                     sprintf@fmt:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x4C
   829  0000CC                     	ds	8
   830  0000D4                     sprintf@ap:
   831                           	callstack 0
   832                           
   833                           ; 2 bytes @ 0x54
   834  0000D4                     	ds	2
   835  0000D6                     sprintf@f:
   836                           	callstack 0
   837                           
   838                           ; 6 bytes @ 0x56
   839  0000D6                     	ds	6
   840  0000DC                     ??_encher_tanque:
   841  0000DC                     ??_esvaziar_tanque:
   842  0000DC                     ver_quantidade@y:
   843                           	callstack 0
   844                           
   845                           ; 8 bytes @ 0x5C
   846  0000DC                     	ds	8
   847  0000E4                     ver_quantidade@i:
   848                           	callstack 0
   849                           
   850                           ; 2 bytes @ 0x64
   851  0000E4                     	ds	2
   852  0000E6                     main@tmp:
   853                           	callstack 0
   854                           
   855                           ; 1 bytes @ 0x66
   856  0000E6                     	ds	1
   857  0000E7                     main@opt:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0x67
   861  0000E7                     	ds	2
   862                           
   863                           	psect	cstackCOMRAM
   864  000001                     __pcstackCOMRAM:
   865                           	callstack 0
   866  000001                     ?_strlen:
   867                           	callstack 0
   868  000001                     ?___fpclassifyf:
   869                           	callstack 0
   870  000001                     ?_isupper:
   871                           	callstack 0
   872  000001                     ?_isdigit:
   873                           	callstack 0
   874  000001                     ?_strncmp:
   875                           	callstack 0
   876  000001                     ?_isspace:
   877                           	callstack 0
   878  000001                     ?___wmul:
   879                           	callstack 0
   880  000001                     ?___awdiv:
   881                           	callstack 0
   882  000001                     ?___awmod:
   883                           	callstack 0
   884  000001                     ?___lwdiv:
   885                           	callstack 0
   886  000001                     ?___lwmod:
   887                           	callstack 0
   888  000001                     ?___flneg:
   889                           	callstack 0
   890  000001                     ?___xxtofl:
   891                           	callstack 0
   892  000001                     lcd_wr@val:
   893                           	callstack 0
   894  000001                     atraso_ms@t:
   895                           	callstack 0
   896  000001                     ___wmul@multiplier:
   897                           	callstack 0
   898  000001                     ___awdiv@dividend:
   899                           	callstack 0
   900  000001                     ___awmod@dividend:
   901                           	callstack 0
   902  000001                     ___lwdiv@dividend:
   903                           	callstack 0
   904  000001                     ___lwmod@dividend:
   905                           	callstack 0
   906  000001                     isdigit@c:
   907                           	callstack 0
   908  000001                     isspace@c:
   909                           	callstack 0
   910  000001                     isupper@c:
   911                           	callstack 0
   912  000001                     fputc@c:
   913                           	callstack 0
   914  000001                     strcpy@dest:
   915                           	callstack 0
   916  000001                     strlen@s:
   917                           	callstack 0
   918  000001                     strncmp@_l:
   919                           	callstack 0
   920  000001                     ___fleq@ff1:
   921                           	callstack 0
   922  000001                     ___flneg@f1:
   923                           	callstack 0
   924  000001                     ___xxtofl@val:
   925                           	callstack 0
   926  000001                     ___fpclassifyf@x:
   927                           	callstack 0
   928                           
   929                           ; 4 bytes @ 0x0
   930  000001                     	ds	2
   931  000003                     ??_isupper:
   932  000003                     ??_isdigit:
   933  000003                     ??_isspace:
   934  000003                     atraso_ms@i:
   935                           	callstack 0
   936  000003                     ___wmul@multiplicand:
   937                           	callstack 0
   938  000003                     ___awdiv@divisor:
   939                           	callstack 0
   940  000003                     ___awmod@divisor:
   941                           	callstack 0
   942  000003                     ___lwdiv@divisor:
   943                           	callstack 0
   944  000003                     ___lwmod@divisor:
   945                           	callstack 0
   946  000003                     fputc@fp:
   947                           	callstack 0
   948  000003                     strcpy@src:
   949                           	callstack 0
   950  000003                     strlen@a:
   951                           	callstack 0
   952  000003                     strncmp@_r:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0x2
   956  000003                     	ds	2
   957  000005                     ??_fputc:
   958  000005                     ??___fpclassifyf:
   959  000005                     ??_strcpy:
   960  000005                     ??___xxtofl:
   961  000005                     atraso_ms@j:
   962                           	callstack 0
   963  000005                     ___awdiv@counter:
   964                           	callstack 0
   965  000005                     ___awmod@counter:
   966                           	callstack 0
   967  000005                     ___lwmod@counter:
   968                           	callstack 0
   969  000005                     ___wmul@product:
   970                           	callstack 0
   971  000005                     ___lwdiv@quotient:
   972                           	callstack 0
   973  000005                     strncmp@n:
   974                           	callstack 0
   975  000005                     ___fleq@ff2:
   976                           	callstack 0
   977                           
   978                           ; 4 bytes @ 0x4
   979  000005                     	ds	1
   980  000006                     atraso_ms@k:
   981                           	callstack 0
   982  000006                     ___awdiv@sign:
   983                           	callstack 0
   984  000006                     ___awmod@sign:
   985                           	callstack 0
   986                           
   987                           ; 1 bytes @ 0x5
   988  000006                     	ds	1
   989  000007                     ??_strncmp:
   990  000007                     ?_tolower:
   991                           	callstack 0
   992  000007                     lcd_cmd@val:
   993                           	callstack 0
   994  000007                     lcd_dat@val:
   995                           	callstack 0
   996  000007                     ___lwdiv@counter:
   997                           	callstack 0
   998  000007                     _isspace$861:
   999                           	callstack 0
  1000  000007                     tc_tecla@timeout:
  1001                           	callstack 0
  1002  000007                     ___awdiv@quotient:
  1003                           	callstack 0
  1004  000007                     strcpy@s:
  1005                           	callstack 0
  1006  000007                     tolower@c:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x6
  1010  000007                     	ds	1
  1011  000008                     ??_pwmSet1:
  1012  000008                     ?_atoi:
  1013                           	callstack 0
  1014  000008                     lcd_str@str:
  1015                           	callstack 0
  1016  000008                     atoi@s:
  1017                           	callstack 0
  1018  000008                     strncmp@l:
  1019                           	callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x7
  1022  000008                     	ds	1
  1023  000009                     ??_tolower:
  1024  000009                     ??___fleq:
  1025  000009                     ___xxtofl@sign:
  1026                           	callstack 0
  1027  000009                     tc_tecla@to:
  1028                           	callstack 0
  1029  000009                     ___fpclassifyf@e:
  1030                           	callstack 0
  1031  000009                     strcpy@d:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x8
  1035  000009                     	ds	1
  1036  00000A                     ??_lcd_str:
  1037  00000A                     ??_atoi:
  1038  00000A                     pwmSet1@porcento:
  1039                           	callstack 0
  1040  00000A                     ___xxtofl@exp:
  1041                           	callstack 0
  1042  00000A                     fputs@s:
  1043                           	callstack 0
  1044  00000A                     strncmp@r:
  1045                           	callstack 0
  1046                           
  1047                           ; 2 bytes @ 0x9
  1048  00000A                     	ds	1
  1049  00000B                     tc_tecla@tmp:
  1050                           	callstack 0
  1051  00000B                     pwmSet1@val:
  1052                           	callstack 0
  1053  00000B                     ___xxtofl@arg:
  1054                           	callstack 0
  1055  00000B                     ___fpclassifyf@u:
  1056                           	callstack 0
  1057                           
  1058                           ; 4 bytes @ 0xA
  1059  00000B                     	ds	1
  1060  00000C                     tc_tecla@ret:
  1061                           	callstack 0
  1062  00000C                     lcd_str@i:
  1063                           	callstack 0
  1064  00000C                     fputs@fp:
  1065                           	callstack 0
  1066                           
  1067                           ; 2 bytes @ 0xB
  1068  00000C                     	ds	1
  1069  00000D                     tc_tecla@i:
  1070                           	callstack 0
  1071  00000D                     _tolower$925:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0xC
  1075  00000D                     	ds	1
  1076  00000E                     fputs@c:
  1077                           	callstack 0
  1078  00000E                     atoi@neg:
  1079                           	callstack 0
  1080                           
  1081                           ; 2 bytes @ 0xD
  1082  00000E                     	ds	1
  1083  00000F                     ?___flmul:
  1084                           	callstack 0
  1085  00000F                     fputs@i:
  1086                           	callstack 0
  1087  00000F                     ___flmul@b:
  1088                           	callstack 0
  1089                           
  1090                           ; 4 bytes @ 0xE
  1091  00000F                     	ds	1
  1092  000010                     _atoi$830:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0xF
  1096  000010                     	ds	1
  1097  000011                     ?_pad:
  1098                           	callstack 0
  1099  000011                     pad@fp:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x10
  1103  000011                     	ds	1
  1104  000012                     _atoi$832:
  1105                           	callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x11
  1108  000012                     	ds	1
  1109  000013                     pad@buf:
  1110                           	callstack 0
  1111  000013                     ___flmul@a:
  1112                           	callstack 0
  1113                           
  1114                           ; 4 bytes @ 0x12
  1115  000013                     	ds	1
  1116  000014                     _atoi$831:
  1117                           	callstack 0
  1118                           
  1119                           ; 1 bytes @ 0x13
  1120  000014                     	ds	1
  1121  000015                     pad@p:
  1122                           	callstack 0
  1123  000015                     atoi@n:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x14
  1127  000015                     	ds	2
  1128  000017                     ??___flmul:
  1129  000017                     ??_pad:
  1130                           
  1131                           ; 1 bytes @ 0x16
  1132  000017                     	ds	1
  1133  000018                     pad@i:
  1134                           	callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x17
  1137  000018                     	ds	2
  1138  00001A                     pad@w:
  1139                           	callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x19
  1142  00001A                     	ds	1
  1143  00001B                     ___flmul@sign:
  1144                           	callstack 0
  1145                           
  1146                           ; 1 bytes @ 0x1A
  1147  00001B                     	ds	1
  1148  00001C                     ___flmul@grs:
  1149                           	callstack 0
  1150                           
  1151                           ; 4 bytes @ 0x1B
  1152  00001C                     	ds	4
  1153  000020                     ___flmul@aexp:
  1154                           	callstack 0
  1155                           
  1156                           ; 1 bytes @ 0x1F
  1157  000020                     	ds	1
  1158  000021                     ___flmul@bexp:
  1159                           	callstack 0
  1160                           
  1161                           ; 1 bytes @ 0x20
  1162  000021                     	ds	1
  1163  000022                     ___flmul@prod:
  1164                           	callstack 0
  1165                           
  1166                           ; 4 bytes @ 0x21
  1167  000022                     	ds	4
  1168  000026                     ___flmul@temp:
  1169                           	callstack 0
  1170                           
  1171                           ; 2 bytes @ 0x25
  1172  000026                     	ds	2
  1173  000028                     ?___fladd:
  1174                           	callstack 0
  1175  000028                     ?___fltol:
  1176                           	callstack 0
  1177  000028                     ___fltol@f1:
  1178                           	callstack 0
  1179  000028                     ___fladd@b:
  1180                           	callstack 0
  1181                           
  1182                           ; 4 bytes @ 0x27
  1183  000028                     	ds	4
  1184  00002C                     ??___fltol:
  1185  00002C                     ___fladd@a:
  1186                           	callstack 0
  1187                           
  1188                           ; 4 bytes @ 0x2B
  1189  00002C                     	ds	4
  1190  000030                     ??___fladd:
  1191  000030                     ___fltol@sign1:
  1192                           	callstack 0
  1193                           
  1194                           ; 1 bytes @ 0x2F
  1195  000030                     	ds	1
  1196  000031                     ___fltol@exp1:
  1197                           	callstack 0
  1198                           
  1199                           ; 1 bytes @ 0x30
  1200  000031                     	ds	3
  1201  000034                     ___fladd@signs:
  1202                           	callstack 0
  1203                           
  1204                           ; 1 bytes @ 0x33
  1205  000034                     	ds	1
  1206  000035                     ___fladd@aexp:
  1207                           	callstack 0
  1208                           
  1209                           ; 1 bytes @ 0x34
  1210  000035                     	ds	1
  1211  000036                     ___fladd@bexp:
  1212                           	callstack 0
  1213                           
  1214                           ; 1 bytes @ 0x35
  1215  000036                     	ds	1
  1216  000037                     ___fladd@grs:
  1217                           	callstack 0
  1218                           
  1219                           ; 1 bytes @ 0x36
  1220  000037                     	ds	1
  1221  000038                     ?___fldiv:
  1222                           	callstack 0
  1223  000038                     ?___flsub:
  1224                           	callstack 0
  1225  000038                     ___flge@ff1:
  1226                           	callstack 0
  1227  000038                     ___flsub@b:
  1228                           	callstack 0
  1229  000038                     ___fldiv@b:
  1230                           	callstack 0
  1231                           
  1232                           ; 4 bytes @ 0x37
  1233  000038                     	ds	4
  1234  00003C                     ___flge@ff2:
  1235                           	callstack 0
  1236  00003C                     ___flsub@a:
  1237                           	callstack 0
  1238  00003C                     ___fldiv@a:
  1239                           	callstack 0
  1240                           
  1241                           ; 4 bytes @ 0x3B
  1242  00003C                     	ds	4
  1243  000040                     ??___fldiv:
  1244  000040                     ??___flge:
  1245                           
  1246                           ; 1 bytes @ 0x3F
  1247  000040                     	ds	4
  1248  000044                     ___fldiv@rem:
  1249                           	callstack 0
  1250                           
  1251                           ; 4 bytes @ 0x43
  1252  000044                     	ds	4
  1253  000048                     ___fldiv@sign:
  1254                           	callstack 0
  1255                           
  1256                           ; 1 bytes @ 0x47
  1257  000048                     	ds	1
  1258  000049                     ___fldiv@new_exp:
  1259                           	callstack 0
  1260                           
  1261                           ; 2 bytes @ 0x48
  1262  000049                     	ds	2
  1263  00004B                     ___fldiv@grs:
  1264                           	callstack 0
  1265                           
  1266                           ; 4 bytes @ 0x4A
  1267  00004B                     	ds	4
  1268  00004F                     ___fldiv@bexp:
  1269                           	callstack 0
  1270                           
  1271                           ; 1 bytes @ 0x4E
  1272  00004F                     	ds	1
  1273  000050                     ___fldiv@aexp:
  1274                           	callstack 0
  1275                           
  1276                           ; 1 bytes @ 0x4F
  1277  000050                     	ds	1
  1278  000051                     ?_floorf:
  1279                           	callstack 0
  1280  000051                     floorf@x:
  1281                           	callstack 0
  1282                           
  1283                           ; 4 bytes @ 0x50
  1284  000051                     	ds	4
  1285  000055                     ??_floorf:
  1286                           
  1287                           ; 1 bytes @ 0x54
  1288  000055                     	ds	6
  1289  00005B                     floorf@m:
  1290                           	callstack 0
  1291                           
  1292                           ; 4 bytes @ 0x5A
  1293  00005B                     	ds	4
  1294  00005F                     floorf@e:
  1295                           	callstack 0
  1296                           
  1297                           ; 2 bytes @ 0x5E
  1298  00005F                     	ds	2
  1299  000061                     floorf@u:
  1300                           	callstack 0
  1301                           
  1302                           ; 4 bytes @ 0x60
  1303  000061                     	ds	4
  1304  000065                     ?_efgtoa:
  1305                           	callstack 0
  1306  000065                     efgtoa@fp:
  1307                           	callstack 0
  1308                           
  1309                           ; 2 bytes @ 0x64
  1310  000065                     	ds	2
  1311  000067                     efgtoa@f:
  1312                           	callstack 0
  1313                           
  1314                           ; 4 bytes @ 0x66
  1315  000067                     	ds	4
  1316  00006B                     efgtoa@c:
  1317                           	callstack 0
  1318                           
  1319                           ; 1 bytes @ 0x6A
  1320  00006B                     	ds	1
  1321  00006C                     ??_efgtoa:
  1322                           
  1323                           ; 1 bytes @ 0x6B
  1324  00006C                     	ds	5
  1325  000071                     ?_vfpfcnvrt:
  1326                           	callstack 0
  1327  000071                     vfpfcnvrt@fp:
  1328                           	callstack 0
  1329                           
  1330                           ; 2 bytes @ 0x70
  1331  000071                     	ds	2
  1332  000073                     vfpfcnvrt@fmt:
  1333                           	callstack 0
  1334                           
  1335                           ; 2 bytes @ 0x72
  1336  000073                     	ds	2
  1337  000075                     vfpfcnvrt@ap:
  1338                           	callstack 0
  1339                           
  1340                           ; 2 bytes @ 0x74
  1341  000075                     	ds	2
  1342  000077                     ??_vfpfcnvrt:
  1343                           
  1344                           ; 1 bytes @ 0x76
  1345  000077                     	ds	4
  1346  00007B                     vfprintf@cfmt:
  1347                           	callstack 0
  1348                           
  1349                           ; 2 bytes @ 0x7A
  1350  00007B                     	ds	2
  1351  00007D                     encher_tanque@vol:
  1352                           	callstack 0
  1353  00007D                     esvaziar_tanque@vol:
  1354                           	callstack 0
  1355  00007D                     ver_quantidade@vol:
  1356                           	callstack 0
  1357                           
  1358                           ; 2 bytes @ 0x7C
  1359  00007D                     	ds	2
  1360  00007F                     
  1361                           ; 1 bytes @ 0x7E
  1362 ;;
  1363 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1364 ;;
  1365 ;; *************** function _main *****************
  1366 ;; Defined at:
  1367 ;;		line 16 in file "main.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;		None
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;  opt             2  103[BANK0 ] unsigned int 
  1372 ;;  tmp             1  102[BANK0 ] unsigned char 
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  1    wreg      void 
  1375 ;; Registers used:
  1376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1382 ;;      Params:         0       0       0       0       0       0       0
  1383 ;;      Locals:         0       3       0       0       0       0       0
  1384 ;;      Temps:          0       0       0       0       0       0       0
  1385 ;;      Totals:         0       3       0       0       0       0       0
  1386 ;;Total ram usage:        3 bytes
  1387 ;; Hardware stack levels required when called:    9
  1388 ;; This function calls:
  1389 ;;		_atraso_ms
  1390 ;;		_encher_tanque
  1391 ;;		_esvaziar_tanque
  1392 ;;		_lcd_cmd
  1393 ;;		_lcd_init
  1394 ;;		_lcd_str
  1395 ;;		_tc_tecla
  1396 ;;		_ver_quantidade
  1397 ;; This function is called by:
  1398 ;;		Startup code after reset
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           	psect	text0
  1403  0040DC                     __ptext0:
  1404                           	callstack 0
  1405  0040DC                     _main:
  1406                           	callstack 22
  1407  0040DC                     
  1408                           ;main.c: 18:     (*(volatile __near unsigned char*)0xFC1) = 0x06;
  1409  0040DC  0E06               	movlw	6
  1410  0040DE  6EC1               	movwf	193,c	;volatile
  1411                           
  1412                           ;main.c: 19:     (*(volatile __near unsigned char*)0xF93) = 0x01;
  1413  0040E0  0E01               	movlw	1
  1414  0040E2  6E93               	movwf	147,c	;volatile
  1415                           
  1416                           ;main.c: 20:     (*(volatile __near unsigned char*)0xF95) = 0x00;
  1417  0040E4  0E00               	movlw	0
  1418  0040E6  6E95               	movwf	149,c	;volatile
  1419                           
  1420                           ;main.c: 21:     (*(volatile __near unsigned char*)0xF96) = 0x00;
  1421  0040E8  0E00               	movlw	0
  1422  0040EA  6E96               	movwf	150,c	;volatile
  1423  0040EC                     
  1424                           ;main.c: 22:     lcd_init();
  1425  0040EC  EC8B  F026         	call	_lcd_init	;wreg free
  1426  0040F0                     
  1427                           ;main.c: 25:     lcd_cmd(0x01);
  1428  0040F0  0E01               	movlw	1
  1429  0040F2  EC17  F028         	call	_lcd_cmd
  1430  0040F6                     
  1431                           ;main.c: 26:     lcd_cmd(0x80);
  1432  0040F6  0E80               	movlw	128
  1433  0040F8  EC17  F028         	call	_lcd_cmd
  1434  0040FC                     
  1435                           ;main.c: 27:     lcd_str("Abastecimento de");
  1436  0040FC  0E05               	movlw	low STR_1
  1437  0040FE  6E08               	movwf	lcd_str@str^0,c
  1438  004100  0E06               	movlw	high STR_1
  1439  004102  6E09               	movwf	(lcd_str@str+1)^0,c
  1440  004104  ECE9  F024         	call	_lcd_str	;wreg free
  1441  004108                     
  1442                           ;main.c: 28:     lcd_cmd(0xC0);
  1443  004108  0EC0               	movlw	192
  1444  00410A  EC17  F028         	call	_lcd_cmd
  1445  00410E                     
  1446                           ;main.c: 29:     lcd_str("      agua");
  1447  00410E  0EBB               	movlw	low STR_2
  1448  004110  6E08               	movwf	lcd_str@str^0,c
  1449  004112  0E06               	movlw	high STR_2
  1450  004114  6E09               	movwf	(lcd_str@str+1)^0,c
  1451  004116  ECE9  F024         	call	_lcd_str	;wreg free
  1452  00411A                     
  1453                           ;main.c: 30:     atraso_ms(atrasoMin);
  1454  00411A  0E00               	movlw	0
  1455  00411C  6E02               	movwf	(atraso_ms@t+1)^0,c
  1456  00411E  0E14               	movlw	20
  1457  004120  6E01               	movwf	atraso_ms@t^0,c
  1458  004122  EC95  F025         	call	_atraso_ms	;wreg free
  1459  004126                     
  1460                           ;main.c: 31:     lcd_cmd(0x01);
  1461  004126  0E01               	movlw	1
  1462  004128  EC17  F028         	call	_lcd_cmd
  1463  00412C                     
  1464                           ;main.c: 34:     lcd_cmd(0x80);
  1465  00412C  0E80               	movlw	128
  1466  00412E  EC17  F028         	call	_lcd_cmd
  1467  004132                     
  1468                           ;main.c: 35:     lcd_str("Vol max = 70L");
  1469  004132  0E7C               	movlw	low STR_3
  1470  004134  6E08               	movwf	lcd_str@str^0,c
  1471  004136  0E06               	movlw	high STR_3
  1472  004138  6E09               	movwf	(lcd_str@str+1)^0,c
  1473  00413A  ECE9  F024         	call	_lcd_str	;wreg free
  1474  00413E                     
  1475                           ;main.c: 36:     lcd_cmd(0xC0);
  1476  00413E  0EC0               	movlw	192
  1477  004140  EC17  F028         	call	_lcd_cmd
  1478  004144                     
  1479                           ;main.c: 37:     lcd_str("Vazao: 0.5 L/s");
  1480  004144  0E35               	movlw	low STR_4
  1481  004146  6E08               	movwf	lcd_str@str^0,c
  1482  004148  0E06               	movlw	high STR_4
  1483  00414A  6E09               	movwf	(lcd_str@str+1)^0,c
  1484  00414C  ECE9  F024         	call	_lcd_str	;wreg free
  1485  004150                     
  1486                           ;main.c: 38:     atraso_ms(atrasoMin);
  1487  004150  0E00               	movlw	0
  1488  004152  6E02               	movwf	(atraso_ms@t+1)^0,c
  1489  004154  0E14               	movlw	20
  1490  004156  6E01               	movwf	atraso_ms@t^0,c
  1491  004158  EC95  F025         	call	_atraso_ms	;wreg free
  1492  00415C                     
  1493                           ;main.c: 39:     lcd_cmd(0x01);
  1494  00415C  0E01               	movlw	1
  1495  00415E  EC17  F028         	call	_lcd_cmd
  1496  004162                     l5351:
  1497                           
  1498                           ;main.c: 43:         lcd_cmd(0x01);
  1499  004162  0E01               	movlw	1
  1500  004164  EC17  F028         	call	_lcd_cmd
  1501  004168                     
  1502                           ;main.c: 44:         lcd_cmd(0x80);
  1503  004168  0E80               	movlw	128
  1504  00416A  EC17  F028         	call	_lcd_cmd
  1505  00416E                     
  1506                           ;main.c: 45:         lcd_str("1-Ver 2-Encher");
  1507  00416E  0E26               	movlw	low STR_5
  1508  004170  6E08               	movwf	lcd_str@str^0,c
  1509  004172  0E06               	movlw	high STR_5
  1510  004174  6E09               	movwf	(lcd_str@str+1)^0,c
  1511  004176  ECE9  F024         	call	_lcd_str	;wreg free
  1512  00417A                     
  1513                           ;main.c: 46:         lcd_cmd(0xC0);
  1514  00417A  0EC0               	movlw	192
  1515  00417C  EC17  F028         	call	_lcd_cmd
  1516  004180                     
  1517                           ;main.c: 47:         lcd_str("3-Retirar");
  1518  004180  0EC6               	movlw	low STR_6
  1519  004182  6E08               	movwf	lcd_str@str^0,c
  1520  004184  0E06               	movlw	high STR_6
  1521  004186  6E09               	movwf	(lcd_str@str+1)^0,c
  1522  004188  ECE9  F024         	call	_lcd_str	;wreg free
  1523  00418C                     
  1524                           ;main.c: 49:         unsigned int opt;;main.c: 50:         unsigned char tmp;;main.c: 52
      +                          :         (*(volatile __near unsigned char*)0xF93) = 0xF8;
  1525  00418C  0EF8               	movlw	248
  1526  00418E  6E93               	movwf	147,c	;volatile
  1527  004190                     
  1528                           ;main.c: 55:             (*(volatile __near unsigned char*)0xF95) = 0x0F;
  1529  004190  0E0F               	movlw	15
  1530  004192  6E95               	movwf	149,c	;volatile
  1531  004194                     
  1532                           ;main.c: 56:             tmp = tc_tecla(0) + 0x30;
  1533  004194  0E00               	movlw	0
  1534  004196  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  1535  004198  0E00               	movlw	0
  1536  00419A  6E07               	movwf	tc_tecla@timeout^0,c
  1537  00419C  ECE7  F01D         	call	_tc_tecla	;wreg free
  1538  0041A0  0F30               	addlw	48
  1539  0041A2  0100               	movlb	0	; () banked
  1540  0041A4  6FE6               	movwf	main@tmp& (0+255),b
  1541  0041A6                     
  1542                           ; BSR set to: 0
  1543                           ;main.c: 57:             (*(volatile __near unsigned char*)0xF95) = 0x00;
  1544  0041A6  0E00               	movlw	0
  1545  0041A8  6E95               	movwf	149,c	;volatile
  1546  0041AA                     
  1547                           ; BSR set to: 0
  1548                           ;main.c: 58:             opt = (tmp - '0');
  1549  0041AA  0ED0               	movlw	208
  1550  0041AC  25E6               	addwf	main@tmp& (0+255),w,b
  1551  0041AE  6FE7               	movwf	main@opt& (0+255),b
  1552  0041B0  6BE8               	clrf	(main@opt+1)& (0+255),b
  1553  0041B2  0EFF               	movlw	255
  1554  0041B4  23E8               	addwfc	(main@opt+1)& (0+255),f,b
  1555  0041B6                     
  1556                           ; BSR set to: 0
  1557                           ;main.c: 59:             if (opt == 1) {
  1558  0041B6  05E7               	decf	main@opt& (0+255),w,b
  1559  0041B8  11E8               	iorwf	(main@opt+1)& (0+255),w,b
  1560  0041BA  A4D8               	btfss	status,2,c
  1561  0041BC  EFE2  F020         	goto	u6741
  1562  0041C0  EFE4  F020         	goto	u6740
  1563  0041C4                     u6741:
  1564  0041C4  EFEC  F020         	goto	l5377
  1565  0041C8                     u6740:
  1566  0041C8                     
  1567                           ; BSR set to: 0
  1568                           ;main.c: 60:                 ver_quantidade(&volume);
  1569  0041C8  0EF3               	movlw	low _volume
  1570  0041CA  6E7D               	movwf	ver_quantidade@vol^0,c
  1571  0041CC  0E00               	movlw	high _volume
  1572  0041CE  6E7E               	movwf	(ver_quantidade@vol+1)^0,c
  1573  0041D0  ECCC  F016         	call	_ver_quantidade	;wreg free
  1574                           
  1575                           ;main.c: 61:                 break;
  1576  0041D4  EFB1  F020         	goto	l5351
  1577  0041D8                     l5377:
  1578                           
  1579                           ; BSR set to: 0
  1580  0041D8  0E02               	movlw	2
  1581  0041DA  19E7               	xorwf	main@opt& (0+255),w,b
  1582  0041DC  11E8               	iorwf	(main@opt+1)& (0+255),w,b
  1583  0041DE  A4D8               	btfss	status,2,c
  1584  0041E0  EFF4  F020         	goto	u6751
  1585  0041E4  EFF6  F020         	goto	u6750
  1586  0041E8                     u6751:
  1587  0041E8  EFFE  F020         	goto	l5383
  1588  0041EC                     u6750:
  1589  0041EC                     
  1590                           ; BSR set to: 0
  1591                           ;main.c: 63:                 encher_tanque(&volume);
  1592  0041EC  0EF3               	movlw	low _volume
  1593  0041EE  6E7D               	movwf	encher_tanque@vol^0,c
  1594  0041F0  0E00               	movlw	high _volume
  1595  0041F2  6E7E               	movwf	(encher_tanque@vol+1)^0,c
  1596  0041F4  EC57  F009         	call	_encher_tanque	;wreg free
  1597                           
  1598                           ;main.c: 64:                 break;
  1599  0041F8  EFB1  F020         	goto	l5351
  1600  0041FC                     l5383:
  1601                           
  1602                           ; BSR set to: 0
  1603  0041FC  0E03               	movlw	3
  1604  0041FE  19E7               	xorwf	main@opt& (0+255),w,b
  1605  004200  11E8               	iorwf	(main@opt+1)& (0+255),w,b
  1606  004202  A4D8               	btfss	status,2,c
  1607  004204  EF06  F021         	goto	u6761
  1608  004208  EF08  F021         	goto	u6760
  1609  00420C                     u6761:
  1610  00420C  EF10  F021         	goto	l5389
  1611  004210                     u6760:
  1612  004210                     
  1613                           ; BSR set to: 0
  1614                           ;main.c: 66:                 esvaziar_tanque(&volume);
  1615  004210  0EF3               	movlw	low _volume
  1616  004212  6E7D               	movwf	esvaziar_tanque@vol^0,c
  1617  004214  0E00               	movlw	high _volume
  1618  004216  6E7E               	movwf	(esvaziar_tanque@vol+1)^0,c
  1619  004218  ECD0  F00D         	call	_esvaziar_tanque	;wreg free
  1620                           
  1621                           ;main.c: 67:                 break;
  1622  00421C  EFB1  F020         	goto	l5351
  1623  004220                     l5389:
  1624                           
  1625                           ; BSR set to: 0
  1626                           ;main.c: 69:                 lcd_cmd(0x01);
  1627  004220  0E01               	movlw	1
  1628  004222  EC17  F028         	call	_lcd_cmd
  1629  004226                     
  1630                           ;main.c: 70:                 lcd_str("    INVALIDO!");
  1631  004226  0E6E               	movlw	low STR_7
  1632  004228  6E08               	movwf	lcd_str@str^0,c
  1633  00422A  0E06               	movlw	high STR_7
  1634  00422C  6E09               	movwf	(lcd_str@str+1)^0,c
  1635  00422E  ECE9  F024         	call	_lcd_str	;wreg free
  1636  004232                     
  1637                           ;main.c: 71:                 atraso_ms(200);
  1638  004232  0E00               	movlw	0
  1639  004234  6E02               	movwf	(atraso_ms@t+1)^0,c
  1640  004236  0EC8               	movlw	200
  1641  004238  6E01               	movwf	atraso_ms@t^0,c
  1642  00423A  EC95  F025         	call	_atraso_ms	;wreg free
  1643                           
  1644                           ;main.c: 72:                 break;
  1645  00423E  EFB1  F020         	goto	l5351
  1646  004242  EF00  F000         	goto	start
  1647  004246                     __end_of_main:
  1648                           	callstack 0
  1649                           
  1650 ;; *************** function _ver_quantidade *****************
  1651 ;; Defined at:
  1652 ;;		line 8 in file "ver.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;  vol             2  124[COMRAM] PTR 
  1655 ;;		 -> volume(4), 
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;  y               8   92[BANK0 ] unsigned char [8]
  1658 ;;  i               2  100[BANK0 ] int 
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  1    wreg      void 
  1661 ;; Registers used:
  1662 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1668 ;;      Params:         2       0       0       0       0       0       0
  1669 ;;      Locals:         0      10       0       0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0       0       0
  1671 ;;      Totals:         2      10       0       0       0       0       0
  1672 ;;Total ram usage:       12 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; Hardware stack levels required when called:    8
  1675 ;; This function calls:
  1676 ;;		___fleq
  1677 ;;		___flge
  1678 ;;		_lcd_cmd
  1679 ;;		_lcd_str
  1680 ;;		_sprintf
  1681 ;; This function is called by:
  1682 ;;		_main
  1683 ;; This function uses a non-reentrant model
  1684 ;;
  1685                           
  1686                           	psect	text1
  1687  002D98                     __ptext1:
  1688                           	callstack 0
  1689  002D98                     _ver_quantidade:
  1690                           	callstack 22
  1691  002D98                     
  1692                           ;ver.c: 10:     int i;;ver.c: 11:     char y[8];;ver.c: 12:     sprintf(y, "%.1f", *vol)
      +                          ;
  1693  002D98  0EDC               	movlw	low ver_quantidade@y
  1694  002D9A  0100               	movlb	0	; () banked
  1695  002D9C  6FCA               	movwf	sprintf@s& (0+255),b
  1696  002D9E  0E00               	movlw	high ver_quantidade@y
  1697  002DA0  6FCB               	movwf	(sprintf@s+1)& (0+255),b
  1698  002DA2  0EE1               	movlw	low STR_12
  1699  002DA4  6FCC               	movwf	sprintf@fmt& (0+255),b
  1700  002DA6  0E06               	movlw	high STR_12
  1701  002DA8  6FCD               	movwf	(sprintf@fmt+1)& (0+255),b
  1702  002DAA  C07D  FFD9         	movff	ver_quantidade@vol,fsr2l
  1703  002DAE  C07E  FFDA         	movff	ver_quantidade@vol+1,fsr2h
  1704  002DB2  CFDE F0CE          	movff	postinc2,?_sprintf+4
  1705  002DB6  CFDE F0CF          	movff	postinc2,?_sprintf+5
  1706  002DBA  CFDE F0D0          	movff	postinc2,?_sprintf+6
  1707  002DBE  CFDE F0D1          	movff	postinc2,?_sprintf+7
  1708  002DC2  ECE7  F026         	call	_sprintf	;wreg free
  1709  002DC6                     
  1710                           ;ver.c: 14:     lcd_cmd(0x01);
  1711  002DC6  0E01               	movlw	1
  1712  002DC8  EC17  F028         	call	_lcd_cmd
  1713  002DCC                     
  1714                           ;ver.c: 15:     lcd_cmd(0x80);
  1715  002DCC  0E80               	movlw	128
  1716  002DCE  EC17  F028         	call	_lcd_cmd
  1717  002DD2                     
  1718                           ;ver.c: 16:     lcd_str("Atual: ");
  1719  002DD2  0ED9               	movlw	low STR_29
  1720  002DD4  6E08               	movwf	lcd_str@str^0,c
  1721  002DD6  0E06               	movlw	high STR_29
  1722  002DD8  6E09               	movwf	(lcd_str@str+1)^0,c
  1723  002DDA  ECE9  F024         	call	_lcd_str	;wreg free
  1724  002DDE                     
  1725                           ;ver.c: 17:     lcd_str(y);
  1726  002DDE  0EDC               	movlw	low ver_quantidade@y
  1727  002DE0  6E08               	movwf	lcd_str@str^0,c
  1728  002DE2  0E00               	movlw	high ver_quantidade@y
  1729  002DE4  6E09               	movwf	(lcd_str@str+1)^0,c
  1730  002DE6  ECE9  F024         	call	_lcd_str	;wreg free
  1731  002DEA                     
  1732                           ;ver.c: 18:     lcd_str(" L");
  1733  002DEA  0EF9               	movlw	low STR_13
  1734  002DEC  6E08               	movwf	lcd_str@str^0,c
  1735  002DEE  0E06               	movlw	high STR_13
  1736  002DF0  6E09               	movwf	(lcd_str@str+1)^0,c
  1737  002DF2  ECE9  F024         	call	_lcd_str	;wreg free
  1738  002DF6                     
  1739                           ;ver.c: 19:     lcd_cmd(0xC0);
  1740  002DF6  0EC0               	movlw	192
  1741  002DF8  EC17  F028         	call	_lcd_cmd
  1742  002DFC                     
  1743                           ;ver.c: 20:     lcd_str(" RB3 - Voltar");
  1744  002DFC  0E60               	movlw	low STR_11
  1745  002DFE  6E08               	movwf	lcd_str@str^0,c
  1746  002E00  0E06               	movlw	high STR_11
  1747  002E02  6E09               	movwf	(lcd_str@str+1)^0,c
  1748  002E04  ECE9  F024         	call	_lcd_str	;wreg free
  1749  002E08                     
  1750                           ;ver.c: 21:     lcd_cmd(0xC0);
  1751  002E08  0EC0               	movlw	192
  1752  002E0A  EC17  F028         	call	_lcd_cmd
  1753  002E0E                     
  1754                           ;ver.c: 23:     for (i = 0; i < 7; i++) {
  1755  002E0E  0E00               	movlw	0
  1756  002E10  0100               	movlb	0	; () banked
  1757  002E12  6FE5               	movwf	(ver_quantidade@i+1)& (0+255),b
  1758  002E14  0E00               	movlw	0
  1759  002E16  6FE4               	movwf	ver_quantidade@i& (0+255),b
  1760  002E18                     l4867:
  1761                           
  1762                           ; BSR set to: 0
  1763                           ;ver.c: 24:         lcd_cmd(0x10);
  1764  002E18  0E10               	movlw	16
  1765  002E1A  EC17  F028         	call	_lcd_cmd
  1766  002E1E                     
  1767                           ;ver.c: 25:     }
  1768  002E1E  0100               	movlb	0	; () banked
  1769  002E20  4BE4               	infsnz	ver_quantidade@i& (0+255),f,b
  1770  002E22  2BE5               	incf	(ver_quantidade@i+1)& (0+255),f,b
  1771  002E24                     
  1772                           ; BSR set to: 0
  1773  002E24  BFE5               	btfsc	(ver_quantidade@i+1)& (0+255),7,b
  1774  002E26  EF1E  F017         	goto	u6051
  1775  002E2A  51E5               	movf	(ver_quantidade@i+1)& (0+255),w,b
  1776  002E2C  E109               	bnz	u6050
  1777  002E2E  0E07               	movlw	7
  1778  002E30  5DE4               	subwf	ver_quantidade@i& (0+255),w,b
  1779  002E32  A0D8               	btfss	status,0,c
  1780  002E34  EF1E  F017         	goto	u6051
  1781  002E38  EF20  F017         	goto	u6050
  1782  002E3C                     u6051:
  1783  002E3C  EF0C  F017         	goto	l4867
  1784  002E40                     u6050:
  1785  002E40                     
  1786                           ; BSR set to: 0
  1787                           ;ver.c: 27:     (*(volatile __near unsigned char*)0xF95) = 0x00;
  1788  002E40  0E00               	movlw	0
  1789  002E42  6E95               	movwf	149,c	;volatile
  1790  002E44                     
  1791                           ; BSR set to: 0
  1792                           ;ver.c: 28:     if (*vol == 0) {
  1793  002E44  C07D  FFD9         	movff	ver_quantidade@vol,fsr2l
  1794  002E48  C07E  FFDA         	movff	ver_quantidade@vol+1,fsr2h
  1795  002E4C  CFDE F001          	movff	postinc2,___fleq@ff1
  1796  002E50  CFDE F002          	movff	postinc2,___fleq@ff1+1
  1797  002E54  CFDE F003          	movff	postinc2,___fleq@ff1+2
  1798  002E58  CFDE F004          	movff	postinc2,___fleq@ff1+3
  1799  002E5C  0E00               	movlw	0
  1800  002E5E  6E05               	movwf	___fleq@ff2^0,c
  1801  002E60  0E00               	movlw	0
  1802  002E62  6E06               	movwf	(___fleq@ff2+1)^0,c
  1803  002E64  0E00               	movlw	0
  1804  002E66  6E07               	movwf	(___fleq@ff2+2)^0,c
  1805  002E68  0E00               	movlw	0
  1806  002E6A  6E08               	movwf	(___fleq@ff2+3)^0,c
  1807  002E6C  EC94  F024         	call	___fleq	;wreg free
  1808  002E70  A0D8               	btfss	status,0,c
  1809  002E72  EF3D  F017         	goto	u6061
  1810  002E76  EF3F  F017         	goto	u6060
  1811  002E7A                     u6061:
  1812  002E7A  EF43  F017         	goto	l4879
  1813  002E7E                     u6060:
  1814  002E7E                     
  1815                           ;ver.c: 29:         (*(volatile __near unsigned char*)0xF83) = 0b00000000;
  1816  002E7E  0E00               	movlw	0
  1817  002E80  6E83               	movwf	131,c	;volatile
  1818                           
  1819                           ;ver.c: 30:     } else if (*vol > 0 && *vol <= 10) {
  1820  002E82  EFF4  F018         	goto	l265
  1821  002E86                     l4879:
  1822  002E86  0E00               	movlw	0
  1823  002E88  6E38               	movwf	___flge@ff1^0,c
  1824  002E8A  0E00               	movlw	0
  1825  002E8C  6E39               	movwf	(___flge@ff1+1)^0,c
  1826  002E8E  0E00               	movlw	0
  1827  002E90  6E3A               	movwf	(___flge@ff1+2)^0,c
  1828  002E92  0E00               	movlw	0
  1829  002E94  6E3B               	movwf	(___flge@ff1+3)^0,c
  1830  002E96  C07D  FFD9         	movff	ver_quantidade@vol,fsr2l
  1831  002E9A  C07E  FFDA         	movff	ver_quantidade@vol+1,fsr2h
  1832  002E9E  CFDE F03C          	movff	postinc2,___flge@ff2
  1833  002EA2  CFDE F03D          	movff	postinc2,___flge@ff2+1
  1834  002EA6  CFDE F03E          	movff	postinc2,___flge@ff2+2
  1835  002EAA  CFDE F03F          	movff	postinc2,___flge@ff2+3
  1836  002EAE  ECA6  F021         	call	___flge	;wreg free
  1837  002EB2  B0D8               	btfsc	status,0,c
  1838  002EB4  EF5E  F017         	goto	u6071
  1839  002EB8  EF60  F017         	goto	u6070
  1840  002EBC                     u6071:
  1841  002EBC  EF81  F017         	goto	l4885
  1842  002EC0                     u6070:
  1843  002EC0  0E00               	movlw	0
  1844  002EC2  6E38               	movwf	___flge@ff1^0,c
  1845  002EC4  0E00               	movlw	0
  1846  002EC6  6E39               	movwf	(___flge@ff1+1)^0,c
  1847  002EC8  0E20               	movlw	32
  1848  002ECA  6E3A               	movwf	(___flge@ff1+2)^0,c
  1849  002ECC  0E41               	movlw	65
  1850  002ECE  6E3B               	movwf	(___flge@ff1+3)^0,c
  1851  002ED0  C07D  FFD9         	movff	ver_quantidade@vol,fsr2l
  1852  002ED4  C07E  FFDA         	movff	ver_quantidade@vol+1,fsr2h
  1853  002ED8  CFDE F03C          	movff	postinc2,___flge@ff2
  1854  002EDC  CFDE F03D          	movff	postinc2,___flge@ff2+1
  1855  002EE0  CFDE F03E          	movff	postinc2,___flge@ff2+2
  1856  002EE4  CFDE F03F          	movff	postinc2,___flge@ff2+3
  1857  002EE8  ECA6  F021         	call	___flge	;wreg free
  1858  002EEC  A0D8               	btfss	status,0,c
  1859  002EEE  EF7B  F017         	goto	u6081
  1860  002EF2  EF7D  F017         	goto	u6080
  1861  002EF6                     u6081:
  1862  002EF6  EF81  F017         	goto	l4885
  1863  002EFA                     u6080:
  1864  002EFA                     
  1865                           ;ver.c: 31:         (*(volatile __near unsigned char*)0xF83) = 0b10000000;
  1866  002EFA  0E80               	movlw	128
  1867  002EFC  6E83               	movwf	131,c	;volatile
  1868                           
  1869                           ;ver.c: 32:     } else if (*vol > 10 && *vol <= 20) {
  1870  002EFE  EFF4  F018         	goto	l265
  1871  002F02                     l4885:
  1872  002F02  0E00               	movlw	0
  1873  002F04  6E38               	movwf	___flge@ff1^0,c
  1874  002F06  0E00               	movlw	0
  1875  002F08  6E39               	movwf	(___flge@ff1+1)^0,c
  1876  002F0A  0E20               	movlw	32
  1877  002F0C  6E3A               	movwf	(___flge@ff1+2)^0,c
  1878  002F0E  0E41               	movlw	65
  1879  002F10  6E3B               	movwf	(___flge@ff1+3)^0,c
  1880  002F12  C07D  FFD9         	movff	ver_quantidade@vol,fsr2l
  1881  002F16  C07E  FFDA         	movff	ver_quantidade@vol+1,fsr2h
  1882  002F1A  CFDE F03C          	movff	postinc2,___flge@ff2
  1883  002F1E  CFDE F03D          	movff	postinc2,___flge@ff2+1
  1884  002F22  CFDE F03E          	movff	postinc2,___flge@ff2+2
  1885  002F26  CFDE F03F          	movff	postinc2,___flge@ff2+3
  1886  002F2A  ECA6  F021         	call	___flge	;wreg free
  1887  002F2E  B0D8               	btfsc	status,0,c
  1888  002F30  EF9C  F017         	goto	u6091
  1889  002F34  EF9E  F017         	goto	u6090
  1890  002F38                     u6091:
  1891  002F38  EFBF  F017         	goto	l4891
  1892  002F3C                     u6090:
  1893  002F3C  0E00               	movlw	0
  1894  002F3E  6E38               	movwf	___flge@ff1^0,c
  1895  002F40  0E00               	movlw	0
  1896  002F42  6E39               	movwf	(___flge@ff1+1)^0,c
  1897  002F44  0EA0               	movlw	160
  1898  002F46  6E3A               	movwf	(___flge@ff1+2)^0,c
  1899  002F48  0E41               	movlw	65
  1900  002F4A  6E3B               	movwf	(___flge@ff1+3)^0,c
  1901  002F4C  C07D  FFD9         	movff	ver_quantidade@vol,fsr2l
  1902  002F50  C07E  FFDA         	movff	ver_quantidade@vol+1,fsr2h
  1903  002F54  CFDE F03C          	movff	postinc2,___flge@ff2
  1904  002F58  CFDE F03D          	movff	postinc2,___flge@ff2+1
  1905  002F5C  CFDE F03E          	movff	postinc2,___flge@ff2+2
  1906  002F60  CFDE F03F          	movff	postinc2,___flge@ff2+3
  1907  002F64  ECA6  F021         	call	___flge	;wreg free
  1908  002F68  A0D8               	btfss	status,0,c
  1909  002F6A  EFB9  F017         	goto	u6101
  1910  002F6E  EFBB  F017         	goto	u6100
  1911  002F72                     u6101:
  1912  002F72  EFBF  F017         	goto	l4891
  1913  002F76                     u6100:
  1914  002F76                     
  1915                           ;ver.c: 33:         (*(volatile __near unsigned char*)0xF83) = 0b11000000;
  1916  002F76  0EC0               	movlw	192
  1917  002F78  6E83               	movwf	131,c	;volatile
  1918                           
  1919                           ;ver.c: 34:     } else if (*vol > 20 && *vol <= 30) {
  1920  002F7A  EFF4  F018         	goto	l265
  1921  002F7E                     l4891:
  1922  002F7E  0E00               	movlw	0
  1923  002F80  6E38               	movwf	___flge@ff1^0,c
  1924  002F82  0E00               	movlw	0
  1925  002F84  6E39               	movwf	(___flge@ff1+1)^0,c
  1926  002F86  0EA0               	movlw	160
  1927  002F88  6E3A               	movwf	(___flge@ff1+2)^0,c
  1928  002F8A  0E41               	movlw	65
  1929  002F8C  6E3B               	movwf	(___flge@ff1+3)^0,c
  1930  002F8E  C07D  FFD9         	movff	ver_quantidade@vol,fsr2l
  1931  002F92  C07E  FFDA         	movff	ver_quantidade@vol+1,fsr2h
  1932  002F96  CFDE F03C          	movff	postinc2,___flge@ff2
  1933  002F9A  CFDE F03D          	movff	postinc2,___flge@ff2+1
  1934  002F9E  CFDE F03E          	movff	postinc2,___flge@ff2+2
  1935  002FA2  CFDE F03F          	movff	postinc2,___flge@ff2+3
  1936  002FA6  ECA6  F021         	call	___flge	;wreg free
  1937  002FAA  B0D8               	btfsc	status,0,c
  1938  002FAC  EFDA  F017         	goto	u6111
  1939  002FB0  EFDC  F017         	goto	u6110
  1940  002FB4                     u6111:
  1941  002FB4  EFFD  F017         	goto	l4897
  1942  002FB8                     u6110:
  1943  002FB8  0E00               	movlw	0
  1944  002FBA  6E38               	movwf	___flge@ff1^0,c
  1945  002FBC  0E00               	movlw	0
  1946  002FBE  6E39               	movwf	(___flge@ff1+1)^0,c
  1947  002FC0  0EF0               	movlw	240
  1948  002FC2  6E3A               	movwf	(___flge@ff1+2)^0,c
  1949  002FC4  0E41               	movlw	65
  1950  002FC6  6E3B               	movwf	(___flge@ff1+3)^0,c
  1951  002FC8  C07D  FFD9         	movff	ver_quantidade@vol,fsr2l
  1952  002FCC  C07E  FFDA         	movff	ver_quantidade@vol+1,fsr2h
  1953  002FD0  CFDE F03C          	movff	postinc2,___flge@ff2
  1954  002FD4  CFDE F03D          	movff	postinc2,___flge@ff2+1
  1955  002FD8  CFDE F03E          	movff	postinc2,___flge@ff2+2
  1956  002FDC  CFDE F03F          	movff	postinc2,___flge@ff2+3
  1957  002FE0  ECA6  F021         	call	___flge	;wreg free
  1958  002FE4  A0D8               	btfss	status,0,c
  1959  002FE6  EFF7  F017         	goto	u6121
  1960  002FEA  EFF9  F017         	goto	u6120
  1961  002FEE                     u6121:
  1962  002FEE  EFFD  F017         	goto	l4897
  1963  002FF2                     u6120:
  1964  002FF2                     
  1965                           ;ver.c: 35:         (*(volatile __near unsigned char*)0xF83) = 0b11100000;
  1966  002FF2  0EE0               	movlw	224
  1967  002FF4  6E83               	movwf	131,c	;volatile
  1968                           
  1969                           ;ver.c: 36:     } else if (*vol > 30 && *vol <= 40) {
  1970  002FF6  EFF4  F018         	goto	l265
  1971  002FFA                     l4897:
  1972  002FFA  0E00               	movlw	0
  1973  002FFC  6E38               	movwf	___flge@ff1^0,c
  1974  002FFE  0E00               	movlw	0
  1975  003000  6E39               	movwf	(___flge@ff1+1)^0,c
  1976  003002  0EF0               	movlw	240
  1977  003004  6E3A               	movwf	(___flge@ff1+2)^0,c
  1978  003006  0E41               	movlw	65
  1979  003008  6E3B               	movwf	(___flge@ff1+3)^0,c
  1980  00300A  C07D  FFD9         	movff	ver_quantidade@vol,fsr2l
  1981  00300E  C07E  FFDA         	movff	ver_quantidade@vol+1,fsr2h
  1982  003012  CFDE F03C          	movff	postinc2,___flge@ff2
  1983  003016  CFDE F03D          	movff	postinc2,___flge@ff2+1
  1984  00301A  CFDE F03E          	movff	postinc2,___flge@ff2+2
  1985  00301E  CFDE F03F          	movff	postinc2,___flge@ff2+3
  1986  003022  ECA6  F021         	call	___flge	;wreg free
  1987  003026  B0D8               	btfsc	status,0,c
  1988  003028  EF18  F018         	goto	u6131
  1989  00302C  EF1A  F018         	goto	u6130
  1990  003030                     u6131:
  1991  003030  EF3B  F018         	goto	l4903
  1992  003034                     u6130:
  1993  003034  0E00               	movlw	0
  1994  003036  6E38               	movwf	___flge@ff1^0,c
  1995  003038  0E00               	movlw	0
  1996  00303A  6E39               	movwf	(___flge@ff1+1)^0,c
  1997  00303C  0E20               	movlw	32
  1998  00303E  6E3A               	movwf	(___flge@ff1+2)^0,c
  1999  003040  0E42               	movlw	66
  2000  003042  6E3B               	movwf	(___flge@ff1+3)^0,c
  2001  003044  C07D  FFD9         	movff	ver_quantidade@vol,fsr2l
  2002  003048  C07E  FFDA         	movff	ver_quantidade@vol+1,fsr2h
  2003  00304C  CFDE F03C          	movff	postinc2,___flge@ff2
  2004  003050  CFDE F03D          	movff	postinc2,___flge@ff2+1
  2005  003054  CFDE F03E          	movff	postinc2,___flge@ff2+2
  2006  003058  CFDE F03F          	movff	postinc2,___flge@ff2+3
  2007  00305C  ECA6  F021         	call	___flge	;wreg free
  2008  003060  A0D8               	btfss	status,0,c
  2009  003062  EF35  F018         	goto	u6141
  2010  003066  EF37  F018         	goto	u6140
  2011  00306A                     u6141:
  2012  00306A  EF3B  F018         	goto	l4903
  2013  00306E                     u6140:
  2014  00306E                     
  2015                           ;ver.c: 37:         (*(volatile __near unsigned char*)0xF83) = 0b11110000;
  2016  00306E  0EF0               	movlw	240
  2017  003070  6E83               	movwf	131,c	;volatile
  2018                           
  2019                           ;ver.c: 38:     } else if (*vol >= 40 && *vol <= 50) {
  2020  003072  EFF4  F018         	goto	l265
  2021  003076                     l4903:
  2022  003076  C07D  FFD9         	movff	ver_quantidade@vol,fsr2l
  2023  00307A  C07E  FFDA         	movff	ver_quantidade@vol+1,fsr2h
  2024  00307E  CFDE F038          	movff	postinc2,___flge@ff1
  2025  003082  CFDE F039          	movff	postinc2,___flge@ff1+1
  2026  003086  CFDE F03A          	movff	postinc2,___flge@ff1+2
  2027  00308A  CFDE F03B          	movff	postinc2,___flge@ff1+3
  2028  00308E  0E00               	movlw	0
  2029  003090  6E3C               	movwf	___flge@ff2^0,c
  2030  003092  0E00               	movlw	0
  2031  003094  6E3D               	movwf	(___flge@ff2+1)^0,c
  2032  003096  0E20               	movlw	32
  2033  003098  6E3E               	movwf	(___flge@ff2+2)^0,c
  2034  00309A  0E42               	movlw	66
  2035  00309C  6E3F               	movwf	(___flge@ff2+3)^0,c
  2036  00309E  ECA6  F021         	call	___flge	;wreg free
  2037  0030A2  A0D8               	btfss	status,0,c
  2038  0030A4  EF56  F018         	goto	u6151
  2039  0030A8  EF58  F018         	goto	u6150
  2040  0030AC                     u6151:
  2041  0030AC  EF79  F018         	goto	l4909
  2042  0030B0                     u6150:
  2043  0030B0  0E00               	movlw	0
  2044  0030B2  6E38               	movwf	___flge@ff1^0,c
  2045  0030B4  0E00               	movlw	0
  2046  0030B6  6E39               	movwf	(___flge@ff1+1)^0,c
  2047  0030B8  0E48               	movlw	72
  2048  0030BA  6E3A               	movwf	(___flge@ff1+2)^0,c
  2049  0030BC  0E42               	movlw	66
  2050  0030BE  6E3B               	movwf	(___flge@ff1+3)^0,c
  2051  0030C0  C07D  FFD9         	movff	ver_quantidade@vol,fsr2l
  2052  0030C4  C07E  FFDA         	movff	ver_quantidade@vol+1,fsr2h
  2053  0030C8  CFDE F03C          	movff	postinc2,___flge@ff2
  2054  0030CC  CFDE F03D          	movff	postinc2,___flge@ff2+1
  2055  0030D0  CFDE F03E          	movff	postinc2,___flge@ff2+2
  2056  0030D4  CFDE F03F          	movff	postinc2,___flge@ff2+3
  2057  0030D8  ECA6  F021         	call	___flge	;wreg free
  2058  0030DC  A0D8               	btfss	status,0,c
  2059  0030DE  EF73  F018         	goto	u6161
  2060  0030E2  EF75  F018         	goto	u6160
  2061  0030E6                     u6161:
  2062  0030E6  EF79  F018         	goto	l4909
  2063  0030EA                     u6160:
  2064  0030EA                     
  2065                           ;ver.c: 39:         (*(volatile __near unsigned char*)0xF83) = 0b11111100;
  2066  0030EA  0EFC               	movlw	252
  2067  0030EC  6E83               	movwf	131,c	;volatile
  2068                           
  2069                           ;ver.c: 40:     } else if (*vol > 50 && *vol <= 60) {
  2070  0030EE  EFF4  F018         	goto	l265
  2071  0030F2                     l4909:
  2072  0030F2  0E00               	movlw	0
  2073  0030F4  6E38               	movwf	___flge@ff1^0,c
  2074  0030F6  0E00               	movlw	0
  2075  0030F8  6E39               	movwf	(___flge@ff1+1)^0,c
  2076  0030FA  0E48               	movlw	72
  2077  0030FC  6E3A               	movwf	(___flge@ff1+2)^0,c
  2078  0030FE  0E42               	movlw	66
  2079  003100  6E3B               	movwf	(___flge@ff1+3)^0,c
  2080  003102  C07D  FFD9         	movff	ver_quantidade@vol,fsr2l
  2081  003106  C07E  FFDA         	movff	ver_quantidade@vol+1,fsr2h
  2082  00310A  CFDE F03C          	movff	postinc2,___flge@ff2
  2083  00310E  CFDE F03D          	movff	postinc2,___flge@ff2+1
  2084  003112  CFDE F03E          	movff	postinc2,___flge@ff2+2
  2085  003116  CFDE F03F          	movff	postinc2,___flge@ff2+3
  2086  00311A  ECA6  F021         	call	___flge	;wreg free
  2087  00311E  B0D8               	btfsc	status,0,c
  2088  003120  EF94  F018         	goto	u6171
  2089  003124  EF96  F018         	goto	u6170
  2090  003128                     u6171:
  2091  003128  EFB7  F018         	goto	l4915
  2092  00312C                     u6170:
  2093  00312C  0E00               	movlw	0
  2094  00312E  6E38               	movwf	___flge@ff1^0,c
  2095  003130  0E00               	movlw	0
  2096  003132  6E39               	movwf	(___flge@ff1+1)^0,c
  2097  003134  0E70               	movlw	112
  2098  003136  6E3A               	movwf	(___flge@ff1+2)^0,c
  2099  003138  0E42               	movlw	66
  2100  00313A  6E3B               	movwf	(___flge@ff1+3)^0,c
  2101  00313C  C07D  FFD9         	movff	ver_quantidade@vol,fsr2l
  2102  003140  C07E  FFDA         	movff	ver_quantidade@vol+1,fsr2h
  2103  003144  CFDE F03C          	movff	postinc2,___flge@ff2
  2104  003148  CFDE F03D          	movff	postinc2,___flge@ff2+1
  2105  00314C  CFDE F03E          	movff	postinc2,___flge@ff2+2
  2106  003150  CFDE F03F          	movff	postinc2,___flge@ff2+3
  2107  003154  ECA6  F021         	call	___flge	;wreg free
  2108  003158  A0D8               	btfss	status,0,c
  2109  00315A  EFB1  F018         	goto	u6181
  2110  00315E  EFB3  F018         	goto	u6180
  2111  003162                     u6181:
  2112  003162  EFB7  F018         	goto	l4915
  2113  003166                     u6180:
  2114  003166                     
  2115                           ;ver.c: 41:         (*(volatile __near unsigned char*)0xF83) = 0b11111110;
  2116  003166  0EFE               	movlw	254
  2117  003168  6E83               	movwf	131,c	;volatile
  2118                           
  2119                           ;ver.c: 42:     } else if (*vol > 60 && *vol <= 70) {
  2120  00316A  EFF4  F018         	goto	l265
  2121  00316E                     l4915:
  2122  00316E  0E00               	movlw	0
  2123  003170  6E38               	movwf	___flge@ff1^0,c
  2124  003172  0E00               	movlw	0
  2125  003174  6E39               	movwf	(___flge@ff1+1)^0,c
  2126  003176  0E70               	movlw	112
  2127  003178  6E3A               	movwf	(___flge@ff1+2)^0,c
  2128  00317A  0E42               	movlw	66
  2129  00317C  6E3B               	movwf	(___flge@ff1+3)^0,c
  2130  00317E  C07D  FFD9         	movff	ver_quantidade@vol,fsr2l
  2131  003182  C07E  FFDA         	movff	ver_quantidade@vol+1,fsr2h
  2132  003186  CFDE F03C          	movff	postinc2,___flge@ff2
  2133  00318A  CFDE F03D          	movff	postinc2,___flge@ff2+1
  2134  00318E  CFDE F03E          	movff	postinc2,___flge@ff2+2
  2135  003192  CFDE F03F          	movff	postinc2,___flge@ff2+3
  2136  003196  ECA6  F021         	call	___flge	;wreg free
  2137  00319A  B0D8               	btfsc	status,0,c
  2138  00319C  EFD2  F018         	goto	u6191
  2139  0031A0  EFD4  F018         	goto	u6190
  2140  0031A4                     u6191:
  2141  0031A4  EFF4  F018         	goto	l259
  2142  0031A8                     u6190:
  2143  0031A8  0E00               	movlw	0
  2144  0031AA  6E38               	movwf	___flge@ff1^0,c
  2145  0031AC  0E00               	movlw	0
  2146  0031AE  6E39               	movwf	(___flge@ff1+1)^0,c
  2147  0031B0  0E8C               	movlw	140
  2148  0031B2  6E3A               	movwf	(___flge@ff1+2)^0,c
  2149  0031B4  0E42               	movlw	66
  2150  0031B6  6E3B               	movwf	(___flge@ff1+3)^0,c
  2151  0031B8  C07D  FFD9         	movff	ver_quantidade@vol,fsr2l
  2152  0031BC  C07E  FFDA         	movff	ver_quantidade@vol+1,fsr2h
  2153  0031C0  CFDE F03C          	movff	postinc2,___flge@ff2
  2154  0031C4  CFDE F03D          	movff	postinc2,___flge@ff2+1
  2155  0031C8  CFDE F03E          	movff	postinc2,___flge@ff2+2
  2156  0031CC  CFDE F03F          	movff	postinc2,___flge@ff2+3
  2157  0031D0  ECA6  F021         	call	___flge	;wreg free
  2158  0031D4  A0D8               	btfss	status,0,c
  2159  0031D6  EFEF  F018         	goto	u6201
  2160  0031DA  EFF1  F018         	goto	u6200
  2161  0031DE                     u6201:
  2162  0031DE  EFF4  F018         	goto	l259
  2163  0031E2                     u6200:
  2164  0031E2                     
  2165                           ;ver.c: 43:         (*(volatile __near unsigned char*)0xF83) = 0b11111111;
  2166  0031E2  6883               	setf	131,c	;volatile
  2167  0031E4  EFF4  F018         	goto	l265
  2168  0031E8                     l259:
  2169  0031E8                     l265:
  2170                           
  2171                           ;ver.c: 46:     while (((((*(volatile __near unsigned char*)0xF81)) & (1<<3)))) {
  2172  0031E8  B681               	btfsc	129,3,c	;volatile
  2173  0031EA  EFF9  F018         	goto	u6211
  2174  0031EE  EFFB  F018         	goto	u6210
  2175  0031F2                     u6211:
  2176  0031F2  EFF4  F018         	goto	l265
  2177  0031F6                     u6210:
  2178  0031F6  0012               	return		;funcret
  2179  0031F8                     __end_of_ver_quantidade:
  2180                           	callstack 0
  2181                           
  2182 ;; *************** function _lcd_init *****************
  2183 ;; Defined at:
  2184 ;;		line 29 in file "lcd.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;		None
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;		None
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  1    wreg      void 
  2191 ;; Registers used:
  2192 ;;		wreg, status,2, status,0, cstack
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2198 ;;      Params:         0       0       0       0       0       0       0
  2199 ;;      Locals:         0       0       0       0       0       0       0
  2200 ;;      Temps:          0       0       0       0       0       0       0
  2201 ;;      Totals:         0       0       0       0       0       0       0
  2202 ;;Total ram usage:        0 bytes
  2203 ;; Hardware stack levels used:    1
  2204 ;; Hardware stack levels required when called:    2
  2205 ;; This function calls:
  2206 ;;		_atraso_ms
  2207 ;;		_lcd_cmd
  2208 ;; This function is called by:
  2209 ;;		_main
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213                           	psect	text2
  2214  004D16                     __ptext2:
  2215                           	callstack 0
  2216  004D16                     _lcd_init:
  2217                           	callstack 28
  2218  004D16                     
  2219                           ;lcd.c: 30:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  2220  004D16  9284               	bcf	132,1,c	;volatile
  2221                           
  2222                           ;lcd.c: 31:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<2));
  2223  004D18  9484               	bcf	132,2,c	;volatile
  2224  004D1A                     
  2225                           ;lcd.c: 32:     atraso_ms(20);
  2226  004D1A  0E00               	movlw	0
  2227  004D1C  6E02               	movwf	(atraso_ms@t+1)^0,c
  2228  004D1E  0E14               	movlw	20
  2229  004D20  6E01               	movwf	atraso_ms@t^0,c
  2230  004D22  EC95  F025         	call	_atraso_ms	;wreg free
  2231  004D26                     
  2232                           ;lcd.c: 33:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  2233  004D26  8284               	bsf	132,1,c	;volatile
  2234                           
  2235                           ;lcd.c: 35:     lcd_cmd(0x38);
  2236  004D28  0E38               	movlw	56
  2237  004D2A  EC17  F028         	call	_lcd_cmd
  2238                           
  2239                           ;lcd.c: 36:     atraso_ms(5);
  2240  004D2E  0E00               	movlw	0
  2241  004D30  6E02               	movwf	(atraso_ms@t+1)^0,c
  2242  004D32  0E05               	movlw	5
  2243  004D34  6E01               	movwf	atraso_ms@t^0,c
  2244  004D36  EC95  F025         	call	_atraso_ms	;wreg free
  2245                           
  2246                           ;lcd.c: 37:     lcd_cmd(0x38);
  2247  004D3A  0E38               	movlw	56
  2248  004D3C  EC17  F028         	call	_lcd_cmd
  2249                           
  2250                           ;lcd.c: 38:     atraso_ms(1);
  2251  004D40  0E00               	movlw	0
  2252  004D42  6E02               	movwf	(atraso_ms@t+1)^0,c
  2253  004D44  0E01               	movlw	1
  2254  004D46  6E01               	movwf	atraso_ms@t^0,c
  2255  004D48  EC95  F025         	call	_atraso_ms	;wreg free
  2256                           
  2257                           ;lcd.c: 39:     lcd_cmd(0x38);
  2258  004D4C  0E38               	movlw	56
  2259  004D4E  EC17  F028         	call	_lcd_cmd
  2260                           
  2261                           ;lcd.c: 40:     lcd_cmd(0x08);
  2262  004D52  0E08               	movlw	8
  2263  004D54  EC17  F028         	call	_lcd_cmd
  2264                           
  2265                           ;lcd.c: 41:     lcd_cmd(0x0F);
  2266  004D58  0E0F               	movlw	15
  2267  004D5A  EC17  F028         	call	_lcd_cmd
  2268                           
  2269                           ;lcd.c: 42:     lcd_cmd(0x01);
  2270  004D5E  0E01               	movlw	1
  2271  004D60  EC17  F028         	call	_lcd_cmd
  2272                           
  2273                           ;lcd.c: 43:     lcd_cmd(0x38);
  2274  004D64  0E38               	movlw	56
  2275  004D66  EC17  F028         	call	_lcd_cmd
  2276                           
  2277                           ;lcd.c: 44:     lcd_cmd(0x80);
  2278  004D6A  0E80               	movlw	128
  2279  004D6C  EC17  F028         	call	_lcd_cmd
  2280  004D70  0012               	return		;funcret
  2281  004D72                     __end_of_lcd_init:
  2282                           	callstack 0
  2283                           
  2284 ;; *************** function _esvaziar_tanque *****************
  2285 ;; Defined at:
  2286 ;;		line 9 in file "esvaziar.c"
  2287 ;; Parameters:    Size  Location     Type
  2288 ;;  vol             2  124[COMRAM] PTR 
  2289 ;;		 -> volume(4), 
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;  numeros        20    0[BANK1 ] unsigned int [10]
  2292 ;;  y               8   20[BANK1 ] unsigned char [8]
  2293 ;;  porcento        4   28[BANK1 ] float 
  2294 ;;  t2              2   49[BANK1 ] unsigned int 
  2295 ;;  t1              2   44[BANK1 ] unsigned int 
  2296 ;;  tempo           2   42[BANK1 ] unsigned int 
  2297 ;;  potencia        2   38[BANK1 ] unsigned int 
  2298 ;;  i               2   32[BANK1 ] unsigned int 
  2299 ;;  num             4   34[BANK1 ] unsigned int [2]
  2300 ;;  i               2   46[BANK1 ] unsigned int 
  2301 ;;  decremento      2   40[BANK1 ] unsigned int 
  2302 ;;  tmp             1   48[BANK1 ] unsigned char 
  2303 ;; Return value:  Size  Location     Type
  2304 ;;                  1    wreg      void 
  2305 ;; Registers used:
  2306 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2312 ;;      Params:         2       0       0       0       0       0       0
  2313 ;;      Locals:         0       0      51       0       0       0       0
  2314 ;;      Temps:          0       4       0       0       0       0       0
  2315 ;;      Totals:         2       4      51       0       0       0       0
  2316 ;;Total ram usage:       57 bytes
  2317 ;; Hardware stack levels used:    1
  2318 ;; Hardware stack levels required when called:    8
  2319 ;; This function calls:
  2320 ;;		___fladd
  2321 ;;		___fldiv
  2322 ;;		___fleq
  2323 ;;		___flge
  2324 ;;		___flmul
  2325 ;;		___flsub
  2326 ;;		___fltol
  2327 ;;		___lwdiv
  2328 ;;		___lwmod
  2329 ;;		___wmul
  2330 ;;		___xxtofl
  2331 ;;		_atraso_ms
  2332 ;;		_lcd_cmd
  2333 ;;		_lcd_dat
  2334 ;;		_lcd_str
  2335 ;;		_pwmInit
  2336 ;;		_pwmSet1
  2337 ;;		_sprintf
  2338 ;;		_tc_tecla
  2339 ;; This function is called by:
  2340 ;;		_main
  2341 ;; This function uses a non-reentrant model
  2342 ;;
  2343                           
  2344                           	psect	text3
  2345  001BA0                     __ptext3:
  2346                           	callstack 0
  2347  001BA0                     _esvaziar_tanque:
  2348                           	callstack 22
  2349  001BA0                     
  2350                           ;esvaziar.c: 12:     lcd_cmd(0x01);
  2351  001BA0  0E01               	movlw	1
  2352  001BA2  EC17  F028         	call	_lcd_cmd
  2353                           
  2354                           ;esvaziar.c: 13:     lcd_cmd(0x80);
  2355  001BA6  0E80               	movlw	128
  2356  001BA8  EC17  F028         	call	_lcd_cmd
  2357  001BAC                     
  2358                           ;esvaziar.c: 14:     lcd_str("Quant(L): ");
  2359  001BAC  0EB0               	movlw	low STR_8
  2360  001BAE  6E08               	movwf	lcd_str@str^0,c
  2361  001BB0  0E06               	movlw	high STR_8
  2362  001BB2  6E09               	movwf	(lcd_str@str+1)^0,c
  2363  001BB4  ECE9  F024         	call	_lcd_str	;wreg free
  2364  001BB8                     
  2365                           ;esvaziar.c: 15:     lcd_cmd(0xC0);
  2366  001BB8  0EC0               	movlw	192
  2367  001BBA  EC17  F028         	call	_lcd_cmd
  2368                           
  2369                           ;esvaziar.c: 16:     lcd_str("  # - Voltar");
  2370  001BBE  0E97               	movlw	low STR_9
  2371  001BC0  6E08               	movwf	lcd_str@str^0,c
  2372  001BC2  0E06               	movlw	high STR_9
  2373  001BC4  6E09               	movwf	(lcd_str@str+1)^0,c
  2374  001BC6  ECE9  F024         	call	_lcd_str	;wreg free
  2375  001BCA                     
  2376                           ;esvaziar.c: 17:     lcd_cmd(0x80 +10);
  2377  001BCA  0E8A               	movlw	138
  2378  001BCC  EC17  F028         	call	_lcd_cmd
  2379  001BD0                     
  2380                           ;esvaziar.c: 19:     unsigned int decremento;;esvaziar.c: 21:     unsigned int i = 0;
  2381  001BD0  0E00               	movlw	0
  2382  001BD2  0101               	movlb	1	; () banked
  2383  001BD4  6F87               	movwf	(esvaziar_tanque@i+1)& (0+255),b
  2384  001BD6  0E00               	movlw	0
  2385  001BD8  6F86               	movwf	esvaziar_tanque@i& (0+255),b
  2386  001BDA                     
  2387                           ; BSR set to: 1
  2388                           ;esvaziar.c: 22:     unsigned int num[2];;esvaziar.c: 23:     unsigned char tmp;;esvazia
      +                          r.c: 25:     (*(volatile __near unsigned char*)0xF93) = 0xF8;
  2389  001BDA  0EF8               	movlw	248
  2390  001BDC  6E93               	movwf	147,c	;volatile
  2391                           
  2392                           ;esvaziar.c: 27:     while (i != 2) {
  2393  001BDE  EF4F  F00E         	goto	l5155
  2394  001BE2                     l5133:
  2395                           
  2396                           ; BSR set to: 1
  2397                           ;esvaziar.c: 28:         (*(volatile __near unsigned char*)0xF95) = 0x0F;
  2398  001BE2  0E0F               	movlw	15
  2399  001BE4  6E95               	movwf	149,c	;volatile
  2400  001BE6                     
  2401                           ; BSR set to: 1
  2402                           ;esvaziar.c: 29:         tmp = tc_tecla(0) + 0x30;
  2403  001BE6  0E00               	movlw	0
  2404  001BE8  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  2405  001BEA  0E00               	movlw	0
  2406  001BEC  6E07               	movwf	tc_tecla@timeout^0,c
  2407  001BEE  ECE7  F01D         	call	_tc_tecla	;wreg free
  2408  001BF2  0F30               	addlw	48
  2409  001BF4  0101               	movlb	1	; () banked
  2410  001BF6  6F88               	movwf	esvaziar_tanque@tmp& (0+255),b
  2411  001BF8                     
  2412                           ; BSR set to: 1
  2413                           ;esvaziar.c: 30:         (*(volatile __near unsigned char*)0xF95) = 0x00;
  2414  001BF8  0E00               	movlw	0
  2415  001BFA  6E95               	movwf	149,c	;volatile
  2416  001BFC                     
  2417                           ; BSR set to: 1
  2418                           ;esvaziar.c: 31:         lcd_dat(tmp);
  2419  001BFC  5188               	movf	esvaziar_tanque@tmp& (0+255),w,b
  2420  001BFE  EC02  F028         	call	_lcd_dat
  2421  001C02                     
  2422                           ;esvaziar.c: 32:         if (tmp >= 0x3C) {
  2423  001C02  0E3B               	movlw	59
  2424  001C04  0101               	movlb	1	; () banked
  2425  001C06  6588               	cpfsgt	esvaziar_tanque@tmp& (0+255),b
  2426  001C08  EF08  F00E         	goto	u6481
  2427  001C0C  EF0A  F00E         	goto	u6480
  2428  001C10                     u6481:
  2429  001C10  EF0C  F00E         	goto	l5147
  2430  001C14                     u6480:
  2431  001C14  EF36  F012         	goto	l205
  2432  001C18                     l5147:
  2433                           
  2434                           ; BSR set to: 1
  2435  001C18  5186               	movf	esvaziar_tanque@i& (0+255),w,b
  2436  001C1A  1187               	iorwf	(esvaziar_tanque@i+1)& (0+255),w,b
  2437  001C1C  A4D8               	btfss	status,2,c
  2438  001C1E  EF13  F00E         	goto	u6491
  2439  001C22  EF15  F00E         	goto	u6490
  2440  001C26                     u6491:
  2441  001C26  EF31  F00E         	goto	l5151
  2442  001C2A                     u6490:
  2443  001C2A                     
  2444                           ; BSR set to: 1
  2445                           ;esvaziar.c: 35:             num[i] = (tmp - '0')*10;
  2446  001C2A  0ED0               	movlw	208
  2447  001C2C  2588               	addwf	esvaziar_tanque@tmp& (0+255),w,b
  2448  001C2E  6E01               	movwf	___wmul@multiplier^0,c
  2449  001C30  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2450  001C32  0EFF               	movlw	255
  2451  001C34  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  2452  001C36  0E00               	movlw	0
  2453  001C38  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2454  001C3A  0E0A               	movlw	10
  2455  001C3C  6E03               	movwf	___wmul@multiplicand^0,c
  2456  001C3E  EC2C  F028         	call	___wmul	;wreg free
  2457  001C42  90D8               	bcf	status,0,c
  2458  001C44  0101               	movlb	1	; () banked
  2459  001C46  3586               	rlcf	esvaziar_tanque@i& (0+255),w,b
  2460  001C48  6ED9               	movwf	fsr2l,c
  2461  001C4A  3587               	rlcf	(esvaziar_tanque@i+1)& (0+255),w,b
  2462  001C4C  6EDA               	movwf	fsr2h,c
  2463  001C4E  0E7A               	movlw	low esvaziar_tanque@num
  2464  001C50  26D9               	addwf	fsr2l,f,c
  2465  001C52  0E01               	movlw	high esvaziar_tanque@num
  2466  001C54  22DA               	addwfc	fsr2h,f,c
  2467  001C56  C001  FFDE         	movff	?___wmul,postinc2
  2468  001C5A  C002  FFDD         	movff	?___wmul+1,postdec2
  2469                           
  2470                           ;esvaziar.c: 36:         } else {
  2471  001C5E  EF4D  F00E         	goto	l5153
  2472  001C62                     l5151:
  2473                           
  2474                           ; BSR set to: 1
  2475                           ;esvaziar.c: 37:             num[i] = (tmp - '0');
  2476  001C62  0ED0               	movlw	208
  2477  001C64  0100               	movlb	0	; () banked
  2478  001C66  6FDC               	movwf	??_esvaziar_tanque& (0+255),b
  2479  001C68  0EFF               	movlw	255
  2480  001C6A  6FDD               	movwf	(??_esvaziar_tanque+1)& (0+255),b
  2481  001C6C  0101               	movlb	1	; () banked
  2482  001C6E  5188               	movf	esvaziar_tanque@tmp& (0+255),w,b
  2483  001C70  0100               	movlb	0	; () banked
  2484  001C72  6FDE               	movwf	(??_esvaziar_tanque+2)& (0+255),b
  2485  001C74  6BDF               	clrf	(??_esvaziar_tanque+3)& (0+255),b
  2486  001C76  51DC               	movf	??_esvaziar_tanque& (0+255),w,b
  2487  001C78  27DE               	addwf	(??_esvaziar_tanque+2)& (0+255),f,b
  2488  001C7A  51DD               	movf	(??_esvaziar_tanque+1)& (0+255),w,b
  2489  001C7C  23DF               	addwfc	(??_esvaziar_tanque+3)& (0+255),f,b
  2490  001C7E  90D8               	bcf	status,0,c
  2491  001C80  0101               	movlb	1	; () banked
  2492  001C82  3586               	rlcf	esvaziar_tanque@i& (0+255),w,b
  2493  001C84  6ED9               	movwf	fsr2l,c
  2494  001C86  3587               	rlcf	(esvaziar_tanque@i+1)& (0+255),w,b
  2495  001C88  6EDA               	movwf	fsr2h,c
  2496  001C8A  0E7A               	movlw	low esvaziar_tanque@num
  2497  001C8C  26D9               	addwf	fsr2l,f,c
  2498  001C8E  0E01               	movlw	high esvaziar_tanque@num
  2499  001C90  22DA               	addwfc	fsr2h,f,c
  2500  001C92  C0DE  FFDE         	movff	??_esvaziar_tanque+2,postinc2
  2501  001C96  C0DF  FFDD         	movff	??_esvaziar_tanque+3,postdec2
  2502  001C9A                     l5153:
  2503                           
  2504                           ; BSR set to: 1
  2505                           ;esvaziar.c: 39:         i++;
  2506  001C9A  4B86               	infsnz	esvaziar_tanque@i& (0+255),f,b
  2507  001C9C  2B87               	incf	(esvaziar_tanque@i+1)& (0+255),f,b
  2508  001C9E                     l5155:
  2509                           
  2510                           ; BSR set to: 1
  2511                           ;esvaziar.c: 27:     while (i != 2) {
  2512  001C9E  0E02               	movlw	2
  2513  001CA0  1986               	xorwf	esvaziar_tanque@i& (0+255),w,b
  2514  001CA2  1187               	iorwf	(esvaziar_tanque@i+1)& (0+255),w,b
  2515  001CA4  A4D8               	btfss	status,2,c
  2516  001CA6  EF57  F00E         	goto	u6501
  2517  001CAA  EF59  F00E         	goto	u6500
  2518  001CAE                     u6501:
  2519  001CAE  EFF1  F00D         	goto	l5133
  2520  001CB2                     u6500:
  2521  001CB2                     
  2522                           ; BSR set to: 1
  2523                           ;esvaziar.c: 42:     (*(volatile __near unsigned char*)0xF92) = 0x20;
  2524  001CB2  0E20               	movlw	32
  2525  001CB4  6E92               	movwf	146,c	;volatile
  2526                           
  2527                           ;esvaziar.c: 43:     (*(volatile __near unsigned char*)0xF93) = 0x3F;
  2528  001CB6  0E3F               	movlw	63
  2529  001CB8  6E93               	movwf	147,c	;volatile
  2530  001CBA                     
  2531                           ; BSR set to: 1
  2532                           ;esvaziar.c: 45:     atraso_ms(500);
  2533  001CBA  0E01               	movlw	1
  2534  001CBC  6E02               	movwf	(atraso_ms@t+1)^0,c
  2535  001CBE  0EF4               	movlw	244
  2536  001CC0  6E01               	movwf	atraso_ms@t^0,c
  2537  001CC2  EC95  F025         	call	_atraso_ms	;wreg free
  2538  001CC6                     
  2539                           ;esvaziar.c: 46:     lcd_cmd(0x01);
  2540  001CC6  0E01               	movlw	1
  2541  001CC8  EC17  F028         	call	_lcd_cmd
  2542  001CCC                     
  2543                           ;esvaziar.c: 48:     decremento = num[0] + num[1];
  2544  001CCC  0101               	movlb	1	; () banked
  2545  001CCE  517A               	movf	esvaziar_tanque@num& (0+255),w,b
  2546  001CD0  257C               	addwf	(esvaziar_tanque@num+2)& (0+255),w,b
  2547  001CD2  6F80               	movwf	esvaziar_tanque@decremento& (0+255),b
  2548  001CD4  517B               	movf	(esvaziar_tanque@num+1)& (0+255),w,b
  2549  001CD6  217D               	addwfc	(esvaziar_tanque@num+3)& (0+255),w,b
  2550  001CD8  6F81               	movwf	(esvaziar_tanque@decremento+1)& (0+255),b
  2551  001CDA                     
  2552                           ; BSR set to: 1
  2553                           ;esvaziar.c: 50:     if (*vol - decremento < 0) {
  2554  001CDA  C07D  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  2555  001CDE  C07E  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  2556  001CE2  CFDE F038          	movff	postinc2,___flsub@b
  2557  001CE6  CFDE F039          	movff	postinc2,___flsub@b+1
  2558  001CEA  CFDE F03A          	movff	postinc2,___flsub@b+2
  2559  001CEE  CFDE F03B          	movff	postinc2,___flsub@b+3
  2560  001CF2  C180  F001         	movff	esvaziar_tanque@decremento,___xxtofl@val
  2561  001CF6  C181  F002         	movff	esvaziar_tanque@decremento+1,___xxtofl@val+1
  2562  001CFA  6A03               	clrf	(___xxtofl@val+2)^0,c
  2563  001CFC  6A04               	clrf	(___xxtofl@val+3)^0,c
  2564  001CFE  0E00               	movlw	0
  2565  001D00  ECCC  F01E         	call	___xxtofl
  2566  001D04  C001  F03C         	movff	?___xxtofl,___flsub@a
  2567  001D08  C002  F03D         	movff	?___xxtofl+1,___flsub@a+1
  2568  001D0C  C003  F03E         	movff	?___xxtofl+2,___flsub@a+2
  2569  001D10  C004  F03F         	movff	?___xxtofl+3,___flsub@a+3
  2570  001D14  EC39  F027         	call	___flsub	;wreg free
  2571  001D18  BE3B               	btfsc	(?___flsub+3)^0,7,c
  2572  001D1A  EF93  F00E         	goto	u6510
  2573  001D1E  EF91  F00E         	goto	u6511
  2574  001D22                     u6511:
  2575  001D22  EFAB  F00E         	goto	l5175
  2576  001D26                     u6510:
  2577  001D26                     
  2578                           ;esvaziar.c: 53:         lcd_cmd(0x01);
  2579  001D26  0E01               	movlw	1
  2580  001D28  EC17  F028         	call	_lcd_cmd
  2581                           
  2582                           ;esvaziar.c: 54:         lcd_cmd(0x80);
  2583  001D2C  0E80               	movlw	128
  2584  001D2E  EC17  F028         	call	_lcd_cmd
  2585  001D32                     
  2586                           ;esvaziar.c: 55:         lcd_str("ERRO: vol < 0");
  2587  001D32  0E52               	movlw	low STR_20
  2588  001D34  6E08               	movwf	lcd_str@str^0,c
  2589  001D36  0E06               	movlw	high STR_20
  2590  001D38  6E09               	movwf	(lcd_str@str+1)^0,c
  2591  001D3A  ECE9  F024         	call	_lcd_str	;wreg free
  2592  001D3E                     
  2593                           ;esvaziar.c: 56:         lcd_cmd(0xC0);
  2594  001D3E  0EC0               	movlw	192
  2595  001D40  EC17  F028         	call	_lcd_cmd
  2596                           
  2597                           ;esvaziar.c: 57:         lcd_str(" RB3 - Voltar");
  2598  001D44  0E60               	movlw	low STR_11
  2599  001D46  6E08               	movwf	lcd_str@str^0,c
  2600  001D48  0E06               	movlw	high STR_11
  2601  001D4A  6E09               	movwf	(lcd_str@str+1)^0,c
  2602  001D4C  ECE9  F024         	call	_lcd_str	;wreg free
  2603  001D50                     
  2604                           ;esvaziar.c: 60:         (((*(volatile __near unsigned char*)0xF94)) |= (1<<1));
  2605  001D50  8294               	bsf	148,1,c	;volatile
  2606                           
  2607                           ;esvaziar.c: 63:     } else {
  2608  001D52  EF5A  F010         	goto	l5271
  2609  001D56                     l5175:
  2610                           
  2611                           ;esvaziar.c: 65:         *vol -= decremento;
  2612  001D56  C07D  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  2613  001D5A  C07E  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  2614  001D5E  CFDE F038          	movff	postinc2,___flsub@b
  2615  001D62  CFDE F039          	movff	postinc2,___flsub@b+1
  2616  001D66  CFDE F03A          	movff	postinc2,___flsub@b+2
  2617  001D6A  CFDE F03B          	movff	postinc2,___flsub@b+3
  2618  001D6E  C180  F001         	movff	esvaziar_tanque@decremento,___xxtofl@val
  2619  001D72  C181  F002         	movff	esvaziar_tanque@decremento+1,___xxtofl@val+1
  2620  001D76  6A03               	clrf	(___xxtofl@val+2)^0,c
  2621  001D78  6A04               	clrf	(___xxtofl@val+3)^0,c
  2622  001D7A  0E00               	movlw	0
  2623  001D7C  ECCC  F01E         	call	___xxtofl
  2624  001D80  C001  F03C         	movff	?___xxtofl,___flsub@a
  2625  001D84  C002  F03D         	movff	?___xxtofl+1,___flsub@a+1
  2626  001D88  C003  F03E         	movff	?___xxtofl+2,___flsub@a+2
  2627  001D8C  C004  F03F         	movff	?___xxtofl+3,___flsub@a+3
  2628  001D90  EC39  F027         	call	___flsub	;wreg free
  2629  001D94  C07D  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  2630  001D98  C07E  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  2631  001D9C  C038  FFDE         	movff	?___flsub,postinc2
  2632  001DA0  C039  FFDE         	movff	?___flsub+1,postinc2
  2633  001DA4  C03A  FFDE         	movff	?___flsub+2,postinc2
  2634  001DA8  C03B  FFDE         	movff	?___flsub+3,postinc2
  2635  001DAC                     
  2636                           ;esvaziar.c: 66:         char y[8];;esvaziar.c: 67:         sprintf(y, "%.1f", *vol);
  2637  001DAC  0E6C               	movlw	low esvaziar_tanque@y
  2638  001DAE  0100               	movlb	0	; () banked
  2639  001DB0  6FCA               	movwf	sprintf@s& (0+255),b
  2640  001DB2  0E01               	movlw	high esvaziar_tanque@y
  2641  001DB4  6FCB               	movwf	(sprintf@s+1)& (0+255),b
  2642  001DB6  0EE1               	movlw	low STR_12
  2643  001DB8  6FCC               	movwf	sprintf@fmt& (0+255),b
  2644  001DBA  0E06               	movlw	high STR_12
  2645  001DBC  6FCD               	movwf	(sprintf@fmt+1)& (0+255),b
  2646  001DBE  C07D  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  2647  001DC2  C07E  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  2648  001DC6  CFDE F0CE          	movff	postinc2,?_sprintf+4
  2649  001DCA  CFDE F0CF          	movff	postinc2,?_sprintf+5
  2650  001DCE  CFDE F0D0          	movff	postinc2,?_sprintf+6
  2651  001DD2  CFDE F0D1          	movff	postinc2,?_sprintf+7
  2652  001DD6  ECE7  F026         	call	_sprintf	;wreg free
  2653  001DDA                     
  2654                           ;esvaziar.c: 68:         lcd_str(y);
  2655  001DDA  0E6C               	movlw	low esvaziar_tanque@y
  2656  001DDC  6E08               	movwf	lcd_str@str^0,c
  2657  001DDE  0E01               	movlw	high esvaziar_tanque@y
  2658  001DE0  6E09               	movwf	(lcd_str@str+1)^0,c
  2659  001DE2  ECE9  F024         	call	_lcd_str	;wreg free
  2660  001DE6                     
  2661                           ;esvaziar.c: 69:         lcd_str(" L");
  2662  001DE6  0EF9               	movlw	low STR_13
  2663  001DE8  6E08               	movwf	lcd_str@str^0,c
  2664  001DEA  0E06               	movlw	high STR_13
  2665  001DEC  6E09               	movwf	(lcd_str@str+1)^0,c
  2666  001DEE  ECE9  F024         	call	_lcd_str	;wreg free
  2667  001DF2                     
  2668                           ;esvaziar.c: 70:         atraso_ms(500);
  2669  001DF2  0E01               	movlw	1
  2670  001DF4  6E02               	movwf	(atraso_ms@t+1)^0,c
  2671  001DF6  0EF4               	movlw	244
  2672  001DF8  6E01               	movwf	atraso_ms@t^0,c
  2673  001DFA  EC95  F025         	call	_atraso_ms	;wreg free
  2674  001DFE                     
  2675                           ;esvaziar.c: 73:         unsigned int i = 0, potencia = 100, t1, t2, tempo = decremento 
      +                          / 2;
  2676  001DFE  0E00               	movlw	0
  2677  001E00  0101               	movlb	1	; () banked
  2678  001E02  6F79               	movwf	(esvaziar_tanque@i_181+1)& (0+255),b
  2679  001E04  0E00               	movlw	0
  2680  001E06  6F78               	movwf	esvaziar_tanque@i_181& (0+255),b
  2681  001E08                     
  2682                           ; BSR set to: 1
  2683  001E08  0E00               	movlw	0
  2684  001E0A  6F7F               	movwf	(esvaziar_tanque@potencia+1)& (0+255),b
  2685  001E0C  0E64               	movlw	100
  2686  001E0E  6F7E               	movwf	esvaziar_tanque@potencia& (0+255),b
  2687  001E10                     
  2688                           ; BSR set to: 1
  2689  001E10  90D8               	bcf	status,0,c
  2690  001E12  3181               	rrcf	(esvaziar_tanque@decremento+1)& (0+255),w,b
  2691  001E14  0100               	movlb	0	; () banked
  2692  001E16  6FDC               	movwf	??_esvaziar_tanque& (0+255),b
  2693  001E18  0101               	movlb	1	; () banked
  2694  001E1A  3180               	rrcf	esvaziar_tanque@decremento& (0+255),w,b
  2695  001E1C  6F82               	movwf	esvaziar_tanque@tempo& (0+255),b
  2696  001E1E  C0DC  F183         	movff	??_esvaziar_tanque,esvaziar_tanque@tempo+1
  2697  001E22                     
  2698                           ; BSR set to: 1
  2699                           ;esvaziar.c: 74:         float porcento;;esvaziar.c: 75:         unsigned int numeros[10
      +                          ] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D,
  2700  001E22  EE21  F08B         	lfsr	2,esvaziar_tanque@F356
  2701  001E26  EE11  F058         	lfsr	1,esvaziar_tanque@numeros
  2702  001E2A  0E13               	movlw	19
  2703  001E2C                     u6521:
  2704  001E2C  CFDB FFE3          	movff	plusw2,plusw1
  2705  001E30  06E8               	decf	wreg,f,c
  2706  001E32  E2FC               	bc	u6521
  2707  001E34                     
  2708                           ; BSR set to: 1
  2709                           ;esvaziar.c: 78:         (*(volatile __near unsigned char*)0xF92) = 0x00;
  2710  001E34  0E00               	movlw	0
  2711  001E36  6E92               	movwf	146,c	;volatile
  2712  001E38                     
  2713                           ; BSR set to: 1
  2714                           ;esvaziar.c: 80:         lcd_cmd(0x01);
  2715  001E38  0E01               	movlw	1
  2716  001E3A  EC17  F028         	call	_lcd_cmd
  2717  001E3E                     
  2718                           ;esvaziar.c: 81:         lcd_cmd(0x80);
  2719  001E3E  0E80               	movlw	128
  2720  001E40  EC17  F028         	call	_lcd_cmd
  2721  001E44                     
  2722                           ;esvaziar.c: 82:         lcd_str("Esvaziando...");
  2723  001E44  0E44               	movlw	low STR_24
  2724  001E46  6E08               	movwf	lcd_str@str^0,c
  2725  001E48  0E06               	movlw	high STR_24
  2726  001E4A  6E09               	movwf	(lcd_str@str+1)^0,c
  2727  001E4C  ECE9  F024         	call	_lcd_str	;wreg free
  2728  001E50                     
  2729                           ;esvaziar.c: 83:         lcd_cmd(0xC0);
  2730  001E50  0EC0               	movlw	192
  2731  001E52  EC17  F028         	call	_lcd_cmd
  2732  001E56                     
  2733                           ;esvaziar.c: 84:         lcd_str("Aguarde!");
  2734  001E56  0ED0               	movlw	low STR_15
  2735  001E58  6E08               	movwf	lcd_str@str^0,c
  2736  001E5A  0E06               	movlw	high STR_15
  2737  001E5C  6E09               	movwf	(lcd_str@str+1)^0,c
  2738  001E5E  ECE9  F024         	call	_lcd_str	;wreg free
  2739  001E62                     
  2740                           ;esvaziar.c: 86:         pwmInit();
  2741  001E62  EC3F  F028         	call	_pwmInit	;wreg free
  2742  001E66                     
  2743                           ;esvaziar.c: 89:         t1 = tempo / 10;
  2744  001E66  C182  F001         	movff	esvaziar_tanque@tempo,___lwdiv@dividend
  2745  001E6A  C183  F002         	movff	esvaziar_tanque@tempo+1,___lwdiv@dividend+1
  2746  001E6E  0E00               	movlw	0
  2747  001E70  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2748  001E72  0E0A               	movlw	10
  2749  001E74  6E03               	movwf	___lwdiv@divisor^0,c
  2750  001E76  EC25  F025         	call	___lwdiv	;wreg free
  2751  001E7A  C001  F184         	movff	?___lwdiv,esvaziar_tanque@t1
  2752  001E7E  C002  F185         	movff	?___lwdiv+1,esvaziar_tanque@t1+1
  2753  001E82                     
  2754                           ;esvaziar.c: 90:         t2 = tempo % 10;
  2755  001E82  C182  F001         	movff	esvaziar_tanque@tempo,___lwmod@dividend
  2756  001E86  C183  F002         	movff	esvaziar_tanque@tempo+1,___lwmod@dividend+1
  2757  001E8A  0E00               	movlw	0
  2758  001E8C  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2759  001E8E  0E0A               	movlw	10
  2760  001E90  6E03               	movwf	___lwmod@divisor^0,c
  2761  001E92  ECC7  F025         	call	___lwmod	;wreg free
  2762  001E96  C001  F189         	movff	?___lwmod,esvaziar_tanque@t2
  2763  001E9A  C002  F18A         	movff	?___lwmod+1,esvaziar_tanque@t2+1
  2764                           
  2765                           ;esvaziar.c: 91:         while ((t1 != 0) || (t2 != 0)) {
  2766  001E9E  EF2C  F010         	goto	l5249
  2767  001EA2                     l5211:
  2768                           
  2769                           ; BSR set to: 1
  2770                           ;esvaziar.c: 96:             porcento = ((((float) t1 * 10.0) + (float) t2) / (float) te
      +                          mpo);
  2771  001EA2  C189  F001         	movff	esvaziar_tanque@t2,___xxtofl@val
  2772  001EA6  C18A  F002         	movff	esvaziar_tanque@t2+1,___xxtofl@val+1
  2773  001EAA  6A03               	clrf	(___xxtofl@val+2)^0,c
  2774  001EAC  6A04               	clrf	(___xxtofl@val+3)^0,c
  2775  001EAE  0E00               	movlw	0
  2776  001EB0  ECCC  F01E         	call	___xxtofl
  2777  001EB4  C001  F02C         	movff	?___xxtofl,___fladd@a
  2778  001EB8  C002  F02D         	movff	?___xxtofl+1,___fladd@a+1
  2779  001EBC  C003  F02E         	movff	?___xxtofl+2,___fladd@a+2
  2780  001EC0  C004  F02F         	movff	?___xxtofl+3,___fladd@a+3
  2781  001EC4  0E00               	movlw	0
  2782  001EC6  6E13               	movwf	___flmul@a^0,c
  2783  001EC8  0E00               	movlw	0
  2784  001ECA  6E14               	movwf	(___flmul@a+1)^0,c
  2785  001ECC  0E20               	movlw	32
  2786  001ECE  6E15               	movwf	(___flmul@a+2)^0,c
  2787  001ED0  0E41               	movlw	65
  2788  001ED2  6E16               	movwf	(___flmul@a+3)^0,c
  2789  001ED4  C184  F001         	movff	esvaziar_tanque@t1,___xxtofl@val
  2790  001ED8  C185  F002         	movff	esvaziar_tanque@t1+1,___xxtofl@val+1
  2791  001EDC  6A03               	clrf	(___xxtofl@val+2)^0,c
  2792  001EDE  6A04               	clrf	(___xxtofl@val+3)^0,c
  2793  001EE0  0E00               	movlw	0
  2794  001EE2  ECCC  F01E         	call	___xxtofl
  2795  001EE6  C001  F00F         	movff	?___xxtofl,___flmul@b
  2796  001EEA  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  2797  001EEE  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  2798  001EF2  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  2799  001EF6  ECFC  F018         	call	___flmul	;wreg free
  2800  001EFA  C00F  F028         	movff	?___flmul,___fladd@b
  2801  001EFE  C010  F029         	movff	?___flmul+1,___fladd@b+1
  2802  001F02  C011  F02A         	movff	?___flmul+2,___fladd@b+2
  2803  001F06  C012  F02B         	movff	?___flmul+3,___fladd@b+3
  2804  001F0A  EC37  F012         	call	___fladd	;wreg free
  2805  001F0E  C028  F038         	movff	?___fladd,___fldiv@b
  2806  001F12  C029  F039         	movff	?___fladd+1,___fldiv@b+1
  2807  001F16  C02A  F03A         	movff	?___fladd+2,___fldiv@b+2
  2808  001F1A  C02B  F03B         	movff	?___fladd+3,___fldiv@b+3
  2809  001F1E  C182  F001         	movff	esvaziar_tanque@tempo,___xxtofl@val
  2810  001F22  C183  F002         	movff	esvaziar_tanque@tempo+1,___xxtofl@val+1
  2811  001F26  6A03               	clrf	(___xxtofl@val+2)^0,c
  2812  001F28  6A04               	clrf	(___xxtofl@val+3)^0,c
  2813  001F2A  0E00               	movlw	0
  2814  001F2C  ECCC  F01E         	call	___xxtofl
  2815  001F30  C001  F03C         	movff	?___xxtofl,___fldiv@a
  2816  001F34  C002  F03D         	movff	?___xxtofl+1,___fldiv@a+1
  2817  001F38  C003  F03E         	movff	?___xxtofl+2,___fldiv@a+2
  2818  001F3C  C004  F03F         	movff	?___xxtofl+3,___fldiv@a+3
  2819  001F40  EC11  F01B         	call	___fldiv	;wreg free
  2820  001F44  C038  F174         	movff	?___fldiv,esvaziar_tanque@porcento
  2821  001F48  C039  F175         	movff	?___fldiv+1,esvaziar_tanque@porcento+1
  2822  001F4C  C03A  F176         	movff	?___fldiv+2,esvaziar_tanque@porcento+2
  2823  001F50  C03B  F177         	movff	?___fldiv+3,esvaziar_tanque@porcento+3
  2824                           
  2825                           ;esvaziar.c: 97:             potencia = 100 * porcento;
  2826  001F54  0E00               	movlw	0
  2827  001F56  6E13               	movwf	___flmul@a^0,c
  2828  001F58  0E00               	movlw	0
  2829  001F5A  6E14               	movwf	(___flmul@a+1)^0,c
  2830  001F5C  0EC8               	movlw	200
  2831  001F5E  6E15               	movwf	(___flmul@a+2)^0,c
  2832  001F60  0E42               	movlw	66
  2833  001F62  6E16               	movwf	(___flmul@a+3)^0,c
  2834  001F64  C174  F00F         	movff	esvaziar_tanque@porcento,___flmul@b
  2835  001F68  C175  F010         	movff	esvaziar_tanque@porcento+1,___flmul@b+1
  2836  001F6C  C176  F011         	movff	esvaziar_tanque@porcento+2,___flmul@b+2
  2837  001F70  C177  F012         	movff	esvaziar_tanque@porcento+3,___flmul@b+3
  2838  001F74  ECFC  F018         	call	___flmul	;wreg free
  2839  001F78  C00F  F028         	movff	?___flmul,___fltol@f1
  2840  001F7C  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  2841  001F80  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  2842  001F84  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  2843  001F88  EC23  F021         	call	___fltol	;wreg free
  2844  001F8C  C028  F17E         	movff	?___fltol,esvaziar_tanque@potencia
  2845  001F90  C029  F17F         	movff	?___fltol+1,esvaziar_tanque@potencia+1
  2846  001F94                     
  2847                           ;esvaziar.c: 98:             if (potencia == 100) {
  2848  001F94  0E64               	movlw	100
  2849  001F96  0101               	movlb	1	; () banked
  2850  001F98  197E               	xorwf	esvaziar_tanque@potencia& (0+255),w,b
  2851  001F9A  117F               	iorwf	(esvaziar_tanque@potencia+1)& (0+255),w,b
  2852  001F9C  A4D8               	btfss	status,2,c
  2853  001F9E  EFD3  F00F         	goto	u6531
  2854  001FA2  EFD5  F00F         	goto	u6530
  2855  001FA6                     u6531:
  2856  001FA6  EFD9  F00F         	goto	l5217
  2857  001FAA                     u6530:
  2858  001FAA                     
  2859                           ; BSR set to: 1
  2860                           ;esvaziar.c: 99:                 potencia = 99;
  2861  001FAA  0E00               	movlw	0
  2862  001FAC  6F7F               	movwf	(esvaziar_tanque@potencia+1)& (0+255),b
  2863  001FAE  0E63               	movlw	99
  2864  001FB0  6F7E               	movwf	esvaziar_tanque@potencia& (0+255),b
  2865  001FB2                     l5217:
  2866                           
  2867                           ; BSR set to: 1
  2868                           ;esvaziar.c: 101:             pwmSet1(potencia);
  2869  001FB2  517E               	movf	esvaziar_tanque@potencia& (0+255),w,b
  2870  001FB4  EC5F  F025         	call	_pwmSet1
  2871  001FB8                     
  2872                           ;esvaziar.c: 104:             (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  2873  001FB8  9A80               	bcf	128,5,c	;volatile
  2874  001FBA                     
  2875                           ;esvaziar.c: 105:             (((*(volatile __near unsigned char*)0xF80)) |= (1<<4));
  2876  001FBA  8880               	bsf	128,4,c	;volatile
  2877  001FBC                     
  2878                           ;esvaziar.c: 106:             (*(volatile __near unsigned char*)0xF83) = numeros[t1];
  2879  001FBC  90D8               	bcf	status,0,c
  2880  001FBE  0101               	movlb	1	; () banked
  2881  001FC0  3584               	rlcf	esvaziar_tanque@t1& (0+255),w,b
  2882  001FC2  6ED9               	movwf	fsr2l,c
  2883  001FC4  3585               	rlcf	(esvaziar_tanque@t1+1)& (0+255),w,b
  2884  001FC6  6EDA               	movwf	fsr2h,c
  2885  001FC8  0E58               	movlw	low esvaziar_tanque@numeros
  2886  001FCA  26D9               	addwf	fsr2l,f,c
  2887  001FCC  0E01               	movlw	high esvaziar_tanque@numeros
  2888  001FCE  22DA               	addwfc	fsr2h,f,c
  2889  001FD0  50DF               	movf	indf2,w,c
  2890  001FD2  6E83               	movwf	131,c	;volatile
  2891  001FD4                     
  2892                           ; BSR set to: 1
  2893                           ;esvaziar.c: 107:             atraso_ms(5);
  2894  001FD4  0E00               	movlw	0
  2895  001FD6  6E02               	movwf	(atraso_ms@t+1)^0,c
  2896  001FD8  0E05               	movlw	5
  2897  001FDA  6E01               	movwf	atraso_ms@t^0,c
  2898  001FDC  EC95  F025         	call	_atraso_ms	;wreg free
  2899  001FE0                     
  2900                           ;esvaziar.c: 108:             (((*(volatile __near unsigned char*)0xF80)) |= (1<<5));
  2901  001FE0  8A80               	bsf	128,5,c	;volatile
  2902  001FE2                     
  2903                           ;esvaziar.c: 109:             (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<4));
  2904  001FE2  9880               	bcf	128,4,c	;volatile
  2905  001FE4                     
  2906                           ;esvaziar.c: 110:             (*(volatile __near unsigned char*)0xF83) = numeros[t2];
  2907  001FE4  90D8               	bcf	status,0,c
  2908  001FE6  0101               	movlb	1	; () banked
  2909  001FE8  3589               	rlcf	esvaziar_tanque@t2& (0+255),w,b
  2910  001FEA  6ED9               	movwf	fsr2l,c
  2911  001FEC  358A               	rlcf	(esvaziar_tanque@t2+1)& (0+255),w,b
  2912  001FEE  6EDA               	movwf	fsr2h,c
  2913  001FF0  0E58               	movlw	low esvaziar_tanque@numeros
  2914  001FF2  26D9               	addwf	fsr2l,f,c
  2915  001FF4  0E01               	movlw	high esvaziar_tanque@numeros
  2916  001FF6  22DA               	addwfc	fsr2h,f,c
  2917  001FF8  50DF               	movf	indf2,w,c
  2918  001FFA  6E83               	movwf	131,c	;volatile
  2919  001FFC                     
  2920                           ; BSR set to: 1
  2921                           ;esvaziar.c: 111:             atraso_ms(5);
  2922  001FFC  0E00               	movlw	0
  2923  001FFE  6E02               	movwf	(atraso_ms@t+1)^0,c
  2924  002000  0E05               	movlw	5
  2925  002002  6E01               	movwf	atraso_ms@t^0,c
  2926  002004  EC95  F025         	call	_atraso_ms	;wreg free
  2927  002008                     
  2928                           ;esvaziar.c: 113:             if (i == 40) {
  2929  002008  0E28               	movlw	40
  2930  00200A  0101               	movlb	1	; () banked
  2931  00200C  1978               	xorwf	esvaziar_tanque@i_181& (0+255),w,b
  2932  00200E  1179               	iorwf	(esvaziar_tanque@i_181+1)& (0+255),w,b
  2933  002010  A4D8               	btfss	status,2,c
  2934  002012  EF0D  F010         	goto	u6541
  2935  002016  EF0F  F010         	goto	u6540
  2936  00201A                     u6541:
  2937  00201A  EF2A  F010         	goto	l5247
  2938  00201E                     u6540:
  2939  00201E                     
  2940                           ; BSR set to: 1
  2941                           ;esvaziar.c: 114:                 i = 0;
  2942  00201E  0E00               	movlw	0
  2943  002020  6F79               	movwf	(esvaziar_tanque@i_181+1)& (0+255),b
  2944  002022  0E00               	movlw	0
  2945  002024  6F78               	movwf	esvaziar_tanque@i_181& (0+255),b
  2946  002026                     
  2947                           ; BSR set to: 1
  2948                           ;esvaziar.c: 115:                 if (t2 == 0) {
  2949  002026  5189               	movf	esvaziar_tanque@t2& (0+255),w,b
  2950  002028  118A               	iorwf	(esvaziar_tanque@t2+1)& (0+255),w,b
  2951  00202A  A4D8               	btfss	status,2,c
  2952  00202C  EF1A  F010         	goto	u6551
  2953  002030  EF1C  F010         	goto	u6550
  2954  002034                     u6551:
  2955  002034  EF25  F010         	goto	l5245
  2956  002038                     u6550:
  2957  002038                     
  2958                           ; BSR set to: 1
  2959                           ;esvaziar.c: 116:                     t1--;
  2960  002038  0784               	decf	esvaziar_tanque@t1& (0+255),f,b
  2961  00203A  A0D8               	btfss	status,0,c
  2962  00203C  0785               	decf	(esvaziar_tanque@t1+1)& (0+255),f,b
  2963  00203E                     
  2964                           ; BSR set to: 1
  2965                           ;esvaziar.c: 117:                     t2 = 9;
  2966  00203E  0E00               	movlw	0
  2967  002040  6F8A               	movwf	(esvaziar_tanque@t2+1)& (0+255),b
  2968  002042  0E09               	movlw	9
  2969  002044  6F89               	movwf	esvaziar_tanque@t2& (0+255),b
  2970                           
  2971                           ;esvaziar.c: 118:                 } else {
  2972  002046  EF2C  F010         	goto	l5249
  2973  00204A                     l5245:
  2974                           
  2975                           ; BSR set to: 1
  2976                           ;esvaziar.c: 119:                     t2--;
  2977  00204A  0789               	decf	esvaziar_tanque@t2& (0+255),f,b
  2978  00204C  A0D8               	btfss	status,0,c
  2979  00204E  078A               	decf	(esvaziar_tanque@t2+1)& (0+255),f,b
  2980  002050  EF2C  F010         	goto	l5249
  2981  002054                     l5247:
  2982                           
  2983                           ; BSR set to: 1
  2984                           ;esvaziar.c: 122:                 i++;
  2985  002054  4B78               	infsnz	esvaziar_tanque@i_181& (0+255),f,b
  2986  002056  2B79               	incf	(esvaziar_tanque@i_181+1)& (0+255),f,b
  2987  002058                     l5249:
  2988                           
  2989                           ;esvaziar.c: 91:         while ((t1 != 0) || (t2 != 0)) {
  2990  002058  0101               	movlb	1	; () banked
  2991  00205A  5184               	movf	esvaziar_tanque@t1& (0+255),w,b
  2992  00205C  1185               	iorwf	(esvaziar_tanque@t1+1)& (0+255),w,b
  2993  00205E  A4D8               	btfss	status,2,c
  2994  002060  EF34  F010         	goto	u6561
  2995  002064  EF36  F010         	goto	u6560
  2996  002068                     u6561:
  2997  002068  EF51  F00F         	goto	l5211
  2998  00206C                     u6560:
  2999  00206C                     
  3000                           ; BSR set to: 1
  3001  00206C  5189               	movf	esvaziar_tanque@t2& (0+255),w,b
  3002  00206E  118A               	iorwf	(esvaziar_tanque@t2+1)& (0+255),w,b
  3003  002070  A4D8               	btfss	status,2,c
  3004  002072  EF3D  F010         	goto	u6571
  3005  002076  EF3F  F010         	goto	u6570
  3006  00207A                     u6571:
  3007  00207A  EF51  F00F         	goto	l5211
  3008  00207E                     u6570:
  3009  00207E                     
  3010                           ; BSR set to: 1
  3011                           ;esvaziar.c: 125:         pwmSet1(0);
  3012  00207E  0E00               	movlw	0
  3013  002080  EC5F  F025         	call	_pwmSet1
  3014  002084                     
  3015                           ;esvaziar.c: 128:         (((*(volatile __near unsigned char*)0xF94)) |= (1<<1));
  3016  002084  8294               	bsf	148,1,c	;volatile
  3017  002086                     
  3018                           ;esvaziar.c: 131:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  3019  002086  9A80               	bcf	128,5,c	;volatile
  3020  002088                     
  3021                           ;esvaziar.c: 132:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<4));
  3022  002088  9880               	bcf	128,4,c	;volatile
  3023  00208A                     
  3024                           ;esvaziar.c: 135:         lcd_cmd(0x01);
  3025  00208A  0E01               	movlw	1
  3026  00208C  EC17  F028         	call	_lcd_cmd
  3027  002090                     
  3028                           ;esvaziar.c: 136:         lcd_cmd(0x80);
  3029  002090  0E80               	movlw	128
  3030  002092  EC17  F028         	call	_lcd_cmd
  3031  002096                     
  3032                           ;esvaziar.c: 137:         lcd_str("    SUCESSO!");
  3033  002096  0E8A               	movlw	low STR_16
  3034  002098  6E08               	movwf	lcd_str@str^0,c
  3035  00209A  0E06               	movlw	high STR_16
  3036  00209C  6E09               	movwf	(lcd_str@str+1)^0,c
  3037  00209E  ECE9  F024         	call	_lcd_str	;wreg free
  3038  0020A2                     
  3039                           ;esvaziar.c: 138:         lcd_cmd(0xC0);
  3040  0020A2  0EC0               	movlw	192
  3041  0020A4  EC17  F028         	call	_lcd_cmd
  3042  0020A8                     
  3043                           ;esvaziar.c: 139:         lcd_str(" RB3 - Voltar");
  3044  0020A8  0E60               	movlw	low STR_11
  3045  0020AA  6E08               	movwf	lcd_str@str^0,c
  3046  0020AC  0E06               	movlw	high STR_11
  3047  0020AE  6E09               	movwf	(lcd_str@str+1)^0,c
  3048  0020B0  ECE9  F024         	call	_lcd_str	;wreg free
  3049  0020B4                     l5271:
  3050                           
  3051                           ;esvaziar.c: 142:     (*(volatile __near unsigned char*)0xF95) = 0x00;
  3052  0020B4  0E00               	movlw	0
  3053  0020B6  6E95               	movwf	149,c	;volatile
  3054  0020B8                     
  3055                           ;esvaziar.c: 143:     if (*vol == 0) {
  3056  0020B8  C07D  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  3057  0020BC  C07E  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  3058  0020C0  CFDE F001          	movff	postinc2,___fleq@ff1
  3059  0020C4  CFDE F002          	movff	postinc2,___fleq@ff1+1
  3060  0020C8  CFDE F003          	movff	postinc2,___fleq@ff1+2
  3061  0020CC  CFDE F004          	movff	postinc2,___fleq@ff1+3
  3062  0020D0  0E00               	movlw	0
  3063  0020D2  6E05               	movwf	___fleq@ff2^0,c
  3064  0020D4  0E00               	movlw	0
  3065  0020D6  6E06               	movwf	(___fleq@ff2+1)^0,c
  3066  0020D8  0E00               	movlw	0
  3067  0020DA  6E07               	movwf	(___fleq@ff2+2)^0,c
  3068  0020DC  0E00               	movlw	0
  3069  0020DE  6E08               	movwf	(___fleq@ff2+3)^0,c
  3070  0020E0  EC94  F024         	call	___fleq	;wreg free
  3071  0020E4  A0D8               	btfss	status,0,c
  3072  0020E6  EF77  F010         	goto	u6581
  3073  0020EA  EF79  F010         	goto	u6580
  3074  0020EE                     u6581:
  3075  0020EE  EF7D  F010         	goto	l5277
  3076  0020F2                     u6580:
  3077  0020F2                     
  3078                           ;esvaziar.c: 144:         (*(volatile __near unsigned char*)0xF83) = 0b00000000;
  3079  0020F2  0E00               	movlw	0
  3080  0020F4  6E83               	movwf	131,c	;volatile
  3081                           
  3082                           ;esvaziar.c: 145:     } else if (*vol > 0 && *vol <= 10) {
  3083  0020F6  EF2E  F012         	goto	l237
  3084  0020FA                     l5277:
  3085  0020FA  0E00               	movlw	0
  3086  0020FC  6E38               	movwf	___flge@ff1^0,c
  3087  0020FE  0E00               	movlw	0
  3088  002100  6E39               	movwf	(___flge@ff1+1)^0,c
  3089  002102  0E00               	movlw	0
  3090  002104  6E3A               	movwf	(___flge@ff1+2)^0,c
  3091  002106  0E00               	movlw	0
  3092  002108  6E3B               	movwf	(___flge@ff1+3)^0,c
  3093  00210A  C07D  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  3094  00210E  C07E  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  3095  002112  CFDE F03C          	movff	postinc2,___flge@ff2
  3096  002116  CFDE F03D          	movff	postinc2,___flge@ff2+1
  3097  00211A  CFDE F03E          	movff	postinc2,___flge@ff2+2
  3098  00211E  CFDE F03F          	movff	postinc2,___flge@ff2+3
  3099  002122  ECA6  F021         	call	___flge	;wreg free
  3100  002126  B0D8               	btfsc	status,0,c
  3101  002128  EF98  F010         	goto	u6591
  3102  00212C  EF9A  F010         	goto	u6590
  3103  002130                     u6591:
  3104  002130  EFBB  F010         	goto	l5283
  3105  002134                     u6590:
  3106  002134  0E00               	movlw	0
  3107  002136  6E38               	movwf	___flge@ff1^0,c
  3108  002138  0E00               	movlw	0
  3109  00213A  6E39               	movwf	(___flge@ff1+1)^0,c
  3110  00213C  0E20               	movlw	32
  3111  00213E  6E3A               	movwf	(___flge@ff1+2)^0,c
  3112  002140  0E41               	movlw	65
  3113  002142  6E3B               	movwf	(___flge@ff1+3)^0,c
  3114  002144  C07D  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  3115  002148  C07E  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  3116  00214C  CFDE F03C          	movff	postinc2,___flge@ff2
  3117  002150  CFDE F03D          	movff	postinc2,___flge@ff2+1
  3118  002154  CFDE F03E          	movff	postinc2,___flge@ff2+2
  3119  002158  CFDE F03F          	movff	postinc2,___flge@ff2+3
  3120  00215C  ECA6  F021         	call	___flge	;wreg free
  3121  002160  A0D8               	btfss	status,0,c
  3122  002162  EFB5  F010         	goto	u6601
  3123  002166  EFB7  F010         	goto	u6600
  3124  00216A                     u6601:
  3125  00216A  EFBB  F010         	goto	l5283
  3126  00216E                     u6600:
  3127  00216E                     
  3128                           ;esvaziar.c: 146:         (*(volatile __near unsigned char*)0xF83) = 0b10000000;
  3129  00216E  0E80               	movlw	128
  3130  002170  6E83               	movwf	131,c	;volatile
  3131                           
  3132                           ;esvaziar.c: 147:     } else if (*vol > 10 && *vol <= 20) {
  3133  002172  EF2E  F012         	goto	l237
  3134  002176                     l5283:
  3135  002176  0E00               	movlw	0
  3136  002178  6E38               	movwf	___flge@ff1^0,c
  3137  00217A  0E00               	movlw	0
  3138  00217C  6E39               	movwf	(___flge@ff1+1)^0,c
  3139  00217E  0E20               	movlw	32
  3140  002180  6E3A               	movwf	(___flge@ff1+2)^0,c
  3141  002182  0E41               	movlw	65
  3142  002184  6E3B               	movwf	(___flge@ff1+3)^0,c
  3143  002186  C07D  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  3144  00218A  C07E  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  3145  00218E  CFDE F03C          	movff	postinc2,___flge@ff2
  3146  002192  CFDE F03D          	movff	postinc2,___flge@ff2+1
  3147  002196  CFDE F03E          	movff	postinc2,___flge@ff2+2
  3148  00219A  CFDE F03F          	movff	postinc2,___flge@ff2+3
  3149  00219E  ECA6  F021         	call	___flge	;wreg free
  3150  0021A2  B0D8               	btfsc	status,0,c
  3151  0021A4  EFD6  F010         	goto	u6611
  3152  0021A8  EFD8  F010         	goto	u6610
  3153  0021AC                     u6611:
  3154  0021AC  EFF9  F010         	goto	l5289
  3155  0021B0                     u6610:
  3156  0021B0  0E00               	movlw	0
  3157  0021B2  6E38               	movwf	___flge@ff1^0,c
  3158  0021B4  0E00               	movlw	0
  3159  0021B6  6E39               	movwf	(___flge@ff1+1)^0,c
  3160  0021B8  0EA0               	movlw	160
  3161  0021BA  6E3A               	movwf	(___flge@ff1+2)^0,c
  3162  0021BC  0E41               	movlw	65
  3163  0021BE  6E3B               	movwf	(___flge@ff1+3)^0,c
  3164  0021C0  C07D  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  3165  0021C4  C07E  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  3166  0021C8  CFDE F03C          	movff	postinc2,___flge@ff2
  3167  0021CC  CFDE F03D          	movff	postinc2,___flge@ff2+1
  3168  0021D0  CFDE F03E          	movff	postinc2,___flge@ff2+2
  3169  0021D4  CFDE F03F          	movff	postinc2,___flge@ff2+3
  3170  0021D8  ECA6  F021         	call	___flge	;wreg free
  3171  0021DC  A0D8               	btfss	status,0,c
  3172  0021DE  EFF3  F010         	goto	u6621
  3173  0021E2  EFF5  F010         	goto	u6620
  3174  0021E6                     u6621:
  3175  0021E6  EFF9  F010         	goto	l5289
  3176  0021EA                     u6620:
  3177  0021EA                     
  3178                           ;esvaziar.c: 148:         (*(volatile __near unsigned char*)0xF83) = 0b11000000;
  3179  0021EA  0EC0               	movlw	192
  3180  0021EC  6E83               	movwf	131,c	;volatile
  3181                           
  3182                           ;esvaziar.c: 149:     } else if (*vol > 20 && *vol <= 30) {
  3183  0021EE  EF2E  F012         	goto	l237
  3184  0021F2                     l5289:
  3185  0021F2  0E00               	movlw	0
  3186  0021F4  6E38               	movwf	___flge@ff1^0,c
  3187  0021F6  0E00               	movlw	0
  3188  0021F8  6E39               	movwf	(___flge@ff1+1)^0,c
  3189  0021FA  0EA0               	movlw	160
  3190  0021FC  6E3A               	movwf	(___flge@ff1+2)^0,c
  3191  0021FE  0E41               	movlw	65
  3192  002200  6E3B               	movwf	(___flge@ff1+3)^0,c
  3193  002202  C07D  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  3194  002206  C07E  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  3195  00220A  CFDE F03C          	movff	postinc2,___flge@ff2
  3196  00220E  CFDE F03D          	movff	postinc2,___flge@ff2+1
  3197  002212  CFDE F03E          	movff	postinc2,___flge@ff2+2
  3198  002216  CFDE F03F          	movff	postinc2,___flge@ff2+3
  3199  00221A  ECA6  F021         	call	___flge	;wreg free
  3200  00221E  B0D8               	btfsc	status,0,c
  3201  002220  EF14  F011         	goto	u6631
  3202  002224  EF16  F011         	goto	u6630
  3203  002228                     u6631:
  3204  002228  EF37  F011         	goto	l5295
  3205  00222C                     u6630:
  3206  00222C  0E00               	movlw	0
  3207  00222E  6E38               	movwf	___flge@ff1^0,c
  3208  002230  0E00               	movlw	0
  3209  002232  6E39               	movwf	(___flge@ff1+1)^0,c
  3210  002234  0EF0               	movlw	240
  3211  002236  6E3A               	movwf	(___flge@ff1+2)^0,c
  3212  002238  0E41               	movlw	65
  3213  00223A  6E3B               	movwf	(___flge@ff1+3)^0,c
  3214  00223C  C07D  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  3215  002240  C07E  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  3216  002244  CFDE F03C          	movff	postinc2,___flge@ff2
  3217  002248  CFDE F03D          	movff	postinc2,___flge@ff2+1
  3218  00224C  CFDE F03E          	movff	postinc2,___flge@ff2+2
  3219  002250  CFDE F03F          	movff	postinc2,___flge@ff2+3
  3220  002254  ECA6  F021         	call	___flge	;wreg free
  3221  002258  A0D8               	btfss	status,0,c
  3222  00225A  EF31  F011         	goto	u6641
  3223  00225E  EF33  F011         	goto	u6640
  3224  002262                     u6641:
  3225  002262  EF37  F011         	goto	l5295
  3226  002266                     u6640:
  3227  002266                     
  3228                           ;esvaziar.c: 150:         (*(volatile __near unsigned char*)0xF83) = 0b11100000;
  3229  002266  0EE0               	movlw	224
  3230  002268  6E83               	movwf	131,c	;volatile
  3231                           
  3232                           ;esvaziar.c: 151:     } else if (*vol > 30 && *vol <= 40) {
  3233  00226A  EF2E  F012         	goto	l237
  3234  00226E                     l5295:
  3235  00226E  0E00               	movlw	0
  3236  002270  6E38               	movwf	___flge@ff1^0,c
  3237  002272  0E00               	movlw	0
  3238  002274  6E39               	movwf	(___flge@ff1+1)^0,c
  3239  002276  0EF0               	movlw	240
  3240  002278  6E3A               	movwf	(___flge@ff1+2)^0,c
  3241  00227A  0E41               	movlw	65
  3242  00227C  6E3B               	movwf	(___flge@ff1+3)^0,c
  3243  00227E  C07D  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  3244  002282  C07E  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  3245  002286  CFDE F03C          	movff	postinc2,___flge@ff2
  3246  00228A  CFDE F03D          	movff	postinc2,___flge@ff2+1
  3247  00228E  CFDE F03E          	movff	postinc2,___flge@ff2+2
  3248  002292  CFDE F03F          	movff	postinc2,___flge@ff2+3
  3249  002296  ECA6  F021         	call	___flge	;wreg free
  3250  00229A  B0D8               	btfsc	status,0,c
  3251  00229C  EF52  F011         	goto	u6651
  3252  0022A0  EF54  F011         	goto	u6650
  3253  0022A4                     u6651:
  3254  0022A4  EF75  F011         	goto	l5301
  3255  0022A8                     u6650:
  3256  0022A8  0E00               	movlw	0
  3257  0022AA  6E38               	movwf	___flge@ff1^0,c
  3258  0022AC  0E00               	movlw	0
  3259  0022AE  6E39               	movwf	(___flge@ff1+1)^0,c
  3260  0022B0  0E20               	movlw	32
  3261  0022B2  6E3A               	movwf	(___flge@ff1+2)^0,c
  3262  0022B4  0E42               	movlw	66
  3263  0022B6  6E3B               	movwf	(___flge@ff1+3)^0,c
  3264  0022B8  C07D  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  3265  0022BC  C07E  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  3266  0022C0  CFDE F03C          	movff	postinc2,___flge@ff2
  3267  0022C4  CFDE F03D          	movff	postinc2,___flge@ff2+1
  3268  0022C8  CFDE F03E          	movff	postinc2,___flge@ff2+2
  3269  0022CC  CFDE F03F          	movff	postinc2,___flge@ff2+3
  3270  0022D0  ECA6  F021         	call	___flge	;wreg free
  3271  0022D4  A0D8               	btfss	status,0,c
  3272  0022D6  EF6F  F011         	goto	u6661
  3273  0022DA  EF71  F011         	goto	u6660
  3274  0022DE                     u6661:
  3275  0022DE  EF75  F011         	goto	l5301
  3276  0022E2                     u6660:
  3277  0022E2                     
  3278                           ;esvaziar.c: 152:         (*(volatile __near unsigned char*)0xF83) = 0b11110000;
  3279  0022E2  0EF0               	movlw	240
  3280  0022E4  6E83               	movwf	131,c	;volatile
  3281                           
  3282                           ;esvaziar.c: 153:     } else if (*vol >= 40 && *vol <= 50) {
  3283  0022E6  EF2E  F012         	goto	l237
  3284  0022EA                     l5301:
  3285  0022EA  C07D  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  3286  0022EE  C07E  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  3287  0022F2  CFDE F038          	movff	postinc2,___flge@ff1
  3288  0022F6  CFDE F039          	movff	postinc2,___flge@ff1+1
  3289  0022FA  CFDE F03A          	movff	postinc2,___flge@ff1+2
  3290  0022FE  CFDE F03B          	movff	postinc2,___flge@ff1+3
  3291  002302  0E00               	movlw	0
  3292  002304  6E3C               	movwf	___flge@ff2^0,c
  3293  002306  0E00               	movlw	0
  3294  002308  6E3D               	movwf	(___flge@ff2+1)^0,c
  3295  00230A  0E20               	movlw	32
  3296  00230C  6E3E               	movwf	(___flge@ff2+2)^0,c
  3297  00230E  0E42               	movlw	66
  3298  002310  6E3F               	movwf	(___flge@ff2+3)^0,c
  3299  002312  ECA6  F021         	call	___flge	;wreg free
  3300  002316  A0D8               	btfss	status,0,c
  3301  002318  EF90  F011         	goto	u6671
  3302  00231C  EF92  F011         	goto	u6670
  3303  002320                     u6671:
  3304  002320  EFB3  F011         	goto	l5307
  3305  002324                     u6670:
  3306  002324  0E00               	movlw	0
  3307  002326  6E38               	movwf	___flge@ff1^0,c
  3308  002328  0E00               	movlw	0
  3309  00232A  6E39               	movwf	(___flge@ff1+1)^0,c
  3310  00232C  0E48               	movlw	72
  3311  00232E  6E3A               	movwf	(___flge@ff1+2)^0,c
  3312  002330  0E42               	movlw	66
  3313  002332  6E3B               	movwf	(___flge@ff1+3)^0,c
  3314  002334  C07D  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  3315  002338  C07E  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  3316  00233C  CFDE F03C          	movff	postinc2,___flge@ff2
  3317  002340  CFDE F03D          	movff	postinc2,___flge@ff2+1
  3318  002344  CFDE F03E          	movff	postinc2,___flge@ff2+2
  3319  002348  CFDE F03F          	movff	postinc2,___flge@ff2+3
  3320  00234C  ECA6  F021         	call	___flge	;wreg free
  3321  002350  A0D8               	btfss	status,0,c
  3322  002352  EFAD  F011         	goto	u6681
  3323  002356  EFAF  F011         	goto	u6680
  3324  00235A                     u6681:
  3325  00235A  EFB3  F011         	goto	l5307
  3326  00235E                     u6680:
  3327  00235E                     
  3328                           ;esvaziar.c: 154:         (*(volatile __near unsigned char*)0xF83) = 0b11111100;
  3329  00235E  0EFC               	movlw	252
  3330  002360  6E83               	movwf	131,c	;volatile
  3331                           
  3332                           ;esvaziar.c: 155:     } else if (*vol > 50 && *vol <= 60) {
  3333  002362  EF2E  F012         	goto	l237
  3334  002366                     l5307:
  3335  002366  0E00               	movlw	0
  3336  002368  6E38               	movwf	___flge@ff1^0,c
  3337  00236A  0E00               	movlw	0
  3338  00236C  6E39               	movwf	(___flge@ff1+1)^0,c
  3339  00236E  0E48               	movlw	72
  3340  002370  6E3A               	movwf	(___flge@ff1+2)^0,c
  3341  002372  0E42               	movlw	66
  3342  002374  6E3B               	movwf	(___flge@ff1+3)^0,c
  3343  002376  C07D  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  3344  00237A  C07E  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  3345  00237E  CFDE F03C          	movff	postinc2,___flge@ff2
  3346  002382  CFDE F03D          	movff	postinc2,___flge@ff2+1
  3347  002386  CFDE F03E          	movff	postinc2,___flge@ff2+2
  3348  00238A  CFDE F03F          	movff	postinc2,___flge@ff2+3
  3349  00238E  ECA6  F021         	call	___flge	;wreg free
  3350  002392  B0D8               	btfsc	status,0,c
  3351  002394  EFCE  F011         	goto	u6691
  3352  002398  EFD0  F011         	goto	u6690
  3353  00239C                     u6691:
  3354  00239C  EFF1  F011         	goto	l5313
  3355  0023A0                     u6690:
  3356  0023A0  0E00               	movlw	0
  3357  0023A2  6E38               	movwf	___flge@ff1^0,c
  3358  0023A4  0E00               	movlw	0
  3359  0023A6  6E39               	movwf	(___flge@ff1+1)^0,c
  3360  0023A8  0E70               	movlw	112
  3361  0023AA  6E3A               	movwf	(___flge@ff1+2)^0,c
  3362  0023AC  0E42               	movlw	66
  3363  0023AE  6E3B               	movwf	(___flge@ff1+3)^0,c
  3364  0023B0  C07D  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  3365  0023B4  C07E  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  3366  0023B8  CFDE F03C          	movff	postinc2,___flge@ff2
  3367  0023BC  CFDE F03D          	movff	postinc2,___flge@ff2+1
  3368  0023C0  CFDE F03E          	movff	postinc2,___flge@ff2+2
  3369  0023C4  CFDE F03F          	movff	postinc2,___flge@ff2+3
  3370  0023C8  ECA6  F021         	call	___flge	;wreg free
  3371  0023CC  A0D8               	btfss	status,0,c
  3372  0023CE  EFEB  F011         	goto	u6701
  3373  0023D2  EFED  F011         	goto	u6700
  3374  0023D6                     u6701:
  3375  0023D6  EFF1  F011         	goto	l5313
  3376  0023DA                     u6700:
  3377  0023DA                     
  3378                           ;esvaziar.c: 156:         (*(volatile __near unsigned char*)0xF83) = 0b11111110;
  3379  0023DA  0EFE               	movlw	254
  3380  0023DC  6E83               	movwf	131,c	;volatile
  3381                           
  3382                           ;esvaziar.c: 157:     } else if (*vol > 60 && *vol <= 70) {
  3383  0023DE  EF2E  F012         	goto	l237
  3384  0023E2                     l5313:
  3385  0023E2  0E00               	movlw	0
  3386  0023E4  6E38               	movwf	___flge@ff1^0,c
  3387  0023E6  0E00               	movlw	0
  3388  0023E8  6E39               	movwf	(___flge@ff1+1)^0,c
  3389  0023EA  0E70               	movlw	112
  3390  0023EC  6E3A               	movwf	(___flge@ff1+2)^0,c
  3391  0023EE  0E42               	movlw	66
  3392  0023F0  6E3B               	movwf	(___flge@ff1+3)^0,c
  3393  0023F2  C07D  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  3394  0023F6  C07E  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  3395  0023FA  CFDE F03C          	movff	postinc2,___flge@ff2
  3396  0023FE  CFDE F03D          	movff	postinc2,___flge@ff2+1
  3397  002402  CFDE F03E          	movff	postinc2,___flge@ff2+2
  3398  002406  CFDE F03F          	movff	postinc2,___flge@ff2+3
  3399  00240A  ECA6  F021         	call	___flge	;wreg free
  3400  00240E  B0D8               	btfsc	status,0,c
  3401  002410  EF0C  F012         	goto	u6711
  3402  002414  EF0E  F012         	goto	u6710
  3403  002418                     u6711:
  3404  002418  EF2E  F012         	goto	l231
  3405  00241C                     u6710:
  3406  00241C  0E00               	movlw	0
  3407  00241E  6E38               	movwf	___flge@ff1^0,c
  3408  002420  0E00               	movlw	0
  3409  002422  6E39               	movwf	(___flge@ff1+1)^0,c
  3410  002424  0E8C               	movlw	140
  3411  002426  6E3A               	movwf	(___flge@ff1+2)^0,c
  3412  002428  0E42               	movlw	66
  3413  00242A  6E3B               	movwf	(___flge@ff1+3)^0,c
  3414  00242C  C07D  FFD9         	movff	esvaziar_tanque@vol,fsr2l
  3415  002430  C07E  FFDA         	movff	esvaziar_tanque@vol+1,fsr2h
  3416  002434  CFDE F03C          	movff	postinc2,___flge@ff2
  3417  002438  CFDE F03D          	movff	postinc2,___flge@ff2+1
  3418  00243C  CFDE F03E          	movff	postinc2,___flge@ff2+2
  3419  002440  CFDE F03F          	movff	postinc2,___flge@ff2+3
  3420  002444  ECA6  F021         	call	___flge	;wreg free
  3421  002448  A0D8               	btfss	status,0,c
  3422  00244A  EF29  F012         	goto	u6721
  3423  00244E  EF2B  F012         	goto	u6720
  3424  002452                     u6721:
  3425  002452  EF2E  F012         	goto	l231
  3426  002456                     u6720:
  3427  002456                     
  3428                           ;esvaziar.c: 158:         (*(volatile __near unsigned char*)0xF83) = 0b11111111;
  3429  002456  6883               	setf	131,c	;volatile
  3430  002458  EF2E  F012         	goto	l237
  3431  00245C                     l231:
  3432  00245C                     l237:
  3433                           
  3434                           ;esvaziar.c: 161:     while (((((*(volatile __near unsigned char*)0xF81)) & (1<<3)))) {
  3435  00245C  B681               	btfsc	129,3,c	;volatile
  3436  00245E  EF33  F012         	goto	u6731
  3437  002462  EF35  F012         	goto	u6730
  3438  002466                     u6731:
  3439  002466  EF2E  F012         	goto	l237
  3440  00246A                     u6730:
  3441  00246A                     
  3442                           ;esvaziar.c: 165:     (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<1));
  3443  00246A  9294               	bcf	148,1,c	;volatile
  3444  00246C                     l205:
  3445  00246C  0012               	return		;funcret
  3446  00246E                     __end_of_esvaziar_tanque:
  3447                           	callstack 0
  3448                           
  3449 ;; *************** function _encher_tanque *****************
  3450 ;; Defined at:
  3451 ;;		line 9 in file "encher.c"
  3452 ;; Parameters:    Size  Location     Type
  3453 ;;  vol             2  124[COMRAM] PTR 
  3454 ;;		 -> volume(4), 
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;  numeros        20    0[BANK1 ] int [10]
  3457 ;;  y               8   20[BANK1 ] unsigned char [8]
  3458 ;;  porcento        4   28[BANK1 ] float 
  3459 ;;  t2              2   49[BANK1 ] unsigned int 
  3460 ;;  t1              2   44[BANK1 ] unsigned int 
  3461 ;;  tempo           2   42[BANK1 ] unsigned int 
  3462 ;;  potencia        2   38[BANK1 ] unsigned int 
  3463 ;;  i               2   32[BANK1 ] unsigned int 
  3464 ;;  num             4   34[BANK1 ] unsigned int [2]
  3465 ;;  i               2   46[BANK1 ] unsigned int 
  3466 ;;  incremento      2   40[BANK1 ] unsigned int 
  3467 ;;  tmp             1   48[BANK1 ] unsigned char 
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  1    wreg      void 
  3470 ;; Registers used:
  3471 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3477 ;;      Params:         2       0       0       0       0       0       0
  3478 ;;      Locals:         0       0      51       0       0       0       0
  3479 ;;      Temps:          0       4       0       0       0       0       0
  3480 ;;      Totals:         2       4      51       0       0       0       0
  3481 ;;Total ram usage:       57 bytes
  3482 ;; Hardware stack levels used:    1
  3483 ;; Hardware stack levels required when called:    8
  3484 ;; This function calls:
  3485 ;;		___fladd
  3486 ;;		___fldiv
  3487 ;;		___fleq
  3488 ;;		___flge
  3489 ;;		___flmul
  3490 ;;		___fltol
  3491 ;;		___lwdiv
  3492 ;;		___lwmod
  3493 ;;		___wmul
  3494 ;;		___xxtofl
  3495 ;;		_atraso_ms
  3496 ;;		_lcd_cmd
  3497 ;;		_lcd_dat
  3498 ;;		_lcd_str
  3499 ;;		_pwmInit
  3500 ;;		_pwmSet1
  3501 ;;		_sprintf
  3502 ;;		_tc_tecla
  3503 ;; This function is called by:
  3504 ;;		_main
  3505 ;; This function uses a non-reentrant model
  3506 ;;
  3507                           
  3508                           	psect	text4
  3509  0012AE                     __ptext4:
  3510                           	callstack 0
  3511  0012AE                     _encher_tanque:
  3512                           	callstack 22
  3513  0012AE                     
  3514                           ;encher.c: 12:     lcd_cmd(0x01);
  3515  0012AE  0E01               	movlw	1
  3516  0012B0  EC17  F028         	call	_lcd_cmd
  3517                           
  3518                           ;encher.c: 13:     lcd_cmd(0x80);
  3519  0012B4  0E80               	movlw	128
  3520  0012B6  EC17  F028         	call	_lcd_cmd
  3521  0012BA                     
  3522                           ;encher.c: 14:     lcd_str("Quant(L): ");
  3523  0012BA  0EB0               	movlw	low STR_8
  3524  0012BC  6E08               	movwf	lcd_str@str^0,c
  3525  0012BE  0E06               	movlw	high STR_8
  3526  0012C0  6E09               	movwf	(lcd_str@str+1)^0,c
  3527  0012C2  ECE9  F024         	call	_lcd_str	;wreg free
  3528  0012C6                     
  3529                           ;encher.c: 15:     lcd_cmd(0xC0);
  3530  0012C6  0EC0               	movlw	192
  3531  0012C8  EC17  F028         	call	_lcd_cmd
  3532                           
  3533                           ;encher.c: 16:     lcd_str("  # - Voltar");
  3534  0012CC  0E97               	movlw	low STR_9
  3535  0012CE  6E08               	movwf	lcd_str@str^0,c
  3536  0012D0  0E06               	movlw	high STR_9
  3537  0012D2  6E09               	movwf	(lcd_str@str+1)^0,c
  3538  0012D4  ECE9  F024         	call	_lcd_str	;wreg free
  3539  0012D8                     
  3540                           ;encher.c: 17:     lcd_cmd(0x80 + 10);
  3541  0012D8  0E8A               	movlw	138
  3542  0012DA  EC17  F028         	call	_lcd_cmd
  3543  0012DE                     
  3544                           ;encher.c: 19:     unsigned int incremento;;encher.c: 20:     unsigned int i = 0;
  3545  0012DE  0E00               	movlw	0
  3546  0012E0  0101               	movlb	1	; () banked
  3547  0012E2  6F87               	movwf	(encher_tanque@i+1)& (0+255),b
  3548  0012E4  0E00               	movlw	0
  3549  0012E6  6F86               	movwf	encher_tanque@i& (0+255),b
  3550  0012E8                     
  3551                           ; BSR set to: 1
  3552                           ;encher.c: 21:     unsigned int num[2];;encher.c: 22:     unsigned char tmp;;encher.c: 2
      +                          4:     (*(volatile __near unsigned char*)0xF93) = 0xF8;
  3553  0012E8  0EF8               	movlw	248
  3554  0012EA  6E93               	movwf	147,c	;volatile
  3555                           
  3556                           ;encher.c: 26:     while (i != 2) {
  3557  0012EC  EFD6  F009         	goto	l4955
  3558  0012F0                     l4933:
  3559                           
  3560                           ; BSR set to: 1
  3561                           ;encher.c: 27:         (*(volatile __near unsigned char*)0xF95) = 0x0F;
  3562  0012F0  0E0F               	movlw	15
  3563  0012F2  6E95               	movwf	149,c	;volatile
  3564  0012F4                     
  3565                           ; BSR set to: 1
  3566                           ;encher.c: 28:         tmp = tc_tecla(0) + 0x30;
  3567  0012F4  0E00               	movlw	0
  3568  0012F6  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  3569  0012F8  0E00               	movlw	0
  3570  0012FA  6E07               	movwf	tc_tecla@timeout^0,c
  3571  0012FC  ECE7  F01D         	call	_tc_tecla	;wreg free
  3572  001300  0F30               	addlw	48
  3573  001302  0101               	movlb	1	; () banked
  3574  001304  6F88               	movwf	encher_tanque@tmp& (0+255),b
  3575  001306                     
  3576                           ; BSR set to: 1
  3577                           ;encher.c: 29:         (*(volatile __near unsigned char*)0xF95) = 0x00;
  3578  001306  0E00               	movlw	0
  3579  001308  6E95               	movwf	149,c	;volatile
  3580  00130A                     
  3581                           ; BSR set to: 1
  3582                           ;encher.c: 30:         lcd_dat(tmp);
  3583  00130A  5188               	movf	encher_tanque@tmp& (0+255),w,b
  3584  00130C  EC02  F028         	call	_lcd_dat
  3585  001310                     
  3586                           ;encher.c: 31:         if (tmp >= 0x3C) {
  3587  001310  0E3B               	movlw	59
  3588  001312  0101               	movlb	1	; () banked
  3589  001314  6588               	cpfsgt	encher_tanque@tmp& (0+255),b
  3590  001316  EF8F  F009         	goto	u6221
  3591  00131A  EF91  F009         	goto	u6220
  3592  00131E                     u6221:
  3593  00131E  EF93  F009         	goto	l4947
  3594  001322                     u6220:
  3595  001322  EFCF  F00D         	goto	l149
  3596  001326                     l4947:
  3597                           
  3598                           ; BSR set to: 1
  3599  001326  5186               	movf	encher_tanque@i& (0+255),w,b
  3600  001328  1187               	iorwf	(encher_tanque@i+1)& (0+255),w,b
  3601  00132A  A4D8               	btfss	status,2,c
  3602  00132C  EF9A  F009         	goto	u6231
  3603  001330  EF9C  F009         	goto	u6230
  3604  001334                     u6231:
  3605  001334  EFB8  F009         	goto	l4951
  3606  001338                     u6230:
  3607  001338                     
  3608                           ; BSR set to: 1
  3609                           ;encher.c: 34:             num[i] = (tmp - '0')*10;
  3610  001338  0ED0               	movlw	208
  3611  00133A  2588               	addwf	encher_tanque@tmp& (0+255),w,b
  3612  00133C  6E01               	movwf	___wmul@multiplier^0,c
  3613  00133E  6A02               	clrf	(___wmul@multiplier+1)^0,c
  3614  001340  0EFF               	movlw	255
  3615  001342  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  3616  001344  0E00               	movlw	0
  3617  001346  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3618  001348  0E0A               	movlw	10
  3619  00134A  6E03               	movwf	___wmul@multiplicand^0,c
  3620  00134C  EC2C  F028         	call	___wmul	;wreg free
  3621  001350  90D8               	bcf	status,0,c
  3622  001352  0101               	movlb	1	; () banked
  3623  001354  3586               	rlcf	encher_tanque@i& (0+255),w,b
  3624  001356  6ED9               	movwf	fsr2l,c
  3625  001358  3587               	rlcf	(encher_tanque@i+1)& (0+255),w,b
  3626  00135A  6EDA               	movwf	fsr2h,c
  3627  00135C  0E7A               	movlw	low encher_tanque@num
  3628  00135E  26D9               	addwf	fsr2l,f,c
  3629  001360  0E01               	movlw	high encher_tanque@num
  3630  001362  22DA               	addwfc	fsr2h,f,c
  3631  001364  C001  FFDE         	movff	?___wmul,postinc2
  3632  001368  C002  FFDD         	movff	?___wmul+1,postdec2
  3633                           
  3634                           ;encher.c: 35:         } else {
  3635  00136C  EFD4  F009         	goto	l4953
  3636  001370                     l4951:
  3637                           
  3638                           ; BSR set to: 1
  3639                           ;encher.c: 36:             num[i] = (tmp - '0');
  3640  001370  0ED0               	movlw	208
  3641  001372  0100               	movlb	0	; () banked
  3642  001374  6FDC               	movwf	??_encher_tanque& (0+255),b
  3643  001376  0EFF               	movlw	255
  3644  001378  6FDD               	movwf	(??_encher_tanque+1)& (0+255),b
  3645  00137A  0101               	movlb	1	; () banked
  3646  00137C  5188               	movf	encher_tanque@tmp& (0+255),w,b
  3647  00137E  0100               	movlb	0	; () banked
  3648  001380  6FDE               	movwf	(??_encher_tanque+2)& (0+255),b
  3649  001382  6BDF               	clrf	(??_encher_tanque+3)& (0+255),b
  3650  001384  51DC               	movf	??_encher_tanque& (0+255),w,b
  3651  001386  27DE               	addwf	(??_encher_tanque+2)& (0+255),f,b
  3652  001388  51DD               	movf	(??_encher_tanque+1)& (0+255),w,b
  3653  00138A  23DF               	addwfc	(??_encher_tanque+3)& (0+255),f,b
  3654  00138C  90D8               	bcf	status,0,c
  3655  00138E  0101               	movlb	1	; () banked
  3656  001390  3586               	rlcf	encher_tanque@i& (0+255),w,b
  3657  001392  6ED9               	movwf	fsr2l,c
  3658  001394  3587               	rlcf	(encher_tanque@i+1)& (0+255),w,b
  3659  001396  6EDA               	movwf	fsr2h,c
  3660  001398  0E7A               	movlw	low encher_tanque@num
  3661  00139A  26D9               	addwf	fsr2l,f,c
  3662  00139C  0E01               	movlw	high encher_tanque@num
  3663  00139E  22DA               	addwfc	fsr2h,f,c
  3664  0013A0  C0DE  FFDE         	movff	??_encher_tanque+2,postinc2
  3665  0013A4  C0DF  FFDD         	movff	??_encher_tanque+3,postdec2
  3666  0013A8                     l4953:
  3667                           
  3668                           ; BSR set to: 1
  3669                           ;encher.c: 38:         i++;
  3670  0013A8  4B86               	infsnz	encher_tanque@i& (0+255),f,b
  3671  0013AA  2B87               	incf	(encher_tanque@i+1)& (0+255),f,b
  3672  0013AC                     l4955:
  3673                           
  3674                           ; BSR set to: 1
  3675                           ;encher.c: 26:     while (i != 2) {
  3676  0013AC  0E02               	movlw	2
  3677  0013AE  1986               	xorwf	encher_tanque@i& (0+255),w,b
  3678  0013B0  1187               	iorwf	(encher_tanque@i+1)& (0+255),w,b
  3679  0013B2  A4D8               	btfss	status,2,c
  3680  0013B4  EFDE  F009         	goto	u6241
  3681  0013B8  EFE0  F009         	goto	u6240
  3682  0013BC                     u6241:
  3683  0013BC  EF78  F009         	goto	l4933
  3684  0013C0                     u6240:
  3685  0013C0                     
  3686                           ; BSR set to: 1
  3687                           ;encher.c: 41:     (*(volatile __near unsigned char*)0xF92) = 0x20;
  3688  0013C0  0E20               	movlw	32
  3689  0013C2  6E92               	movwf	146,c	;volatile
  3690                           
  3691                           ;encher.c: 42:     (*(volatile __near unsigned char*)0xF93) = 0x3F;
  3692  0013C4  0E3F               	movlw	63
  3693  0013C6  6E93               	movwf	147,c	;volatile
  3694  0013C8                     
  3695                           ; BSR set to: 1
  3696                           ;encher.c: 44:     atraso_ms(500);
  3697  0013C8  0E01               	movlw	1
  3698  0013CA  6E02               	movwf	(atraso_ms@t+1)^0,c
  3699  0013CC  0EF4               	movlw	244
  3700  0013CE  6E01               	movwf	atraso_ms@t^0,c
  3701  0013D0  EC95  F025         	call	_atraso_ms	;wreg free
  3702  0013D4                     
  3703                           ;encher.c: 45:     lcd_cmd(0x01);
  3704  0013D4  0E01               	movlw	1
  3705  0013D6  EC17  F028         	call	_lcd_cmd
  3706  0013DA                     
  3707                           ;encher.c: 46:     incremento = num[0] + num[1];
  3708  0013DA  0101               	movlb	1	; () banked
  3709  0013DC  517A               	movf	encher_tanque@num& (0+255),w,b
  3710  0013DE  257C               	addwf	(encher_tanque@num+2)& (0+255),w,b
  3711  0013E0  6F80               	movwf	encher_tanque@incremento& (0+255),b
  3712  0013E2  517B               	movf	(encher_tanque@num+1)& (0+255),w,b
  3713  0013E4  217D               	addwfc	(encher_tanque@num+3)& (0+255),w,b
  3714  0013E6  6F81               	movwf	(encher_tanque@incremento+1)& (0+255),b
  3715  0013E8                     
  3716                           ; BSR set to: 1
  3717                           ;encher.c: 48:     if (*vol + incremento > 70) {
  3718  0013E8  0E00               	movlw	0
  3719  0013EA  6E38               	movwf	___flge@ff1^0,c
  3720  0013EC  0E00               	movlw	0
  3721  0013EE  6E39               	movwf	(___flge@ff1+1)^0,c
  3722  0013F0  0E8C               	movlw	140
  3723  0013F2  6E3A               	movwf	(___flge@ff1+2)^0,c
  3724  0013F4  0E42               	movlw	66
  3725  0013F6  6E3B               	movwf	(___flge@ff1+3)^0,c
  3726  0013F8  C07D  FFD9         	movff	encher_tanque@vol,fsr2l
  3727  0013FC  C07E  FFDA         	movff	encher_tanque@vol+1,fsr2h
  3728  001400  CFDE F02C          	movff	postinc2,___fladd@a
  3729  001404  CFDE F02D          	movff	postinc2,___fladd@a+1
  3730  001408  CFDE F02E          	movff	postinc2,___fladd@a+2
  3731  00140C  CFDE F02F          	movff	postinc2,___fladd@a+3
  3732  001410  C180  F001         	movff	encher_tanque@incremento,___xxtofl@val
  3733  001414  C181  F002         	movff	encher_tanque@incremento+1,___xxtofl@val+1
  3734  001418  6A03               	clrf	(___xxtofl@val+2)^0,c
  3735  00141A  6A04               	clrf	(___xxtofl@val+3)^0,c
  3736  00141C  0E00               	movlw	0
  3737  00141E  ECCC  F01E         	call	___xxtofl
  3738  001422  C001  F028         	movff	?___xxtofl,___fladd@b
  3739  001426  C002  F029         	movff	?___xxtofl+1,___fladd@b+1
  3740  00142A  C003  F02A         	movff	?___xxtofl+2,___fladd@b+2
  3741  00142E  C004  F02B         	movff	?___xxtofl+3,___fladd@b+3
  3742  001432  EC37  F012         	call	___fladd	;wreg free
  3743  001436  C028  F03C         	movff	?___fladd,___flge@ff2
  3744  00143A  C029  F03D         	movff	?___fladd+1,___flge@ff2+1
  3745  00143E  C02A  F03E         	movff	?___fladd+2,___flge@ff2+2
  3746  001442  C02B  F03F         	movff	?___fladd+3,___flge@ff2+3
  3747  001446  ECA6  F021         	call	___flge	;wreg free
  3748  00144A  B0D8               	btfsc	status,0,c
  3749  00144C  EF2A  F00A         	goto	u6251
  3750  001450  EF2C  F00A         	goto	u6250
  3751  001454                     u6251:
  3752  001454  EF44  F00A         	goto	l4975
  3753  001458                     u6250:
  3754  001458                     
  3755                           ;encher.c: 51:         lcd_cmd(0x01);
  3756  001458  0E01               	movlw	1
  3757  00145A  EC17  F028         	call	_lcd_cmd
  3758                           
  3759                           ;encher.c: 52:         lcd_cmd(0x80);
  3760  00145E  0E80               	movlw	128
  3761  001460  EC17  F028         	call	_lcd_cmd
  3762  001464                     
  3763                           ;encher.c: 53:         lcd_str("ERRO: vol > MAX");
  3764  001464  0E16               	movlw	low STR_10
  3765  001466  6E08               	movwf	lcd_str@str^0,c
  3766  001468  0E06               	movlw	high STR_10
  3767  00146A  6E09               	movwf	(lcd_str@str+1)^0,c
  3768  00146C  ECE9  F024         	call	_lcd_str	;wreg free
  3769  001470                     
  3770                           ;encher.c: 54:         lcd_cmd(0xC0);
  3771  001470  0EC0               	movlw	192
  3772  001472  EC17  F028         	call	_lcd_cmd
  3773                           
  3774                           ;encher.c: 55:         lcd_str(" RB3 - Voltar");
  3775  001476  0E60               	movlw	low STR_11
  3776  001478  6E08               	movwf	lcd_str@str^0,c
  3777  00147A  0E06               	movlw	high STR_11
  3778  00147C  6E09               	movwf	(lcd_str@str+1)^0,c
  3779  00147E  ECE9  F024         	call	_lcd_str	;wreg free
  3780  001482                     
  3781                           ;encher.c: 58:         (((*(volatile __near unsigned char*)0xF94)) |= (1<<1));
  3782  001482  8294               	bsf	148,1,c	;volatile
  3783                           
  3784                           ;encher.c: 61:     } else {
  3785  001484  EFF3  F00B         	goto	l5071
  3786  001488                     l4975:
  3787                           
  3788                           ;encher.c: 63:         *vol += incremento;
  3789  001488  C07D  FFD9         	movff	encher_tanque@vol,fsr2l
  3790  00148C  C07E  FFDA         	movff	encher_tanque@vol+1,fsr2h
  3791  001490  CFDE F028          	movff	postinc2,___fladd@b
  3792  001494  CFDE F029          	movff	postinc2,___fladd@b+1
  3793  001498  CFDE F02A          	movff	postinc2,___fladd@b+2
  3794  00149C  CFDE F02B          	movff	postinc2,___fladd@b+3
  3795  0014A0  C180  F001         	movff	encher_tanque@incremento,___xxtofl@val
  3796  0014A4  C181  F002         	movff	encher_tanque@incremento+1,___xxtofl@val+1
  3797  0014A8  6A03               	clrf	(___xxtofl@val+2)^0,c
  3798  0014AA  6A04               	clrf	(___xxtofl@val+3)^0,c
  3799  0014AC  0E00               	movlw	0
  3800  0014AE  ECCC  F01E         	call	___xxtofl
  3801  0014B2  C001  F02C         	movff	?___xxtofl,___fladd@a
  3802  0014B6  C002  F02D         	movff	?___xxtofl+1,___fladd@a+1
  3803  0014BA  C003  F02E         	movff	?___xxtofl+2,___fladd@a+2
  3804  0014BE  C004  F02F         	movff	?___xxtofl+3,___fladd@a+3
  3805  0014C2  EC37  F012         	call	___fladd	;wreg free
  3806  0014C6  C07D  FFD9         	movff	encher_tanque@vol,fsr2l
  3807  0014CA  C07E  FFDA         	movff	encher_tanque@vol+1,fsr2h
  3808  0014CE  C028  FFDE         	movff	?___fladd,postinc2
  3809  0014D2  C029  FFDE         	movff	?___fladd+1,postinc2
  3810  0014D6  C02A  FFDE         	movff	?___fladd+2,postinc2
  3811  0014DA  C02B  FFDE         	movff	?___fladd+3,postinc2
  3812  0014DE                     
  3813                           ;encher.c: 64:         char y[8];;encher.c: 65:         sprintf(y, "%.1f", *vol);
  3814  0014DE  0E6C               	movlw	low encher_tanque@y
  3815  0014E0  0100               	movlb	0	; () banked
  3816  0014E2  6FCA               	movwf	sprintf@s& (0+255),b
  3817  0014E4  0E01               	movlw	high encher_tanque@y
  3818  0014E6  6FCB               	movwf	(sprintf@s+1)& (0+255),b
  3819  0014E8  0EE1               	movlw	low STR_12
  3820  0014EA  6FCC               	movwf	sprintf@fmt& (0+255),b
  3821  0014EC  0E06               	movlw	high STR_12
  3822  0014EE  6FCD               	movwf	(sprintf@fmt+1)& (0+255),b
  3823  0014F0  C07D  FFD9         	movff	encher_tanque@vol,fsr2l
  3824  0014F4  C07E  FFDA         	movff	encher_tanque@vol+1,fsr2h
  3825  0014F8  CFDE F0CE          	movff	postinc2,?_sprintf+4
  3826  0014FC  CFDE F0CF          	movff	postinc2,?_sprintf+5
  3827  001500  CFDE F0D0          	movff	postinc2,?_sprintf+6
  3828  001504  CFDE F0D1          	movff	postinc2,?_sprintf+7
  3829  001508  ECE7  F026         	call	_sprintf	;wreg free
  3830  00150C                     
  3831                           ;encher.c: 66:         lcd_str(y);
  3832  00150C  0E6C               	movlw	low encher_tanque@y
  3833  00150E  6E08               	movwf	lcd_str@str^0,c
  3834  001510  0E01               	movlw	high encher_tanque@y
  3835  001512  6E09               	movwf	(lcd_str@str+1)^0,c
  3836  001514  ECE9  F024         	call	_lcd_str	;wreg free
  3837  001518                     
  3838                           ;encher.c: 67:         lcd_str(" L");
  3839  001518  0EF9               	movlw	low STR_13
  3840  00151A  6E08               	movwf	lcd_str@str^0,c
  3841  00151C  0E06               	movlw	high STR_13
  3842  00151E  6E09               	movwf	(lcd_str@str+1)^0,c
  3843  001520  ECE9  F024         	call	_lcd_str	;wreg free
  3844  001524                     
  3845                           ;encher.c: 68:         atraso_ms(500);
  3846  001524  0E01               	movlw	1
  3847  001526  6E02               	movwf	(atraso_ms@t+1)^0,c
  3848  001528  0EF4               	movlw	244
  3849  00152A  6E01               	movwf	atraso_ms@t^0,c
  3850  00152C  EC95  F025         	call	_atraso_ms	;wreg free
  3851  001530                     
  3852                           ;encher.c: 71:         unsigned int i = 0, potencia = 100, t1, t2, tempo = incremento / 
      +                          2;
  3853  001530  0E00               	movlw	0
  3854  001532  0101               	movlb	1	; () banked
  3855  001534  6F79               	movwf	(encher_tanque@i_146+1)& (0+255),b
  3856  001536  0E00               	movlw	0
  3857  001538  6F78               	movwf	encher_tanque@i_146& (0+255),b
  3858  00153A                     
  3859                           ; BSR set to: 1
  3860  00153A  0E00               	movlw	0
  3861  00153C  6F7F               	movwf	(encher_tanque@potencia+1)& (0+255),b
  3862  00153E  0E64               	movlw	100
  3863  001540  6F7E               	movwf	encher_tanque@potencia& (0+255),b
  3864  001542                     
  3865                           ; BSR set to: 1
  3866  001542  90D8               	bcf	status,0,c
  3867  001544  3181               	rrcf	(encher_tanque@incremento+1)& (0+255),w,b
  3868  001546  0100               	movlb	0	; () banked
  3869  001548  6FDC               	movwf	??_encher_tanque& (0+255),b
  3870  00154A  0101               	movlb	1	; () banked
  3871  00154C  3180               	rrcf	encher_tanque@incremento& (0+255),w,b
  3872  00154E  6F82               	movwf	encher_tanque@tempo& (0+255),b
  3873  001550  C0DC  F183         	movff	??_encher_tanque,encher_tanque@tempo+1
  3874  001554                     
  3875                           ; BSR set to: 1
  3876                           ;encher.c: 72:         float porcento;;encher.c: 73:         int numeros[10] = {0x3F, 0x
      +                          06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D,
  3877  001554  EE21  F09F         	lfsr	2,encher_tanque@F356
  3878  001558  EE11  F058         	lfsr	1,encher_tanque@numeros
  3879  00155C  0E13               	movlw	19
  3880  00155E                     u6261:
  3881  00155E  CFDB FFE3          	movff	plusw2,plusw1
  3882  001562  06E8               	decf	wreg,f,c
  3883  001564  E2FC               	bc	u6261
  3884  001566                     
  3885                           ; BSR set to: 1
  3886                           ;encher.c: 76:         (*(volatile __near unsigned char*)0xF92) = 0x00;
  3887  001566  0E00               	movlw	0
  3888  001568  6E92               	movwf	146,c	;volatile
  3889  00156A                     
  3890                           ; BSR set to: 1
  3891                           ;encher.c: 78:         lcd_cmd(0x01);
  3892  00156A  0E01               	movlw	1
  3893  00156C  EC17  F028         	call	_lcd_cmd
  3894  001570                     
  3895                           ;encher.c: 79:         lcd_cmd(0x80);
  3896  001570  0E80               	movlw	128
  3897  001572  EC17  F028         	call	_lcd_cmd
  3898  001576                     
  3899                           ;encher.c: 80:         lcd_str("Enchendo...");
  3900  001576  0EA4               	movlw	low STR_14
  3901  001578  6E08               	movwf	lcd_str@str^0,c
  3902  00157A  0E06               	movlw	high STR_14
  3903  00157C  6E09               	movwf	(lcd_str@str+1)^0,c
  3904  00157E  ECE9  F024         	call	_lcd_str	;wreg free
  3905  001582                     
  3906                           ;encher.c: 81:         lcd_cmd(0xC0);
  3907  001582  0EC0               	movlw	192
  3908  001584  EC17  F028         	call	_lcd_cmd
  3909  001588                     
  3910                           ;encher.c: 82:         lcd_str("Aguarde!");
  3911  001588  0ED0               	movlw	low STR_15
  3912  00158A  6E08               	movwf	lcd_str@str^0,c
  3913  00158C  0E06               	movlw	high STR_15
  3914  00158E  6E09               	movwf	(lcd_str@str+1)^0,c
  3915  001590  ECE9  F024         	call	_lcd_str	;wreg free
  3916  001594                     
  3917                           ;encher.c: 84:         pwmInit();
  3918  001594  EC3F  F028         	call	_pwmInit	;wreg free
  3919  001598                     
  3920                           ;encher.c: 87:         t1 = tempo / 10;
  3921  001598  C182  F001         	movff	encher_tanque@tempo,___lwdiv@dividend
  3922  00159C  C183  F002         	movff	encher_tanque@tempo+1,___lwdiv@dividend+1
  3923  0015A0  0E00               	movlw	0
  3924  0015A2  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3925  0015A4  0E0A               	movlw	10
  3926  0015A6  6E03               	movwf	___lwdiv@divisor^0,c
  3927  0015A8  EC25  F025         	call	___lwdiv	;wreg free
  3928  0015AC  C001  F184         	movff	?___lwdiv,encher_tanque@t1
  3929  0015B0  C002  F185         	movff	?___lwdiv+1,encher_tanque@t1+1
  3930  0015B4                     
  3931                           ;encher.c: 88:         t2 = tempo % 10;
  3932  0015B4  C182  F001         	movff	encher_tanque@tempo,___lwmod@dividend
  3933  0015B8  C183  F002         	movff	encher_tanque@tempo+1,___lwmod@dividend+1
  3934  0015BC  0E00               	movlw	0
  3935  0015BE  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3936  0015C0  0E0A               	movlw	10
  3937  0015C2  6E03               	movwf	___lwmod@divisor^0,c
  3938  0015C4  ECC7  F025         	call	___lwmod	;wreg free
  3939  0015C8  C001  F189         	movff	?___lwmod,encher_tanque@t2
  3940  0015CC  C002  F18A         	movff	?___lwmod+1,encher_tanque@t2+1
  3941                           
  3942                           ;encher.c: 89:         while ((t1 != 0) || (t2 != 0)) {
  3943  0015D0  EFC5  F00B         	goto	l5049
  3944  0015D4                     l5011:
  3945                           
  3946                           ; BSR set to: 1
  3947                           ;encher.c: 94:             porcento = ((((float) t1 * 10.0) + (float) t2) / (float) temp
      +                          o);
  3948  0015D4  C189  F001         	movff	encher_tanque@t2,___xxtofl@val
  3949  0015D8  C18A  F002         	movff	encher_tanque@t2+1,___xxtofl@val+1
  3950  0015DC  6A03               	clrf	(___xxtofl@val+2)^0,c
  3951  0015DE  6A04               	clrf	(___xxtofl@val+3)^0,c
  3952  0015E0  0E00               	movlw	0
  3953  0015E2  ECCC  F01E         	call	___xxtofl
  3954  0015E6  C001  F02C         	movff	?___xxtofl,___fladd@a
  3955  0015EA  C002  F02D         	movff	?___xxtofl+1,___fladd@a+1
  3956  0015EE  C003  F02E         	movff	?___xxtofl+2,___fladd@a+2
  3957  0015F2  C004  F02F         	movff	?___xxtofl+3,___fladd@a+3
  3958  0015F6  0E00               	movlw	0
  3959  0015F8  6E13               	movwf	___flmul@a^0,c
  3960  0015FA  0E00               	movlw	0
  3961  0015FC  6E14               	movwf	(___flmul@a+1)^0,c
  3962  0015FE  0E20               	movlw	32
  3963  001600  6E15               	movwf	(___flmul@a+2)^0,c
  3964  001602  0E41               	movlw	65
  3965  001604  6E16               	movwf	(___flmul@a+3)^0,c
  3966  001606  C184  F001         	movff	encher_tanque@t1,___xxtofl@val
  3967  00160A  C185  F002         	movff	encher_tanque@t1+1,___xxtofl@val+1
  3968  00160E  6A03               	clrf	(___xxtofl@val+2)^0,c
  3969  001610  6A04               	clrf	(___xxtofl@val+3)^0,c
  3970  001612  0E00               	movlw	0
  3971  001614  ECCC  F01E         	call	___xxtofl
  3972  001618  C001  F00F         	movff	?___xxtofl,___flmul@b
  3973  00161C  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3974  001620  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3975  001624  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3976  001628  ECFC  F018         	call	___flmul	;wreg free
  3977  00162C  C00F  F028         	movff	?___flmul,___fladd@b
  3978  001630  C010  F029         	movff	?___flmul+1,___fladd@b+1
  3979  001634  C011  F02A         	movff	?___flmul+2,___fladd@b+2
  3980  001638  C012  F02B         	movff	?___flmul+3,___fladd@b+3
  3981  00163C  EC37  F012         	call	___fladd	;wreg free
  3982  001640  C028  F038         	movff	?___fladd,___fldiv@b
  3983  001644  C029  F039         	movff	?___fladd+1,___fldiv@b+1
  3984  001648  C02A  F03A         	movff	?___fladd+2,___fldiv@b+2
  3985  00164C  C02B  F03B         	movff	?___fladd+3,___fldiv@b+3
  3986  001650  C182  F001         	movff	encher_tanque@tempo,___xxtofl@val
  3987  001654  C183  F002         	movff	encher_tanque@tempo+1,___xxtofl@val+1
  3988  001658  6A03               	clrf	(___xxtofl@val+2)^0,c
  3989  00165A  6A04               	clrf	(___xxtofl@val+3)^0,c
  3990  00165C  0E00               	movlw	0
  3991  00165E  ECCC  F01E         	call	___xxtofl
  3992  001662  C001  F03C         	movff	?___xxtofl,___fldiv@a
  3993  001666  C002  F03D         	movff	?___xxtofl+1,___fldiv@a+1
  3994  00166A  C003  F03E         	movff	?___xxtofl+2,___fldiv@a+2
  3995  00166E  C004  F03F         	movff	?___xxtofl+3,___fldiv@a+3
  3996  001672  EC11  F01B         	call	___fldiv	;wreg free
  3997  001676  C038  F174         	movff	?___fldiv,encher_tanque@porcento
  3998  00167A  C039  F175         	movff	?___fldiv+1,encher_tanque@porcento+1
  3999  00167E  C03A  F176         	movff	?___fldiv+2,encher_tanque@porcento+2
  4000  001682  C03B  F177         	movff	?___fldiv+3,encher_tanque@porcento+3
  4001                           
  4002                           ;encher.c: 95:             potencia = 100 * porcento;
  4003  001686  0E00               	movlw	0
  4004  001688  6E13               	movwf	___flmul@a^0,c
  4005  00168A  0E00               	movlw	0
  4006  00168C  6E14               	movwf	(___flmul@a+1)^0,c
  4007  00168E  0EC8               	movlw	200
  4008  001690  6E15               	movwf	(___flmul@a+2)^0,c
  4009  001692  0E42               	movlw	66
  4010  001694  6E16               	movwf	(___flmul@a+3)^0,c
  4011  001696  C174  F00F         	movff	encher_tanque@porcento,___flmul@b
  4012  00169A  C175  F010         	movff	encher_tanque@porcento+1,___flmul@b+1
  4013  00169E  C176  F011         	movff	encher_tanque@porcento+2,___flmul@b+2
  4014  0016A2  C177  F012         	movff	encher_tanque@porcento+3,___flmul@b+3
  4015  0016A6  ECFC  F018         	call	___flmul	;wreg free
  4016  0016AA  C00F  F028         	movff	?___flmul,___fltol@f1
  4017  0016AE  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  4018  0016B2  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  4019  0016B6  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  4020  0016BA  EC23  F021         	call	___fltol	;wreg free
  4021  0016BE  C028  F17E         	movff	?___fltol,encher_tanque@potencia
  4022  0016C2  C029  F17F         	movff	?___fltol+1,encher_tanque@potencia+1
  4023  0016C6                     
  4024                           ;encher.c: 96:             if (potencia == 100) {
  4025  0016C6  0E64               	movlw	100
  4026  0016C8  0101               	movlb	1	; () banked
  4027  0016CA  197E               	xorwf	encher_tanque@potencia& (0+255),w,b
  4028  0016CC  117F               	iorwf	(encher_tanque@potencia+1)& (0+255),w,b
  4029  0016CE  A4D8               	btfss	status,2,c
  4030  0016D0  EF6C  F00B         	goto	u6271
  4031  0016D4  EF6E  F00B         	goto	u6270
  4032  0016D8                     u6271:
  4033  0016D8  EF72  F00B         	goto	l5017
  4034  0016DC                     u6270:
  4035  0016DC                     
  4036                           ; BSR set to: 1
  4037                           ;encher.c: 97:                 potencia = 99;
  4038  0016DC  0E00               	movlw	0
  4039  0016DE  6F7F               	movwf	(encher_tanque@potencia+1)& (0+255),b
  4040  0016E0  0E63               	movlw	99
  4041  0016E2  6F7E               	movwf	encher_tanque@potencia& (0+255),b
  4042  0016E4                     l5017:
  4043                           
  4044                           ; BSR set to: 1
  4045                           ;encher.c: 99:             pwmSet1(potencia);
  4046  0016E4  517E               	movf	encher_tanque@potencia& (0+255),w,b
  4047  0016E6  EC5F  F025         	call	_pwmSet1
  4048  0016EA                     
  4049                           ;encher.c: 102:             (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  4050  0016EA  9A80               	bcf	128,5,c	;volatile
  4051  0016EC                     
  4052                           ;encher.c: 103:             (((*(volatile __near unsigned char*)0xF80)) |= (1<<4));
  4053  0016EC  8880               	bsf	128,4,c	;volatile
  4054  0016EE                     
  4055                           ;encher.c: 104:             (*(volatile __near unsigned char*)0xF83) = numeros[t1];
  4056  0016EE  90D8               	bcf	status,0,c
  4057  0016F0  0101               	movlb	1	; () banked
  4058  0016F2  3584               	rlcf	encher_tanque@t1& (0+255),w,b
  4059  0016F4  6ED9               	movwf	fsr2l,c
  4060  0016F6  3585               	rlcf	(encher_tanque@t1+1)& (0+255),w,b
  4061  0016F8  6EDA               	movwf	fsr2h,c
  4062  0016FA  0E58               	movlw	low encher_tanque@numeros
  4063  0016FC  26D9               	addwf	fsr2l,f,c
  4064  0016FE  0E01               	movlw	high encher_tanque@numeros
  4065  001700  22DA               	addwfc	fsr2h,f,c
  4066  001702  50DF               	movf	indf2,w,c
  4067  001704  6E83               	movwf	131,c	;volatile
  4068  001706                     
  4069                           ; BSR set to: 1
  4070                           ;encher.c: 105:             atraso_ms(5);
  4071  001706  0E00               	movlw	0
  4072  001708  6E02               	movwf	(atraso_ms@t+1)^0,c
  4073  00170A  0E05               	movlw	5
  4074  00170C  6E01               	movwf	atraso_ms@t^0,c
  4075  00170E  EC95  F025         	call	_atraso_ms	;wreg free
  4076  001712                     
  4077                           ;encher.c: 106:             (((*(volatile __near unsigned char*)0xF80)) |= (1<<5));
  4078  001712  8A80               	bsf	128,5,c	;volatile
  4079  001714                     
  4080                           ;encher.c: 107:             (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<4));
  4081  001714  9880               	bcf	128,4,c	;volatile
  4082  001716                     
  4083                           ;encher.c: 108:             (*(volatile __near unsigned char*)0xF83) = numeros[t2];
  4084  001716  90D8               	bcf	status,0,c
  4085  001718  0101               	movlb	1	; () banked
  4086  00171A  3589               	rlcf	encher_tanque@t2& (0+255),w,b
  4087  00171C  6ED9               	movwf	fsr2l,c
  4088  00171E  358A               	rlcf	(encher_tanque@t2+1)& (0+255),w,b
  4089  001720  6EDA               	movwf	fsr2h,c
  4090  001722  0E58               	movlw	low encher_tanque@numeros
  4091  001724  26D9               	addwf	fsr2l,f,c
  4092  001726  0E01               	movlw	high encher_tanque@numeros
  4093  001728  22DA               	addwfc	fsr2h,f,c
  4094  00172A  50DF               	movf	indf2,w,c
  4095  00172C  6E83               	movwf	131,c	;volatile
  4096  00172E                     
  4097                           ; BSR set to: 1
  4098                           ;encher.c: 109:             atraso_ms(5);
  4099  00172E  0E00               	movlw	0
  4100  001730  6E02               	movwf	(atraso_ms@t+1)^0,c
  4101  001732  0E05               	movlw	5
  4102  001734  6E01               	movwf	atraso_ms@t^0,c
  4103  001736  EC95  F025         	call	_atraso_ms	;wreg free
  4104  00173A                     
  4105                           ;encher.c: 111:             if (i == 40) {
  4106  00173A  0E28               	movlw	40
  4107  00173C  0101               	movlb	1	; () banked
  4108  00173E  1978               	xorwf	encher_tanque@i_146& (0+255),w,b
  4109  001740  1179               	iorwf	(encher_tanque@i_146+1)& (0+255),w,b
  4110  001742  A4D8               	btfss	status,2,c
  4111  001744  EFA6  F00B         	goto	u6281
  4112  001748  EFA8  F00B         	goto	u6280
  4113  00174C                     u6281:
  4114  00174C  EFC3  F00B         	goto	l5047
  4115  001750                     u6280:
  4116  001750                     
  4117                           ; BSR set to: 1
  4118                           ;encher.c: 112:                 i = 0;
  4119  001750  0E00               	movlw	0
  4120  001752  6F79               	movwf	(encher_tanque@i_146+1)& (0+255),b
  4121  001754  0E00               	movlw	0
  4122  001756  6F78               	movwf	encher_tanque@i_146& (0+255),b
  4123  001758                     
  4124                           ; BSR set to: 1
  4125                           ;encher.c: 113:                 if (t2 == 0) {
  4126  001758  5189               	movf	encher_tanque@t2& (0+255),w,b
  4127  00175A  118A               	iorwf	(encher_tanque@t2+1)& (0+255),w,b
  4128  00175C  A4D8               	btfss	status,2,c
  4129  00175E  EFB3  F00B         	goto	u6291
  4130  001762  EFB5  F00B         	goto	u6290
  4131  001766                     u6291:
  4132  001766  EFBE  F00B         	goto	l5045
  4133  00176A                     u6290:
  4134  00176A                     
  4135                           ; BSR set to: 1
  4136                           ;encher.c: 114:                     t1--;
  4137  00176A  0784               	decf	encher_tanque@t1& (0+255),f,b
  4138  00176C  A0D8               	btfss	status,0,c
  4139  00176E  0785               	decf	(encher_tanque@t1+1)& (0+255),f,b
  4140  001770                     
  4141                           ; BSR set to: 1
  4142                           ;encher.c: 115:                     t2 = 9;
  4143  001770  0E00               	movlw	0
  4144  001772  6F8A               	movwf	(encher_tanque@t2+1)& (0+255),b
  4145  001774  0E09               	movlw	9
  4146  001776  6F89               	movwf	encher_tanque@t2& (0+255),b
  4147                           
  4148                           ;encher.c: 116:                 } else {
  4149  001778  EFC5  F00B         	goto	l5049
  4150  00177C                     l5045:
  4151                           
  4152                           ; BSR set to: 1
  4153                           ;encher.c: 117:                     t2--;
  4154  00177C  0789               	decf	encher_tanque@t2& (0+255),f,b
  4155  00177E  A0D8               	btfss	status,0,c
  4156  001780  078A               	decf	(encher_tanque@t2+1)& (0+255),f,b
  4157  001782  EFC5  F00B         	goto	l5049
  4158  001786                     l5047:
  4159                           
  4160                           ; BSR set to: 1
  4161                           ;encher.c: 120:                 i++;
  4162  001786  4B78               	infsnz	encher_tanque@i_146& (0+255),f,b
  4163  001788  2B79               	incf	(encher_tanque@i_146+1)& (0+255),f,b
  4164  00178A                     l5049:
  4165                           
  4166                           ;encher.c: 89:         while ((t1 != 0) || (t2 != 0)) {
  4167  00178A  0101               	movlb	1	; () banked
  4168  00178C  5184               	movf	encher_tanque@t1& (0+255),w,b
  4169  00178E  1185               	iorwf	(encher_tanque@t1+1)& (0+255),w,b
  4170  001790  A4D8               	btfss	status,2,c
  4171  001792  EFCD  F00B         	goto	u6301
  4172  001796  EFCF  F00B         	goto	u6300
  4173  00179A                     u6301:
  4174  00179A  EFEA  F00A         	goto	l5011
  4175  00179E                     u6300:
  4176  00179E                     
  4177                           ; BSR set to: 1
  4178  00179E  5189               	movf	encher_tanque@t2& (0+255),w,b
  4179  0017A0  118A               	iorwf	(encher_tanque@t2+1)& (0+255),w,b
  4180  0017A2  A4D8               	btfss	status,2,c
  4181  0017A4  EFD6  F00B         	goto	u6311
  4182  0017A8  EFD8  F00B         	goto	u6310
  4183  0017AC                     u6311:
  4184  0017AC  EFEA  F00A         	goto	l5011
  4185  0017B0                     u6310:
  4186  0017B0                     
  4187                           ; BSR set to: 1
  4188                           ;encher.c: 123:         pwmSet1(0);
  4189  0017B0  0E00               	movlw	0
  4190  0017B2  EC5F  F025         	call	_pwmSet1
  4191  0017B6                     
  4192                           ;encher.c: 126:         (((*(volatile __near unsigned char*)0xF94)) |= (1<<1));
  4193  0017B6  8294               	bsf	148,1,c	;volatile
  4194  0017B8                     
  4195                           ;encher.c: 129:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  4196  0017B8  9A80               	bcf	128,5,c	;volatile
  4197  0017BA                     
  4198                           ;encher.c: 130:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<4));
  4199  0017BA  9880               	bcf	128,4,c	;volatile
  4200  0017BC                     
  4201                           ;encher.c: 133:         lcd_cmd(0x01);
  4202  0017BC  0E01               	movlw	1
  4203  0017BE  EC17  F028         	call	_lcd_cmd
  4204  0017C2                     
  4205                           ;encher.c: 134:         lcd_cmd(0x80);
  4206  0017C2  0E80               	movlw	128
  4207  0017C4  EC17  F028         	call	_lcd_cmd
  4208  0017C8                     
  4209                           ;encher.c: 135:         lcd_str("    SUCESSO!");
  4210  0017C8  0E8A               	movlw	low STR_16
  4211  0017CA  6E08               	movwf	lcd_str@str^0,c
  4212  0017CC  0E06               	movlw	high STR_16
  4213  0017CE  6E09               	movwf	(lcd_str@str+1)^0,c
  4214  0017D0  ECE9  F024         	call	_lcd_str	;wreg free
  4215  0017D4                     
  4216                           ;encher.c: 136:         lcd_cmd(0xC0);
  4217  0017D4  0EC0               	movlw	192
  4218  0017D6  EC17  F028         	call	_lcd_cmd
  4219  0017DA                     
  4220                           ;encher.c: 137:         lcd_str(" RB3 - Voltar");
  4221  0017DA  0E60               	movlw	low STR_11
  4222  0017DC  6E08               	movwf	lcd_str@str^0,c
  4223  0017DE  0E06               	movlw	high STR_11
  4224  0017E0  6E09               	movwf	(lcd_str@str+1)^0,c
  4225  0017E2  ECE9  F024         	call	_lcd_str	;wreg free
  4226  0017E6                     l5071:
  4227                           
  4228                           ;encher.c: 140:     (*(volatile __near unsigned char*)0xF95) = 0x00;
  4229  0017E6  0E00               	movlw	0
  4230  0017E8  6E95               	movwf	149,c	;volatile
  4231  0017EA                     
  4232                           ;encher.c: 141:     if (*vol == 0) {
  4233  0017EA  C07D  FFD9         	movff	encher_tanque@vol,fsr2l
  4234  0017EE  C07E  FFDA         	movff	encher_tanque@vol+1,fsr2h
  4235  0017F2  CFDE F001          	movff	postinc2,___fleq@ff1
  4236  0017F6  CFDE F002          	movff	postinc2,___fleq@ff1+1
  4237  0017FA  CFDE F003          	movff	postinc2,___fleq@ff1+2
  4238  0017FE  CFDE F004          	movff	postinc2,___fleq@ff1+3
  4239  001802  0E00               	movlw	0
  4240  001804  6E05               	movwf	___fleq@ff2^0,c
  4241  001806  0E00               	movlw	0
  4242  001808  6E06               	movwf	(___fleq@ff2+1)^0,c
  4243  00180A  0E00               	movlw	0
  4244  00180C  6E07               	movwf	(___fleq@ff2+2)^0,c
  4245  00180E  0E00               	movlw	0
  4246  001810  6E08               	movwf	(___fleq@ff2+3)^0,c
  4247  001812  EC94  F024         	call	___fleq	;wreg free
  4248  001816  A0D8               	btfss	status,0,c
  4249  001818  EF10  F00C         	goto	u6321
  4250  00181C  EF12  F00C         	goto	u6320
  4251  001820                     u6321:
  4252  001820  EF16  F00C         	goto	l5077
  4253  001824                     u6320:
  4254  001824                     
  4255                           ;encher.c: 142:         (*(volatile __near unsigned char*)0xF83) = 0b00000000;
  4256  001824  0E00               	movlw	0
  4257  001826  6E83               	movwf	131,c	;volatile
  4258                           
  4259                           ;encher.c: 143:     } else if (*vol > 0 && *vol <= 10) {
  4260  001828  EFC7  F00D         	goto	l181
  4261  00182C                     l5077:
  4262  00182C  0E00               	movlw	0
  4263  00182E  6E38               	movwf	___flge@ff1^0,c
  4264  001830  0E00               	movlw	0
  4265  001832  6E39               	movwf	(___flge@ff1+1)^0,c
  4266  001834  0E00               	movlw	0
  4267  001836  6E3A               	movwf	(___flge@ff1+2)^0,c
  4268  001838  0E00               	movlw	0
  4269  00183A  6E3B               	movwf	(___flge@ff1+3)^0,c
  4270  00183C  C07D  FFD9         	movff	encher_tanque@vol,fsr2l
  4271  001840  C07E  FFDA         	movff	encher_tanque@vol+1,fsr2h
  4272  001844  CFDE F03C          	movff	postinc2,___flge@ff2
  4273  001848  CFDE F03D          	movff	postinc2,___flge@ff2+1
  4274  00184C  CFDE F03E          	movff	postinc2,___flge@ff2+2
  4275  001850  CFDE F03F          	movff	postinc2,___flge@ff2+3
  4276  001854  ECA6  F021         	call	___flge	;wreg free
  4277  001858  B0D8               	btfsc	status,0,c
  4278  00185A  EF31  F00C         	goto	u6331
  4279  00185E  EF33  F00C         	goto	u6330
  4280  001862                     u6331:
  4281  001862  EF54  F00C         	goto	l5083
  4282  001866                     u6330:
  4283  001866  0E00               	movlw	0
  4284  001868  6E38               	movwf	___flge@ff1^0,c
  4285  00186A  0E00               	movlw	0
  4286  00186C  6E39               	movwf	(___flge@ff1+1)^0,c
  4287  00186E  0E20               	movlw	32
  4288  001870  6E3A               	movwf	(___flge@ff1+2)^0,c
  4289  001872  0E41               	movlw	65
  4290  001874  6E3B               	movwf	(___flge@ff1+3)^0,c
  4291  001876  C07D  FFD9         	movff	encher_tanque@vol,fsr2l
  4292  00187A  C07E  FFDA         	movff	encher_tanque@vol+1,fsr2h
  4293  00187E  CFDE F03C          	movff	postinc2,___flge@ff2
  4294  001882  CFDE F03D          	movff	postinc2,___flge@ff2+1
  4295  001886  CFDE F03E          	movff	postinc2,___flge@ff2+2
  4296  00188A  CFDE F03F          	movff	postinc2,___flge@ff2+3
  4297  00188E  ECA6  F021         	call	___flge	;wreg free
  4298  001892  A0D8               	btfss	status,0,c
  4299  001894  EF4E  F00C         	goto	u6341
  4300  001898  EF50  F00C         	goto	u6340
  4301  00189C                     u6341:
  4302  00189C  EF54  F00C         	goto	l5083
  4303  0018A0                     u6340:
  4304  0018A0                     
  4305                           ;encher.c: 144:         (*(volatile __near unsigned char*)0xF83) = 0b10000000;
  4306  0018A0  0E80               	movlw	128
  4307  0018A2  6E83               	movwf	131,c	;volatile
  4308                           
  4309                           ;encher.c: 145:     } else if (*vol > 10 && *vol <= 20) {
  4310  0018A4  EFC7  F00D         	goto	l181
  4311  0018A8                     l5083:
  4312  0018A8  0E00               	movlw	0
  4313  0018AA  6E38               	movwf	___flge@ff1^0,c
  4314  0018AC  0E00               	movlw	0
  4315  0018AE  6E39               	movwf	(___flge@ff1+1)^0,c
  4316  0018B0  0E20               	movlw	32
  4317  0018B2  6E3A               	movwf	(___flge@ff1+2)^0,c
  4318  0018B4  0E41               	movlw	65
  4319  0018B6  6E3B               	movwf	(___flge@ff1+3)^0,c
  4320  0018B8  C07D  FFD9         	movff	encher_tanque@vol,fsr2l
  4321  0018BC  C07E  FFDA         	movff	encher_tanque@vol+1,fsr2h
  4322  0018C0  CFDE F03C          	movff	postinc2,___flge@ff2
  4323  0018C4  CFDE F03D          	movff	postinc2,___flge@ff2+1
  4324  0018C8  CFDE F03E          	movff	postinc2,___flge@ff2+2
  4325  0018CC  CFDE F03F          	movff	postinc2,___flge@ff2+3
  4326  0018D0  ECA6  F021         	call	___flge	;wreg free
  4327  0018D4  B0D8               	btfsc	status,0,c
  4328  0018D6  EF6F  F00C         	goto	u6351
  4329  0018DA  EF71  F00C         	goto	u6350
  4330  0018DE                     u6351:
  4331  0018DE  EF92  F00C         	goto	l5089
  4332  0018E2                     u6350:
  4333  0018E2  0E00               	movlw	0
  4334  0018E4  6E38               	movwf	___flge@ff1^0,c
  4335  0018E6  0E00               	movlw	0
  4336  0018E8  6E39               	movwf	(___flge@ff1+1)^0,c
  4337  0018EA  0EA0               	movlw	160
  4338  0018EC  6E3A               	movwf	(___flge@ff1+2)^0,c
  4339  0018EE  0E41               	movlw	65
  4340  0018F0  6E3B               	movwf	(___flge@ff1+3)^0,c
  4341  0018F2  C07D  FFD9         	movff	encher_tanque@vol,fsr2l
  4342  0018F6  C07E  FFDA         	movff	encher_tanque@vol+1,fsr2h
  4343  0018FA  CFDE F03C          	movff	postinc2,___flge@ff2
  4344  0018FE  CFDE F03D          	movff	postinc2,___flge@ff2+1
  4345  001902  CFDE F03E          	movff	postinc2,___flge@ff2+2
  4346  001906  CFDE F03F          	movff	postinc2,___flge@ff2+3
  4347  00190A  ECA6  F021         	call	___flge	;wreg free
  4348  00190E  A0D8               	btfss	status,0,c
  4349  001910  EF8C  F00C         	goto	u6361
  4350  001914  EF8E  F00C         	goto	u6360
  4351  001918                     u6361:
  4352  001918  EF92  F00C         	goto	l5089
  4353  00191C                     u6360:
  4354  00191C                     
  4355                           ;encher.c: 146:         (*(volatile __near unsigned char*)0xF83) = 0b11000000;
  4356  00191C  0EC0               	movlw	192
  4357  00191E  6E83               	movwf	131,c	;volatile
  4358                           
  4359                           ;encher.c: 147:     } else if (*vol > 20 && *vol <= 30) {
  4360  001920  EFC7  F00D         	goto	l181
  4361  001924                     l5089:
  4362  001924  0E00               	movlw	0
  4363  001926  6E38               	movwf	___flge@ff1^0,c
  4364  001928  0E00               	movlw	0
  4365  00192A  6E39               	movwf	(___flge@ff1+1)^0,c
  4366  00192C  0EA0               	movlw	160
  4367  00192E  6E3A               	movwf	(___flge@ff1+2)^0,c
  4368  001930  0E41               	movlw	65
  4369  001932  6E3B               	movwf	(___flge@ff1+3)^0,c
  4370  001934  C07D  FFD9         	movff	encher_tanque@vol,fsr2l
  4371  001938  C07E  FFDA         	movff	encher_tanque@vol+1,fsr2h
  4372  00193C  CFDE F03C          	movff	postinc2,___flge@ff2
  4373  001940  CFDE F03D          	movff	postinc2,___flge@ff2+1
  4374  001944  CFDE F03E          	movff	postinc2,___flge@ff2+2
  4375  001948  CFDE F03F          	movff	postinc2,___flge@ff2+3
  4376  00194C  ECA6  F021         	call	___flge	;wreg free
  4377  001950  B0D8               	btfsc	status,0,c
  4378  001952  EFAD  F00C         	goto	u6371
  4379  001956  EFAF  F00C         	goto	u6370
  4380  00195A                     u6371:
  4381  00195A  EFD0  F00C         	goto	l5095
  4382  00195E                     u6370:
  4383  00195E  0E00               	movlw	0
  4384  001960  6E38               	movwf	___flge@ff1^0,c
  4385  001962  0E00               	movlw	0
  4386  001964  6E39               	movwf	(___flge@ff1+1)^0,c
  4387  001966  0EF0               	movlw	240
  4388  001968  6E3A               	movwf	(___flge@ff1+2)^0,c
  4389  00196A  0E41               	movlw	65
  4390  00196C  6E3B               	movwf	(___flge@ff1+3)^0,c
  4391  00196E  C07D  FFD9         	movff	encher_tanque@vol,fsr2l
  4392  001972  C07E  FFDA         	movff	encher_tanque@vol+1,fsr2h
  4393  001976  CFDE F03C          	movff	postinc2,___flge@ff2
  4394  00197A  CFDE F03D          	movff	postinc2,___flge@ff2+1
  4395  00197E  CFDE F03E          	movff	postinc2,___flge@ff2+2
  4396  001982  CFDE F03F          	movff	postinc2,___flge@ff2+3
  4397  001986  ECA6  F021         	call	___flge	;wreg free
  4398  00198A  A0D8               	btfss	status,0,c
  4399  00198C  EFCA  F00C         	goto	u6381
  4400  001990  EFCC  F00C         	goto	u6380
  4401  001994                     u6381:
  4402  001994  EFD0  F00C         	goto	l5095
  4403  001998                     u6380:
  4404  001998                     
  4405                           ;encher.c: 148:         (*(volatile __near unsigned char*)0xF83) = 0b11100000;
  4406  001998  0EE0               	movlw	224
  4407  00199A  6E83               	movwf	131,c	;volatile
  4408                           
  4409                           ;encher.c: 149:     } else if (*vol > 30 && *vol <= 40) {
  4410  00199C  EFC7  F00D         	goto	l181
  4411  0019A0                     l5095:
  4412  0019A0  0E00               	movlw	0
  4413  0019A2  6E38               	movwf	___flge@ff1^0,c
  4414  0019A4  0E00               	movlw	0
  4415  0019A6  6E39               	movwf	(___flge@ff1+1)^0,c
  4416  0019A8  0EF0               	movlw	240
  4417  0019AA  6E3A               	movwf	(___flge@ff1+2)^0,c
  4418  0019AC  0E41               	movlw	65
  4419  0019AE  6E3B               	movwf	(___flge@ff1+3)^0,c
  4420  0019B0  C07D  FFD9         	movff	encher_tanque@vol,fsr2l
  4421  0019B4  C07E  FFDA         	movff	encher_tanque@vol+1,fsr2h
  4422  0019B8  CFDE F03C          	movff	postinc2,___flge@ff2
  4423  0019BC  CFDE F03D          	movff	postinc2,___flge@ff2+1
  4424  0019C0  CFDE F03E          	movff	postinc2,___flge@ff2+2
  4425  0019C4  CFDE F03F          	movff	postinc2,___flge@ff2+3
  4426  0019C8  ECA6  F021         	call	___flge	;wreg free
  4427  0019CC  B0D8               	btfsc	status,0,c
  4428  0019CE  EFEB  F00C         	goto	u6391
  4429  0019D2  EFED  F00C         	goto	u6390
  4430  0019D6                     u6391:
  4431  0019D6  EF0E  F00D         	goto	l5101
  4432  0019DA                     u6390:
  4433  0019DA  0E00               	movlw	0
  4434  0019DC  6E38               	movwf	___flge@ff1^0,c
  4435  0019DE  0E00               	movlw	0
  4436  0019E0  6E39               	movwf	(___flge@ff1+1)^0,c
  4437  0019E2  0E20               	movlw	32
  4438  0019E4  6E3A               	movwf	(___flge@ff1+2)^0,c
  4439  0019E6  0E42               	movlw	66
  4440  0019E8  6E3B               	movwf	(___flge@ff1+3)^0,c
  4441  0019EA  C07D  FFD9         	movff	encher_tanque@vol,fsr2l
  4442  0019EE  C07E  FFDA         	movff	encher_tanque@vol+1,fsr2h
  4443  0019F2  CFDE F03C          	movff	postinc2,___flge@ff2
  4444  0019F6  CFDE F03D          	movff	postinc2,___flge@ff2+1
  4445  0019FA  CFDE F03E          	movff	postinc2,___flge@ff2+2
  4446  0019FE  CFDE F03F          	movff	postinc2,___flge@ff2+3
  4447  001A02  ECA6  F021         	call	___flge	;wreg free
  4448  001A06  A0D8               	btfss	status,0,c
  4449  001A08  EF08  F00D         	goto	u6401
  4450  001A0C  EF0A  F00D         	goto	u6400
  4451  001A10                     u6401:
  4452  001A10  EF0E  F00D         	goto	l5101
  4453  001A14                     u6400:
  4454  001A14                     
  4455                           ;encher.c: 150:         (*(volatile __near unsigned char*)0xF83) = 0b11110000;
  4456  001A14  0EF0               	movlw	240
  4457  001A16  6E83               	movwf	131,c	;volatile
  4458                           
  4459                           ;encher.c: 151:     } else if (*vol >= 40 && *vol <= 50) {
  4460  001A18  EFC7  F00D         	goto	l181
  4461  001A1C                     l5101:
  4462  001A1C  C07D  FFD9         	movff	encher_tanque@vol,fsr2l
  4463  001A20  C07E  FFDA         	movff	encher_tanque@vol+1,fsr2h
  4464  001A24  CFDE F038          	movff	postinc2,___flge@ff1
  4465  001A28  CFDE F039          	movff	postinc2,___flge@ff1+1
  4466  001A2C  CFDE F03A          	movff	postinc2,___flge@ff1+2
  4467  001A30  CFDE F03B          	movff	postinc2,___flge@ff1+3
  4468  001A34  0E00               	movlw	0
  4469  001A36  6E3C               	movwf	___flge@ff2^0,c
  4470  001A38  0E00               	movlw	0
  4471  001A3A  6E3D               	movwf	(___flge@ff2+1)^0,c
  4472  001A3C  0E20               	movlw	32
  4473  001A3E  6E3E               	movwf	(___flge@ff2+2)^0,c
  4474  001A40  0E42               	movlw	66
  4475  001A42  6E3F               	movwf	(___flge@ff2+3)^0,c
  4476  001A44  ECA6  F021         	call	___flge	;wreg free
  4477  001A48  A0D8               	btfss	status,0,c
  4478  001A4A  EF29  F00D         	goto	u6411
  4479  001A4E  EF2B  F00D         	goto	u6410
  4480  001A52                     u6411:
  4481  001A52  EF4C  F00D         	goto	l5107
  4482  001A56                     u6410:
  4483  001A56  0E00               	movlw	0
  4484  001A58  6E38               	movwf	___flge@ff1^0,c
  4485  001A5A  0E00               	movlw	0
  4486  001A5C  6E39               	movwf	(___flge@ff1+1)^0,c
  4487  001A5E  0E48               	movlw	72
  4488  001A60  6E3A               	movwf	(___flge@ff1+2)^0,c
  4489  001A62  0E42               	movlw	66
  4490  001A64  6E3B               	movwf	(___flge@ff1+3)^0,c
  4491  001A66  C07D  FFD9         	movff	encher_tanque@vol,fsr2l
  4492  001A6A  C07E  FFDA         	movff	encher_tanque@vol+1,fsr2h
  4493  001A6E  CFDE F03C          	movff	postinc2,___flge@ff2
  4494  001A72  CFDE F03D          	movff	postinc2,___flge@ff2+1
  4495  001A76  CFDE F03E          	movff	postinc2,___flge@ff2+2
  4496  001A7A  CFDE F03F          	movff	postinc2,___flge@ff2+3
  4497  001A7E  ECA6  F021         	call	___flge	;wreg free
  4498  001A82  A0D8               	btfss	status,0,c
  4499  001A84  EF46  F00D         	goto	u6421
  4500  001A88  EF48  F00D         	goto	u6420
  4501  001A8C                     u6421:
  4502  001A8C  EF4C  F00D         	goto	l5107
  4503  001A90                     u6420:
  4504  001A90                     
  4505                           ;encher.c: 152:         (*(volatile __near unsigned char*)0xF83) = 0b11111100;
  4506  001A90  0EFC               	movlw	252
  4507  001A92  6E83               	movwf	131,c	;volatile
  4508                           
  4509                           ;encher.c: 153:     } else if (*vol > 50 && *vol <= 60) {
  4510  001A94  EFC7  F00D         	goto	l181
  4511  001A98                     l5107:
  4512  001A98  0E00               	movlw	0
  4513  001A9A  6E38               	movwf	___flge@ff1^0,c
  4514  001A9C  0E00               	movlw	0
  4515  001A9E  6E39               	movwf	(___flge@ff1+1)^0,c
  4516  001AA0  0E48               	movlw	72
  4517  001AA2  6E3A               	movwf	(___flge@ff1+2)^0,c
  4518  001AA4  0E42               	movlw	66
  4519  001AA6  6E3B               	movwf	(___flge@ff1+3)^0,c
  4520  001AA8  C07D  FFD9         	movff	encher_tanque@vol,fsr2l
  4521  001AAC  C07E  FFDA         	movff	encher_tanque@vol+1,fsr2h
  4522  001AB0  CFDE F03C          	movff	postinc2,___flge@ff2
  4523  001AB4  CFDE F03D          	movff	postinc2,___flge@ff2+1
  4524  001AB8  CFDE F03E          	movff	postinc2,___flge@ff2+2
  4525  001ABC  CFDE F03F          	movff	postinc2,___flge@ff2+3
  4526  001AC0  ECA6  F021         	call	___flge	;wreg free
  4527  001AC4  B0D8               	btfsc	status,0,c
  4528  001AC6  EF67  F00D         	goto	u6431
  4529  001ACA  EF69  F00D         	goto	u6430
  4530  001ACE                     u6431:
  4531  001ACE  EF8A  F00D         	goto	l5113
  4532  001AD2                     u6430:
  4533  001AD2  0E00               	movlw	0
  4534  001AD4  6E38               	movwf	___flge@ff1^0,c
  4535  001AD6  0E00               	movlw	0
  4536  001AD8  6E39               	movwf	(___flge@ff1+1)^0,c
  4537  001ADA  0E70               	movlw	112
  4538  001ADC  6E3A               	movwf	(___flge@ff1+2)^0,c
  4539  001ADE  0E42               	movlw	66
  4540  001AE0  6E3B               	movwf	(___flge@ff1+3)^0,c
  4541  001AE2  C07D  FFD9         	movff	encher_tanque@vol,fsr2l
  4542  001AE6  C07E  FFDA         	movff	encher_tanque@vol+1,fsr2h
  4543  001AEA  CFDE F03C          	movff	postinc2,___flge@ff2
  4544  001AEE  CFDE F03D          	movff	postinc2,___flge@ff2+1
  4545  001AF2  CFDE F03E          	movff	postinc2,___flge@ff2+2
  4546  001AF6  CFDE F03F          	movff	postinc2,___flge@ff2+3
  4547  001AFA  ECA6  F021         	call	___flge	;wreg free
  4548  001AFE  A0D8               	btfss	status,0,c
  4549  001B00  EF84  F00D         	goto	u6441
  4550  001B04  EF86  F00D         	goto	u6440
  4551  001B08                     u6441:
  4552  001B08  EF8A  F00D         	goto	l5113
  4553  001B0C                     u6440:
  4554  001B0C                     
  4555                           ;encher.c: 154:         (*(volatile __near unsigned char*)0xF83) = 0b11111110;
  4556  001B0C  0EFE               	movlw	254
  4557  001B0E  6E83               	movwf	131,c	;volatile
  4558                           
  4559                           ;encher.c: 155:     } else if (*vol > 60 && *vol <= 70) {
  4560  001B10  EFC7  F00D         	goto	l181
  4561  001B14                     l5113:
  4562  001B14  0E00               	movlw	0
  4563  001B16  6E38               	movwf	___flge@ff1^0,c
  4564  001B18  0E00               	movlw	0
  4565  001B1A  6E39               	movwf	(___flge@ff1+1)^0,c
  4566  001B1C  0E70               	movlw	112
  4567  001B1E  6E3A               	movwf	(___flge@ff1+2)^0,c
  4568  001B20  0E42               	movlw	66
  4569  001B22  6E3B               	movwf	(___flge@ff1+3)^0,c
  4570  001B24  C07D  FFD9         	movff	encher_tanque@vol,fsr2l
  4571  001B28  C07E  FFDA         	movff	encher_tanque@vol+1,fsr2h
  4572  001B2C  CFDE F03C          	movff	postinc2,___flge@ff2
  4573  001B30  CFDE F03D          	movff	postinc2,___flge@ff2+1
  4574  001B34  CFDE F03E          	movff	postinc2,___flge@ff2+2
  4575  001B38  CFDE F03F          	movff	postinc2,___flge@ff2+3
  4576  001B3C  ECA6  F021         	call	___flge	;wreg free
  4577  001B40  B0D8               	btfsc	status,0,c
  4578  001B42  EFA5  F00D         	goto	u6451
  4579  001B46  EFA7  F00D         	goto	u6450
  4580  001B4A                     u6451:
  4581  001B4A  EFC7  F00D         	goto	l175
  4582  001B4E                     u6450:
  4583  001B4E  0E00               	movlw	0
  4584  001B50  6E38               	movwf	___flge@ff1^0,c
  4585  001B52  0E00               	movlw	0
  4586  001B54  6E39               	movwf	(___flge@ff1+1)^0,c
  4587  001B56  0E8C               	movlw	140
  4588  001B58  6E3A               	movwf	(___flge@ff1+2)^0,c
  4589  001B5A  0E42               	movlw	66
  4590  001B5C  6E3B               	movwf	(___flge@ff1+3)^0,c
  4591  001B5E  C07D  FFD9         	movff	encher_tanque@vol,fsr2l
  4592  001B62  C07E  FFDA         	movff	encher_tanque@vol+1,fsr2h
  4593  001B66  CFDE F03C          	movff	postinc2,___flge@ff2
  4594  001B6A  CFDE F03D          	movff	postinc2,___flge@ff2+1
  4595  001B6E  CFDE F03E          	movff	postinc2,___flge@ff2+2
  4596  001B72  CFDE F03F          	movff	postinc2,___flge@ff2+3
  4597  001B76  ECA6  F021         	call	___flge	;wreg free
  4598  001B7A  A0D8               	btfss	status,0,c
  4599  001B7C  EFC2  F00D         	goto	u6461
  4600  001B80  EFC4  F00D         	goto	u6460
  4601  001B84                     u6461:
  4602  001B84  EFC7  F00D         	goto	l175
  4603  001B88                     u6460:
  4604  001B88                     
  4605                           ;encher.c: 156:         (*(volatile __near unsigned char*)0xF83) = 0b11111111;
  4606  001B88  6883               	setf	131,c	;volatile
  4607  001B8A  EFC7  F00D         	goto	l181
  4608  001B8E                     l175:
  4609  001B8E                     l181:
  4610                           
  4611                           ;encher.c: 159:     while (((((*(volatile __near unsigned char*)0xF81)) & (1<<3)))) {
  4612  001B8E  B681               	btfsc	129,3,c	;volatile
  4613  001B90  EFCC  F00D         	goto	u6471
  4614  001B94  EFCE  F00D         	goto	u6470
  4615  001B98                     u6471:
  4616  001B98  EFC7  F00D         	goto	l181
  4617  001B9C                     u6470:
  4618  001B9C                     
  4619                           ;encher.c: 163:     (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<1));
  4620  001B9C  9294               	bcf	148,1,c	;volatile
  4621  001B9E                     l149:
  4622  001B9E  0012               	return		;funcret
  4623  001BA0                     __end_of_encher_tanque:
  4624                           	callstack 0
  4625                           
  4626 ;; *************** function _tc_tecla *****************
  4627 ;; Defined at:
  4628 ;;		line 14 in file "teclado.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;  timeout         2    6[COMRAM] unsigned int 
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;  to              2    8[COMRAM] unsigned int 
  4633 ;;  i               1   12[COMRAM] unsigned char 
  4634 ;;  ret             1   11[COMRAM] unsigned char 
  4635 ;;  tmp             1   10[COMRAM] unsigned char 
  4636 ;; Return value:  Size  Location     Type
  4637 ;;                  1    wreg      unsigned char 
  4638 ;; Registers used:
  4639 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4640 ;; Tracked objects:
  4641 ;;		On entry : 0/0
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4645 ;;      Params:         2       0       0       0       0       0       0
  4646 ;;      Locals:         5       0       0       0       0       0       0
  4647 ;;      Temps:          0       0       0       0       0       0       0
  4648 ;;      Totals:         7       0       0       0       0       0       0
  4649 ;;Total ram usage:        7 bytes
  4650 ;; Hardware stack levels used:    1
  4651 ;; Hardware stack levels required when called:    1
  4652 ;; This function calls:
  4653 ;;		_atraso_ms
  4654 ;; This function is called by:
  4655 ;;		_main
  4656 ;;		_encher_tanque
  4657 ;;		_esvaziar_tanque
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           	psect	text5
  4662  003BCE                     __ptext5:
  4663                           	callstack 0
  4664  003BCE                     _tc_tecla:
  4665                           	callstack 29
  4666  003BCE                     
  4667                           ;teclado.c: 15:     unsigned int to = 0;
  4668  003BCE  0E00               	movlw	0
  4669  003BD0  6E0A               	movwf	(tc_tecla@to+1)^0,c
  4670  003BD2  0E00               	movlw	0
  4671  003BD4  6E09               	movwf	tc_tecla@to^0,c
  4672                           
  4673                           ;teclado.c: 16:     unsigned char i;;teclado.c: 17:     unsigned char ret = 0;
  4674  003BD6  0E00               	movlw	0
  4675  003BD8  6E0C               	movwf	tc_tecla@ret^0,c
  4676  003BDA                     
  4677                           ;teclado.c: 18:     unsigned char tmp = (*(volatile __near unsigned char*)0xF81);
  4678  003BDA  CF81 F00B          	movff	3969,tc_tecla@tmp	;volatile
  4679                           
  4680                           ;teclado.c: 21:     while (((to < timeout) || (!timeout))&&(!ret)) {
  4681  003BDE  EF98  F01E         	goto	l4729
  4682  003BE2                     l4677:
  4683                           
  4684                           ;teclado.c: 22:         for (i = 0; i < 3; i++) {
  4685  003BE2  0E00               	movlw	0
  4686  003BE4  6E0D               	movwf	tc_tecla@i^0,c
  4687  003BE6                     l4683:
  4688                           
  4689                           ;teclado.c: 23:             (*(volatile __near unsigned char*)0xF81) |= ~linha[i];
  4690  003BE6  0E01               	movlw	low _linha
  4691  003BE8  240D               	addwf	tc_tecla@i^0,w,c
  4692  003BEA  6EF6               	movwf	tblptrl,c
  4693  003BEC  6AF7               	clrf	tblptrh,c
  4694  003BEE  0E06               	movlw	high _linha
  4695  003BF0  22F7               	addwfc	tblptrh,f,c
  4696  003BF2                     	if	0	;There are less than 3 active tblptr bytes
  4697  003BF2                     	endif
  4698  003BF2  0008               	tblrd		*
  4699  003BF4  50F5               	movf	tablat,w,c
  4700  003BF6  0AFF               	xorlw	255
  4701  003BF8  1281               	iorwf	129,f,c	;volatile
  4702  003BFA                     
  4703                           ;teclado.c: 24:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<3))) 
      +                          {
  4704  003BFA  B683               	btfsc	131,3,c	;volatile
  4705  003BFC  EF02  F01E         	goto	u5741
  4706  003C00  EF04  F01E         	goto	u5740
  4707  003C04                     u5741:
  4708  003C04  EF1C  F01E         	goto	l58
  4709  003C08                     u5740:
  4710  003C08                     
  4711                           ;teclado.c: 25:                 atraso_ms(atraso);
  4712  003C08  0E00               	movlw	0
  4713  003C0A  6E02               	movwf	(atraso_ms@t+1)^0,c
  4714  003C0C  0E0F               	movlw	15
  4715  003C0E  6E01               	movwf	atraso_ms@t^0,c
  4716  003C10  EC95  F025         	call	_atraso_ms	;wreg free
  4717  003C14                     
  4718                           ;teclado.c: 26:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<3
      +                          ))) {
  4719  003C14  B683               	btfsc	131,3,c	;volatile
  4720  003C16  EF0F  F01E         	goto	u5751
  4721  003C1A  EF11  F01E         	goto	u5750
  4722  003C1E                     u5751:
  4723  003C1E  EF1C  F01E         	goto	l58
  4724  003C22                     u5750:
  4725  003C22                     l60:
  4726  003C22  A683               	btfss	131,3,c	;volatile
  4727  003C24  EF16  F01E         	goto	u5761
  4728  003C28  EF18  F01E         	goto	u5760
  4729  003C2C                     u5761:
  4730  003C2C  EF11  F01E         	goto	l60
  4731  003C30                     u5760:
  4732  003C30                     
  4733                           ;teclado.c: 28:                     ret = 1 + i;
  4734  003C30  280D               	incf	tc_tecla@i^0,w,c
  4735  003C32  6E0C               	movwf	tc_tecla@ret^0,c
  4736                           
  4737                           ;teclado.c: 29:                     break;
  4738  003C34  EF8E  F01E         	goto	l4725
  4739  003C38                     l58:
  4740                           
  4741                           ;teclado.c: 32:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<2))) 
      +                          {
  4742  003C38  B483               	btfsc	131,2,c	;volatile
  4743  003C3A  EF21  F01E         	goto	u5771
  4744  003C3E  EF23  F01E         	goto	u5770
  4745  003C42                     u5771:
  4746  003C42  EF3C  F01E         	goto	l63
  4747  003C46                     u5770:
  4748  003C46                     
  4749                           ;teclado.c: 33:                 atraso_ms(atraso);
  4750  003C46  0E00               	movlw	0
  4751  003C48  6E02               	movwf	(atraso_ms@t+1)^0,c
  4752  003C4A  0E0F               	movlw	15
  4753  003C4C  6E01               	movwf	atraso_ms@t^0,c
  4754  003C4E  EC95  F025         	call	_atraso_ms	;wreg free
  4755  003C52                     
  4756                           ;teclado.c: 34:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<2
      +                          ))) {
  4757  003C52  B483               	btfsc	131,2,c	;volatile
  4758  003C54  EF2E  F01E         	goto	u5781
  4759  003C58  EF30  F01E         	goto	u5780
  4760  003C5C                     u5781:
  4761  003C5C  EF3C  F01E         	goto	l63
  4762  003C60                     u5780:
  4763  003C60                     l65:
  4764  003C60  A483               	btfss	131,2,c	;volatile
  4765  003C62  EF35  F01E         	goto	u5791
  4766  003C66  EF37  F01E         	goto	u5790
  4767  003C6A                     u5791:
  4768  003C6A  EF30  F01E         	goto	l65
  4769  003C6E                     u5790:
  4770  003C6E                     
  4771                           ;teclado.c: 36:                     ret = 4 + i;
  4772  003C6E  500D               	movf	tc_tecla@i^0,w,c
  4773  003C70  0F04               	addlw	4
  4774  003C72  6E0C               	movwf	tc_tecla@ret^0,c
  4775                           
  4776                           ;teclado.c: 37:                     break;
  4777  003C74  EF8E  F01E         	goto	l4725
  4778  003C78                     l63:
  4779                           
  4780                           ;teclado.c: 40:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<1))) 
      +                          {
  4781  003C78  B283               	btfsc	131,1,c	;volatile
  4782  003C7A  EF41  F01E         	goto	u5801
  4783  003C7E  EF43  F01E         	goto	u5800
  4784  003C82                     u5801:
  4785  003C82  EF5C  F01E         	goto	l68
  4786  003C86                     u5800:
  4787  003C86                     
  4788                           ;teclado.c: 41:                 atraso_ms(atraso);
  4789  003C86  0E00               	movlw	0
  4790  003C88  6E02               	movwf	(atraso_ms@t+1)^0,c
  4791  003C8A  0E0F               	movlw	15
  4792  003C8C  6E01               	movwf	atraso_ms@t^0,c
  4793  003C8E  EC95  F025         	call	_atraso_ms	;wreg free
  4794  003C92                     
  4795                           ;teclado.c: 42:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<1
      +                          ))) {
  4796  003C92  B283               	btfsc	131,1,c	;volatile
  4797  003C94  EF4E  F01E         	goto	u5811
  4798  003C98  EF50  F01E         	goto	u5810
  4799  003C9C                     u5811:
  4800  003C9C  EF5C  F01E         	goto	l68
  4801  003CA0                     u5810:
  4802  003CA0                     l70:
  4803  003CA0  A283               	btfss	131,1,c	;volatile
  4804  003CA2  EF55  F01E         	goto	u5821
  4805  003CA6  EF57  F01E         	goto	u5820
  4806  003CAA                     u5821:
  4807  003CAA  EF50  F01E         	goto	l70
  4808  003CAE                     u5820:
  4809  003CAE                     
  4810                           ;teclado.c: 44:                     ret = 7 + i;
  4811  003CAE  500D               	movf	tc_tecla@i^0,w,c
  4812  003CB0  0F07               	addlw	7
  4813  003CB2  6E0C               	movwf	tc_tecla@ret^0,c
  4814                           
  4815                           ;teclado.c: 45:                     break;
  4816  003CB4  EF8E  F01E         	goto	l4725
  4817  003CB8                     l68:
  4818                           
  4819                           ;teclado.c: 48:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<0))) 
      +                          {
  4820  003CB8  B083               	btfsc	131,0,c	;volatile
  4821  003CBA  EF61  F01E         	goto	u5831
  4822  003CBE  EF63  F01E         	goto	u5830
  4823  003CC2                     u5831:
  4824  003CC2  EF7C  F01E         	goto	l4719
  4825  003CC6                     u5830:
  4826  003CC6                     
  4827                           ;teclado.c: 49:                 atraso_ms(atraso);
  4828  003CC6  0E00               	movlw	0
  4829  003CC8  6E02               	movwf	(atraso_ms@t+1)^0,c
  4830  003CCA  0E0F               	movlw	15
  4831  003CCC  6E01               	movwf	atraso_ms@t^0,c
  4832  003CCE  EC95  F025         	call	_atraso_ms	;wreg free
  4833  003CD2                     
  4834                           ;teclado.c: 50:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<0
      +                          ))) {
  4835  003CD2  B083               	btfsc	131,0,c	;volatile
  4836  003CD4  EF6E  F01E         	goto	u5841
  4837  003CD8  EF70  F01E         	goto	u5840
  4838  003CDC                     u5841:
  4839  003CDC  EF7C  F01E         	goto	l4719
  4840  003CE0                     u5840:
  4841  003CE0                     l75:
  4842  003CE0  A083               	btfss	131,0,c	;volatile
  4843  003CE2  EF75  F01E         	goto	u5851
  4844  003CE6  EF77  F01E         	goto	u5850
  4845  003CEA                     u5851:
  4846  003CEA  EF70  F01E         	goto	l75
  4847  003CEE                     u5850:
  4848  003CEE                     
  4849                           ;teclado.c: 52:                     ret = 10 + i;
  4850  003CEE  500D               	movf	tc_tecla@i^0,w,c
  4851  003CF0  0F0A               	addlw	10
  4852  003CF2  6E0C               	movwf	tc_tecla@ret^0,c
  4853                           
  4854                           ;teclado.c: 53:                     break;
  4855  003CF4  EF8E  F01E         	goto	l4725
  4856  003CF8                     l4719:
  4857                           
  4858                           ;teclado.c: 56:             (*(volatile __near unsigned char*)0xF81) &= linha[i];
  4859  003CF8  0E01               	movlw	low _linha
  4860  003CFA  240D               	addwf	tc_tecla@i^0,w,c
  4861  003CFC  6EF6               	movwf	tblptrl,c
  4862  003CFE  6AF7               	clrf	tblptrh,c
  4863  003D00  0E06               	movlw	high _linha
  4864  003D02  22F7               	addwfc	tblptrh,f,c
  4865  003D04                     	if	0	;There are less than 3 active tblptr bytes
  4866  003D04                     	endif
  4867  003D04  0008               	tblrd		*
  4868  003D06  50F5               	movf	tablat,w,c
  4869  003D08  1681               	andwf	129,f,c	;volatile
  4870  003D0A                     
  4871                           ;teclado.c: 57:         };
  4872  003D0A  2A0D               	incf	tc_tecla@i^0,f,c
  4873  003D0C  0E02               	movlw	2
  4874  003D0E  640D               	cpfsgt	tc_tecla@i^0,c
  4875  003D10  EF8C  F01E         	goto	u5861
  4876  003D14  EF8E  F01E         	goto	u5860
  4877  003D18                     u5861:
  4878  003D18  EFF3  F01D         	goto	l4683
  4879  003D1C                     u5860:
  4880  003D1C                     l4725:
  4881                           
  4882                           ;teclado.c: 58:         atraso_ms(atraso_min);
  4883  003D1C  0E00               	movlw	0
  4884  003D1E  6E02               	movwf	(atraso_ms@t+1)^0,c
  4885  003D20  0E05               	movlw	5
  4886  003D22  6E01               	movwf	atraso_ms@t^0,c
  4887  003D24  EC95  F025         	call	_atraso_ms	;wreg free
  4888  003D28                     
  4889                           ;teclado.c: 59:         to += 5;
  4890  003D28  0E05               	movlw	5
  4891  003D2A  2609               	addwf	tc_tecla@to^0,f,c
  4892  003D2C  0E00               	movlw	0
  4893  003D2E  220A               	addwfc	(tc_tecla@to+1)^0,f,c
  4894  003D30                     l4729:
  4895                           
  4896                           ;teclado.c: 21:     while (((to < timeout) || (!timeout))&&(!ret)) {
  4897  003D30  5007               	movf	tc_tecla@timeout^0,w,c
  4898  003D32  5C09               	subwf	tc_tecla@to^0,w,c
  4899  003D34  5008               	movf	(tc_tecla@timeout+1)^0,w,c
  4900  003D36  580A               	subwfb	(tc_tecla@to+1)^0,w,c
  4901  003D38  A0D8               	btfss	status,0,c
  4902  003D3A  EFA1  F01E         	goto	u5871
  4903  003D3E  EFA3  F01E         	goto	u5870
  4904  003D42                     u5871:
  4905  003D42  EFAC  F01E         	goto	l4733
  4906  003D46                     u5870:
  4907  003D46  5007               	movf	tc_tecla@timeout^0,w,c
  4908  003D48  1008               	iorwf	(tc_tecla@timeout+1)^0,w,c
  4909  003D4A  A4D8               	btfss	status,2,c
  4910  003D4C  EFAA  F01E         	goto	u5881
  4911  003D50  EFAC  F01E         	goto	u5880
  4912  003D54                     u5881:
  4913  003D54  EFB4  F01E         	goto	l4735
  4914  003D58                     u5880:
  4915  003D58                     l4733:
  4916  003D58  500C               	movf	tc_tecla@ret^0,w,c
  4917  003D5A  B4D8               	btfsc	status,2,c
  4918  003D5C  EFB2  F01E         	goto	u5891
  4919  003D60  EFB4  F01E         	goto	u5890
  4920  003D64                     u5891:
  4921  003D64  EFF1  F01D         	goto	l4677
  4922  003D68                     u5890:
  4923  003D68                     l4735:
  4924                           
  4925                           ;teclado.c: 62:     if (!ret)ret = 255;
  4926  003D68  500C               	movf	tc_tecla@ret^0,w,c
  4927  003D6A  A4D8               	btfss	status,2,c
  4928  003D6C  EFBA  F01E         	goto	u5901
  4929  003D70  EFBC  F01E         	goto	u5900
  4930  003D74                     u5901:
  4931  003D74  EFBD  F01E         	goto	l4739
  4932  003D78                     u5900:
  4933  003D78  680C               	setf	tc_tecla@ret^0,c
  4934  003D7A                     l4739:
  4935                           
  4936                           ;teclado.c: 63:     if (ret == 11)ret = 0;
  4937  003D7A  0E0B               	movlw	11
  4938  003D7C  180C               	xorwf	tc_tecla@ret^0,w,c
  4939  003D7E  A4D8               	btfss	status,2,c
  4940  003D80  EFC4  F01E         	goto	u5911
  4941  003D84  EFC6  F01E         	goto	u5910
  4942  003D88                     u5911:
  4943  003D88  EFC8  F01E         	goto	l4743
  4944  003D8C                     u5910:
  4945  003D8C  0E00               	movlw	0
  4946  003D8E  6E0C               	movwf	tc_tecla@ret^0,c
  4947  003D90                     l4743:
  4948                           
  4949                           ;teclado.c: 64:     (*(volatile __near unsigned char*)0xF81) = tmp;
  4950  003D90  C00B  FF81         	movff	tc_tecla@tmp,3969	;volatile
  4951                           
  4952                           ;teclado.c: 65:     return ret;
  4953  003D94  500C               	movf	tc_tecla@ret^0,w,c
  4954  003D96  0012               	return		;funcret
  4955  003D98                     __end_of_tc_tecla:
  4956                           	callstack 0
  4957                           
  4958 ;; *************** function _sprintf *****************
  4959 ;; Defined at:
  4960 ;;		line 9 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  4961 ;; Parameters:    Size  Location     Type
  4962 ;;  s               2   74[BANK0 ] PTR unsigned char 
  4963 ;;		 -> ver_quantidade@y(8), esvaziar_tanque@y(8), encher_tanque@y(8), 
  4964 ;;  fmt             2   76[BANK0 ] PTR const unsigned char 
  4965 ;;		 -> STR_28(5), STR_22(5), STR_12(5), 
  4966 ;; Auto vars:     Size  Location     Type
  4967 ;;  f               6   86[BANK0 ] struct _IO_FILE
  4968 ;;  ap              2   84[BANK0 ] PTR void [1]
  4969 ;;		 -> ?_sprintf(2), 
  4970 ;;  ret             2    0        int 
  4971 ;; Return value:  Size  Location     Type
  4972 ;;                  2   74[BANK0 ] int 
  4973 ;; Registers used:
  4974 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4975 ;; Tracked objects:
  4976 ;;		On entry : 0/0
  4977 ;;		On exit  : 0/0
  4978 ;;		Unchanged: 0/0
  4979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4980 ;;      Params:         0       8       0       0       0       0       0
  4981 ;;      Locals:         0      10       0       0       0       0       0
  4982 ;;      Temps:          0       0       0       0       0       0       0
  4983 ;;      Totals:         0      18       0       0       0       0       0
  4984 ;;Total ram usage:       18 bytes
  4985 ;; Hardware stack levels used:    1
  4986 ;; Hardware stack levels required when called:    7
  4987 ;; This function calls:
  4988 ;;		_vfprintf
  4989 ;; This function is called by:
  4990 ;;		_encher_tanque
  4991 ;;		_esvaziar_tanque
  4992 ;;		_ver_quantidade
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           	psect	text6
  4997  004DCE                     __ptext6:
  4998                           	callstack 0
  4999  004DCE                     _sprintf:
  5000                           	callstack 22
  5001  004DCE  0ECE               	movlw	low (?_sprintf+4)
  5002  004DD0  0100               	movlb	0	; () banked
  5003  004DD2  6FD4               	movwf	sprintf@ap& (0+255),b
  5004  004DD4  0E00               	movlw	high (?_sprintf+4)
  5005  004DD6  6FD5               	movwf	(sprintf@ap+1)& (0+255),b
  5006  004DD8  C0CA  F0D6         	movff	sprintf@s,sprintf@f
  5007  004DDC  C0CB  F0D7         	movff	sprintf@s+1,sprintf@f+1
  5008  004DE0                     
  5009                           ; BSR set to: 0
  5010  004DE0  0E00               	movlw	0
  5011  004DE2  6FD9               	movwf	(sprintf@f+3)& (0+255),b
  5012  004DE4  0E00               	movlw	0
  5013  004DE6  6FD8               	movwf	(sprintf@f+2)& (0+255),b
  5014  004DE8                     
  5015                           ; BSR set to: 0
  5016  004DE8  0E00               	movlw	0
  5017  004DEA  6FDB               	movwf	(sprintf@f+5)& (0+255),b
  5018  004DEC  0E00               	movlw	0
  5019  004DEE  6FDA               	movwf	(sprintf@f+4)& (0+255),b
  5020  004DF0                     
  5021                           ; BSR set to: 0
  5022  004DF0  0ED6               	movlw	low sprintf@f
  5023  004DF2  6FC4               	movwf	vfprintf@fp& (0+255),b
  5024  004DF4  0E00               	movlw	high sprintf@f
  5025  004DF6  6FC5               	movwf	(vfprintf@fp+1)& (0+255),b
  5026  004DF8  C0CC  F0C6         	movff	sprintf@fmt,vfprintf@fmt
  5027  004DFC  C0CD  F0C7         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5028  004E00  0ED4               	movlw	low sprintf@ap
  5029  004E02  6FC8               	movwf	vfprintf@ap& (0+255),b
  5030  004E04  0E00               	movlw	high sprintf@ap
  5031  004E06  6FC9               	movwf	(vfprintf@ap+1)& (0+255),b
  5032  004E08  EC2A  F026         	call	_vfprintf	;wreg free
  5033  004E0C  0100               	movlb	0	; () banked
  5034  004E0E  51D8               	movf	(sprintf@f+2)& (0+255),w,b
  5035  004E10  25CA               	addwf	sprintf@s& (0+255),w,b
  5036  004E12  6ED9               	movwf	fsr2l,c
  5037  004E14  51D9               	movf	(sprintf@f+3)& (0+255),w,b
  5038  004E16  21CB               	addwfc	(sprintf@s+1)& (0+255),w,b
  5039  004E18  6EDA               	movwf	fsr2h,c
  5040  004E1A  0E00               	movlw	0
  5041  004E1C  6EDF               	movwf	indf2,c
  5042  004E1E                     
  5043                           ; BSR set to: 0
  5044  004E1E  0012               	return		;funcret
  5045  004E20                     __end_of_sprintf:
  5046                           	callstack 0
  5047                           
  5048 ;; *************** function _vfprintf *****************
  5049 ;; Defined at:
  5050 ;;		line 1368 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5051 ;; Parameters:    Size  Location     Type
  5052 ;;  fp              2   68[BANK0 ] PTR struct _IO_FILE
  5053 ;;		 -> sprintf@f(6), 
  5054 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  5055 ;;		 -> STR_28(5), STR_22(5), STR_12(5), 
  5056 ;;  ap              2   72[BANK0 ] PTR PTR void 
  5057 ;;		 -> sprintf@ap(2), 
  5058 ;; Auto vars:     Size  Location     Type
  5059 ;;  cfmt            2  122[COMRAM] PTR unsigned char 
  5060 ;;		 -> STR_28(5), STR_22(5), STR_12(5), 
  5061 ;; Return value:  Size  Location     Type
  5062 ;;                  2   68[BANK0 ] int 
  5063 ;; Registers used:
  5064 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5065 ;; Tracked objects:
  5066 ;;		On entry : 0/0
  5067 ;;		On exit  : 0/0
  5068 ;;		Unchanged: 0/0
  5069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5070 ;;      Params:         0       6       0       0       0       0       0
  5071 ;;      Locals:         2       0       0       0       0       0       0
  5072 ;;      Temps:          0       0       0       0       0       0       0
  5073 ;;      Totals:         2       6       0       0       0       0       0
  5074 ;;Total ram usage:        8 bytes
  5075 ;; Hardware stack levels used:    1
  5076 ;; Hardware stack levels required when called:    6
  5077 ;; This function calls:
  5078 ;;		_vfpfcnvrt
  5079 ;; This function is called by:
  5080 ;;		_sprintf
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084                           	psect	text7
  5085  004C54                     __ptext7:
  5086                           	callstack 0
  5087  004C54                     _vfprintf:
  5088                           	callstack 22
  5089  004C54                     
  5090                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprintf(FIL
      +                          E *fp, const char *fmt, va_list ap);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1369: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 13
      +                          71:     char *cfmt;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 137
      +                          3:     cfmt = (char *)fmt;
  5091  004C54  C0C6  F07B         	movff	vfprintf@fmt,vfprintf@cfmt
  5092  004C58  C0C7  F07C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  5093  004C5C                     
  5094                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 0;
  5095  004C5C  0E00               	movlw	0
  5096  004C5E  0100               	movlb	0	; () banked
  5097  004C60  6FEA               	movwf	(_nout+1)& (0+255),b
  5098  004C62  0E00               	movlw	0
  5099  004C64  6FE9               	movwf	_nout& (0+255),b
  5100                           
  5101                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt
      +                          ) {
  5102  004C66  EF48  F026         	goto	l4649
  5103  004C6A                     l4647:
  5104                           
  5105                           ; BSR set to: 0
  5106                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nout += 
      +                          vfpfcnvrt(fp, &cfmt, ap);
  5107  004C6A  C0C4  F071         	movff	vfprintf@fp,vfpfcnvrt@fp
  5108  004C6E  C0C5  F072         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5109  004C72  0E7B               	movlw	low vfprintf@cfmt
  5110  004C74  6E73               	movwf	vfpfcnvrt@fmt^0,c
  5111  004C76  0E00               	movlw	high vfprintf@cfmt
  5112  004C78  6E74               	movwf	(vfpfcnvrt@fmt+1)^0,c
  5113  004C7A  C0C8  F075         	movff	vfprintf@ap,vfpfcnvrt@ap
  5114  004C7E  C0C9  F076         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5115  004C82  EC97  F014         	call	_vfpfcnvrt	;wreg free
  5116  004C86  5071               	movf	?_vfpfcnvrt^0,w,c
  5117  004C88  0100               	movlb	0	; () banked
  5118  004C8A  27E9               	addwf	_nout& (0+255),f,b
  5119  004C8C  5072               	movf	(?_vfpfcnvrt+1)^0,w,c
  5120  004C8E  23EA               	addwfc	(_nout+1)& (0+255),f,b
  5121  004C90                     l4649:
  5122                           
  5123                           ; BSR set to: 0
  5124                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt
      +                          ) {
  5125  004C90  C07B  FFF6         	movff	vfprintf@cfmt,tblptrl
  5126  004C94  C07C  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  5127  004C98                     	if	0	;tblptru may be non-zero
  5128  004C98                     	endif
  5129  004C98                     	if	0	;tblptru may be non-zero
  5130  004C98                     	endif
  5131  004C98  0008               	tblrd		*
  5132  004C9A  50F5               	movf	tablat,w,c
  5133  004C9C  0900               	iorlw	0
  5134  004C9E  A4D8               	btfss	status,2,c
  5135  004CA0  EF54  F026         	goto	u5701
  5136  004CA4  EF56  F026         	goto	u5700
  5137  004CA8                     u5701:
  5138  004CA8  EF35  F026         	goto	l4647
  5139  004CAC                     u5700:
  5140  004CAC                     
  5141                           ; BSR set to: 0
  5142                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return nout;
  5143  004CAC  C0E9  F0C4         	movff	_nout,?_vfprintf
  5144  004CB0  C0EA  F0C5         	movff	_nout+1,?_vfprintf+1
  5145  004CB4                     
  5146                           ; BSR set to: 0
  5147  004CB4  0012               	return		;funcret
  5148  004CB6                     __end_of_vfprintf:
  5149                           	callstack 0
  5150                           
  5151 ;; *************** function _vfpfcnvrt *****************
  5152 ;; Defined at:
  5153 ;;		line 670 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5154 ;; Parameters:    Size  Location     Type
  5155 ;;  fp              2  112[COMRAM] PTR struct _IO_FILE
  5156 ;;		 -> sprintf@f(6), 
  5157 ;;  fmt             2  114[COMRAM] PTR PTR unsigned char 
  5158 ;;		 -> vfprintf@cfmt(2), 
  5159 ;;  ap              2  116[COMRAM] PTR PTR void 
  5160 ;;		 -> sprintf@ap(2), 
  5161 ;; Auto vars:     Size  Location     Type
  5162 ;;  llu             8    0        unsigned long long 
  5163 ;;  ll              8    0        long long 
  5164 ;;  f               4   60[BANK0 ] long long 
  5165 ;;  ct              3   64[BANK0 ] unsigned char [3]
  5166 ;;  vp              3    0        PTR void 
  5167 ;;  cp              3    0        PTR unsigned char 
  5168 ;;  i               2    0        int 
  5169 ;;  done            2    0        int 
  5170 ;;  c               1   67[BANK0 ] unsigned char 
  5171 ;; Return value:  Size  Location     Type
  5172 ;;                  2  112[COMRAM] int 
  5173 ;; Registers used:
  5174 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5175 ;; Tracked objects:
  5176 ;;		On entry : 0/0
  5177 ;;		On exit  : 0/0
  5178 ;;		Unchanged: 0/0
  5179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5180 ;;      Params:         6       0       0       0       0       0       0
  5181 ;;      Locals:         0      12       0       0       0       0       0
  5182 ;;      Temps:          4       0       0       0       0       0       0
  5183 ;;      Totals:        10      12       0       0       0       0       0
  5184 ;;Total ram usage:       22 bytes
  5185 ;; Hardware stack levels used:    1
  5186 ;; Hardware stack levels required when called:    5
  5187 ;; This function calls:
  5188 ;;		_atoi
  5189 ;;		_efgtoa
  5190 ;;		_fputc
  5191 ;;		_isdigit
  5192 ;;		_isupper
  5193 ;;		_strncmp
  5194 ;;		_tolower
  5195 ;; This function is called by:
  5196 ;;		_vfprintf
  5197 ;; This function uses a non-reentrant model
  5198 ;;
  5199                           
  5200                           	psect	text8
  5201  00292E                     __ptext8:
  5202                           	callstack 0
  5203  00292E                     _vfpfcnvrt:
  5204                           	callstack 22
  5205  00292E                     
  5206                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int vfpfcn
      +                          vrt(FILE *fp, char *fmt[], va_list ap);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\c
      +                          ommon\doprnt.c: 671: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          672:     char c, *cp, ct[3];;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\dopr
      +                          nt.c: 673:     int done, i;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 674:     long long ll;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 675:     unsigned long long llu;
  5207  00292E  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5208  002932  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5209  002936  CFDE FFF6          	movff	postinc2,tblptrl
  5210  00293A  CFDD FFF7          	movff	postdec2,tblptrh
  5211  00293E                     	if	0	;tblptru may be non-zero
  5212  00293E                     	endif
  5213  00293E                     	if	0	;tblptru may be non-zero
  5214  00293E                     	endif
  5215  00293E  0008               	tblrd		*
  5216  002940  50F5               	movf	tablat,w,c
  5217  002942  0A25               	xorlw	37
  5218  002944  A4D8               	btfss	status,2,c
  5219  002946  EFA7  F014         	goto	u5531
  5220  00294A  EFA9  F014         	goto	u5530
  5221  00294E                     u5531:
  5222  00294E  EFB0  F016         	goto	l4599
  5223  002952                     u5530:
  5224  002952                     
  5225                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*fmt;
  5226  002952  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5227  002956  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5228  00295A  2ADE               	incf	postinc2,f,c
  5229  00295C  0E00               	movlw	0
  5230  00295E  22DD               	addwfc	postdec2,f,c
  5231  002960                     
  5232                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flags = w
      +                          idth = 0;
  5233  002960  0E00               	movlw	0
  5234  002962  0100               	movlb	0	; () banked
  5235  002964  6FEC               	movwf	(_width+1)& (0+255),b
  5236  002966  0E00               	movlw	0
  5237  002968  6FEB               	movwf	_width& (0+255),b
  5238  00296A  C0EB  F0EF         	movff	_width,_flags
  5239  00296E  C0EC  F0F0         	movff	_width+1,_flags+1
  5240  002972                     
  5241                           ; BSR set to: 0
  5242                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec = -1
      +                          ;
  5243  002972  69ED               	setf	_prec& (0+255),b
  5244  002974  69EE               	setf	(_prec+1)& (0+255),b
  5245  002976                     
  5246                           ; BSR set to: 0
  5247                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if ((*fmt
      +                          )[0] == '.') {
  5248  002976  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5249  00297A  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5250  00297E  CFDE FFF6          	movff	postinc2,tblptrl
  5251  002982  CFDD FFF7          	movff	postdec2,tblptrh
  5252  002986                     	if	0	;tblptru may be non-zero
  5253  002986                     	endif
  5254  002986                     	if	0	;tblptru may be non-zero
  5255  002986                     	endif
  5256  002986  0008               	tblrd		*
  5257  002988  50F5               	movf	tablat,w,c
  5258  00298A  0A2E               	xorlw	46
  5259  00298C  A4D8               	btfss	status,2,c
  5260  00298E  EFCB  F014         	goto	u5541
  5261  002992  EFCD  F014         	goto	u5540
  5262  002996                     u5541:
  5263  002996  EF4B  F015         	goto	l4545
  5264  00299A                     u5540:
  5265  00299A                     
  5266                           ; BSR set to: 0
  5267                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             prec 
      +                          = 0;
  5268  00299A  0E00               	movlw	0
  5269  00299C  6FEE               	movwf	(_prec+1)& (0+255),b
  5270  00299E  0E00               	movlw	0
  5271  0029A0  6FED               	movwf	_prec& (0+255),b
  5272  0029A2                     
  5273                           ; BSR set to: 0
  5274                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             ++*fm
      +                          t;
  5275  0029A2  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5276  0029A6  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5277  0029AA  2ADE               	incf	postinc2,f,c
  5278  0029AC  0E00               	movlw	0
  5279  0029AE  22DD               	addwfc	postdec2,f,c
  5280  0029B0                     
  5281                           ; BSR set to: 0
  5282                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             if ((
      +                          *fmt)[0] == '*') {
  5283  0029B0  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5284  0029B4  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5285  0029B8  CFDE FFF6          	movff	postinc2,tblptrl
  5286  0029BC  CFDD FFF7          	movff	postdec2,tblptrh
  5287  0029C0                     	if	0	;tblptru may be non-zero
  5288  0029C0                     	endif
  5289  0029C0                     	if	0	;tblptru may be non-zero
  5290  0029C0                     	endif
  5291  0029C0  0008               	tblrd		*
  5292  0029C2  50F5               	movf	tablat,w,c
  5293  0029C4  0A2A               	xorlw	42
  5294  0029C6  A4D8               	btfss	status,2,c
  5295  0029C8  EFE8  F014         	goto	u5551
  5296  0029CC  EFEA  F014         	goto	u5550
  5297  0029D0                     u5551:
  5298  0029D0  EF07  F015         	goto	l4535
  5299  0029D4                     u5550:
  5300  0029D4                     
  5301                           ; BSR set to: 0
  5302                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:                 +
      +                          +*fmt;
  5303  0029D4  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5304  0029D8  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5305  0029DC  2ADE               	incf	postinc2,f,c
  5306  0029DE  0E00               	movlw	0
  5307  0029E0  22DD               	addwfc	postdec2,f,c
  5308                           
  5309                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:                 p
      +                          rec = (*(int *)__va_arg(*(int **)ap, (int)0));
  5310  0029E2  C075  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5311  0029E6  C076  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5312  0029EA  CFDF F077          	movff	indf2,??_vfpfcnvrt
  5313  0029EE  0E02               	movlw	2
  5314  0029F0  26DE               	addwf	postinc2,f,c
  5315  0029F2  CFDF F078          	movff	indf2,??_vfpfcnvrt+1
  5316  0029F6  0E00               	movlw	0
  5317  0029F8  22DD               	addwfc	postdec2,f,c
  5318  0029FA  C077  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5319  0029FE  C078  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5320  002A02  CFDE F0ED          	movff	postinc2,_prec
  5321  002A06  CFDD F0EE          	movff	postdec2,_prec+1
  5322                           
  5323                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             } els
      +                          e {
  5324  002A0A  EF4B  F015         	goto	l4545
  5325  002A0E                     l4535:
  5326                           
  5327                           ; BSR set to: 0
  5328                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:                 p
      +                          rec = atoi(*fmt);
  5329  002A0E  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5330  002A12  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5331  002A16  CFDE F008          	movff	postinc2,atoi@s
  5332  002A1A  CFDD F009          	movff	postdec2,atoi@s+1
  5333  002A1E  ECA6  F01F         	call	_atoi	;wreg free
  5334  002A22  C008  F0ED         	movff	?_atoi,_prec
  5335  002A26  C009  F0EE         	movff	?_atoi+1,_prec+1
  5336                           
  5337                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:                 w
      +                          hile ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5338  002A2A  EF1E  F015         	goto	l4539
  5339  002A2E                     l4537:
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:                  
      +                             ++*fmt;
  5343  002A2E  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5344  002A32  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5345  002A36  2ADE               	incf	postinc2,f,c
  5346  002A38  0E00               	movlw	0
  5347  002A3A  22DD               	addwfc	postdec2,f,c
  5348  002A3C                     l4539:
  5349  002A3C  0ED0               	movlw	208
  5350  002A3E  6E77               	movwf	??_vfpfcnvrt^0,c
  5351  002A40  0EFF               	movlw	255
  5352  002A42  6E78               	movwf	(??_vfpfcnvrt+1)^0,c
  5353  002A44  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5354  002A48  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5355  002A4C  CFDE FFF6          	movff	postinc2,tblptrl
  5356  002A50  CFDD FFF7          	movff	postdec2,tblptrh
  5357  002A54                     	if	0	;tblptru may be non-zero
  5358  002A54                     	endif
  5359  002A54                     	if	0	;tblptru may be non-zero
  5360  002A54                     	endif
  5361  002A54  0008               	tblrd		*
  5362  002A56  50F5               	movf	tablat,w,c
  5363  002A58  6E79               	movwf	(??_vfpfcnvrt+2)^0,c
  5364  002A5A  6A7A               	clrf	(??_vfpfcnvrt+3)^0,c
  5365  002A5C  5077               	movf	??_vfpfcnvrt^0,w,c
  5366  002A5E  2679               	addwf	(??_vfpfcnvrt+2)^0,f,c
  5367  002A60  5078               	movf	(??_vfpfcnvrt+1)^0,w,c
  5368  002A62  227A               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  5369  002A64  507A               	movf	(??_vfpfcnvrt+3)^0,w,c
  5370  002A66  E10A               	bnz	u5560
  5371  002A68  0E0A               	movlw	10
  5372  002A6A  5C79               	subwf	(??_vfpfcnvrt+2)^0,w,c
  5373  002A6C  A0D8               	btfss	status,0,c
  5374  002A6E  EF3B  F015         	goto	u5561
  5375  002A72  EF3E  F015         	goto	u5560
  5376  002A76                     u5561:
  5377  002A76  0E01               	movlw	1
  5378  002A78  EF3F  F015         	goto	u5570
  5379  002A7C                     u5560:
  5380  002A7C  0E00               	movlw	0
  5381  002A7E                     u5570:
  5382  002A7E  0100               	movlb	0	; () banked
  5383  002A80  6FB8               	movwf	_vfpfcnvrt$792& (0+255),b
  5384  002A82  6BB9               	clrf	(_vfpfcnvrt$792+1)& (0+255),b
  5385  002A84                     
  5386                           ; BSR set to: 0
  5387  002A84  51B8               	movf	_vfpfcnvrt$792& (0+255),w,b
  5388  002A86  11B9               	iorwf	(_vfpfcnvrt$792+1)& (0+255),w,b
  5389  002A88  A4D8               	btfss	status,2,c
  5390  002A8A  EF49  F015         	goto	u5581
  5391  002A8E  EF4B  F015         	goto	u5580
  5392  002A92                     u5581:
  5393  002A92  EF17  F015         	goto	l4537
  5394  002A96                     u5580:
  5395  002A96                     l4545:
  5396                           
  5397                           ; BSR set to: 0
  5398                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0] = t
      +                          olower((int)(*fmt)[0]);
  5399  002A96  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5400  002A9A  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5401  002A9E  CFDE FFF6          	movff	postinc2,tblptrl
  5402  002AA2  CFDD FFF7          	movff	postdec2,tblptrh
  5403  002AA6                     	if	0	;tblptru may be non-zero
  5404  002AA6                     	endif
  5405  002AA6                     	if	0	;tblptru may be non-zero
  5406  002AA6                     	endif
  5407  002AA6  0008               	tblrd		*
  5408  002AA8  50F5               	movf	tablat,w,c
  5409  002AAA  6E07               	movwf	tolower@c^0,c
  5410  002AAC  6A08               	clrf	(tolower@c+1)^0,c
  5411  002AAE  EC5B  F026         	call	_tolower	;wreg free
  5412  002AB2  5007               	movf	?_tolower^0,w,c
  5413  002AB4  0100               	movlb	0	; () banked
  5414  002AB6  6FC0               	movwf	vfpfcnvrt@ct& (0+255),b
  5415  002AB8                     
  5416                           ; BSR set to: 0
  5417                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (ct[0]
      +                          ) {
  5418  002AB8  51C0               	movf	vfpfcnvrt@ct& (0+255),w,b
  5419  002ABA  B4D8               	btfsc	status,2,c
  5420  002ABC  EF62  F015         	goto	u5591
  5421  002AC0  EF64  F015         	goto	u5590
  5422  002AC4                     u5591:
  5423  002AC4  EF9E  F015         	goto	l4555
  5424  002AC8                     u5590:
  5425  002AC8                     
  5426                           ; BSR set to: 0
  5427                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             ct[1]
      +                           = tolower((int)(*fmt)[1]);
  5428  002AC8  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5429  002ACC  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5430  002AD0  CFDE F077          	movff	postinc2,??_vfpfcnvrt
  5431  002AD4  CFDD F078          	movff	postdec2,??_vfpfcnvrt+1
  5432  002AD8  0E01               	movlw	1
  5433  002ADA  2677               	addwf	??_vfpfcnvrt^0,f,c
  5434  002ADC  0E00               	movlw	0
  5435  002ADE  2278               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5436  002AE0  C077  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5437  002AE4  C078  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5438  002AE8                     	if	0	;tblptru may be non-zero
  5439  002AE8                     	endif
  5440  002AE8                     	if	0	;tblptru may be non-zero
  5441  002AE8                     	endif
  5442  002AE8  0008               	tblrd		*
  5443  002AEA  50F5               	movf	tablat,w,c
  5444  002AEC  6E07               	movwf	tolower@c^0,c
  5445  002AEE  6A08               	clrf	(tolower@c+1)^0,c
  5446  002AF0  EC5B  F026         	call	_tolower	;wreg free
  5447  002AF4  5007               	movf	?_tolower^0,w,c
  5448  002AF6  0100               	movlb	0	; () banked
  5449  002AF8  6FC1               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  5450  002AFA                     
  5451                           ; BSR set to: 0
  5452                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             if (c
      +                          t[1]) {
  5453  002AFA  51C1               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  5454  002AFC  B4D8               	btfsc	status,2,c
  5455  002AFE  EF83  F015         	goto	u5601
  5456  002B02  EF85  F015         	goto	u5600
  5457  002B06                     u5601:
  5458  002B06  EF9E  F015         	goto	l4555
  5459  002B0A                     u5600:
  5460  002B0A                     
  5461                           ; BSR set to: 0
  5462                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:                 c
      +                          t[2] = tolower((int)(*fmt)[2]);
  5463  002B0A  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5464  002B0E  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5465  002B12  CFDE F077          	movff	postinc2,??_vfpfcnvrt
  5466  002B16  CFDD F078          	movff	postdec2,??_vfpfcnvrt+1
  5467  002B1A  0E02               	movlw	2
  5468  002B1C  2677               	addwf	??_vfpfcnvrt^0,f,c
  5469  002B1E  0E00               	movlw	0
  5470  002B20  2278               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5471  002B22  C077  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5472  002B26  C078  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5473  002B2A                     	if	0	;tblptru may be non-zero
  5474  002B2A                     	endif
  5475  002B2A                     	if	0	;tblptru may be non-zero
  5476  002B2A                     	endif
  5477  002B2A  0008               	tblrd		*
  5478  002B2C  50F5               	movf	tablat,w,c
  5479  002B2E  6E07               	movwf	tolower@c^0,c
  5480  002B30  6A08               	clrf	(tolower@c+1)^0,c
  5481  002B32  EC5B  F026         	call	_tolower	;wreg free
  5482  002B36  5007               	movf	?_tolower^0,w,c
  5483  002B38  0100               	movlb	0	; () banked
  5484  002B3A  6FC2               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  5485  002B3C                     l4555:
  5486                           
  5487                           ; BSR set to: 0
  5488                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (ct[0]
      +                           == 'f') {
  5489  002B3C  0E66               	movlw	102
  5490  002B3E  19C0               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  5491  002B40  A4D8               	btfss	status,2,c
  5492  002B42  EFA5  F015         	goto	u5611
  5493  002B46  EFA7  F015         	goto	u5610
  5494  002B4A                     u5611:
  5495  002B4A  EFE7  F015         	goto	l4567
  5496  002B4E                     u5610:
  5497  002B4E                     
  5498                           ; BSR set to: 0
  5499                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             c = (
      +                          *fmt)[0];
  5500  002B4E  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5501  002B52  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5502  002B56  CFDE FFF6          	movff	postinc2,tblptrl
  5503  002B5A  CFDD FFF7          	movff	postdec2,tblptrh
  5504  002B5E                     	if	0	;tblptru may be non-zero
  5505  002B5E                     	endif
  5506  002B5E                     	if	0	;tblptru may be non-zero
  5507  002B5E                     	endif
  5508  002B5E  0008               	tblrd		*
  5509  002B60  CFF5 F0C3          	movff	tablat,vfpfcnvrt@c
  5510  002B64                     
  5511                           ; BSR set to: 0
  5512                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             ++*fm
      +                          t;
  5513  002B64  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5514  002B68  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5515  002B6C  2ADE               	incf	postinc2,f,c
  5516  002B6E  0E00               	movlw	0
  5517  002B70  22DD               	addwfc	postdec2,f,c
  5518  002B72                     
  5519                           ; BSR set to: 0
  5520                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             f = (
      +                          long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5521  002B72  C075  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5522  002B76  C076  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5523  002B7A  CFDF F077          	movff	indf2,??_vfpfcnvrt
  5524  002B7E  0E04               	movlw	4
  5525  002B80  26DE               	addwf	postinc2,f,c
  5526  002B82  CFDF F078          	movff	indf2,??_vfpfcnvrt+1
  5527  002B86  0E00               	movlw	0
  5528  002B88  22DD               	addwfc	postdec2,f,c
  5529  002B8A  C077  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5530  002B8E  C078  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5531  002B92  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f
  5532  002B96  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+1
  5533  002B9A  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f+2
  5534  002B9E  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+3
  5535  002BA2                     l4563:
  5536                           
  5537                           ; BSR set to: 0
  5538                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             retur
      +                          n efgtoa(fp, f, c);
  5539  002BA2  C071  F065         	movff	vfpfcnvrt@fp,efgtoa@fp
  5540  002BA6  C072  F066         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  5541  002BAA  C0BC  F067         	movff	vfpfcnvrt@f,efgtoa@f
  5542  002BAE  C0BD  F068         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  5543  002BB2  C0BE  F069         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  5544  002BB6  C0BF  F06A         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  5545  002BBA  C0C3  F06B         	movff	vfpfcnvrt@c,efgtoa@c
  5546  002BBE  EC7F  F003         	call	_efgtoa	;wreg free
  5547  002BC2  C065  F071         	movff	?_efgtoa,?_vfpfcnvrt
  5548  002BC6  C066  F072         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  5549  002BCA  EFCB  F016         	goto	l1103
  5550  002BCE                     l4567:
  5551                           
  5552                           ; BSR set to: 0
  5553                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (!strn
      +                          cmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  5554  002BCE  0EC0               	movlw	low vfpfcnvrt@ct
  5555  002BD0  6E01               	movwf	strncmp@_l^0,c
  5556  002BD2  0E00               	movlw	high vfpfcnvrt@ct
  5557  002BD4  6E02               	movwf	(strncmp@_l+1)^0,c
  5558  002BD6  0EF6               	movlw	low STR_40
  5559  002BD8  6E03               	movwf	strncmp@_r^0,c
  5560  002BDA  0E06               	movlw	high STR_40
  5561  002BDC  6E04               	movwf	(strncmp@_r+1)^0,c
  5562  002BDE  0E00               	movlw	0
  5563  002BE0  6E06               	movwf	(strncmp@n+1)^0,c
  5564  002BE2  0E02               	movlw	2
  5565  002BE4  6E05               	movwf	strncmp@n^0,c
  5566  002BE6  ECA7  F022         	call	_strncmp	;wreg free
  5567  002BEA  5001               	movf	?_strncmp^0,w,c
  5568  002BEC  1002               	iorwf	(?_strncmp+1)^0,w,c
  5569  002BEE  A4D8               	btfss	status,2,c
  5570  002BF0  EFFC  F015         	goto	u5621
  5571  002BF4  EFFE  F015         	goto	u5620
  5572  002BF8                     u5621:
  5573  002BF8  EF7A  F016         	goto	l4583
  5574  002BFC                     u5620:
  5575  002BFC                     
  5576                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             if ((
      +                          0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  5577  002BFC  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5578  002C00  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5579  002C04  CFDE F077          	movff	postinc2,??_vfpfcnvrt
  5580  002C08  CFDD F078          	movff	postdec2,??_vfpfcnvrt+1
  5581  002C0C  0E01               	movlw	1
  5582  002C0E  2677               	addwf	??_vfpfcnvrt^0,f,c
  5583  002C10  0E00               	movlw	0
  5584  002C12  2278               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5585  002C14  C077  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5586  002C18  C078  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5587  002C1C                     	if	0	;tblptru may be non-zero
  5588  002C1C                     	endif
  5589  002C1C                     	if	0	;tblptru may be non-zero
  5590  002C1C                     	endif
  5591  002C1C  0008               	tblrd		*
  5592  002C1E  CFF5 F0C3          	movff	tablat,vfpfcnvrt@c
  5593  002C22  0EBF               	movlw	191
  5594  002C24  6E77               	movwf	??_vfpfcnvrt^0,c
  5595  002C26  0EFF               	movlw	255
  5596  002C28  6E78               	movwf	(??_vfpfcnvrt+1)^0,c
  5597  002C2A  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5598  002C2E  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5599  002C32  CFDE FFF6          	movff	postinc2,tblptrl
  5600  002C36  CFDD FFF7          	movff	postdec2,tblptrh
  5601  002C3A                     	if	0	;tblptru may be non-zero
  5602  002C3A                     	endif
  5603  002C3A                     	if	0	;tblptru may be non-zero
  5604  002C3A                     	endif
  5605  002C3A  0008               	tblrd		*
  5606  002C3C  50F5               	movf	tablat,w,c
  5607  002C3E  6E79               	movwf	(??_vfpfcnvrt+2)^0,c
  5608  002C40  6A7A               	clrf	(??_vfpfcnvrt+3)^0,c
  5609  002C42  5077               	movf	??_vfpfcnvrt^0,w,c
  5610  002C44  2679               	addwf	(??_vfpfcnvrt+2)^0,f,c
  5611  002C46  5078               	movf	(??_vfpfcnvrt+1)^0,w,c
  5612  002C48  227A               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  5613  002C4A  507A               	movf	(??_vfpfcnvrt+3)^0,w,c
  5614  002C4C  E10A               	bnz	u5630
  5615  002C4E  0E1A               	movlw	26
  5616  002C50  5C79               	subwf	(??_vfpfcnvrt+2)^0,w,c
  5617  002C52  A0D8               	btfss	status,0,c
  5618  002C54  EF2E  F016         	goto	u5631
  5619  002C58  EF31  F016         	goto	u5630
  5620  002C5C                     u5631:
  5621  002C5C  0E01               	movlw	1
  5622  002C5E  EF32  F016         	goto	u5640
  5623  002C62                     u5630:
  5624  002C62  0E00               	movlw	0
  5625  002C64                     u5640:
  5626  002C64  0100               	movlb	0	; () banked
  5627  002C66  6FBA               	movwf	_vfpfcnvrt$796& (0+255),b
  5628  002C68  6BBB               	clrf	(_vfpfcnvrt$796+1)& (0+255),b
  5629  002C6A                     
  5630                           ; BSR set to: 0
  5631  002C6A  51BA               	movf	_vfpfcnvrt$796& (0+255),w,b
  5632  002C6C  11BB               	iorwf	(_vfpfcnvrt$796+1)& (0+255),w,b
  5633  002C6E  B4D8               	btfsc	status,2,c
  5634  002C70  EF3C  F016         	goto	u5651
  5635  002C74  EF3E  F016         	goto	u5650
  5636  002C78                     u5651:
  5637  002C78  EF58  F016         	goto	l4577
  5638  002C7C                     u5650:
  5639  002C7C                     
  5640                           ; BSR set to: 0
  5641                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:                 f
      +                           = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  5642  002C7C  C075  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5643  002C80  C076  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5644  002C84  CFDF F077          	movff	indf2,??_vfpfcnvrt
  5645  002C88  0E04               	movlw	4
  5646  002C8A  26DE               	addwf	postinc2,f,c
  5647  002C8C  CFDF F078          	movff	indf2,??_vfpfcnvrt+1
  5648  002C90  0E00               	movlw	0
  5649  002C92  22DD               	addwfc	postdec2,f,c
  5650  002C94  C077  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5651  002C98  C078  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5652  002C9C  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f
  5653  002CA0  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+1
  5654  002CA4  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f+2
  5655  002CA8  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+3
  5656                           
  5657                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             } els
      +                          e {
  5658  002CAC  EF70  F016         	goto	l1110
  5659  002CB0                     l4577:
  5660                           
  5661                           ; BSR set to: 0
  5662                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:                 f
      +                           = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5663  002CB0  C075  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5664  002CB4  C076  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5665  002CB8  CFDF F077          	movff	indf2,??_vfpfcnvrt
  5666  002CBC  0E04               	movlw	4
  5667  002CBE  26DE               	addwf	postinc2,f,c
  5668  002CC0  CFDF F078          	movff	indf2,??_vfpfcnvrt+1
  5669  002CC4  0E00               	movlw	0
  5670  002CC6  22DD               	addwfc	postdec2,f,c
  5671  002CC8  C077  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5672  002CCC  C078  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5673  002CD0  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f
  5674  002CD4  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+1
  5675  002CD8  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f+2
  5676  002CDC  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+3
  5677  002CE0                     l1110:
  5678                           
  5679                           ; BSR set to: 0
  5680                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             *fmt 
      +                          += ((sizeof("lf")/sizeof("lf"[0]))-1);
  5681  002CE0  0E02               	movlw	2
  5682  002CE2  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5683  002CE6  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5684  002CEA  26DE               	addwf	postinc2,f,c
  5685  002CEC  0E00               	movlw	0
  5686  002CEE  22DD               	addwfc	postdec2,f,c
  5687  002CF0  EFD1  F015         	goto	l4563
  5688  002CF4                     l4583:
  5689                           
  5690                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if ((*fm
      +                          t)[0] == '%') {
  5691  002CF4  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5692  002CF8  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5693  002CFC  CFDE FFF6          	movff	postinc2,tblptrl
  5694  002D00  CFDD FFF7          	movff	postdec2,tblptrh
  5695  002D04                     	if	0	;tblptru may be non-zero
  5696  002D04                     	endif
  5697  002D04                     	if	0	;tblptru may be non-zero
  5698  002D04                     	endif
  5699  002D04  0008               	tblrd		*
  5700  002D06  50F5               	movf	tablat,w,c
  5701  002D08  0A25               	xorlw	37
  5702  002D0A  A4D8               	btfss	status,2,c
  5703  002D0C  EF8A  F016         	goto	u5661
  5704  002D10  EF8C  F016         	goto	u5660
  5705  002D14                     u5661:
  5706  002D14  EFA3  F016         	goto	l4593
  5707  002D18                     u5660:
  5708  002D18                     
  5709                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:             ++*f
      +                          mt;
  5710  002D18  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5711  002D1C  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5712  002D20  2ADE               	incf	postinc2,f,c
  5713  002D22  0E00               	movlw	0
  5714  002D24  22DD               	addwfc	postdec2,f,c
  5715  002D26                     
  5716                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:             fput
      +                          c((int)'%', fp);
  5717  002D26  0E00               	movlw	0
  5718  002D28  6E02               	movwf	(fputc@c+1)^0,c
  5719  002D2A  0E25               	movlw	37
  5720  002D2C  6E01               	movwf	fputc@c^0,c
  5721  002D2E  C071  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5722  002D32  C072  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5723  002D36  EC12  F023         	call	_fputc	;wreg free
  5724  002D3A                     l4589:
  5725                           
  5726                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:             retu
      +                          rn 1;
  5727  002D3A  0E00               	movlw	0
  5728  002D3C  6E72               	movwf	(?_vfpfcnvrt+1)^0,c
  5729  002D3E  0E01               	movlw	1
  5730  002D40  6E71               	movwf	?_vfpfcnvrt^0,c
  5731  002D42  EFCB  F016         	goto	l1103
  5732  002D46                     l4593:
  5733                           
  5734                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*fmt;
  5735  002D46  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5736  002D4A  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5737  002D4E  2ADE               	incf	postinc2,f,c
  5738  002D50  0E00               	movlw	0
  5739  002D52  22DD               	addwfc	postdec2,f,c
  5740  002D54                     
  5741                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         return 0
      +                          ;
  5742  002D54  0E00               	movlw	0
  5743  002D56  6E72               	movwf	(?_vfpfcnvrt+1)^0,c
  5744  002D58  0E00               	movlw	0
  5745  002D5A  6E71               	movwf	?_vfpfcnvrt^0,c
  5746  002D5C  EFCB  F016         	goto	l1103
  5747  002D60                     l4599:
  5748                           
  5749                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((int)(
      +                          *fmt)[0], fp);
  5750  002D60  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5751  002D64  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5752  002D68  CFDE FFF6          	movff	postinc2,tblptrl
  5753  002D6C  CFDD FFF7          	movff	postdec2,tblptrh
  5754  002D70                     	if	0	;tblptru may be non-zero
  5755  002D70                     	endif
  5756  002D70                     	if	0	;tblptru may be non-zero
  5757  002D70                     	endif
  5758  002D70  0008               	tblrd		*
  5759  002D72  50F5               	movf	tablat,w,c
  5760  002D74  6E01               	movwf	fputc@c^0,c
  5761  002D76  6A02               	clrf	(fputc@c+1)^0,c
  5762  002D78  C071  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5763  002D7C  C072  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5764  002D80  EC12  F023         	call	_fputc	;wreg free
  5765  002D84                     
  5766                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  5767  002D84  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5768  002D88  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5769  002D8C  2ADE               	incf	postinc2,f,c
  5770  002D8E  0E00               	movlw	0
  5771  002D90  22DD               	addwfc	postdec2,f,c
  5772  002D92  EF9D  F016         	goto	l4589
  5773  002D96                     l1103:
  5774  002D96  0012               	return		;funcret
  5775  002D98                     __end_of_vfpfcnvrt:
  5776                           	callstack 0
  5777                           
  5778 ;; *************** function _strncmp *****************
  5779 ;; Defined at:
  5780 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  5781 ;; Parameters:    Size  Location     Type
  5782 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  5783 ;;		 -> vfpfcnvrt@ct(3), 
  5784 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  5785 ;;		 -> STR_42(3), 
  5786 ;;  n               2    4[COMRAM] unsigned int 
  5787 ;; Auto vars:     Size  Location     Type
  5788 ;;  r               2    9[COMRAM] PTR const unsigned char 
  5789 ;;		 -> STR_42(3), 
  5790 ;;  l               2    7[COMRAM] PTR const unsigned char 
  5791 ;;		 -> vfpfcnvrt@ct(3), 
  5792 ;; Return value:  Size  Location     Type
  5793 ;;                  2    0[COMRAM] int 
  5794 ;; Registers used:
  5795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5796 ;; Tracked objects:
  5797 ;;		On entry : 0/0
  5798 ;;		On exit  : 0/0
  5799 ;;		Unchanged: 0/0
  5800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5801 ;;      Params:         6       0       0       0       0       0       0
  5802 ;;      Locals:         4       0       0       0       0       0       0
  5803 ;;      Temps:          1       0       0       0       0       0       0
  5804 ;;      Totals:        11       0       0       0       0       0       0
  5805 ;;Total ram usage:       11 bytes
  5806 ;; Hardware stack levels used:    1
  5807 ;; This function calls:
  5808 ;;		Nothing
  5809 ;; This function is called by:
  5810 ;;		_vfpfcnvrt
  5811 ;; This function uses a non-reentrant model
  5812 ;;
  5813                           
  5814                           	psect	text9
  5815  00454E                     __ptext9:
  5816                           	callstack 0
  5817  00454E                     _strncmp:
  5818                           	callstack 26
  5819  00454E  C001  F008         	movff	strncmp@_l,strncmp@l
  5820  004552  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  5821  004556  C003  F00A         	movff	strncmp@_r,strncmp@r
  5822  00455A  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  5823  00455E  0605               	decf	strncmp@n^0,f,c
  5824  004560  A0D8               	btfss	status,0,c
  5825  004562  0606               	decf	(strncmp@n+1)^0,f,c
  5826  004564  2805               	incf	strncmp@n^0,w,c
  5827  004566  E106               	bnz	u5451
  5828  004568  2806               	incf	(strncmp@n+1)^0,w,c
  5829  00456A  A4D8               	btfss	status,2,c
  5830  00456C  EFBA  F022         	goto	u5451
  5831  004570  EFBC  F022         	goto	u5450
  5832  004574                     u5451:
  5833  004574  EFC9  F022         	goto	l4477
  5834  004578                     u5450:
  5835  004578  0E00               	movlw	0
  5836  00457A  6E02               	movwf	(?_strncmp+1)^0,c
  5837  00457C  0E00               	movlw	0
  5838  00457E  6E01               	movwf	?_strncmp^0,c
  5839  004580  EF11  F023         	goto	l1231
  5840  004584                     l4475:
  5841  004584  4A08               	infsnz	strncmp@l^0,f,c
  5842  004586  2A09               	incf	(strncmp@l+1)^0,f,c
  5843  004588  4A0A               	infsnz	strncmp@r^0,f,c
  5844  00458A  2A0B               	incf	(strncmp@r+1)^0,f,c
  5845  00458C  0605               	decf	strncmp@n^0,f,c
  5846  00458E  A0D8               	btfss	status,0,c
  5847  004590  0606               	decf	(strncmp@n+1)^0,f,c
  5848  004592                     l4477:
  5849  004592  C008  FFD9         	movff	strncmp@l,fsr2l
  5850  004596  C009  FFDA         	movff	strncmp@l+1,fsr2h
  5851  00459A  50DF               	movf	indf2,w,c
  5852  00459C  B4D8               	btfsc	status,2,c
  5853  00459E  EFD3  F022         	goto	u5461
  5854  0045A2  EFD5  F022         	goto	u5460
  5855  0045A6                     u5461:
  5856  0045A6  EF00  F023         	goto	l4485
  5857  0045AA                     u5460:
  5858  0045AA  C00A  FFF6         	movff	strncmp@r,tblptrl
  5859  0045AE  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5860  0045B2                     	if	0	;tblptru may be non-zero
  5861  0045B2                     	endif
  5862  0045B2                     	if	0	;tblptru may be non-zero
  5863  0045B2                     	endif
  5864  0045B2  0008               	tblrd		*
  5865  0045B4  50F5               	movf	tablat,w,c
  5866  0045B6  0900               	iorlw	0
  5867  0045B8  B4D8               	btfsc	status,2,c
  5868  0045BA  EFE1  F022         	goto	u5471
  5869  0045BE  EFE3  F022         	goto	u5470
  5870  0045C2                     u5471:
  5871  0045C2  EF00  F023         	goto	l4485
  5872  0045C6                     u5470:
  5873  0045C6  5005               	movf	strncmp@n^0,w,c
  5874  0045C8  1006               	iorwf	(strncmp@n+1)^0,w,c
  5875  0045CA  B4D8               	btfsc	status,2,c
  5876  0045CC  EFEA  F022         	goto	u5481
  5877  0045D0  EFEC  F022         	goto	u5480
  5878  0045D4                     u5481:
  5879  0045D4  EF00  F023         	goto	l4485
  5880  0045D8                     u5480:
  5881  0045D8  C008  FFD9         	movff	strncmp@l,fsr2l
  5882  0045DC  C009  FFDA         	movff	strncmp@l+1,fsr2h
  5883  0045E0  50DF               	movf	indf2,w,c
  5884  0045E2  6E07               	movwf	??_strncmp^0,c
  5885  0045E4  C00A  FFF6         	movff	strncmp@r,tblptrl
  5886  0045E8  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5887  0045EC                     	if	0	;tblptru may be non-zero
  5888  0045EC                     	endif
  5889  0045EC                     	if	0	;tblptru may be non-zero
  5890  0045EC                     	endif
  5891  0045EC  0008               	tblrd		*
  5892  0045EE  50F5               	movf	tablat,w,c
  5893  0045F0  1807               	xorwf	??_strncmp^0,w,c
  5894  0045F2  B4D8               	btfsc	status,2,c
  5895  0045F4  EFFE  F022         	goto	u5491
  5896  0045F8  EF00  F023         	goto	u5490
  5897  0045FC                     u5491:
  5898  0045FC  EFC2  F022         	goto	l4475
  5899  004600                     u5490:
  5900  004600                     l4485:
  5901  004600  C008  FFD9         	movff	strncmp@l,fsr2l
  5902  004604  C009  FFDA         	movff	strncmp@l+1,fsr2h
  5903  004608  50DF               	movf	indf2,w,c
  5904  00460A  6E07               	movwf	??_strncmp^0,c
  5905  00460C  C00A  FFF6         	movff	strncmp@r,tblptrl
  5906  004610  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5907  004614                     	if	0	;tblptru may be non-zero
  5908  004614                     	endif
  5909  004614                     	if	0	;tblptru may be non-zero
  5910  004614                     	endif
  5911  004614  0008               	tblrd		*
  5912  004616  50F5               	movf	tablat,w,c
  5913  004618  5C07               	subwf	??_strncmp^0,w,c
  5914  00461A  6E01               	movwf	?_strncmp^0,c
  5915  00461C  6A02               	clrf	(?_strncmp+1)^0,c
  5916  00461E  A0D8               	btfss	status,0,c
  5917  004620  0602               	decf	(?_strncmp+1)^0,f,c
  5918  004622                     l1231:
  5919  004622  0012               	return		;funcret
  5920  004624                     __end_of_strncmp:
  5921                           	callstack 0
  5922                           
  5923 ;; *************** function _efgtoa *****************
  5924 ;; Defined at:
  5925 ;;		line 319 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5926 ;; Parameters:    Size  Location     Type
  5927 ;;  fp              2  100[COMRAM] PTR struct _IO_FILE
  5928 ;;		 -> sprintf@f(6), 
  5929 ;;  f               4  102[COMRAM] PTR struct _IO_FILE
  5930 ;;  c               1  106[COMRAM] unsigned char 
  5931 ;; Auto vars:     Size  Location     Type
  5932 ;;  u               4   52[BANK0 ] unsigned char 
  5933 ;;  g               4   44[BANK0 ] unsigned char 
  5934 ;;  l               4   38[BANK0 ] unsigned char 
  5935 ;;  h               4   34[BANK0 ] unsigned char 
  5936 ;;  ou              4    0[BANK0 ] unsigned char 
  5937 ;;  n               2   50[BANK0 ] int 
  5938 ;;  e               2   48[BANK0 ] int 
  5939 ;;  i               2   42[BANK0 ] int 
  5940 ;;  w               2   31[BANK0 ] int 
  5941 ;;  p               2   28[BANK0 ] int 
  5942 ;;  sign            2   26[BANK0 ] int 
  5943 ;;  d               2   24[BANK0 ] int 
  5944 ;;  ne              2   22[BANK0 ] int 
  5945 ;;  m               2   20[BANK0 ] int 
  5946 ;;  pp              2   18[BANK0 ] int 
  5947 ;;  t               2   16[BANK0 ] int 
  5948 ;;  mode            1   33[BANK0 ] unsigned char 
  5949 ;;  nmode           1   30[BANK0 ] unsigned char 
  5950 ;; Return value:  Size  Location     Type
  5951 ;;                  2  100[COMRAM] int 
  5952 ;; Registers used:
  5953 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5954 ;; Tracked objects:
  5955 ;;		On entry : 0/0
  5956 ;;		On exit  : 0/0
  5957 ;;		Unchanged: 0/0
  5958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5959 ;;      Params:         7       0       0       0       0       0       0
  5960 ;;      Locals:         0      56       0       0       0       0       0
  5961 ;;      Temps:          5       0       0       0       0       0       0
  5962 ;;      Totals:        12      56       0       0       0       0       0
  5963 ;;Total ram usage:       68 bytes
  5964 ;; Hardware stack levels used:    1
  5965 ;; Hardware stack levels required when called:    4
  5966 ;; This function calls:
  5967 ;;		___awdiv
  5968 ;;		___awmod
  5969 ;;		___fladd
  5970 ;;		___fldiv
  5971 ;;		___fleq
  5972 ;;		___flge
  5973 ;;		___flmul
  5974 ;;		___flneg
  5975 ;;		___flsub
  5976 ;;		___fltol
  5977 ;;		___fpclassifyf
  5978 ;;		_floorf
  5979 ;;		_isupper
  5980 ;;		_pad
  5981 ;;		_strcpy
  5982 ;;		_tolower
  5983 ;; This function is called by:
  5984 ;;		_vfpfcnvrt
  5985 ;; This function uses a non-reentrant model
  5986 ;;
  5987                           
  5988                           	psect	text10
  5989  0006FE                     __ptext10:
  5990                           	callstack 0
  5991  0006FE                     _efgtoa:
  5992                           	callstack 22
  5993  0006FE                     
  5994                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int efgtoa
      +                          (FILE *fp, long double f, char c);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common
      +                          \doprnt.c: 320: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 321: 
      +                              char mode, nmode;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 3
      +                          22:     int d, e, i, m, n, ne, p, pp, sign, t, w;;D:\Programs\Microship\xc8\v2.20\pic\so
      +                          urces\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;;D:\Programs\Microship\xc
      +                          8\v2.20\pic\sources\c99\common\doprnt.c: 326:     sign = 0;
  5995  0006FE  0E00               	movlw	0
  5996  000700  0100               	movlb	0	; () banked
  5997  000702  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  5998  000704  0E00               	movlw	0
  5999  000706  6F9A               	movwf	efgtoa@sign& (0+255),b
  6000  000708                     
  6001                           ; BSR set to: 0
  6002                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  6003  000708  C067  F0AC         	movff	efgtoa@f,efgtoa@g
  6004  00070C  C068  F0AD         	movff	efgtoa@f+1,efgtoa@g+1
  6005  000710  C069  F0AE         	movff	efgtoa@f+2,efgtoa@g+2
  6006  000714  C06A  F0AF         	movff	efgtoa@f+3,efgtoa@g+3
  6007  000718                     
  6008                           ; BSR set to: 0
  6009                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 0.0) 
      +                          {
  6010  000718  BFAF               	btfsc	(efgtoa@g+3)& (0+255),7,b
  6011  00071A  EF93  F003         	goto	u4860
  6012  00071E  EF91  F003         	goto	u4861
  6013  000722                     u4861:
  6014  000722  EFA9  F003         	goto	l4139
  6015  000726                     u4860:
  6016  000726                     
  6017                           ; BSR set to: 0
  6018                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign = 1;
  6019  000726  0E00               	movlw	0
  6020  000728  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  6021  00072A  0E01               	movlw	1
  6022  00072C  6F9A               	movwf	efgtoa@sign& (0+255),b
  6023  00072E                     
  6024                           ; BSR set to: 0
  6025                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = -g;
  6026  00072E  C0AC  F001         	movff	efgtoa@g,___flneg@f1
  6027  000732  C0AD  F002         	movff	efgtoa@g+1,___flneg@f1+1
  6028  000736  C0AE  F003         	movff	efgtoa@g+2,___flneg@f1+2
  6029  00073A  C0AF  F004         	movff	efgtoa@g+3,___flneg@f1+3
  6030  00073E  EC9A  F027         	call	___flneg	;wreg free
  6031  000742  C001  F0AC         	movff	?___flneg,efgtoa@g
  6032  000746  C002  F0AD         	movff	?___flneg+1,efgtoa@g+1
  6033  00074A  C003  F0AE         	movff	?___flneg+2,efgtoa@g+2
  6034  00074E  C004  F0AF         	movff	?___flneg+3,efgtoa@g+3
  6035  000752                     l4139:
  6036                           
  6037                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  6038  000752  0E00               	movlw	0
  6039  000754  0100               	movlb	0	; () banked
  6040  000756  6FB3               	movwf	(efgtoa@n+1)& (0+255),b
  6041  000758  0E00               	movlw	0
  6042  00075A  6FB2               	movwf	efgtoa@n& (0+255),b
  6043  00075C                     
  6044                           ; BSR set to: 0
  6045                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = width;
  6046  00075C  C0EB  F09F         	movff	_width,efgtoa@w
  6047  000760  C0EC  F0A0         	movff	_width+1,efgtoa@w+1
  6048  000764                     
  6049                           ; BSR set to: 0
  6050                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign || (
      +                          flags & (1 << 2))) {
  6051  000764  519A               	movf	efgtoa@sign& (0+255),w,b
  6052  000766  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6053  000768  A4D8               	btfss	status,2,c
  6054  00076A  EFB9  F003         	goto	u4871
  6055  00076E  EFBB  F003         	goto	u4870
  6056  000772                     u4871:
  6057  000772  EFC2  F003         	goto	l4147
  6058  000776                     u4870:
  6059  000776                     
  6060                           ; BSR set to: 0
  6061  000776  A5EF               	btfss	_flags& (0+255),2,b
  6062  000778  EFC0  F003         	goto	u4881
  6063  00077C  EFC2  F003         	goto	u4880
  6064  000780                     u4881:
  6065  000780  EFDC  F003         	goto	l4159
  6066  000784                     u4880:
  6067  000784                     l4147:
  6068                           
  6069                           ; BSR set to: 0
  6070                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf[n] =
      +                           sign ? '-' : '+';
  6071  000784  519A               	movf	efgtoa@sign& (0+255),w,b
  6072  000786  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6073  000788  A4D8               	btfss	status,2,c
  6074  00078A  EFC9  F003         	goto	u4891
  6075  00078E  EFCB  F003         	goto	u4890
  6076  000792                     u4891:
  6077  000792  EFD1  F003         	goto	l4151
  6078  000796                     u4890:
  6079  000796                     
  6080                           ; BSR set to: 0
  6081  000796  0E00               	movlw	0
  6082  000798  6F85               	movwf	(_efgtoa$766+1)& (0+255),b
  6083  00079A  0E2B               	movlw	43
  6084  00079C  6F84               	movwf	_efgtoa$766& (0+255),b
  6085  00079E  EFD5  F003         	goto	l4153
  6086  0007A2                     l4151:
  6087                           
  6088                           ; BSR set to: 0
  6089  0007A2  0E00               	movlw	0
  6090  0007A4  6F85               	movwf	(_efgtoa$766+1)& (0+255),b
  6091  0007A6  0E2D               	movlw	45
  6092  0007A8  6F84               	movwf	_efgtoa$766& (0+255),b
  6093  0007AA                     l4153:
  6094                           
  6095                           ; BSR set to: 0
  6096  0007AA  C084  F108         	movff	_efgtoa$766,_dbuf
  6097  0007AE                     
  6098                           ; BSR set to: 0
  6099                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  6100  0007AE  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  6101  0007B0  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  6102  0007B2                     
  6103                           ; BSR set to: 0
  6104                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  6105  0007B2  079F               	decf	efgtoa@w& (0+255),f,b
  6106  0007B4  A0D8               	btfss	status,0,c
  6107  0007B6  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  6108  0007B8                     l4159:
  6109                           
  6110                           ; BSR set to: 0
  6111                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if ((0 ? 
      +                          isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6112  0007B8  C0AC  F001         	movff	efgtoa@g,___fpclassifyf@x
  6113  0007BC  C0AD  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6114  0007C0  C0AE  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6115  0007C4  C0AF  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6116  0007C8  EC28  F022         	call	___fpclassifyf	;wreg free
  6117  0007CC  0401               	decf	?___fpclassifyf^0,w,c
  6118  0007CE  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  6119  0007D0  A4D8               	btfss	status,2,c
  6120  0007D2  EFED  F003         	goto	u4901
  6121  0007D6  EFEF  F003         	goto	u4900
  6122  0007DA                     u4901:
  6123  0007DA  EF46  F004         	goto	l4177
  6124  0007DE                     u4900:
  6125  0007DE  0EBF               	movlw	191
  6126  0007E0  6E6C               	movwf	??_efgtoa^0,c
  6127  0007E2  0EFF               	movlw	255
  6128  0007E4  6E6D               	movwf	(??_efgtoa+1)^0,c
  6129  0007E6  506B               	movf	efgtoa@c^0,w,c
  6130  0007E8  6E6E               	movwf	(??_efgtoa+2)^0,c
  6131  0007EA  6A6F               	clrf	(??_efgtoa+3)^0,c
  6132  0007EC  506C               	movf	??_efgtoa^0,w,c
  6133  0007EE  266E               	addwf	(??_efgtoa+2)^0,f,c
  6134  0007F0  506D               	movf	(??_efgtoa+1)^0,w,c
  6135  0007F2  226F               	addwfc	(??_efgtoa+3)^0,f,c
  6136  0007F4  506F               	movf	(??_efgtoa+3)^0,w,c
  6137  0007F6  E10A               	bnz	u4910
  6138  0007F8  0E1A               	movlw	26
  6139  0007FA  5C6E               	subwf	(??_efgtoa+2)^0,w,c
  6140  0007FC  A0D8               	btfss	status,0,c
  6141  0007FE  EF03  F004         	goto	u4911
  6142  000802  EF06  F004         	goto	u4910
  6143  000806                     u4911:
  6144  000806  0E01               	movlw	1
  6145  000808  EF07  F004         	goto	u4920
  6146  00080C                     u4910:
  6147  00080C  0E00               	movlw	0
  6148  00080E                     u4920:
  6149  00080E  0100               	movlb	0	; () banked
  6150  000810  6F86               	movwf	_efgtoa$767& (0+255),b
  6151  000812  6B87               	clrf	(_efgtoa$767+1)& (0+255),b
  6152  000814                     
  6153                           ; BSR set to: 0
  6154  000814  5186               	movf	_efgtoa$767& (0+255),w,b
  6155  000816  1187               	iorwf	(_efgtoa$767+1)& (0+255),w,b
  6156  000818  B4D8               	btfsc	status,2,c
  6157  00081A  EF11  F004         	goto	u4931
  6158  00081E  EF13  F004         	goto	u4930
  6159  000822                     u4931:
  6160  000822  EF21  F004         	goto	l4169
  6161  000826                     u4930:
  6162  000826                     
  6163                           ; BSR set to: 0
  6164                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             strcp
      +                          y(&dbuf[n], "INF");
  6165  000826  0E08               	movlw	low _dbuf
  6166  000828  25B2               	addwf	efgtoa@n& (0+255),w,b
  6167  00082A  6E01               	movwf	strcpy@dest^0,c
  6168  00082C  0E01               	movlw	high _dbuf
  6169  00082E  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6170  000830  6E02               	movwf	(strcpy@dest+1)^0,c
  6171  000832  0EE6               	movlw	low STR_32
  6172  000834  6E03               	movwf	strcpy@src^0,c
  6173  000836  0E06               	movlw	high STR_32
  6174  000838  6E04               	movwf	(strcpy@src+1)^0,c
  6175  00083A  ECB9  F026         	call	_strcpy	;wreg free
  6176                           
  6177                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } else {
  6178  00083E  EF2D  F004         	goto	l4171
  6179  000842                     l4169:
  6180                           
  6181                           ; BSR set to: 0
  6182                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             strcp
      +                          y(&dbuf[n], "inf");
  6183  000842  0E08               	movlw	low _dbuf
  6184  000844  25B2               	addwf	efgtoa@n& (0+255),w,b
  6185  000846  6E01               	movwf	strcpy@dest^0,c
  6186  000848  0E01               	movlw	high _dbuf
  6187  00084A  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6188  00084C  6E02               	movwf	(strcpy@dest+1)^0,c
  6189  00084E  0EEE               	movlw	low STR_33
  6190  000850  6E03               	movwf	strcpy@src^0,c
  6191  000852  0E06               	movlw	high STR_33
  6192  000854  6E04               	movwf	(strcpy@src+1)^0,c
  6193  000856  ECB9  F026         	call	_strcpy	;wreg free
  6194  00085A                     l4171:
  6195                           
  6196                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -= ((si
      +                          zeof("inf")/sizeof("inf"[0]))-1);
  6197  00085A  0100               	movlb	0	; () banked
  6198  00085C  0EFD               	movlw	253
  6199  00085E  279F               	addwf	efgtoa@w& (0+255),f,b
  6200  000860  0EFF               	movlw	255
  6201  000862  23A0               	addwfc	(efgtoa@w+1)& (0+255),f,b
  6202  000864                     l4173:
  6203                           
  6204                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         return pa
      +                          d(fp, &dbuf[0], w);
  6205  000864  C065  F011         	movff	efgtoa@fp,pad@fp
  6206  000868  C066  F012         	movff	efgtoa@fp+1,pad@fp+1
  6207  00086C  0E08               	movlw	low _dbuf
  6208  00086E  6E13               	movwf	pad@buf^0,c
  6209  000870  0E01               	movlw	high _dbuf
  6210  000872  6E14               	movwf	(pad@buf+1)^0,c
  6211  000874  C09F  F015         	movff	efgtoa@w,pad@p
  6212  000878  C0A0  F016         	movff	efgtoa@w+1,pad@p+1
  6213  00087C  EC77  F023         	call	_pad	;wreg free
  6214  000880  C011  F065         	movff	?_pad,?_efgtoa
  6215  000884  C012  F066         	movff	?_pad+1,?_efgtoa+1
  6216  000888  EF56  F009         	goto	l1013
  6217  00088C                     l4177:
  6218                           
  6219                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if ((0 ? 
      +                          isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6220  00088C  C0AC  F001         	movff	efgtoa@g,___fpclassifyf@x
  6221  000890  C0AD  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6222  000894  C0AE  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6223  000898  C0AF  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6224  00089C  EC28  F022         	call	___fpclassifyf	;wreg free
  6225  0008A0  5001               	movf	?___fpclassifyf^0,w,c
  6226  0008A2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  6227  0008A4  A4D8               	btfss	status,2,c
  6228  0008A6  EF57  F004         	goto	u4941
  6229  0008AA  EF59  F004         	goto	u4940
  6230  0008AE                     u4941:
  6231  0008AE  EF99  F004         	goto	l4195
  6232  0008B2                     u4940:
  6233  0008B2  0EBF               	movlw	191
  6234  0008B4  6E6C               	movwf	??_efgtoa^0,c
  6235  0008B6  0EFF               	movlw	255
  6236  0008B8  6E6D               	movwf	(??_efgtoa+1)^0,c
  6237  0008BA  506B               	movf	efgtoa@c^0,w,c
  6238  0008BC  6E6E               	movwf	(??_efgtoa+2)^0,c
  6239  0008BE  6A6F               	clrf	(??_efgtoa+3)^0,c
  6240  0008C0  506C               	movf	??_efgtoa^0,w,c
  6241  0008C2  266E               	addwf	(??_efgtoa+2)^0,f,c
  6242  0008C4  506D               	movf	(??_efgtoa+1)^0,w,c
  6243  0008C6  226F               	addwfc	(??_efgtoa+3)^0,f,c
  6244  0008C8  506F               	movf	(??_efgtoa+3)^0,w,c
  6245  0008CA  E10A               	bnz	u4950
  6246  0008CC  0E1A               	movlw	26
  6247  0008CE  5C6E               	subwf	(??_efgtoa+2)^0,w,c
  6248  0008D0  A0D8               	btfss	status,0,c
  6249  0008D2  EF6D  F004         	goto	u4951
  6250  0008D6  EF70  F004         	goto	u4950
  6251  0008DA                     u4951:
  6252  0008DA  0E01               	movlw	1
  6253  0008DC  EF71  F004         	goto	u4960
  6254  0008E0                     u4950:
  6255  0008E0  0E00               	movlw	0
  6256  0008E2                     u4960:
  6257  0008E2  0100               	movlb	0	; () banked
  6258  0008E4  6F88               	movwf	_efgtoa$772& (0+255),b
  6259  0008E6  6B89               	clrf	(_efgtoa$772+1)& (0+255),b
  6260  0008E8                     
  6261                           ; BSR set to: 0
  6262  0008E8  5188               	movf	_efgtoa$772& (0+255),w,b
  6263  0008EA  1189               	iorwf	(_efgtoa$772+1)& (0+255),w,b
  6264  0008EC  B4D8               	btfsc	status,2,c
  6265  0008EE  EF7B  F004         	goto	u4971
  6266  0008F2  EF7D  F004         	goto	u4970
  6267  0008F6                     u4971:
  6268  0008F6  EF8B  F004         	goto	l4187
  6269  0008FA                     u4970:
  6270  0008FA                     
  6271                           ; BSR set to: 0
  6272                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             strcp
      +                          y(&dbuf[n], "NAN");
  6273  0008FA  0E08               	movlw	low _dbuf
  6274  0008FC  25B2               	addwf	efgtoa@n& (0+255),w,b
  6275  0008FE  6E01               	movwf	strcpy@dest^0,c
  6276  000900  0E01               	movlw	high _dbuf
  6277  000902  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6278  000904  6E02               	movwf	(strcpy@dest+1)^0,c
  6279  000906  0EEA               	movlw	low STR_36
  6280  000908  6E03               	movwf	strcpy@src^0,c
  6281  00090A  0E06               	movlw	high STR_36
  6282  00090C  6E04               	movwf	(strcpy@src+1)^0,c
  6283  00090E  ECB9  F026         	call	_strcpy	;wreg free
  6284                           
  6285                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } else {
  6286  000912  EF2D  F004         	goto	l4171
  6287  000916                     l4187:
  6288                           
  6289                           ; BSR set to: 0
  6290                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             strcp
      +                          y(&dbuf[n], "nan");
  6291  000916  0E08               	movlw	low _dbuf
  6292  000918  25B2               	addwf	efgtoa@n& (0+255),w,b
  6293  00091A  6E01               	movwf	strcpy@dest^0,c
  6294  00091C  0E01               	movlw	high _dbuf
  6295  00091E  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6296  000920  6E02               	movwf	(strcpy@dest+1)^0,c
  6297  000922  0EF2               	movlw	low STR_37
  6298  000924  6E03               	movwf	strcpy@src^0,c
  6299  000926  0E06               	movlw	high STR_37
  6300  000928  6E04               	movwf	(strcpy@src+1)^0,c
  6301  00092A  ECB9  F026         	call	_strcpy	;wreg free
  6302  00092E  EF2D  F004         	goto	l4171
  6303  000932                     l4195:
  6304                           
  6305                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  6306  000932  0E00               	movlw	0
  6307  000934  0100               	movlb	0	; () banked
  6308  000936  6FB4               	movwf	efgtoa@u& (0+255),b
  6309  000938  0E00               	movlw	0
  6310  00093A  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  6311  00093C  0E80               	movlw	128
  6312  00093E  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  6313  000940  0E3F               	movlw	63
  6314  000942  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  6315                           
  6316                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  6317  000944  0E00               	movlw	0
  6318  000946  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  6319  000948  0E00               	movlw	0
  6320  00094A  6FB0               	movwf	efgtoa@e& (0+255),b
  6321  00094C                     
  6322                           ; BSR set to: 0
  6323                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g == 0.
      +                          0)) {
  6324  00094C  C0AC  F001         	movff	efgtoa@g,___fleq@ff1
  6325  000950  C0AD  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  6326  000954  C0AE  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  6327  000958  C0AF  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  6328  00095C  0E00               	movlw	0
  6329  00095E  6E05               	movwf	___fleq@ff2^0,c
  6330  000960  0E00               	movlw	0
  6331  000962  6E06               	movwf	(___fleq@ff2+1)^0,c
  6332  000964  0E00               	movlw	0
  6333  000966  6E07               	movwf	(___fleq@ff2+2)^0,c
  6334  000968  0E00               	movlw	0
  6335  00096A  6E08               	movwf	(___fleq@ff2+3)^0,c
  6336  00096C  EC94  F024         	call	___fleq	;wreg free
  6337  000970  B0D8               	btfsc	status,0,c
  6338  000972  EFBD  F004         	goto	u4981
  6339  000976  EFBF  F004         	goto	u4980
  6340  00097A                     u4981:
  6341  00097A  EF42  F005         	goto	l4213
  6342  00097E                     u4980:
  6343  00097E  EFDE  F004         	goto	l4205
  6344  000982                     l4201:
  6345                           
  6346                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             u = u
      +                          *10.0;
  6347  000982  C0B4  F00F         	movff	efgtoa@u,___flmul@b
  6348  000986  C0B5  F010         	movff	efgtoa@u+1,___flmul@b+1
  6349  00098A  C0B6  F011         	movff	efgtoa@u+2,___flmul@b+2
  6350  00098E  C0B7  F012         	movff	efgtoa@u+3,___flmul@b+3
  6351  000992  0E00               	movlw	0
  6352  000994  6E13               	movwf	___flmul@a^0,c
  6353  000996  0E00               	movlw	0
  6354  000998  6E14               	movwf	(___flmul@a+1)^0,c
  6355  00099A  0E20               	movlw	32
  6356  00099C  6E15               	movwf	(___flmul@a+2)^0,c
  6357  00099E  0E41               	movlw	65
  6358  0009A0  6E16               	movwf	(___flmul@a+3)^0,c
  6359  0009A2  ECFC  F018         	call	___flmul	;wreg free
  6360  0009A6  C00F  F0B4         	movff	?___flmul,efgtoa@u
  6361  0009AA  C010  F0B5         	movff	?___flmul+1,efgtoa@u+1
  6362  0009AE  C011  F0B6         	movff	?___flmul+2,efgtoa@u+2
  6363  0009B2  C012  F0B7         	movff	?___flmul+3,efgtoa@u+3
  6364  0009B6                     
  6365                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             ++e;
  6366  0009B6  0100               	movlb	0	; () banked
  6367  0009B8  4BB0               	infsnz	efgtoa@e& (0+255),f,b
  6368  0009BA  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  6369  0009BC                     l4205:
  6370                           
  6371                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         while (!(
      +                          g < (u*10.0))) {
  6372  0009BC  C0AC  F038         	movff	efgtoa@g,___flge@ff1
  6373  0009C0  C0AD  F039         	movff	efgtoa@g+1,___flge@ff1+1
  6374  0009C4  C0AE  F03A         	movff	efgtoa@g+2,___flge@ff1+2
  6375  0009C8  C0AF  F03B         	movff	efgtoa@g+3,___flge@ff1+3
  6376  0009CC  0E00               	movlw	0
  6377  0009CE  6E13               	movwf	___flmul@a^0,c
  6378  0009D0  0E00               	movlw	0
  6379  0009D2  6E14               	movwf	(___flmul@a+1)^0,c
  6380  0009D4  0E20               	movlw	32
  6381  0009D6  6E15               	movwf	(___flmul@a+2)^0,c
  6382  0009D8  0E41               	movlw	65
  6383  0009DA  6E16               	movwf	(___flmul@a+3)^0,c
  6384  0009DC  C0B4  F00F         	movff	efgtoa@u,___flmul@b
  6385  0009E0  C0B5  F010         	movff	efgtoa@u+1,___flmul@b+1
  6386  0009E4  C0B6  F011         	movff	efgtoa@u+2,___flmul@b+2
  6387  0009E8  C0B7  F012         	movff	efgtoa@u+3,___flmul@b+3
  6388  0009EC  ECFC  F018         	call	___flmul	;wreg free
  6389  0009F0  C00F  F03C         	movff	?___flmul,___flge@ff2
  6390  0009F4  C010  F03D         	movff	?___flmul+1,___flge@ff2+1
  6391  0009F8  C011  F03E         	movff	?___flmul+2,___flge@ff2+2
  6392  0009FC  C012  F03F         	movff	?___flmul+3,___flge@ff2+3
  6393  000A00  ECA6  F021         	call	___flge	;wreg free
  6394  000A04  B0D8               	btfsc	status,0,c
  6395  000A06  EF07  F005         	goto	u4991
  6396  000A0A  EF09  F005         	goto	u4990
  6397  000A0E                     u4991:
  6398  000A0E  EFC1  F004         	goto	l4201
  6399  000A12                     u4990:
  6400  000A12  EF29  F005         	goto	l4211
  6401  000A16                     l4207:
  6402                           
  6403                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             u = u
      +                          /10.0;
  6404  000A16  C0B4  F038         	movff	efgtoa@u,___fldiv@b
  6405  000A1A  C0B5  F039         	movff	efgtoa@u+1,___fldiv@b+1
  6406  000A1E  C0B6  F03A         	movff	efgtoa@u+2,___fldiv@b+2
  6407  000A22  C0B7  F03B         	movff	efgtoa@u+3,___fldiv@b+3
  6408  000A26  0E00               	movlw	0
  6409  000A28  6E3C               	movwf	___fldiv@a^0,c
  6410  000A2A  0E00               	movlw	0
  6411  000A2C  6E3D               	movwf	(___fldiv@a+1)^0,c
  6412  000A2E  0E20               	movlw	32
  6413  000A30  6E3E               	movwf	(___fldiv@a+2)^0,c
  6414  000A32  0E41               	movlw	65
  6415  000A34  6E3F               	movwf	(___fldiv@a+3)^0,c
  6416  000A36  EC11  F01B         	call	___fldiv	;wreg free
  6417  000A3A  C038  F0B4         	movff	?___fldiv,efgtoa@u
  6418  000A3E  C039  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  6419  000A42  C03A  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  6420  000A46  C03B  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  6421  000A4A                     
  6422                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             --e;
  6423  000A4A  0100               	movlb	0	; () banked
  6424  000A4C  07B0               	decf	efgtoa@e& (0+255),f,b
  6425  000A4E  A0D8               	btfss	status,0,c
  6426  000A50  07B1               	decf	(efgtoa@e+1)& (0+255),f,b
  6427  000A52                     l4211:
  6428                           
  6429                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         while (g 
      +                          < u) {
  6430  000A52  C0AC  F038         	movff	efgtoa@g,___flge@ff1
  6431  000A56  C0AD  F039         	movff	efgtoa@g+1,___flge@ff1+1
  6432  000A5A  C0AE  F03A         	movff	efgtoa@g+2,___flge@ff1+2
  6433  000A5E  C0AF  F03B         	movff	efgtoa@g+3,___flge@ff1+3
  6434  000A62  C0B4  F03C         	movff	efgtoa@u,___flge@ff2
  6435  000A66  C0B5  F03D         	movff	efgtoa@u+1,___flge@ff2+1
  6436  000A6A  C0B6  F03E         	movff	efgtoa@u+2,___flge@ff2+2
  6437  000A6E  C0B7  F03F         	movff	efgtoa@u+3,___flge@ff2+3
  6438  000A72  ECA6  F021         	call	___flge	;wreg free
  6439  000A76  A0D8               	btfss	status,0,c
  6440  000A78  EF40  F005         	goto	u5001
  6441  000A7C  EF42  F005         	goto	u5000
  6442  000A80                     u5001:
  6443  000A80  EF0B  F005         	goto	l4207
  6444  000A84                     u5000:
  6445  000A84                     l4213:
  6446                           
  6447                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = tolowe
      +                          r((int)c);
  6448  000A84  C06B  F007         	movff	efgtoa@c,tolower@c
  6449  000A88  6A08               	clrf	(tolower@c+1)^0,c
  6450  000A8A  EC5B  F026         	call	_tolower	;wreg free
  6451  000A8E  5007               	movf	?_tolower^0,w,c
  6452  000A90  0100               	movlb	0	; () banked
  6453  000A92  6FA1               	movwf	efgtoa@mode& (0+255),b
  6454  000A94                     
  6455                           ; BSR set to: 0
  6456                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = mode;
  6457  000A94  C0A1  F09E         	movff	efgtoa@mode,efgtoa@nmode
  6458  000A98                     
  6459                           ; BSR set to: 0
  6460                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode == '
      +                          g') {
  6461  000A98  0E67               	movlw	103
  6462  000A9A  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  6463  000A9C  A4D8               	btfss	status,2,c
  6464  000A9E  EF53  F005         	goto	u5011
  6465  000AA2  EF55  F005         	goto	u5010
  6466  000AA6                     u5011:
  6467  000AA6  EF7B  F005         	goto	l4227
  6468  000AAA                     u5010:
  6469  000AAA                     
  6470                           ; BSR set to: 0
  6471                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec == 0) 
      +                          {
  6472  000AAA  51ED               	movf	_prec& (0+255),w,b
  6473  000AAC  11EE               	iorwf	(_prec+1)& (0+255),w,b
  6474  000AAE  A4D8               	btfss	status,2,c
  6475  000AB0  EF5C  F005         	goto	u5021
  6476  000AB4  EF5E  F005         	goto	u5020
  6477  000AB8                     u5021:
  6478  000AB8  EF62  F005         	goto	l4223
  6479  000ABC                     u5020:
  6480  000ABC                     
  6481                           ; BSR set to: 0
  6482                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  6483  000ABC  0E00               	movlw	0
  6484  000ABE  6FEE               	movwf	(_prec+1)& (0+255),b
  6485  000AC0  0E01               	movlw	1
  6486  000AC2  6FED               	movwf	_prec& (0+255),b
  6487  000AC4                     l4223:
  6488                           
  6489                           ; BSR set to: 0
  6490                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = (0 < 
      +                          prec) ? prec : 6;
  6491  000AC4  BFEE               	btfsc	(_prec+1)& (0+255),7,b
  6492  000AC6  EF6F  F005         	goto	u5030
  6493  000ACA  51EE               	movf	(_prec+1)& (0+255),w,b
  6494  000ACC  E106               	bnz	u5031
  6495  000ACE  05ED               	decf	_prec& (0+255),w,b
  6496  000AD0  B0D8               	btfsc	status,0,c
  6497  000AD2  EF6D  F005         	goto	u5031
  6498  000AD6  EF6F  F005         	goto	u5030
  6499  000ADA                     u5031:
  6500  000ADA  EF75  F005         	goto	l1031
  6501  000ADE                     u5030:
  6502  000ADE                     l4225:
  6503                           
  6504                           ; BSR set to: 0
  6505  000ADE  0E00               	movlw	0
  6506  000AE0  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  6507  000AE2  0E06               	movlw	6
  6508  000AE4  6F9C               	movwf	efgtoa@p& (0+255),b
  6509  000AE6  EF84  F005         	goto	l4233
  6510  000AEA                     l1031:
  6511                           
  6512                           ; BSR set to: 0
  6513  000AEA  C0ED  F09C         	movff	_prec,efgtoa@p
  6514  000AEE  C0EE  F09D         	movff	_prec+1,efgtoa@p+1
  6515  000AF2  EF84  F005         	goto	l4233
  6516  000AF6                     l4227:
  6517                           
  6518                           ; BSR set to: 0
  6519                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = (prec
      +                           < 0) ? 6 : prec;
  6520  000AF6  BFEE               	btfsc	(_prec+1)& (0+255),7,b
  6521  000AF8  EF80  F005         	goto	u5041
  6522  000AFC  EF82  F005         	goto	u5040
  6523  000B00                     u5041:
  6524  000B00  EF6F  F005         	goto	l4225
  6525  000B04                     u5040:
  6526  000B04  EF75  F005         	goto	l1031
  6527  000B08                     l4233:
  6528                           
  6529                           ; BSR set to: 0
  6530                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode == '
      +                          g') {
  6531  000B08  0E67               	movlw	103
  6532  000B0A  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  6533  000B0C  A4D8               	btfss	status,2,c
  6534  000B0E  EF8B  F005         	goto	u5051
  6535  000B12  EF8D  F005         	goto	u5050
  6536  000B16                     u5051:
  6537  000B16  EFBC  F005         	goto	l4243
  6538  000B1A                     u5050:
  6539  000B1A                     
  6540                           ; BSR set to: 0
  6541                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (!(e <
      +                           -4) && !((p - 1) < e)) {
  6542  000B1A  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  6543  000B1C  EF9B  F005         	goto	u5060
  6544  000B20  0EFC               	movlw	252
  6545  000B22  5DB0               	subwf	efgtoa@e& (0+255),w,b
  6546  000B24  0EFF               	movlw	255
  6547  000B26  59B1               	subwfb	(efgtoa@e+1)& (0+255),w,b
  6548  000B28  A0D8               	btfss	status,0,c
  6549  000B2A  EF99  F005         	goto	u5061
  6550  000B2E  EF9B  F005         	goto	u5060
  6551  000B32                     u5061:
  6552  000B32  EFBA  F005         	goto	l4241
  6553  000B36                     u5060:
  6554  000B36                     
  6555                           ; BSR set to: 0
  6556  000B36  0EFF               	movlw	255
  6557  000B38  6E6C               	movwf	??_efgtoa^0,c
  6558  000B3A  0EFF               	movlw	255
  6559  000B3C  6E6D               	movwf	(??_efgtoa+1)^0,c
  6560  000B3E  C09C  F06E         	movff	efgtoa@p,??_efgtoa+2
  6561  000B42  C09D  F06F         	movff	efgtoa@p+1,??_efgtoa+3
  6562  000B46  506C               	movf	??_efgtoa^0,w,c
  6563  000B48  266E               	addwf	(??_efgtoa+2)^0,f,c
  6564  000B4A  506D               	movf	(??_efgtoa+1)^0,w,c
  6565  000B4C  226F               	addwfc	(??_efgtoa+3)^0,f,c
  6566  000B4E  51B0               	movf	efgtoa@e& (0+255),w,b
  6567  000B50  5C6E               	subwf	(??_efgtoa+2)^0,w,c
  6568  000B52  506F               	movf	(??_efgtoa+3)^0,w,c
  6569  000B54  0A80               	xorlw	128
  6570  000B56  6E70               	movwf	(??_efgtoa+4)^0,c
  6571  000B58  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  6572  000B5A  0A80               	xorlw	128
  6573  000B5C  5870               	subwfb	(??_efgtoa+4)^0,w,c
  6574  000B5E  A0D8               	btfss	status,0,c
  6575  000B60  EFB4  F005         	goto	u5071
  6576  000B64  EFB6  F005         	goto	u5070
  6577  000B68                     u5071:
  6578  000B68  EFBA  F005         	goto	l4241
  6579  000B6C                     u5070:
  6580  000B6C                     
  6581                           ; BSR set to: 0
  6582                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             nmode
      +                           = 'f';
  6583  000B6C  0E66               	movlw	102
  6584  000B6E  6F9E               	movwf	efgtoa@nmode& (0+255),b
  6585                           
  6586                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } else {
  6587  000B70  EFBC  F005         	goto	l4243
  6588  000B74                     l4241:
  6589                           
  6590                           ; BSR set to: 0
  6591                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             nmode
      +                           = 'e';
  6592  000B74  0E65               	movlw	101
  6593  000B76  6F9E               	movwf	efgtoa@nmode& (0+255),b
  6594  000B78                     l4243:
  6595                           
  6596                           ; BSR set to: 0
  6597                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  6598  000B78  C09C  F094         	movff	efgtoa@p,efgtoa@m
  6599  000B7C  C09D  F095         	movff	efgtoa@p+1,efgtoa@m+1
  6600  000B80                     
  6601                           ; BSR set to: 0
  6602                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mode ==
      +                           'g') || ((nmode == 'f') && (e < 0))) {
  6603  000B80  0E67               	movlw	103
  6604  000B82  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  6605  000B84  A4D8               	btfss	status,2,c
  6606  000B86  EFC7  F005         	goto	u5081
  6607  000B8A  EFC9  F005         	goto	u5080
  6608  000B8E                     u5081:
  6609  000B8E  EFD9  F005         	goto	l4251
  6610  000B92                     u5080:
  6611  000B92                     
  6612                           ; BSR set to: 0
  6613  000B92  0E66               	movlw	102
  6614  000B94  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  6615  000B96  A4D8               	btfss	status,2,c
  6616  000B98  EFD0  F005         	goto	u5091
  6617  000B9C  EFD2  F005         	goto	u5090
  6618  000BA0                     u5091:
  6619  000BA0  EFDB  F005         	goto	l4253
  6620  000BA4                     u5090:
  6621  000BA4                     
  6622                           ; BSR set to: 0
  6623  000BA4  BFB1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6624  000BA6  EFD9  F005         	goto	u5100
  6625  000BAA  EFD7  F005         	goto	u5101
  6626  000BAE                     u5101:
  6627  000BAE  EFDB  F005         	goto	l4253
  6628  000BB2                     u5100:
  6629  000BB2                     l4251:
  6630                           
  6631                           ; BSR set to: 0
  6632                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  6633  000BB2  4B94               	infsnz	efgtoa@m& (0+255),f,b
  6634  000BB4  2B95               	incf	(efgtoa@m+1)& (0+255),f,b
  6635  000BB6                     l4253:
  6636                           
  6637                           ; BSR set to: 0
  6638                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmode == 
      +                          'f') {
  6639  000BB6  0E66               	movlw	102
  6640  000BB8  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  6641  000BBA  A4D8               	btfss	status,2,c
  6642  000BBC  EFE2  F005         	goto	u5111
  6643  000BC0  EFE4  F005         	goto	u5110
  6644  000BC4                     u5111:
  6645  000BC4  EF04  F006         	goto	l4263
  6646  000BC8                     u5110:
  6647  000BC8                     
  6648                           ; BSR set to: 0
  6649                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (e < 0
      +                          ) {
  6650  000BC8  BFB1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6651  000BCA  EFEB  F005         	goto	u5120
  6652  000BCE  EFE9  F005         	goto	u5121
  6653  000BD2                     u5121:
  6654  000BD2  EFF7  F005         	goto	l4259
  6655  000BD6                     u5120:
  6656  000BD6                     
  6657                           ; BSR set to: 0
  6658                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             u = 1
      +                          .0;
  6659  000BD6  0E00               	movlw	0
  6660  000BD8  6FB4               	movwf	efgtoa@u& (0+255),b
  6661  000BDA  0E00               	movlw	0
  6662  000BDC  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  6663  000BDE  0E80               	movlw	128
  6664  000BE0  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  6665  000BE2  0E3F               	movlw	63
  6666  000BE4  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  6667                           
  6668                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             e = 0
      +                          ;
  6669  000BE6  0E00               	movlw	0
  6670  000BE8  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  6671  000BEA  0E00               	movlw	0
  6672  000BEC  6FB0               	movwf	efgtoa@e& (0+255),b
  6673  000BEE                     l4259:
  6674                           
  6675                           ; BSR set to: 0
  6676                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (!(mod
      +                          e == 'g')) {
  6677  000BEE  0E67               	movlw	103
  6678  000BF0  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  6679  000BF2  B4D8               	btfsc	status,2,c
  6680  000BF4  EFFE  F005         	goto	u5131
  6681  000BF8  EF00  F006         	goto	u5130
  6682  000BFC                     u5131:
  6683  000BFC  EF04  F006         	goto	l4263
  6684  000C00                     u5130:
  6685  000C00                     
  6686                           ; BSR set to: 0
  6687                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             m += 
      +                          e;
  6688  000C00  51B0               	movf	efgtoa@e& (0+255),w,b
  6689  000C02  2794               	addwf	efgtoa@m& (0+255),f,b
  6690  000C04  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  6691  000C06  2395               	addwfc	(efgtoa@m+1)& (0+255),f,b
  6692  000C08                     l4263:
  6693                           
  6694                           ; BSR set to: 0
  6695                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  6696  000C08  0E00               	movlw	0
  6697  000C0A  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  6698  000C0C  0E00               	movlw	0
  6699  000C0E  6FAA               	movwf	efgtoa@i& (0+255),b
  6700  000C10                     
  6701                           ; BSR set to: 0
  6702                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  6703  000C10  C0AC  F0A2         	movff	efgtoa@g,efgtoa@h
  6704  000C14  C0AD  F0A3         	movff	efgtoa@g+1,efgtoa@h+1
  6705  000C18  C0AE  F0A4         	movff	efgtoa@g+2,efgtoa@h+2
  6706  000C1C  C0AF  F0A5         	movff	efgtoa@g+3,efgtoa@h+3
  6707  000C20                     
  6708                           ; BSR set to: 0
  6709                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  6710  000C20  C0B4  F080         	movff	efgtoa@u,efgtoa@ou
  6711  000C24  C0B5  F081         	movff	efgtoa@u+1,efgtoa@ou+1
  6712  000C28  C0B6  F082         	movff	efgtoa@u+2,efgtoa@ou+2
  6713  000C2C  C0B7  F083         	movff	efgtoa@u+3,efgtoa@ou+3
  6714                           
  6715                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i < m)
      +                           {
  6716  000C30  EF95  F006         	goto	l4277
  6717  000C34                     l4269:
  6718                           
  6719                           ; BSR set to: 0
  6720                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = floor
      +                          f(h/u);
  6721  000C34  C0A2  F038         	movff	efgtoa@h,___fldiv@b
  6722  000C38  C0A3  F039         	movff	efgtoa@h+1,___fldiv@b+1
  6723  000C3C  C0A4  F03A         	movff	efgtoa@h+2,___fldiv@b+2
  6724  000C40  C0A5  F03B         	movff	efgtoa@h+3,___fldiv@b+3
  6725  000C44  C0B4  F03C         	movff	efgtoa@u,___fldiv@a
  6726  000C48  C0B5  F03D         	movff	efgtoa@u+1,___fldiv@a+1
  6727  000C4C  C0B6  F03E         	movff	efgtoa@u+2,___fldiv@a+2
  6728  000C50  C0B7  F03F         	movff	efgtoa@u+3,___fldiv@a+3
  6729  000C54  EC11  F01B         	call	___fldiv	;wreg free
  6730  000C58  C038  F051         	movff	?___fldiv,floorf@x
  6731  000C5C  C039  F052         	movff	?___fldiv+1,floorf@x+1
  6732  000C60  C03A  F053         	movff	?___fldiv+2,floorf@x+2
  6733  000C64  C03B  F054         	movff	?___fldiv+3,floorf@x+3
  6734  000C68  ECDE  F01C         	call	_floorf	;wreg free
  6735  000C6C  C051  F0A6         	movff	?_floorf,efgtoa@l
  6736  000C70  C052  F0A7         	movff	?_floorf+1,efgtoa@l+1
  6737  000C74  C053  F0A8         	movff	?_floorf+2,efgtoa@l+2
  6738  000C78  C054  F0A9         	movff	?_floorf+3,efgtoa@l+3
  6739                           
  6740                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = (int)
      +                          l;
  6741  000C7C  C0A6  F028         	movff	efgtoa@l,___fltol@f1
  6742  000C80  C0A7  F029         	movff	efgtoa@l+1,___fltol@f1+1
  6743  000C84  C0A8  F02A         	movff	efgtoa@l+2,___fltol@f1+2
  6744  000C88  C0A9  F02B         	movff	efgtoa@l+3,___fltol@f1+3
  6745  000C8C  EC23  F021         	call	___fltol	;wreg free
  6746  000C90  C028  F098         	movff	?___fltol,efgtoa@d
  6747  000C94  C029  F099         	movff	?___fltol+1,efgtoa@d+1
  6748  000C98                     
  6749                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -= l*u;
  6750  000C98  C0A2  F038         	movff	efgtoa@h,___flsub@b
  6751  000C9C  C0A3  F039         	movff	efgtoa@h+1,___flsub@b+1
  6752  000CA0  C0A4  F03A         	movff	efgtoa@h+2,___flsub@b+2
  6753  000CA4  C0A5  F03B         	movff	efgtoa@h+3,___flsub@b+3
  6754  000CA8  C0B4  F013         	movff	efgtoa@u,___flmul@a
  6755  000CAC  C0B5  F014         	movff	efgtoa@u+1,___flmul@a+1
  6756  000CB0  C0B6  F015         	movff	efgtoa@u+2,___flmul@a+2
  6757  000CB4  C0B7  F016         	movff	efgtoa@u+3,___flmul@a+3
  6758  000CB8  C0A6  F00F         	movff	efgtoa@l,___flmul@b
  6759  000CBC  C0A7  F010         	movff	efgtoa@l+1,___flmul@b+1
  6760  000CC0  C0A8  F011         	movff	efgtoa@l+2,___flmul@b+2
  6761  000CC4  C0A9  F012         	movff	efgtoa@l+3,___flmul@b+3
  6762  000CC8  ECFC  F018         	call	___flmul	;wreg free
  6763  000CCC  C00F  F03C         	movff	?___flmul,___flsub@a
  6764  000CD0  C010  F03D         	movff	?___flmul+1,___flsub@a+1
  6765  000CD4  C011  F03E         	movff	?___flmul+2,___flsub@a+2
  6766  000CD8  C012  F03F         	movff	?___flmul+3,___flsub@a+3
  6767  000CDC  EC39  F027         	call	___flsub	;wreg free
  6768  000CE0  C038  F0A2         	movff	?___flsub,efgtoa@h
  6769  000CE4  C039  F0A3         	movff	?___flsub+1,efgtoa@h+1
  6770  000CE8  C03A  F0A4         	movff	?___flsub+2,efgtoa@h+2
  6771  000CEC  C03B  F0A5         	movff	?___flsub+3,efgtoa@h+3
  6772  000CF0                     
  6773                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = u/10.
      +                          0;
  6774  000CF0  C0B4  F038         	movff	efgtoa@u,___fldiv@b
  6775  000CF4  C0B5  F039         	movff	efgtoa@u+1,___fldiv@b+1
  6776  000CF8  C0B6  F03A         	movff	efgtoa@u+2,___fldiv@b+2
  6777  000CFC  C0B7  F03B         	movff	efgtoa@u+3,___fldiv@b+3
  6778  000D00  0E00               	movlw	0
  6779  000D02  6E3C               	movwf	___fldiv@a^0,c
  6780  000D04  0E00               	movlw	0
  6781  000D06  6E3D               	movwf	(___fldiv@a+1)^0,c
  6782  000D08  0E20               	movlw	32
  6783  000D0A  6E3E               	movwf	(___fldiv@a+2)^0,c
  6784  000D0C  0E41               	movlw	65
  6785  000D0E  6E3F               	movwf	(___fldiv@a+3)^0,c
  6786  000D10  EC11  F01B         	call	___fldiv	;wreg free
  6787  000D14  C038  F0B4         	movff	?___fldiv,efgtoa@u
  6788  000D18  C039  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  6789  000D1C  C03A  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  6790  000D20  C03B  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  6791  000D24                     
  6792                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  6793  000D24  0100               	movlb	0	; () banked
  6794  000D26  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  6795  000D28  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  6796  000D2A                     l4277:
  6797                           
  6798                           ; BSR set to: 0
  6799                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i < m)
      +                           {
  6800  000D2A  5194               	movf	efgtoa@m& (0+255),w,b
  6801  000D2C  5DAA               	subwf	efgtoa@i& (0+255),w,b
  6802  000D2E  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  6803  000D30  0A80               	xorlw	128
  6804  000D32  6E6C               	movwf	??_efgtoa^0,c
  6805  000D34  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  6806  000D36  0A80               	xorlw	128
  6807  000D38  586C               	subwfb	??_efgtoa^0,w,c
  6808  000D3A  A0D8               	btfss	status,0,c
  6809  000D3C  EFA2  F006         	goto	u5141
  6810  000D40  EFA4  F006         	goto	u5140
  6811  000D44                     u5141:
  6812  000D44  EF1A  F006         	goto	l4269
  6813  000D48                     u5140:
  6814  000D48                     
  6815                           ; BSR set to: 0
  6816                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.0;
  6817  000D48  C0B4  F00F         	movff	efgtoa@u,___flmul@b
  6818  000D4C  C0B5  F010         	movff	efgtoa@u+1,___flmul@b+1
  6819  000D50  C0B6  F011         	movff	efgtoa@u+2,___flmul@b+2
  6820  000D54  C0B7  F012         	movff	efgtoa@u+3,___flmul@b+3
  6821  000D58  0E00               	movlw	0
  6822  000D5A  6E13               	movwf	___flmul@a^0,c
  6823  000D5C  0E00               	movlw	0
  6824  000D5E  6E14               	movwf	(___flmul@a+1)^0,c
  6825  000D60  0EA0               	movlw	160
  6826  000D62  6E15               	movwf	(___flmul@a+2)^0,c
  6827  000D64  0E40               	movlw	64
  6828  000D66  6E16               	movwf	(___flmul@a+3)^0,c
  6829  000D68  ECFC  F018         	call	___flmul	;wreg free
  6830  000D6C  C00F  F0A6         	movff	?___flmul,efgtoa@l
  6831  000D70  C010  F0A7         	movff	?___flmul+1,efgtoa@l+1
  6832  000D74  C011  F0A8         	movff	?___flmul+2,efgtoa@l+2
  6833  000D78  C012  F0A9         	movff	?___flmul+3,efgtoa@l+3
  6834  000D7C                     
  6835                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < l) {
  6836  000D7C  C0A2  F038         	movff	efgtoa@h,___flge@ff1
  6837  000D80  C0A3  F039         	movff	efgtoa@h+1,___flge@ff1+1
  6838  000D84  C0A4  F03A         	movff	efgtoa@h+2,___flge@ff1+2
  6839  000D88  C0A5  F03B         	movff	efgtoa@h+3,___flge@ff1+3
  6840  000D8C  C0A6  F03C         	movff	efgtoa@l,___flge@ff2
  6841  000D90  C0A7  F03D         	movff	efgtoa@l+1,___flge@ff2+1
  6842  000D94  C0A8  F03E         	movff	efgtoa@l+2,___flge@ff2+2
  6843  000D98  C0A9  F03F         	movff	efgtoa@l+3,___flge@ff2+3
  6844  000D9C  ECA6  F021         	call	___flge	;wreg free
  6845  000DA0  B0D8               	btfsc	status,0,c
  6846  000DA2  EFD5  F006         	goto	u5151
  6847  000DA6  EFD7  F006         	goto	u5150
  6848  000DAA                     u5151:
  6849  000DAA  EFE2  F006         	goto	l4285
  6850  000DAE                     u5150:
  6851  000DAE                     
  6852                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 0.0;
  6853  000DAE  0E00               	movlw	0
  6854  000DB0  0100               	movlb	0	; () banked
  6855  000DB2  6FA6               	movwf	efgtoa@l& (0+255),b
  6856  000DB4  0E00               	movlw	0
  6857  000DB6  6FA7               	movwf	(efgtoa@l+1)& (0+255),b
  6858  000DB8  0E00               	movlw	0
  6859  000DBA  6FA8               	movwf	(efgtoa@l+2)& (0+255),b
  6860  000DBC  0E00               	movlw	0
  6861  000DBE  6FA9               	movwf	(efgtoa@l+3)& (0+255),b
  6862                           
  6863                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  6864  000DC0  EF0B  F007         	goto	l4291
  6865  000DC4                     l4285:
  6866                           
  6867                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if ((h ==
      +                           l) && !(d % 2)) {
  6868  000DC4  C0A2  F001         	movff	efgtoa@h,___fleq@ff1
  6869  000DC8  C0A3  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  6870  000DCC  C0A4  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  6871  000DD0  C0A5  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  6872  000DD4  C0A6  F005         	movff	efgtoa@l,___fleq@ff2
  6873  000DD8  C0A7  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  6874  000DDC  C0A8  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  6875  000DE0  C0A9  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  6876  000DE4  EC94  F024         	call	___fleq	;wreg free
  6877  000DE8  A0D8               	btfss	status,0,c
  6878  000DEA  EFF9  F006         	goto	u5161
  6879  000DEE  EFFB  F006         	goto	u5160
  6880  000DF2                     u5161:
  6881  000DF2  EF0B  F007         	goto	l4291
  6882  000DF6                     u5160:
  6883  000DF6  0100               	movlb	0	; () banked
  6884  000DF8  B198               	btfsc	efgtoa@d& (0+255),0,b
  6885  000DFA  EF01  F007         	goto	u5171
  6886  000DFE  EF03  F007         	goto	u5170
  6887  000E02                     u5171:
  6888  000E02  EF0B  F007         	goto	l4291
  6889  000E06                     u5170:
  6890  000E06                     
  6891                           ; BSR set to: 0
  6892                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             l = 0
      +                          .0;
  6893  000E06  0E00               	movlw	0
  6894  000E08  6FA6               	movwf	efgtoa@l& (0+255),b
  6895  000E0A  0E00               	movlw	0
  6896  000E0C  6FA7               	movwf	(efgtoa@l+1)& (0+255),b
  6897  000E0E  0E00               	movlw	0
  6898  000E10  6FA8               	movwf	(efgtoa@l+2)& (0+255),b
  6899  000E12  0E00               	movlw	0
  6900  000E14  6FA9               	movwf	(efgtoa@l+3)& (0+255),b
  6901  000E16                     l4291:
  6902                           
  6903                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + l;
  6904  000E16  C0AC  F028         	movff	efgtoa@g,___fladd@b
  6905  000E1A  C0AD  F029         	movff	efgtoa@g+1,___fladd@b+1
  6906  000E1E  C0AE  F02A         	movff	efgtoa@g+2,___fladd@b+2
  6907  000E22  C0AF  F02B         	movff	efgtoa@g+3,___fladd@b+3
  6908  000E26  C0A6  F02C         	movff	efgtoa@l,___fladd@a
  6909  000E2A  C0A7  F02D         	movff	efgtoa@l+1,___fladd@a+1
  6910  000E2E  C0A8  F02E         	movff	efgtoa@l+2,___fladd@a+2
  6911  000E32  C0A9  F02F         	movff	efgtoa@l+3,___fladd@a+3
  6912  000E36  EC37  F012         	call	___fladd	;wreg free
  6913  000E3A  C028  F0A2         	movff	?___fladd,efgtoa@h
  6914  000E3E  C029  F0A3         	movff	?___fladd+1,efgtoa@h+1
  6915  000E42  C02A  F0A4         	movff	?___fladd+2,efgtoa@h+2
  6916  000E46  C02B  F0A5         	movff	?___fladd+3,efgtoa@h+3
  6917  000E4A                     
  6918                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  6919  000E4A  C080  F0B4         	movff	efgtoa@ou,efgtoa@u
  6920  000E4E  C081  F0B5         	movff	efgtoa@ou+1,efgtoa@u+1
  6921  000E52  C082  F0B6         	movff	efgtoa@ou+2,efgtoa@u+2
  6922  000E56  C083  F0B7         	movff	efgtoa@ou+3,efgtoa@u+3
  6923  000E5A                     
  6924                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nmode =
      +                          = 'e') ? 0 : e;
  6925  000E5A  0E65               	movlw	101
  6926  000E5C  0100               	movlb	0	; () banked
  6927  000E5E  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  6928  000E60  B4D8               	btfsc	status,2,c
  6929  000E62  EF35  F007         	goto	u5181
  6930  000E66  EF37  F007         	goto	u5180
  6931  000E6A                     u5181:
  6932  000E6A  EF3D  F007         	goto	l4299
  6933  000E6E                     u5180:
  6934  000E6E                     
  6935                           ; BSR set to: 0
  6936  000E6E  C0B0  F096         	movff	efgtoa@e,efgtoa@ne
  6937  000E72  C0B1  F097         	movff	efgtoa@e+1,efgtoa@ne+1
  6938  000E76  EF41  F007         	goto	l1057
  6939  000E7A                     l4299:
  6940                           
  6941                           ; BSR set to: 0
  6942  000E7A  0E00               	movlw	0
  6943  000E7C  6F97               	movwf	(efgtoa@ne+1)& (0+255),b
  6944  000E7E  0E00               	movlw	0
  6945  000E80  6F96               	movwf	efgtoa@ne& (0+255),b
  6946  000E82                     l1057:
  6947                           
  6948                           ; BSR set to: 0
  6949                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  6950  000E82  0E00               	movlw	0
  6951  000E84  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  6952  000E86  0E00               	movlw	0
  6953  000E88  6F92               	movwf	efgtoa@pp& (0+255),b
  6954                           
  6955                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  6956  000E8A  0E00               	movlw	0
  6957  000E8C  6F91               	movwf	(efgtoa@t+1)& (0+255),b
  6958  000E8E  0E00               	movlw	0
  6959  000E90  6F90               	movwf	efgtoa@t& (0+255),b
  6960                           
  6961                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  6962  000E92  0E00               	movlw	0
  6963  000E94  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  6964  000E96  0E00               	movlw	0
  6965  000E98  6FAA               	movwf	efgtoa@i& (0+255),b
  6966                           
  6967                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((i < m
      +                          ) && (n < (80 - 5))) {
  6968  000E9A  EF3C  F008         	goto	l4349
  6969  000E9E                     l4301:
  6970                           
  6971                           ; BSR set to: 0
  6972                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = floor
      +                          f(h/u);
  6973  000E9E  C0A2  F038         	movff	efgtoa@h,___fldiv@b
  6974  000EA2  C0A3  F039         	movff	efgtoa@h+1,___fldiv@b+1
  6975  000EA6  C0A4  F03A         	movff	efgtoa@h+2,___fldiv@b+2
  6976  000EAA  C0A5  F03B         	movff	efgtoa@h+3,___fldiv@b+3
  6977  000EAE  C0B4  F03C         	movff	efgtoa@u,___fldiv@a
  6978  000EB2  C0B5  F03D         	movff	efgtoa@u+1,___fldiv@a+1
  6979  000EB6  C0B6  F03E         	movff	efgtoa@u+2,___fldiv@a+2
  6980  000EBA  C0B7  F03F         	movff	efgtoa@u+3,___fldiv@a+3
  6981  000EBE  EC11  F01B         	call	___fldiv	;wreg free
  6982  000EC2  C038  F051         	movff	?___fldiv,floorf@x
  6983  000EC6  C039  F052         	movff	?___fldiv+1,floorf@x+1
  6984  000ECA  C03A  F053         	movff	?___fldiv+2,floorf@x+2
  6985  000ECE  C03B  F054         	movff	?___fldiv+3,floorf@x+3
  6986  000ED2  ECDE  F01C         	call	_floorf	;wreg free
  6987  000ED6  C051  F0A6         	movff	?_floorf,efgtoa@l
  6988  000EDA  C052  F0A7         	movff	?_floorf+1,efgtoa@l+1
  6989  000EDE  C053  F0A8         	movff	?_floorf+2,efgtoa@l+2
  6990  000EE2  C054  F0A9         	movff	?_floorf+3,efgtoa@l+3
  6991                           
  6992                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = (int)
      +                          l;
  6993  000EE6  C0A6  F028         	movff	efgtoa@l,___fltol@f1
  6994  000EEA  C0A7  F029         	movff	efgtoa@l+1,___fltol@f1+1
  6995  000EEE  C0A8  F02A         	movff	efgtoa@l+2,___fltol@f1+2
  6996  000EF2  C0A9  F02B         	movff	efgtoa@l+3,___fltol@f1+3
  6997  000EF6  EC23  F021         	call	___fltol	;wreg free
  6998  000EFA  C028  F098         	movff	?___fltol,efgtoa@d
  6999  000EFE  C029  F099         	movff	?___fltol+1,efgtoa@d+1
  7000  000F02                     
  7001                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (!(fla
      +                          gs & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  7002  000F02  0100               	movlb	0	; () banked
  7003  000F04  B9EF               	btfsc	_flags& (0+255),4,b
  7004  000F06  EF87  F007         	goto	u5191
  7005  000F0A  EF89  F007         	goto	u5190
  7006  000F0E                     u5191:
  7007  000F0E  EFA6  F007         	goto	l4313
  7008  000F12                     u5190:
  7009  000F12                     
  7010                           ; BSR set to: 0
  7011  000F12  5198               	movf	efgtoa@d& (0+255),w,b
  7012  000F14  1199               	iorwf	(efgtoa@d+1)& (0+255),w,b
  7013  000F16  A4D8               	btfss	status,2,c
  7014  000F18  EF90  F007         	goto	u5201
  7015  000F1C  EF92  F007         	goto	u5200
  7016  000F20                     u5201:
  7017  000F20  EFA6  F007         	goto	l4313
  7018  000F24                     u5200:
  7019  000F24                     
  7020                           ; BSR set to: 0
  7021  000F24  0E67               	movlw	103
  7022  000F26  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  7023  000F28  A4D8               	btfss	status,2,c
  7024  000F2A  EF99  F007         	goto	u5211
  7025  000F2E  EF9B  F007         	goto	u5210
  7026  000F32                     u5211:
  7027  000F32  EFA6  F007         	goto	l4313
  7028  000F36                     u5210:
  7029  000F36                     
  7030                           ; BSR set to: 0
  7031  000F36  BF97               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  7032  000F38  EFA2  F007         	goto	u5220
  7033  000F3C  EFA0  F007         	goto	u5221
  7034  000F40                     u5221:
  7035  000F40  EFA6  F007         	goto	l4313
  7036  000F44                     u5220:
  7037  000F44                     
  7038                           ; BSR set to: 0
  7039                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             ++t;
  7040  000F44  4B90               	infsnz	efgtoa@t& (0+255),f,b
  7041  000F46  2B91               	incf	(efgtoa@t+1)& (0+255),f,b
  7042                           
  7043                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } else {
  7044  000F48  EFF0  F007         	goto	l4341
  7045  000F4C                     l4313:
  7046                           
  7047                           ; BSR set to: 0
  7048                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             if (!
      +                          pp && (ne < 0)) {
  7049  000F4C  5192               	movf	efgtoa@pp& (0+255),w,b
  7050  000F4E  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  7051  000F50  A4D8               	btfss	status,2,c
  7052  000F52  EFAD  F007         	goto	u5231
  7053  000F56  EFAF  F007         	goto	u5230
  7054  000F5A                     u5231:
  7055  000F5A  EFD9  F007         	goto	l4333
  7056  000F5E                     u5230:
  7057  000F5E                     
  7058                           ; BSR set to: 0
  7059  000F5E  BF97               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  7060  000F60  EFB6  F007         	goto	u5240
  7061  000F64  EFB4  F007         	goto	u5241
  7062  000F68                     u5241:
  7063  000F68  EFD9  F007         	goto	l4333
  7064  000F6C                     u5240:
  7065  000F6C                     
  7066                           ; BSR set to: 0
  7067                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:                 d
      +                          buf[n++] = '.';
  7068  000F6C  0E08               	movlw	low _dbuf
  7069  000F6E  25B2               	addwf	efgtoa@n& (0+255),w,b
  7070  000F70  6ED9               	movwf	fsr2l,c
  7071  000F72  0E01               	movlw	high _dbuf
  7072  000F74  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7073  000F76  6EDA               	movwf	fsr2h,c
  7074  000F78  0E2E               	movlw	46
  7075  000F7A  6EDF               	movwf	indf2,c
  7076  000F7C                     
  7077                           ; BSR set to: 0
  7078  000F7C  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  7079  000F7E  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  7080  000F80                     
  7081                           ; BSR set to: 0
  7082                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:                 -
      +                          -w;
  7083  000F80  079F               	decf	efgtoa@w& (0+255),f,b
  7084  000F82  A0D8               	btfss	status,0,c
  7085  000F84  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  7086  000F86                     
  7087                           ; BSR set to: 0
  7088                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:                 p
      +                          p = 1;
  7089  000F86  0E00               	movlw	0
  7090  000F88  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  7091  000F8A  0E01               	movlw	1
  7092  000F8C  6F92               	movwf	efgtoa@pp& (0+255),b
  7093  000F8E  EFD9  F007         	goto	l4333
  7094  000F92                     l4325:
  7095                           
  7096                           ; BSR set to: 0
  7097                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:                 d
      +                          buf[n++] = '0';
  7098  000F92  0E08               	movlw	low _dbuf
  7099  000F94  25B2               	addwf	efgtoa@n& (0+255),w,b
  7100  000F96  6ED9               	movwf	fsr2l,c
  7101  000F98  0E01               	movlw	high _dbuf
  7102  000F9A  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7103  000F9C  6EDA               	movwf	fsr2h,c
  7104  000F9E  0E30               	movlw	48
  7105  000FA0  6EDF               	movwf	indf2,c
  7106  000FA2                     
  7107                           ; BSR set to: 0
  7108  000FA2  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  7109  000FA4  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  7110  000FA6                     
  7111                           ; BSR set to: 0
  7112                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:                 -
      +                          -w;
  7113  000FA6  079F               	decf	efgtoa@w& (0+255),f,b
  7114  000FA8  A0D8               	btfss	status,0,c
  7115  000FAA  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  7116  000FAC                     
  7117                           ; BSR set to: 0
  7118                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:                 -
      +                          -t;
  7119  000FAC  0790               	decf	efgtoa@t& (0+255),f,b
  7120  000FAE  A0D8               	btfss	status,0,c
  7121  000FB0  0791               	decf	(efgtoa@t+1)& (0+255),f,b
  7122  000FB2                     l4333:
  7123                           
  7124                           ; BSR set to: 0
  7125                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             while
      +                           (t) {
  7126  000FB2  5190               	movf	efgtoa@t& (0+255),w,b
  7127  000FB4  1191               	iorwf	(efgtoa@t+1)& (0+255),w,b
  7128  000FB6  A4D8               	btfss	status,2,c
  7129  000FB8  EFE0  F007         	goto	u5251
  7130  000FBC  EFE2  F007         	goto	u5250
  7131  000FC0                     u5251:
  7132  000FC0  EFC9  F007         	goto	l4325
  7133  000FC4                     u5250:
  7134  000FC4                     
  7135                           ; BSR set to: 0
  7136                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             dbuf[
      +                          n++] = '0' + d;
  7137  000FC4  0E08               	movlw	low _dbuf
  7138  000FC6  25B2               	addwf	efgtoa@n& (0+255),w,b
  7139  000FC8  6ED9               	movwf	fsr2l,c
  7140  000FCA  0E01               	movlw	high _dbuf
  7141  000FCC  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7142  000FCE  6EDA               	movwf	fsr2h,c
  7143  000FD0  5198               	movf	efgtoa@d& (0+255),w,b
  7144  000FD2  0F30               	addlw	48
  7145  000FD4  6EDF               	movwf	indf2,c
  7146  000FD6                     
  7147                           ; BSR set to: 0
  7148  000FD6  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  7149  000FD8  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  7150  000FDA                     
  7151                           ; BSR set to: 0
  7152                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             --w;
  7153  000FDA  079F               	decf	efgtoa@w& (0+255),f,b
  7154  000FDC  A0D8               	btfss	status,0,c
  7155  000FDE  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  7156  000FE0                     l4341:
  7157                           
  7158                           ; BSR set to: 0
  7159                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -= l*u;
  7160  000FE0  C0A2  F038         	movff	efgtoa@h,___flsub@b
  7161  000FE4  C0A3  F039         	movff	efgtoa@h+1,___flsub@b+1
  7162  000FE8  C0A4  F03A         	movff	efgtoa@h+2,___flsub@b+2
  7163  000FEC  C0A5  F03B         	movff	efgtoa@h+3,___flsub@b+3
  7164  000FF0  C0B4  F013         	movff	efgtoa@u,___flmul@a
  7165  000FF4  C0B5  F014         	movff	efgtoa@u+1,___flmul@a+1
  7166  000FF8  C0B6  F015         	movff	efgtoa@u+2,___flmul@a+2
  7167  000FFC  C0B7  F016         	movff	efgtoa@u+3,___flmul@a+3
  7168  001000  C0A6  F00F         	movff	efgtoa@l,___flmul@b
  7169  001004  C0A7  F010         	movff	efgtoa@l+1,___flmul@b+1
  7170  001008  C0A8  F011         	movff	efgtoa@l+2,___flmul@b+2
  7171  00100C  C0A9  F012         	movff	efgtoa@l+3,___flmul@b+3
  7172  001010  ECFC  F018         	call	___flmul	;wreg free
  7173  001014  C00F  F03C         	movff	?___flmul,___flsub@a
  7174  001018  C010  F03D         	movff	?___flmul+1,___flsub@a+1
  7175  00101C  C011  F03E         	movff	?___flmul+2,___flsub@a+2
  7176  001020  C012  F03F         	movff	?___flmul+3,___flsub@a+3
  7177  001024  EC39  F027         	call	___flsub	;wreg free
  7178  001028  C038  F0A2         	movff	?___flsub,efgtoa@h
  7179  00102C  C039  F0A3         	movff	?___flsub+1,efgtoa@h+1
  7180  001030  C03A  F0A4         	movff	?___flsub+2,efgtoa@h+2
  7181  001034  C03B  F0A5         	movff	?___flsub+3,efgtoa@h+3
  7182  001038                     
  7183                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = u/10.
      +                          0;
  7184  001038  C0B4  F038         	movff	efgtoa@u,___fldiv@b
  7185  00103C  C0B5  F039         	movff	efgtoa@u+1,___fldiv@b+1
  7186  001040  C0B6  F03A         	movff	efgtoa@u+2,___fldiv@b+2
  7187  001044  C0B7  F03B         	movff	efgtoa@u+3,___fldiv@b+3
  7188  001048  0E00               	movlw	0
  7189  00104A  6E3C               	movwf	___fldiv@a^0,c
  7190  00104C  0E00               	movlw	0
  7191  00104E  6E3D               	movwf	(___fldiv@a+1)^0,c
  7192  001050  0E20               	movlw	32
  7193  001052  6E3E               	movwf	(___fldiv@a+2)^0,c
  7194  001054  0E41               	movlw	65
  7195  001056  6E3F               	movwf	(___fldiv@a+3)^0,c
  7196  001058  EC11  F01B         	call	___fldiv	;wreg free
  7197  00105C  C038  F0B4         	movff	?___fldiv,efgtoa@u
  7198  001060  C039  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  7199  001064  C03A  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  7200  001068  C03B  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  7201  00106C                     
  7202                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne;
  7203  00106C  0100               	movlb	0	; () banked
  7204  00106E  0796               	decf	efgtoa@ne& (0+255),f,b
  7205  001070  A0D8               	btfss	status,0,c
  7206  001072  0797               	decf	(efgtoa@ne+1)& (0+255),f,b
  7207  001074                     
  7208                           ; BSR set to: 0
  7209                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  7210  001074  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  7211  001076  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  7212  001078                     l4349:
  7213                           
  7214                           ; BSR set to: 0
  7215                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((i < m
      +                          ) && (n < (80 - 5))) {
  7216  001078  5194               	movf	efgtoa@m& (0+255),w,b
  7217  00107A  5DAA               	subwf	efgtoa@i& (0+255),w,b
  7218  00107C  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  7219  00107E  0A80               	xorlw	128
  7220  001080  6E6C               	movwf	??_efgtoa^0,c
  7221  001082  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  7222  001084  0A80               	xorlw	128
  7223  001086  586C               	subwfb	??_efgtoa^0,w,c
  7224  001088  B0D8               	btfsc	status,0,c
  7225  00108A  EF49  F008         	goto	u5261
  7226  00108E  EF4B  F008         	goto	u5260
  7227  001092                     u5261:
  7228  001092  EF59  F008         	goto	l4353
  7229  001096                     u5260:
  7230  001096                     
  7231                           ; BSR set to: 0
  7232  001096  BFB3               	btfsc	(efgtoa@n+1)& (0+255),7,b
  7233  001098  EF57  F008         	goto	u5271
  7234  00109C  51B3               	movf	(efgtoa@n+1)& (0+255),w,b
  7235  00109E  E109               	bnz	u5270
  7236  0010A0  0E4B               	movlw	75
  7237  0010A2  5DB2               	subwf	efgtoa@n& (0+255),w,b
  7238  0010A4  A0D8               	btfss	status,0,c
  7239  0010A6  EF57  F008         	goto	u5271
  7240  0010AA  EF59  F008         	goto	u5270
  7241  0010AE                     u5271:
  7242  0010AE  EF4F  F007         	goto	l4301
  7243  0010B2                     u5270:
  7244  0010B2                     l4353:
  7245                           
  7246                           ; BSR set to: 0
  7247                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp && (f
      +                          lags & (1 << 4))) {
  7248  0010B2  5192               	movf	efgtoa@pp& (0+255),w,b
  7249  0010B4  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  7250  0010B6  A4D8               	btfss	status,2,c
  7251  0010B8  EF60  F008         	goto	u5281
  7252  0010BC  EF62  F008         	goto	u5280
  7253  0010C0                     u5281:
  7254  0010C0  EF73  F008         	goto	l4361
  7255  0010C4                     u5280:
  7256  0010C4                     
  7257                           ; BSR set to: 0
  7258  0010C4  A9EF               	btfss	_flags& (0+255),4,b
  7259  0010C6  EF67  F008         	goto	u5291
  7260  0010CA  EF69  F008         	goto	u5290
  7261  0010CE                     u5291:
  7262  0010CE  EF73  F008         	goto	l4361
  7263  0010D2                     u5290:
  7264  0010D2                     
  7265                           ; BSR set to: 0
  7266                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf[n++]
      +                           = '.';
  7267  0010D2  0E08               	movlw	low _dbuf
  7268  0010D4  25B2               	addwf	efgtoa@n& (0+255),w,b
  7269  0010D6  6ED9               	movwf	fsr2l,c
  7270  0010D8  0E01               	movlw	high _dbuf
  7271  0010DA  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7272  0010DC  6EDA               	movwf	fsr2h,c
  7273  0010DE  0E2E               	movlw	46
  7274  0010E0  6EDF               	movwf	indf2,c
  7275  0010E2                     
  7276                           ; BSR set to: 0
  7277  0010E2  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  7278  0010E4  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  7279  0010E6                     l4361:
  7280                           
  7281                           ; BSR set to: 0
  7282                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] = '\0
      +                          ';
  7283  0010E6  0E08               	movlw	low _dbuf
  7284  0010E8  25B2               	addwf	efgtoa@n& (0+255),w,b
  7285  0010EA  6ED9               	movwf	fsr2l,c
  7286  0010EC  0E01               	movlw	high _dbuf
  7287  0010EE  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7288  0010F0  6EDA               	movwf	fsr2h,c
  7289  0010F2  0E00               	movlw	0
  7290  0010F4  6EDF               	movwf	indf2,c
  7291  0010F6                     
  7292                           ; BSR set to: 0
  7293                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmode == 
      +                          'e') {
  7294  0010F6  0E65               	movlw	101
  7295  0010F8  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  7296  0010FA  A4D8               	btfss	status,2,c
  7297  0010FC  EF82  F008         	goto	u5301
  7298  001100  EF84  F008         	goto	u5300
  7299  001104                     u5301:
  7300  001104  EF32  F004         	goto	l4173
  7301  001108                     u5300:
  7302  001108                     
  7303                           ; BSR set to: 0
  7304                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = sizeo
      +                          f(dbuf) - 1;
  7305  001108  0E00               	movlw	0
  7306  00110A  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  7307  00110C  0E4F               	movlw	79
  7308  00110E  6FAA               	movwf	efgtoa@i& (0+255),b
  7309  001110                     
  7310                           ; BSR set to: 0
  7311                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf[i] =
      +                           '\0';
  7312  001110  0E08               	movlw	low _dbuf
  7313  001112  25AA               	addwf	efgtoa@i& (0+255),w,b
  7314  001114  6ED9               	movwf	fsr2l,c
  7315  001116  0E01               	movlw	high _dbuf
  7316  001118  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7317  00111A  6EDA               	movwf	fsr2h,c
  7318  00111C  0E00               	movlw	0
  7319  00111E  6EDF               	movwf	indf2,c
  7320  001120                     
  7321                           ; BSR set to: 0
  7322                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign = 0;
  7323  001120  0E00               	movlw	0
  7324  001122  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  7325  001124  0E00               	movlw	0
  7326  001126  6F9A               	movwf	efgtoa@sign& (0+255),b
  7327  001128                     
  7328                           ; BSR set to: 0
  7329                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (e < 0
      +                          ) {
  7330  001128  BFB1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  7331  00112A  EF9B  F008         	goto	u5310
  7332  00112E  EF99  F008         	goto	u5311
  7333  001132                     u5311:
  7334  001132  EFA3  F008         	goto	l4377
  7335  001136                     u5310:
  7336  001136                     
  7337                           ; BSR set to: 0
  7338                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             sign 
      +                          = 1;
  7339  001136  0E00               	movlw	0
  7340  001138  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  7341  00113A  0E01               	movlw	1
  7342  00113C  6F9A               	movwf	efgtoa@sign& (0+255),b
  7343  00113E                     
  7344                           ; BSR set to: 0
  7345                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             e = -
      +                          e;
  7346  00113E  6DB0               	negf	efgtoa@e& (0+255),b
  7347  001140  1FB1               	comf	(efgtoa@e+1)& (0+255),f,b
  7348  001142  B0D8               	btfsc	status,0,c
  7349  001144  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  7350  001146                     l4377:
  7351                           
  7352                           ; BSR set to: 0
  7353                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 2;
  7354  001146  0E00               	movlw	0
  7355  001148  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  7356  00114A  0E02               	movlw	2
  7357  00114C  6F9C               	movwf	efgtoa@p& (0+255),b
  7358                           
  7359                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         while (e 
      +                          || (0 < p)) {
  7360  00114E  EFD4  F008         	goto	l4389
  7361  001152                     l4379:
  7362                           
  7363                           ; BSR set to: 0
  7364                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             --i;
  7365  001152  07AA               	decf	efgtoa@i& (0+255),f,b
  7366  001154  A0D8               	btfss	status,0,c
  7367  001156  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  7368  001158                     
  7369                           ; BSR set to: 0
  7370                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             dbuf[
      +                          i] = '0' + (e % 10);
  7371  001158  0E08               	movlw	low _dbuf
  7372  00115A  25AA               	addwf	efgtoa@i& (0+255),w,b
  7373  00115C  6ED9               	movwf	fsr2l,c
  7374  00115E  0E01               	movlw	high _dbuf
  7375  001160  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7376  001162  6EDA               	movwf	fsr2h,c
  7377  001164  C0B0  F001         	movff	efgtoa@e,___awmod@dividend
  7378  001168  C0B1  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  7379  00116C  0E00               	movlw	0
  7380  00116E  6E04               	movwf	(___awmod@divisor+1)^0,c
  7381  001170  0E0A               	movlw	10
  7382  001172  6E03               	movwf	___awmod@divisor^0,c
  7383  001174  EC3C  F024         	call	___awmod	;wreg free
  7384  001178  5001               	movf	?___awmod^0,w,c
  7385  00117A  0F30               	addlw	48
  7386  00117C  6EDF               	movwf	indf2,c
  7387  00117E                     
  7388                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             e = e
      +                           / 10;
  7389  00117E  C0B0  F001         	movff	efgtoa@e,___awdiv@dividend
  7390  001182  C0B1  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  7391  001186  0E00               	movlw	0
  7392  001188  6E04               	movwf	(___awdiv@divisor+1)^0,c
  7393  00118A  0E0A               	movlw	10
  7394  00118C  6E03               	movwf	___awdiv@divisor^0,c
  7395  00118E  ECDA  F023         	call	___awdiv	;wreg free
  7396  001192  C001  F0B0         	movff	?___awdiv,efgtoa@e
  7397  001196  C002  F0B1         	movff	?___awdiv+1,efgtoa@e+1
  7398  00119A                     
  7399                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             --p;
  7400  00119A  0100               	movlb	0	; () banked
  7401  00119C  079C               	decf	efgtoa@p& (0+255),f,b
  7402  00119E  A0D8               	btfss	status,0,c
  7403  0011A0  079D               	decf	(efgtoa@p+1)& (0+255),f,b
  7404  0011A2                     
  7405                           ; BSR set to: 0
  7406                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             --w;
  7407  0011A2  079F               	decf	efgtoa@w& (0+255),f,b
  7408  0011A4  A0D8               	btfss	status,0,c
  7409  0011A6  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  7410  0011A8                     l4389:
  7411                           
  7412                           ; BSR set to: 0
  7413                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         while (e 
      +                          || (0 < p)) {
  7414  0011A8  51B0               	movf	efgtoa@e& (0+255),w,b
  7415  0011AA  11B1               	iorwf	(efgtoa@e+1)& (0+255),w,b
  7416  0011AC  A4D8               	btfss	status,2,c
  7417  0011AE  EFDB  F008         	goto	u5321
  7418  0011B2  EFDD  F008         	goto	u5320
  7419  0011B6                     u5321:
  7420  0011B6  EFA9  F008         	goto	l4379
  7421  0011BA                     u5320:
  7422  0011BA                     
  7423                           ; BSR set to: 0
  7424  0011BA  BF9D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  7425  0011BC  EFEA  F008         	goto	u5330
  7426  0011C0  519D               	movf	(efgtoa@p+1)& (0+255),w,b
  7427  0011C2  E106               	bnz	u5331
  7428  0011C4  059C               	decf	efgtoa@p& (0+255),w,b
  7429  0011C6  B0D8               	btfsc	status,0,c
  7430  0011C8  EFE8  F008         	goto	u5331
  7431  0011CC  EFEA  F008         	goto	u5330
  7432  0011D0                     u5331:
  7433  0011D0  EFA9  F008         	goto	l4379
  7434  0011D4                     u5330:
  7435  0011D4                     
  7436                           ; BSR set to: 0
  7437                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  7438  0011D4  07AA               	decf	efgtoa@i& (0+255),f,b
  7439  0011D6  A0D8               	btfss	status,0,c
  7440  0011D8  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  7441  0011DA                     
  7442                           ; BSR set to: 0
  7443                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf[i] =
      +                           sign ? '-' : '+';
  7444  0011DA  519A               	movf	efgtoa@sign& (0+255),w,b
  7445  0011DC  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7446  0011DE  A4D8               	btfss	status,2,c
  7447  0011E0  EFF4  F008         	goto	u5341
  7448  0011E4  EFF6  F008         	goto	u5340
  7449  0011E8                     u5341:
  7450  0011E8  EFFC  F008         	goto	l4399
  7451  0011EC                     u5340:
  7452  0011EC                     
  7453                           ; BSR set to: 0
  7454  0011EC  0E00               	movlw	0
  7455  0011EE  6F8B               	movwf	(_efgtoa$776+1)& (0+255),b
  7456  0011F0  0E2B               	movlw	43
  7457  0011F2  6F8A               	movwf	_efgtoa$776& (0+255),b
  7458  0011F4  EF00  F009         	goto	l4401
  7459  0011F8                     l4399:
  7460                           
  7461                           ; BSR set to: 0
  7462  0011F8  0E00               	movlw	0
  7463  0011FA  6F8B               	movwf	(_efgtoa$776+1)& (0+255),b
  7464  0011FC  0E2D               	movlw	45
  7465  0011FE  6F8A               	movwf	_efgtoa$776& (0+255),b
  7466  001200                     l4401:
  7467                           
  7468                           ; BSR set to: 0
  7469  001200  0E08               	movlw	low _dbuf
  7470  001202  25AA               	addwf	efgtoa@i& (0+255),w,b
  7471  001204  6ED9               	movwf	fsr2l,c
  7472  001206  0E01               	movlw	high _dbuf
  7473  001208  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7474  00120A  6EDA               	movwf	fsr2h,c
  7475  00120C  C08A  FFDF         	movff	_efgtoa$776,indf2
  7476  001210                     
  7477                           ; BSR set to: 0
  7478                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  7479  001210  079F               	decf	efgtoa@w& (0+255),f,b
  7480  001212  A0D8               	btfss	status,0,c
  7481  001214  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  7482  001216                     
  7483                           ; BSR set to: 0
  7484                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf[i] =
      +                           (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  7485  001216  07AA               	decf	efgtoa@i& (0+255),f,b
  7486  001218  A0D8               	btfss	status,0,c
  7487  00121A  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  7488  00121C                     
  7489                           ; BSR set to: 0
  7490  00121C  0EBF               	movlw	191
  7491  00121E  6E6C               	movwf	??_efgtoa^0,c
  7492  001220  0EFF               	movlw	255
  7493  001222  6E6D               	movwf	(??_efgtoa+1)^0,c
  7494  001224  506B               	movf	efgtoa@c^0,w,c
  7495  001226  6E6E               	movwf	(??_efgtoa+2)^0,c
  7496  001228  6A6F               	clrf	(??_efgtoa+3)^0,c
  7497  00122A  506C               	movf	??_efgtoa^0,w,c
  7498  00122C  266E               	addwf	(??_efgtoa+2)^0,f,c
  7499  00122E  506D               	movf	(??_efgtoa+1)^0,w,c
  7500  001230  226F               	addwfc	(??_efgtoa+3)^0,f,c
  7501  001232  506F               	movf	(??_efgtoa+3)^0,w,c
  7502  001234  E10A               	bnz	u5350
  7503  001236  0E1A               	movlw	26
  7504  001238  5C6E               	subwf	(??_efgtoa+2)^0,w,c
  7505  00123A  A0D8               	btfss	status,0,c
  7506  00123C  EF22  F009         	goto	u5351
  7507  001240  EF25  F009         	goto	u5350
  7508  001244                     u5351:
  7509  001244  0E01               	movlw	1
  7510  001246  EF26  F009         	goto	u5360
  7511  00124A                     u5350:
  7512  00124A  0E00               	movlw	0
  7513  00124C                     u5360:
  7514  00124C  6F8E               	movwf	_efgtoa$778& (0+255),b
  7515  00124E  6B8F               	clrf	(_efgtoa$778+1)& (0+255),b
  7516  001250                     
  7517                           ; BSR set to: 0
  7518  001250  518E               	movf	_efgtoa$778& (0+255),w,b
  7519  001252  118F               	iorwf	(_efgtoa$778+1)& (0+255),w,b
  7520  001254  A4D8               	btfss	status,2,c
  7521  001256  EF2F  F009         	goto	u5371
  7522  00125A  EF31  F009         	goto	u5370
  7523  00125E                     u5371:
  7524  00125E  EF37  F009         	goto	l4415
  7525  001262                     u5370:
  7526  001262                     
  7527                           ; BSR set to: 0
  7528  001262  0E00               	movlw	0
  7529  001264  6F8D               	movwf	(_efgtoa$777+1)& (0+255),b
  7530  001266  0E65               	movlw	101
  7531  001268  6F8C               	movwf	_efgtoa$777& (0+255),b
  7532  00126A  EF3B  F009         	goto	l4417
  7533  00126E                     l4415:
  7534                           
  7535                           ; BSR set to: 0
  7536  00126E  0E00               	movlw	0
  7537  001270  6F8D               	movwf	(_efgtoa$777+1)& (0+255),b
  7538  001272  0E45               	movlw	69
  7539  001274  6F8C               	movwf	_efgtoa$777& (0+255),b
  7540  001276                     l4417:
  7541                           
  7542                           ; BSR set to: 0
  7543  001276  0E08               	movlw	low _dbuf
  7544  001278  25AA               	addwf	efgtoa@i& (0+255),w,b
  7545  00127A  6ED9               	movwf	fsr2l,c
  7546  00127C  0E01               	movlw	high _dbuf
  7547  00127E  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7548  001280  6EDA               	movwf	fsr2h,c
  7549  001282  C08C  FFDF         	movff	_efgtoa$777,indf2
  7550  001286                     
  7551                           ; BSR set to: 0
  7552                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  7553  001286  079F               	decf	efgtoa@w& (0+255),f,b
  7554  001288  A0D8               	btfss	status,0,c
  7555  00128A  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  7556  00128C                     
  7557                           ; BSR set to: 0
  7558                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strcpy(&d
      +                          buf[n], &dbuf[i]);
  7559  00128C  0E08               	movlw	low _dbuf
  7560  00128E  25B2               	addwf	efgtoa@n& (0+255),w,b
  7561  001290  6E01               	movwf	strcpy@dest^0,c
  7562  001292  0E01               	movlw	high _dbuf
  7563  001294  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7564  001296  6E02               	movwf	(strcpy@dest+1)^0,c
  7565  001298  0E08               	movlw	low _dbuf
  7566  00129A  25AA               	addwf	efgtoa@i& (0+255),w,b
  7567  00129C  6E03               	movwf	strcpy@src^0,c
  7568  00129E  0E01               	movlw	high _dbuf
  7569  0012A0  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7570  0012A2  6E04               	movwf	(strcpy@src+1)^0,c
  7571  0012A4  ECB9  F026         	call	_strcpy	;wreg free
  7572  0012A8  EF32  F004         	goto	l4173
  7573  0012AC                     l1013:
  7574  0012AC  0012               	return		;funcret
  7575  0012AE                     __end_of_efgtoa:
  7576                           	callstack 0
  7577                           
  7578 ;; *************** function _tolower *****************
  7579 ;; Defined at:
  7580 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\tolower.c"
  7581 ;; Parameters:    Size  Location     Type
  7582 ;;  c               2    6[COMRAM] int 
  7583 ;; Auto vars:     Size  Location     Type
  7584 ;;		None
  7585 ;; Return value:  Size  Location     Type
  7586 ;;                  2    6[COMRAM] int 
  7587 ;; Registers used:
  7588 ;;		wreg, status,2, status,0
  7589 ;; Tracked objects:
  7590 ;;		On entry : 0/0
  7591 ;;		On exit  : 0/0
  7592 ;;		Unchanged: 0/0
  7593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7594 ;;      Params:         2       0       0       0       0       0       0
  7595 ;;      Locals:         2       0       0       0       0       0       0
  7596 ;;      Temps:          4       0       0       0       0       0       0
  7597 ;;      Totals:         8       0       0       0       0       0       0
  7598 ;;Total ram usage:        8 bytes
  7599 ;; Hardware stack levels used:    1
  7600 ;; Hardware stack levels required when called:    1
  7601 ;; This function calls:
  7602 ;;		_isupper
  7603 ;; This function is called by:
  7604 ;;		_efgtoa
  7605 ;;		_vfpfcnvrt
  7606 ;; This function uses a non-reentrant model
  7607 ;;
  7608                           
  7609                           	psect	text11
  7610  004CB6                     __ptext11:
  7611                           	callstack 0
  7612  004CB6                     _tolower:
  7613                           	callstack 25
  7614  004CB6  0EBF               	movlw	191
  7615  004CB8  6E09               	movwf	??_tolower^0,c
  7616  004CBA  0EFF               	movlw	255
  7617  004CBC  6E0A               	movwf	(??_tolower+1)^0,c
  7618  004CBE  C007  F00B         	movff	tolower@c,??_tolower+2
  7619  004CC2  C008  F00C         	movff	tolower@c+1,??_tolower+3
  7620  004CC6  5009               	movf	??_tolower^0,w,c
  7621  004CC8  260B               	addwf	(??_tolower+2)^0,f,c
  7622  004CCA  500A               	movf	(??_tolower+1)^0,w,c
  7623  004CCC  220C               	addwfc	(??_tolower+3)^0,f,c
  7624  004CCE  500C               	movf	(??_tolower+3)^0,w,c
  7625  004CD0  E10A               	bnz	u4690
  7626  004CD2  0E1A               	movlw	26
  7627  004CD4  5C0B               	subwf	(??_tolower+2)^0,w,c
  7628  004CD6  A0D8               	btfss	status,0,c
  7629  004CD8  EF70  F026         	goto	u4691
  7630  004CDC  EF73  F026         	goto	u4690
  7631  004CE0                     u4691:
  7632  004CE0  0E01               	movlw	1
  7633  004CE2  EF74  F026         	goto	u4700
  7634  004CE6                     u4690:
  7635  004CE6  0E00               	movlw	0
  7636  004CE8                     u4700:
  7637  004CE8  6E0D               	movwf	_tolower$925^0,c
  7638  004CEA  6A0E               	clrf	(_tolower$925+1)^0,c
  7639  004CEC  500D               	movf	_tolower$925^0,w,c
  7640  004CEE  100E               	iorwf	(_tolower$925+1)^0,w,c
  7641  004CF0  B4D8               	btfsc	status,2,c
  7642  004CF2  EF7D  F026         	goto	u4711
  7643  004CF6  EF7F  F026         	goto	u4710
  7644  004CFA                     u4711:
  7645  004CFA  EF86  F026         	goto	l1241
  7646  004CFE                     u4710:
  7647  004CFE  0E20               	movlw	32
  7648  004D00  1007               	iorwf	tolower@c^0,w,c
  7649  004D02  6E07               	movwf	?_tolower^0,c
  7650  004D04  5008               	movf	(tolower@c+1)^0,w,c
  7651  004D06  6E08               	movwf	(?_tolower+1)^0,c
  7652  004D08  EF8A  F026         	goto	l1246
  7653  004D0C                     l1241:
  7654  004D0C  C007  F007         	movff	tolower@c,?_tolower
  7655  004D10  C008  F008         	movff	tolower@c+1,?_tolower+1
  7656  004D14                     l1246:
  7657  004D14  0012               	return		;funcret
  7658  004D16                     __end_of_tolower:
  7659                           	callstack 0
  7660                           
  7661 ;; *************** function _isupper *****************
  7662 ;; Defined at:
  7663 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\isupper.c"
  7664 ;; Parameters:    Size  Location     Type
  7665 ;;  c               2    0[COMRAM] int 
  7666 ;; Auto vars:     Size  Location     Type
  7667 ;;		None
  7668 ;; Return value:  Size  Location     Type
  7669 ;;                  2    0[COMRAM] int 
  7670 ;; Registers used:
  7671 ;;		wreg, status,2, status,0
  7672 ;; Tracked objects:
  7673 ;;		On entry : 0/0
  7674 ;;		On exit  : 0/0
  7675 ;;		Unchanged: 0/0
  7676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7677 ;;      Params:         2       0       0       0       0       0       0
  7678 ;;      Locals:         0       0       0       0       0       0       0
  7679 ;;      Temps:          4       0       0       0       0       0       0
  7680 ;;      Totals:         6       0       0       0       0       0       0
  7681 ;;Total ram usage:        6 bytes
  7682 ;; Hardware stack levels used:    1
  7683 ;; This function calls:
  7684 ;;		Nothing
  7685 ;; This function is called by:
  7686 ;;		_efgtoa
  7687 ;;		_vfpfcnvrt
  7688 ;;		_tolower
  7689 ;; This function uses a non-reentrant model
  7690 ;;
  7691                           
  7692                           	psect	text12
  7693  004EFC                     __ptext12:
  7694                           	callstack 0
  7695  004EFC                     _isupper:
  7696                           	callstack 25
  7697  004EFC  0EBF               	movlw	191
  7698  004EFE  6E03               	movwf	??_isupper^0,c
  7699  004F00  0EFF               	movlw	255
  7700  004F02  6E04               	movwf	(??_isupper+1)^0,c
  7701  004F04  C001  F005         	movff	isupper@c,??_isupper+2
  7702  004F08  C002  F006         	movff	isupper@c+1,??_isupper+3
  7703  004F0C  5003               	movf	??_isupper^0,w,c
  7704  004F0E  2605               	addwf	(??_isupper+2)^0,f,c
  7705  004F10  5004               	movf	(??_isupper+1)^0,w,c
  7706  004F12  2206               	addwfc	(??_isupper+3)^0,f,c
  7707  004F14  5006               	movf	(??_isupper+3)^0,w,c
  7708  004F16  E10A               	bnz	u3840
  7709  004F18  0E1A               	movlw	26
  7710  004F1A  5C05               	subwf	(??_isupper+2)^0,w,c
  7711  004F1C  A0D8               	btfss	status,0,c
  7712  004F1E  EF93  F027         	goto	u3841
  7713  004F22  EF96  F027         	goto	u3840
  7714  004F26                     u3841:
  7715  004F26  0E01               	movlw	1
  7716  004F28  EF97  F027         	goto	u3850
  7717  004F2C                     u3840:
  7718  004F2C  0E00               	movlw	0
  7719  004F2E                     u3850:
  7720  004F2E  6E01               	movwf	?_isupper^0,c
  7721  004F30  6A02               	clrf	(?_isupper+1)^0,c
  7722  004F32  0012               	return		;funcret
  7723  004F34                     __end_of_isupper:
  7724                           	callstack 0
  7725                           
  7726 ;; *************** function _strcpy *****************
  7727 ;; Defined at:
  7728 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  7729 ;; Parameters:    Size  Location     Type
  7730 ;;  dest            2    0[COMRAM] PTR unsigned char 
  7731 ;;		 -> dbuf(80), 
  7732 ;;  src             2    2[COMRAM] PTR const unsigned char 
  7733 ;;		 -> STR_37(4), STR_36(4), STR_33(4), STR_32(4), 
  7734 ;;		 -> dbuf(80), 
  7735 ;; Auto vars:     Size  Location     Type
  7736 ;;  d               2    8[COMRAM] PTR unsigned char 
  7737 ;;		 -> dbuf(80), 
  7738 ;;  s               2    6[COMRAM] PTR const unsigned char 
  7739 ;;		 -> STR_37(4), STR_36(4), STR_33(4), STR_32(4), 
  7740 ;;		 -> dbuf(80), 
  7741 ;; Return value:  Size  Location     Type
  7742 ;;                  2    0[COMRAM] PTR unsigned char 
  7743 ;; Registers used:
  7744 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7745 ;; Tracked objects:
  7746 ;;		On entry : 0/0
  7747 ;;		On exit  : 0/0
  7748 ;;		Unchanged: 0/0
  7749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7750 ;;      Params:         4       0       0       0       0       0       0
  7751 ;;      Locals:         4       0       0       0       0       0       0
  7752 ;;      Temps:          2       0       0       0       0       0       0
  7753 ;;      Totals:        10       0       0       0       0       0       0
  7754 ;;Total ram usage:       10 bytes
  7755 ;; Hardware stack levels used:    1
  7756 ;; This function calls:
  7757 ;;		Nothing
  7758 ;; This function is called by:
  7759 ;;		_efgtoa
  7760 ;; This function uses a non-reentrant model
  7761 ;;
  7762                           
  7763                           	psect	text13
  7764  004D72                     __ptext13:
  7765                           	callstack 0
  7766  004D72                     _strcpy:
  7767                           	callstack 25
  7768  004D72  C003  F007         	movff	strcpy@src,strcpy@s
  7769  004D76  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  7770  004D7A  C001  F009         	movff	strcpy@dest,strcpy@d
  7771  004D7E  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  7772  004D82                     l4073:
  7773  004D82  5007               	movf	strcpy@s^0,w,c
  7774  004D84  6E05               	movwf	??_strcpy^0,c
  7775  004D86  5008               	movf	(strcpy@s+1)^0,w,c
  7776  004D88  6E06               	movwf	(??_strcpy+1)^0,c
  7777  004D8A  4A07               	infsnz	strcpy@s^0,f,c
  7778  004D8C  2A08               	incf	(strcpy@s+1)^0,f,c
  7779  004D8E  C005  FFF6         	movff	??_strcpy,tblptrl
  7780  004D92  C006  FFF7         	movff	??_strcpy+1,tblptrh
  7781  004D96  6AF8               	clrf	tblptru,c
  7782  004D98  C009  FFD9         	movff	strcpy@d,fsr2l
  7783  004D9C  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  7784  004DA0  4A09               	infsnz	strcpy@d^0,f,c
  7785  004DA2  2A0A               	incf	(strcpy@d+1)^0,f,c
  7786  004DA4  0E05               	movlw	(high __ramtop+-1)
  7787  004DA6  64F7               	cpfsgt	tblptrh,c
  7788  004DA8  D003               	bra	u4677
  7789  004DAA  0008               	tblrd		*
  7790  004DAC  50F5               	movf	tablat,w,c
  7791  004DAE  D005               	bra	u4670
  7792  004DB0                     u4677:
  7793  004DB0  CFF6 FFE9          	movff	tblptrl,fsr0l
  7794  004DB4  CFF7 FFEA          	movff	tblptrh,fsr0h
  7795  004DB8  50EF               	movf	indf0,w,c
  7796  004DBA                     u4670:
  7797  004DBA  6EDF               	movwf	indf2,c
  7798  004DBC  50DF               	movf	indf2,w,c
  7799  004DBE  A4D8               	btfss	status,2,c
  7800  004DC0  EFE4  F026         	goto	u4681
  7801  004DC4  EFE6  F026         	goto	u4680
  7802  004DC8                     u4681:
  7803  004DC8  EFC1  F026         	goto	l4073
  7804  004DCC                     u4680:
  7805  004DCC  0012               	return		;funcret
  7806  004DCE                     __end_of_strcpy:
  7807                           	callstack 0
  7808                           
  7809 ;; *************** function _pad *****************
  7810 ;; Defined at:
  7811 ;;		line 72 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7812 ;; Parameters:    Size  Location     Type
  7813 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7814 ;;		 -> sprintf@f(6), 
  7815 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7816 ;;		 -> dbuf(80), 
  7817 ;;  p               2   20[COMRAM] int 
  7818 ;; Auto vars:     Size  Location     Type
  7819 ;;  w               2   25[COMRAM] int 
  7820 ;;  i               2   23[COMRAM] int 
  7821 ;; Return value:  Size  Location     Type
  7822 ;;                  2   16[COMRAM] int 
  7823 ;; Registers used:
  7824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7825 ;; Tracked objects:
  7826 ;;		On entry : 0/0
  7827 ;;		On exit  : 0/0
  7828 ;;		Unchanged: 0/0
  7829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7830 ;;      Params:         6       0       0       0       0       0       0
  7831 ;;      Locals:         4       0       0       0       0       0       0
  7832 ;;      Temps:          1       0       0       0       0       0       0
  7833 ;;      Totals:        11       0       0       0       0       0       0
  7834 ;;Total ram usage:       11 bytes
  7835 ;; Hardware stack levels used:    1
  7836 ;; Hardware stack levels required when called:    3
  7837 ;; This function calls:
  7838 ;;		_fputc
  7839 ;;		_fputs
  7840 ;;		_strlen
  7841 ;; This function is called by:
  7842 ;;		_efgtoa
  7843 ;; This function uses a non-reentrant model
  7844 ;;
  7845                           
  7846                           	psect	text14
  7847  0046EE                     __ptext14:
  7848                           	callstack 0
  7849  0046EE                     _pad:
  7850                           	callstack 22
  7851  0046EE                     
  7852                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pad(FIL
      +                          E *fp, char *buf, int p);D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c
      +                          : 73: {;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 74:     int i, 
      +                          w;;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 77:     if (flags & 
      +                          (1 << 0)) {
  7853  0046EE  0100               	movlb	0	; () banked
  7854  0046F0  A1EF               	btfss	_flags& (0+255),0,b
  7855  0046F2  EF7D  F023         	goto	u4561
  7856  0046F6  EF7F  F023         	goto	u4560
  7857  0046FA                     u4561:
  7858  0046FA  EF89  F023         	goto	l4031
  7859  0046FE                     u4560:
  7860  0046FE                     
  7861                           ; BSR set to: 0
  7862                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs((con
      +                          st char *)buf, fp);
  7863  0046FE  C013  F00A         	movff	pad@buf,fputs@s
  7864  004702  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7865  004706  C011  F00C         	movff	pad@fp,fputs@fp
  7866  00470A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7867  00470E  EC5C  F027         	call	_fputs	;wreg free
  7868  004712                     l4031:
  7869                           
  7870                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ? 
      +                          0 : p;
  7871  004712  BE16               	btfsc	(pad@p+1)^0,7,c
  7872  004714  EF8E  F023         	goto	u4571
  7873  004718  EF90  F023         	goto	u4570
  7874  00471C                     u4571:
  7875  00471C  EF96  F023         	goto	l4035
  7876  004720                     u4570:
  7877  004720  C015  F01A         	movff	pad@p,pad@w
  7878  004724  C016  F01B         	movff	pad@p+1,pad@w+1
  7879  004728  EF9A  F023         	goto	l990
  7880  00472C                     l4035:
  7881  00472C  0E00               	movlw	0
  7882  00472E  6E1B               	movwf	(pad@w+1)^0,c
  7883  004730  0E00               	movlw	0
  7884  004732  6E1A               	movwf	pad@w^0,c
  7885  004734                     l990:
  7886                           
  7887                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7888  004734  0E00               	movlw	0
  7889  004736  6E19               	movwf	(pad@i+1)^0,c
  7890  004738  0E00               	movlw	0
  7891  00473A  6E18               	movwf	pad@i^0,c
  7892                           
  7893                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  7894  00473C  EFAC  F023         	goto	l4041
  7895  004740                     l4037:
  7896                           
  7897                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc(' ',
      +                           fp);
  7898  004740  0E00               	movlw	0
  7899  004742  6E02               	movwf	(fputc@c+1)^0,c
  7900  004744  0E20               	movlw	32
  7901  004746  6E01               	movwf	fputc@c^0,c
  7902  004748  C011  F003         	movff	pad@fp,fputc@fp
  7903  00474C  C012  F004         	movff	pad@fp+1,fputc@fp+1
  7904  004750  EC12  F023         	call	_fputc	;wreg free
  7905  004754                     
  7906                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7907  004754  4A18               	infsnz	pad@i^0,f,c
  7908  004756  2A19               	incf	(pad@i+1)^0,f,c
  7909  004758                     l4041:
  7910                           
  7911                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  7912  004758  501A               	movf	pad@w^0,w,c
  7913  00475A  5C18               	subwf	pad@i^0,w,c
  7914  00475C  5019               	movf	(pad@i+1)^0,w,c
  7915  00475E  0A80               	xorlw	128
  7916  004760  6E17               	movwf	??_pad^0,c
  7917  004762  501B               	movf	(pad@w+1)^0,w,c
  7918  004764  0A80               	xorlw	128
  7919  004766  5817               	subwfb	??_pad^0,w,c
  7920  004768  A0D8               	btfss	status,0,c
  7921  00476A  EFB9  F023         	goto	u4581
  7922  00476E  EFBB  F023         	goto	u4580
  7923  004772                     u4581:
  7924  004772  EFA0  F023         	goto	l4037
  7925  004776                     u4580:
  7926  004776                     
  7927                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(flags & 
      +                          (1 << 0))) {
  7928  004776  0100               	movlb	0	; () banked
  7929  004778  B1EF               	btfsc	_flags& (0+255),0,b
  7930  00477A  EFC1  F023         	goto	u4591
  7931  00477E  EFC3  F023         	goto	u4590
  7932  004782                     u4591:
  7933  004782  EFCD  F023         	goto	l4045
  7934  004786                     u4590:
  7935  004786                     
  7936                           ; BSR set to: 0
  7937                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs((con
      +                          st char *)buf, fp);
  7938  004786  C013  F00A         	movff	pad@buf,fputs@s
  7939  00478A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7940  00478E  C011  F00C         	movff	pad@fp,fputs@fp
  7941  004792  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7942  004796  EC5C  F027         	call	_fputs	;wreg free
  7943  00479A                     l4045:
  7944                           
  7945                           ;D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return strlen(
      +                          buf) + w;
  7946  00479A  C013  F001         	movff	pad@buf,strlen@s
  7947  00479E  C014  F002         	movff	pad@buf+1,strlen@s+1
  7948  0047A2  ECD2  F027         	call	_strlen	;wreg free
  7949  0047A6  501A               	movf	pad@w^0,w,c
  7950  0047A8  2401               	addwf	?_strlen^0,w,c
  7951  0047AA  6E11               	movwf	?_pad^0,c
  7952  0047AC  501B               	movf	(pad@w+1)^0,w,c
  7953  0047AE  2002               	addwfc	(?_strlen+1)^0,w,c
  7954  0047B0  6E12               	movwf	(?_pad+1)^0,c
  7955  0047B2  0012               	return		;funcret
  7956  0047B4                     __end_of_pad:
  7957                           	callstack 0
  7958                           
  7959 ;; *************** function _strlen *****************
  7960 ;; Defined at:
  7961 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\strlen.c"
  7962 ;; Parameters:    Size  Location     Type
  7963 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7964 ;;		 -> dbuf(80), 
  7965 ;; Auto vars:     Size  Location     Type
  7966 ;;  a               2    2[COMRAM] PTR const unsigned char 
  7967 ;;		 -> dbuf(80), 
  7968 ;; Return value:  Size  Location     Type
  7969 ;;                  2    0[COMRAM] unsigned int 
  7970 ;; Registers used:
  7971 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7972 ;; Tracked objects:
  7973 ;;		On entry : 0/0
  7974 ;;		On exit  : 0/0
  7975 ;;		Unchanged: 0/0
  7976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7977 ;;      Params:         2       0       0       0       0       0       0
  7978 ;;      Locals:         2       0       0       0       0       0       0
  7979 ;;      Temps:          0       0       0       0       0       0       0
  7980 ;;      Totals:         4       0       0       0       0       0       0
  7981 ;;Total ram usage:        4 bytes
  7982 ;; Hardware stack levels used:    1
  7983 ;; This function calls:
  7984 ;;		Nothing
  7985 ;; This function is called by:
  7986 ;;		_pad
  7987 ;; This function uses a non-reentrant model
  7988 ;;
  7989                           
  7990                           	psect	text15
  7991  004FA4                     __ptext15:
  7992                           	callstack 0
  7993  004FA4                     _strlen:
  7994                           	callstack 24
  7995  004FA4  C001  F003         	movff	strlen@s,strlen@a
  7996  004FA8  C002  F004         	movff	strlen@s+1,strlen@a+1
  7997  004FAC  EFDA  F027         	goto	l3567
  7998  004FB0                     l3565:
  7999  004FB0  4A01               	infsnz	strlen@s^0,f,c
  8000  004FB2  2A02               	incf	(strlen@s+1)^0,f,c
  8001  004FB4                     l3567:
  8002  004FB4  C001  FFD9         	movff	strlen@s,fsr2l
  8003  004FB8  C002  FFDA         	movff	strlen@s+1,fsr2h
  8004  004FBC  50DF               	movf	indf2,w,c
  8005  004FBE  A4D8               	btfss	status,2,c
  8006  004FC0  EFE4  F027         	goto	u3831
  8007  004FC4  EFE6  F027         	goto	u3830
  8008  004FC8                     u3831:
  8009  004FC8  EFD8  F027         	goto	l3565
  8010  004FCC                     u3830:
  8011  004FCC  5003               	movf	strlen@a^0,w,c
  8012  004FCE  5C01               	subwf	strlen@s^0,w,c
  8013  004FD0  6E01               	movwf	?_strlen^0,c
  8014  004FD2  5004               	movf	(strlen@a+1)^0,w,c
  8015  004FD4  5802               	subwfb	(strlen@s+1)^0,w,c
  8016  004FD6  6E02               	movwf	(?_strlen+1)^0,c
  8017  004FD8  0012               	return		;funcret
  8018  004FDA                     __end_of_strlen:
  8019                           	callstack 0
  8020                           
  8021 ;; *************** function _fputs *****************
  8022 ;; Defined at:
  8023 ;;		line 8 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  8024 ;; Parameters:    Size  Location     Type
  8025 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8026 ;;		 -> dbuf(80), 
  8027 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8028 ;;		 -> sprintf@f(6), 
  8029 ;; Auto vars:     Size  Location     Type
  8030 ;;  i               2   14[COMRAM] int 
  8031 ;;  c               1   13[COMRAM] unsigned char 
  8032 ;; Return value:  Size  Location     Type
  8033 ;;                  2    9[COMRAM] int 
  8034 ;; Registers used:
  8035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8036 ;; Tracked objects:
  8037 ;;		On entry : 0/0
  8038 ;;		On exit  : 0/0
  8039 ;;		Unchanged: 0/0
  8040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8041 ;;      Params:         4       0       0       0       0       0       0
  8042 ;;      Locals:         3       0       0       0       0       0       0
  8043 ;;      Temps:          0       0       0       0       0       0       0
  8044 ;;      Totals:         7       0       0       0       0       0       0
  8045 ;;Total ram usage:        7 bytes
  8046 ;; Hardware stack levels used:    1
  8047 ;; Hardware stack levels required when called:    2
  8048 ;; This function calls:
  8049 ;;		_fputc
  8050 ;; This function is called by:
  8051 ;;		_pad
  8052 ;; This function uses a non-reentrant model
  8053 ;;
  8054                           
  8055                           	psect	text16
  8056  004EB8                     __ptext16:
  8057                           	callstack 0
  8058  004EB8                     _fputs:
  8059                           	callstack 22
  8060  004EB8  0E00               	movlw	0
  8061  004EBA  6E10               	movwf	(fputs@i+1)^0,c
  8062  004EBC  0E00               	movlw	0
  8063  004EBE  6E0F               	movwf	fputs@i^0,c
  8064  004EC0  EF6D  F027         	goto	l3561
  8065  004EC4                     l3557:
  8066  004EC4  C00E  F001         	movff	fputs@c,fputc@c
  8067  004EC8  6A02               	clrf	(fputc@c+1)^0,c
  8068  004ECA  C00C  F003         	movff	fputs@fp,fputc@fp
  8069  004ECE  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  8070  004ED2  EC12  F023         	call	_fputc	;wreg free
  8071  004ED6  4A0F               	infsnz	fputs@i^0,f,c
  8072  004ED8  2A10               	incf	(fputs@i+1)^0,f,c
  8073  004EDA                     l3561:
  8074  004EDA  500F               	movf	fputs@i^0,w,c
  8075  004EDC  240A               	addwf	fputs@s^0,w,c
  8076  004EDE  6ED9               	movwf	fsr2l,c
  8077  004EE0  5010               	movf	(fputs@i+1)^0,w,c
  8078  004EE2  200B               	addwfc	(fputs@s+1)^0,w,c
  8079  004EE4  6EDA               	movwf	fsr2h,c
  8080  004EE6  50DF               	movf	indf2,w,c
  8081  004EE8  6E0E               	movwf	fputs@c^0,c
  8082  004EEA  500E               	movf	fputs@c^0,w,c
  8083  004EEC  A4D8               	btfss	status,2,c
  8084  004EEE  EF7B  F027         	goto	u3821
  8085  004EF2  EF7D  F027         	goto	u3820
  8086  004EF6                     u3821:
  8087  004EF6  EF62  F027         	goto	l3557
  8088  004EFA                     u3820:
  8089  004EFA  0012               	return		;funcret
  8090  004EFC                     __end_of_fputs:
  8091                           	callstack 0
  8092                           
  8093 ;; *************** function _fputc *****************
  8094 ;; Defined at:
  8095 ;;		line 8 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  8096 ;; Parameters:    Size  Location     Type
  8097 ;;  c               2    0[COMRAM] int 
  8098 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8099 ;;		 -> sprintf@f(6), 
  8100 ;; Auto vars:     Size  Location     Type
  8101 ;;		None
  8102 ;; Return value:  Size  Location     Type
  8103 ;;                  2    0[COMRAM] int 
  8104 ;; Registers used:
  8105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8106 ;; Tracked objects:
  8107 ;;		On entry : 0/0
  8108 ;;		On exit  : 0/0
  8109 ;;		Unchanged: 0/0
  8110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8111 ;;      Params:         4       0       0       0       0       0       0
  8112 ;;      Locals:         0       0       0       0       0       0       0
  8113 ;;      Temps:          5       0       0       0       0       0       0
  8114 ;;      Totals:         9       0       0       0       0       0       0
  8115 ;;Total ram usage:        9 bytes
  8116 ;; Hardware stack levels used:    1
  8117 ;; Hardware stack levels required when called:    1
  8118 ;; This function calls:
  8119 ;;		_putch
  8120 ;; This function is called by:
  8121 ;;		_pad
  8122 ;;		_vfpfcnvrt
  8123 ;;		_fputs
  8124 ;; This function uses a non-reentrant model
  8125 ;;
  8126                           
  8127                           	psect	text17
  8128  004624                     __ptext17:
  8129                           	callstack 0
  8130  004624                     _fputc:
  8131                           	callstack 25
  8132  004624  5003               	movf	fputc@fp^0,w,c
  8133  004626  1004               	iorwf	(fputc@fp+1)^0,w,c
  8134  004628  B4D8               	btfsc	status,2,c
  8135  00462A  EF19  F023         	goto	u3391
  8136  00462E  EF1B  F023         	goto	u3390
  8137  004632                     u3391:
  8138  004632  EF24  F023         	goto	l3343
  8139  004636                     u3390:
  8140  004636  5003               	movf	fputc@fp^0,w,c
  8141  004638  1004               	iorwf	(fputc@fp+1)^0,w,c
  8142  00463A  A4D8               	btfss	status,2,c
  8143  00463C  EF22  F023         	goto	u3401
  8144  004640  EF24  F023         	goto	u3400
  8145  004644                     u3401:
  8146  004644  EF29  F023         	goto	l3345
  8147  004648                     u3400:
  8148  004648                     l3343:
  8149  004648  5001               	movf	fputc@c^0,w,c
  8150  00464A  EC51  F028         	call	_putch
  8151  00464E  EF76  F023         	goto	l1204
  8152  004652                     l3345:
  8153  004652  EE20 F004          	lfsr	2,4
  8154  004656  5003               	movf	fputc@fp^0,w,c
  8155  004658  26D9               	addwf	fsr2l,f,c
  8156  00465A  5004               	movf	(fputc@fp+1)^0,w,c
  8157  00465C  22DA               	addwfc	fsr2h,f,c
  8158  00465E  50DE               	movf	postinc2,w,c
  8159  004660  10DE               	iorwf	postinc2,w,c
  8160  004662  B4D8               	btfsc	status,2,c
  8161  004664  EF36  F023         	goto	u3411
  8162  004668  EF38  F023         	goto	u3410
  8163  00466C                     u3411:
  8164  00466C  EF53  F023         	goto	l3349
  8165  004670                     u3410:
  8166  004670  EE20 F004          	lfsr	2,4
  8167  004674  5003               	movf	fputc@fp^0,w,c
  8168  004676  26D9               	addwf	fsr2l,f,c
  8169  004678  5004               	movf	(fputc@fp+1)^0,w,c
  8170  00467A  22DA               	addwfc	fsr2h,f,c
  8171  00467C  EE10 F002          	lfsr	1,2
  8172  004680  5003               	movf	fputc@fp^0,w,c
  8173  004682  26E1               	addwf	fsr1l,f,c
  8174  004684  5004               	movf	(fputc@fp+1)^0,w,c
  8175  004686  22E2               	addwfc	fsr1h,f,c
  8176  004688  50DE               	movf	postinc2,w,c
  8177  00468A  5CE6               	subwf	postinc1,w,c
  8178  00468C  50E6               	movf	postinc1,w,c
  8179  00468E  0A80               	xorlw	128
  8180  004690  6E09               	movwf	(??_fputc+4)^0,c
  8181  004692  50DE               	movf	postinc2,w,c
  8182  004694  0A80               	xorlw	128
  8183  004696  5809               	subwfb	(??_fputc+4)^0,w,c
  8184  004698  B0D8               	btfsc	status,0,c
  8185  00469A  EF51  F023         	goto	u3421
  8186  00469E  EF53  F023         	goto	u3420
  8187  0046A2                     u3421:
  8188  0046A2  EF76  F023         	goto	l1204
  8189  0046A6                     u3420:
  8190  0046A6                     l3349:
  8191  0046A6  EE20 F002          	lfsr	2,2
  8192  0046AA  5003               	movf	fputc@fp^0,w,c
  8193  0046AC  26D9               	addwf	fsr2l,f,c
  8194  0046AE  5004               	movf	(fputc@fp+1)^0,w,c
  8195  0046B0  22DA               	addwfc	fsr2h,f,c
  8196  0046B2  CFDE F005          	movff	postinc2,??_fputc
  8197  0046B6  CFDD F006          	movff	postdec2,??_fputc+1
  8198  0046BA  C003  FFD9         	movff	fputc@fp,fsr2l
  8199  0046BE  C004  FFDA         	movff	fputc@fp+1,fsr2h
  8200  0046C2  CFDE F007          	movff	postinc2,??_fputc+2
  8201  0046C6  CFDD F008          	movff	postdec2,??_fputc+3
  8202  0046CA  5005               	movf	??_fputc^0,w,c
  8203  0046CC  2407               	addwf	(??_fputc+2)^0,w,c
  8204  0046CE  6ED9               	movwf	fsr2l,c
  8205  0046D0  5006               	movf	(??_fputc+1)^0,w,c
  8206  0046D2  2008               	addwfc	(??_fputc+3)^0,w,c
  8207  0046D4  6EDA               	movwf	fsr2h,c
  8208  0046D6  C001  FFDF         	movff	fputc@c,indf2
  8209  0046DA  EE20 F002          	lfsr	2,2
  8210  0046DE  5003               	movf	fputc@fp^0,w,c
  8211  0046E0  26D9               	addwf	fsr2l,f,c
  8212  0046E2  5004               	movf	(fputc@fp+1)^0,w,c
  8213  0046E4  22DA               	addwfc	fsr2h,f,c
  8214  0046E6  2ADE               	incf	postinc2,f,c
  8215  0046E8  0E00               	movlw	0
  8216  0046EA  22DD               	addwfc	postdec2,f,c
  8217  0046EC                     l1204:
  8218  0046EC  0012               	return		;funcret
  8219  0046EE                     __end_of_fputc:
  8220                           	callstack 0
  8221                           
  8222 ;; *************** function _putch *****************
  8223 ;; Defined at:
  8224 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\putch.c"
  8225 ;; Parameters:    Size  Location     Type
  8226 ;;  c               1    wreg     unsigned char 
  8227 ;; Auto vars:     Size  Location     Type
  8228 ;;  c               1    0[COMRAM] unsigned char 
  8229 ;; Return value:  Size  Location     Type
  8230 ;;                  1    wreg      void 
  8231 ;; Registers used:
  8232 ;;		wreg
  8233 ;; Tracked objects:
  8234 ;;		On entry : 0/0
  8235 ;;		On exit  : 0/0
  8236 ;;		Unchanged: 0/0
  8237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8238 ;;      Params:         0       0       0       0       0       0       0
  8239 ;;      Locals:         0       0       0       0       0       0       0
  8240 ;;      Temps:          0       0       0       0       0       0       0
  8241 ;;      Totals:         0       0       0       0       0       0       0
  8242 ;;Total ram usage:        0 bytes
  8243 ;; Hardware stack levels used:    1
  8244 ;; This function calls:
  8245 ;;		Nothing
  8246 ;; This function is called by:
  8247 ;;		_fputc
  8248 ;; This function uses a non-reentrant model
  8249 ;;
  8250                           
  8251                           	psect	text18
  8252  0050A2                     __ptext18:
  8253                           	callstack 0
  8254  0050A2                     _putch:
  8255                           	callstack 25
  8256  0050A2  0012               	return		;funcret
  8257  0050A4                     __end_of_putch:
  8258                           	callstack 0
  8259                           
  8260 ;; *************** function _floorf *****************
  8261 ;; Defined at:
  8262 ;;		line 3 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\floorf.c"
  8263 ;; Parameters:    Size  Location     Type
  8264 ;;  x               4   80[COMRAM] float 
  8265 ;; Auto vars:     Size  Location     Type
  8266 ;;  u               4   96[COMRAM] struct .
  8267 ;;  m               4   90[COMRAM] unsigned long 
  8268 ;;  e               2   94[COMRAM] int 
  8269 ;; Return value:  Size  Location     Type
  8270 ;;                  4   80[COMRAM] float 
  8271 ;; Registers used:
  8272 ;;		wreg, status,2, status,0
  8273 ;; Tracked objects:
  8274 ;;		On entry : 0/0
  8275 ;;		On exit  : 0/0
  8276 ;;		Unchanged: 0/0
  8277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8278 ;;      Params:         4       0       0       0       0       0       0
  8279 ;;      Locals:        10       0       0       0       0       0       0
  8280 ;;      Temps:          6       0       0       0       0       0       0
  8281 ;;      Totals:        20       0       0       0       0       0       0
  8282 ;;Total ram usage:       20 bytes
  8283 ;; Hardware stack levels used:    1
  8284 ;; This function calls:
  8285 ;;		Nothing
  8286 ;; This function is called by:
  8287 ;;		_efgtoa
  8288 ;; This function uses a non-reentrant model
  8289 ;;
  8290                           
  8291                           	psect	text19
  8292  0039BC                     __ptext19:
  8293                           	callstack 0
  8294  0039BC                     _floorf:
  8295                           	callstack 25
  8296  0039BC  C100  F061         	movff	floorf@F524,floorf@u
  8297  0039C0  C101  F062         	movff	floorf@F524+1,floorf@u+1
  8298  0039C4  C102  F063         	movff	floorf@F524+2,floorf@u+2
  8299  0039C8  C103  F064         	movff	floorf@F524+3,floorf@u+3
  8300  0039CC  C051  F061         	movff	floorf@x,floorf@u
  8301  0039D0  C052  F062         	movff	floorf@x+1,floorf@u+1
  8302  0039D4  C053  F063         	movff	floorf@x+2,floorf@u+2
  8303  0039D8  C054  F064         	movff	floorf@x+3,floorf@u+3
  8304  0039DC  0E81               	movlw	129
  8305  0039DE  6E55               	movwf	??_floorf^0,c
  8306  0039E0  0EFF               	movlw	255
  8307  0039E2  6E56               	movwf	(??_floorf+1)^0,c
  8308  0039E4  C061  F057         	movff	floorf@u,??_floorf+2
  8309  0039E8  C062  F058         	movff	floorf@u+1,??_floorf+3
  8310  0039EC  C063  F059         	movff	floorf@u+2,??_floorf+4
  8311  0039F0  C064  F05A         	movff	floorf@u+3,??_floorf+5
  8312  0039F4  0E18               	movlw	24
  8313  0039F6  EF02  F01D         	goto	u4720
  8314  0039FA                     u4725:
  8315  0039FA  90D8               	bcf	status,0,c
  8316  0039FC  325A               	rrcf	(??_floorf+5)^0,f,c
  8317  0039FE  3259               	rrcf	(??_floorf+4)^0,f,c
  8318  003A00  3258               	rrcf	(??_floorf+3)^0,f,c
  8319  003A02  3257               	rrcf	(??_floorf+2)^0,f,c
  8320  003A04                     u4720:
  8321  003A04  2EE8               	decfsz	wreg,f,c
  8322  003A06  EFFD  F01C         	goto	u4725
  8323  003A0A  5057               	movf	(??_floorf+2)^0,w,c
  8324  003A0C  2455               	addwf	??_floorf^0,w,c
  8325  003A0E  6E5F               	movwf	floorf@e^0,c
  8326  003A10  0E00               	movlw	0
  8327  003A12  2056               	addwfc	(??_floorf+1)^0,w,c
  8328  003A14  6E60               	movwf	(floorf@e+1)^0,c
  8329  003A16  BE60               	btfsc	(floorf@e+1)^0,7,c
  8330  003A18  EF17  F01D         	goto	u4731
  8331  003A1C  5060               	movf	(floorf@e+1)^0,w,c
  8332  003A1E  E109               	bnz	u4730
  8333  003A20  0E17               	movlw	23
  8334  003A22  5C5F               	subwf	floorf@e^0,w,c
  8335  003A24  A0D8               	btfss	status,0,c
  8336  003A26  EF17  F01D         	goto	u4731
  8337  003A2A  EF19  F01D         	goto	u4730
  8338  003A2E                     u4731:
  8339  003A2E  EF23  F01D         	goto	l4091
  8340  003A32                     u4730:
  8341  003A32                     l4089:
  8342  003A32  C051  F051         	movff	floorf@x,?_floorf
  8343  003A36  C052  F052         	movff	floorf@x+1,?_floorf+1
  8344  003A3A  C053  F053         	movff	floorf@x+2,?_floorf+2
  8345  003A3E  C054  F054         	movff	floorf@x+3,?_floorf+3
  8346  003A42  EFE6  F01D         	goto	l1165
  8347  003A46                     l4091:
  8348  003A46  BE60               	btfsc	(floorf@e+1)^0,7,c
  8349  003A48  EF28  F01D         	goto	u4741
  8350  003A4C  EF2A  F01D         	goto	u4740
  8351  003A50                     u4741:
  8352  003A50  EF9A  F01D         	goto	l4101
  8353  003A54                     u4740:
  8354  003A54  C05F  F055         	movff	floorf@e,??_floorf
  8355  003A58  0EFF               	movlw	255
  8356  003A5A  6E56               	movwf	(??_floorf+1)^0,c
  8357  003A5C  0EFF               	movlw	255
  8358  003A5E  6E57               	movwf	(??_floorf+2)^0,c
  8359  003A60  0E7F               	movlw	127
  8360  003A62  6E58               	movwf	(??_floorf+3)^0,c
  8361  003A64  0E00               	movlw	0
  8362  003A66  6E59               	movwf	(??_floorf+4)^0,c
  8363  003A68                     u4755:
  8364  003A68  6655               	tstfsz	??_floorf^0,c
  8365  003A6A  EF39  F01D         	goto	u4756
  8366  003A6E  EF41  F01D         	goto	u4757
  8367  003A72                     u4756:
  8368  003A72  3459               	rlcf	(??_floorf+4)^0,w,c
  8369  003A74  3259               	rrcf	(??_floorf+4)^0,f,c
  8370  003A76  3258               	rrcf	(??_floorf+3)^0,f,c
  8371  003A78  3257               	rrcf	(??_floorf+2)^0,f,c
  8372  003A7A  3256               	rrcf	(??_floorf+1)^0,f,c
  8373  003A7C  2E55               	decfsz	??_floorf^0,f,c
  8374  003A7E  EF34  F01D         	goto	u4755
  8375  003A82                     u4757:
  8376  003A82  C056  F05B         	movff	??_floorf+1,floorf@m
  8377  003A86  C057  F05C         	movff	??_floorf+2,floorf@m+1
  8378  003A8A  C058  F05D         	movff	??_floorf+3,floorf@m+2
  8379  003A8E  C059  F05E         	movff	??_floorf+4,floorf@m+3
  8380  003A92  505B               	movf	floorf@m^0,w,c
  8381  003A94  1461               	andwf	floorf@u^0,w,c
  8382  003A96  6E55               	movwf	??_floorf^0,c
  8383  003A98  505C               	movf	(floorf@m+1)^0,w,c
  8384  003A9A  1462               	andwf	(floorf@u+1)^0,w,c
  8385  003A9C  6E56               	movwf	(??_floorf+1)^0,c
  8386  003A9E  505D               	movf	(floorf@m+2)^0,w,c
  8387  003AA0  1463               	andwf	(floorf@u+2)^0,w,c
  8388  003AA2  6E57               	movwf	(??_floorf+2)^0,c
  8389  003AA4  505E               	movf	(floorf@m+3)^0,w,c
  8390  003AA6  1464               	andwf	(floorf@u+3)^0,w,c
  8391  003AA8  6E58               	movwf	(??_floorf+3)^0,c
  8392  003AAA  5055               	movf	??_floorf^0,w,c
  8393  003AAC  1056               	iorwf	(??_floorf+1)^0,w,c
  8394  003AAE  1057               	iorwf	(??_floorf+2)^0,w,c
  8395  003AB0  1058               	iorwf	(??_floorf+3)^0,w,c
  8396  003AB2  A4D8               	btfss	status,2,c
  8397  003AB4  EF5E  F01D         	goto	u4761
  8398  003AB8  EF60  F01D         	goto	u4760
  8399  003ABC                     u4761:
  8400  003ABC  EF62  F01D         	goto	l4097
  8401  003AC0                     u4760:
  8402  003AC0  EF19  F01D         	goto	l4089
  8403  003AC4                     l4097:
  8404  003AC4  C061  F055         	movff	floorf@u,??_floorf
  8405  003AC8  C062  F056         	movff	floorf@u+1,??_floorf+1
  8406  003ACC  C063  F057         	movff	floorf@u+2,??_floorf+2
  8407  003AD0  C064  F058         	movff	floorf@u+3,??_floorf+3
  8408  003AD4  0E20               	movlw	32
  8409  003AD6  EF72  F01D         	goto	u4770
  8410  003ADA                     u4775:
  8411  003ADA  90D8               	bcf	status,0,c
  8412  003ADC  3258               	rrcf	(??_floorf+3)^0,f,c
  8413  003ADE  3257               	rrcf	(??_floorf+2)^0,f,c
  8414  003AE0  3256               	rrcf	(??_floorf+1)^0,f,c
  8415  003AE2  3255               	rrcf	??_floorf^0,f,c
  8416  003AE4                     u4770:
  8417  003AE4  2EE8               	decfsz	wreg,f,c
  8418  003AE6  EF6D  F01D         	goto	u4775
  8419  003AEA  5055               	movf	??_floorf^0,w,c
  8420  003AEC  1056               	iorwf	(??_floorf+1)^0,w,c
  8421  003AEE  1057               	iorwf	(??_floorf+2)^0,w,c
  8422  003AF0  1058               	iorwf	(??_floorf+3)^0,w,c
  8423  003AF2  B4D8               	btfsc	status,2,c
  8424  003AF4  EF7E  F01D         	goto	u4781
  8425  003AF8  EF80  F01D         	goto	u4780
  8426  003AFC                     u4781:
  8427  003AFC  EF88  F01D         	goto	l1168
  8428  003B00                     u4780:
  8429  003B00  505B               	movf	floorf@m^0,w,c
  8430  003B02  2661               	addwf	floorf@u^0,f,c
  8431  003B04  505C               	movf	(floorf@m+1)^0,w,c
  8432  003B06  2262               	addwfc	(floorf@u+1)^0,f,c
  8433  003B08  505D               	movf	(floorf@m+2)^0,w,c
  8434  003B0A  2263               	addwfc	(floorf@u+2)^0,f,c
  8435  003B0C  505E               	movf	(floorf@m+3)^0,w,c
  8436  003B0E  2264               	addwfc	(floorf@u+3)^0,f,c
  8437  003B10                     l1168:
  8438  003B10  1C5B               	comf	floorf@m^0,w,c
  8439  003B12  6E55               	movwf	??_floorf^0,c
  8440  003B14  1C5C               	comf	(floorf@m+1)^0,w,c
  8441  003B16  6E56               	movwf	(??_floorf+1)^0,c
  8442  003B18  1C5D               	comf	(floorf@m+2)^0,w,c
  8443  003B1A  6E57               	movwf	(??_floorf+2)^0,c
  8444  003B1C  1C5E               	comf	(floorf@m+3)^0,w,c
  8445  003B1E  6E58               	movwf	(??_floorf+3)^0,c
  8446  003B20  5055               	movf	??_floorf^0,w,c
  8447  003B22  1661               	andwf	floorf@u^0,f,c
  8448  003B24  5056               	movf	(??_floorf+1)^0,w,c
  8449  003B26  1662               	andwf	(floorf@u+1)^0,f,c
  8450  003B28  5057               	movf	(??_floorf+2)^0,w,c
  8451  003B2A  1663               	andwf	(floorf@u+2)^0,f,c
  8452  003B2C  5058               	movf	(??_floorf+3)^0,w,c
  8453  003B2E  1664               	andwf	(floorf@u+3)^0,f,c
  8454  003B30  EFDE  F01D         	goto	l4109
  8455  003B34                     l4101:
  8456  003B34  C061  F055         	movff	floorf@u,??_floorf
  8457  003B38  C062  F056         	movff	floorf@u+1,??_floorf+1
  8458  003B3C  C063  F057         	movff	floorf@u+2,??_floorf+2
  8459  003B40  C064  F058         	movff	floorf@u+3,??_floorf+3
  8460  003B44  0E20               	movlw	32
  8461  003B46  EFAA  F01D         	goto	u4790
  8462  003B4A                     u4795:
  8463  003B4A  90D8               	bcf	status,0,c
  8464  003B4C  3258               	rrcf	(??_floorf+3)^0,f,c
  8465  003B4E  3257               	rrcf	(??_floorf+2)^0,f,c
  8466  003B50  3256               	rrcf	(??_floorf+1)^0,f,c
  8467  003B52  3255               	rrcf	??_floorf^0,f,c
  8468  003B54                     u4790:
  8469  003B54  2EE8               	decfsz	wreg,f,c
  8470  003B56  EFA5  F01D         	goto	u4795
  8471  003B5A  5055               	movf	??_floorf^0,w,c
  8472  003B5C  1056               	iorwf	(??_floorf+1)^0,w,c
  8473  003B5E  1057               	iorwf	(??_floorf+2)^0,w,c
  8474  003B60  1058               	iorwf	(??_floorf+3)^0,w,c
  8475  003B62  A4D8               	btfss	status,2,c
  8476  003B64  EFB6  F01D         	goto	u4801
  8477  003B68  EFB8  F01D         	goto	u4800
  8478  003B6C                     u4801:
  8479  003B6C  EFC2  F01D         	goto	l4105
  8480  003B70                     u4800:
  8481  003B70  0E00               	movlw	0
  8482  003B72  6E61               	movwf	floorf@u^0,c
  8483  003B74  0E00               	movlw	0
  8484  003B76  6E62               	movwf	(floorf@u+1)^0,c
  8485  003B78  0E00               	movlw	0
  8486  003B7A  6E63               	movwf	(floorf@u+2)^0,c
  8487  003B7C  0E00               	movlw	0
  8488  003B7E  6E64               	movwf	(floorf@u+3)^0,c
  8489  003B80  EFDE  F01D         	goto	l4109
  8490  003B84                     l4105:
  8491  003B84  90D8               	bcf	status,0,c
  8492  003B86  3461               	rlcf	floorf@u^0,w,c
  8493  003B88  6E55               	movwf	??_floorf^0,c
  8494  003B8A  3462               	rlcf	(floorf@u+1)^0,w,c
  8495  003B8C  6E56               	movwf	(??_floorf+1)^0,c
  8496  003B8E  3463               	rlcf	(floorf@u+2)^0,w,c
  8497  003B90  6E57               	movwf	(??_floorf+2)^0,c
  8498  003B92  3464               	rlcf	(floorf@u+3)^0,w,c
  8499  003B94  6E58               	movwf	(??_floorf+3)^0,c
  8500  003B96  5055               	movf	??_floorf^0,w,c
  8501  003B98  1056               	iorwf	(??_floorf+1)^0,w,c
  8502  003B9A  1057               	iorwf	(??_floorf+2)^0,w,c
  8503  003B9C  1058               	iorwf	(??_floorf+3)^0,w,c
  8504  003B9E  B4D8               	btfsc	status,2,c
  8505  003BA0  EFD4  F01D         	goto	u4811
  8506  003BA4  EFD6  F01D         	goto	u4810
  8507  003BA8                     u4811:
  8508  003BA8  EFDE  F01D         	goto	l4109
  8509  003BAC                     u4810:
  8510  003BAC  0E00               	movlw	0
  8511  003BAE  6E61               	movwf	floorf@u^0,c
  8512  003BB0  0E00               	movlw	0
  8513  003BB2  6E62               	movwf	(floorf@u+1)^0,c
  8514  003BB4  0E80               	movlw	128
  8515  003BB6  6E63               	movwf	(floorf@u+2)^0,c
  8516  003BB8  0EBF               	movlw	191
  8517  003BBA  6E64               	movwf	(floorf@u+3)^0,c
  8518  003BBC                     l4109:
  8519  003BBC  C061  F051         	movff	floorf@u,?_floorf
  8520  003BC0  C062  F052         	movff	floorf@u+1,?_floorf+1
  8521  003BC4  C063  F053         	movff	floorf@u+2,?_floorf+2
  8522  003BC8  C064  F054         	movff	floorf@u+3,?_floorf+3
  8523  003BCC                     l1165:
  8524  003BCC  0012               	return		;funcret
  8525  003BCE                     __end_of_floorf:
  8526                           	callstack 0
  8527                           
  8528 ;; *************** function ___fpclassifyf *****************
  8529 ;; Defined at:
  8530 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  8531 ;; Parameters:    Size  Location     Type
  8532 ;;  x               4    0[COMRAM] float 
  8533 ;; Auto vars:     Size  Location     Type
  8534 ;;  u               4   10[COMRAM] struct .
  8535 ;;  e               2    8[COMRAM] int 
  8536 ;; Return value:  Size  Location     Type
  8537 ;;                  2    0[COMRAM] int 
  8538 ;; Registers used:
  8539 ;;		wreg, status,2, status,0
  8540 ;; Tracked objects:
  8541 ;;		On entry : 0/0
  8542 ;;		On exit  : 0/0
  8543 ;;		Unchanged: 0/0
  8544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8545 ;;      Params:         4       0       0       0       0       0       0
  8546 ;;      Locals:         6       0       0       0       0       0       0
  8547 ;;      Temps:          4       0       0       0       0       0       0
  8548 ;;      Totals:        14       0       0       0       0       0       0
  8549 ;;Total ram usage:       14 bytes
  8550 ;; Hardware stack levels used:    1
  8551 ;; This function calls:
  8552 ;;		Nothing
  8553 ;; This function is called by:
  8554 ;;		_efgtoa
  8555 ;; This function uses a non-reentrant model
  8556 ;;
  8557                           
  8558                           	psect	text20
  8559  004450                     __ptext20:
  8560                           	callstack 0
  8561  004450                     ___fpclassifyf:
  8562                           	callstack 25
  8563  004450  C104  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  8564  004454  C105  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  8565  004458  C106  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  8566  00445C  C107  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  8567  004460  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  8568  004464  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  8569  004468  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  8570  00446C  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  8571  004470  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  8572  004474  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8573  004478  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8574  00447C  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8575  004480  0E18               	movlw	24
  8576  004482  EF48  F022         	goto	u4600
  8577  004486                     u4605:
  8578  004486  90D8               	bcf	status,0,c
  8579  004488  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  8580  00448A  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  8581  00448C  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  8582  00448E  3205               	rrcf	??___fpclassifyf^0,f,c
  8583  004490                     u4600:
  8584  004490  2EE8               	decfsz	wreg,f,c
  8585  004492  EF43  F022         	goto	u4605
  8586  004496  5005               	movf	??___fpclassifyf^0,w,c
  8587  004498  6E09               	movwf	___fpclassifyf@e^0,c
  8588  00449A  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  8589  00449C  5009               	movf	___fpclassifyf@e^0,w,c
  8590  00449E  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8591  0044A0  A4D8               	btfss	status,2,c
  8592  0044A2  EF55  F022         	goto	u4611
  8593  0044A6  EF57  F022         	goto	u4610
  8594  0044AA                     u4611:
  8595  0044AA  EF77  F022         	goto	l4061
  8596  0044AE                     u4610:
  8597  0044AE  90D8               	bcf	status,0,c
  8598  0044B0  340B               	rlcf	___fpclassifyf@u^0,w,c
  8599  0044B2  6E05               	movwf	??___fpclassifyf^0,c
  8600  0044B4  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  8601  0044B6  6E06               	movwf	(??___fpclassifyf+1)^0,c
  8602  0044B8  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  8603  0044BA  6E07               	movwf	(??___fpclassifyf+2)^0,c
  8604  0044BC  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  8605  0044BE  6E08               	movwf	(??___fpclassifyf+3)^0,c
  8606  0044C0  5005               	movf	??___fpclassifyf^0,w,c
  8607  0044C2  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  8608  0044C4  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  8609  0044C6  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  8610  0044C8  A4D8               	btfss	status,2,c
  8611  0044CA  EF69  F022         	goto	u4621
  8612  0044CE  EF6B  F022         	goto	u4620
  8613  0044D2                     u4621:
  8614  0044D2  EF71  F022         	goto	l4057
  8615  0044D6                     u4620:
  8616  0044D6  0E00               	movlw	0
  8617  0044D8  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8618  0044DA  0E02               	movlw	2
  8619  0044DC  6E01               	movwf	?___fpclassifyf^0,c
  8620  0044DE  EFA6  F022         	goto	l1127
  8621  0044E2                     l4057:
  8622  0044E2  0E00               	movlw	0
  8623  0044E4  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8624  0044E6  0E03               	movlw	3
  8625  0044E8  6E01               	movwf	?___fpclassifyf^0,c
  8626  0044EA  EFA6  F022         	goto	l1127
  8627  0044EE                     l4061:
  8628  0044EE  2809               	incf	___fpclassifyf@e^0,w,c
  8629  0044F0  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8630  0044F2  A4D8               	btfss	status,2,c
  8631  0044F4  EF7E  F022         	goto	u4631
  8632  0044F8  EF80  F022         	goto	u4630
  8633  0044FC                     u4631:
  8634  0044FC  EFA2  F022         	goto	l4067
  8635  004500                     u4630:
  8636  004500  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  8637  004504  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8638  004508  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8639  00450C  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8640  004510  0E09               	movlw	9
  8641  004512                     u4645:
  8642  004512  90D8               	bcf	status,0,c
  8643  004514  3605               	rlcf	??___fpclassifyf^0,f,c
  8644  004516  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  8645  004518  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  8646  00451A  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  8647  00451C  2EE8               	decfsz	wreg,f,c
  8648  00451E  EF89  F022         	goto	u4645
  8649  004522  5005               	movf	??___fpclassifyf^0,w,c
  8650  004524  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  8651  004526  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  8652  004528  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  8653  00452A  B4D8               	btfsc	status,2,c
  8654  00452C  EF9A  F022         	goto	u4651
  8655  004530  EF9D  F022         	goto	u4650
  8656  004534                     u4651:
  8657  004534  0E01               	movlw	1
  8658  004536  EF9E  F022         	goto	u4660
  8659  00453A                     u4650:
  8660  00453A  0E00               	movlw	0
  8661  00453C                     u4660:
  8662  00453C  6E01               	movwf	?___fpclassifyf^0,c
  8663  00453E  6A02               	clrf	(?___fpclassifyf+1)^0,c
  8664  004540  EFA6  F022         	goto	l1127
  8665  004544                     l4067:
  8666  004544  0E00               	movlw	0
  8667  004546  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8668  004548  0E04               	movlw	4
  8669  00454A  6E01               	movwf	?___fpclassifyf^0,c
  8670  00454C                     l1127:
  8671  00454C  0012               	return		;funcret
  8672  00454E                     __end_of___fpclassifyf:
  8673                           	callstack 0
  8674                           
  8675 ;; *************** function ___fltol *****************
  8676 ;; Defined at:
  8677 ;;		line 43 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\fltol.c"
  8678 ;; Parameters:    Size  Location     Type
  8679 ;;  f1              4   39[COMRAM] int 
  8680 ;; Auto vars:     Size  Location     Type
  8681 ;;  exp1            1   48[COMRAM] unsigned char 
  8682 ;;  sign1           1   47[COMRAM] unsigned char 
  8683 ;; Return value:  Size  Location     Type
  8684 ;;                  4   39[COMRAM] long 
  8685 ;; Registers used:
  8686 ;;		wreg, status,2, status,0
  8687 ;; Tracked objects:
  8688 ;;		On entry : 0/0
  8689 ;;		On exit  : 0/0
  8690 ;;		Unchanged: 0/0
  8691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8692 ;;      Params:         4       0       0       0       0       0       0
  8693 ;;      Locals:         2       0       0       0       0       0       0
  8694 ;;      Temps:          4       0       0       0       0       0       0
  8695 ;;      Totals:        10       0       0       0       0       0       0
  8696 ;;Total ram usage:       10 bytes
  8697 ;; Hardware stack levels used:    1
  8698 ;; This function calls:
  8699 ;;		Nothing
  8700 ;; This function is called by:
  8701 ;;		_encher_tanque
  8702 ;;		_esvaziar_tanque
  8703 ;;		_efgtoa
  8704 ;; This function uses a non-reentrant model
  8705 ;;
  8706                           
  8707                           	psect	text21
  8708  004246                     __ptext21:
  8709                           	callstack 0
  8710  004246                     ___fltol:
  8711                           	callstack 25
  8712  004246  342A               	rlcf	(___fltol@f1+2)^0,w,c
  8713  004248  342B               	rlcf	(___fltol@f1+3)^0,w,c
  8714  00424A  6E31               	movwf	___fltol@exp1^0,c
  8715  00424C  5031               	movf	___fltol@exp1^0,w,c
  8716  00424E  A4D8               	btfss	status,2,c
  8717  004250  EF2C  F021         	goto	u4491
  8718  004254  EF2E  F021         	goto	u4490
  8719  004258                     u4491:
  8720  004258  EF38  F021         	goto	l3989
  8721  00425C                     u4490:
  8722  00425C                     l3985:
  8723  00425C  0E00               	movlw	0
  8724  00425E  6E28               	movwf	?___fltol^0,c
  8725  004260  0E00               	movlw	0
  8726  004262  6E29               	movwf	(?___fltol+1)^0,c
  8727  004264  0E00               	movlw	0
  8728  004266  6E2A               	movwf	(?___fltol+2)^0,c
  8729  004268  0E00               	movlw	0
  8730  00426A  6E2B               	movwf	(?___fltol+3)^0,c
  8731  00426C  EFA5  F021         	goto	l568
  8732  004270                     l3989:
  8733  004270  C028  F02C         	movff	___fltol@f1,??___fltol
  8734  004274  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  8735  004278  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  8736  00427C  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  8737  004280  0E20               	movlw	32
  8738  004282  EF48  F021         	goto	u4500
  8739  004286                     u4505:
  8740  004286  90D8               	bcf	status,0,c
  8741  004288  322F               	rrcf	(??___fltol+3)^0,f,c
  8742  00428A  322E               	rrcf	(??___fltol+2)^0,f,c
  8743  00428C  322D               	rrcf	(??___fltol+1)^0,f,c
  8744  00428E  322C               	rrcf	??___fltol^0,f,c
  8745  004290                     u4500:
  8746  004290  2EE8               	decfsz	wreg,f,c
  8747  004292  EF43  F021         	goto	u4505
  8748  004296  502C               	movf	??___fltol^0,w,c
  8749  004298  6E30               	movwf	___fltol@sign1^0,c
  8750  00429A  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  8751  00429C  0EFF               	movlw	255
  8752  00429E  1628               	andwf	___fltol@f1^0,f,c
  8753  0042A0  0EFF               	movlw	255
  8754  0042A2  1629               	andwf	(___fltol@f1+1)^0,f,c
  8755  0042A4  0EFF               	movlw	255
  8756  0042A6  162A               	andwf	(___fltol@f1+2)^0,f,c
  8757  0042A8  0E00               	movlw	0
  8758  0042AA  162B               	andwf	(___fltol@f1+3)^0,f,c
  8759  0042AC  0E96               	movlw	150
  8760  0042AE  5E31               	subwf	___fltol@exp1^0,f,c
  8761  0042B0  BE31               	btfsc	___fltol@exp1^0,7,c
  8762  0042B2  EF5F  F021         	goto	u4510
  8763  0042B6  EF5D  F021         	goto	u4511
  8764  0042BA                     u4511:
  8765  0042BA  EF75  F021         	goto	l4009
  8766  0042BE                     u4510:
  8767  0042BE  5031               	movf	___fltol@exp1^0,w,c
  8768  0042C0  0A80               	xorlw	128
  8769  0042C2  0F97               	addlw	151
  8770  0042C4  B0D8               	btfsc	status,0,c
  8771  0042C6  EF67  F021         	goto	u4521
  8772  0042CA  EF69  F021         	goto	u4520
  8773  0042CE                     u4521:
  8774  0042CE  EF6B  F021         	goto	l4005
  8775  0042D2                     u4520:
  8776  0042D2  EF2E  F021         	goto	l3985
  8777  0042D6                     l4005:
  8778  0042D6  90D8               	bcf	status,0,c
  8779  0042D8  322B               	rrcf	(___fltol@f1+3)^0,f,c
  8780  0042DA  322A               	rrcf	(___fltol@f1+2)^0,f,c
  8781  0042DC  3229               	rrcf	(___fltol@f1+1)^0,f,c
  8782  0042DE  3228               	rrcf	___fltol@f1^0,f,c
  8783  0042E0  3E31               	incfsz	___fltol@exp1^0,f,c
  8784  0042E2  EF6B  F021         	goto	l4005
  8785  0042E6  EF8D  F021         	goto	l4019
  8786  0042EA                     l4009:
  8787  0042EA  0E1F               	movlw	31
  8788  0042EC  6431               	cpfsgt	___fltol@exp1^0,c
  8789  0042EE  EF7B  F021         	goto	u4531
  8790  0042F2  EF7D  F021         	goto	u4530
  8791  0042F6                     u4531:
  8792  0042F6  EF85  F021         	goto	l4017
  8793  0042FA                     u4530:
  8794  0042FA  EF2E  F021         	goto	l3985
  8795  0042FE                     l4015:
  8796  0042FE  90D8               	bcf	status,0,c
  8797  004300  3628               	rlcf	___fltol@f1^0,f,c
  8798  004302  3629               	rlcf	(___fltol@f1+1)^0,f,c
  8799  004304  362A               	rlcf	(___fltol@f1+2)^0,f,c
  8800  004306  362B               	rlcf	(___fltol@f1+3)^0,f,c
  8801  004308  0631               	decf	___fltol@exp1^0,f,c
  8802  00430A                     l4017:
  8803  00430A  5031               	movf	___fltol@exp1^0,w,c
  8804  00430C  A4D8               	btfss	status,2,c
  8805  00430E  EF8B  F021         	goto	u4541
  8806  004312  EF8D  F021         	goto	u4540
  8807  004316                     u4541:
  8808  004316  EF7F  F021         	goto	l4015
  8809  00431A                     u4540:
  8810  00431A                     l4019:
  8811  00431A  5030               	movf	___fltol@sign1^0,w,c
  8812  00431C  B4D8               	btfsc	status,2,c
  8813  00431E  EF93  F021         	goto	u4551
  8814  004322  EF95  F021         	goto	u4550
  8815  004326                     u4551:
  8816  004326  EF9D  F021         	goto	l4023
  8817  00432A                     u4550:
  8818  00432A  1E2B               	comf	(___fltol@f1+3)^0,f,c
  8819  00432C  1E2A               	comf	(___fltol@f1+2)^0,f,c
  8820  00432E  1E29               	comf	(___fltol@f1+1)^0,f,c
  8821  004330  6C28               	negf	___fltol@f1^0,c
  8822  004332  0E00               	movlw	0
  8823  004334  2229               	addwfc	(___fltol@f1+1)^0,f,c
  8824  004336  222A               	addwfc	(___fltol@f1+2)^0,f,c
  8825  004338  222B               	addwfc	(___fltol@f1+3)^0,f,c
  8826  00433A                     l4023:
  8827  00433A  C028  F028         	movff	___fltol@f1,?___fltol
  8828  00433E  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  8829  004342  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  8830  004346  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  8831  00434A                     l568:
  8832  00434A  0012               	return		;funcret
  8833  00434C                     __end_of___fltol:
  8834                           	callstack 0
  8835                           
  8836 ;; *************** function ___flsub *****************
  8837 ;; Defined at:
  8838 ;;		line 245 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  8839 ;; Parameters:    Size  Location     Type
  8840 ;;  b               4   55[COMRAM] long 
  8841 ;;  a               4   59[COMRAM] long 
  8842 ;; Auto vars:     Size  Location     Type
  8843 ;;		None
  8844 ;; Return value:  Size  Location     Type
  8845 ;;                  4   55[COMRAM] long 
  8846 ;; Registers used:
  8847 ;;		wreg, status,2, status,0, cstack
  8848 ;; Tracked objects:
  8849 ;;		On entry : 0/0
  8850 ;;		On exit  : 0/0
  8851 ;;		Unchanged: 0/0
  8852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8853 ;;      Params:         8       0       0       0       0       0       0
  8854 ;;      Locals:         0       0       0       0       0       0       0
  8855 ;;      Temps:          0       0       0       0       0       0       0
  8856 ;;      Totals:         8       0       0       0       0       0       0
  8857 ;;Total ram usage:        8 bytes
  8858 ;; Hardware stack levels used:    1
  8859 ;; Hardware stack levels required when called:    1
  8860 ;; This function calls:
  8861 ;;		___fladd
  8862 ;; This function is called by:
  8863 ;;		_esvaziar_tanque
  8864 ;;		_efgtoa
  8865 ;; This function uses a non-reentrant model
  8866 ;;
  8867                           
  8868                           	psect	text22
  8869  004E72                     __ptext22:
  8870                           	callstack 0
  8871  004E72                     ___flsub:
  8872                           	callstack 24
  8873  004E72  0E00               	movlw	0
  8874  004E74  1A3C               	xorwf	___flsub@a^0,f,c
  8875  004E76  0E00               	movlw	0
  8876  004E78  1A3D               	xorwf	(___flsub@a+1)^0,f,c
  8877  004E7A  0E00               	movlw	0
  8878  004E7C  1A3E               	xorwf	(___flsub@a+2)^0,f,c
  8879  004E7E  0E80               	movlw	128
  8880  004E80  1A3F               	xorwf	(___flsub@a+3)^0,f,c
  8881  004E82  C038  F028         	movff	___flsub@b,___fladd@b
  8882  004E86  C039  F029         	movff	___flsub@b+1,___fladd@b+1
  8883  004E8A  C03A  F02A         	movff	___flsub@b+2,___fladd@b+2
  8884  004E8E  C03B  F02B         	movff	___flsub@b+3,___fladd@b+3
  8885  004E92  C03C  F02C         	movff	___flsub@a,___fladd@a
  8886  004E96  C03D  F02D         	movff	___flsub@a+1,___fladd@a+1
  8887  004E9A  C03E  F02E         	movff	___flsub@a+2,___fladd@a+2
  8888  004E9E  C03F  F02F         	movff	___flsub@a+3,___fladd@a+3
  8889  004EA2  EC37  F012         	call	___fladd	;wreg free
  8890  004EA6  C028  F038         	movff	?___fladd,?___flsub
  8891  004EAA  C029  F039         	movff	?___fladd+1,?___flsub+1
  8892  004EAE  C02A  F03A         	movff	?___fladd+2,?___flsub+2
  8893  004EB2  C02B  F03B         	movff	?___fladd+3,?___flsub+3
  8894  004EB6  0012               	return		;funcret
  8895  004EB8                     __end_of___flsub:
  8896                           	callstack 0
  8897                           
  8898 ;; *************** function ___fladd *****************
  8899 ;; Defined at:
  8900 ;;		line 10 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  8901 ;; Parameters:    Size  Location     Type
  8902 ;;  b               4   39[COMRAM] long 
  8903 ;;  a               4   43[COMRAM] long 
  8904 ;; Auto vars:     Size  Location     Type
  8905 ;;  grs             1   54[COMRAM] unsigned char 
  8906 ;;  bexp            1   53[COMRAM] unsigned char 
  8907 ;;  aexp            1   52[COMRAM] unsigned char 
  8908 ;;  signs           1   51[COMRAM] unsigned char 
  8909 ;; Return value:  Size  Location     Type
  8910 ;;                  4   39[COMRAM] unsigned char 
  8911 ;; Registers used:
  8912 ;;		wreg, status,2, status,0
  8913 ;; Tracked objects:
  8914 ;;		On entry : 0/0
  8915 ;;		On exit  : 0/0
  8916 ;;		Unchanged: 0/0
  8917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8918 ;;      Params:         8       0       0       0       0       0       0
  8919 ;;      Locals:         4       0       0       0       0       0       0
  8920 ;;      Temps:          4       0       0       0       0       0       0
  8921 ;;      Totals:        16       0       0       0       0       0       0
  8922 ;;Total ram usage:       16 bytes
  8923 ;; Hardware stack levels used:    1
  8924 ;; This function calls:
  8925 ;;		Nothing
  8926 ;; This function is called by:
  8927 ;;		_encher_tanque
  8928 ;;		_esvaziar_tanque
  8929 ;;		___flsub
  8930 ;;		_efgtoa
  8931 ;; This function uses a non-reentrant model
  8932 ;;
  8933                           
  8934                           	psect	text23
  8935  00246E                     __ptext23:
  8936                           	callstack 0
  8937  00246E                     ___fladd:
  8938                           	callstack 24
  8939  00246E  502B               	movf	(___fladd@b+3)^0,w,c
  8940  002470  0B80               	andlw	128
  8941  002472  6E34               	movwf	___fladd@signs^0,c
  8942  002474  502B               	movf	(___fladd@b+3)^0,w,c
  8943  002476  242B               	addwf	(___fladd@b+3)^0,w,c
  8944  002478  6E36               	movwf	___fladd@bexp^0,c
  8945  00247A  AE2A               	btfss	(___fladd@b+2)^0,7,c
  8946  00247C  EF42  F012         	goto	u3431
  8947  002480  EF44  F012         	goto	u3430
  8948  002484                     u3431:
  8949  002484  EF45  F012         	goto	l3359
  8950  002488                     u3430:
  8951  002488  8036               	bsf	___fladd@bexp^0,0,c
  8952  00248A                     l3359:
  8953  00248A  5036               	movf	___fladd@bexp^0,w,c
  8954  00248C  B4D8               	btfsc	status,2,c
  8955  00248E  EF4B  F012         	goto	u3441
  8956  002492  EF4D  F012         	goto	u3440
  8957  002496                     u3441:
  8958  002496  EF62  F012         	goto	l3369
  8959  00249A                     u3440:
  8960  00249A  2836               	incf	___fladd@bexp^0,w,c
  8961  00249C  A4D8               	btfss	status,2,c
  8962  00249E  EF53  F012         	goto	u3451
  8963  0024A2  EF55  F012         	goto	u3450
  8964  0024A6                     u3451:
  8965  0024A6  EF5D  F012         	goto	l3365
  8966  0024AA                     u3450:
  8967  0024AA  0E00               	movlw	0
  8968  0024AC  6E28               	movwf	___fladd@b^0,c
  8969  0024AE  0E00               	movlw	0
  8970  0024B0  6E29               	movwf	(___fladd@b+1)^0,c
  8971  0024B2  0E00               	movlw	0
  8972  0024B4  6E2A               	movwf	(___fladd@b+2)^0,c
  8973  0024B6  0E00               	movlw	0
  8974  0024B8  6E2B               	movwf	(___fladd@b+3)^0,c
  8975  0024BA                     l3365:
  8976  0024BA  8E2A               	bsf	(___fladd@b+2)^0,7,c
  8977  0024BC  0E00               	movlw	0
  8978  0024BE  6E2B               	movwf	(___fladd@b+3)^0,c
  8979  0024C0  EF6A  F012         	goto	l3371
  8980  0024C4                     l3369:
  8981  0024C4  0E00               	movlw	0
  8982  0024C6  6E28               	movwf	___fladd@b^0,c
  8983  0024C8  0E00               	movlw	0
  8984  0024CA  6E29               	movwf	(___fladd@b+1)^0,c
  8985  0024CC  0E00               	movlw	0
  8986  0024CE  6E2A               	movwf	(___fladd@b+2)^0,c
  8987  0024D0  0E00               	movlw	0
  8988  0024D2  6E2B               	movwf	(___fladd@b+3)^0,c
  8989  0024D4                     l3371:
  8990  0024D4  502F               	movf	(___fladd@a+3)^0,w,c
  8991  0024D6  0B80               	andlw	128
  8992  0024D8  6E35               	movwf	___fladd@aexp^0,c
  8993  0024DA  5034               	movf	___fladd@signs^0,w,c
  8994  0024DC  1835               	xorwf	___fladd@aexp^0,w,c
  8995  0024DE  B4D8               	btfsc	status,2,c
  8996  0024E0  EF74  F012         	goto	u3461
  8997  0024E4  EF76  F012         	goto	u3460
  8998  0024E8                     u3461:
  8999  0024E8  EF77  F012         	goto	l3377
  9000  0024EC                     u3460:
  9001  0024EC  8C34               	bsf	___fladd@signs^0,6,c
  9002  0024EE                     l3377:
  9003  0024EE  502F               	movf	(___fladd@a+3)^0,w,c
  9004  0024F0  242F               	addwf	(___fladd@a+3)^0,w,c
  9005  0024F2  6E35               	movwf	___fladd@aexp^0,c
  9006  0024F4  AE2E               	btfss	(___fladd@a+2)^0,7,c
  9007  0024F6  EF7F  F012         	goto	u3471
  9008  0024FA  EF81  F012         	goto	u3470
  9009  0024FE                     u3471:
  9010  0024FE  EF82  F012         	goto	l3383
  9011  002502                     u3470:
  9012  002502  8035               	bsf	___fladd@aexp^0,0,c
  9013  002504                     l3383:
  9014  002504  5035               	movf	___fladd@aexp^0,w,c
  9015  002506  B4D8               	btfsc	status,2,c
  9016  002508  EF88  F012         	goto	u3481
  9017  00250C  EF8A  F012         	goto	u3480
  9018  002510                     u3481:
  9019  002510  EF9F  F012         	goto	l3393
  9020  002514                     u3480:
  9021  002514  2835               	incf	___fladd@aexp^0,w,c
  9022  002516  A4D8               	btfss	status,2,c
  9023  002518  EF90  F012         	goto	u3491
  9024  00251C  EF92  F012         	goto	u3490
  9025  002520                     u3491:
  9026  002520  EF9A  F012         	goto	l3389
  9027  002524                     u3490:
  9028  002524  0E00               	movlw	0
  9029  002526  6E2C               	movwf	___fladd@a^0,c
  9030  002528  0E00               	movlw	0
  9031  00252A  6E2D               	movwf	(___fladd@a+1)^0,c
  9032  00252C  0E00               	movlw	0
  9033  00252E  6E2E               	movwf	(___fladd@a+2)^0,c
  9034  002530  0E00               	movlw	0
  9035  002532  6E2F               	movwf	(___fladd@a+3)^0,c
  9036  002534                     l3389:
  9037  002534  8E2E               	bsf	(___fladd@a+2)^0,7,c
  9038  002536  0E00               	movlw	0
  9039  002538  6E2F               	movwf	(___fladd@a+3)^0,c
  9040  00253A  EFA7  F012         	goto	l3395
  9041  00253E                     l3393:
  9042  00253E  0E00               	movlw	0
  9043  002540  6E2C               	movwf	___fladd@a^0,c
  9044  002542  0E00               	movlw	0
  9045  002544  6E2D               	movwf	(___fladd@a+1)^0,c
  9046  002546  0E00               	movlw	0
  9047  002548  6E2E               	movwf	(___fladd@a+2)^0,c
  9048  00254A  0E00               	movlw	0
  9049  00254C  6E2F               	movwf	(___fladd@a+3)^0,c
  9050  00254E                     l3395:
  9051  00254E  5036               	movf	___fladd@bexp^0,w,c
  9052  002550  5C35               	subwf	___fladd@aexp^0,w,c
  9053  002552  B0D8               	btfsc	status,0,c
  9054  002554  EFAE  F012         	goto	u3501
  9055  002558  EFB0  F012         	goto	u3500
  9056  00255C                     u3501:
  9057  00255C  EFD7  F012         	goto	l3431
  9058  002560                     u3500:
  9059  002560  AC34               	btfss	___fladd@signs^0,6,c
  9060  002562  EFB5  F012         	goto	u3511
  9061  002566  EFB7  F012         	goto	u3510
  9062  00256A                     u3511:
  9063  00256A  EFB9  F012         	goto	l3401
  9064  00256E                     u3510:
  9065  00256E  0E80               	movlw	128
  9066  002570  1A34               	xorwf	___fladd@signs^0,f,c
  9067  002572                     l3401:
  9068  002572  C036  F037         	movff	___fladd@bexp,___fladd@grs
  9069  002576  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  9070  00257A  C037  F035         	movff	___fladd@grs,___fladd@aexp
  9071  00257E  C028  F037         	movff	___fladd@b,___fladd@grs
  9072  002582  C02C  F028         	movff	___fladd@a,___fladd@b
  9073  002586  C037  F02C         	movff	___fladd@grs,___fladd@a
  9074  00258A  C029  F037         	movff	___fladd@b+1,___fladd@grs
  9075  00258E  C02D  F029         	movff	___fladd@a+1,___fladd@b+1
  9076  002592  C037  F02D         	movff	___fladd@grs,___fladd@a+1
  9077  002596  C02A  F037         	movff	___fladd@b+2,___fladd@grs
  9078  00259A  C02E  F02A         	movff	___fladd@a+2,___fladd@b+2
  9079  00259E  C037  F02E         	movff	___fladd@grs,___fladd@a+2
  9080  0025A2  C02B  F037         	movff	___fladd@b+3,___fladd@grs
  9081  0025A6  C02F  F02B         	movff	___fladd@a+3,___fladd@b+3
  9082  0025AA  C037  F02F         	movff	___fladd@grs,___fladd@a+3
  9083  0025AE                     l3431:
  9084  0025AE  0E00               	movlw	0
  9085  0025B0  6E37               	movwf	___fladd@grs^0,c
  9086  0025B2  5036               	movf	___fladd@bexp^0,w,c
  9087  0025B4  C035  F030         	movff	___fladd@aexp,??___fladd
  9088  0025B8  6A31               	clrf	(??___fladd+1)^0,c
  9089  0025BA  5E30               	subwf	??___fladd^0,f,c
  9090  0025BC  0E00               	movlw	0
  9091  0025BE  5A31               	subwfb	(??___fladd+1)^0,f,c
  9092  0025C0  BE31               	btfsc	(??___fladd+1)^0,7,c
  9093  0025C2  EFEC  F012         	goto	u3521
  9094  0025C6  5031               	movf	(??___fladd+1)^0,w,c
  9095  0025C8  E109               	bnz	u3520
  9096  0025CA  0E1A               	movlw	26
  9097  0025CC  5C30               	subwf	??___fladd^0,w,c
  9098  0025CE  A0D8               	btfss	status,0,c
  9099  0025D0  EFEC  F012         	goto	u3521
  9100  0025D4  EFEE  F012         	goto	u3520
  9101  0025D8                     u3521:
  9102  0025D8  EF25  F013         	goto	l800
  9103  0025DC                     u3520:
  9104  0025DC  5028               	movf	___fladd@b^0,w,c
  9105  0025DE  1029               	iorwf	(___fladd@b+1)^0,w,c
  9106  0025E0  102A               	iorwf	(___fladd@b+2)^0,w,c
  9107  0025E2  102B               	iorwf	(___fladd@b+3)^0,w,c
  9108  0025E4  A4D8               	btfss	status,2,c
  9109  0025E6  EFF7  F012         	goto	u3531
  9110  0025EA  EFFA  F012         	goto	u3530
  9111  0025EE                     u3531:
  9112  0025EE  0E01               	movlw	1
  9113  0025F0  EFFB  F012         	goto	u3540
  9114  0025F4                     u3530:
  9115  0025F4  0E00               	movlw	0
  9116  0025F6                     u3540:
  9117  0025F6  6E37               	movwf	___fladd@grs^0,c
  9118  0025F8  0E00               	movlw	0
  9119  0025FA  6E28               	movwf	___fladd@b^0,c
  9120  0025FC  0E00               	movlw	0
  9121  0025FE  6E29               	movwf	(___fladd@b+1)^0,c
  9122  002600  0E00               	movlw	0
  9123  002602  6E2A               	movwf	(___fladd@b+2)^0,c
  9124  002604  0E00               	movlw	0
  9125  002606  6E2B               	movwf	(___fladd@b+3)^0,c
  9126  002608  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  9127  00260C  EF2E  F013         	goto	l799
  9128  002610                     l801:
  9129  002610  A037               	btfss	___fladd@grs^0,0,c
  9130  002612  EF0D  F013         	goto	u3551
  9131  002616  EF0F  F013         	goto	u3550
  9132  00261A                     u3551:
  9133  00261A  EF15  F013         	goto	l3443
  9134  00261E                     u3550:
  9135  00261E  90D8               	bcf	status,0,c
  9136  002620  3037               	rrcf	___fladd@grs^0,w,c
  9137  002622  0901               	iorlw	1
  9138  002624  6E37               	movwf	___fladd@grs^0,c
  9139  002626  EF17  F013         	goto	l3445
  9140  00262A                     l3443:
  9141  00262A  90D8               	bcf	status,0,c
  9142  00262C  3237               	rrcf	___fladd@grs^0,f,c
  9143  00262E                     l3445:
  9144  00262E  A028               	btfss	___fladd@b^0,0,c
  9145  002630  EF1C  F013         	goto	u3561
  9146  002634  EF1E  F013         	goto	u3560
  9147  002638                     u3561:
  9148  002638  EF1F  F013         	goto	l3449
  9149  00263C                     u3560:
  9150  00263C  8E37               	bsf	___fladd@grs^0,7,c
  9151  00263E                     l3449:
  9152  00263E  342B               	rlcf	(___fladd@b+3)^0,w,c
  9153  002640  322B               	rrcf	(___fladd@b+3)^0,f,c
  9154  002642  322A               	rrcf	(___fladd@b+2)^0,f,c
  9155  002644  3229               	rrcf	(___fladd@b+1)^0,f,c
  9156  002646  3228               	rrcf	___fladd@b^0,f,c
  9157  002648  2A36               	incf	___fladd@bexp^0,f,c
  9158  00264A                     l800:
  9159  00264A  5035               	movf	___fladd@aexp^0,w,c
  9160  00264C  5C36               	subwf	___fladd@bexp^0,w,c
  9161  00264E  A0D8               	btfss	status,0,c
  9162  002650  EF2C  F013         	goto	u3571
  9163  002654  EF2E  F013         	goto	u3570
  9164  002658                     u3571:
  9165  002658  EF08  F013         	goto	l801
  9166  00265C                     u3570:
  9167  00265C                     l799:
  9168  00265C  BC34               	btfsc	___fladd@signs^0,6,c
  9169  00265E  EF33  F013         	goto	u3581
  9170  002662  EF35  F013         	goto	u3580
  9171  002666                     u3581:
  9172  002666  EF75  F013         	goto	l3477
  9173  00266A                     u3580:
  9174  00266A  5036               	movf	___fladd@bexp^0,w,c
  9175  00266C  A4D8               	btfss	status,2,c
  9176  00266E  EF3B  F013         	goto	u3591
  9177  002672  EF3D  F013         	goto	u3590
  9178  002676                     u3591:
  9179  002676  EF47  F013         	goto	l3459
  9180  00267A                     u3590:
  9181  00267A  0E00               	movlw	0
  9182  00267C  6E28               	movwf	?___fladd^0,c
  9183  00267E  0E00               	movlw	0
  9184  002680  6E29               	movwf	(?___fladd+1)^0,c
  9185  002682  0E00               	movlw	0
  9186  002684  6E2A               	movwf	(?___fladd+2)^0,c
  9187  002686  0E00               	movlw	0
  9188  002688  6E2B               	movwf	(?___fladd+3)^0,c
  9189  00268A  EF96  F014         	goto	l808
  9190  00268E                     l3459:
  9191  00268E  502C               	movf	___fladd@a^0,w,c
  9192  002690  2628               	addwf	___fladd@b^0,f,c
  9193  002692  502D               	movf	(___fladd@a+1)^0,w,c
  9194  002694  2229               	addwfc	(___fladd@b+1)^0,f,c
  9195  002696  502E               	movf	(___fladd@a+2)^0,w,c
  9196  002698  222A               	addwfc	(___fladd@b+2)^0,f,c
  9197  00269A  502F               	movf	(___fladd@a+3)^0,w,c
  9198  00269C  222B               	addwfc	(___fladd@b+3)^0,f,c
  9199  00269E  A02B               	btfss	(___fladd@b+3)^0,0,c
  9200  0026A0  EF54  F013         	goto	u3601
  9201  0026A4  EF56  F013         	goto	u3600
  9202  0026A8                     u3601:
  9203  0026A8  EF02  F014         	goto	l3513
  9204  0026AC                     u3600:
  9205  0026AC  A037               	btfss	___fladd@grs^0,0,c
  9206  0026AE  EF5B  F013         	goto	u3611
  9207  0026B2  EF5D  F013         	goto	u3610
  9208  0026B6                     u3611:
  9209  0026B6  EF63  F013         	goto	l3467
  9210  0026BA                     u3610:
  9211  0026BA  90D8               	bcf	status,0,c
  9212  0026BC  3037               	rrcf	___fladd@grs^0,w,c
  9213  0026BE  0901               	iorlw	1
  9214  0026C0  6E37               	movwf	___fladd@grs^0,c
  9215  0026C2  EF65  F013         	goto	l3469
  9216  0026C6                     l3467:
  9217  0026C6  90D8               	bcf	status,0,c
  9218  0026C8  3237               	rrcf	___fladd@grs^0,f,c
  9219  0026CA                     l3469:
  9220  0026CA  A028               	btfss	___fladd@b^0,0,c
  9221  0026CC  EF6A  F013         	goto	u3621
  9222  0026D0  EF6C  F013         	goto	u3620
  9223  0026D4                     u3621:
  9224  0026D4  EF6D  F013         	goto	l3473
  9225  0026D8                     u3620:
  9226  0026D8  8E37               	bsf	___fladd@grs^0,7,c
  9227  0026DA                     l3473:
  9228  0026DA  342B               	rlcf	(___fladd@b+3)^0,w,c
  9229  0026DC  322B               	rrcf	(___fladd@b+3)^0,f,c
  9230  0026DE  322A               	rrcf	(___fladd@b+2)^0,f,c
  9231  0026E0  3229               	rrcf	(___fladd@b+1)^0,f,c
  9232  0026E2  3228               	rrcf	___fladd@b^0,f,c
  9233  0026E4  2A36               	incf	___fladd@bexp^0,f,c
  9234  0026E6  EF02  F014         	goto	l3513
  9235  0026EA                     l3477:
  9236  0026EA  502C               	movf	___fladd@a^0,w,c
  9237  0026EC  5C28               	subwf	___fladd@b^0,w,c
  9238  0026EE  502D               	movf	(___fladd@a+1)^0,w,c
  9239  0026F0  5829               	subwfb	(___fladd@b+1)^0,w,c
  9240  0026F2  502E               	movf	(___fladd@a+2)^0,w,c
  9241  0026F4  582A               	subwfb	(___fladd@b+2)^0,w,c
  9242  0026F6  502B               	movf	(___fladd@b+3)^0,w,c
  9243  0026F8  0A80               	xorlw	128
  9244  0026FA  6E30               	movwf	??___fladd^0,c
  9245  0026FC  502F               	movf	(___fladd@a+3)^0,w,c
  9246  0026FE  0A80               	xorlw	128
  9247  002700  5830               	subwfb	??___fladd^0,w,c
  9248  002702  B0D8               	btfsc	status,0,c
  9249  002704  EF86  F013         	goto	u3631
  9250  002708  EF88  F013         	goto	u3630
  9251  00270C                     u3631:
  9252  00270C  EFB3  F013         	goto	l3487
  9253  002710                     u3630:
  9254  002710  5028               	movf	___fladd@b^0,w,c
  9255  002712  5C2C               	subwf	___fladd@a^0,w,c
  9256  002714  6E30               	movwf	??___fladd^0,c
  9257  002716  5029               	movf	(___fladd@b+1)^0,w,c
  9258  002718  582D               	subwfb	(___fladd@a+1)^0,w,c
  9259  00271A  6E31               	movwf	(??___fladd+1)^0,c
  9260  00271C  502A               	movf	(___fladd@b+2)^0,w,c
  9261  00271E  582E               	subwfb	(___fladd@a+2)^0,w,c
  9262  002720  6E32               	movwf	(??___fladd+2)^0,c
  9263  002722  502B               	movf	(___fladd@b+3)^0,w,c
  9264  002724  582F               	subwfb	(___fladd@a+3)^0,w,c
  9265  002726  6E33               	movwf	(??___fladd+3)^0,c
  9266  002728  0EFF               	movlw	255
  9267  00272A  2430               	addwf	??___fladd^0,w,c
  9268  00272C  6E28               	movwf	___fladd@b^0,c
  9269  00272E  0EFF               	movlw	255
  9270  002730  2031               	addwfc	(??___fladd+1)^0,w,c
  9271  002732  6E29               	movwf	(___fladd@b+1)^0,c
  9272  002734  0EFF               	movlw	255
  9273  002736  2032               	addwfc	(??___fladd+2)^0,w,c
  9274  002738  6E2A               	movwf	(___fladd@b+2)^0,c
  9275  00273A  0EFF               	movlw	255
  9276  00273C  2033               	addwfc	(??___fladd+3)^0,w,c
  9277  00273E  6E2B               	movwf	(___fladd@b+3)^0,c
  9278  002740  0E80               	movlw	128
  9279  002742  1A34               	xorwf	___fladd@signs^0,f,c
  9280  002744  6C37               	negf	___fladd@grs^0,c
  9281  002746  5037               	movf	___fladd@grs^0,w,c
  9282  002748  A4D8               	btfss	status,2,c
  9283  00274A  EFA9  F013         	goto	u3641
  9284  00274E  EFAB  F013         	goto	u3640
  9285  002752                     u3641:
  9286  002752  EFBB  F013         	goto	l816
  9287  002756                     u3640:
  9288  002756  0E01               	movlw	1
  9289  002758  2628               	addwf	___fladd@b^0,f,c
  9290  00275A  0E00               	movlw	0
  9291  00275C  2229               	addwfc	(___fladd@b+1)^0,f,c
  9292  00275E  222A               	addwfc	(___fladd@b+2)^0,f,c
  9293  002760  222B               	addwfc	(___fladd@b+3)^0,f,c
  9294  002762  EFBB  F013         	goto	l816
  9295  002766                     l3487:
  9296  002766  502C               	movf	___fladd@a^0,w,c
  9297  002768  5E28               	subwf	___fladd@b^0,f,c
  9298  00276A  502D               	movf	(___fladd@a+1)^0,w,c
  9299  00276C  5A29               	subwfb	(___fladd@b+1)^0,f,c
  9300  00276E  502E               	movf	(___fladd@a+2)^0,w,c
  9301  002770  5A2A               	subwfb	(___fladd@b+2)^0,f,c
  9302  002772  502F               	movf	(___fladd@a+3)^0,w,c
  9303  002774  5A2B               	subwfb	(___fladd@b+3)^0,f,c
  9304  002776                     l816:
  9305  002776  5028               	movf	___fladd@b^0,w,c
  9306  002778  1029               	iorwf	(___fladd@b+1)^0,w,c
  9307  00277A  102A               	iorwf	(___fladd@b+2)^0,w,c
  9308  00277C  102B               	iorwf	(___fladd@b+3)^0,w,c
  9309  00277E  A4D8               	btfss	status,2,c
  9310  002780  EFC4  F013         	goto	u3651
  9311  002784  EFC6  F013         	goto	u3650
  9312  002788                     u3651:
  9313  002788  EFFB  F013         	goto	l3511
  9314  00278C                     u3650:
  9315  00278C  5037               	movf	___fladd@grs^0,w,c
  9316  00278E  A4D8               	btfss	status,2,c
  9317  002790  EFCC  F013         	goto	u3661
  9318  002794  EFCE  F013         	goto	u3660
  9319  002798                     u3661:
  9320  002798  EFFB  F013         	goto	l3511
  9321  00279C                     u3660:
  9322  00279C  0E00               	movlw	0
  9323  00279E  6E28               	movwf	?___fladd^0,c
  9324  0027A0  0E00               	movlw	0
  9325  0027A2  6E29               	movwf	(?___fladd+1)^0,c
  9326  0027A4  0E00               	movlw	0
  9327  0027A6  6E2A               	movwf	(?___fladd+2)^0,c
  9328  0027A8  0E00               	movlw	0
  9329  0027AA  6E2B               	movwf	(?___fladd+3)^0,c
  9330  0027AC  EF96  F014         	goto	l808
  9331  0027B0                     l3495:
  9332  0027B0  90D8               	bcf	status,0,c
  9333  0027B2  3628               	rlcf	___fladd@b^0,f,c
  9334  0027B4  3629               	rlcf	(___fladd@b+1)^0,f,c
  9335  0027B6  362A               	rlcf	(___fladd@b+2)^0,f,c
  9336  0027B8  362B               	rlcf	(___fladd@b+3)^0,f,c
  9337  0027BA  AE37               	btfss	___fladd@grs^0,7,c
  9338  0027BC  EFE2  F013         	goto	u3671
  9339  0027C0  EFE4  F013         	goto	u3670
  9340  0027C4                     u3671:
  9341  0027C4  EFE5  F013         	goto	l3501
  9342  0027C8                     u3670:
  9343  0027C8  8028               	bsf	___fladd@b^0,0,c
  9344  0027CA                     l3501:
  9345  0027CA  A037               	btfss	___fladd@grs^0,0,c
  9346  0027CC  EFEA  F013         	goto	u3681
  9347  0027D0  EFEC  F013         	goto	u3680
  9348  0027D4                     u3681:
  9349  0027D4  EFF0  F013         	goto	l3505
  9350  0027D8                     u3680:
  9351  0027D8  80D8               	bsf	status,0,c
  9352  0027DA  3637               	rlcf	___fladd@grs^0,f,c
  9353  0027DC  EFF2  F013         	goto	l3507
  9354  0027E0                     l3505:
  9355  0027E0  90D8               	bcf	status,0,c
  9356  0027E2  3637               	rlcf	___fladd@grs^0,f,c
  9357  0027E4                     l3507:
  9358  0027E4  5036               	movf	___fladd@bexp^0,w,c
  9359  0027E6  B4D8               	btfsc	status,2,c
  9360  0027E8  EFF8  F013         	goto	u3691
  9361  0027EC  EFFA  F013         	goto	u3690
  9362  0027F0                     u3691:
  9363  0027F0  EFFB  F013         	goto	l3511
  9364  0027F4                     u3690:
  9365  0027F4  0636               	decf	___fladd@bexp^0,f,c
  9366  0027F6                     l3511:
  9367  0027F6  AE2A               	btfss	(___fladd@b+2)^0,7,c
  9368  0027F8  EF00  F014         	goto	u3701
  9369  0027FC  EF02  F014         	goto	u3700
  9370  002800                     u3701:
  9371  002800  EFD8  F013         	goto	l3495
  9372  002804                     u3700:
  9373  002804                     l3513:
  9374  002804  0E00               	movlw	0
  9375  002806  6E35               	movwf	___fladd@aexp^0,c
  9376  002808  AE37               	btfss	___fladd@grs^0,7,c
  9377  00280A  EF09  F014         	goto	u3711
  9378  00280E  EF0B  F014         	goto	u3710
  9379  002812                     u3711:
  9380  002812  EF23  F014         	goto	l825
  9381  002816                     u3710:
  9382  002816  C037  F030         	movff	___fladd@grs,??___fladd
  9383  00281A  0E7F               	movlw	127
  9384  00281C  1630               	andwf	??___fladd^0,f,c
  9385  00281E  B4D8               	btfsc	status,2,c
  9386  002820  EF14  F014         	goto	u3721
  9387  002824  EF16  F014         	goto	u3720
  9388  002828                     u3721:
  9389  002828  EF1A  F014         	goto	l826
  9390  00282C                     u3720:
  9391  00282C                     l3519:
  9392  00282C  0E01               	movlw	1
  9393  00282E  6E35               	movwf	___fladd@aexp^0,c
  9394  002830  EF23  F014         	goto	l825
  9395  002834                     l826:
  9396  002834  A028               	btfss	___fladd@b^0,0,c
  9397  002836  EF1F  F014         	goto	u3731
  9398  00283A  EF21  F014         	goto	u3730
  9399  00283E                     u3731:
  9400  00283E  EF23  F014         	goto	l825
  9401  002842                     u3730:
  9402  002842  EF16  F014         	goto	l3519
  9403  002846                     l825:
  9404  002846  5035               	movf	___fladd@aexp^0,w,c
  9405  002848  B4D8               	btfsc	status,2,c
  9406  00284A  EF29  F014         	goto	u3741
  9407  00284E  EF2B  F014         	goto	u3740
  9408  002852                     u3741:
  9409  002852  EF56  F014         	goto	l3531
  9410  002856                     u3740:
  9411  002856  0E01               	movlw	1
  9412  002858  2628               	addwf	___fladd@b^0,f,c
  9413  00285A  0E00               	movlw	0
  9414  00285C  2229               	addwfc	(___fladd@b+1)^0,f,c
  9415  00285E  222A               	addwfc	(___fladd@b+2)^0,f,c
  9416  002860  222B               	addwfc	(___fladd@b+3)^0,f,c
  9417  002862  A02B               	btfss	(___fladd@b+3)^0,0,c
  9418  002864  EF36  F014         	goto	u3751
  9419  002868  EF38  F014         	goto	u3750
  9420  00286C                     u3751:
  9421  00286C  EF56  F014         	goto	l3531
  9422  002870                     u3750:
  9423  002870  C028  F030         	movff	___fladd@b,??___fladd
  9424  002874  C029  F031         	movff	___fladd@b+1,??___fladd+1
  9425  002878  C02A  F032         	movff	___fladd@b+2,??___fladd+2
  9426  00287C  C02B  F033         	movff	___fladd@b+3,??___fladd+3
  9427  002880  3433               	rlcf	(??___fladd+3)^0,w,c
  9428  002882  3233               	rrcf	(??___fladd+3)^0,f,c
  9429  002884  3232               	rrcf	(??___fladd+2)^0,f,c
  9430  002886  3231               	rrcf	(??___fladd+1)^0,f,c
  9431  002888  3230               	rrcf	??___fladd^0,f,c
  9432  00288A  C030  F028         	movff	??___fladd,___fladd@b
  9433  00288E  C031  F029         	movff	??___fladd+1,___fladd@b+1
  9434  002892  C032  F02A         	movff	??___fladd+2,___fladd@b+2
  9435  002896  C033  F02B         	movff	??___fladd+3,___fladd@b+3
  9436  00289A  2836               	incf	___fladd@bexp^0,w,c
  9437  00289C  B4D8               	btfsc	status,2,c
  9438  00289E  EF53  F014         	goto	u3761
  9439  0028A2  EF55  F014         	goto	u3760
  9440  0028A6                     u3761:
  9441  0028A6  EF56  F014         	goto	l3531
  9442  0028AA                     u3760:
  9443  0028AA  2A36               	incf	___fladd@bexp^0,f,c
  9444  0028AC                     l3531:
  9445  0028AC  2836               	incf	___fladd@bexp^0,w,c
  9446  0028AE  B4D8               	btfsc	status,2,c
  9447  0028B0  EF5C  F014         	goto	u3771
  9448  0028B4  EF5E  F014         	goto	u3770
  9449  0028B8                     u3771:
  9450  0028B8  EF66  F014         	goto	l3535
  9451  0028BC                     u3770:
  9452  0028BC  5036               	movf	___fladd@bexp^0,w,c
  9453  0028BE  A4D8               	btfss	status,2,c
  9454  0028C0  EF64  F014         	goto	u3781
  9455  0028C4  EF66  F014         	goto	u3780
  9456  0028C8                     u3781:
  9457  0028C8  EF78  F014         	goto	l3539
  9458  0028CC                     u3780:
  9459  0028CC                     l3535:
  9460  0028CC  0E00               	movlw	0
  9461  0028CE  6E28               	movwf	___fladd@b^0,c
  9462  0028D0  0E00               	movlw	0
  9463  0028D2  6E29               	movwf	(___fladd@b+1)^0,c
  9464  0028D4  0E00               	movlw	0
  9465  0028D6  6E2A               	movwf	(___fladd@b+2)^0,c
  9466  0028D8  0E00               	movlw	0
  9467  0028DA  6E2B               	movwf	(___fladd@b+3)^0,c
  9468  0028DC  5036               	movf	___fladd@bexp^0,w,c
  9469  0028DE  A4D8               	btfss	status,2,c
  9470  0028E0  EF74  F014         	goto	u3791
  9471  0028E4  EF76  F014         	goto	u3790
  9472  0028E8                     u3791:
  9473  0028E8  EF78  F014         	goto	l3539
  9474  0028EC                     u3790:
  9475  0028EC  0E00               	movlw	0
  9476  0028EE  6E34               	movwf	___fladd@signs^0,c
  9477  0028F0                     l3539:
  9478  0028F0  A036               	btfss	___fladd@bexp^0,0,c
  9479  0028F2  EF7D  F014         	goto	u3801
  9480  0028F6  EF7F  F014         	goto	u3800
  9481  0028FA                     u3801:
  9482  0028FA  EF82  F014         	goto	l3543
  9483  0028FE                     u3800:
  9484  0028FE  8E2A               	bsf	(___fladd@b+2)^0,7,c
  9485  002900  EF83  F014         	goto	l3545
  9486  002904                     l3543:
  9487  002904  9E2A               	bcf	(___fladd@b+2)^0,7,c
  9488  002906                     l3545:
  9489  002906  90D8               	bcf	status,0,c
  9490  002908  3036               	rrcf	___fladd@bexp^0,w,c
  9491  00290A  6E2B               	movwf	(___fladd@b+3)^0,c
  9492  00290C  AE34               	btfss	___fladd@signs^0,7,c
  9493  00290E  EF8B  F014         	goto	u3811
  9494  002912  EF8D  F014         	goto	u3810
  9495  002916                     u3811:
  9496  002916  EF8E  F014         	goto	l3551
  9497  00291A                     u3810:
  9498  00291A  8E2B               	bsf	(___fladd@b+3)^0,7,c
  9499  00291C                     l3551:
  9500  00291C  C028  F028         	movff	___fladd@b,?___fladd
  9501  002920  C029  F029         	movff	___fladd@b+1,?___fladd+1
  9502  002924  C02A  F02A         	movff	___fladd@b+2,?___fladd+2
  9503  002928  C02B  F02B         	movff	___fladd@b+3,?___fladd+3
  9504  00292C                     l808:
  9505  00292C  0012               	return		;funcret
  9506  00292E                     __end_of___fladd:
  9507                           	callstack 0
  9508                           
  9509 ;; *************** function ___flneg *****************
  9510 ;; Defined at:
  9511 ;;		line 15 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\flneg.c"
  9512 ;; Parameters:    Size  Location     Type
  9513 ;;  f1              4    0[COMRAM] unsigned char 
  9514 ;; Auto vars:     Size  Location     Type
  9515 ;;		None
  9516 ;; Return value:  Size  Location     Type
  9517 ;;                  4    0[COMRAM] unsigned char 
  9518 ;; Registers used:
  9519 ;;		wreg, status,2, status,0
  9520 ;; Tracked objects:
  9521 ;;		On entry : 0/0
  9522 ;;		On exit  : 0/0
  9523 ;;		Unchanged: 0/0
  9524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9525 ;;      Params:         4       0       0       0       0       0       0
  9526 ;;      Locals:         0       0       0       0       0       0       0
  9527 ;;      Temps:          0       0       0       0       0       0       0
  9528 ;;      Totals:         4       0       0       0       0       0       0
  9529 ;;Total ram usage:        4 bytes
  9530 ;; Hardware stack levels used:    1
  9531 ;; This function calls:
  9532 ;;		Nothing
  9533 ;; This function is called by:
  9534 ;;		_efgtoa
  9535 ;; This function uses a non-reentrant model
  9536 ;;
  9537                           
  9538                           	psect	text24
  9539  004F34                     __ptext24:
  9540                           	callstack 0
  9541  004F34                     ___flneg:
  9542                           	callstack 25
  9543  004F34  5001               	movf	___flneg@f1^0,w,c
  9544  004F36  1002               	iorwf	(___flneg@f1+1)^0,w,c
  9545  004F38  1003               	iorwf	(___flneg@f1+2)^0,w,c
  9546  004F3A  1004               	iorwf	(___flneg@f1+3)^0,w,c
  9547  004F3C  B4D8               	btfsc	status,2,c
  9548  004F3E  EFA3  F027         	goto	u4481
  9549  004F42  EFA5  F027         	goto	u4480
  9550  004F46                     u4481:
  9551  004F46  EFAD  F027         	goto	l3979
  9552  004F4A                     u4480:
  9553  004F4A  0E00               	movlw	0
  9554  004F4C  1A01               	xorwf	___flneg@f1^0,f,c
  9555  004F4E  0E00               	movlw	0
  9556  004F50  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  9557  004F52  0E00               	movlw	0
  9558  004F54  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  9559  004F56  0E80               	movlw	128
  9560  004F58  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  9561  004F5A                     l3979:
  9562  004F5A  C001  F001         	movff	___flneg@f1,?___flneg
  9563  004F5E  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  9564  004F62  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  9565  004F66  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  9566  004F6A  0012               	return		;funcret
  9567  004F6C                     __end_of___flneg:
  9568                           	callstack 0
  9569                           
  9570 ;; *************** function ___flmul *****************
  9571 ;; Defined at:
  9572 ;;		line 8 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
  9573 ;; Parameters:    Size  Location     Type
  9574 ;;  b               4   14[COMRAM] unsigned char 
  9575 ;;  a               4   18[COMRAM] unsigned char 
  9576 ;; Auto vars:     Size  Location     Type
  9577 ;;  prod            4   33[COMRAM] struct .
  9578 ;;  grs             4   27[COMRAM] unsigned long 
  9579 ;;  temp            2   37[COMRAM] struct .
  9580 ;;  bexp            1   32[COMRAM] unsigned char 
  9581 ;;  aexp            1   31[COMRAM] unsigned char 
  9582 ;;  sign            1   26[COMRAM] unsigned char 
  9583 ;; Return value:  Size  Location     Type
  9584 ;;                  4   14[COMRAM] unsigned char 
  9585 ;; Registers used:
  9586 ;;		wreg, status,2, status,0, prodl, prodh
  9587 ;; Tracked objects:
  9588 ;;		On entry : 0/0
  9589 ;;		On exit  : 0/0
  9590 ;;		Unchanged: 0/0
  9591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9592 ;;      Params:         8       0       0       0       0       0       0
  9593 ;;      Locals:        13       0       0       0       0       0       0
  9594 ;;      Temps:          4       0       0       0       0       0       0
  9595 ;;      Totals:        25       0       0       0       0       0       0
  9596 ;;Total ram usage:       25 bytes
  9597 ;; Hardware stack levels used:    1
  9598 ;; This function calls:
  9599 ;;		Nothing
  9600 ;; This function is called by:
  9601 ;;		_encher_tanque
  9602 ;;		_esvaziar_tanque
  9603 ;;		_efgtoa
  9604 ;; This function uses a non-reentrant model
  9605 ;;
  9606                           
  9607                           	psect	text25
  9608  0031F8                     __ptext25:
  9609                           	callstack 0
  9610  0031F8                     ___flmul:
  9611                           	callstack 25
  9612  0031F8  5012               	movf	(___flmul@b+3)^0,w,c
  9613  0031FA  0B80               	andlw	128
  9614  0031FC  6E1B               	movwf	___flmul@sign^0,c
  9615  0031FE  5012               	movf	(___flmul@b+3)^0,w,c
  9616  003200  2412               	addwf	(___flmul@b+3)^0,w,c
  9617  003202  6E21               	movwf	___flmul@bexp^0,c
  9618  003204  AE11               	btfss	(___flmul@b+2)^0,7,c
  9619  003206  EF07  F019         	goto	u4091
  9620  00320A  EF09  F019         	goto	u4090
  9621  00320E                     u4091:
  9622  00320E  EF0A  F019         	goto	l3727
  9623  003212                     u4090:
  9624  003212  8021               	bsf	___flmul@bexp^0,0,c
  9625  003214                     l3727:
  9626  003214  5021               	movf	___flmul@bexp^0,w,c
  9627  003216  B4D8               	btfsc	status,2,c
  9628  003218  EF10  F019         	goto	u4101
  9629  00321C  EF12  F019         	goto	u4100
  9630  003220                     u4101:
  9631  003220  EF25  F019         	goto	l3735
  9632  003224                     u4100:
  9633  003224  2821               	incf	___flmul@bexp^0,w,c
  9634  003226  A4D8               	btfss	status,2,c
  9635  003228  EF18  F019         	goto	u4111
  9636  00322C  EF1A  F019         	goto	u4110
  9637  003230                     u4111:
  9638  003230  EF22  F019         	goto	l3733
  9639  003234                     u4110:
  9640  003234  0E00               	movlw	0
  9641  003236  6E0F               	movwf	___flmul@b^0,c
  9642  003238  0E00               	movlw	0
  9643  00323A  6E10               	movwf	(___flmul@b+1)^0,c
  9644  00323C  0E00               	movlw	0
  9645  00323E  6E11               	movwf	(___flmul@b+2)^0,c
  9646  003240  0E00               	movlw	0
  9647  003242  6E12               	movwf	(___flmul@b+3)^0,c
  9648  003244                     l3733:
  9649  003244  8E11               	bsf	(___flmul@b+2)^0,7,c
  9650  003246  EF2D  F019         	goto	l3737
  9651  00324A                     l3735:
  9652  00324A  0E00               	movlw	0
  9653  00324C  6E0F               	movwf	___flmul@b^0,c
  9654  00324E  0E00               	movlw	0
  9655  003250  6E10               	movwf	(___flmul@b+1)^0,c
  9656  003252  0E00               	movlw	0
  9657  003254  6E11               	movwf	(___flmul@b+2)^0,c
  9658  003256  0E00               	movlw	0
  9659  003258  6E12               	movwf	(___flmul@b+3)^0,c
  9660  00325A                     l3737:
  9661  00325A  5016               	movf	(___flmul@a+3)^0,w,c
  9662  00325C  0B80               	andlw	128
  9663  00325E  1A1B               	xorwf	___flmul@sign^0,f,c
  9664  003260  5016               	movf	(___flmul@a+3)^0,w,c
  9665  003262  2416               	addwf	(___flmul@a+3)^0,w,c
  9666  003264  6E20               	movwf	___flmul@aexp^0,c
  9667  003266  AE15               	btfss	(___flmul@a+2)^0,7,c
  9668  003268  EF38  F019         	goto	u4121
  9669  00326C  EF3A  F019         	goto	u4120
  9670  003270                     u4121:
  9671  003270  EF3B  F019         	goto	l3745
  9672  003274                     u4120:
  9673  003274  8020               	bsf	___flmul@aexp^0,0,c
  9674  003276                     l3745:
  9675  003276  5020               	movf	___flmul@aexp^0,w,c
  9676  003278  B4D8               	btfsc	status,2,c
  9677  00327A  EF41  F019         	goto	u4131
  9678  00327E  EF43  F019         	goto	u4130
  9679  003282                     u4131:
  9680  003282  EF56  F019         	goto	l3753
  9681  003286                     u4130:
  9682  003286  2820               	incf	___flmul@aexp^0,w,c
  9683  003288  A4D8               	btfss	status,2,c
  9684  00328A  EF49  F019         	goto	u4141
  9685  00328E  EF4B  F019         	goto	u4140
  9686  003292                     u4141:
  9687  003292  EF53  F019         	goto	l3751
  9688  003296                     u4140:
  9689  003296  0E00               	movlw	0
  9690  003298  6E13               	movwf	___flmul@a^0,c
  9691  00329A  0E00               	movlw	0
  9692  00329C  6E14               	movwf	(___flmul@a+1)^0,c
  9693  00329E  0E00               	movlw	0
  9694  0032A0  6E15               	movwf	(___flmul@a+2)^0,c
  9695  0032A2  0E00               	movlw	0
  9696  0032A4  6E16               	movwf	(___flmul@a+3)^0,c
  9697  0032A6                     l3751:
  9698  0032A6  8E15               	bsf	(___flmul@a+2)^0,7,c
  9699  0032A8  EF5E  F019         	goto	l885
  9700  0032AC                     l3753:
  9701  0032AC  0E00               	movlw	0
  9702  0032AE  6E13               	movwf	___flmul@a^0,c
  9703  0032B0  0E00               	movlw	0
  9704  0032B2  6E14               	movwf	(___flmul@a+1)^0,c
  9705  0032B4  0E00               	movlw	0
  9706  0032B6  6E15               	movwf	(___flmul@a+2)^0,c
  9707  0032B8  0E00               	movlw	0
  9708  0032BA  6E16               	movwf	(___flmul@a+3)^0,c
  9709  0032BC                     l885:
  9710  0032BC  5020               	movf	___flmul@aexp^0,w,c
  9711  0032BE  B4D8               	btfsc	status,2,c
  9712  0032C0  EF64  F019         	goto	u4151
  9713  0032C4  EF66  F019         	goto	u4150
  9714  0032C8                     u4151:
  9715  0032C8  EF6E  F019         	goto	l3757
  9716  0032CC                     u4150:
  9717  0032CC  5021               	movf	___flmul@bexp^0,w,c
  9718  0032CE  A4D8               	btfss	status,2,c
  9719  0032D0  EF6C  F019         	goto	u4161
  9720  0032D4  EF6E  F019         	goto	u4160
  9721  0032D8                     u4161:
  9722  0032D8  EF78  F019         	goto	l3761
  9723  0032DC                     u4160:
  9724  0032DC                     l3757:
  9725  0032DC  0E00               	movlw	0
  9726  0032DE  6E0F               	movwf	?___flmul^0,c
  9727  0032E0  0E00               	movlw	0
  9728  0032E2  6E10               	movwf	(?___flmul+1)^0,c
  9729  0032E4  0E00               	movlw	0
  9730  0032E6  6E11               	movwf	(?___flmul+2)^0,c
  9731  0032E8  0E00               	movlw	0
  9732  0032EA  6E12               	movwf	(?___flmul+3)^0,c
  9733  0032EC  EF10  F01B         	goto	l889
  9734  0032F0                     l3761:
  9735  0032F0  5015               	movf	(___flmul@a+2)^0,w,c
  9736  0032F2  020F               	mulwf	___flmul@b^0,c
  9737  0032F4  CFF3 F026          	movff	prodl,___flmul@temp
  9738  0032F8  CFF4 F027          	movff	prodh,___flmul@temp+1
  9739  0032FC  5026               	movf	___flmul@temp^0,w,c
  9740  0032FE  6E1C               	movwf	___flmul@grs^0,c
  9741  003300  6A1D               	clrf	(___flmul@grs+1)^0,c
  9742  003302  6A1E               	clrf	(___flmul@grs+2)^0,c
  9743  003304  6A1F               	clrf	(___flmul@grs+3)^0,c
  9744  003306  5027               	movf	(___flmul@temp+1)^0,w,c
  9745  003308  6E22               	movwf	___flmul@prod^0,c
  9746  00330A  6A23               	clrf	(___flmul@prod+1)^0,c
  9747  00330C  6A24               	clrf	(___flmul@prod+2)^0,c
  9748  00330E  6A25               	clrf	(___flmul@prod+3)^0,c
  9749  003310  5014               	movf	(___flmul@a+1)^0,w,c
  9750  003312  0210               	mulwf	(___flmul@b+1)^0,c
  9751  003314  CFF3 F026          	movff	prodl,___flmul@temp
  9752  003318  CFF4 F027          	movff	prodh,___flmul@temp+1
  9753  00331C  5026               	movf	___flmul@temp^0,w,c
  9754  00331E  261C               	addwf	___flmul@grs^0,f,c
  9755  003320  0E00               	movlw	0
  9756  003322  221D               	addwfc	(___flmul@grs+1)^0,f,c
  9757  003324  221E               	addwfc	(___flmul@grs+2)^0,f,c
  9758  003326  221F               	addwfc	(___flmul@grs+3)^0,f,c
  9759  003328  5027               	movf	(___flmul@temp+1)^0,w,c
  9760  00332A  2622               	addwf	___flmul@prod^0,f,c
  9761  00332C  0E00               	movlw	0
  9762  00332E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9763  003330  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9764  003332  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9765  003334  5013               	movf	___flmul@a^0,w,c
  9766  003336  0211               	mulwf	(___flmul@b+2)^0,c
  9767  003338  CFF3 F026          	movff	prodl,___flmul@temp
  9768  00333C  CFF4 F027          	movff	prodh,___flmul@temp+1
  9769  003340  5026               	movf	___flmul@temp^0,w,c
  9770  003342  261C               	addwf	___flmul@grs^0,f,c
  9771  003344  0E00               	movlw	0
  9772  003346  221D               	addwfc	(___flmul@grs+1)^0,f,c
  9773  003348  221E               	addwfc	(___flmul@grs+2)^0,f,c
  9774  00334A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  9775  00334C  5027               	movf	(___flmul@temp+1)^0,w,c
  9776  00334E  2622               	addwf	___flmul@prod^0,f,c
  9777  003350  0E00               	movlw	0
  9778  003352  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9779  003354  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9780  003356  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9781  003358  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  9782  00335C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  9783  003360  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  9784  003364  6A1C               	clrf	___flmul@grs^0,c
  9785  003366  5013               	movf	___flmul@a^0,w,c
  9786  003368  0210               	mulwf	(___flmul@b+1)^0,c
  9787  00336A  CFF3 F026          	movff	prodl,___flmul@temp
  9788  00336E  CFF4 F027          	movff	prodh,___flmul@temp+1
  9789  003372  5026               	movf	___flmul@temp^0,w,c
  9790  003374  261C               	addwf	___flmul@grs^0,f,c
  9791  003376  5027               	movf	(___flmul@temp+1)^0,w,c
  9792  003378  221D               	addwfc	(___flmul@grs+1)^0,f,c
  9793  00337A  0E00               	movlw	0
  9794  00337C  221E               	addwfc	(___flmul@grs+2)^0,f,c
  9795  00337E  0E00               	movlw	0
  9796  003380  221F               	addwfc	(___flmul@grs+3)^0,f,c
  9797  003382  5014               	movf	(___flmul@a+1)^0,w,c
  9798  003384  020F               	mulwf	___flmul@b^0,c
  9799  003386  CFF3 F026          	movff	prodl,___flmul@temp
  9800  00338A  CFF4 F027          	movff	prodh,___flmul@temp+1
  9801  00338E  5026               	movf	___flmul@temp^0,w,c
  9802  003390  261C               	addwf	___flmul@grs^0,f,c
  9803  003392  5027               	movf	(___flmul@temp+1)^0,w,c
  9804  003394  221D               	addwfc	(___flmul@grs+1)^0,f,c
  9805  003396  0E00               	movlw	0
  9806  003398  221E               	addwfc	(___flmul@grs+2)^0,f,c
  9807  00339A  0E00               	movlw	0
  9808  00339C  221F               	addwfc	(___flmul@grs+3)^0,f,c
  9809  00339E  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  9810  0033A2  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  9811  0033A6  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  9812  0033AA  6A1C               	clrf	___flmul@grs^0,c
  9813  0033AC  5013               	movf	___flmul@a^0,w,c
  9814  0033AE  020F               	mulwf	___flmul@b^0,c
  9815  0033B0  CFF3 F026          	movff	prodl,___flmul@temp
  9816  0033B4  CFF4 F027          	movff	prodh,___flmul@temp+1
  9817  0033B8  5026               	movf	___flmul@temp^0,w,c
  9818  0033BA  261C               	addwf	___flmul@grs^0,f,c
  9819  0033BC  5027               	movf	(___flmul@temp+1)^0,w,c
  9820  0033BE  221D               	addwfc	(___flmul@grs+1)^0,f,c
  9821  0033C0  0E00               	movlw	0
  9822  0033C2  221E               	addwfc	(___flmul@grs+2)^0,f,c
  9823  0033C4  0E00               	movlw	0
  9824  0033C6  221F               	addwfc	(___flmul@grs+3)^0,f,c
  9825  0033C8  5015               	movf	(___flmul@a+2)^0,w,c
  9826  0033CA  0210               	mulwf	(___flmul@b+1)^0,c
  9827  0033CC  CFF3 F026          	movff	prodl,___flmul@temp
  9828  0033D0  CFF4 F027          	movff	prodh,___flmul@temp+1
  9829  0033D4  5026               	movf	___flmul@temp^0,w,c
  9830  0033D6  2622               	addwf	___flmul@prod^0,f,c
  9831  0033D8  5027               	movf	(___flmul@temp+1)^0,w,c
  9832  0033DA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9833  0033DC  0E00               	movlw	0
  9834  0033DE  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9835  0033E0  0E00               	movlw	0
  9836  0033E2  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9837  0033E4  5014               	movf	(___flmul@a+1)^0,w,c
  9838  0033E6  0211               	mulwf	(___flmul@b+2)^0,c
  9839  0033E8  CFF3 F026          	movff	prodl,___flmul@temp
  9840  0033EC  CFF4 F027          	movff	prodh,___flmul@temp+1
  9841  0033F0  5026               	movf	___flmul@temp^0,w,c
  9842  0033F2  2622               	addwf	___flmul@prod^0,f,c
  9843  0033F4  5027               	movf	(___flmul@temp+1)^0,w,c
  9844  0033F6  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9845  0033F8  0E00               	movlw	0
  9846  0033FA  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9847  0033FC  0E00               	movlw	0
  9848  0033FE  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9849  003400  5015               	movf	(___flmul@a+2)^0,w,c
  9850  003402  0211               	mulwf	(___flmul@b+2)^0,c
  9851  003404  CFF3 F026          	movff	prodl,___flmul@temp
  9852  003408  CFF4 F027          	movff	prodh,___flmul@temp+1
  9853  00340C  5026               	movf	___flmul@temp^0,w,c
  9854  00340E  6E17               	movwf	??___flmul^0,c
  9855  003410  5027               	movf	(___flmul@temp+1)^0,w,c
  9856  003412  6E18               	movwf	(??___flmul+1)^0,c
  9857  003414  6A19               	clrf	(??___flmul+2)^0,c
  9858  003416  6A1A               	clrf	(??___flmul+3)^0,c
  9859  003418  C019  F01A         	movff	??___flmul+2,??___flmul+3
  9860  00341C  C018  F019         	movff	??___flmul+1,??___flmul+2
  9861  003420  C017  F018         	movff	??___flmul,??___flmul+1
  9862  003424  6A17               	clrf	??___flmul^0,c
  9863  003426  5017               	movf	??___flmul^0,w,c
  9864  003428  2622               	addwf	___flmul@prod^0,f,c
  9865  00342A  5018               	movf	(??___flmul+1)^0,w,c
  9866  00342C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9867  00342E  5019               	movf	(??___flmul+2)^0,w,c
  9868  003430  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9869  003432  501A               	movf	(??___flmul+3)^0,w,c
  9870  003434  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9871  003436  C01C  F017         	movff	___flmul@grs,??___flmul
  9872  00343A  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  9873  00343E  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  9874  003442  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  9875  003446  0E19               	movlw	25
  9876  003448  EF2B  F01A         	goto	u4170
  9877  00344C                     u4175:
  9878  00344C  90D8               	bcf	status,0,c
  9879  00344E  321A               	rrcf	(??___flmul+3)^0,f,c
  9880  003450  3219               	rrcf	(??___flmul+2)^0,f,c
  9881  003452  3218               	rrcf	(??___flmul+1)^0,f,c
  9882  003454  3217               	rrcf	??___flmul^0,f,c
  9883  003456                     u4170:
  9884  003456  2EE8               	decfsz	wreg,f,c
  9885  003458  EF26  F01A         	goto	u4175
  9886  00345C  5017               	movf	??___flmul^0,w,c
  9887  00345E  2622               	addwf	___flmul@prod^0,f,c
  9888  003460  5018               	movf	(??___flmul+1)^0,w,c
  9889  003462  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9890  003464  5019               	movf	(??___flmul+2)^0,w,c
  9891  003466  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9892  003468  501A               	movf	(??___flmul+3)^0,w,c
  9893  00346A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9894  00346C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  9895  003470  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  9896  003474  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  9897  003478  6A1C               	clrf	___flmul@grs^0,c
  9898  00347A  5020               	movf	___flmul@aexp^0,w,c
  9899  00347C  C021  F017         	movff	___flmul@bexp,??___flmul
  9900  003480  6A18               	clrf	(??___flmul+1)^0,c
  9901  003482  2617               	addwf	??___flmul^0,f,c
  9902  003484  0E00               	movlw	0
  9903  003486  2218               	addwfc	(??___flmul+1)^0,f,c
  9904  003488  0E82               	movlw	130
  9905  00348A  2417               	addwf	??___flmul^0,w,c
  9906  00348C  6E26               	movwf	___flmul@temp^0,c
  9907  00348E  0EFF               	movlw	255
  9908  003490  2018               	addwfc	(??___flmul+1)^0,w,c
  9909  003492  6E27               	movwf	(___flmul@temp+1)^0,c
  9910  003494  EF61  F01A         	goto	l3809
  9911  003498                     l3803:
  9912  003498  90D8               	bcf	status,0,c
  9913  00349A  3622               	rlcf	___flmul@prod^0,f,c
  9914  00349C  3623               	rlcf	(___flmul@prod+1)^0,f,c
  9915  00349E  3624               	rlcf	(___flmul@prod+2)^0,f,c
  9916  0034A0  3625               	rlcf	(___flmul@prod+3)^0,f,c
  9917  0034A2  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  9918  0034A4  EF56  F01A         	goto	u4181
  9919  0034A8  EF58  F01A         	goto	u4180
  9920  0034AC                     u4181:
  9921  0034AC  EF59  F01A         	goto	l892
  9922  0034B0                     u4180:
  9923  0034B0  8022               	bsf	___flmul@prod^0,0,c
  9924  0034B2                     l892:
  9925  0034B2  90D8               	bcf	status,0,c
  9926  0034B4  361C               	rlcf	___flmul@grs^0,f,c
  9927  0034B6  361D               	rlcf	(___flmul@grs+1)^0,f,c
  9928  0034B8  361E               	rlcf	(___flmul@grs+2)^0,f,c
  9929  0034BA  361F               	rlcf	(___flmul@grs+3)^0,f,c
  9930  0034BC  0626               	decf	___flmul@temp^0,f,c
  9931  0034BE  A0D8               	btfss	status,0,c
  9932  0034C0  0627               	decf	(___flmul@temp+1)^0,f,c
  9933  0034C2                     l3809:
  9934  0034C2  AE24               	btfss	(___flmul@prod+2)^0,7,c
  9935  0034C4  EF66  F01A         	goto	u4191
  9936  0034C8  EF68  F01A         	goto	u4190
  9937  0034CC                     u4191:
  9938  0034CC  EF4C  F01A         	goto	l3803
  9939  0034D0                     u4190:
  9940  0034D0  0E00               	movlw	0
  9941  0034D2  6E20               	movwf	___flmul@aexp^0,c
  9942  0034D4  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  9943  0034D6  EF6F  F01A         	goto	u4201
  9944  0034DA  EF71  F01A         	goto	u4200
  9945  0034DE                     u4201:
  9946  0034DE  EF95  F01A         	goto	l894
  9947  0034E2                     u4200:
  9948  0034E2  0EFF               	movlw	255
  9949  0034E4  141C               	andwf	___flmul@grs^0,w,c
  9950  0034E6  6E17               	movwf	??___flmul^0,c
  9951  0034E8  0EFF               	movlw	255
  9952  0034EA  141D               	andwf	(___flmul@grs+1)^0,w,c
  9953  0034EC  6E18               	movwf	(??___flmul+1)^0,c
  9954  0034EE  0EFF               	movlw	255
  9955  0034F0  141E               	andwf	(___flmul@grs+2)^0,w,c
  9956  0034F2  6E19               	movwf	(??___flmul+2)^0,c
  9957  0034F4  0E7F               	movlw	127
  9958  0034F6  141F               	andwf	(___flmul@grs+3)^0,w,c
  9959  0034F8  6E1A               	movwf	(??___flmul+3)^0,c
  9960  0034FA  5017               	movf	??___flmul^0,w,c
  9961  0034FC  1018               	iorwf	(??___flmul+1)^0,w,c
  9962  0034FE  1019               	iorwf	(??___flmul+2)^0,w,c
  9963  003500  101A               	iorwf	(??___flmul+3)^0,w,c
  9964  003502  B4D8               	btfsc	status,2,c
  9965  003504  EF86  F01A         	goto	u4211
  9966  003508  EF88  F01A         	goto	u4210
  9967  00350C                     u4211:
  9968  00350C  EF8C  F01A         	goto	l895
  9969  003510                     u4210:
  9970  003510                     l3817:
  9971  003510  0E01               	movlw	1
  9972  003512  6E20               	movwf	___flmul@aexp^0,c
  9973  003514  EF95  F01A         	goto	l894
  9974  003518                     l895:
  9975  003518  A022               	btfss	___flmul@prod^0,0,c
  9976  00351A  EF91  F01A         	goto	u4221
  9977  00351E  EF93  F01A         	goto	u4220
  9978  003522                     u4221:
  9979  003522  EF95  F01A         	goto	l894
  9980  003526                     u4220:
  9981  003526  EF88  F01A         	goto	l3817
  9982  00352A                     l894:
  9983  00352A  5020               	movf	___flmul@aexp^0,w,c
  9984  00352C  B4D8               	btfsc	status,2,c
  9985  00352E  EF9B  F01A         	goto	u4231
  9986  003532  EF9D  F01A         	goto	u4230
  9987  003536                     u4231:
  9988  003536  EFC1  F01A         	goto	l3829
  9989  00353A                     u4230:
  9990  00353A  0E01               	movlw	1
  9991  00353C  2622               	addwf	___flmul@prod^0,f,c
  9992  00353E  0E00               	movlw	0
  9993  003540  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9994  003542  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9995  003544  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9996  003546  A025               	btfss	(___flmul@prod+3)^0,0,c
  9997  003548  EFA8  F01A         	goto	u4241
  9998  00354C  EFAA  F01A         	goto	u4240
  9999  003550                     u4241:
 10000  003550  EFC1  F01A         	goto	l3829
 10001  003554                     u4240:
 10002  003554  C022  F017         	movff	___flmul@prod,??___flmul
 10003  003558  C023  F018         	movff	___flmul@prod+1,??___flmul+1
 10004  00355C  C024  F019         	movff	___flmul@prod+2,??___flmul+2
 10005  003560  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
 10006  003564  341A               	rlcf	(??___flmul+3)^0,w,c
 10007  003566  321A               	rrcf	(??___flmul+3)^0,f,c
 10008  003568  3219               	rrcf	(??___flmul+2)^0,f,c
 10009  00356A  3218               	rrcf	(??___flmul+1)^0,f,c
 10010  00356C  3217               	rrcf	??___flmul^0,f,c
 10011  00356E  C017  F022         	movff	??___flmul,___flmul@prod
 10012  003572  C018  F023         	movff	??___flmul+1,___flmul@prod+1
 10013  003576  C019  F024         	movff	??___flmul+2,___flmul@prod+2
 10014  00357A  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
 10015  00357E  4A26               	infsnz	___flmul@temp^0,f,c
 10016  003580  2A27               	incf	(___flmul@temp+1)^0,f,c
 10017  003582                     l3829:
 10018  003582  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 10019  003584  EFCC  F01A         	goto	u4251
 10020  003588  5027               	movf	(___flmul@temp+1)^0,w,c
 10021  00358A  E108               	bnz	u4250
 10022  00358C  2826               	incf	___flmul@temp^0,w,c
 10023  00358E  A0D8               	btfss	status,0,c
 10024  003590  EFCC  F01A         	goto	u4251
 10025  003594  EFCE  F01A         	goto	u4250
 10026  003598                     u4251:
 10027  003598  EFD8  F01A         	goto	l3833
 10028  00359C                     u4250:
 10029  00359C  0E00               	movlw	0
 10030  00359E  6E22               	movwf	___flmul@prod^0,c
 10031  0035A0  0E00               	movlw	0
 10032  0035A2  6E23               	movwf	(___flmul@prod+1)^0,c
 10033  0035A4  0E80               	movlw	128
 10034  0035A6  6E24               	movwf	(___flmul@prod+2)^0,c
 10035  0035A8  0E7F               	movlw	127
 10036  0035AA  6E25               	movwf	(___flmul@prod+3)^0,c
 10037  0035AC  EF06  F01B         	goto	l3845
 10038  0035B0                     l3833:
 10039  0035B0  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 10040  0035B2  EFE5  F01A         	goto	u4260
 10041  0035B6  5027               	movf	(___flmul@temp+1)^0,w,c
 10042  0035B8  E106               	bnz	u4261
 10043  0035BA  0426               	decf	___flmul@temp^0,w,c
 10044  0035BC  B0D8               	btfsc	status,0,c
 10045  0035BE  EFE3  F01A         	goto	u4261
 10046  0035C2  EFE5  F01A         	goto	u4260
 10047  0035C6                     u4261:
 10048  0035C6  EFF1  F01A         	goto	l902
 10049  0035CA                     u4260:
 10050  0035CA  0E00               	movlw	0
 10051  0035CC  6E22               	movwf	___flmul@prod^0,c
 10052  0035CE  0E00               	movlw	0
 10053  0035D0  6E23               	movwf	(___flmul@prod+1)^0,c
 10054  0035D2  0E00               	movlw	0
 10055  0035D4  6E24               	movwf	(___flmul@prod+2)^0,c
 10056  0035D6  0E00               	movlw	0
 10057  0035D8  6E25               	movwf	(___flmul@prod+3)^0,c
 10058  0035DA  0E00               	movlw	0
 10059  0035DC  6E1B               	movwf	___flmul@sign^0,c
 10060  0035DE  EF06  F01B         	goto	l3845
 10061  0035E2                     l902:
 10062  0035E2  C026  F021         	movff	___flmul@temp,___flmul@bexp
 10063  0035E6  0EFF               	movlw	255
 10064  0035E8  1622               	andwf	___flmul@prod^0,f,c
 10065  0035EA  0EFF               	movlw	255
 10066  0035EC  1623               	andwf	(___flmul@prod+1)^0,f,c
 10067  0035EE  0E7F               	movlw	127
 10068  0035F0  1624               	andwf	(___flmul@prod+2)^0,f,c
 10069  0035F2  0E00               	movlw	0
 10070  0035F4  1625               	andwf	(___flmul@prod+3)^0,f,c
 10071  0035F6  A021               	btfss	___flmul@bexp^0,0,c
 10072  0035F8  EF00  F01B         	goto	u4271
 10073  0035FC  EF02  F01B         	goto	u4270
 10074  003600                     u4271:
 10075  003600  EF03  F01B         	goto	l3843
 10076  003604                     u4270:
 10077  003604  8E24               	bsf	(___flmul@prod+2)^0,7,c
 10078  003606                     l3843:
 10079  003606  90D8               	bcf	status,0,c
 10080  003608  3021               	rrcf	___flmul@bexp^0,w,c
 10081  00360A  6E25               	movwf	(___flmul@prod+3)^0,c
 10082  00360C                     l3845:
 10083  00360C  501B               	movf	___flmul@sign^0,w,c
 10084  00360E  1225               	iorwf	(___flmul@prod+3)^0,f,c
 10085  003610  C022  F00F         	movff	___flmul@prod,?___flmul
 10086  003614  C023  F010         	movff	___flmul@prod+1,?___flmul+1
 10087  003618  C024  F011         	movff	___flmul@prod+2,?___flmul+2
 10088  00361C  C025  F012         	movff	___flmul@prod+3,?___flmul+3
 10089  003620                     l889:
 10090  003620  0012               	return		;funcret
 10091  003622                     __end_of___flmul:
 10092                           	callstack 0
 10093                           
 10094 ;; *************** function ___flge *****************
 10095 ;; Defined at:
 10096 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\flge.c"
 10097 ;; Parameters:    Size  Location     Type
 10098 ;;  ff1             4   55[COMRAM] unsigned char 
 10099 ;;  ff2             4   59[COMRAM] unsigned char 
 10100 ;; Auto vars:     Size  Location     Type
 10101 ;;		None
 10102 ;; Return value:  Size  Location     Type
 10103 ;;		None               void
 10104 ;; Registers used:
 10105 ;;		wreg, status,2, status,0
 10106 ;; Tracked objects:
 10107 ;;		On entry : 0/0
 10108 ;;		On exit  : 0/0
 10109 ;;		Unchanged: 0/0
 10110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10111 ;;      Params:         8       0       0       0       0       0       0
 10112 ;;      Locals:         0       0       0       0       0       0       0
 10113 ;;      Temps:          4       0       0       0       0       0       0
 10114 ;;      Totals:        12       0       0       0       0       0       0
 10115 ;;Total ram usage:       12 bytes
 10116 ;; Hardware stack levels used:    1
 10117 ;; This function calls:
 10118 ;;		Nothing
 10119 ;; This function is called by:
 10120 ;;		_encher_tanque
 10121 ;;		_esvaziar_tanque
 10122 ;;		_ver_quantidade
 10123 ;;		_efgtoa
 10124 ;; This function uses a non-reentrant model
 10125 ;;
 10126                           
 10127                           	psect	text26
 10128  00434C                     __ptext26:
 10129                           	callstack 0
 10130  00434C                     ___flge:
 10131                           	callstack 25
 10132  00434C  0E00               	movlw	0
 10133  00434E  1438               	andwf	___flge@ff1^0,w,c
 10134  004350  6E40               	movwf	??___flge^0,c
 10135  004352  0E00               	movlw	0
 10136  004354  1439               	andwf	(___flge@ff1+1)^0,w,c
 10137  004356  6E41               	movwf	(??___flge+1)^0,c
 10138  004358  0E80               	movlw	128
 10139  00435A  143A               	andwf	(___flge@ff1+2)^0,w,c
 10140  00435C  6E42               	movwf	(??___flge+2)^0,c
 10141  00435E  0E7F               	movlw	127
 10142  004360  143B               	andwf	(___flge@ff1+3)^0,w,c
 10143  004362  6E43               	movwf	(??___flge+3)^0,c
 10144  004364  5040               	movf	??___flge^0,w,c
 10145  004366  1041               	iorwf	(??___flge+1)^0,w,c
 10146  004368  1042               	iorwf	(??___flge+2)^0,w,c
 10147  00436A  1043               	iorwf	(??___flge+3)^0,w,c
 10148  00436C  A4D8               	btfss	status,2,c
 10149  00436E  EFBB  F021         	goto	u4431
 10150  004372  EFBD  F021         	goto	u4430
 10151  004376                     u4431:
 10152  004376  EFC5  F021         	goto	l3957
 10153  00437A                     u4430:
 10154  00437A  0E00               	movlw	0
 10155  00437C  6E38               	movwf	___flge@ff1^0,c
 10156  00437E  0E00               	movlw	0
 10157  004380  6E39               	movwf	(___flge@ff1+1)^0,c
 10158  004382  0E00               	movlw	0
 10159  004384  6E3A               	movwf	(___flge@ff1+2)^0,c
 10160  004386  0E00               	movlw	0
 10161  004388  6E3B               	movwf	(___flge@ff1+3)^0,c
 10162  00438A                     l3957:
 10163  00438A  0E00               	movlw	0
 10164  00438C  143C               	andwf	___flge@ff2^0,w,c
 10165  00438E  6E40               	movwf	??___flge^0,c
 10166  004390  0E00               	movlw	0
 10167  004392  143D               	andwf	(___flge@ff2+1)^0,w,c
 10168  004394  6E41               	movwf	(??___flge+1)^0,c
 10169  004396  0E80               	movlw	128
 10170  004398  143E               	andwf	(___flge@ff2+2)^0,w,c
 10171  00439A  6E42               	movwf	(??___flge+2)^0,c
 10172  00439C  0E7F               	movlw	127
 10173  00439E  143F               	andwf	(___flge@ff2+3)^0,w,c
 10174  0043A0  6E43               	movwf	(??___flge+3)^0,c
 10175  0043A2  5040               	movf	??___flge^0,w,c
 10176  0043A4  1041               	iorwf	(??___flge+1)^0,w,c
 10177  0043A6  1042               	iorwf	(??___flge+2)^0,w,c
 10178  0043A8  1043               	iorwf	(??___flge+3)^0,w,c
 10179  0043AA  A4D8               	btfss	status,2,c
 10180  0043AC  EFDA  F021         	goto	u4441
 10181  0043B0  EFDC  F021         	goto	u4440
 10182  0043B4                     u4441:
 10183  0043B4  EFE4  F021         	goto	l3961
 10184  0043B8                     u4440:
 10185  0043B8  0E00               	movlw	0
 10186  0043BA  6E3C               	movwf	___flge@ff2^0,c
 10187  0043BC  0E00               	movlw	0
 10188  0043BE  6E3D               	movwf	(___flge@ff2+1)^0,c
 10189  0043C0  0E00               	movlw	0
 10190  0043C2  6E3E               	movwf	(___flge@ff2+2)^0,c
 10191  0043C4  0E00               	movlw	0
 10192  0043C6  6E3F               	movwf	(___flge@ff2+3)^0,c
 10193  0043C8                     l3961:
 10194  0043C8  AE3B               	btfss	(___flge@ff1+3)^0,7,c
 10195  0043CA  EFE9  F021         	goto	u4451
 10196  0043CE  EFEB  F021         	goto	u4450
 10197  0043D2                     u4451:
 10198  0043D2  EFF4  F021         	goto	l3965
 10199  0043D6                     u4450:
 10200  0043D6  6C38               	negf	___flge@ff1^0,c
 10201  0043D8  1E39               	comf	(___flge@ff1+1)^0,f,c
 10202  0043DA  B0D8               	btfsc	status,0,c
 10203  0043DC  2A39               	incf	(___flge@ff1+1)^0,f,c
 10204  0043DE  1E3A               	comf	(___flge@ff1+2)^0,f,c
 10205  0043E0  B0D8               	btfsc	status,0,c
 10206  0043E2  2A3A               	incf	(___flge@ff1+2)^0,f,c
 10207  0043E4  0E80               	movlw	128
 10208  0043E6  563B               	subfwb	(___flge@ff1+3)^0,f,c
 10209  0043E8                     l3965:
 10210  0043E8  AE3F               	btfss	(___flge@ff2+3)^0,7,c
 10211  0043EA  EFF9  F021         	goto	u4461
 10212  0043EE  EFFB  F021         	goto	u4460
 10213  0043F2                     u4461:
 10214  0043F2  EF04  F022         	goto	l536
 10215  0043F6                     u4460:
 10216  0043F6  6C3C               	negf	___flge@ff2^0,c
 10217  0043F8  1E3D               	comf	(___flge@ff2+1)^0,f,c
 10218  0043FA  B0D8               	btfsc	status,0,c
 10219  0043FC  2A3D               	incf	(___flge@ff2+1)^0,f,c
 10220  0043FE  1E3E               	comf	(___flge@ff2+2)^0,f,c
 10221  004400  B0D8               	btfsc	status,0,c
 10222  004402  2A3E               	incf	(___flge@ff2+2)^0,f,c
 10223  004404  0E80               	movlw	128
 10224  004406  563F               	subfwb	(___flge@ff2+3)^0,f,c
 10225  004408                     l536:
 10226  004408  0E00               	movlw	0
 10227  00440A  1A38               	xorwf	___flge@ff1^0,f,c
 10228  00440C  0E00               	movlw	0
 10229  00440E  1A39               	xorwf	(___flge@ff1+1)^0,f,c
 10230  004410  0E00               	movlw	0
 10231  004412  1A3A               	xorwf	(___flge@ff1+2)^0,f,c
 10232  004414  0E80               	movlw	128
 10233  004416  1A3B               	xorwf	(___flge@ff1+3)^0,f,c
 10234  004418  0E00               	movlw	0
 10235  00441A  1A3C               	xorwf	___flge@ff2^0,f,c
 10236  00441C  0E00               	movlw	0
 10237  00441E  1A3D               	xorwf	(___flge@ff2+1)^0,f,c
 10238  004420  0E00               	movlw	0
 10239  004422  1A3E               	xorwf	(___flge@ff2+2)^0,f,c
 10240  004424  0E80               	movlw	128
 10241  004426  1A3F               	xorwf	(___flge@ff2+3)^0,f,c
 10242  004428  503C               	movf	___flge@ff2^0,w,c
 10243  00442A  5C38               	subwf	___flge@ff1^0,w,c
 10244  00442C  503D               	movf	(___flge@ff2+1)^0,w,c
 10245  00442E  5839               	subwfb	(___flge@ff1+1)^0,w,c
 10246  004430  503E               	movf	(___flge@ff2+2)^0,w,c
 10247  004432  583A               	subwfb	(___flge@ff1+2)^0,w,c
 10248  004434  503F               	movf	(___flge@ff2+3)^0,w,c
 10249  004436  583B               	subwfb	(___flge@ff1+3)^0,w,c
 10250  004438  B0D8               	btfsc	status,0,c
 10251  00443A  EF21  F022         	goto	u4471
 10252  00443E  EF23  F022         	goto	u4470
 10253  004442                     u4471:
 10254  004442  EF26  F022         	goto	l3971
 10255  004446                     u4470:
 10256  004446  90D8               	bcf	status,0,c
 10257  004448  EF27  F022         	goto	l541
 10258  00444C                     l3971:
 10259  00444C  80D8               	bsf	status,0,c
 10260  00444E                     l541:
 10261  00444E  0012               	return		;funcret
 10262  004450                     __end_of___flge:
 10263                           	callstack 0
 10264                           
 10265 ;; *************** function ___fleq *****************
 10266 ;; Defined at:
 10267 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\fleq.c"
 10268 ;; Parameters:    Size  Location     Type
 10269 ;;  ff1             4    0[COMRAM] unsigned char 
 10270 ;;  ff2             4    4[COMRAM] unsigned char 
 10271 ;; Auto vars:     Size  Location     Type
 10272 ;;		None
 10273 ;; Return value:  Size  Location     Type
 10274 ;;		None               void
 10275 ;; Registers used:
 10276 ;;		wreg, status,2, status,0
 10277 ;; Tracked objects:
 10278 ;;		On entry : 0/0
 10279 ;;		On exit  : 0/0
 10280 ;;		Unchanged: 0/0
 10281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10282 ;;      Params:         8       0       0       0       0       0       0
 10283 ;;      Locals:         0       0       0       0       0       0       0
 10284 ;;      Temps:          4       0       0       0       0       0       0
 10285 ;;      Totals:        12       0       0       0       0       0       0
 10286 ;;Total ram usage:       12 bytes
 10287 ;; Hardware stack levels used:    1
 10288 ;; This function calls:
 10289 ;;		Nothing
 10290 ;; This function is called by:
 10291 ;;		_encher_tanque
 10292 ;;		_esvaziar_tanque
 10293 ;;		_ver_quantidade
 10294 ;;		_efgtoa
 10295 ;; This function uses a non-reentrant model
 10296 ;;
 10297                           
 10298                           	psect	text27
 10299  004928                     __ptext27:
 10300                           	callstack 0
 10301  004928                     ___fleq:
 10302                           	callstack 25
 10303  004928  0E00               	movlw	0
 10304  00492A  1401               	andwf	___fleq@ff1^0,w,c
 10305  00492C  6E09               	movwf	??___fleq^0,c
 10306  00492E  0E00               	movlw	0
 10307  004930  1402               	andwf	(___fleq@ff1+1)^0,w,c
 10308  004932  6E0A               	movwf	(??___fleq+1)^0,c
 10309  004934  0E80               	movlw	128
 10310  004936  1403               	andwf	(___fleq@ff1+2)^0,w,c
 10311  004938  6E0B               	movwf	(??___fleq+2)^0,c
 10312  00493A  0E7F               	movlw	127
 10313  00493C  1404               	andwf	(___fleq@ff1+3)^0,w,c
 10314  00493E  6E0C               	movwf	(??___fleq+3)^0,c
 10315  004940  5009               	movf	??___fleq^0,w,c
 10316  004942  100A               	iorwf	(??___fleq+1)^0,w,c
 10317  004944  100B               	iorwf	(??___fleq+2)^0,w,c
 10318  004946  100C               	iorwf	(??___fleq+3)^0,w,c
 10319  004948  A4D8               	btfss	status,2,c
 10320  00494A  EFA9  F024         	goto	u4401
 10321  00494E  EFAB  F024         	goto	u4400
 10322  004952                     u4401:
 10323  004952  EFB3  F024         	goto	l3941
 10324  004956                     u4400:
 10325  004956  0E00               	movlw	0
 10326  004958  6E01               	movwf	___fleq@ff1^0,c
 10327  00495A  0E00               	movlw	0
 10328  00495C  6E02               	movwf	(___fleq@ff1+1)^0,c
 10329  00495E  0E00               	movlw	0
 10330  004960  6E03               	movwf	(___fleq@ff1+2)^0,c
 10331  004962  0E00               	movlw	0
 10332  004964  6E04               	movwf	(___fleq@ff1+3)^0,c
 10333  004966                     l3941:
 10334  004966  0E00               	movlw	0
 10335  004968  1405               	andwf	___fleq@ff2^0,w,c
 10336  00496A  6E09               	movwf	??___fleq^0,c
 10337  00496C  0E00               	movlw	0
 10338  00496E  1406               	andwf	(___fleq@ff2+1)^0,w,c
 10339  004970  6E0A               	movwf	(??___fleq+1)^0,c
 10340  004972  0E80               	movlw	128
 10341  004974  1407               	andwf	(___fleq@ff2+2)^0,w,c
 10342  004976  6E0B               	movwf	(??___fleq+2)^0,c
 10343  004978  0E7F               	movlw	127
 10344  00497A  1408               	andwf	(___fleq@ff2+3)^0,w,c
 10345  00497C  6E0C               	movwf	(??___fleq+3)^0,c
 10346  00497E  5009               	movf	??___fleq^0,w,c
 10347  004980  100A               	iorwf	(??___fleq+1)^0,w,c
 10348  004982  100B               	iorwf	(??___fleq+2)^0,w,c
 10349  004984  100C               	iorwf	(??___fleq+3)^0,w,c
 10350  004986  A4D8               	btfss	status,2,c
 10351  004988  EFC8  F024         	goto	u4411
 10352  00498C  EFCA  F024         	goto	u4410
 10353  004990                     u4411:
 10354  004990  EFD2  F024         	goto	l3945
 10355  004994                     u4410:
 10356  004994  0E00               	movlw	0
 10357  004996  6E05               	movwf	___fleq@ff2^0,c
 10358  004998  0E00               	movlw	0
 10359  00499A  6E06               	movwf	(___fleq@ff2+1)^0,c
 10360  00499C  0E00               	movlw	0
 10361  00499E  6E07               	movwf	(___fleq@ff2+2)^0,c
 10362  0049A0  0E00               	movlw	0
 10363  0049A2  6E08               	movwf	(___fleq@ff2+3)^0,c
 10364  0049A4                     l3945:
 10365  0049A4  5005               	movf	___fleq@ff2^0,w,c
 10366  0049A6  1801               	xorwf	___fleq@ff1^0,w,c
 10367  0049A8  E10F               	bnz	u4420
 10368  0049AA  5006               	movf	(___fleq@ff2+1)^0,w,c
 10369  0049AC  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 10370  0049AE  E10C               	bnz	u4420
 10371  0049B0  5007               	movf	(___fleq@ff2+2)^0,w,c
 10372  0049B2  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 10373  0049B4  E109               	bnz	u4420
 10374  0049B6  5008               	movf	(___fleq@ff2+3)^0,w,c
 10375  0049B8  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 10376  0049BA  B4D8               	btfsc	status,2,c
 10377  0049BC  EFE2  F024         	goto	u4421
 10378  0049C0  EFE4  F024         	goto	u4420
 10379  0049C4                     u4421:
 10380  0049C4  EFE7  F024         	goto	l3949
 10381  0049C8                     u4420:
 10382  0049C8  90D8               	bcf	status,0,c
 10383  0049CA  EFE8  F024         	goto	l530
 10384  0049CE                     l3949:
 10385  0049CE  80D8               	bsf	status,0,c
 10386  0049D0                     l530:
 10387  0049D0  0012               	return		;funcret
 10388  0049D2                     __end_of___fleq:
 10389                           	callstack 0
 10390                           
 10391 ;; *************** function ___fldiv *****************
 10392 ;; Defined at:
 10393 ;;		line 11 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
 10394 ;; Parameters:    Size  Location     Type
 10395 ;;  b               4   55[COMRAM] unsigned char 
 10396 ;;  a               4   59[COMRAM] unsigned char 
 10397 ;; Auto vars:     Size  Location     Type
 10398 ;;  grs             4   74[COMRAM] unsigned long 
 10399 ;;  rem             4   67[COMRAM] unsigned long 
 10400 ;;  new_exp         2   72[COMRAM] short 
 10401 ;;  aexp            1   79[COMRAM] unsigned char 
 10402 ;;  bexp            1   78[COMRAM] unsigned char 
 10403 ;;  sign            1   71[COMRAM] unsigned char 
 10404 ;; Return value:  Size  Location     Type
 10405 ;;                  4   55[COMRAM] unsigned char 
 10406 ;; Registers used:
 10407 ;;		wreg, status,2, status,0
 10408 ;; Tracked objects:
 10409 ;;		On entry : 0/0
 10410 ;;		On exit  : 0/0
 10411 ;;		Unchanged: 0/0
 10412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10413 ;;      Params:         8       0       0       0       0       0       0
 10414 ;;      Locals:        13       0       0       0       0       0       0
 10415 ;;      Temps:          4       0       0       0       0       0       0
 10416 ;;      Totals:        25       0       0       0       0       0       0
 10417 ;;Total ram usage:       25 bytes
 10418 ;; Hardware stack levels used:    1
 10419 ;; This function calls:
 10420 ;;		Nothing
 10421 ;; This function is called by:
 10422 ;;		_encher_tanque
 10423 ;;		_esvaziar_tanque
 10424 ;;		_efgtoa
 10425 ;; This function uses a non-reentrant model
 10426 ;;
 10427                           
 10428                           	psect	text28
 10429  003622                     __ptext28:
 10430                           	callstack 0
 10431  003622                     ___fldiv:
 10432                           	callstack 25
 10433  003622  503B               	movf	(___fldiv@b+3)^0,w,c
 10434  003624  0B80               	andlw	128
 10435  003626  6E48               	movwf	___fldiv@sign^0,c
 10436  003628  503B               	movf	(___fldiv@b+3)^0,w,c
 10437  00362A  243B               	addwf	(___fldiv@b+3)^0,w,c
 10438  00362C  6E4F               	movwf	___fldiv@bexp^0,c
 10439  00362E  AE3A               	btfss	(___fldiv@b+2)^0,7,c
 10440  003630  EF1C  F01B         	goto	u3861
 10441  003634  EF1E  F01B         	goto	u3860
 10442  003638                     u3861:
 10443  003638  EF1F  F01B         	goto	l3589
 10444  00363C                     u3860:
 10445  00363C  804F               	bsf	___fldiv@bexp^0,0,c
 10446  00363E                     l3589:
 10447  00363E  504F               	movf	___fldiv@bexp^0,w,c
 10448  003640  B4D8               	btfsc	status,2,c
 10449  003642  EF25  F01B         	goto	u3871
 10450  003646  EF27  F01B         	goto	u3870
 10451  00364A                     u3871:
 10452  00364A  EF3C  F01B         	goto	l3599
 10453  00364E                     u3870:
 10454  00364E  284F               	incf	___fldiv@bexp^0,w,c
 10455  003650  A4D8               	btfss	status,2,c
 10456  003652  EF2D  F01B         	goto	u3881
 10457  003656  EF2F  F01B         	goto	u3880
 10458  00365A                     u3881:
 10459  00365A  EF37  F01B         	goto	l3595
 10460  00365E                     u3880:
 10461  00365E  0E00               	movlw	0
 10462  003660  6E38               	movwf	___fldiv@b^0,c
 10463  003662  0E00               	movlw	0
 10464  003664  6E39               	movwf	(___fldiv@b+1)^0,c
 10465  003666  0E00               	movlw	0
 10466  003668  6E3A               	movwf	(___fldiv@b+2)^0,c
 10467  00366A  0E00               	movlw	0
 10468  00366C  6E3B               	movwf	(___fldiv@b+3)^0,c
 10469  00366E                     l3595:
 10470  00366E  8E3A               	bsf	(___fldiv@b+2)^0,7,c
 10471  003670  0E00               	movlw	0
 10472  003672  6E3B               	movwf	(___fldiv@b+3)^0,c
 10473  003674  EF44  F01B         	goto	l3601
 10474  003678                     l3599:
 10475  003678  0E00               	movlw	0
 10476  00367A  6E38               	movwf	___fldiv@b^0,c
 10477  00367C  0E00               	movlw	0
 10478  00367E  6E39               	movwf	(___fldiv@b+1)^0,c
 10479  003680  0E00               	movlw	0
 10480  003682  6E3A               	movwf	(___fldiv@b+2)^0,c
 10481  003684  0E00               	movlw	0
 10482  003686  6E3B               	movwf	(___fldiv@b+3)^0,c
 10483  003688                     l3601:
 10484  003688  503F               	movf	(___fldiv@a+3)^0,w,c
 10485  00368A  0B80               	andlw	128
 10486  00368C  1A48               	xorwf	___fldiv@sign^0,f,c
 10487  00368E  503F               	movf	(___fldiv@a+3)^0,w,c
 10488  003690  243F               	addwf	(___fldiv@a+3)^0,w,c
 10489  003692  6E50               	movwf	___fldiv@aexp^0,c
 10490  003694  AE3E               	btfss	(___fldiv@a+2)^0,7,c
 10491  003696  EF4F  F01B         	goto	u3891
 10492  00369A  EF51  F01B         	goto	u3890
 10493  00369E                     u3891:
 10494  00369E  EF52  F01B         	goto	l3609
 10495  0036A2                     u3890:
 10496  0036A2  8050               	bsf	___fldiv@aexp^0,0,c
 10497  0036A4                     l3609:
 10498  0036A4  5050               	movf	___fldiv@aexp^0,w,c
 10499  0036A6  B4D8               	btfsc	status,2,c
 10500  0036A8  EF58  F01B         	goto	u3901
 10501  0036AC  EF5A  F01B         	goto	u3900
 10502  0036B0                     u3901:
 10503  0036B0  EF6F  F01B         	goto	l3619
 10504  0036B4                     u3900:
 10505  0036B4  2850               	incf	___fldiv@aexp^0,w,c
 10506  0036B6  A4D8               	btfss	status,2,c
 10507  0036B8  EF60  F01B         	goto	u3911
 10508  0036BC  EF62  F01B         	goto	u3910
 10509  0036C0                     u3911:
 10510  0036C0  EF6A  F01B         	goto	l3615
 10511  0036C4                     u3910:
 10512  0036C4  0E00               	movlw	0
 10513  0036C6  6E3C               	movwf	___fldiv@a^0,c
 10514  0036C8  0E00               	movlw	0
 10515  0036CA  6E3D               	movwf	(___fldiv@a+1)^0,c
 10516  0036CC  0E00               	movlw	0
 10517  0036CE  6E3E               	movwf	(___fldiv@a+2)^0,c
 10518  0036D0  0E00               	movlw	0
 10519  0036D2  6E3F               	movwf	(___fldiv@a+3)^0,c
 10520  0036D4                     l3615:
 10521  0036D4  8E3E               	bsf	(___fldiv@a+2)^0,7,c
 10522  0036D6  0E00               	movlw	0
 10523  0036D8  6E3F               	movwf	(___fldiv@a+3)^0,c
 10524  0036DA  EF77  F01B         	goto	l3621
 10525  0036DE                     l3619:
 10526  0036DE  0E00               	movlw	0
 10527  0036E0  6E3C               	movwf	___fldiv@a^0,c
 10528  0036E2  0E00               	movlw	0
 10529  0036E4  6E3D               	movwf	(___fldiv@a+1)^0,c
 10530  0036E6  0E00               	movlw	0
 10531  0036E8  6E3E               	movwf	(___fldiv@a+2)^0,c
 10532  0036EA  0E00               	movlw	0
 10533  0036EC  6E3F               	movwf	(___fldiv@a+3)^0,c
 10534  0036EE                     l3621:
 10535  0036EE  503C               	movf	___fldiv@a^0,w,c
 10536  0036F0  103D               	iorwf	(___fldiv@a+1)^0,w,c
 10537  0036F2  103E               	iorwf	(___fldiv@a+2)^0,w,c
 10538  0036F4  103F               	iorwf	(___fldiv@a+3)^0,w,c
 10539  0036F6  A4D8               	btfss	status,2,c
 10540  0036F8  EF80  F01B         	goto	u3921
 10541  0036FC  EF82  F01B         	goto	u3920
 10542  003700                     u3921:
 10543  003700  EF9A  F01B         	goto	l3633
 10544  003704                     u3920:
 10545  003704  0E00               	movlw	0
 10546  003706  6E38               	movwf	___fldiv@b^0,c
 10547  003708  0E00               	movlw	0
 10548  00370A  6E39               	movwf	(___fldiv@b+1)^0,c
 10549  00370C  0E00               	movlw	0
 10550  00370E  6E3A               	movwf	(___fldiv@b+2)^0,c
 10551  003710  0E00               	movlw	0
 10552  003712  6E3B               	movwf	(___fldiv@b+3)^0,c
 10553  003714  0E80               	movlw	128
 10554  003716  123A               	iorwf	(___fldiv@b+2)^0,f,c
 10555  003718  0E7F               	movlw	127
 10556  00371A  123B               	iorwf	(___fldiv@b+3)^0,f,c
 10557  00371C                     l3627:
 10558  00371C  5048               	movf	___fldiv@sign^0,w,c
 10559  00371E  123B               	iorwf	(___fldiv@b+3)^0,f,c
 10560  003720  C038  F038         	movff	___fldiv@b,?___fldiv
 10561  003724  C039  F039         	movff	___fldiv@b+1,?___fldiv+1
 10562  003728  C03A  F03A         	movff	___fldiv@b+2,?___fldiv+2
 10563  00372C  C03B  F03B         	movff	___fldiv@b+3,?___fldiv+3
 10564  003730  EFDD  F01C         	goto	l853
 10565  003734                     l3633:
 10566  003734  504F               	movf	___fldiv@bexp^0,w,c
 10567  003736  A4D8               	btfss	status,2,c
 10568  003738  EFA0  F01B         	goto	u3931
 10569  00373C  EFA2  F01B         	goto	u3930
 10570  003740                     u3931:
 10571  003740  EFAC  F01B         	goto	l3641
 10572  003744                     u3930:
 10573  003744  0E00               	movlw	0
 10574  003746  6E38               	movwf	?___fldiv^0,c
 10575  003748  0E00               	movlw	0
 10576  00374A  6E39               	movwf	(?___fldiv+1)^0,c
 10577  00374C  0E00               	movlw	0
 10578  00374E  6E3A               	movwf	(?___fldiv+2)^0,c
 10579  003750  0E00               	movlw	0
 10580  003752  6E3B               	movwf	(?___fldiv+3)^0,c
 10581  003754  EFDD  F01C         	goto	l853
 10582  003758                     l3641:
 10583  003758  5050               	movf	___fldiv@aexp^0,w,c
 10584  00375A  C04F  F040         	movff	___fldiv@bexp,??___fldiv
 10585  00375E  6A41               	clrf	(??___fldiv+1)^0,c
 10586  003760  5E40               	subwf	??___fldiv^0,f,c
 10587  003762  0E00               	movlw	0
 10588  003764  5A41               	subwfb	(??___fldiv+1)^0,f,c
 10589  003766  0E7F               	movlw	127
 10590  003768  2440               	addwf	??___fldiv^0,w,c
 10591  00376A  6E49               	movwf	___fldiv@new_exp^0,c
 10592  00376C  0E00               	movlw	0
 10593  00376E  2041               	addwfc	(??___fldiv+1)^0,w,c
 10594  003770  6E4A               	movwf	(___fldiv@new_exp+1)^0,c
 10595  003772  C038  F044         	movff	___fldiv@b,___fldiv@rem
 10596  003776  C039  F045         	movff	___fldiv@b+1,___fldiv@rem+1
 10597  00377A  C03A  F046         	movff	___fldiv@b+2,___fldiv@rem+2
 10598  00377E  C03B  F047         	movff	___fldiv@b+3,___fldiv@rem+3
 10599  003782  0E00               	movlw	0
 10600  003784  6E38               	movwf	___fldiv@b^0,c
 10601  003786  0E00               	movlw	0
 10602  003788  6E39               	movwf	(___fldiv@b+1)^0,c
 10603  00378A  0E00               	movlw	0
 10604  00378C  6E3A               	movwf	(___fldiv@b+2)^0,c
 10605  00378E  0E00               	movlw	0
 10606  003790  6E3B               	movwf	(___fldiv@b+3)^0,c
 10607  003792  0E00               	movlw	0
 10608  003794  6E4B               	movwf	___fldiv@grs^0,c
 10609  003796  0E00               	movlw	0
 10610  003798  6E4C               	movwf	(___fldiv@grs+1)^0,c
 10611  00379A  0E00               	movlw	0
 10612  00379C  6E4D               	movwf	(___fldiv@grs+2)^0,c
 10613  00379E  0E00               	movlw	0
 10614  0037A0  6E4E               	movwf	(___fldiv@grs+3)^0,c
 10615  0037A2  0E00               	movlw	0
 10616  0037A4  6E50               	movwf	___fldiv@aexp^0,c
 10617  0037A6  EF0D  F01C         	goto	l855
 10618  0037AA                     l3651:
 10619  0037AA  5050               	movf	___fldiv@aexp^0,w,c
 10620  0037AC  B4D8               	btfsc	status,2,c
 10621  0037AE  EFDB  F01B         	goto	u3941
 10622  0037B2  EFDD  F01B         	goto	u3940
 10623  0037B6                     u3941:
 10624  0037B6  EFF4  F01B         	goto	l3659
 10625  0037BA                     u3940:
 10626  0037BA  90D8               	bcf	status,0,c
 10627  0037BC  3644               	rlcf	___fldiv@rem^0,f,c
 10628  0037BE  3645               	rlcf	(___fldiv@rem+1)^0,f,c
 10629  0037C0  3646               	rlcf	(___fldiv@rem+2)^0,f,c
 10630  0037C2  3647               	rlcf	(___fldiv@rem+3)^0,f,c
 10631  0037C4  90D8               	bcf	status,0,c
 10632  0037C6  3638               	rlcf	___fldiv@b^0,f,c
 10633  0037C8  3639               	rlcf	(___fldiv@b+1)^0,f,c
 10634  0037CA  363A               	rlcf	(___fldiv@b+2)^0,f,c
 10635  0037CC  363B               	rlcf	(___fldiv@b+3)^0,f,c
 10636  0037CE  AE4E               	btfss	(___fldiv@grs+3)^0,7,c
 10637  0037D0  EFEC  F01B         	goto	u3951
 10638  0037D4  EFEE  F01B         	goto	u3950
 10639  0037D8                     u3951:
 10640  0037D8  EFEF  F01B         	goto	l858
 10641  0037DC                     u3950:
 10642  0037DC  8038               	bsf	___fldiv@b^0,0,c
 10643  0037DE                     l858:
 10644  0037DE  90D8               	bcf	status,0,c
 10645  0037E0  364B               	rlcf	___fldiv@grs^0,f,c
 10646  0037E2  364C               	rlcf	(___fldiv@grs+1)^0,f,c
 10647  0037E4  364D               	rlcf	(___fldiv@grs+2)^0,f,c
 10648  0037E6  364E               	rlcf	(___fldiv@grs+3)^0,f,c
 10649  0037E8                     l3659:
 10650  0037E8  503C               	movf	___fldiv@a^0,w,c
 10651  0037EA  5C44               	subwf	___fldiv@rem^0,w,c
 10652  0037EC  503D               	movf	(___fldiv@a+1)^0,w,c
 10653  0037EE  5845               	subwfb	(___fldiv@rem+1)^0,w,c
 10654  0037F0  503E               	movf	(___fldiv@a+2)^0,w,c
 10655  0037F2  5846               	subwfb	(___fldiv@rem+2)^0,w,c
 10656  0037F4  503F               	movf	(___fldiv@a+3)^0,w,c
 10657  0037F6  5847               	subwfb	(___fldiv@rem+3)^0,w,c
 10658  0037F8  A0D8               	btfss	status,0,c
 10659  0037FA  EF01  F01C         	goto	u3961
 10660  0037FE  EF03  F01C         	goto	u3960
 10661  003802                     u3961:
 10662  003802  EF0C  F01C         	goto	l3665
 10663  003806                     u3960:
 10664  003806  8C4E               	bsf	(___fldiv@grs+3)^0,6,c
 10665  003808  503C               	movf	___fldiv@a^0,w,c
 10666  00380A  5E44               	subwf	___fldiv@rem^0,f,c
 10667  00380C  503D               	movf	(___fldiv@a+1)^0,w,c
 10668  00380E  5A45               	subwfb	(___fldiv@rem+1)^0,f,c
 10669  003810  503E               	movf	(___fldiv@a+2)^0,w,c
 10670  003812  5A46               	subwfb	(___fldiv@rem+2)^0,f,c
 10671  003814  503F               	movf	(___fldiv@a+3)^0,w,c
 10672  003816  5A47               	subwfb	(___fldiv@rem+3)^0,f,c
 10673  003818                     l3665:
 10674  003818  2A50               	incf	___fldiv@aexp^0,f,c
 10675  00381A                     l855:
 10676  00381A  0E19               	movlw	25
 10677  00381C  6450               	cpfsgt	___fldiv@aexp^0,c
 10678  00381E  EF13  F01C         	goto	u3971
 10679  003822  EF15  F01C         	goto	u3970
 10680  003826                     u3971:
 10681  003826  EFD5  F01B         	goto	l3651
 10682  00382A                     u3970:
 10683  00382A  5044               	movf	___fldiv@rem^0,w,c
 10684  00382C  1045               	iorwf	(___fldiv@rem+1)^0,w,c
 10685  00382E  1046               	iorwf	(___fldiv@rem+2)^0,w,c
 10686  003830  1047               	iorwf	(___fldiv@rem+3)^0,w,c
 10687  003832  B4D8               	btfsc	status,2,c
 10688  003834  EF1E  F01C         	goto	u3981
 10689  003838  EF20  F01C         	goto	u3980
 10690  00383C                     u3981:
 10691  00383C  EF38  F01C         	goto	l3677
 10692  003840                     u3980:
 10693  003840  804B               	bsf	___fldiv@grs^0,0,c
 10694  003842  EF38  F01C         	goto	l3677
 10695  003846                     l3671:
 10696  003846  90D8               	bcf	status,0,c
 10697  003848  3638               	rlcf	___fldiv@b^0,f,c
 10698  00384A  3639               	rlcf	(___fldiv@b+1)^0,f,c
 10699  00384C  363A               	rlcf	(___fldiv@b+2)^0,f,c
 10700  00384E  363B               	rlcf	(___fldiv@b+3)^0,f,c
 10701  003850  AE4E               	btfss	(___fldiv@grs+3)^0,7,c
 10702  003852  EF2D  F01C         	goto	u3991
 10703  003856  EF2F  F01C         	goto	u3990
 10704  00385A                     u3991:
 10705  00385A  EF30  F01C         	goto	l864
 10706  00385E                     u3990:
 10707  00385E  8038               	bsf	___fldiv@b^0,0,c
 10708  003860                     l864:
 10709  003860  90D8               	bcf	status,0,c
 10710  003862  364B               	rlcf	___fldiv@grs^0,f,c
 10711  003864  364C               	rlcf	(___fldiv@grs+1)^0,f,c
 10712  003866  364D               	rlcf	(___fldiv@grs+2)^0,f,c
 10713  003868  364E               	rlcf	(___fldiv@grs+3)^0,f,c
 10714  00386A  0649               	decf	___fldiv@new_exp^0,f,c
 10715  00386C  A0D8               	btfss	status,0,c
 10716  00386E  064A               	decf	(___fldiv@new_exp+1)^0,f,c
 10717  003870                     l3677:
 10718  003870  AE3A               	btfss	(___fldiv@b+2)^0,7,c
 10719  003872  EF3D  F01C         	goto	u4001
 10720  003876  EF3F  F01C         	goto	u4000
 10721  00387A                     u4001:
 10722  00387A  EF23  F01C         	goto	l3671
 10723  00387E                     u4000:
 10724  00387E  0E00               	movlw	0
 10725  003880  6E50               	movwf	___fldiv@aexp^0,c
 10726  003882  AE4E               	btfss	(___fldiv@grs+3)^0,7,c
 10727  003884  EF46  F01C         	goto	u4011
 10728  003888  EF48  F01C         	goto	u4010
 10729  00388C                     u4011:
 10730  00388C  EF6C  F01C         	goto	l866
 10731  003890                     u4010:
 10732  003890  0EFF               	movlw	255
 10733  003892  144B               	andwf	___fldiv@grs^0,w,c
 10734  003894  6E40               	movwf	??___fldiv^0,c
 10735  003896  0EFF               	movlw	255
 10736  003898  144C               	andwf	(___fldiv@grs+1)^0,w,c
 10737  00389A  6E41               	movwf	(??___fldiv+1)^0,c
 10738  00389C  0EFF               	movlw	255
 10739  00389E  144D               	andwf	(___fldiv@grs+2)^0,w,c
 10740  0038A0  6E42               	movwf	(??___fldiv+2)^0,c
 10741  0038A2  0E7F               	movlw	127
 10742  0038A4  144E               	andwf	(___fldiv@grs+3)^0,w,c
 10743  0038A6  6E43               	movwf	(??___fldiv+3)^0,c
 10744  0038A8  5040               	movf	??___fldiv^0,w,c
 10745  0038AA  1041               	iorwf	(??___fldiv+1)^0,w,c
 10746  0038AC  1042               	iorwf	(??___fldiv+2)^0,w,c
 10747  0038AE  1043               	iorwf	(??___fldiv+3)^0,w,c
 10748  0038B0  B4D8               	btfsc	status,2,c
 10749  0038B2  EF5D  F01C         	goto	u4021
 10750  0038B6  EF5F  F01C         	goto	u4020
 10751  0038BA                     u4021:
 10752  0038BA  EF63  F01C         	goto	l867
 10753  0038BE                     u4020:
 10754  0038BE                     l3685:
 10755  0038BE  0E01               	movlw	1
 10756  0038C0  6E50               	movwf	___fldiv@aexp^0,c
 10757  0038C2  EF6C  F01C         	goto	l866
 10758  0038C6                     l867:
 10759  0038C6  A038               	btfss	___fldiv@b^0,0,c
 10760  0038C8  EF68  F01C         	goto	u4031
 10761  0038CC  EF6A  F01C         	goto	u4030
 10762  0038D0                     u4031:
 10763  0038D0  EF6C  F01C         	goto	l866
 10764  0038D4                     u4030:
 10765  0038D4  EF5F  F01C         	goto	l3685
 10766  0038D8                     l866:
 10767  0038D8  5050               	movf	___fldiv@aexp^0,w,c
 10768  0038DA  B4D8               	btfsc	status,2,c
 10769  0038DC  EF72  F01C         	goto	u4041
 10770  0038E0  EF74  F01C         	goto	u4040
 10771  0038E4                     u4041:
 10772  0038E4  EF98  F01C         	goto	l3697
 10773  0038E8                     u4040:
 10774  0038E8  0E01               	movlw	1
 10775  0038EA  2638               	addwf	___fldiv@b^0,f,c
 10776  0038EC  0E00               	movlw	0
 10777  0038EE  2239               	addwfc	(___fldiv@b+1)^0,f,c
 10778  0038F0  223A               	addwfc	(___fldiv@b+2)^0,f,c
 10779  0038F2  223B               	addwfc	(___fldiv@b+3)^0,f,c
 10780  0038F4  A03B               	btfss	(___fldiv@b+3)^0,0,c
 10781  0038F6  EF7F  F01C         	goto	u4051
 10782  0038FA  EF81  F01C         	goto	u4050
 10783  0038FE                     u4051:
 10784  0038FE  EF98  F01C         	goto	l3697
 10785  003902                     u4050:
 10786  003902  C038  F040         	movff	___fldiv@b,??___fldiv
 10787  003906  C039  F041         	movff	___fldiv@b+1,??___fldiv+1
 10788  00390A  C03A  F042         	movff	___fldiv@b+2,??___fldiv+2
 10789  00390E  C03B  F043         	movff	___fldiv@b+3,??___fldiv+3
 10790  003912  3443               	rlcf	(??___fldiv+3)^0,w,c
 10791  003914  3243               	rrcf	(??___fldiv+3)^0,f,c
 10792  003916  3242               	rrcf	(??___fldiv+2)^0,f,c
 10793  003918  3241               	rrcf	(??___fldiv+1)^0,f,c
 10794  00391A  3240               	rrcf	??___fldiv^0,f,c
 10795  00391C  C040  F038         	movff	??___fldiv,___fldiv@b
 10796  003920  C041  F039         	movff	??___fldiv+1,___fldiv@b+1
 10797  003924  C042  F03A         	movff	??___fldiv+2,___fldiv@b+2
 10798  003928  C043  F03B         	movff	??___fldiv+3,___fldiv@b+3
 10799  00392C  4A49               	infsnz	___fldiv@new_exp^0,f,c
 10800  00392E  2A4A               	incf	(___fldiv@new_exp+1)^0,f,c
 10801  003930                     l3697:
 10802  003930  BE4A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10803  003932  EFA3  F01C         	goto	u4061
 10804  003936  504A               	movf	(___fldiv@new_exp+1)^0,w,c
 10805  003938  E108               	bnz	u4060
 10806  00393A  2849               	incf	___fldiv@new_exp^0,w,c
 10807  00393C  A0D8               	btfss	status,0,c
 10808  00393E  EFA3  F01C         	goto	u4061
 10809  003942  EFA5  F01C         	goto	u4060
 10810  003946                     u4061:
 10811  003946  EFB0  F01C         	goto	l3701
 10812  00394A                     u4060:
 10813  00394A  0E00               	movlw	0
 10814  00394C  6E4A               	movwf	(___fldiv@new_exp+1)^0,c
 10815  00394E  6849               	setf	___fldiv@new_exp^0,c
 10816  003950  0E00               	movlw	0
 10817  003952  6E38               	movwf	___fldiv@b^0,c
 10818  003954  0E00               	movlw	0
 10819  003956  6E39               	movwf	(___fldiv@b+1)^0,c
 10820  003958  0E00               	movlw	0
 10821  00395A  6E3A               	movwf	(___fldiv@b+2)^0,c
 10822  00395C  0E00               	movlw	0
 10823  00395E  6E3B               	movwf	(___fldiv@b+3)^0,c
 10824  003960                     l3701:
 10825  003960  BE4A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10826  003962  EFBD  F01C         	goto	u4070
 10827  003966  504A               	movf	(___fldiv@new_exp+1)^0,w,c
 10828  003968  E106               	bnz	u4071
 10829  00396A  0449               	decf	___fldiv@new_exp^0,w,c
 10830  00396C  B0D8               	btfsc	status,0,c
 10831  00396E  EFBB  F01C         	goto	u4071
 10832  003972  EFBD  F01C         	goto	u4070
 10833  003976                     u4071:
 10834  003976  EFCB  F01C         	goto	l3705
 10835  00397A                     u4070:
 10836  00397A  0E00               	movlw	0
 10837  00397C  6E4A               	movwf	(___fldiv@new_exp+1)^0,c
 10838  00397E  0E00               	movlw	0
 10839  003980  6E49               	movwf	___fldiv@new_exp^0,c
 10840  003982  0E00               	movlw	0
 10841  003984  6E38               	movwf	___fldiv@b^0,c
 10842  003986  0E00               	movlw	0
 10843  003988  6E39               	movwf	(___fldiv@b+1)^0,c
 10844  00398A  0E00               	movlw	0
 10845  00398C  6E3A               	movwf	(___fldiv@b+2)^0,c
 10846  00398E  0E00               	movlw	0
 10847  003990  6E3B               	movwf	(___fldiv@b+3)^0,c
 10848  003992  0E00               	movlw	0
 10849  003994  6E48               	movwf	___fldiv@sign^0,c
 10850  003996                     l3705:
 10851  003996  C049  F04F         	movff	___fldiv@new_exp,___fldiv@bexp
 10852  00399A  A04F               	btfss	___fldiv@bexp^0,0,c
 10853  00399C  EFD2  F01C         	goto	u4081
 10854  0039A0  EFD4  F01C         	goto	u4080
 10855  0039A4                     u4081:
 10856  0039A4  EFD7  F01C         	goto	l3711
 10857  0039A8                     u4080:
 10858  0039A8  8E3A               	bsf	(___fldiv@b+2)^0,7,c
 10859  0039AA  EFD8  F01C         	goto	l3713
 10860  0039AE                     l3711:
 10861  0039AE  9E3A               	bcf	(___fldiv@b+2)^0,7,c
 10862  0039B0                     l3713:
 10863  0039B0  90D8               	bcf	status,0,c
 10864  0039B2  304F               	rrcf	___fldiv@bexp^0,w,c
 10865  0039B4  6E3B               	movwf	(___fldiv@b+3)^0,c
 10866  0039B6  EF8E  F01B         	goto	l3627
 10867  0039BA                     l853:
 10868  0039BA  0012               	return		;funcret
 10869  0039BC                     __end_of___fldiv:
 10870                           	callstack 0
 10871                           
 10872 ;; *************** function ___awmod *****************
 10873 ;; Defined at:
 10874 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\awmod.c"
 10875 ;; Parameters:    Size  Location     Type
 10876 ;;  dividend        2    0[COMRAM] int 
 10877 ;;  divisor         2    2[COMRAM] int 
 10878 ;; Auto vars:     Size  Location     Type
 10879 ;;  sign            1    5[COMRAM] unsigned char 
 10880 ;;  counter         1    4[COMRAM] unsigned char 
 10881 ;; Return value:  Size  Location     Type
 10882 ;;                  2    0[COMRAM] int 
 10883 ;; Registers used:
 10884 ;;		wreg, status,2, status,0
 10885 ;; Tracked objects:
 10886 ;;		On entry : 0/0
 10887 ;;		On exit  : 0/0
 10888 ;;		Unchanged: 0/0
 10889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10890 ;;      Params:         4       0       0       0       0       0       0
 10891 ;;      Locals:         2       0       0       0       0       0       0
 10892 ;;      Temps:          0       0       0       0       0       0       0
 10893 ;;      Totals:         6       0       0       0       0       0       0
 10894 ;;Total ram usage:        6 bytes
 10895 ;; Hardware stack levels used:    1
 10896 ;; This function calls:
 10897 ;;		Nothing
 10898 ;; This function is called by:
 10899 ;;		_efgtoa
 10900 ;; This function uses a non-reentrant model
 10901 ;;
 10902                           
 10903                           	psect	text29
 10904  004878                     __ptext29:
 10905                           	callstack 0
 10906  004878                     ___awmod:
 10907                           	callstack 25
 10908  004878  0E00               	movlw	0
 10909  00487A  6E06               	movwf	___awmod@sign^0,c
 10910  00487C  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 10911  00487E  EF45  F024         	goto	u4340
 10912  004882  EF43  F024         	goto	u4341
 10913  004886                     u4341:
 10914  004886  EF4B  F024         	goto	l3909
 10915  00488A                     u4340:
 10916  00488A  6C01               	negf	___awmod@dividend^0,c
 10917  00488C  1E02               	comf	(___awmod@dividend+1)^0,f,c
 10918  00488E  B0D8               	btfsc	status,0,c
 10919  004890  2A02               	incf	(___awmod@dividend+1)^0,f,c
 10920  004892  0E01               	movlw	1
 10921  004894  6E06               	movwf	___awmod@sign^0,c
 10922  004896                     l3909:
 10923  004896  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 10924  004898  EF52  F024         	goto	u4350
 10925  00489C  EF50  F024         	goto	u4351
 10926  0048A0                     u4351:
 10927  0048A0  EF56  F024         	goto	l3913
 10928  0048A4                     u4350:
 10929  0048A4  6C03               	negf	___awmod@divisor^0,c
 10930  0048A6  1E04               	comf	(___awmod@divisor+1)^0,f,c
 10931  0048A8  B0D8               	btfsc	status,0,c
 10932  0048AA  2A04               	incf	(___awmod@divisor+1)^0,f,c
 10933  0048AC                     l3913:
 10934  0048AC  5003               	movf	___awmod@divisor^0,w,c
 10935  0048AE  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 10936  0048B0  B4D8               	btfsc	status,2,c
 10937  0048B2  EF5D  F024         	goto	u4361
 10938  0048B6  EF5F  F024         	goto	u4360
 10939  0048BA                     u4361:
 10940  0048BA  EF83  F024         	goto	l3929
 10941  0048BE                     u4360:
 10942  0048BE  0E01               	movlw	1
 10943  0048C0  6E05               	movwf	___awmod@counter^0,c
 10944  0048C2  EF67  F024         	goto	l3919
 10945  0048C6                     l3917:
 10946  0048C6  90D8               	bcf	status,0,c
 10947  0048C8  3603               	rlcf	___awmod@divisor^0,f,c
 10948  0048CA  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 10949  0048CC  2A05               	incf	___awmod@counter^0,f,c
 10950  0048CE                     l3919:
 10951  0048CE  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 10952  0048D0  EF6C  F024         	goto	u4371
 10953  0048D4  EF6E  F024         	goto	u4370
 10954  0048D8                     u4371:
 10955  0048D8  EF63  F024         	goto	l3917
 10956  0048DC                     u4370:
 10957  0048DC                     l3921:
 10958  0048DC  5003               	movf	___awmod@divisor^0,w,c
 10959  0048DE  5C01               	subwf	___awmod@dividend^0,w,c
 10960  0048E0  5004               	movf	(___awmod@divisor+1)^0,w,c
 10961  0048E2  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 10962  0048E4  A0D8               	btfss	status,0,c
 10963  0048E6  EF77  F024         	goto	u4381
 10964  0048EA  EF79  F024         	goto	u4380
 10965  0048EE                     u4381:
 10966  0048EE  EF7D  F024         	goto	l3925
 10967  0048F2                     u4380:
 10968  0048F2  5003               	movf	___awmod@divisor^0,w,c
 10969  0048F4  5E01               	subwf	___awmod@dividend^0,f,c
 10970  0048F6  5004               	movf	(___awmod@divisor+1)^0,w,c
 10971  0048F8  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 10972  0048FA                     l3925:
 10973  0048FA  90D8               	bcf	status,0,c
 10974  0048FC  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 10975  0048FE  3203               	rrcf	___awmod@divisor^0,f,c
 10976  004900  2E05               	decfsz	___awmod@counter^0,f,c
 10977  004902  EF6E  F024         	goto	l3921
 10978  004906                     l3929:
 10979  004906  5006               	movf	___awmod@sign^0,w,c
 10980  004908  B4D8               	btfsc	status,2,c
 10981  00490A  EF89  F024         	goto	u4391
 10982  00490E  EF8B  F024         	goto	u4390
 10983  004912                     u4391:
 10984  004912  EF8F  F024         	goto	l3933
 10985  004916                     u4390:
 10986  004916  6C01               	negf	___awmod@dividend^0,c
 10987  004918  1E02               	comf	(___awmod@dividend+1)^0,f,c
 10988  00491A  B0D8               	btfsc	status,0,c
 10989  00491C  2A02               	incf	(___awmod@dividend+1)^0,f,c
 10990  00491E                     l3933:
 10991  00491E  C001  F001         	movff	___awmod@dividend,?___awmod
 10992  004922  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 10993  004926  0012               	return		;funcret
 10994  004928                     __end_of___awmod:
 10995                           	callstack 0
 10996                           
 10997 ;; *************** function ___awdiv *****************
 10998 ;; Defined at:
 10999 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\awdiv.c"
 11000 ;; Parameters:    Size  Location     Type
 11001 ;;  dividend        2    0[COMRAM] int 
 11002 ;;  divisor         2    2[COMRAM] int 
 11003 ;; Auto vars:     Size  Location     Type
 11004 ;;  quotient        2    6[COMRAM] int 
 11005 ;;  sign            1    5[COMRAM] unsigned char 
 11006 ;;  counter         1    4[COMRAM] unsigned char 
 11007 ;; Return value:  Size  Location     Type
 11008 ;;                  2    0[COMRAM] int 
 11009 ;; Registers used:
 11010 ;;		wreg, status,2, status,0
 11011 ;; Tracked objects:
 11012 ;;		On entry : 0/0
 11013 ;;		On exit  : 0/0
 11014 ;;		Unchanged: 0/0
 11015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11016 ;;      Params:         4       0       0       0       0       0       0
 11017 ;;      Locals:         4       0       0       0       0       0       0
 11018 ;;      Temps:          0       0       0       0       0       0       0
 11019 ;;      Totals:         8       0       0       0       0       0       0
 11020 ;;Total ram usage:        8 bytes
 11021 ;; Hardware stack levels used:    1
 11022 ;; This function calls:
 11023 ;;		Nothing
 11024 ;; This function is called by:
 11025 ;;		_efgtoa
 11026 ;; This function uses a non-reentrant model
 11027 ;;
 11028                           
 11029                           	psect	text30
 11030  0047B4                     __ptext30:
 11031                           	callstack 0
 11032  0047B4                     ___awdiv:
 11033                           	callstack 25
 11034  0047B4  0E00               	movlw	0
 11035  0047B6  6E06               	movwf	___awdiv@sign^0,c
 11036  0047B8  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 11037  0047BA  EFE3  F023         	goto	u4280
 11038  0047BE  EFE1  F023         	goto	u4281
 11039  0047C2                     u4281:
 11040  0047C2  EFE9  F023         	goto	l3865
 11041  0047C6                     u4280:
 11042  0047C6  6C03               	negf	___awdiv@divisor^0,c
 11043  0047C8  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 11044  0047CA  B0D8               	btfsc	status,0,c
 11045  0047CC  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 11046  0047CE  0E01               	movlw	1
 11047  0047D0  6E06               	movwf	___awdiv@sign^0,c
 11048  0047D2                     l3865:
 11049  0047D2  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 11050  0047D4  EFF0  F023         	goto	u4290
 11051  0047D8  EFEE  F023         	goto	u4291
 11052  0047DC                     u4291:
 11053  0047DC  EFF6  F023         	goto	l3871
 11054  0047E0                     u4290:
 11055  0047E0  6C01               	negf	___awdiv@dividend^0,c
 11056  0047E2  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 11057  0047E4  B0D8               	btfsc	status,0,c
 11058  0047E6  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 11059  0047E8  0E01               	movlw	1
 11060  0047EA  1A06               	xorwf	___awdiv@sign^0,f,c
 11061  0047EC                     l3871:
 11062  0047EC  0E00               	movlw	0
 11063  0047EE  6E08               	movwf	(___awdiv@quotient+1)^0,c
 11064  0047F0  0E00               	movlw	0
 11065  0047F2  6E07               	movwf	___awdiv@quotient^0,c
 11066  0047F4  5003               	movf	___awdiv@divisor^0,w,c
 11067  0047F6  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 11068  0047F8  B4D8               	btfsc	status,2,c
 11069  0047FA  EF01  F024         	goto	u4301
 11070  0047FE  EF03  F024         	goto	u4300
 11071  004802                     u4301:
 11072  004802  EF2B  F024         	goto	l3893
 11073  004806                     u4300:
 11074  004806  0E01               	movlw	1
 11075  004808  6E05               	movwf	___awdiv@counter^0,c
 11076  00480A  EF0B  F024         	goto	l3879
 11077  00480E                     l3877:
 11078  00480E  90D8               	bcf	status,0,c
 11079  004810  3603               	rlcf	___awdiv@divisor^0,f,c
 11080  004812  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 11081  004814  2A05               	incf	___awdiv@counter^0,f,c
 11082  004816                     l3879:
 11083  004816  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 11084  004818  EF10  F024         	goto	u4311
 11085  00481C  EF12  F024         	goto	u4310
 11086  004820                     u4311:
 11087  004820  EF07  F024         	goto	l3877
 11088  004824                     u4310:
 11089  004824                     l3881:
 11090  004824  90D8               	bcf	status,0,c
 11091  004826  3607               	rlcf	___awdiv@quotient^0,f,c
 11092  004828  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 11093  00482A  5003               	movf	___awdiv@divisor^0,w,c
 11094  00482C  5C01               	subwf	___awdiv@dividend^0,w,c
 11095  00482E  5004               	movf	(___awdiv@divisor+1)^0,w,c
 11096  004830  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 11097  004832  A0D8               	btfss	status,0,c
 11098  004834  EF1E  F024         	goto	u4321
 11099  004838  EF20  F024         	goto	u4320
 11100  00483C                     u4321:
 11101  00483C  EF25  F024         	goto	l3889
 11102  004840                     u4320:
 11103  004840  5003               	movf	___awdiv@divisor^0,w,c
 11104  004842  5E01               	subwf	___awdiv@dividend^0,f,c
 11105  004844  5004               	movf	(___awdiv@divisor+1)^0,w,c
 11106  004846  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 11107  004848  8007               	bsf	___awdiv@quotient^0,0,c
 11108  00484A                     l3889:
 11109  00484A  90D8               	bcf	status,0,c
 11110  00484C  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 11111  00484E  3203               	rrcf	___awdiv@divisor^0,f,c
 11112  004850  2E05               	decfsz	___awdiv@counter^0,f,c
 11113  004852  EF12  F024         	goto	l3881
 11114  004856                     l3893:
 11115  004856  5006               	movf	___awdiv@sign^0,w,c
 11116  004858  B4D8               	btfsc	status,2,c
 11117  00485A  EF31  F024         	goto	u4331
 11118  00485E  EF33  F024         	goto	u4330
 11119  004862                     u4331:
 11120  004862  EF37  F024         	goto	l3897
 11121  004866                     u4330:
 11122  004866  6C07               	negf	___awdiv@quotient^0,c
 11123  004868  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 11124  00486A  B0D8               	btfsc	status,0,c
 11125  00486C  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 11126  00486E                     l3897:
 11127  00486E  C007  F001         	movff	___awdiv@quotient,?___awdiv
 11128  004872  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 11129  004876  0012               	return		;funcret
 11130  004878                     __end_of___awdiv:
 11131                           	callstack 0
 11132                           
 11133 ;; *************** function _atoi *****************
 11134 ;; Defined at:
 11135 ;;		line 4 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\atoi.c"
 11136 ;; Parameters:    Size  Location     Type
 11137 ;;  s               2    7[COMRAM] PTR const unsigned char 
 11138 ;;		 -> STR_28(5), STR_22(5), STR_12(5), 
 11139 ;; Auto vars:     Size  Location     Type
 11140 ;;  n               2   20[COMRAM] int 
 11141 ;;  neg             2   13[COMRAM] int 
 11142 ;; Return value:  Size  Location     Type
 11143 ;;                  2    7[COMRAM] int 
 11144 ;; Registers used:
 11145 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11146 ;; Tracked objects:
 11147 ;;		On entry : 0/0
 11148 ;;		On exit  : 0/0
 11149 ;;		Unchanged: 0/0
 11150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11151 ;;      Params:         2       0       0       0       0       0       0
 11152 ;;      Locals:         9       0       0       0       0       0       0
 11153 ;;      Temps:          4       0       0       0       0       0       0
 11154 ;;      Totals:        15       0       0       0       0       0       0
 11155 ;;Total ram usage:       15 bytes
 11156 ;; Hardware stack levels used:    1
 11157 ;; Hardware stack levels required when called:    1
 11158 ;; This function calls:
 11159 ;;		___wmul
 11160 ;;		_isdigit
 11161 ;;		_isspace
 11162 ;; This function is called by:
 11163 ;;		_vfpfcnvrt
 11164 ;; This function uses a non-reentrant model
 11165 ;;
 11166                           
 11167                           	psect	text31
 11168  003F4C                     __ptext31:
 11169                           	callstack 0
 11170  003F4C                     _atoi:
 11171                           	callstack 25
 11172  003F4C  0E00               	movlw	0
 11173  003F4E  6E16               	movwf	(atoi@n+1)^0,c
 11174  003F50  0E00               	movlw	0
 11175  003F52  6E15               	movwf	atoi@n^0,c
 11176  003F54  0E00               	movlw	0
 11177  003F56  6E0F               	movwf	(atoi@neg+1)^0,c
 11178  003F58  0E00               	movlw	0
 11179  003F5A  6E0E               	movwf	atoi@neg^0,c
 11180  003F5C  EFB2  F01F         	goto	l4431
 11181  003F60                     l4429:
 11182  003F60  4A08               	infsnz	atoi@s^0,f,c
 11183  003F62  2A09               	incf	(atoi@s+1)^0,f,c
 11184  003F64                     l4431:
 11185  003F64  0E01               	movlw	1
 11186  003F66  6E14               	movwf	_atoi$831^0,c
 11187  003F68  C008  FFF6         	movff	atoi@s,tblptrl
 11188  003F6C  C009  FFF7         	movff	atoi@s+1,tblptrh
 11189  003F70                     	if	0	;tblptru may be non-zero
 11190  003F70                     	endif
 11191  003F70                     	if	0	;tblptru may be non-zero
 11192  003F70                     	endif
 11193  003F70  0008               	tblrd		*
 11194  003F72  50F5               	movf	tablat,w,c
 11195  003F74  0A20               	xorlw	32
 11196  003F76  B4D8               	btfsc	status,2,c
 11197  003F78  EFC0  F01F         	goto	u5381
 11198  003F7C  EFC2  F01F         	goto	u5380
 11199  003F80                     u5381:
 11200  003F80  EFDF  F01F         	goto	l4439
 11201  003F84                     u5380:
 11202  003F84  0EF7               	movlw	247
 11203  003F86  6E0A               	movwf	??_atoi^0,c
 11204  003F88  0EFF               	movlw	255
 11205  003F8A  6E0B               	movwf	(??_atoi+1)^0,c
 11206  003F8C  C008  FFF6         	movff	atoi@s,tblptrl
 11207  003F90  C009  FFF7         	movff	atoi@s+1,tblptrh
 11208  003F94                     	if	0	;tblptru may be non-zero
 11209  003F94                     	endif
 11210  003F94                     	if	0	;tblptru may be non-zero
 11211  003F94                     	endif
 11212  003F94  0008               	tblrd		*
 11213  003F96  50F5               	movf	tablat,w,c
 11214  003F98  6E0C               	movwf	(??_atoi+2)^0,c
 11215  003F9A  6A0D               	clrf	(??_atoi+3)^0,c
 11216  003F9C  500A               	movf	??_atoi^0,w,c
 11217  003F9E  260C               	addwf	(??_atoi+2)^0,f,c
 11218  003FA0  500B               	movf	(??_atoi+1)^0,w,c
 11219  003FA2  220D               	addwfc	(??_atoi+3)^0,f,c
 11220  003FA4  500D               	movf	(??_atoi+3)^0,w,c
 11221  003FA6  E109               	bnz	u5390
 11222  003FA8  0E05               	movlw	5
 11223  003FAA  5C0C               	subwf	(??_atoi+2)^0,w,c
 11224  003FAC  A0D8               	btfss	status,0,c
 11225  003FAE  EFDB  F01F         	goto	u5391
 11226  003FB2  EFDD  F01F         	goto	u5390
 11227  003FB6                     u5391:
 11228  003FB6  EFDF  F01F         	goto	l4439
 11229  003FBA                     u5390:
 11230  003FBA  0E00               	movlw	0
 11231  003FBC  6E14               	movwf	_atoi$831^0,c
 11232  003FBE                     l4439:
 11233  003FBE  C014  F010         	movff	_atoi$831,_atoi$830
 11234  003FC2  6A11               	clrf	(_atoi$830+1)^0,c
 11235  003FC4  5010               	movf	_atoi$830^0,w,c
 11236  003FC6  1011               	iorwf	(_atoi$830+1)^0,w,c
 11237  003FC8  A4D8               	btfss	status,2,c
 11238  003FCA  EFE9  F01F         	goto	u5401
 11239  003FCE  EFEB  F01F         	goto	u5400
 11240  003FD2                     u5401:
 11241  003FD2  EFB0  F01F         	goto	l4429
 11242  003FD6                     u5400:
 11243  003FD6  EFF5  F01F         	goto	l4449
 11244  003FDA                     l4445:
 11245  003FDA  0E00               	movlw	0
 11246  003FDC  6E0F               	movwf	(atoi@neg+1)^0,c
 11247  003FDE  0E01               	movlw	1
 11248  003FE0  6E0E               	movwf	atoi@neg^0,c
 11249  003FE2                     l4447:
 11250  003FE2  4A08               	infsnz	atoi@s^0,f,c
 11251  003FE4  2A09               	incf	(atoi@s+1)^0,f,c
 11252  003FE6  EF2A  F020         	goto	l4455
 11253  003FEA                     l4449:
 11254  003FEA  C008  FFF6         	movff	atoi@s,tblptrl
 11255  003FEE  C009  FFF7         	movff	atoi@s+1,tblptrh
 11256  003FF2                     	if	0	;tblptru may be non-zero
 11257  003FF2                     	endif
 11258  003FF2                     	if	0	;tblptru may be non-zero
 11259  003FF2                     	endif
 11260  003FF2  0008               	tblrd		*
 11261  003FF4  50F5               	movf	tablat,w,c
 11262  003FF6  6E0A               	movwf	??_atoi^0,c
 11263  003FF8  6A0B               	clrf	(??_atoi+1)^0,c
 11264                           
 11265                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11266                           ; Switch size 1, requested type "simple"
 11267                           ; Number of cases is 1, Range of values is 0 to 0
 11268                           ; switch strategies available:
 11269                           ; Name         Instructions Cycles
 11270                           ; simple_byte            4     3 (average)
 11271                           ;	Chosen strategy is simple_byte
 11272  003FFA  500B               	movf	(??_atoi+1)^0,w,c
 11273  003FFC  0A00               	xorlw	0	; case 0
 11274  003FFE  B4D8               	btfsc	status,2,c
 11275  004000  EF04  F020         	goto	l5425
 11276  004004  EF2A  F020         	goto	l4455
 11277  004008                     l5425:
 11278                           
 11279                           ; Switch size 1, requested type "simple"
 11280                           ; Number of cases is 2, Range of values is 43 to 45
 11281                           ; switch strategies available:
 11282                           ; Name         Instructions Cycles
 11283                           ; simple_byte            7     4 (average)
 11284                           ;	Chosen strategy is simple_byte
 11285  004008  500A               	movf	??_atoi^0,w,c
 11286  00400A  0A2B               	xorlw	43	; case 43
 11287  00400C  B4D8               	btfsc	status,2,c
 11288  00400E  EFF1  F01F         	goto	l4447
 11289  004012  0A06               	xorlw	6	; case 45
 11290  004014  B4D8               	btfsc	status,2,c
 11291  004016  EFED  F01F         	goto	l4445
 11292  00401A  EF2A  F020         	goto	l4455
 11293  00401E                     l4451:
 11294  00401E  C015  F001         	movff	atoi@n,___wmul@multiplier
 11295  004022  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 11296  004026  0E00               	movlw	0
 11297  004028  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11298  00402A  0E0A               	movlw	10
 11299  00402C  6E03               	movwf	___wmul@multiplicand^0,c
 11300  00402E  EC2C  F028         	call	___wmul	;wreg free
 11301  004032  C008  FFF6         	movff	atoi@s,tblptrl
 11302  004036  C009  FFF7         	movff	atoi@s+1,tblptrh
 11303  00403A                     	if	0	;tblptru may be non-zero
 11304  00403A                     	endif
 11305  00403A                     	if	0	;tblptru may be non-zero
 11306  00403A                     	endif
 11307  00403A  0008               	tblrd		*
 11308  00403C  50F5               	movf	tablat,w,c
 11309  00403E  5E01               	subwf	?___wmul^0,f,c
 11310  004040  0E00               	movlw	0
 11311  004042  5A02               	subwfb	(?___wmul+1)^0,f,c
 11312  004044  0E30               	movlw	48
 11313  004046  2401               	addwf	?___wmul^0,w,c
 11314  004048  6E15               	movwf	atoi@n^0,c
 11315  00404A  0E00               	movlw	0
 11316  00404C  2002               	addwfc	(?___wmul+1)^0,w,c
 11317  00404E  6E16               	movwf	(atoi@n+1)^0,c
 11318  004050  EFF1  F01F         	goto	l4447
 11319  004054                     l4455:
 11320  004054  0ED0               	movlw	208
 11321  004056  6E0A               	movwf	??_atoi^0,c
 11322  004058  0EFF               	movlw	255
 11323  00405A  6E0B               	movwf	(??_atoi+1)^0,c
 11324  00405C  C008  FFF6         	movff	atoi@s,tblptrl
 11325  004060  C009  FFF7         	movff	atoi@s+1,tblptrh
 11326  004064                     	if	0	;tblptru may be non-zero
 11327  004064                     	endif
 11328  004064                     	if	0	;tblptru may be non-zero
 11329  004064                     	endif
 11330  004064  0008               	tblrd		*
 11331  004066  50F5               	movf	tablat,w,c
 11332  004068  6E0C               	movwf	(??_atoi+2)^0,c
 11333  00406A  6A0D               	clrf	(??_atoi+3)^0,c
 11334  00406C  500A               	movf	??_atoi^0,w,c
 11335  00406E  260C               	addwf	(??_atoi+2)^0,f,c
 11336  004070  500B               	movf	(??_atoi+1)^0,w,c
 11337  004072  220D               	addwfc	(??_atoi+3)^0,f,c
 11338  004074  500D               	movf	(??_atoi+3)^0,w,c
 11339  004076  E10A               	bnz	u5410
 11340  004078  0E0A               	movlw	10
 11341  00407A  5C0C               	subwf	(??_atoi+2)^0,w,c
 11342  00407C  A0D8               	btfss	status,0,c
 11343  00407E  EF43  F020         	goto	u5411
 11344  004082  EF46  F020         	goto	u5410
 11345  004086                     u5411:
 11346  004086  0E01               	movlw	1
 11347  004088  EF47  F020         	goto	u5420
 11348  00408C                     u5410:
 11349  00408C  0E00               	movlw	0
 11350  00408E                     u5420:
 11351  00408E  6E12               	movwf	_atoi$832^0,c
 11352  004090  6A13               	clrf	(_atoi$832+1)^0,c
 11353  004092  5012               	movf	_atoi$832^0,w,c
 11354  004094  1013               	iorwf	(_atoi$832+1)^0,w,c
 11355  004096  A4D8               	btfss	status,2,c
 11356  004098  EF50  F020         	goto	u5431
 11357  00409C  EF52  F020         	goto	u5430
 11358  0040A0                     u5431:
 11359  0040A0  EF0F  F020         	goto	l4451
 11360  0040A4                     u5430:
 11361  0040A4  500E               	movf	atoi@neg^0,w,c
 11362  0040A6  100F               	iorwf	(atoi@neg+1)^0,w,c
 11363  0040A8  A4D8               	btfss	status,2,c
 11364  0040AA  EF59  F020         	goto	u5441
 11365  0040AE  EF5B  F020         	goto	u5440
 11366  0040B2                     u5441:
 11367  0040B2  EF69  F020         	goto	l1156
 11368  0040B6                     u5440:
 11369  0040B6  C015  F00A         	movff	atoi@n,??_atoi
 11370  0040BA  C016  F00B         	movff	atoi@n+1,??_atoi+1
 11371  0040BE  1E0A               	comf	??_atoi^0,f,c
 11372  0040C0  1E0B               	comf	(??_atoi+1)^0,f,c
 11373  0040C2  4A0A               	infsnz	??_atoi^0,f,c
 11374  0040C4  2A0B               	incf	(??_atoi+1)^0,f,c
 11375  0040C6  C00A  F008         	movff	??_atoi,?_atoi
 11376  0040CA  C00B  F009         	movff	??_atoi+1,?_atoi+1
 11377  0040CE  EF6D  F020         	goto	l1159
 11378  0040D2                     l1156:
 11379  0040D2  C015  F008         	movff	atoi@n,?_atoi
 11380  0040D6  C016  F009         	movff	atoi@n+1,?_atoi+1
 11381  0040DA                     l1159:
 11382  0040DA  0012               	return		;funcret
 11383  0040DC                     __end_of_atoi:
 11384                           	callstack 0
 11385                           
 11386 ;; *************** function _isspace *****************
 11387 ;; Defined at:
 11388 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\isspace.c"
 11389 ;; Parameters:    Size  Location     Type
 11390 ;;  c               2    0[COMRAM] int 
 11391 ;; Auto vars:     Size  Location     Type
 11392 ;;		None
 11393 ;; Return value:  Size  Location     Type
 11394 ;;                  2    0[COMRAM] int 
 11395 ;; Registers used:
 11396 ;;		wreg, status,2, status,0
 11397 ;; Tracked objects:
 11398 ;;		On entry : 0/0
 11399 ;;		On exit  : 0/0
 11400 ;;		Unchanged: 0/0
 11401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11402 ;;      Params:         2       0       0       0       0       0       0
 11403 ;;      Locals:         1       0       0       0       0       0       0
 11404 ;;      Temps:          4       0       0       0       0       0       0
 11405 ;;      Totals:         7       0       0       0       0       0       0
 11406 ;;Total ram usage:        7 bytes
 11407 ;; Hardware stack levels used:    1
 11408 ;; This function calls:
 11409 ;;		Nothing
 11410 ;; This function is called by:
 11411 ;;		_atoi
 11412 ;; This function uses a non-reentrant model
 11413 ;;
 11414                           
 11415                           	psect	text32
 11416  004E20                     __ptext32:
 11417                           	callstack 0
 11418  004E20                     _isspace:
 11419                           	callstack 25
 11420  004E20  0E01               	movlw	1
 11421  004E22  6E07               	movwf	_isspace$861^0,c
 11422  004E24  0E20               	movlw	32
 11423  004E26  1801               	xorwf	isspace@c^0,w,c
 11424  004E28  1002               	iorwf	(isspace@c+1)^0,w,c
 11425  004E2A  B4D8               	btfsc	status,2,c
 11426  004E2C  EF1A  F027         	goto	u4841
 11427  004E30  EF1C  F027         	goto	u4840
 11428  004E34                     u4841:
 11429  004E34  EF35  F027         	goto	l4125
 11430  004E38                     u4840:
 11431  004E38  0EF7               	movlw	247
 11432  004E3A  6E03               	movwf	??_isspace^0,c
 11433  004E3C  0EFF               	movlw	255
 11434  004E3E  6E04               	movwf	(??_isspace+1)^0,c
 11435  004E40  C001  F005         	movff	isspace@c,??_isspace+2
 11436  004E44  C002  F006         	movff	isspace@c+1,??_isspace+3
 11437  004E48  5003               	movf	??_isspace^0,w,c
 11438  004E4A  2605               	addwf	(??_isspace+2)^0,f,c
 11439  004E4C  5004               	movf	(??_isspace+1)^0,w,c
 11440  004E4E  2206               	addwfc	(??_isspace+3)^0,f,c
 11441  004E50  5006               	movf	(??_isspace+3)^0,w,c
 11442  004E52  E109               	bnz	u4850
 11443  004E54  0E05               	movlw	5
 11444  004E56  5C05               	subwf	(??_isspace+2)^0,w,c
 11445  004E58  A0D8               	btfss	status,0,c
 11446  004E5A  EF31  F027         	goto	u4851
 11447  004E5E  EF33  F027         	goto	u4850
 11448  004E62                     u4851:
 11449  004E62  EF35  F027         	goto	l4125
 11450  004E66                     u4850:
 11451  004E66  0E00               	movlw	0
 11452  004E68  6E07               	movwf	_isspace$861^0,c
 11453  004E6A                     l4125:
 11454  004E6A  C007  F001         	movff	_isspace$861,?_isspace
 11455  004E6E  6A02               	clrf	(?_isspace+1)^0,c
 11456  004E70  0012               	return		;funcret
 11457  004E72                     __end_of_isspace:
 11458                           	callstack 0
 11459                           
 11460 ;; *************** function _isdigit *****************
 11461 ;; Defined at:
 11462 ;;		line 5 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\isdigit.c"
 11463 ;; Parameters:    Size  Location     Type
 11464 ;;  c               2    0[COMRAM] int 
 11465 ;; Auto vars:     Size  Location     Type
 11466 ;;		None
 11467 ;; Return value:  Size  Location     Type
 11468 ;;                  2    0[COMRAM] int 
 11469 ;; Registers used:
 11470 ;;		wreg, status,2, status,0
 11471 ;; Tracked objects:
 11472 ;;		On entry : 0/0
 11473 ;;		On exit  : 0/0
 11474 ;;		Unchanged: 0/0
 11475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11476 ;;      Params:         2       0       0       0       0       0       0
 11477 ;;      Locals:         0       0       0       0       0       0       0
 11478 ;;      Temps:          4       0       0       0       0       0       0
 11479 ;;      Totals:         6       0       0       0       0       0       0
 11480 ;;Total ram usage:        6 bytes
 11481 ;; Hardware stack levels used:    1
 11482 ;; This function calls:
 11483 ;;		Nothing
 11484 ;; This function is called by:
 11485 ;;		_vfpfcnvrt
 11486 ;;		_atoi
 11487 ;; This function uses a non-reentrant model
 11488 ;;
 11489                           
 11490                           	psect	text33
 11491  004F6C                     __ptext33:
 11492                           	callstack 0
 11493  004F6C                     _isdigit:
 11494                           	callstack 26
 11495  004F6C  0ED0               	movlw	208
 11496  004F6E  6E03               	movwf	??_isdigit^0,c
 11497  004F70  0EFF               	movlw	255
 11498  004F72  6E04               	movwf	(??_isdigit+1)^0,c
 11499  004F74  C001  F005         	movff	isdigit@c,??_isdigit+2
 11500  004F78  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 11501  004F7C  5003               	movf	??_isdigit^0,w,c
 11502  004F7E  2605               	addwf	(??_isdigit+2)^0,f,c
 11503  004F80  5004               	movf	(??_isdigit+1)^0,w,c
 11504  004F82  2206               	addwfc	(??_isdigit+3)^0,f,c
 11505  004F84  5006               	movf	(??_isdigit+3)^0,w,c
 11506  004F86  E10A               	bnz	u4820
 11507  004F88  0E0A               	movlw	10
 11508  004F8A  5C05               	subwf	(??_isdigit+2)^0,w,c
 11509  004F8C  A0D8               	btfss	status,0,c
 11510  004F8E  EFCB  F027         	goto	u4821
 11511  004F92  EFCE  F027         	goto	u4820
 11512  004F96                     u4821:
 11513  004F96  0E01               	movlw	1
 11514  004F98  EFCF  F027         	goto	u4830
 11515  004F9C                     u4820:
 11516  004F9C  0E00               	movlw	0
 11517  004F9E                     u4830:
 11518  004F9E  6E01               	movwf	?_isdigit^0,c
 11519  004FA0  6A02               	clrf	(?_isdigit+1)^0,c
 11520  004FA2  0012               	return		;funcret
 11521  004FA4                     __end_of_isdigit:
 11522                           	callstack 0
 11523                           
 11524 ;; *************** function _pwmSet1 *****************
 11525 ;; Defined at:
 11526 ;;		line 23 in file "pwm.c"
 11527 ;; Parameters:    Size  Location     Type
 11528 ;;  porcento        1    wreg     unsigned char 
 11529 ;; Auto vars:     Size  Location     Type
 11530 ;;  porcento        1    9[COMRAM] unsigned char 
 11531 ;;  val             2   10[COMRAM] unsigned int 
 11532 ;; Return value:  Size  Location     Type
 11533 ;;                  1    wreg      void 
 11534 ;; Registers used:
 11535 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11536 ;; Tracked objects:
 11537 ;;		On entry : 0/0
 11538 ;;		On exit  : 0/0
 11539 ;;		Unchanged: 0/0
 11540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11541 ;;      Params:         0       0       0       0       0       0       0
 11542 ;;      Locals:         3       0       0       0       0       0       0
 11543 ;;      Temps:          2       0       0       0       0       0       0
 11544 ;;      Totals:         5       0       0       0       0       0       0
 11545 ;;Total ram usage:        5 bytes
 11546 ;; Hardware stack levels used:    1
 11547 ;; Hardware stack levels required when called:    1
 11548 ;; This function calls:
 11549 ;;		___lwdiv
 11550 ;;		___wmul
 11551 ;; This function is called by:
 11552 ;;		_encher_tanque
 11553 ;;		_esvaziar_tanque
 11554 ;; This function uses a non-reentrant model
 11555 ;;
 11556                           
 11557                           	psect	text34
 11558  004ABE                     __ptext34:
 11559                           	callstack 0
 11560  004ABE                     _pwmSet1:
 11561                           	callstack 28
 11562                           
 11563                           ;incstack = 0
 11564                           ;pwmSet1@porcento stored from wreg
 11565  004ABE  6E0A               	movwf	pwmSet1@porcento^0,c
 11566  004AC0                     
 11567                           ;pwm.c: 23: void pwmSet1(unsigned char porcento);pwm.c: 24: {;pwm.c: 30:  unsigned int v
      +                          al = ((unsigned int)porcento) *((*(volatile __near unsigned char*)0xFCB)+1);
 11568  004AC0  0E01               	movlw	1
 11569  004AC2  24CB               	addwf	203,w,c	;volatile
 11570  004AC4  6E01               	movwf	___wmul@multiplier^0,c
 11571  004AC6  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11572  004AC8  0E00               	movlw	0
 11573  004ACA  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
 11574  004ACC  C00A  F003         	movff	pwmSet1@porcento,___wmul@multiplicand
 11575  004AD0  6A04               	clrf	(___wmul@multiplicand+1)^0,c
 11576  004AD2  EC2C  F028         	call	___wmul	;wreg free
 11577  004AD6  C001  F00B         	movff	?___wmul,pwmSet1@val
 11578  004ADA  C002  F00C         	movff	?___wmul+1,pwmSet1@val+1
 11579  004ADE                     
 11580                           ;pwm.c: 31:  val = val / 25;
 11581  004ADE  C00B  F001         	movff	pwmSet1@val,___lwdiv@dividend
 11582  004AE2  C00C  F002         	movff	pwmSet1@val+1,___lwdiv@dividend+1
 11583  004AE6  0E00               	movlw	0
 11584  004AE8  6E04               	movwf	(___lwdiv@divisor+1)^0,c
 11585  004AEA  0E19               	movlw	25
 11586  004AEC  6E03               	movwf	___lwdiv@divisor^0,c
 11587  004AEE  EC25  F025         	call	___lwdiv	;wreg free
 11588  004AF2  C001  F00B         	movff	?___lwdiv,pwmSet1@val
 11589  004AF6  C002  F00C         	movff	?___lwdiv+1,pwmSet1@val+1
 11590  004AFA                     
 11591                           ;pwm.c: 33:  val &= 0x03ff;
 11592  004AFA  0EFF               	movlw	255
 11593  004AFC  160B               	andwf	pwmSet1@val^0,f,c
 11594  004AFE  0E03               	movlw	3
 11595  004B00  160C               	andwf	(pwmSet1@val+1)^0,f,c
 11596  004B02                     
 11597                           ;pwm.c: 35:  (*(volatile __near unsigned char*)0xFBE) = val >> 2;
 11598  004B02  C00B  F008         	movff	pwmSet1@val,??_pwmSet1
 11599  004B06  C00C  F009         	movff	pwmSet1@val+1,??_pwmSet1+1
 11600  004B0A  90D8               	bcf	status,0,c
 11601  004B0C  3209               	rrcf	(??_pwmSet1+1)^0,f,c
 11602  004B0E  3208               	rrcf	??_pwmSet1^0,f,c
 11603  004B10  90D8               	bcf	status,0,c
 11604  004B12  3209               	rrcf	(??_pwmSet1+1)^0,f,c
 11605  004B14  3208               	rrcf	??_pwmSet1^0,f,c
 11606  004B16  5008               	movf	??_pwmSet1^0,w,c
 11607  004B18  6EBE               	movwf	190,c	;volatile
 11608  004B1A                     
 11609                           ;pwm.c: 37:  (*(volatile __near unsigned char*)0xFBD) |= (val & 0x0003) << 4;
 11610  004B1A  C00B  F008         	movff	pwmSet1@val,??_pwmSet1
 11611  004B1E  0E03               	movlw	3
 11612  004B20  1608               	andwf	??_pwmSet1^0,f,c
 11613  004B22  3808               	swapf	??_pwmSet1^0,w,c
 11614  004B24  0BF0               	andlw	240
 11615  004B26  12BD               	iorwf	189,f,c	;volatile
 11616  004B28  0012               	return		;funcret
 11617  004B2A                     __end_of_pwmSet1:
 11618                           	callstack 0
 11619                           
 11620 ;; *************** function ___wmul *****************
 11621 ;; Defined at:
 11622 ;;		line 15 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 11623 ;; Parameters:    Size  Location     Type
 11624 ;;  multiplier      2    0[COMRAM] unsigned int 
 11625 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11626 ;; Auto vars:     Size  Location     Type
 11627 ;;  product         2    4[COMRAM] unsigned int 
 11628 ;; Return value:  Size  Location     Type
 11629 ;;                  2    0[COMRAM] unsigned int 
 11630 ;; Registers used:
 11631 ;;		wreg, status,2, status,0, prodl, prodh
 11632 ;; Tracked objects:
 11633 ;;		On entry : 0/0
 11634 ;;		On exit  : 0/0
 11635 ;;		Unchanged: 0/0
 11636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11637 ;;      Params:         4       0       0       0       0       0       0
 11638 ;;      Locals:         2       0       0       0       0       0       0
 11639 ;;      Temps:          0       0       0       0       0       0       0
 11640 ;;      Totals:         6       0       0       0       0       0       0
 11641 ;;Total ram usage:        6 bytes
 11642 ;; Hardware stack levels used:    1
 11643 ;; This function calls:
 11644 ;;		Nothing
 11645 ;; This function is called by:
 11646 ;;		_pwmSet1
 11647 ;;		_encher_tanque
 11648 ;;		_esvaziar_tanque
 11649 ;;		_atoi
 11650 ;;		_pwmSet2
 11651 ;; This function uses a non-reentrant model
 11652 ;;
 11653                           
 11654                           	psect	text35
 11655  005058                     __ptext35:
 11656                           	callstack 0
 11657  005058                     ___wmul:
 11658                           	callstack 25
 11659  005058  5001               	movf	___wmul@multiplier^0,w,c
 11660  00505A  0203               	mulwf	___wmul@multiplicand^0,c
 11661  00505C  CFF3 F005          	movff	prodl,___wmul@product
 11662  005060  CFF4 F006          	movff	prodh,___wmul@product+1
 11663  005064  5001               	movf	___wmul@multiplier^0,w,c
 11664  005066  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11665  005068  50F3               	movf	243,w,c
 11666  00506A  2606               	addwf	(___wmul@product+1)^0,f,c
 11667  00506C  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11668  00506E  0203               	mulwf	___wmul@multiplicand^0,c
 11669  005070  50F3               	movf	243,w,c
 11670  005072  2606               	addwf	(___wmul@product+1)^0,f,c
 11671  005074  C005  F001         	movff	___wmul@product,?___wmul
 11672  005078  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11673  00507C  0012               	return		;funcret
 11674  00507E                     __end_of___wmul:
 11675                           	callstack 0
 11676                           
 11677 ;; *************** function ___lwdiv *****************
 11678 ;; Defined at:
 11679 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\lwdiv.c"
 11680 ;; Parameters:    Size  Location     Type
 11681 ;;  dividend        2    0[COMRAM] unsigned int 
 11682 ;;  divisor         2    2[COMRAM] unsigned int 
 11683 ;; Auto vars:     Size  Location     Type
 11684 ;;  quotient        2    4[COMRAM] unsigned int 
 11685 ;;  counter         1    6[COMRAM] unsigned char 
 11686 ;; Return value:  Size  Location     Type
 11687 ;;                  2    0[COMRAM] unsigned int 
 11688 ;; Registers used:
 11689 ;;		wreg, status,2, status,0
 11690 ;; Tracked objects:
 11691 ;;		On entry : 0/0
 11692 ;;		On exit  : 0/0
 11693 ;;		Unchanged: 0/0
 11694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11695 ;;      Params:         4       0       0       0       0       0       0
 11696 ;;      Locals:         3       0       0       0       0       0       0
 11697 ;;      Temps:          0       0       0       0       0       0       0
 11698 ;;      Totals:         7       0       0       0       0       0       0
 11699 ;;Total ram usage:        7 bytes
 11700 ;; Hardware stack levels used:    1
 11701 ;; This function calls:
 11702 ;;		Nothing
 11703 ;; This function is called by:
 11704 ;;		_pwmSet1
 11705 ;;		_encher_tanque
 11706 ;;		_esvaziar_tanque
 11707 ;;		_pwmSet2
 11708 ;; This function uses a non-reentrant model
 11709 ;;
 11710                           
 11711                           	psect	text36
 11712  004A4A                     __ptext36:
 11713                           	callstack 0
 11714  004A4A                     ___lwdiv:
 11715                           	callstack 28
 11716  004A4A  0E00               	movlw	0
 11717  004A4C  6E06               	movwf	(___lwdiv@quotient+1)^0,c
 11718  004A4E  0E00               	movlw	0
 11719  004A50  6E05               	movwf	___lwdiv@quotient^0,c
 11720  004A52  5003               	movf	___lwdiv@divisor^0,w,c
 11721  004A54  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
 11722  004A56  B4D8               	btfsc	status,2,c
 11723  004A58  EF30  F025         	goto	u5671
 11724  004A5C  EF32  F025         	goto	u5670
 11725  004A60                     u5671:
 11726  004A60  EF5A  F025         	goto	l762
 11727  004A64                     u5670:
 11728  004A64  0E01               	movlw	1
 11729  004A66  6E07               	movwf	___lwdiv@counter^0,c
 11730  004A68  EF3A  F025         	goto	l4629
 11731  004A6C                     l4627:
 11732  004A6C  90D8               	bcf	status,0,c
 11733  004A6E  3603               	rlcf	___lwdiv@divisor^0,f,c
 11734  004A70  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
 11735  004A72  2A07               	incf	___lwdiv@counter^0,f,c
 11736  004A74                     l4629:
 11737  004A74  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
 11738  004A76  EF3F  F025         	goto	u5681
 11739  004A7A  EF41  F025         	goto	u5680
 11740  004A7E                     u5681:
 11741  004A7E  EF36  F025         	goto	l4627
 11742  004A82                     u5680:
 11743  004A82                     l4631:
 11744  004A82  90D8               	bcf	status,0,c
 11745  004A84  3605               	rlcf	___lwdiv@quotient^0,f,c
 11746  004A86  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
 11747  004A88  5003               	movf	___lwdiv@divisor^0,w,c
 11748  004A8A  5C01               	subwf	___lwdiv@dividend^0,w,c
 11749  004A8C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
 11750  004A8E  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
 11751  004A90  A0D8               	btfss	status,0,c
 11752  004A92  EF4D  F025         	goto	u5691
 11753  004A96  EF4F  F025         	goto	u5690
 11754  004A9A                     u5691:
 11755  004A9A  EF54  F025         	goto	l4639
 11756  004A9E                     u5690:
 11757  004A9E  5003               	movf	___lwdiv@divisor^0,w,c
 11758  004AA0  5E01               	subwf	___lwdiv@dividend^0,f,c
 11759  004AA2  5004               	movf	(___lwdiv@divisor+1)^0,w,c
 11760  004AA4  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
 11761  004AA6  8005               	bsf	___lwdiv@quotient^0,0,c
 11762  004AA8                     l4639:
 11763  004AA8  90D8               	bcf	status,0,c
 11764  004AAA  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
 11765  004AAC  3203               	rrcf	___lwdiv@divisor^0,f,c
 11766  004AAE  2E07               	decfsz	___lwdiv@counter^0,f,c
 11767  004AB0  EF41  F025         	goto	l4631
 11768  004AB4                     l762:
 11769  004AB4  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 11770  004AB8  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11771  004ABC  0012               	return		;funcret
 11772  004ABE                     __end_of___lwdiv:
 11773                           	callstack 0
 11774                           
 11775 ;; *************** function _pwmInit *****************
 11776 ;; Defined at:
 11777 ;;		line 59 in file "pwm.c"
 11778 ;; Parameters:    Size  Location     Type
 11779 ;;		None
 11780 ;; Auto vars:     Size  Location     Type
 11781 ;;		None
 11782 ;; Return value:  Size  Location     Type
 11783 ;;                  1    wreg      void 
 11784 ;; Registers used:
 11785 ;;		wreg, status,2, status,0
 11786 ;; Tracked objects:
 11787 ;;		On entry : 0/0
 11788 ;;		On exit  : 0/0
 11789 ;;		Unchanged: 0/0
 11790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11791 ;;      Params:         0       0       0       0       0       0       0
 11792 ;;      Locals:         0       0       0       0       0       0       0
 11793 ;;      Temps:          0       0       0       0       0       0       0
 11794 ;;      Totals:         0       0       0       0       0       0       0
 11795 ;;Total ram usage:        0 bytes
 11796 ;; Hardware stack levels used:    1
 11797 ;; This function calls:
 11798 ;;		Nothing
 11799 ;; This function is called by:
 11800 ;;		_encher_tanque
 11801 ;;		_esvaziar_tanque
 11802 ;; This function uses a non-reentrant model
 11803 ;;
 11804                           
 11805                           	psect	text37
 11806  00507E                     __ptext37:
 11807                           	callstack 0
 11808  00507E                     _pwmInit:
 11809                           	callstack 29
 11810  00507E                     
 11811                           ;pwm.c: 61:  (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<1));
 11812  00507E  9294               	bcf	148,1,c	;volatile
 11813                           
 11814                           ;pwm.c: 62:  (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<2));
 11815  005080  9494               	bcf	148,2,c	;volatile
 11816  005082                     
 11817                           ;pwm.c: 64:  (*(volatile __near unsigned char*)0xFCA) |= 0b00000011;
 11818  005082  0E03               	movlw	3
 11819  005084  12CA               	iorwf	202,f,c	;volatile
 11820  005086                     
 11821                           ;pwm.c: 65:  (((*(volatile __near unsigned char*)0xFCA)) |= (1<<2));
 11822  005086  84CA               	bsf	202,2,c	;volatile
 11823                           
 11824                           ;pwm.c: 68:  (*(volatile __near unsigned char*)0xFBD) |= 0b00001100;
 11825  005088  0E0C               	movlw	12
 11826  00508A  12BD               	iorwf	189,f,c	;volatile
 11827                           
 11828                           ;pwm.c: 69:  (*(volatile __near unsigned char*)0xFBA) |= 0b00001100;
 11829  00508C  0E0C               	movlw	12
 11830  00508E  12BA               	iorwf	186,f,c	;volatile
 11831  005090  0012               	return		;funcret
 11832  005092                     __end_of_pwmInit:
 11833                           	callstack 0
 11834                           
 11835 ;; *************** function _lcd_str *****************
 11836 ;; Defined at:
 11837 ;;		line 47 in file "lcd.c"
 11838 ;; Parameters:    Size  Location     Type
 11839 ;;  str             2    7[COMRAM] PTR const unsigned char 
 11840 ;;		 -> STR_31(14), STR_30(3), STR_29(8), ver_quantidade@y(8), 
 11841 ;;		 -> STR_27(14), STR_26(13), STR_25(9), STR_24(14), 
 11842 ;;		 -> STR_23(3), esvaziar_tanque@y(8), STR_21(14), STR_20(14), 
 11843 ;;		 -> STR_19(13), STR_18(11), STR_17(14), STR_16(13), 
 11844 ;;		 -> STR_15(9), STR_14(12), STR_13(3), encher_tanque@y(8), 
 11845 ;;		 -> STR_11(14), STR_10(16), STR_9(13), STR_8(11), 
 11846 ;;		 -> STR_7(14), STR_6(10), STR_5(15), STR_4(15), 
 11847 ;;		 -> STR_3(14), STR_2(11), STR_1(17), 
 11848 ;; Auto vars:     Size  Location     Type
 11849 ;;  i               1   11[COMRAM] unsigned char 
 11850 ;; Return value:  Size  Location     Type
 11851 ;;                  1    wreg      void 
 11852 ;; Registers used:
 11853 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11854 ;; Tracked objects:
 11855 ;;		On entry : 0/0
 11856 ;;		On exit  : 0/0
 11857 ;;		Unchanged: 0/0
 11858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11859 ;;      Params:         2       0       0       0       0       0       0
 11860 ;;      Locals:         1       0       0       0       0       0       0
 11861 ;;      Temps:          2       0       0       0       0       0       0
 11862 ;;      Totals:         5       0       0       0       0       0       0
 11863 ;;Total ram usage:        5 bytes
 11864 ;; Hardware stack levels used:    1
 11865 ;; Hardware stack levels required when called:    2
 11866 ;; This function calls:
 11867 ;;		_lcd_dat
 11868 ;; This function is called by:
 11869 ;;		_main
 11870 ;;		_encher_tanque
 11871 ;;		_esvaziar_tanque
 11872 ;;		_ver_quantidade
 11873 ;; This function uses a non-reentrant model
 11874 ;;
 11875                           
 11876                           	psect	text38
 11877  0049D2                     __ptext38:
 11878                           	callstack 0
 11879  0049D2                     _lcd_str:
 11880                           	callstack 27
 11881  0049D2                     
 11882                           ;lcd.c: 48:     unsigned char i = 0;
 11883  0049D2  0E00               	movlw	0
 11884  0049D4  6E0C               	movwf	lcd_str@i^0,c
 11885                           
 11886                           ;lcd.c: 50:     while (str[i] != 0) {
 11887  0049D6  EF06  F025         	goto	l4671
 11888  0049DA                     l4667:
 11889                           
 11890                           ;lcd.c: 51:         lcd_dat(str[i]);
 11891  0049DA  500C               	movf	lcd_str@i^0,w,c
 11892  0049DC  2408               	addwf	lcd_str@str^0,w,c
 11893  0049DE  6E0A               	movwf	??_lcd_str^0,c
 11894  0049E0  0E00               	movlw	0
 11895  0049E2  2009               	addwfc	(lcd_str@str+1)^0,w,c
 11896  0049E4  6E0B               	movwf	(??_lcd_str+1)^0,c
 11897  0049E6  C00A  FFF6         	movff	??_lcd_str,tblptrl
 11898  0049EA  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
 11899  0049EE  6AF8               	clrf	tblptru,c
 11900  0049F0  0E05               	movlw	(high __ramtop+-1)
 11901  0049F2  64F7               	cpfsgt	tblptrh,c
 11902  0049F4  D003               	bra	u5717
 11903  0049F6  0008               	tblrd		*
 11904  0049F8  50F5               	movf	tablat,w,c
 11905  0049FA  D005               	bra	u5710
 11906  0049FC                     u5717:
 11907  0049FC  CFF6 FFE9          	movff	tblptrl,fsr0l
 11908  004A00  CFF7 FFEA          	movff	tblptrh,fsr0h
 11909  004A04  50EF               	movf	indf0,w,c
 11910  004A06                     u5710:
 11911  004A06  EC02  F028         	call	_lcd_dat
 11912  004A0A                     
 11913                           ;lcd.c: 52:         i++;
 11914  004A0A  2A0C               	incf	lcd_str@i^0,f,c
 11915  004A0C                     l4671:
 11916                           
 11917                           ;lcd.c: 50:     while (str[i] != 0) {
 11918  004A0C  500C               	movf	lcd_str@i^0,w,c
 11919  004A0E  2408               	addwf	lcd_str@str^0,w,c
 11920  004A10  6E0A               	movwf	??_lcd_str^0,c
 11921  004A12  0E00               	movlw	0
 11922  004A14  2009               	addwfc	(lcd_str@str+1)^0,w,c
 11923  004A16  6E0B               	movwf	(??_lcd_str+1)^0,c
 11924  004A18  C00A  FFF6         	movff	??_lcd_str,tblptrl
 11925  004A1C  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
 11926  004A20  6AF8               	clrf	tblptru,c
 11927  004A22  0E05               	movlw	(high __ramtop+-1)
 11928  004A24  64F7               	cpfsgt	tblptrh,c
 11929  004A26  D003               	bra	u5727
 11930  004A28  0008               	tblrd		*
 11931  004A2A  50F5               	movf	tablat,w,c
 11932  004A2C  D005               	bra	u5720
 11933  004A2E                     u5727:
 11934  004A2E  CFF6 FFE9          	movff	tblptrl,fsr0l
 11935  004A32  CFF7 FFEA          	movff	tblptrh,fsr0h
 11936  004A36  50EF               	movf	indf0,w,c
 11937  004A38                     u5720:
 11938  004A38  0900               	iorlw	0
 11939  004A3A  A4D8               	btfss	status,2,c
 11940  004A3C  EF22  F025         	goto	u5731
 11941  004A40  EF24  F025         	goto	u5730
 11942  004A44                     u5731:
 11943  004A44  EFED  F024         	goto	l4667
 11944  004A48                     u5730:
 11945  004A48  0012               	return		;funcret
 11946  004A4A                     __end_of_lcd_str:
 11947                           	callstack 0
 11948                           
 11949 ;; *************** function _lcd_dat *****************
 11950 ;; Defined at:
 11951 ;;		line 19 in file "lcd.c"
 11952 ;; Parameters:    Size  Location     Type
 11953 ;;  val             1    wreg     unsigned char 
 11954 ;; Auto vars:     Size  Location     Type
 11955 ;;  val             1    6[COMRAM] unsigned char 
 11956 ;; Return value:  Size  Location     Type
 11957 ;;                  1    wreg      void 
 11958 ;; Registers used:
 11959 ;;		wreg, status,2, status,0, cstack
 11960 ;; Tracked objects:
 11961 ;;		On entry : 0/0
 11962 ;;		On exit  : 0/0
 11963 ;;		Unchanged: 0/0
 11964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11965 ;;      Params:         0       0       0       0       0       0       0
 11966 ;;      Locals:         1       0       0       0       0       0       0
 11967 ;;      Temps:          0       0       0       0       0       0       0
 11968 ;;      Totals:         1       0       0       0       0       0       0
 11969 ;;Total ram usage:        1 bytes
 11970 ;; Hardware stack levels used:    1
 11971 ;; Hardware stack levels required when called:    1
 11972 ;; This function calls:
 11973 ;;		_atraso_ms
 11974 ;;		_lcd_wr
 11975 ;; This function is called by:
 11976 ;;		_lcd_str
 11977 ;;		_encher_tanque
 11978 ;;		_esvaziar_tanque
 11979 ;; This function uses a non-reentrant model
 11980 ;;
 11981                           
 11982                           	psect	text39
 11983  005004                     __ptext39:
 11984                           	callstack 0
 11985  005004                     _lcd_dat:
 11986                           	callstack 27
 11987                           
 11988                           ;incstack = 0
 11989                           ;lcd_dat@val stored from wreg
 11990  005004  6E07               	movwf	lcd_dat@val^0,c
 11991  005006                     
 11992                           ;lcd.c: 20:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
 11993  005006  8284               	bsf	132,1,c	;volatile
 11994  005008                     
 11995                           ;lcd.c: 21:     lcd_wr(val);
 11996  005008  5007               	movf	lcd_dat@val^0,w,c
 11997  00500A  EC4D  F028         	call	_lcd_wr
 11998  00500E                     
 11999                           ;lcd.c: 22:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<2));
 12000  00500E  8484               	bsf	132,2,c	;volatile
 12001  005010                     
 12002                           ;lcd.c: 23:     atraso_ms(3);
 12003  005010  0E00               	movlw	0
 12004  005012  6E02               	movwf	(atraso_ms@t+1)^0,c
 12005  005014  0E03               	movlw	3
 12006  005016  6E01               	movwf	atraso_ms@t^0,c
 12007  005018  EC95  F025         	call	_atraso_ms	;wreg free
 12008  00501C                     
 12009                           ;lcd.c: 24:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
 12010  00501C  9284               	bcf	132,1,c	;volatile
 12011  00501E                     
 12012                           ;lcd.c: 25:     atraso_ms(3);
 12013  00501E  0E00               	movlw	0
 12014  005020  6E02               	movwf	(atraso_ms@t+1)^0,c
 12015  005022  0E03               	movlw	3
 12016  005024  6E01               	movwf	atraso_ms@t^0,c
 12017  005026  EC95  F025         	call	_atraso_ms	;wreg free
 12018  00502A                     
 12019                           ;lcd.c: 26:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
 12020  00502A  8284               	bsf	132,1,c	;volatile
 12021  00502C  0012               	return		;funcret
 12022  00502E                     __end_of_lcd_dat:
 12023                           	callstack 0
 12024                           
 12025 ;; *************** function _lcd_cmd *****************
 12026 ;; Defined at:
 12027 ;;		line 9 in file "lcd.c"
 12028 ;; Parameters:    Size  Location     Type
 12029 ;;  val             1    wreg     unsigned char 
 12030 ;; Auto vars:     Size  Location     Type
 12031 ;;  val             1    6[COMRAM] unsigned char 
 12032 ;; Return value:  Size  Location     Type
 12033 ;;                  1    wreg      void 
 12034 ;; Registers used:
 12035 ;;		wreg, status,2, status,0, cstack
 12036 ;; Tracked objects:
 12037 ;;		On entry : 0/0
 12038 ;;		On exit  : 0/0
 12039 ;;		Unchanged: 0/0
 12040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12041 ;;      Params:         0       0       0       0       0       0       0
 12042 ;;      Locals:         1       0       0       0       0       0       0
 12043 ;;      Temps:          0       0       0       0       0       0       0
 12044 ;;      Totals:         1       0       0       0       0       0       0
 12045 ;;Total ram usage:        1 bytes
 12046 ;; Hardware stack levels used:    1
 12047 ;; Hardware stack levels required when called:    1
 12048 ;; This function calls:
 12049 ;;		_atraso_ms
 12050 ;;		_lcd_wr
 12051 ;; This function is called by:
 12052 ;;		_main
 12053 ;;		_lcd_init
 12054 ;;		_encher_tanque
 12055 ;;		_esvaziar_tanque
 12056 ;;		_ver_quantidade
 12057 ;; This function uses a non-reentrant model
 12058 ;;
 12059                           
 12060                           	psect	text40
 12061  00502E                     __ptext40:
 12062                           	callstack 0
 12063  00502E                     _lcd_cmd:
 12064                           	callstack 28
 12065                           
 12066                           ;incstack = 0
 12067                           ;lcd_cmd@val stored from wreg
 12068  00502E  6E07               	movwf	lcd_cmd@val^0,c
 12069  005030                     
 12070                           ;lcd.c: 10:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
 12071  005030  8284               	bsf	132,1,c	;volatile
 12072  005032                     
 12073                           ;lcd.c: 11:     lcd_wr(val);
 12074  005032  5007               	movf	lcd_cmd@val^0,w,c
 12075  005034  EC4D  F028         	call	_lcd_wr
 12076  005038                     
 12077                           ;lcd.c: 12:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<2));
 12078  005038  9484               	bcf	132,2,c	;volatile
 12079  00503A                     
 12080                           ;lcd.c: 13:     atraso_ms(3);
 12081  00503A  0E00               	movlw	0
 12082  00503C  6E02               	movwf	(atraso_ms@t+1)^0,c
 12083  00503E  0E03               	movlw	3
 12084  005040  6E01               	movwf	atraso_ms@t^0,c
 12085  005042  EC95  F025         	call	_atraso_ms	;wreg free
 12086  005046                     
 12087                           ;lcd.c: 14:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
 12088  005046  9284               	bcf	132,1,c	;volatile
 12089  005048                     
 12090                           ;lcd.c: 15:     atraso_ms(3);
 12091  005048  0E00               	movlw	0
 12092  00504A  6E02               	movwf	(atraso_ms@t+1)^0,c
 12093  00504C  0E03               	movlw	3
 12094  00504E  6E01               	movwf	atraso_ms@t^0,c
 12095  005050  EC95  F025         	call	_atraso_ms	;wreg free
 12096  005054                     
 12097                           ;lcd.c: 16:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
 12098  005054  8284               	bsf	132,1,c	;volatile
 12099  005056  0012               	return		;funcret
 12100  005058                     __end_of_lcd_cmd:
 12101                           	callstack 0
 12102                           
 12103 ;; *************** function _lcd_wr *****************
 12104 ;; Defined at:
 12105 ;;		line 5 in file "lcd.c"
 12106 ;; Parameters:    Size  Location     Type
 12107 ;;  val             1    wreg     unsigned char 
 12108 ;; Auto vars:     Size  Location     Type
 12109 ;;  val             1    0[COMRAM] unsigned char 
 12110 ;; Return value:  Size  Location     Type
 12111 ;;                  1    wreg      void 
 12112 ;; Registers used:
 12113 ;;		wreg
 12114 ;; Tracked objects:
 12115 ;;		On entry : 0/0
 12116 ;;		On exit  : 0/0
 12117 ;;		Unchanged: 0/0
 12118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12119 ;;      Params:         0       0       0       0       0       0       0
 12120 ;;      Locals:         1       0       0       0       0       0       0
 12121 ;;      Temps:          0       0       0       0       0       0       0
 12122 ;;      Totals:         1       0       0       0       0       0       0
 12123 ;;Total ram usage:        1 bytes
 12124 ;; Hardware stack levels used:    1
 12125 ;; This function calls:
 12126 ;;		Nothing
 12127 ;; This function is called by:
 12128 ;;		_lcd_cmd
 12129 ;;		_lcd_dat
 12130 ;; This function uses a non-reentrant model
 12131 ;;
 12132                           
 12133                           	psect	text41
 12134  00509A                     __ptext41:
 12135                           	callstack 0
 12136  00509A                     _lcd_wr:
 12137                           	callstack 27
 12138                           
 12139                           ;incstack = 0
 12140                           ;lcd_wr@val stored from wreg
 12141  00509A  6E01               	movwf	lcd_wr@val^0,c
 12142  00509C                     
 12143                           ;lcd.c: 6:     (*(volatile __near unsigned char*)0xF83) = val;
 12144  00509C  C001  FF83         	movff	lcd_wr@val,3971	;volatile
 12145  0050A0  0012               	return		;funcret
 12146  0050A2                     __end_of_lcd_wr:
 12147                           	callstack 0
 12148                           
 12149 ;; *************** function _atraso_ms *****************
 12150 ;; Defined at:
 12151 ;;		line 3 in file "delay.c"
 12152 ;; Parameters:    Size  Location     Type
 12153 ;;  t               2    0[COMRAM] int 
 12154 ;; Auto vars:     Size  Location     Type
 12155 ;;  i               2    2[COMRAM] volatile unsigned int 
 12156 ;;  k               1    5[COMRAM] volatile unsigned char 
 12157 ;;  j               1    4[COMRAM] volatile unsigned char 
 12158 ;; Return value:  Size  Location     Type
 12159 ;;                  1    wreg      void 
 12160 ;; Registers used:
 12161 ;;		wreg, status,2, status,0
 12162 ;; Tracked objects:
 12163 ;;		On entry : 0/0
 12164 ;;		On exit  : 0/0
 12165 ;;		Unchanged: 0/0
 12166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12167 ;;      Params:         2       0       0       0       0       0       0
 12168 ;;      Locals:         4       0       0       0       0       0       0
 12169 ;;      Temps:          0       0       0       0       0       0       0
 12170 ;;      Totals:         6       0       0       0       0       0       0
 12171 ;;Total ram usage:        6 bytes
 12172 ;; Hardware stack levels used:    1
 12173 ;; This function calls:
 12174 ;;		Nothing
 12175 ;; This function is called by:
 12176 ;;		_main
 12177 ;;		_tc_tecla
 12178 ;;		_lcd_cmd
 12179 ;;		_lcd_dat
 12180 ;;		_lcd_init
 12181 ;;		_encher_tanque
 12182 ;;		_esvaziar_tanque
 12183 ;; This function uses a non-reentrant model
 12184 ;;
 12185                           
 12186                           	psect	text42
 12187  004B2A                     __ptext42:
 12188                           	callstack 0
 12189  004B2A                     _atraso_ms:
 12190                           	callstack 27
 12191  004B2A                     
 12192                           ;delay.c: 4:     volatile unsigned char j, k;;delay.c: 5:     volatile unsigned int i;;d
      +                          elay.c: 7:     for (i = 0; i < (t); i++) {
 12193  004B2A  0E00               	movlw	0
 12194  004B2C  6E04               	movwf	(atraso_ms@i+1)^0,c	;volatile
 12195  004B2E  0E00               	movlw	0
 12196  004B30  6E03               	movwf	atraso_ms@i^0,c	;volatile
 12197  004B32  EFBB  F025         	goto	l4513
 12198  004B36                     l4491:
 12199                           
 12200                           ;delay.c: 8:         for (j = 0; j < 41; j++) {
 12201  004B36  0E00               	movlw	0
 12202  004B38  6E05               	movwf	atraso_ms@j^0,c	;volatile
 12203  004B3A                     l4493:
 12204  004B3A  0E28               	movlw	40
 12205  004B3C  6405               	cpfsgt	atraso_ms@j^0,c	;volatile
 12206  004B3E  EFA3  F025         	goto	u5501
 12207  004B42  EFA5  F025         	goto	u5500
 12208  004B46                     u5501:
 12209  004B46  EFA7  F025         	goto	l4497
 12210  004B4A                     u5500:
 12211  004B4A  EFB9  F025         	goto	l4511
 12212  004B4E                     l4497:
 12213                           
 12214                           ;delay.c: 9:             for (k = 0; k < 3; k++);
 12215  004B4E  0E00               	movlw	0
 12216  004B50  6E06               	movwf	atraso_ms@k^0,c	;volatile
 12217  004B52                     l4499:
 12218  004B52  0E02               	movlw	2
 12219  004B54  6406               	cpfsgt	atraso_ms@k^0,c	;volatile
 12220  004B56  EFAF  F025         	goto	u5511
 12221  004B5A  EFB1  F025         	goto	u5510
 12222  004B5E                     u5511:
 12223  004B5E  EFB3  F025         	goto	l4503
 12224  004B62                     u5510:
 12225  004B62  EFB6  F025         	goto	l4507
 12226  004B66                     l4503:
 12227  004B66  2A06               	incf	atraso_ms@k^0,f,c	;volatile
 12228  004B68  EFA9  F025         	goto	l4499
 12229  004B6C                     l4507:
 12230                           
 12231                           ;delay.c: 10:         }
 12232  004B6C  2A05               	incf	atraso_ms@j^0,f,c	;volatile
 12233  004B6E  EF9D  F025         	goto	l4493
 12234  004B72                     l4511:
 12235                           
 12236                           ;delay.c: 11:     }
 12237  004B72  4A03               	infsnz	atraso_ms@i^0,f,c	;volatile
 12238  004B74  2A04               	incf	(atraso_ms@i+1)^0,f,c	;volatile
 12239  004B76                     l4513:
 12240  004B76  5001               	movf	atraso_ms@t^0,w,c
 12241  004B78  5C03               	subwf	atraso_ms@i^0,w,c	;volatile
 12242  004B7A  5002               	movf	(atraso_ms@t+1)^0,w,c
 12243  004B7C  5804               	subwfb	(atraso_ms@i+1)^0,w,c	;volatile
 12244  004B7E  A0D8               	btfss	status,0,c
 12245  004B80  EFC4  F025         	goto	u5521
 12246  004B84  EFC6  F025         	goto	u5520
 12247  004B88                     u5521:
 12248  004B88  EF9B  F025         	goto	l4491
 12249  004B8C                     u5520:
 12250  004B8C  0012               	return		;funcret
 12251  004B8E                     __end_of_atraso_ms:
 12252                           	callstack 0
 12253                           
 12254 ;; *************** function ___xxtofl *****************
 12255 ;; Defined at:
 12256 ;;		line 10 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
 12257 ;; Parameters:    Size  Location     Type
 12258 ;;  sign            1    wreg     unsigned char 
 12259 ;;  val             4    0[COMRAM] long 
 12260 ;; Auto vars:     Size  Location     Type
 12261 ;;  sign            1    8[COMRAM] unsigned char 
 12262 ;;  arg             4   10[COMRAM] unsigned long 
 12263 ;;  exp             1    9[COMRAM] unsigned char 
 12264 ;; Return value:  Size  Location     Type
 12265 ;;                  4    0[COMRAM] unsigned char 
 12266 ;; Registers used:
 12267 ;;		wreg, status,2, status,0
 12268 ;; Tracked objects:
 12269 ;;		On entry : 0/0
 12270 ;;		On exit  : 0/0
 12271 ;;		Unchanged: 0/0
 12272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12273 ;;      Params:         4       0       0       0       0       0       0
 12274 ;;      Locals:         6       0       0       0       0       0       0
 12275 ;;      Temps:          4       0       0       0       0       0       0
 12276 ;;      Totals:        14       0       0       0       0       0       0
 12277 ;;Total ram usage:       14 bytes
 12278 ;; Hardware stack levels used:    1
 12279 ;; This function calls:
 12280 ;;		Nothing
 12281 ;; This function is called by:
 12282 ;;		_encher_tanque
 12283 ;;		_esvaziar_tanque
 12284 ;; This function uses a non-reentrant model
 12285 ;;
 12286                           
 12287                           	psect	text43
 12288  003D98                     __ptext43:
 12289                           	callstack 0
 12290  003D98                     ___xxtofl:
 12291                           	callstack 29
 12292                           
 12293                           ;incstack = 0
 12294                           ;___xxtofl@sign stored from wreg
 12295  003D98  6E09               	movwf	___xxtofl@sign^0,c
 12296  003D9A  5009               	movf	___xxtofl@sign^0,w,c
 12297  003D9C  B4D8               	btfsc	status,2,c
 12298  003D9E  EFD3  F01E         	goto	u5951
 12299  003DA2  EFD5  F01E         	goto	u5950
 12300  003DA6                     u5951:
 12301  003DA6  EFF7  F01E         	goto	l926
 12302  003DAA                     u5950:
 12303  003DAA  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12304  003DAC  EFDC  F01E         	goto	u5960
 12305  003DB0  EFDA  F01E         	goto	u5961
 12306  003DB4                     u5961:
 12307  003DB4  EFF7  F01E         	goto	l926
 12308  003DB8                     u5960:
 12309  003DB8  C001  F005         	movff	___xxtofl@val,??___xxtofl
 12310  003DBC  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 12311  003DC0  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 12312  003DC4  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 12313  003DC8  1E05               	comf	??___xxtofl^0,f,c
 12314  003DCA  1E06               	comf	(??___xxtofl+1)^0,f,c
 12315  003DCC  1E07               	comf	(??___xxtofl+2)^0,f,c
 12316  003DCE  1E08               	comf	(??___xxtofl+3)^0,f,c
 12317  003DD0  2A05               	incf	??___xxtofl^0,f,c
 12318  003DD2  0E00               	movlw	0
 12319  003DD4  2206               	addwfc	(??___xxtofl+1)^0,f,c
 12320  003DD6  2207               	addwfc	(??___xxtofl+2)^0,f,c
 12321  003DD8  2208               	addwfc	(??___xxtofl+3)^0,f,c
 12322  003DDA  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 12323  003DDE  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 12324  003DE2  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 12325  003DE6  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 12326  003DEA  EFFF  F01E         	goto	l4797
 12327  003DEE                     l926:
 12328  003DEE  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 12329  003DF2  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12330  003DF6  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12331  003DFA  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12332  003DFE                     l4797:
 12333  003DFE  5001               	movf	___xxtofl@val^0,w,c
 12334  003E00  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 12335  003E02  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 12336  003E04  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 12337  003E06  A4D8               	btfss	status,2,c
 12338  003E08  EF08  F01F         	goto	u5971
 12339  003E0C  EF0A  F01F         	goto	u5970
 12340  003E10                     u5971:
 12341  003E10  EF14  F01F         	goto	l4803
 12342  003E14                     u5970:
 12343  003E14  0E00               	movlw	0
 12344  003E16  6E01               	movwf	?___xxtofl^0,c
 12345  003E18  0E00               	movlw	0
 12346  003E1A  6E02               	movwf	(?___xxtofl+1)^0,c
 12347  003E1C  0E00               	movlw	0
 12348  003E1E  6E03               	movwf	(?___xxtofl+2)^0,c
 12349  003E20  0E00               	movlw	0
 12350  003E22  6E04               	movwf	(?___xxtofl+3)^0,c
 12351  003E24  EFA5  F01F         	goto	l929
 12352  003E28                     l4803:
 12353  003E28  0E96               	movlw	150
 12354  003E2A  6E0A               	movwf	___xxtofl@exp^0,c
 12355  003E2C  EF1E  F01F         	goto	l4807
 12356  003E30                     l4805:
 12357  003E30  2A0A               	incf	___xxtofl@exp^0,f,c
 12358  003E32  90D8               	bcf	status,0,c
 12359  003E34  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12360  003E36  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12361  003E38  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12362  003E3A  320B               	rrcf	___xxtofl@arg^0,f,c
 12363  003E3C                     l4807:
 12364  003E3C  0E00               	movlw	0
 12365  003E3E  140B               	andwf	___xxtofl@arg^0,w,c
 12366  003E40  6E05               	movwf	??___xxtofl^0,c
 12367  003E42  0E00               	movlw	0
 12368  003E44  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12369  003E46  6E06               	movwf	(??___xxtofl+1)^0,c
 12370  003E48  0E00               	movlw	0
 12371  003E4A  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12372  003E4C  6E07               	movwf	(??___xxtofl+2)^0,c
 12373  003E4E  0EFE               	movlw	254
 12374  003E50  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12375  003E52  6E08               	movwf	(??___xxtofl+3)^0,c
 12376  003E54  5005               	movf	??___xxtofl^0,w,c
 12377  003E56  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12378  003E58  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12379  003E5A  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12380  003E5C  A4D8               	btfss	status,2,c
 12381  003E5E  EF33  F01F         	goto	u5981
 12382  003E62  EF35  F01F         	goto	u5980
 12383  003E66                     u5981:
 12384  003E66  EF18  F01F         	goto	l4805
 12385  003E6A                     u5980:
 12386  003E6A  EF43  F01F         	goto	l933
 12387  003E6E                     l4809:
 12388  003E6E  2A0A               	incf	___xxtofl@exp^0,f,c
 12389  003E70  0E01               	movlw	1
 12390  003E72  260B               	addwf	___xxtofl@arg^0,f,c
 12391  003E74  0E00               	movlw	0
 12392  003E76  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 12393  003E78  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 12394  003E7A  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 12395  003E7C  90D8               	bcf	status,0,c
 12396  003E7E  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12397  003E80  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12398  003E82  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12399  003E84  320B               	rrcf	___xxtofl@arg^0,f,c
 12400  003E86                     l933:
 12401  003E86  0E00               	movlw	0
 12402  003E88  140B               	andwf	___xxtofl@arg^0,w,c
 12403  003E8A  6E05               	movwf	??___xxtofl^0,c
 12404  003E8C  0E00               	movlw	0
 12405  003E8E  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12406  003E90  6E06               	movwf	(??___xxtofl+1)^0,c
 12407  003E92  0E00               	movlw	0
 12408  003E94  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12409  003E96  6E07               	movwf	(??___xxtofl+2)^0,c
 12410  003E98  0EFF               	movlw	255
 12411  003E9A  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12412  003E9C  6E08               	movwf	(??___xxtofl+3)^0,c
 12413  003E9E  5005               	movf	??___xxtofl^0,w,c
 12414  003EA0  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12415  003EA2  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12416  003EA4  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12417  003EA6  A4D8               	btfss	status,2,c
 12418  003EA8  EF58  F01F         	goto	u5991
 12419  003EAC  EF5A  F01F         	goto	u5990
 12420  003EB0                     u5991:
 12421  003EB0  EF37  F01F         	goto	l4809
 12422  003EB4                     u5990:
 12423  003EB4  EF62  F01F         	goto	l4817
 12424  003EB8                     l4815:
 12425  003EB8  060A               	decf	___xxtofl@exp^0,f,c
 12426  003EBA  90D8               	bcf	status,0,c
 12427  003EBC  360B               	rlcf	___xxtofl@arg^0,f,c
 12428  003EBE  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 12429  003EC0  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 12430  003EC2  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 12431  003EC4                     l4817:
 12432  003EC4  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 12433  003EC6  EF67  F01F         	goto	u6001
 12434  003ECA  EF69  F01F         	goto	u6000
 12435  003ECE                     u6001:
 12436  003ECE  EF71  F01F         	goto	l940
 12437  003ED2                     u6000:
 12438  003ED2  0E02               	movlw	2
 12439  003ED4  600A               	cpfslt	___xxtofl@exp^0,c
 12440  003ED6  EF6F  F01F         	goto	u6011
 12441  003EDA  EF71  F01F         	goto	u6010
 12442  003EDE                     u6011:
 12443  003EDE  EF5C  F01F         	goto	l4815
 12444  003EE2                     u6010:
 12445  003EE2                     l940:
 12446  003EE2  B00A               	btfsc	___xxtofl@exp^0,0,c
 12447  003EE4  EF76  F01F         	goto	u6021
 12448  003EE8  EF78  F01F         	goto	u6020
 12449  003EEC                     u6021:
 12450  003EEC  EF79  F01F         	goto	l4823
 12451  003EF0                     u6020:
 12452  003EF0  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 12453  003EF2                     l4823:
 12454  003EF2  90D8               	bcf	status,0,c
 12455  003EF4  320A               	rrcf	___xxtofl@exp^0,f,c
 12456  003EF6  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 12457  003EFA  6A06               	clrf	(??___xxtofl+1)^0,c
 12458  003EFC  6A07               	clrf	(??___xxtofl+2)^0,c
 12459  003EFE  6A08               	clrf	(??___xxtofl+3)^0,c
 12460  003F00  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 12461  003F04  6A07               	clrf	(??___xxtofl+2)^0,c
 12462  003F06  6A06               	clrf	(??___xxtofl+1)^0,c
 12463  003F08  6A05               	clrf	??___xxtofl^0,c
 12464  003F0A  5005               	movf	??___xxtofl^0,w,c
 12465  003F0C  120B               	iorwf	___xxtofl@arg^0,f,c
 12466  003F0E  5006               	movf	(??___xxtofl+1)^0,w,c
 12467  003F10  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 12468  003F12  5007               	movf	(??___xxtofl+2)^0,w,c
 12469  003F14  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 12470  003F16  5008               	movf	(??___xxtofl+3)^0,w,c
 12471  003F18  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 12472  003F1A  5009               	movf	___xxtofl@sign^0,w,c
 12473  003F1C  B4D8               	btfsc	status,2,c
 12474  003F1E  EF93  F01F         	goto	u6031
 12475  003F22  EF95  F01F         	goto	u6030
 12476  003F26                     u6031:
 12477  003F26  EF9D  F01F         	goto	l4833
 12478  003F2A                     u6030:
 12479  003F2A  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12480  003F2C  EF9C  F01F         	goto	u6040
 12481  003F30  EF9A  F01F         	goto	u6041
 12482  003F34                     u6041:
 12483  003F34  EF9D  F01F         	goto	l4833
 12484  003F38                     u6040:
 12485  003F38  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 12486  003F3A                     l4833:
 12487  003F3A  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 12488  003F3E  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 12489  003F42  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 12490  003F46  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 12491  003F4A                     l929:
 12492  003F4A  0012               	return		;funcret
 12493  003F4C                     __end_of___xxtofl:
 12494                           	callstack 0
 12495                           
 12496 ;; *************** function ___lwmod *****************
 12497 ;; Defined at:
 12498 ;;		line 7 in file "D:\Programs\Microship\xc8\v2.20\pic\sources\c99\common\lwmod.c"
 12499 ;; Parameters:    Size  Location     Type
 12500 ;;  dividend        2    0[COMRAM] unsigned int 
 12501 ;;  divisor         2    2[COMRAM] unsigned int 
 12502 ;; Auto vars:     Size  Location     Type
 12503 ;;  counter         1    4[COMRAM] unsigned char 
 12504 ;; Return value:  Size  Location     Type
 12505 ;;                  2    0[COMRAM] unsigned int 
 12506 ;; Registers used:
 12507 ;;		wreg, status,2, status,0
 12508 ;; Tracked objects:
 12509 ;;		On entry : 0/0
 12510 ;;		On exit  : 0/0
 12511 ;;		Unchanged: 0/0
 12512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12513 ;;      Params:         4       0       0       0       0       0       0
 12514 ;;      Locals:         1       0       0       0       0       0       0
 12515 ;;      Temps:          0       0       0       0       0       0       0
 12516 ;;      Totals:         5       0       0       0       0       0       0
 12517 ;;Total ram usage:        5 bytes
 12518 ;; Hardware stack levels used:    1
 12519 ;; This function calls:
 12520 ;;		Nothing
 12521 ;; This function is called by:
 12522 ;;		_encher_tanque
 12523 ;;		_esvaziar_tanque
 12524 ;; This function uses a non-reentrant model
 12525 ;;
 12526                           
 12527                           	psect	text44
 12528  004B8E                     __ptext44:
 12529                           	callstack 0
 12530  004B8E                     ___lwmod:
 12531                           	callstack 29
 12532  004B8E  5003               	movf	___lwmod@divisor^0,w,c
 12533  004B90  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
 12534  004B92  B4D8               	btfsc	status,2,c
 12535  004B94  EFCE  F025         	goto	u5921
 12536  004B98  EFD0  F025         	goto	u5920
 12537  004B9C                     u5921:
 12538  004B9C  EFF4  F025         	goto	l772
 12539  004BA0                     u5920:
 12540  004BA0  0E01               	movlw	1
 12541  004BA2  6E05               	movwf	___lwmod@counter^0,c
 12542  004BA4  EFD8  F025         	goto	l4781
 12543  004BA8                     l4779:
 12544  004BA8  90D8               	bcf	status,0,c
 12545  004BAA  3603               	rlcf	___lwmod@divisor^0,f,c
 12546  004BAC  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
 12547  004BAE  2A05               	incf	___lwmod@counter^0,f,c
 12548  004BB0                     l4781:
 12549  004BB0  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
 12550  004BB2  EFDD  F025         	goto	u5931
 12551  004BB6  EFDF  F025         	goto	u5930
 12552  004BBA                     u5931:
 12553  004BBA  EFD4  F025         	goto	l4779
 12554  004BBE                     u5930:
 12555  004BBE                     l4783:
 12556  004BBE  5003               	movf	___lwmod@divisor^0,w,c
 12557  004BC0  5C01               	subwf	___lwmod@dividend^0,w,c
 12558  004BC2  5004               	movf	(___lwmod@divisor+1)^0,w,c
 12559  004BC4  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
 12560  004BC6  A0D8               	btfss	status,0,c
 12561  004BC8  EFE8  F025         	goto	u5941
 12562  004BCC  EFEA  F025         	goto	u5940
 12563  004BD0                     u5941:
 12564  004BD0  EFEE  F025         	goto	l4787
 12565  004BD4                     u5940:
 12566  004BD4  5003               	movf	___lwmod@divisor^0,w,c
 12567  004BD6  5E01               	subwf	___lwmod@dividend^0,f,c
 12568  004BD8  5004               	movf	(___lwmod@divisor+1)^0,w,c
 12569  004BDA  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
 12570  004BDC                     l4787:
 12571  004BDC  90D8               	bcf	status,0,c
 12572  004BDE  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
 12573  004BE0  3203               	rrcf	___lwmod@divisor^0,f,c
 12574  004BE2  2E05               	decfsz	___lwmod@counter^0,f,c
 12575  004BE4  EFDF  F025         	goto	l4783
 12576  004BE8                     l772:
 12577  004BE8  C001  F001         	movff	___lwmod@dividend,?___lwmod
 12578  004BEC  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
 12579  004BF0  0012               	return		;funcret
 12580  004BF2                     __end_of___lwmod:
 12581                           	callstack 0
 12582                           
 12583                           	psect	rparam
 12584  0000                     
 12585                           	psect	idloc
 12586                           
 12587                           ;Config register IDLOC0 @ 0x200000
 12588                           ;	unspecified, using default values
 12589  200000                     	org	2097152
 12590  200000  FF                 	db	255
 12591                           
 12592                           ;Config register IDLOC1 @ 0x200001
 12593                           ;	unspecified, using default values
 12594  200001                     	org	2097153
 12595  200001  FF                 	db	255
 12596                           
 12597                           ;Config register IDLOC2 @ 0x200002
 12598                           ;	unspecified, using default values
 12599  200002                     	org	2097154
 12600  200002  FF                 	db	255
 12601                           
 12602                           ;Config register IDLOC3 @ 0x200003
 12603                           ;	unspecified, using default values
 12604  200003                     	org	2097155
 12605  200003  FF                 	db	255
 12606                           
 12607                           ;Config register IDLOC4 @ 0x200004
 12608                           ;	unspecified, using default values
 12609  200004                     	org	2097156
 12610  200004  FF                 	db	255
 12611                           
 12612                           ;Config register IDLOC5 @ 0x200005
 12613                           ;	unspecified, using default values
 12614  200005                     	org	2097157
 12615  200005  FF                 	db	255
 12616                           
 12617                           ;Config register IDLOC6 @ 0x200006
 12618                           ;	unspecified, using default values
 12619  200006                     	org	2097158
 12620  200006  FF                 	db	255
 12621                           
 12622                           ;Config register IDLOC7 @ 0x200007
 12623                           ;	unspecified, using default values
 12624  200007                     	org	2097159
 12625  200007  FF                 	db	255
 12626                           
 12627                           	psect	config
 12628                           
 12629                           ; Padding undefined space
 12630  300000                     	org	3145728
 12631  300000  FF                 	db	255
 12632                           
 12633                           ;Config register CONFIG1H @ 0x300001
 12634                           ;	Oscillator Selection bits
 12635                           ;	OSC = HS, HS oscillator
 12636                           ;	Fail-Safe Clock Monitor Enable bit
 12637                           ;	FCMEN = 0x0, unprogrammed default
 12638                           ;	Internal/External Oscillator Switchover bit
 12639                           ;	IESO = 0x0, unprogrammed default
 12640  300001                     	org	3145729
 12641  300001  02                 	db	2
 12642                           
 12643                           ;Config register CONFIG2L @ 0x300002
 12644                           ;	unspecified, using default values
 12645                           ;	Power-up Timer Enable bit
 12646                           ;	PWRT = 0x1, unprogrammed default
 12647                           ;	Brown-out Reset Enable bits
 12648                           ;	BOREN = 0x3, unprogrammed default
 12649                           ;	Brown Out Reset Voltage bits
 12650                           ;	BORV = 0x3, unprogrammed default
 12651  300002                     	org	3145730
 12652  300002  1F                 	db	31
 12653                           
 12654                           ;Config register CONFIG2H @ 0x300003
 12655                           ;	Watchdog Timer Enable bit
 12656                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 12657                           ;	Watchdog Timer Postscale Select bits
 12658                           ;	WDTPS = 1, 1:1
 12659  300003                     	org	3145731
 12660  300003  00                 	db	0
 12661                           
 12662                           ; Padding undefined space
 12663  300004                     	org	3145732
 12664  300004  FF                 	db	255
 12665                           
 12666                           ;Config register CONFIG3H @ 0x300005
 12667                           ;	unspecified, using default values
 12668                           ;	CCP2 MUX bit
 12669                           ;	CCP2MX = 0x1, unprogrammed default
 12670                           ;	PORTB A/D Enable bit
 12671                           ;	PBADEN = 0x1, unprogrammed default
 12672                           ;	Low-Power Timer1 Oscillator Enable bit
 12673                           ;	LPT1OSC = 0x0, unprogrammed default
 12674                           ;	MCLR Pin Enable bit
 12675                           ;	MCLRE = 0x1, unprogrammed default
 12676  300005                     	org	3145733
 12677  300005  83                 	db	131
 12678                           
 12679                           ;Config register CONFIG4L @ 0x300006
 12680                           ;	Stack Full/Underflow Reset Enable bit
 12681                           ;	STVREN = 0x1, unprogrammed default
 12682                           ;	Single-Supply ICSP Enable bit
 12683                           ;	LVP = OFF, Single-Supply ICSP disabled
 12684                           ;	Extended Instruction Set Enable bit
 12685                           ;	XINST = 0x0, unprogrammed default
 12686                           ;	Background Debugger Enable bit
 12687                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 12688  300006                     	org	3145734
 12689  300006  81                 	db	129
 12690                           
 12691                           ; Padding undefined space
 12692  300007                     	org	3145735
 12693  300007  FF                 	db	255
 12694                           
 12695                           ;Config register CONFIG5L @ 0x300008
 12696                           ;	unspecified, using default values
 12697                           ;	Code Protection bit
 12698                           ;	CP0 = 0x1, unprogrammed default
 12699                           ;	Code Protection bit
 12700                           ;	CP1 = 0x1, unprogrammed default
 12701                           ;	Code Protection bit
 12702                           ;	CP2 = 0x1, unprogrammed default
 12703                           ;	Code Protection bit
 12704                           ;	CP3 = 0x1, unprogrammed default
 12705  300008                     	org	3145736
 12706  300008  0F                 	db	15
 12707                           
 12708                           ;Config register CONFIG5H @ 0x300009
 12709                           ;	unspecified, using default values
 12710                           ;	Boot Block Code Protection bit
 12711                           ;	CPB = 0x1, unprogrammed default
 12712                           ;	Data EEPROM Code Protection bit
 12713                           ;	CPD = 0x1, unprogrammed default
 12714  300009                     	org	3145737
 12715  300009  C0                 	db	192
 12716                           
 12717                           ;Config register CONFIG6L @ 0x30000A
 12718                           ;	unspecified, using default values
 12719                           ;	Write Protection bit
 12720                           ;	WRT0 = 0x1, unprogrammed default
 12721                           ;	Write Protection bit
 12722                           ;	WRT1 = 0x1, unprogrammed default
 12723                           ;	Write Protection bit
 12724                           ;	WRT2 = 0x1, unprogrammed default
 12725                           ;	Write Protection bit
 12726                           ;	WRT3 = 0x1, unprogrammed default
 12727  30000A                     	org	3145738
 12728  30000A  0F                 	db	15
 12729                           
 12730                           ;Config register CONFIG6H @ 0x30000B
 12731                           ;	unspecified, using default values
 12732                           ;	Configuration Register Write Protection bit
 12733                           ;	WRTC = 0x1, unprogrammed default
 12734                           ;	Boot Block Write Protection bit
 12735                           ;	WRTB = 0x1, unprogrammed default
 12736                           ;	Data EEPROM Write Protection bit
 12737                           ;	WRTD = 0x1, unprogrammed default
 12738  30000B                     	org	3145739
 12739  30000B  E0                 	db	224
 12740                           
 12741                           ;Config register CONFIG7L @ 0x30000C
 12742                           ;	unspecified, using default values
 12743                           ;	Table Read Protection bit
 12744                           ;	EBTR0 = 0x1, unprogrammed default
 12745                           ;	Table Read Protection bit
 12746                           ;	EBTR1 = 0x1, unprogrammed default
 12747                           ;	Table Read Protection bit
 12748                           ;	EBTR2 = 0x1, unprogrammed default
 12749                           ;	Table Read Protection bit
 12750                           ;	EBTR3 = 0x1, unprogrammed default
 12751  30000C                     	org	3145740
 12752  30000C  0F                 	db	15
 12753                           
 12754                           ;Config register CONFIG7H @ 0x30000D
 12755                           ;	unspecified, using default values
 12756                           ;	Boot Block Table Read Protection bit
 12757                           ;	EBTRB = 0x1, unprogrammed default
 12758  30000D                     	org	3145741
 12759  30000D  40                 	db	64
 12760                           tosu	equ	0xFFF
 12761                           tosh	equ	0xFFE
 12762                           tosl	equ	0xFFD
 12763                           stkptr	equ	0xFFC
 12764                           pclatu	equ	0xFFB
 12765                           pclath	equ	0xFFA
 12766                           pcl	equ	0xFF9
 12767                           tblptru	equ	0xFF8
 12768                           tblptrh	equ	0xFF7
 12769                           tblptrl	equ	0xFF6
 12770                           tablat	equ	0xFF5
 12771                           prodh	equ	0xFF4
 12772                           prodl	equ	0xFF3
 12773                           indf0	equ	0xFEF
 12774                           postinc0	equ	0xFEE
 12775                           postdec0	equ	0xFED
 12776                           preinc0	equ	0xFEC
 12777                           plusw0	equ	0xFEB
 12778                           fsr0h	equ	0xFEA
 12779                           fsr0l	equ	0xFE9
 12780                           wreg	equ	0xFE8
 12781                           indf1	equ	0xFE7
 12782                           postinc1	equ	0xFE6
 12783                           postdec1	equ	0xFE5
 12784                           preinc1	equ	0xFE4
 12785                           plusw1	equ	0xFE3
 12786                           fsr1h	equ	0xFE2
 12787                           fsr1l	equ	0xFE1
 12788                           bsr	equ	0xFE0
 12789                           indf2	equ	0xFDF
 12790                           postinc2	equ	0xFDE
 12791                           postdec2	equ	0xFDD
 12792                           preinc2	equ	0xFDC
 12793                           plusw2	equ	0xFDB
 12794                           fsr2h	equ	0xFDA
 12795                           fsr2l	equ	0xFD9
 12796                           status	equ	0xFD8

Data Sizes:
    Strings     247
    Constant    4
    Data        50
    BSS         102
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    126     126
    BANK0           128    105     127
    BANK1           256     51     181
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_42(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_42(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_37(CODE[4]), STR_36(CODE[4]), STR_33(CODE[4]), STR_32(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_37(CODE[4]), STR_36(CODE[4]), STR_33(CODE[4]), STR_32(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> ver_quantidade@y(BANK0[8]), esvaziar_tanque@y(BANK1[8]), encher_tanque@y(BANK1[8]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_28(CODE[5]), STR_22(CODE[5]), STR_12(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_28(CODE[5]), STR_22(CODE[5]), STR_12(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_28(CODE[5]), STR_22(CODE[5]), STR_12(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_28(CODE[5]), STR_22(CODE[5]), STR_12(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 8
		 -> ver_quantidade@y(BANK0[8]), esvaziar_tanque@y(BANK1[8]), encher_tanque@y(BANK1[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S641_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 8
		 -> ver_quantidade@y(BANK0[8]), esvaziar_tanque@y(BANK1[8]), encher_tanque@y(BANK1[8]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> ver_quantidade@y(BANK0[8]), esvaziar_tanque@y(BANK1[8]), encher_tanque@y(BANK1[8]), 

    ver_quantidade@vol	PTR  size(2) Largest target is 4
		 -> volume(BANK0[4]), 

    esvaziar_tanque@vol	PTR  size(2) Largest target is 4
		 -> volume(BANK0[4]), 

    encher_tanque@vol	PTR  size(2) Largest target is 4
		 -> volume(BANK0[4]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_31(CODE[14]), STR_30(CODE[3]), STR_29(CODE[8]), ver_quantidade@y(BANK0[8]), 
		 -> STR_27(CODE[14]), STR_26(CODE[13]), STR_25(CODE[9]), STR_24(CODE[14]), 
		 -> STR_23(CODE[3]), esvaziar_tanque@y(BANK1[8]), STR_21(CODE[14]), STR_20(CODE[14]), 
		 -> STR_19(CODE[13]), STR_18(CODE[11]), STR_17(CODE[14]), STR_16(CODE[13]), 
		 -> STR_15(CODE[9]), STR_14(CODE[12]), STR_13(CODE[3]), encher_tanque@y(BANK1[8]), 
		 -> STR_11(CODE[14]), STR_10(CODE[16]), STR_9(CODE[13]), STR_8(CODE[11]), 
		 -> STR_7(CODE[14]), STR_6(CODE[10]), STR_5(CODE[15]), STR_4(CODE[15]), 
		 -> STR_3(CODE[14]), STR_2(CODE[11]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_encher_tanque
    _main->_esvaziar_tanque
    _main->_ver_quantidade
    _lcd_init->_lcd_cmd
    _tc_tecla->_atraso_ms
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___fltol->___flmul
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___flge->___fladd
    ___fldiv->___fladd
    _atoi->_isspace
    _pwmSet1->___lwdiv
    _lcd_str->_lcd_dat
    _lcd_dat->_atraso_ms
    _lcd_cmd->_atraso_ms

Critical Paths under _main in BANK0

    _main->_ver_quantidade
    _ver_quantidade->_sprintf
    _esvaziar_tanque->_sprintf
    _encher_tanque->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    _main->_encher_tanque
    _main->_esvaziar_tanque

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  219588
                                            102 BANK0      3     3      0
                          _atraso_ms
                      _encher_tanque
                    _esvaziar_tanque
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                           _tc_tecla
                     _ver_quantidade
 ---------------------------------------------------------------------------------
 (1) _ver_quantidade                                      12    10      2   53163
                                            124 COMRAM     2     0      2
                                             92 BANK0     10    10      0
                             ___fleq
                             ___flge
                            _lcd_cmd
                            _lcd_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    3816
                          _atraso_ms
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _esvaziar_tanque                                     57    55      2   77825
                                            124 COMRAM     2     0      2
                                             92 BANK0      4     4      0
                                              0 BANK1     51    51      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                            ___lwdiv
                            ___lwmod
                             ___wmul
                           ___xxtofl
                          _atraso_ms
                            _lcd_cmd
                            _lcd_dat
                            _lcd_str
                            _pwmInit
                            _pwmSet1
                            _sprintf
                           _tc_tecla
 ---------------------------------------------------------------------------------
 (1) _encher_tanque                                       57    55      2   74024
                                            124 COMRAM     2     0      2
                                             92 BANK0      4     4      0
                                              0 BANK1     51    51      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___fltol
                            ___lwdiv
                            ___lwmod
                             ___wmul
                           ___xxtofl
                          _atraso_ms
                            _lcd_cmd
                            _lcd_dat
                            _lcd_str
                            _pwmInit
                            _pwmSet1
                            _sprintf
                           _tc_tecla
 ---------------------------------------------------------------------------------
 (1) _tc_tecla                                             7     5      2    2478
                                              6 COMRAM     7     5      2
                          _atraso_ms
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   38057
                                             74 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   37396
                                            122 COMRAM     2     2      0
                                             68 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   37024
                                            112 COMRAM    10     4      6
                                             56 BANK0     12    12      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   31117
                                            100 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             80 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     533
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    3801
                                             55 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3022
                                             39 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2960
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    7174
                                             55 COMRAM    12     4      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8    1102
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2311
                                             55 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1760
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _pwmSet1                                              5     5      0    1780
                                              7 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     919
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     770
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _pwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lcd_str                                              5     3      2    4376
                                              7 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (3) _lcd_dat                                              1     1      0    1930
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0    1930
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (4) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _atraso_ms                                            6     4      2    1886
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1082
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     463
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atraso_ms
   _encher_tanque
     ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fleq
     ___flge
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___lwdiv
     ___lwmod
     ___wmul
     ___xxtofl
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_dat
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _pwmInit
     _pwmSet1
       ___lwdiv
       ___wmul
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
     _tc_tecla
       _atraso_ms
   _esvaziar_tanque
     ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fleq
     ___flge
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___flsub
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___lwdiv
     ___lwmod
     ___wmul
     ___xxtofl
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_dat
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _pwmInit
     _pwmSet1
       ___lwdiv
       ___wmul
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
     _tc_tecla
       _atraso_ms
   _lcd_cmd
     _atraso_ms
     _lcd_wr
   _lcd_init
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
   _lcd_str
     _lcd_dat
       _atraso_ms
       _lcd_wr
   _tc_tecla
     _atraso_ms
   _ver_quantidade
     ___fleq
     ___flge
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     33      B5       7       70.7%
BITBANK0            80      0       0       4        0.0%
BANK0               80     69      7F       5       99.2%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7E      7E       1       99.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B2      15        0.0%
DATA                 0      0     1B2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Jul 07 10:16:04 2020

             ___fldiv@aexp 0050  esvaziar_tanque@decremento 0180               ___fldiv@bexp 004F  
                        _i 00F1               ___fldiv@sign 0048                         l60 3C22  
                       l70 3CA0                         l63 3C78                         l65 3C60  
                       l58 3C38                         l75 3CE0                         l68 3CB8  
                       l85 3D96                         l88 4B28                         l97 5090  
             ___awdiv@sign 0006        ___wmul@multiplicand 0003             encher_tanque@i 0186  
           encher_tanque@y 016C                        l102 50A0                        l111 4D70  
                      l105 5056                        l108 502C                        l117 4A48  
                      l205 246C                        l127 4B8C                        l231 245C  
                      l181 1B8E                        l149 1B9E                        l237 245C  
                      l502 4876                        l271 507C                        l175 1B8E  
                      l265 31E8                        l530 49D0                        l515 4926  
                      l259 31E8                        l268 31F6                        l541 444E  
                      l536 4408                        l800 264A                        l545 4F6A  
                      l801 2610                        l902 35E2                        l816 2776  
                      l808 292C                        l568 434A                        l825 2846  
                      l841 4EB6                        l762 4AB4                        l826 2834  
                      l772 4BE8                        l940 3EE2                        l933 3E86  
                      l853 39BA                        l926 3DEE                        l855 381A  
                      l864 3860                        l929 3F4A                        l769 4ABC  
                      l866 38D8                        l858 37DE                        l779 4BF0  
                      l867 38C6                        l892 34B2                        l885 32BC  
                      l949 4E1E                        l894 352A                        l990 4734  
                      l895 3518                        l799 265C                        l889 3620  
                      l993 4776                        l995 47B2                        _pad 46EE  
             ___awmod@sign 0006                        wreg 000FE8            ?_ver_quantidade 007D  
          encher_tanque@t1 0184            encher_tanque@t2 0189               ___flmul@aexp 0020  
             ___flmul@bexp 0021                _tolower$925 000D               ___flmul@sign 001B  
             ___flmul@temp 0026               ___flmul@prod 0022       encher_tanque@numeros 0158  
             ___fltol@exp1 0031                       l1013 12AC                       l1110 2CE0  
                     l1031 0AEA                       l1103 2D96                       l1204 46EC  
                     l1212 4EFA                       l1116 4CAC                       l1221 4DCC  
                     l1117 4CB4                       l1127 454C                       l1215 50A2  
                     l1231 4622                       l1241 4D0C                       l1057 0E82  
                     l1227 4FD8                       l1156 40D2                       l1165 3BCC  
                     l1246 4D14                       l1175 4FA2                       l1183 4E70  
                     l1159 40DA                       l1168 3B10                       l4021 432A  
                     l4005 42D6                       l4101 3B34                       l1189 4F32  
                     l4023 433A                       l4015 42FE                       l4007 42E0  
                     l4103 3B70                       l4031 4712                       l4113 4F6C  
                     l4121 4E38                       l3401 2572                       l4017 430A  
                     l4009 42EA                       l4105 3B84                       l4041 4758  
                     l4033 4720                       l4201 0982                       l5001 1582  
                     l4123 4E66                       l3411 2586                       l3403 2576  
                     l4019 431A                       l4051 4470                       l4107 3BAC  
                     l4043 4786                       l4035 472C                       l4027 46EE  
                     l4211 0A52                       l4203 09B6                       l4131 0708  
                     l5011 15D4                       l5003 1588                       l4125 4E6A  
                     l4117 4E20                       l3501 27CA                       l3421 259A  
                     l3413 258A                       l3405 257A                       l4053 44AE  
                     l4061 44EE                       l4109 3BBC                       l3341 4636  
                     l4045 479A                       l4037 4740                       l4029 46FE  
                     l4301 0E9E                       l4221 0ABC                       l4205 09BC  
                     l4213 0A84                       l4141 075C                       l4133 0718  
                     l5101 1A1C                       l5021 16EC                       l5013 16C6  
                     l5005 1594                       l4119 4E24                       l3503 27D8  
                     l3511 27F6                       l3423 259E                       l3415 258E  
                     l3407 257E                       l3431 25AE                       l4063 4500  
                     l4055 44D6                       l3343 4648                       l4039 4754  
                     l4071 4D72                       l4311 0F44                       l4303 0F02  
                     l4223 0AC4                       l4215 0A94                       l4207 0A16  
                     l4151 07A2                       l4143 0764                       l4135 0726  
                     l5111 1B0C                       l5103 1A56                       l5031 1716  
                     l5023 16EE                       l5015 16DC                       l5007 1598  
                     l3601 3688                       l3505 27E0                       l3513 2804  
                     l3441 261E                       l3433 25B2                       l3425 25A2  
                     l3417 2592                       l3409 2582                       l3361 249A  
                     l3353 246E                       l4057 44E2                       l4049 4450  
                     l3345 4652                       l4073 4D82                       l4081 4CFE  
                     l4401 1200                       l4321 0F80                       l4305 0F12  
                     l4313 0F4C                       l4241 0B74                       l4233 0B08  
                     l4225 0ADE                       l4217 0A98                       l4209 0A4A  
                     l4161 07DE                       l4153 07AA                       l4145 0776  
                     l4137 072E                       l4129 06FE                       l5113 1B14  
                     l5105 1A90                       l5041 176A                       l5033 172E  
                     l5025 1706                       l5017 16E4                       l5009 15B4  
                     l5201 1E50                       l5121 1BA0                       l3611 36B4  
                     l3603 368E                       l3523 2856                       l3531 28AC  
                     l3515 2808                       l3507 27E4                       l3451 2648  
                     l3443 262A                       l3435 25DC                       l3427 25A6  
                     l3419 2596                       l3371 24D4                       l3363 24AA  
                     l3355 247A                       l4067 4544                       l4091 3A46  
                     l3347 4670                       l3339 4624                       l4075 4CB6  
                     l4411 1250                       l4403 1210                       l4331 0FAC  
                     l4323 0F86                       l4315 0F5E                       l4307 0F24  
                     l4251 0BB2                       l4235 0B1A                       l4243 0B78  
                     l4219 0AAA                       l4227 0AF6                       l4171 085A  
                     l4155 07AE                       l4147 0784                       l4139 0752  
                     l5115 1B4E                       l5107 1A98                       l5051 179E  
                     l5043 1770                       l5035 173A                       l5027 1712  
                     l5019 16EA                       l5211 1EA2                       l5203 1E56  
                     l5131 1BDA                       l5123 1BAC                       l3701 3960  
                     l3621 36EE                       l3613 36C4                       l3605 3694  
                     l3541 28FE                       l3533 28BC                       l3525 2862  
                     l3517 2816                       l3509 27F4                       l3461 269E  
                     l3453 266A                       l3445 262E                       l3437 25F8  
                     l3429 25AA                       l3381 2502                       l3373 24DA  
                     l3365 24BA                       l3357 2488                       l4093 3A54  
                     l4085 39BC                       l3349 46A6                       l4421 128C  
                     l4413 1262                       l4405 1216                       l4325 0F92  
                     l4317 0F6C                       l4333 0FB2                       l4341 0FE0  
                     l4309 0F36                       l4261 0C00                       l4253 0BB6  
                     l4245 0B80                       l4237 0B36                       l4173 0864  
                     l4165 0814                       l4157 07B2                       l4149 0796  
                     l5117 1B88                       l5109 1AD2                       l5061 17BC  
                     l5053 17B0                       l5045 177C                       l5037 1750  
                     l5029 1714                       l5301 22EA                       l5221 1FBA  
                     l5213 1F94                       l5205 1E62                       l5141 1C02  
                     l5133 1BE2                       l5125 1BB8                       l4503 4B66  
                     l4511 4B72                       l4431 3F64                       l3711 39AE  
                     l3703 397A                       l3623 3704                       l3615 36D4  
                     l3607 36A2                       l3551 291C                       l3543 2904  
                     l3535 28CC                       l3527 2870                       l3519 282C  
                     l3471 26D8                       l3463 26AC                       l3455 267A  
                     l3447 263C                       l3439 2608                       l3391 2536  
                     l3383 2504                       l3375 24EC                       l3367 24BC  
                     l3359 248A                       l4087 39DC                       l4079 4CEC  
                     l4415 126E                       l4407 121C                       l4351 1096  
                     l4343 1038                       l4335 0FC4                       l4327 0FA2  
                     l4319 0F7C                       l4271 0C98                       l4255 0BC8  
                     l4263 0C08                       l4247 0B92                       l4239 0B6C  
                     l4183 08E8                       l4167 0826                       l4159 07B8  
                     l5119 1B9C                       l5063 17C2                       l5055 17B6  
                     l5039 1758                       l5047 1786                       l5071 17E6  
                     l5311 23DA                       l5303 2324                       l5231 1FE4  
                     l5223 1FBC                       l5215 1FAA                       l5207 1E66  
                     l5151 1C62                       l5135 1BE6                       l5127 1BCA  
                     l4513 4B76                       l4433 3F68                       l3713 39B0  
                     l3705 3996                       l3641 3758                       l3625 3714  
                     l3633 3734                       l3617 36D6                       l3609 36A4  
                     l3801 347A                       l3721 31F8                       l3545 2906  
                     l3537 28EC                       l3529 28AA                       l3481 2744  
                     l3473 26DA                       l3465 26BA                       l3449 263E  
                     l3385 2514                       l3393 253E                       l3377 24EE  
                     l3369 24C4                       l4097 3AC4                       l4089 3A32  
                     l3561 4EDA                       l4417 1276                       l4361 10E6  
                     l4353 10B2                       l4345 106C                       l4337 0FD6  
                     l4329 0FA6                       l4281 0D7C                       l4273 0CF0  
                     l4265 0C10                       l4257 0BD6                       l4249 0BA4  
                     l4185 08FA                       l4169 0842                       l4177 088C  
                     l4601 2D84                       l4521 2960                       l5081 18A0  
                     l5073 17EA                       l5065 17C8                       l5057 17B8  
                     l5049 178A                       l5313 23E2                       l5305 235E  
                     l5241 2038                       l5233 1FFC                       l5225 1FD4  
                     l5217 1FB2                       l5209 1E82                       l5161 1CC6  
                     l5153 1C9A                       l5137 1BF8                       l5129 1BD0  
                     l5321 40DC                       l4507 4B6C                       l4515 509C  
                     l4611 500E                       l4451 401E                       l4443 3FC4  
                     l4435 3F84                       l4427 3F4C                       l3707 399A  
                     l3651 37AA                       l3643 3772                       l3635 3744  
                     l3627 371C                       l3619 36DE                       l3811 34D0  
                     l3803 3498                       l3731 3234                       l3723 3204  
                     l3547 290C                       l3539 28F0                       l3491 279C  
                     l3483 2746                       l3475 26E4                       l3467 26C6  
                     l3459 268E                       l3395 254E                       l3387 2524  
                     l3379 24F4                       l4099 3B00                       l3555 4EB8  
                     l3563 4FA4                       l4419 1286                       l4371 1128  
                     l4363 10F6                       l4355 10C4                       l4347 1074  
                     l4339 0FDA                       l4291 0E16                       l4283 0DAE  
                     l4275 0D24                       l4267 0C20                       l4259 0BEE  
                     l4187 0916                       l4179 08B2                       l4195 0932  
                     l4531 29B0                       l4523 2972                       l5091 195E  
                     l5083 18A8                       l5075 1824                       l5067 17D4  
                     l5059 17BA                       l5315 241C                       l5307 2366  
                     l5251 206C                       l5243 203E                       l5235 2008  
                     l5227 1FE0                       l5219 1FB8                       l5171 1D3E  
                     l5163 1CCC                       l5147 1C18                       l5139 1BFC  
                     l5155 1C9E                       l5331 4108                       l5323 40EC  
                     l4613 5010                       l4621 4A4A                       l4461 40A4  
                     l4445 3FDA                       l4437 3FBA                       l4429 3F60  
                     l3901 4878                       l3709 39A8                       l3661 3806  
                     l3653 37BA                       l3645 3782                       l3637 3744  
                     l3629 3720                       l3821 353A                       l3813 34D4  
                     l3805 34A2                       l3741 3266                       l3733 3244  
                     l3725 3212                       l3549 291A                       l3485 2756  
                     l3469 26CA                       l3477 26EA                       l3397 2560  
                     l3389 2534                       l3557 4EC4                       l3565 4FB0  
                     l3573 4EFC                       l4381 1158                       l4373 1136  
                     l4365 1108                       l4357 10D2                       l4349 1078  
                     l4293 0E4A                       l4285 0DC4                       l4269 0C34  
                     l4277 0D2A                       l4197 094C                       l4533 29D4  
                     l4525 2976                       l4517 292E                       l4701 3C6E  
                     l5093 1998                       l5085 18E2                       l5077 182C  
                     l5069 17DA                       l5317 2456                       l5309 23A0  
                     l5261 208A                       l5253 207E                       l5245 204A  
                     l5237 201E                       l5229 1FE2                       l5181 1DE6  
                     l5173 1D50                       l5165 1CDA                       l5157 1CB2  
                     l5149 1C2A                       l5341 4132                       l5333 410E  
                     l5325 40F0                       ?_pad 0011                       l4615 501C  
                     l4607 5006                       l4631 4A82                       l4623 4A52  
                     l4463 40B6                       l4455 4054                       l4447 3FE2  
                     l4439 3FBE                       l3911 48A4                       l3903 487C  
                     l3671 3846                       l3663 3808                       l3655 37CE  
                     l3647 3792                       l3591 364E                       l3583 3622  
                     l3831 359C                       l3823 3546                       l3815 34E2  
                     l3807 34B0                       l3751 32A6                       l3743 3274  
                     l3735 324A                       l3727 3214                       l3495 27B0  
                     l3479 2710                       l3487 2766                       l3399 256E  
                     l3559 4ED6                       l3567 4FB4                       l4391 11BA  
                     l4383 117E                       l4375 113E                       l4367 1110  
                     l4359 10E2                       l4295 0E5A                       l4287 0DF6  
                     l4279 0D48                       l4471 4578                       l4551 2AFA  
                     l4543 2A84                       l4535 2A0E                       l4527 299A  
                     l4519 2952                       l4711 3CC6                       l4703 3C86  
                     l5095 19A0                       l5087 191C                       l5079 1866  
                     l5319 246A                       l5263 2090                       l5255 2084  
                     l5239 2026                       l5247 2054                       l5191 1E22  
                     l5183 1DF2                       l5271 20B4                       l5167 1D26  
                     l5175 1D56                       l5159 1CBA                       l5351 4162  
                     l5343 413E                       l5335 411A                       l5327 40F6  
                     l4617 501E                       l4609 5008                       l4641 4AAE  
                     l4633 4A88                       l4625 4A64                       l3577 5058  
                     l5425 4008                       l4449 3FEA                       l3921 48DC  
                     l3913 48AC                       l3905 488A                       l3681 3882  
                     l3673 3850                       l3665 3818                       l3657 37DC  
                     l3649 37A2                       l3593 365E                       l3585 362E  
                     l3841 3604                       l3833 35B0                       l3825 3554  
                     l3817 3510                       l3809 34C2                       l3761 32F0  
                     l3753 32AC                       l3745 3276                       l3737 325A  
                     l3729 3224                       l3497 27BA                       l3489 278C  
                     l3569 4FCC                       l4393 11D4                       l4385 119A  
                     l4377 1146                       l4369 1120                       l4297 0E6E  
                     l4289 0E06                       l4481 45C6                       l4561 2B72  
                     l4553 2B0A                       l4537 2A2E                       l4529 29A2  
                     l4545 2A96                       l4721 3D0A                       l4713 3CD2  
                     l4705 3C92                       l5097 19DA                       l5089 1924  
                     l5281 216E                       l5273 20B8                       l5265 2096  
                     l5257 2086                       l5249 2058                       l5193 1E34  
                     l5185 1DFE                       l5177 1DAC                       l5169 1D32  
                     l5361 418C                       l5353 4168                       l5345 4144  
                     l5337 4126                       l5329 40FC                       l4811 3E70  
                     l4803 3E28                       l4491 4B36                       l4651 5030  
                     l4619 502A                       l4635 4A9E                       l4627 4A6C  
                     l3579 5074                       l4459 4092                       l3931 4916  
                     l3923 48F2                       l3915 48BE                       l3907 4892  
                     l3691 38F4                       l3683 3890                       l3675 385E  
                     l3667 382A                       l3659 37E8                       l3595 366E  
                     l3587 363C                       l3843 3606                       l3835 35CA  
                     l3827 357E                       l3771 3340                       l3763 32FC  
                     l3755 32CC                       l3747 3286                       l3739 3260  
                     l3499 27C8                       l3851 4E72                       l4395 11DA  
                     l4387 11A2                       l4379 1152                       l4299 0E7A  
                     l4483 45D8                       l4475 4584                       l4563 2BA2  
                     l4555 2B3C                       l4547 2AB8                       l4539 2A3C  
                     l4643 4C54                       l4731 3D46                       l4723 3D0C  
                     l5099 1A14                       l5291 222C                       l5283 2176  
                     l5275 20F2                       l5267 20A2                       l5259 2088  
                     l5195 1E38                       l5187 1E08                       l5179 1DDA  
                     l5371 41B6                       l5363 4190                       l5355 416E  
                     l5347 4150                       l5339 412C                       l4821 3EF0  
                     l4813 3E7C                       l4805 3E30                       l4493 4B3A  
                     l4661 5048                       l4653 5032                       l4637 4AA6  
                     l4629 4A74                       l3861 47C6                       l3933 491E  
                     l3925 48FA                       l3917 48C6                       l3909 4896  
                     l3693 3902                       l3685 38BE                       l3669 3840  
                     l3677 3870                       l3597 3670                       l3589 363E  
                     l3941 4966                       l3837 35E6                       l3845 360C  
                     l3829 3582                       l3781 3382                       l3773 334C  
                     l3765 3306                       l3757 32DC                       l3749 3296  
                     l3853 4E82                       l4397 11EC                       l4389 11A8  
                     l4485 4600                       l4477 4592                       l4469 454E  
                     l4573 2C6A                       l4557 2B4E                       l4549 2AC8  
                     l4645 4C5C                       l4741 3D8C                       l4733 3D58  
                     l4717 3CEE                       l4709 3CAE                       l4725 3D1C  
                     l5293 2266                       l5285 21B0                       l5277 20FA  
                     l5269 20A8                       l5197 1E3E                       l5189 1E10  
                     l4901 306E                       l5373 41C8                       l5365 4194  
                     l5357 417A                       l5349 415C                       l4831 3F38  
                     l4823 3EF2                       l4815 3EB8                       l4807 3E3C  
                     l4663 5054                       l4655 5038                       l4671 4A0C  
                     l4639 4AA8                       l4751 4AFA                       l3871 47EC  
                     l3863 47CE                       l3927 4900                       l3919 48CE  
                     l3695 392C                       l3679 387E                       l3599 3678  
                     l3943 4994                       l3847 3610                       l3839 35F6  
                     l3791 33E4                       l3783 338E                       l3775 3358  
                     l3767 331C                       l4399 11F8                       l4479 45AA  
                     l4575 2C7C                       l4583 2CF4                       l4559 2B64  
                     l4567 2BCE                       l4647 4C6A                       l4743 3D90  
                     l4735 3D68                       l4727 3D28                       l4719 3CF8  
                     l5295 226E                       l5287 21EA                       l5279 2134  
                     l5199 1E44                       l4911 312C                       l4903 3076  
                     l5391 4226                       l5383 41FC                       l5367 41A6  
                     l5359 4180                       l4833 3F3A                       l4825 3EF6  
                     l4817 3EC4                       l4809 3E6E                       l4497 4B4E  
                     l4489 4B2A                       l4657 503A                       l4665 49D2  
                     l4761 5086                       l4753 4B02                       l3881 4824  
                     l3873 47F4                       l3865 47D2                       l3857 47B4  
                     l3929 4906                       l3689 38E8                       l3697 3930  
                     l3945 49A4                       l3937 4928                       l3961 43C8  
                     l3953 434C                       l3793 33F0                       l3785 339E  
                     l3777 3366                       l3769 3328                       l4585 2D18  
                     l4593 2D46                       l4577 2CB0                       l4569 2BFC  
                     l4649 4C90                       l4737 3D78                       l4729 3D30  
                     l4673 3BCE                       l4921 12AE                       l5297 22A8  
                     l5289 21F2                       l4841 4D26                       l4913 3166  
                     l4905 30B0                       l5393 4232                       l5385 4210  
                     l5377 41D8                       l5369 41AA                       l4827 3F1A  
                     l4819 3ED2                       l4499 4B52                       l4659 5046  
                     l4667 49DA                       l4755 4B1A                       l4747 4AC0  
                     l3891 4850                       l3883 482A                       l3875 4806  
                     l3867 47E0                       l3859 47B8                       l3699 394A  
                     l3947 49C8                       l3939 4956                       l3971 444C  
                     l3963 43D6                       l3955 437A                       l3795 340C  
                     l3787 33B8                       l3779 3372                       l4595 2D54  
                     l4587 2D26                       l4771 4E0C                       l4763 4DCE  
                     l4739 3D7A                       l4683 3BE6                       l4675 3BDA  
                     l4931 12E8                       l4923 12BA                       l5299 22E2  
                     l4915 316E                       l4907 30EA                       l4851 2DDE  
                     l4843 2D98                       l5379 41EC                       l4781 4BB0  
                     l4829 3F2A                       l4669 4A0A                       l4757 507E  
                     l4749 4ADE                       l3885 4840                       l3877 480E  
                     l3893 4856                       l3869 47E8                       l3949 49CE  
                     l3965 43E8                       l3957 438A                       l3797 3436  
                     l3789 33C8                       l4589 2D3A                       l4765 4DE0  
                     l4693 3C30                       l4685 3BFA                       l4677 3BE2  
                     l4941 1310                       l4933 12F0                       l4925 12C6  
                     l4837 4D16                       l4917 31A8                       l4909 30F2  
                     l4861 2E0E                       l4853 2DEA                       l4845 2DC6  
                     l5389 4220                       l4783 4BBE                       l4775 4B8E  
                     l4791 3D9A                       l4759 5082                       l3895 4866  
                     l3887 4848                       l3879 4816                       l3967 43F6  
                     l3959 43B8                       l3799 346C                       l3975 4F34  
                     l3991 429A                       l3983 4246                       l4599 2D60  
                     l4767 4DE8                       l4695 3C46                       l4687 3C08  
                     l4951 1370                       l4935 12F4                       l4927 12D8  
                     l4839 4D1A                       l4919 31E2                       l4871 2E24  
                     l4855 2DF6                       l4847 2DCC                       l4785 4BD4  
                     l4777 4BA0                       l4793 3DAA                       l3897 486E  
                     l3889 484A                       l3969 4446                       l3977 4F4A  
                     l3993 429C                       l3985 425C                       l4769 4DF0  
                     l4697 3C52                       l4689 3C14                       l4961 13D4  
                     l4953 13A8                       l4937 1306                       l4929 12DE  
                     l4881 2EC0                       l4873 2E40                       l4857 2DFC  
                     l4849 2DD2                       l4787 4BDC                       l4779 4BA8  
                     l4795 3DB8                       l3979 4F5A                       l3995 42AC  
                     l4971 1470                       l4963 13DA                       l4947 1326  
                     l4939 130A                       l4955 13AC                       l4891 2F7E  
                     l4883 2EFA                       l4875 2E44                       l4867 2E18  
                     l4859 2E08                       l4789 4BE2                       l4797 3DFE  
                     l3997 42B0                       l3989 4270                       l4981 1518  
                     l4973 1482                       l4965 13E8                       l4957 13C0  
                     l4949 1338                       l4893 2FB8                       l4885 2F02  
                     l4877 2E7E                       l4869 2E1E                       l4799 3E14  
                     l3999 42BE                       l4991 1554                       l4983 1524  
                     l4967 1458                       l4975 1488                       l4959 13C8  
                     l4895 2FF2                       l4887 2F3C                       l4879 2E86  
                     l4993 1566                       l4985 1530                       l4977 14DE  
                     l4969 1464                       l4897 2FFA                       l4889 2F76  
                     l4995 156A                       l4987 153A                       l4979 150C  
                     l4899 3034                       l4997 1570                       l4989 1542  
                     l4999 1576                       STR_1 0605                       STR_2 06BB  
                     STR_3 067C                       STR_4 0635                       STR_5 0626  
                     STR_6 06C6                       STR_7 066E                       STR_8 06B0  
                     STR_9 0697                       u4000 387E                       u4001 387A  
                     u4010 3890                       u4011 388C                       u4020 38BE  
                     u4100 3224                       u4021 38BA                       u4101 3220  
                     u4030 38D4                       u4110 3234                       u4031 38D0  
                     u4111 3230                       u4040 38E8                       u4200 34E2  
                     u4120 3274                       u3400 4648                       u5000 0A84  
                     u4041 38E4                       u4201 34DE                       u4121 3270  
                     u3401 4644                       u5001 0A80                       u4050 3902  
                     u4210 3510                       u4130 3286                       u3410 4670  
                     u5010 0AAA                       u4051 38FE                       u4211 350C  
                     u4131 3282                       u3411 466C                       u5011 0AA6  
                     u4300 4806                       u4060 394A                       u4220 3526  
                     u4140 3296                       u3500 2560                       u3420 46A6  
                     u5100 0BB2                       u5020 0ABC                       u4301 4802  
                     u4061 3946                       u4221 3522                       u4141 3292  
                     u3501 255C                       u3421 46A2                       u5101 0BAE  
                     u5021 0AB8                       u4310 4824                       u4070 397A  
                     u4230 353A                       u4150 32CC                       u3510 256E  
                     u3430 2488                       u5110 0BC8                       u5030 0ADE  
                     u4311 4820                       u4071 3976                       u4231 3536  
                     u4151 32C8                       u3511 256A                       u3431 2484  
                     u5111 0BC4                       u5031 0ADA                       u6000 3ED2  
                     u4320 4840                       u4080 39A8                       u4400 4956  
                     u4240 3554                       u4160 32DC                       u3600 26AC  
                     u3520 25DC                       u3440 249A                       u5200 0F24  
                     u5120 0BD6                       u5040 0B04                       u6001 3ECE  
                     u4321 483C                       u4081 39A4                       u4401 4952  
                     u4241 3550                       u4161 32D8                       u3601 26A8  
                     u3521 25D8                       u3441 2496                       u5201 0F20  
                     u5121 0BD2                       u5041 0B00                       u6010 3EE2  
                     u4330 4866                       u4410 4994                       u4250 359C  
                     u4170 3456                       u4090 3212                       u3610 26BA  
                     u3530 25F4                       u3450 24AA                       u5210 0F36  
                     u5130 0C00                       u5050 0B1A                       u6011 3EDE  
                     u4331 4862                       u4411 4990                       u4251 3598  
                     u4091 320E                       u3611 26B6                       u3531 25EE  
                     u3451 24A6                       u5211 0F32                       u5131 0BFC  
                     u5051 0B16                       u6020 3EF0                       u4340 488A  
                     u4420 49C8                       u4260 35CA                       u4180 34B0  
                     u3700 2804                       u3620 26D8                       u3540 25F6  
                     u3460 24EC                       u4500 4290                       u5300 1108  
                     u5220 0F44                       u5140 0D48                       u5060 0B36  
                     u6100 2F76                       u6021 3EEC                       u4341 4886  
                     u4421 49C4                       u4261 35C6                       u4181 34AC  
                     u3701 2800                       u3621 26D4                       u3461 24E8  
                     u5301 1104                       u5221 0F40                       u5141 0D44  
                     u5061 0B32                       u6101 2F72                       u6030 3F2A  
                     u4350 48A4                       u4430 437A                       u4270 3604  
                     u4190 34D0                       u3710 2816                       u3630 2710  
                     u3550 261E                       u3470 2502                       u4510 42BE  
                     u3390 4636                       u5310 1136                       u5230 0F5E  
                     u5150 0DAE                       u5070 0B6C                       u6110 2FB8  
                     u6031 3F26                       u4351 48A0                       u4431 4376  
                     u4271 3600                       u4191 34CC                       u4175 344C  
                     u3711 2812                       u3631 270C                       u3551 261A  
                     u3471 24FE                       u4511 42BA                       u3391 4632  
                     u5311 1132                       u5231 0F5A                       u5151 0DAA  
                     u5071 0B68                       u6111 2FB4                       u6040 3F38  
                     u5400 3FD6                       u4280 47C6                       u4360 48BE  
                     u4440 43B8                       u3800 28FE                       u3720 282C  
                     u3640 2756                       u3560 263C                       u3480 2514  
                     u4520 42D2                       u4600 4490                       u5320 11BA  
                     u5240 0F6C                       u5160 0DF6                       u5080 0B92  
                     u6200 31E2                       u6120 2FF2                       u6041 3F34  
                     u5401 3FD2                       u4281 47C2                       u4361 48BA  
                     u4441 43B4                       u3801 28FA                       u3721 2828  
                     u3641 2752                       u3561 2638                       u3481 2510  
                     u4521 42CE                       u4505 4286                       u5321 11B6  
                     u5241 0F68                       u5161 0DF2                       u5081 0B8E  
                     u6201 31DE                       u6121 2FEE                       u5410 408C  
                     u4290 47E0                       u4370 48DC                       u4450 43D6  
                     u3810 291A                       u3730 2842                       u3650 278C  
                     u3570 265C                       u3490 2524                       u4530 42FA  
                     u4610 44AE                       u5330 11D4                       u5250 0FC4  
                     u5170 0E06                       u5090 0BA4                       u6210 31F6  
                     u6130 3034                       u6050 2E40                       u5411 4086  
                     u4291 47DC                       u4371 48D8                       u4451 43D2  
                     u3811 2916                       u3731 283E                       u3651 2788  
                     u3571 2658                       u3491 2520                       u4531 42F6  
                     u4611 44AA                       u5331 11D0                       u5251 0FC0  
                     u5171 0E02                       u5091 0BA0                       u6211 31F2  
                     u6131 3030                       u6051 2E3C                       u5500 4B4A  
                     u5420 408E                       u4380 48F2                       u3900 36B4  
                     u4460 43F6                       u3740 2856                       u3660 279C  
                     u3580 266A                       u4540 431A                       u4620 44D6  
                     u3820 4EFA                       u4700 4CE8                       u5340 11EC  
                     u5260 1096                       u5180 0E6E                       u6300 179E  
                     u6220 1322                       u6140 306E                       u6060 2E7E  
                     u5501 4B46                       u4381 48EE                       u3901 36B0  
                     u4461 43F2                       u3741 2852                       u3661 2798  
                     u3581 2666                       u4541 4316                       u4621 44D2  
                     u4605 4486                       u3821 4EF6                       u5341 11E8  
                     u5261 1092                       u5181 0E6A                       u6301 179A  
                     u6221 131E                       u6141 306A                       u6061 2E7A  
                     u5510 4B62                       u5430 40A4                       u4390 4916  
                     u3910 36C4                       u4470 4446                       u3750 2870  
                     u3670 27C8                       u3590 267A                       u4550 432A  
                     u4630 4500                       u3830 4FCC                       u4710 4CFE  
                     u5350 124A                       u5270 10B2                       u5190 0F12  
                     u6310 17B0                       u6230 1338                       u6150 30B0  
                     u6070 2EC0                       u5511 4B5E                       u5431 40A0  
                     u4391 4912                       u3911 36C0                       u4471 4442  
                     u3751 286C                       u3671 27C4                       u3591 2676  
                     u4551 4326                       u4631 44FC                       u3831 4FC8  
                     u4711 4CFA                       u5351 1244                       u5271 10AE  
                     u5191 0F0E                       u6311 17AC                       u6231 1334  
                     u6151 30AC                       u6071 2EBC                       u5520 4B8C  
                     u5440 40B6                       u3920 3704                       u4480 4F4A  
                     u3760 28AA                       u3680 27D8                       u4800 3B70  
                     u4720 3A04                       u4560 46FE                       u3840 4F2C  
                     u5360 124C                       u5280 10C4                       u5600 2B0A  
                     u6400 1A14                       u6320 1824                       u6240 13C0  
                     u6160 30EA                       u6080 2EFA                       u5521 4B88  
                     u5441 40B2                       u3921 3700                       u4481 4F46  
                     u3761 28A6                       u3681 27D4                       u4801 3B6C  
                     u4561 46FA                       u3841 4F26                       u5281 10C0  
                     u5601 2B06                       u6401 1A10                       u6321 1820  
                     u6241 13BC                       u6161 30E6                       u6081 2EF6  
                     u3930 3744                       u3770 28BC                       u3690 27F4  
                     u4490 425C                       u4650 453A                       u4810 3BAC  
                     u4730 3A32                       u4570 4720                       u3850 4F2E  
                     u5370 1262                       u5290 10D2                       u5450 4578  
                     u5610 2B4E                       u5530 2952                       u6410 1A56  
                     u6330 1866                       u6250 1458                       u6170 312C  
                     u6090 2F3C                       u3931 3740                       u3771 28B8  
                     u3691 27F0                       u4491 4258                       u4651 4534  
                     u4811 3BA8                       u4731 3A2E                       u4571 471C  
                     u5371 125E                       u5291 10CE                       u5451 4574  
                     u5611 2B4A                       u5531 294E                       u6411 1A52  
                     u6331 1862                       u6251 1454                       u6171 3128  
                     u6091 2F38                       u4820 4F9C                       u5380 3F84  
                     u3940 37BA                       u3860 363C                       u3780 28CC  
                     u4660 453C                       u4740 3A54                       u4580 4776  
                     u4900 07DE                       u5460 45AA                       u5620 2BFC  
                     u5540 299A                       u5700 4CAC                       u6420 1A90  
                     u6340 18A0                       u6500 1CB2                       u6180 3166  
                     u4821 4F96                       u5381 3F80                       u3941 37B6  
                     u3861 3638                       u3781 28C8                       u4645 4512  
                     u4741 3A50                       u4725 39FA                       u4581 4772  
                     u4901 07DA                       u5461 45A6                       u5621 2BF8  
                     u5541 2996                       u5701 4CA8                       u6421 1A8C  
                     u6341 189C                       u6261 155E                       u6501 1CAE  
                     u6181 3162                       u5710 4A06                       u4830 4F9E  
                     u5390 3FBA                       u3950 37DC                       u3870 364E  
                     u3790 28EC                       u4590 4786                       u4670 4DBA  
                     u4910 080C                       u5470 45C6                       u5630 2C62  
                     u5550 29D4                       u6430 1AD2                       u6350 18E2  
                     u6270 16DC                       u6510 1D26                       u6190 31A8  
                     u5391 3FB6                       u3951 37D8                       u3871 364A  
                     u3791 28E8                       u4591 4782                       u4911 0806  
                     u5471 45C2                       u5631 2C5C                       u5551 29D0  
                     u6431 1ACE                       u6351 18DE                       u6271 16D8  
                     u6511 1D22                       u6191 31A4                       u5720 4A38  
                     u4840 4E38                       u3960 3806                       u3880 365E  
                     u4760 3AC0                       u4680 4DCC                       u4920 080E  
                     u5480 45D8                       u5640 2C64                       u5560 2A7C  
                     u5800 3C86                       u6440 1B0C                       u6360 191C  
                     u6280 1750                       u6600 216E                       u4841 4E34  
                     u3961 3802                       u3881 365A                       u4761 3ABC  
                     u4681 4DC8                       u5481 45D4                       u5561 2A76  
                     u5801 3C82                       u6441 1B08                       u6361 1918  
                     u6281 174C                       u6601 216A                       u6521 1E2C  
                     u5730 4A48                       u4850 4E66                       u3970 382A  
                     u3890 36A2                       u4770 3AE4                       u4690 4CE6  
                     u4930 0826                       u5490 4600                       u5650 2C7C  
                     u5570 2A7E                       u5810 3CA0                       u6450 1B4E  
                     u6370 195E                       u6290 176A                       u6610 21B0  
                     u6530 1FAA                       u5731 4A44                       u4851 4E62  
                     u3971 3826                       u3891 369E                       u4755 3A68  
                     u4691 4CE0                       u4931 0822                       u5491 45FC  
                     u5651 2C78                       u5811 3C9C                       u6451 1B4A  
                     u6371 195A                       u6291 1766                       u6611 21AC  
                     u6531 1FA6                       u3980 3840                       u4780 3B00  
                     u4756 3A72                       u4940 08B2                       u4860 0726  
                     u5660 2D18                       u5580 2A96                       u5900 3D78  
                     u5820 3CAE                       u5740 3C08                       u6460 1B88  
                     u6380 1998                       u6700 23DA                       u6620 21EA  
                     u6540 201E                       u5717 49FC                       u3981 383C  
                     u4781 3AFC                       u4757 3A82                       u4677 4DB0  
                     u4941 08AE                       u4861 0722                       u5661 2D14  
                     u5581 2A92                       u5901 3D74                       u5821 3CAA  
                     u5741 3C04                       u6461 1B84                       u6381 1994  
                     u6701 23D6                       u6621 21E6                       u6541 201A  
                     u5670 4A64                       u3990 385E                       u4790 3B54  
                     u4950 08E0                       u4870 0776                       u5590 2AC8  
                     u5910 3D8C                       u5830 3CC6                       u5750 3C22  
                     u6470 1B9C                       u6390 19DA                       u6710 241C  
                     u6630 222C                       u6550 2038                       u5727 4A2E  
                     u5671 4A60                       u3991 385A                       u4775 3ADA  
                     u4951 08DA                       u4871 0772                       u5591 2AC4  
                     u5911 3D88                       u5831 3CC2                       u5751 3C1E  
                     u6471 1B98                       u6391 19D6                       u6711 2418  
                     u6631 2228                       u6551 2034                       u5920 4BA0  
                     u5680 4A82                       u4960 08E2                       u4880 0784  
                     u5840 3CE0                       u5760 3C30                       u6720 2456  
                     u6640 2266                       u6560 206C                       u6480 1C14  
                     u5921 4B9C                       u5681 4A7E                       u4881 0780  
                     u5841 3CDC                       u5761 3C2C                       u6721 2452  
                     u6641 2262                       u6561 2068                       u6481 1C10  
                     u5930 4BBE                       u5690 4A9E                       u4970 08FA  
                     u4890 0796                       u5850 3CEE                       u5770 3C46  
                     u6730 246A                       u6650 22A8                       u6570 207E  
                     u6490 1C2A                       u5931 4BBA                       u5691 4A9A  
                     u4795 3B4A                       u4971 08F6                       u4891 0792  
                     u5851 3CEA                       u5771 3C42                       u6731 2466  
                     u6651 22A4                       u6571 207A                       u6491 1C26  
                     u5940 4BD4                       u4980 097E                       u5860 3D1C  
                     u5780 3C60                       u6660 22E2                       u6580 20F2  
                     u6740 41C8                       u5941 4BD0                       u4981 097A  
                     u5861 3D18                       u5781 3C5C                       u6661 22DE  
                     u6581 20EE                       u6741 41C4                       u5950 3DAA  
                     u4990 0A12                       u5870 3D46                       u5790 3C6E  
                     u6670 2324                       u6590 2134                       u6750 41EC  
                     u5951 3DA6                       u4991 0A0E                       u5871 3D42  
                     u5791 3C6A                       u6671 2320                       u6591 2130  
                     u6751 41E8                       u5960 3DB8                       u5880 3D58  
                     u6680 235E                       u6760 4210                       u5961 3DB4  
                     u5881 3D54                       u6681 235A                       u6761 420C  
                     u5970 3E14                       u5890 3D68                       u6690 23A0  
                     u5971 3E10                       u5891 3D64                       u6691 239C  
                     u5980 3E6A                       u5981 3E66                       u5990 3EB4  
                     u5991 3EB0                       _dbuf 0108                       _atoi 3F4C  
                     _main 40DC                       _prec 00ED                       _nout 00E9  
                     pad@i 0018                       pad@p 0015                       fsr0h 000FEA  
                     fsr1h 000FE2                       indf0 000FEF                       fsr2h 000FDA  
                     fsr0l 000FE9                       indf2 000FDF                       fsr1l 000FE1  
                     pad@w 001A                       fsr2l 000FD9              ___fpclassifyf 4450  
          ??_encher_tanque 00DC                       prodh 000FF4                       prodl 000FF3  
                     start 0000            ___fldiv@new_exp 0049           encher_tanque@num 017A  
         encher_tanque@tmp 0188           encher_tanque@vol 007D               ___param_bank 000000  
    encher_tanque@porcento 0174      encher_tanque@potencia 017E                      ??_pad 0017  
            ___fltol@sign1 0030                      ?_atoi 0008            __end_of___fladd 292E  
                    ?_main 0001            __end_of___fldiv 39BC            __end_of___awdiv 4878  
          __end_of___flneg 4F6C                      STR_10 0616                      STR_11 0660  
                    STR_12 06E1                      STR_20 0652                      STR_21 0660  
                    STR_13 06F9                      STR_30 06F9                      STR_22 06E1  
                    STR_14 06A4                      STR_23 06F9                      STR_31 0660  
                    STR_15 06D0                      STR_40 06F6                      STR_32 06E6  
                    STR_16 068A                      STR_24 0644                      STR_25 06D0  
                    STR_17 0660                      STR_33 06EE                      STR_18 06B0  
                    STR_26 068A                      STR_42 06F6                      STR_19 0697  
                    STR_27 0660                      STR_28 06E1                      STR_36 06EA  
          __end_of___awmod 4928                      STR_37 06F2                      STR_29 06D9  
          __end_of___flmul 3622            __end_of___flsub 4EB8            __end_of___fltol 434C  
          ___awdiv@divisor 0003   __size_of_esvaziar_tanque 08CE            __end_of___lwdiv 4ABE  
          __end_of___lwmod 4BF2            ___awdiv@counter 0005               vfpfcnvrt@fmt 0073  
         esvaziar_tanque@i 0186           esvaziar_tanque@y 016C            __end_of_lcd_dat 502E  
          __end_of_lcd_cmd 5058            __end_of_lcd_str 4A4A                      _flags 00EF  
                    _linha 0601                      _fputc 4624                      _fputs 4EB8  
          __end_of_isdigit 4FA4                      atoi@n 0015                      pad@fp 0011  
                    atoi@s 0008                      _width 00EB                      _putch 50A2  
          __end_of_isspace 4E72            __end_of_isupper 4F34                      tablat 000FF5  
          __end_of_pwmSet1 4B2A            __end_of_pwmInit 5092          encher_tanque@F356 019F  
                    plusw1 000FE3                      plusw2 000FDB                      status 000FD8  
          __end_of_sprintf 4E20             ?___fpclassifyf 0001            __end_of_tolower 4D16  
          __end_of_strncmp 4624            __initialization 4BF2               __end_of_atoi 40DC  
             __end_of_main 4246                     ??_atoi 000A                     ??_main 007F  
            __activetblptr 000002            tc_tecla@timeout 0007                     ?_fputc 0001  
                   ?_fputs 000A           ___awdiv@dividend 0001                     ?_putch 0001  
         __end_of___xxtofl 3F4C          esvaziar_tanque@t1 0184          esvaziar_tanque@t2 0189  
  encher_tanque@incremento 0180     esvaziar_tanque@numeros 0158               vfprintf@cfmt 007B  
         __end_of_lcd_init 4D72                     ___flge 434C                     ___fleq 4928  
                ??___fladd 0030                     ___wmul 5058                  ??___fldiv 0040  
                ??___awdiv 0005                  ??___flneg 0005                  ??___awmod 0005  
                ??___flmul 0017                  ??___flsub 0040                  ??___fltol 002C  
                   _efgtoa 06FE                  ??___lwdiv 0005                  ??___lwmod 0005  
                   _lcd_wr 509A                     _atraso 01B3                     _floorf 39BC  
                   clear_0 4C38                     clear_1 4C44           ___awdiv@quotient 0007  
          ___awmod@divisor 0003            ___awmod@counter 0005                     pad@buf 0013  
                ??_lcd_dat 0007                  ??_lcd_cmd 0007           __end_of_tc_tecla 3D98  
                   _strcpy 4D72                     _strlen 4FA4                     _volume 00F3  
                ??_lcd_str 000A                     fputc@c 0001                     fputs@c 000E  
                   fputs@i 000F                     fputs@s 000A                  ??_isdigit 0003  
          ___fpclassifyf@e 0009            ___fpclassifyf@u 000B            ___fpclassifyf@x 0001  
             __mediumconst 0000                  ??_isspace 0003                     tblptrh 000FF7  
                ??_isupper 0003                     tblptrl 000FF6                     tblptru 000FF8  
                ??_pwmSet1 0008                  ??_pwmInit 0001                     putch@c 0001  
         __end_of_vfprintf 4CB6                  ??_sprintf 007D          ??_esvaziar_tanque 00DC  
                ??_tolower 0009                  ??_strncmp 0007                 ___flge@ff1 0038  
               ___flge@ff2 003C            ??___fpclassifyf 0005               ___xxtofl@arg 000B  
       encher_tanque@i_146 0178               ___xxtofl@exp 000A               ___xxtofl@val 0001  
               ___fleq@ff1 0001                 ___fleq@ff2 0005                 __accesstop 0080  
  __end_of__initialization 4C4A                 ___flneg@f1 0001              ___rparam_used 000001  
       encher_tanque@tempo 0182                 ___fltol@f1 0028             __pcstackCOMRAM 0001  
             __pidataBANK0 5092               __pidataBANK1 4FDA              __end_of_linha 0605  
            __end_of_fputc 46EE              __end_of_fputs 4EFC              __end_of_putch 50A4  
         ??_ver_quantidade 007F                    ??_fputc 0005                    ??_fputs 000E  
       __size_of_atraso_ms 0064                    ??_putch 0001                 __pbssBANK0 00E9  
               __pbssBANK1 0100                tc_tecla@ret 000C                tc_tecla@tmp 000B  
               _efgtoa$772 0088                 _efgtoa$766 0084                 _efgtoa$767 0086  
               _efgtoa$776 008A                 _efgtoa$777 008C                 _efgtoa$778 008E  
                  ?___flge 0038                    ?___fleq 0001                    ?___wmul 0001  
                  ?_efgtoa 0065                    ?_lcd_wr 0001                    ?_floorf 0051  
                  ?_strcpy 0001                    ?_strlen 0001                  ?___xxtofl 0001  
       __size_of_vfpfcnvrt 046A                  ?_lcd_init 0001                 _atraso_min 00F7  
       esvaziar_tanque@num 017A         esvaziar_tanque@tmp 0188         esvaziar_tanque@vol 007D  
                ?_tc_tecla 0007    esvaziar_tanque@porcento 0174    esvaziar_tanque@potencia 017E  
                  __Hparam 0000                    __Lparam 0000      __end_of_encher_tanque 1BA0  
          __size_of___flge 0104            __size_of___fleq 00AA                    ___fladd 246E  
                  ___fldiv 3622                    ___awdiv 47B4                    ___flneg 4F34  
                  ___awmod 4878                    ___flmul 31F8                    ___flsub 4E72  
                  ___fltol 4246            __size_of___wmul 0026                    ___lwdiv 4A4A  
                  ___lwmod 4B8E                  ?_vfprintf 00C4          __end_of_atraso_ms 4B8E  
             __psmallconst 0600            __size_of_efgtoa 0BB0            __size_of_lcd_wr 0008  
          __size_of_floorf 0212                    __pcinit 4BF2                    __ramtop 0600  
                  __ptext0 40DC                    __ptext1 2D98                    __ptext2 4D16  
                  __ptext3 1BA0                    __ptext4 12AE                    __ptext5 3BCE  
                  __ptext6 4DCE                    __ptext7 4C54                    __ptext8 292E  
                  __ptext9 454E                    _lcd_dat 5004                    _lcd_cmd 502E  
                  _lcd_str 49D2            __size_of_strcpy 005C            __size_of_strlen 0036  
             __size_of_pad 00C6                    _isdigit 4F6C                 ??___xxtofl 0005  
         ___awmod@dividend 0001                    _isspace 4E20                    _isupper 4EFC  
                  efgtoa@c 006B                    efgtoa@d 0098                    efgtoa@e 00B0  
                  efgtoa@f 0067                    efgtoa@g 00AC                    efgtoa@h 00A2  
                  efgtoa@i 00AA                    efgtoa@l 00A6                    efgtoa@m 0094  
                  efgtoa@n 00B2                    efgtoa@p 009C                    efgtoa@t 0090  
                  efgtoa@u 00B4                    efgtoa@w 009F                    _pwmSet1 4ABE  
                  _pwmInit 507E                    atoi@neg 000E                    _sprintf 4DCE  
                  _tolower 4CB6                    main@opt 00E7                    main@tmp 00E6  
               ??_lcd_init 0008                    _strncmp 454E       end_of_initialization 4C4A  
                  floorf@e 005F                    floorf@m 005B                    floorf@u 0061  
                  floorf@x 0051                    fputc@fp 0003              __Lmediumconst 0000  
                  fputs@fp 000C                 ??_tc_tecla 0009          __end_of_vfpfcnvrt 2D98  
               efgtoa@mode 00A1                 efgtoa@sign 009A                    postdec1 000FE5  
                  postdec2 000FDD                    postinc0 000FEE                    postinc1 000FE6  
                  postinc2 000FDE                 ??_vfprintf 007B                    strcpy@d 0009  
                  strlen@a 0003                    strcpy@s 0007                    strlen@s 0001  
          _esvaziar_tanque 1BA0                ___fladd@grs 0037              ___xxtofl@sign 0009  
               lcd_dat@val 0007                 lcd_cmd@val 0007                ___fldiv@grs 004B  
              ___fldiv@rem 0044                ___flmul@grs 001C                 lcd_str@str 0008  
     esvaziar_tanque@i_181 0178             __end_of___flge 4450             __end_of___fleq 49D2  
               atraso_ms@i 0003                 atraso_ms@j 0005                 atraso_ms@k 0006  
               atraso_ms@t 0001                vfpfcnvrt@ap 0075                vfpfcnvrt@ct 00C0  
              vfpfcnvrt@fp 0071             __end_of___wmul 507E       esvaziar_tanque@tempo 0182  
           __end_of_efgtoa 12AE             __end_of_lcd_wr 50A2             __end_of_floorf 3BCE  
               floorf@F524 0100             __end_of_strcpy 4DCE             __end_of_strlen 4FDA  
      start_initialization 4BF2                __end_of_pad 47B4      __end_of___fpclassifyf 454E  
              vfprintf@fmt 00C6    __end_of_esvaziar_tanque 246E                   ??___flge 0040  
                 ??___fleq 0009                   ??___wmul 0005                   ??_efgtoa 006C  
                 ??_lcd_wr 0001                __pdataBANK0 00F7                __pdataBANK1 018B  
                 ??_floorf 0055                   ??_strcpy 0005                   ??_strlen 0003  
                ___fladd@a 002C                  ___fladd@b 0028                  ___fldiv@a 003C  
                ___fldiv@b 0038                  ___flmul@a 0013                  ___flmul@b 000F  
                ___flsub@a 003C                  ___flsub@b 0038              __pcstackBANK0 0080  
            __pcstackBANK1 0158          __size_of___xxtofl 01B4          __size_of_lcd_init 005C  
               tc_tecla@to 0009           ___lwdiv@dividend 0001          __size_of_tc_tecla 01CA  
                 ?___fladd 0028                   ?___fldiv 0038                   ?___awdiv 0001  
                 ?___flneg 0001                   ?___awmod 0001                   ?___flmul 000F  
                 ?___flsub 0038                   ?___fltol 0028                   ?___lwdiv 0001  
                 ?___lwmod 0001                   ?_lcd_dat 0001                   ?_lcd_cmd 0001  
        __size_of_vfprintf 0062                   ?_lcd_str 0008                  _atrasoMed 00FB  
                _atrasoMax 00F9                  _atrasoMin 00FD                  _atraso_ms 4B2A  
              __smallconst 0600                   ?_isdigit 0001            ver_quantidade@i 00E4  
          ver_quantidade@y 00DC                   ?_isspace 0001                   ?_isupper 0001  
                 ?_pwmSet1 0001                   ?_pwmInit 0001           ___lwdiv@quotient 0005  
                 ?_sprintf 00CA                   ?_tolower 0007    __size_of_ver_quantidade 0460  
           __size_of_fputc 00CA             __size_of_fputs 0044                   ?_strncmp 0001  
           __size_of_putch 0002             ___wmul@product 0005           ?_esvaziar_tanque 007D  
               pwmSet1@val 000B                  _vfpfcnvrt 292E          ___wmul@multiplier 0001  
               ?_atraso_ms 0001                  lcd_wr@val 0001        esvaziar_tanque@F356 018B  
   __size_of_encher_tanque 08F2                 vfpfcnvrt@c 00C3                 vfpfcnvrt@f 00BC  
                copy_data0 4C06                  copy_data1 4C26          ver_quantidade@vol 007D  
                 __Hrparam 0000                 vfprintf@ap 00C8                   __Lrparam 0000  
               vfprintf@fp 00C4           __size_of___fladd 04C0           __size_of___fldiv 039A  
         __size_of___awdiv 00C4           __size_of___flneg 0038           __size_of___awmod 00B0  
         __size_of___flmul 042A           __size_of___flsub 0046           __size_of___fltol 0106  
               ?_vfpfcnvrt 0071           __size_of___lwdiv 0074           __size_of___lwmod 0064  
          pwmSet1@porcento 000A         ___fpclassifyf@F463 0104           __size_of_lcd_dat 002A  
         __size_of_lcd_cmd 002A                 sprintf@fmt 00CC           __size_of_lcd_str 0078  
                 ___xxtofl 3D98                   _atoi$830 0010                   _atoi$831 0014  
                 _atoi$832 0012                  tc_tecla@i 000D           __size_of_isdigit 0038  
          ___lwdiv@divisor 0003           __size_of_isspace 0052            ___lwdiv@counter 0007  
                 __ptext10 06FE                   __ptext11 4CB6                   __ptext20 4450  
                 __ptext12 4EFC                   __ptext21 4246                   __ptext13 4D72  
                 __ptext30 47B4                   __ptext22 4E72                   __ptext14 46EE  
                 __ptext31 3F4C                   __ptext23 246E                   __ptext15 4FA4  
                 __ptext40 502E                   __ptext32 4E20                   __ptext24 4F34  
                 __ptext16 4EB8                   __ptext41 509A                   __ptext33 4F6C  
                 __ptext25 31F8                   __ptext17 4624                   __ptext42 4B2A  
                 __ptext34 4ABE                   __ptext26 434C                   __ptext18 50A2  
                 __ptext43 3D98                   __ptext35 5058                   __ptext27 4928  
                 __ptext19 39BC                   __ptext44 4B8E                   __ptext36 4A4A  
                 __ptext28 3622                   __ptext37 507E                   __ptext29 4878  
                 __ptext38 49D2                   __ptext39 5004           __size_of_isupper 0038  
         __size_of_pwmSet1 006C           __size_of_pwmInit 0014                   _lcd_init 4D16  
         __size_of_sprintf 0052           __size_of_tolower 0060                 strcpy@dest 0001  
         __size_of_strncmp 00D6              __size_of_atoi 0190              __size_of_main 016A  
                 _tc_tecla 3BCE                   efgtoa@fp 0065                   efgtoa@ne 0096  
                 efgtoa@pp 0092                   efgtoa@ou 0080              _encher_tanque 12AE  
                 _vfprintf 4C54                   lcd_str@i 000C                _isspace$861 0007  
              ??_atraso_ms 0003                   isdigit@c 0001             _ver_quantidade 2D98  
                sprintf@ap 00D4           ___lwmod@dividend 0001                   isspace@c 0001  
                strcpy@src 0003                   isupper@c 0001                  strncmp@_l 0001  
                strncmp@_r 0003             ?_encher_tanque 007D                efgtoa@nmode 009E  
              ??_vfpfcnvrt 0077              _vfpfcnvrt$792 00B8              _vfpfcnvrt$796 00BA  
                 sprintf@f 00D6                   tolower@c 0007                   sprintf@s 00CA  
   __size_of___fpclassifyf 00FE            ___lwmod@divisor 0003            ___lwmod@counter 0005  
   __end_of_ver_quantidade 31F8                   strncmp@l 0008                   strncmp@n 0005  
                 strncmp@r 000A              ___fladd@signs 0034               ___fladd@aexp 0035  
             ___fladd@bexp 0036  
